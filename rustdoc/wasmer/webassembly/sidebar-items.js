initSidebarItems({"enum":[["InstanceABI",""]],"fn":[["compile","The webassembly::compile() function compiles a webassembly::Module from WebAssembly binary code.  This function is useful if it is necessary to a compile a module before it can be instantiated (otherwise, the webassembly::instantiate() function should be used). Params: * `buffer_source`: A `Vec<u8>` containing the   binary code of the .wasm module you want to compile. Errors: If the operation fails, the Result rejects with a webassembly::CompileError."],["compile_with_config_with","The same as `compile_with_config` but takes a `Compiler` for the purpose of changing the backend."],["instantiate","The webassembly::instantiate() function allows you to compile and instantiate WebAssembly code Params: * `buffer_source`: A `Vec<u8>` containing the   binary code of the .wasm module you want to compile. * `import_object`: An object containing the values to be imported   into the newly-created Instance, such as functions or   webassembly::Memory objects. There must be one matching property   for each declared import of the compiled module or else a   webassembly::LinkError is thrown. Errors: If the operation fails, the Result rejects with a webassembly::CompileError, webassembly::LinkError, or webassembly::RuntimeError, depending on the cause of the failure."],["instantiate_streaming","The webassembly::instantiate_streaming() function compiles and instantiates a WebAssembly module directly from a streamed underlying source. This is the most efficient, optimized way to load wasm code."]],"struct":[["ResultObject",""]]});