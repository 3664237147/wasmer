var N=null,E="",T="t",U="u",searchIndex={};
var R=["UnicodeXID","demangle","trydemangleerror","result","try_from","try_into","borrow","borrow_mut","type_id","typeid","formatter","Demangle","TryDemangleError","lazy_static","scopeguard","into_inner","should_run","deref_mut","Strategy","ScopeGuard","Iterate over all keys in order.","Unwrap a packed `Some` value or panic.","cranelift_entity","option","itermut","is_empty","listpool","is_valid","Get the element at `k` if it exists.","Is this map completely empty?","Iterate over all the keys and values in this map.","iter_mut","Iterate over all the keys and values in this map, mutable…","Iterate over all the keys in this map.","Iterate over all the values in this map.","values_mut","Iterate over all the values in this map, mutable edition.","Create a new empty map.","Check if `k` is a valid key in the map.","get_mut","Get the element at `k` if it exists, mutable version.","Get the total number of entity references created.","Remove all entries from this map.","Returns the last element that was inserted in the map.","as_slice","into_iter","to_owned","clone_into","cranelift_entity::packed_option","packedoption","ordering","index_mut","next_back","size_hint","boxedslice","ReservedValue","PackedOption","BoxedSlice","ListPool","EntityList","SecondaryMap","PrimaryMap","EntitySet","SparseMap","EntityRef","SparseMapValue","Convenience function for creating a new pixel The order of…","new_alpha","Blue first","brightness level","16-bit BGR in machine's native endian","16-bit gray in machine's native endian","map_alpha","grayalpha","as_mut_slice","The components interpreted as raw bytes, in machine's…","rgb::alt","partial_cmp","add_assign","sub_assign","mul_assign","from_iter","intoiterator","default","as_bytes","as_bytes_mut","Iterate over color components (R, G, and B)","Iterate over all components (length=4)","Copy RGB components out of the RGBA struct","Provide a mutable view of only RGB components (leaving out…","Create new RGBA with the same alpha value, but different…","Create a new RGBA with the new alpha value, but same RGB…","Create a new RGBA with a new alpha value created by the…","GrayAlpha","AsPixels","FromSlice","ComponentSlice","ComponentBytes","ComponentMap","The requisite parameters for testing for approximate…","The left-hand side of the approximate equality comparison.","The right-hand side of the approximate equality comparison.","The tolerance to use when testing values that are close…","max_relative","relative","Replace the epsilon value with the one specified.","Peform the equality comparison","Peform the inequality comparison","relative_eq","relative_ne","Predicate for testing the approximate equality of two…","Predicate for testing the approximate inequality of two…","For use by `ToTokens` implementations.","to_string","to_tokens","with_capacity","smallvec","Constructs a new `SmallVec` on the stack from an `A`…","reserve_exact","shrink_to_fit","swap_remove","from_slice","extend_from_slice","rangefrom","rangefull","ExtendFromSlice","constant_time_eq","unreachable","ResultVoidExt","ResultVoidErrExt","from_bytes","slice_from_bytes","slice_from_bytes_len","from_mut_bytes","slice_from_mut_bytes","slice_from_mut_bytes_len","copy_from_bytes","Allows use of a value pointed to by `&mut T` as though it…","take_or_recover","Takes a `(T, Hole<'c, 'm, T, F>)` from an `&'m mut T`.","ppv_lite86","Generate only the basic implementations necessary to be…","ppv_lite86::x86_64","instance","vec128_storage","vec256_storage","vec512_storage","RotateEachWord32","RotateEachWord64","UnsafeFrom","LaneWords4","MultiLane","StoreBytes","SseMachine","Avx2Machine","fromhexerror","FromHexError","description","Returns the character's displayed width in columns, or…","width_cjk","Returns the string's displayed width in columns.","UnicodeWidthChar","UnicodeWidthStr","UNICODE_VERSION","Apply the function `f` on the value in the `Left` variant…","Apply the function `f` on the value in the `Right` variant…","Returns left value or computes it from a closure","Factor out a homogeneous type from an either of pairs.","An iterator over the substrings of a string which, after…","View the underlying data (the part yet to be iterated) as…","graphemeincomplete","graphemes","Returns an iterator over substrings of `self` separated on…","Returns an iterator over substrings of `self`, split on…","graphemeindices","graphemecursor","uwordbounds","uwordboundindices","unicodesentences","usentencebounds","usentenceboundindices","GraphemeIncomplete","GraphemeIndices","Graphemes","GraphemeCursor","UWordBoundIndices","UWordBounds","UnicodeSegmentation","UnicodeWords","USentenceBounds","USentenceBoundIndices","UnicodeSentences","StrSimError","wasmparser","wasmparser::ParserState","SourceMappingURL","Function","wasmparser::Operator","relative_depth","local_index","global_index","init_expr","table_index","validatingparserconfig","Test whether the given buffer contains a valid WebAssembly…","operatorvalidatorconfig","binaryreader","current_position","localsreader","operatorsreader","original_position","codesectionreader","get_count","functionbody","datasectionreader","elementitemsreader","elementsectionreader","exportsectionreader","functionsectionreader","globalsectionreader","importsectionreader","get_binary_reader","get_operators_reader","linkingsectionreader","linkingtype","memorysectionreader","memorytype","typesectionreader","tablesectionreader","namesectionreader","producerssectionreader","relocsectionreader","modulereader","operator","producersfieldvaluesreader","producersfield","tabletype","wasmmoduleresources","parserinput","parserstate","ensure_end","push_input","create_binary_reader","Creates a BinaryReader when current state is…","read_with_input","last_state","sectioncode","functype","customsectionkind","typeorfunctype","Reads content of the code section.","LocalName","RelocEntry","BinaryReaderError","FuncType","GlobalType","MemoryImmediate","MemoryType","ResizableLimits","TableType","ValidatingParserConfig","OperatorValidatorConfig","ProducersField","ProducersFieldValue","NameEntry","ParserInput","ParserState","CustomSectionKind","ExternalKind","ImportSectionEntryType","LinkingType","RelocType","SectionCode","TypeOrFuncType","ElementKind","BinaryReader","FunctionBody","LocalsReader","CodeSectionReader","DataSectionReader","ElementItems","ElementItemsReader","ElementSectionReader","ExportSectionReader","FunctionSectionReader","GlobalSectionReader","ImportSectionReader","LinkingSectionReader","MemorySectionReader","ModuleReader","NamingReader","NameSectionReader","OperatorsReader","ProducersSectionReader","RelocSectionReader","SectionIterator","SectionIteratorLimited","TableSectionReader","TypeSectionReader","ValidatingParser","ValidatingOperatorParser","WasmDecoder","WasmModuleResources","SectionReader","SectionWithLimitedItems","An iterator over the values of a map.","IntoIter","Returns an iterator visiting all values in ascending order…","Returns an iterator visiting all key-value pairs in…","Returns the number of elements in the map.","Returns a reference to the value corresponding to the key.","contains_key","Returns a mutable reference to the value corresponding to…","Retains only the elements specified by the predicate.","VacantEntry","OccupiedEntry","ValuesMut","A colour is one specific type of ANSI escape code, and can…","Colour #0 (foreground code `30`, background code `40`).","Colour #1 (foreground code `31`, background code `41`).","Colour #2 (foreground code `32`, background code `42`).","Colour #3 (foreground code `33`, background code `43`).","Colour #4 (foreground code `34`, background code `44`).","Colour #5 (foreground code `35`, background code `45`).","Colour #6 (foreground code `36`, background code `46`).","Colour #7 (foreground code `37`, background code `47`).","A colour number from 0 to 255, for use in 256-colour…","A 24-bit RGB color, as specified by ISO-8613-3.","Returns a `Style` with the hidden property set.","Returns a `Style` with the bold property set.","Returns a `Style` with the dimmed property set.","Returns a `Style` with the italic property set.","underline","Returns a `Style` with the underline property set.","Returns a `Style` with the blink property set.","Returns a `Style` with the reverse property set.","strikethrough","Returns a `Style` with the background colour property set.","Paints the given text with this colour, returning an ANSI…","ansigenericstring","ANSIStrings","ANSIByteStrings","ANSIGenericStrings","ANSIGenericString","ANSIString","ANSIByteString","The span of this class.","regex_syntax::ast","regex_syntax::ast::ErrorKind","original","Assertion","A single zero-width assertion.","Repetition","A grouped regular expression.","Alternation","An alternation of regular expressions.","A concatenation of regular expressions.","A Unicode character class, e.g., `\\pL` or `\\p{Greek}`.","A perl character class, e.g., `\\d` or `\\W`.","Bracketed","A bracketed character class set, which may contain zero or…","CaptureName","ParserBuilder","A builder for a regular expression parser.","parserbuilder","withcomments","classsetitem","classsetbinaryop","position","classasciikind","regex_syntax","ClassUnicode","ErrorKind","WordBoundary","A set of characters represented by Unicode scalar values.","StartLine","StartText","Unicode","GroupKind","CaptureIndex","NonCapturing","regex_syntax::hir","RepetitionKind","The kind of a repetition operator.","ZeroOrOne","ZeroOrMore","OneOrMore","RepetitionRange","Executes an implementation of `Visitor` in constant stack…","Literal","literals","Create a new printer.","Print the given `Ast` to the given writer. The writer must…","translatorbuilder","translator","translate","All implementors of `Visitor` must provide a `finish`…","visit_pre","visit_post","visit_alternation_in","Return the type of this error.","errorkind","The original pattern string in which this error occurred.","Return the span at which this error occurred.","literal","repetition","Return true if and only if this HIR is required to match…","Return true if and only if this HIR contains any…","is_always_utf8","classunicode","case_fold_simple","classunicoderange","Create a new class from a sequence of ranges.","classbytes","Create a new class with no ranges.","Add a new range to this set.","Return an iterator over all ranges in this class.","Return the underlying ranges as a slice.","Expand this character class such that it contains all case…","intersect","difference","symmetric_difference","classbytesrange","Return the start of this range.","Return the end of this range.","is_negated","is_match_empty","Create a new parser builder with a default configuration.","Build a parser from this configuration with the given…","nest_limit","Set the nesting limit for this parser.","Whether to support octal syntax or not.","allow_invalid_utf8","ignore_whitespace","Enable verbose mode in the regular expression.","case_insensitive","multi_line","dot_matches_new_line","swap_greed","Enable or disable the Unicode flag (`u`) by default.","Create a new parser with a default configuration.","regex_syntax::ast::parse","regex_syntax::ast::print","regex_syntax::hir::literal","regex_syntax::hir::print","regex_syntax::hir::translate","regex_syntax::utf8","alternation","classsetunion","flagsitem","wordboundary","groupkind","repetitionkind","repetitionrange","literalkind","specialliteralkind","hexliteralkind","classperl","classperlkind","classascii","classunicodekind","classunicodeopkind","classbracketed","classset","classsetrange","classsetbinaryopkind","assertion","assertionkind","repetitionop","capturename","setflags","flagsitemkind","utf8sequence","utf8range","This method is called before beginning traversal of the AST.","This method is called on an `Ast` before descending into…","This method is called on an `Ast` after descending all of…","This method is called between child nodes of an…","visit_class_set_item_pre","This method is called on every `ClassSetItem` before…","visit_class_set_item_post","This method is called on every `ClassSetItem` after…","visit_class_set_binary_op_pre","This method is called on every `ClassSetBinaryOp` before…","visit_class_set_binary_op_post","This method is called on every `ClassSetBinaryOp` after…","visit_class_set_binary_op_in","This method is called between the left hand and right hand…","This method is called before beginning traversal of the HIR.","This method is called on an `Hir` before descending into…","This method is called on an `Hir` after descending all of…","This method is called between child nodes of an alternation.","WithComments","ClassPerl","ClassAscii","ClassBracketed","ClassSetRange","ClassSetUnion","ClassSetBinaryOp","RepetitionOp","FlagsItem","LiteralKind","SpecialLiteralKind","HexLiteralKind","ClassPerlKind","ClassAsciiKind","ClassUnicodeKind","ClassUnicodeOpKind","ClassSetItem","ClassSetBinaryOpKind","AssertionKind","FlagsItemKind","TranslatorBuilder","Translator","ClassUnicodeRange","ClassBytes","ClassBytesRange","Utf8Range","Utf8Sequence","Utf8Sequences","ClassUnicodeIter","ClassBytesIter","Marker type which indicates that the Guard type for a lock…","mutexguard","Attempts to acquire this lock until a timeout is reached.","mappedmutexguard","Temporarily unlocks the mutex to execute the given function.","Makes a new `MappedMutexGuard` for a component of the…","Attempts to make a new `MappedMutexGuard` for a component…","unlock_fair","Unlocks the mutex using a fair unlock protocol.","Consumes this mutex, returning the underlying data.","Attempts to acquire this lock.","reentrantmutexguard","Returns a mutable reference to the underlying data.","force_unlock","Forcibly unlocks the mutex.","Returns the underlying raw mutex object.","force_unlock_fair","try_lock_for","try_lock_until","reentrantmutex","mappedreentrantmutexguard","unlocked_fair","Temporarily yields the mutex to a waiting thread if there…","Makes a new `MappedReentrantMutexGuard` for a component of…","Attempts to make a new `MappedReentrantMutexGuard` for a…","rwlockreadguard","rwlockwriteguard","Attempts to acquire this `RwLock` with shared read access…","Attempts to acquire this `RwLock` with exclusive write…","Locks this `RwLock` with shared read access, blocking the…","Attempts to acquire this `RwLock` with shared read access.","rwlockupgradablereadguard","Attempts to acquire this `RwLock` with upgradable read…","mappedrwlockreadguard","unlocked","Temporarily unlocks the `RwLock` to execute the given…","Returns a reference to the original reader-writer lock…","try_map","mappedrwlockwriteguard","Unlocks the `RwLock` using a fair unlock protocol.","Temporarily yields the `RwLock` to a waiting thread if…","downgrade","Tries to atomically upgrade an upgradable read lock into a…","Make a new `MappedRwLockReadGuard` for a component of the…","Attempts to make a new `MappedRwLockReadGuard` for a…","Make a new `MappedRwLockWriteGuard` for a component of the…","Attempts to make a new `MappedRwLockWriteGuard` for a…","Atomically downgrades a write lock into a read lock…","try_lock","GuardMarker","Marker type which determines whether a lock guard should…","Duration type used for `try_lock_for`.","Instant type used for `try_lock_until`.","Attempts to acquire a shared lock until a timeout is…","Attempts to acquire an exclusive lock until a timeout is…","Additional methods for RwLocks which support recursive…","Additional methods for RwLocks which support atomically…","try_upgrade","Additional methods for RwLocks which support upgradable…","downgrade_to_upgradable","Attempts to acquire an upgradable lock until a timeout is…","try_upgrade_for","Attempts to upgrade an upgradable lock to an exclusive…","try_upgrade_until","Initial value for an unlocked mutex.","Initial value.","Initial value for an unlocked `RwLock`.","bump_shared","Temporarily yields a shared lock to a waiting thread if…","bump_exclusive","Temporarily yields an exclusive lock to a waiting thread…","bump_upgradable","Temporarily yields an upgradable lock to a waiting thread…","MutexGuard","MappedMutexGuard","ReentrantMutex","ReentrantMutexGuard","MappedReentrantMutexGuard","RwLockReadGuard","RwLockWriteGuard","RwLockUpgradableReadGuard","MappedRwLockReadGuard","MappedRwLockWriteGuard","RawMutexFair","RawMutexTimed","GetThreadId","RawRwLock","RawRwLockFair","RawRwLockDowngrade","RawRwLockTimed","RawRwLockRecursive","RawRwLockRecursiveTimed","RawRwLockUpgrade","RawRwLockUpgradeFair","RawRwLockUpgradeDowngrade","RawRwLockUpgradeTimed","GuardSend","GuardNoSend","Returns the element for the current thread, or creates it…","Returns the element for the current thread, if it exists.","get_or_try","Returns a mutable iterator over the local values of all…","Removes all thread-specific values from the `ThreadLocal`,…","get_default","Returns the element for the current thread, or creates a…","threadlocal","cachedthreadlocal","ThreadLocal","CachedThreadLocal","IterMut","If the current value equals `current`, stores `new` into…","fetch_add","Increments the current value by `val` and returns the…","fetch_sub","Decrements the current value by `val` and returns the…","fetch_and","Applies bitwise \"and\" to the current value and returns the…","Applies bitwise \"or\" to the current value and returns the…","fetch_xor","Applies bitwise \"xor\" to the current value and returns the…","fetch_or","crossbeam_utils","Pads and aligns a value to the length of a cache line.","lockresult","shardedlockreadguard","trylockresult","shardedlockwriteguard","scopedthreadbuilder","scopedjoinhandle","crossbeam_utils::atomic","crossbeam_utils::sync","crossbeam_utils::thread","atomiccell","cachepadded","shardedlock","unparker","waitgroup","AtomicCell","AtomicConsume","CachePadded","ShardedLock","WaitGroup","ScopedThreadBuilder","ScopedJoinHandle","ShardedLockReadGuard","ShardedLockWriteGuard","try_write","An owning reference.","Typedef of a owning reference that uses a…","Typedef of a mutable owning reference that uses a…","The type of handle to be encapsulated by the OwningHandle.","Given an appropriately-long-lived pointer to ourselves,…","owningref","Creates a new owning reference from a owner initialized to…","new_assert_stable_address","Like `new`, but doesn’t require `O` to implement the…","owningrefmut","map_owner","Converts `self` into a new owning reference with a…","map_owner_box","Converts `self` into a new owning reference where the…","erase_owner","Erases the concrete base type of the owner with a trait…","A getter for the underlying owner.","Discards the reference and retrieves the owner.","Create a new OwningHandle. The provided callback will be…","IntoErased","ToHandleMut","OwningRef","OwningRefMut","OwningHandle","An unsafe marker trait for types that deref to a stable…","An unsafe marker trait for types where clones deref to the…","mapforest","Create a new empty forest.","setforest","Remove all entries.","comparator","goto_first","Move this cursor to the first element.","MapForest","MapCursor","SetForest","SetCursor","Comparator","hyphensplitter","initial_indent","subsequent_indent","break_words","wrap_iter","Lazily wrap a line of text at `self.width` characters.…","intowrapiter","wrapper","WordSplitter","HyphenSplitter","NoHyphenation","IntoWrapIter","This trait defines a camel case conversion.","CamelCase","KebabCase","MixedCase","ShoutySnakeCase","ShoutySnekCase","SnakeCase","TitleCase","This is a cheap operation; you don't need to worry about…","Print a floating point number into this buffer and return…","levelfilter","setloggererror","metadata","The module path of the message, if it is a `'static` string.","recordbuilder","arguments","module_path","module_path_static","file_static","Returns a new builder.","The verbosity level of the message.","The name of the target of the directive.","metadatabuilder","parselevelerror","LevelFilter","RecordBuilder","MetadataBuilder","SetLoggerError","ParseLevelError","capacityerror","utf8error","Adds the given char to the end of the string.","Adds the given string slice to the end of the string.","Push `element` to the end of the vector.","Insert `element` at position `index`.","Remove the element at `index` and swap the last element…","Remove the element at `index` and shift down the following…","arrayvec","arraystring","clone_from","Start index (inclusive)","End index (exclusive)","ArrayString","CapacityError","RangeArgument","capacity","truncate","intoiter","proc_macro2","tokenstream","delimiter","set_span","Creates a new suffixed integer literal with the specified…","Creates a new unsuffixed integer literal with the…","proc_macro2::token_stream","tokentree","from_str","TokenTree","Delimiter","TokenStream","cpusubtype","sizeofcmds","sin_family","sigaction","if_nameindex","mach_timebase_info","timespec","ipv6_mreq","itimerval","protoent","sockaddr","sockaddr_in6","sockaddr_un","addrinfo","pthread_mutexattr_t","pthread_condattr_t","pthread_rwlockattr_t","siginfo_t","fstore_t","radvisory","sockaddr_in","kevent64_s","if_msghdr","proc_taskinfo","proc_bsdinfo","proc_taskallinfo","xsw_usage","mach_header","mach_header_64","segment_command","segment_command_64","load_command","sockaddr_dl","sockaddr_inarp","sockaddr_ctl","in_pktinfo","in6_pktinfo","ipc_perm","proc_threadinfo","pthread_rwlock_t","pthread_mutex_t","pthread_cond_t","sockaddr_storage","timeval32","pthread_attr_t","in6_addr","semid_ds","shmid_ds","sigevent","statvfs","timezone","reserved","Creates a new unsuffixed floating-point literal.","Creates a new suffixed floating-point literal.","An iterator over all occurrences of the needles in a…","An iterator over all occurrences of the needle in a…","Creates a new iterator that yields all positions of needle…","Reads an unsigned n-bytes integer from the underlying…","Reads a signed n-bytes integer from the underlying reader.","DEPRECATED.","Writes an unsigned n-bytes integer to the underlying writer.","Writes a signed n-bytes integer to the underlying writer.","read_u128","read_uint","read_uint128","Reads an unsigned n-bytes integer from `buf`.","write_u16","write_u24","write_u32","write_u48","write_u64","write_u128","write_uint","write_uint128","Writes an unsigned integer `n` to `buf` using only `nbytes`.","read_i128","read_int128","Reads a signed n-bytes integer from `buf`.","Reads a IEEE754 single-precision (4 bytes) floating point…","Reads a IEEE754 double-precision (8 bytes) floating point…","write_i16","write_i24","write_i32","write_i48","write_i64","write_i128","write_int","write_int128","Writes a signed integer `n` to `buf` using only `nbytes`.","write_f32","Writes a IEEE754 single-precision (4 bytes) floating point…","write_f64","Writes a IEEE754 double-precision (8 bytes) floating point…","read_u16_into","read_u32_into","read_u64_into","read_u128_into","read_i16_into","read_i32_into","read_i64_into","read_i128_into","read_f32_into","read_f32_into_unchecked","read_f64_into","Reads IEEE754 single-precision (4 bytes) floating point…","read_f64_into_unchecked","read_u16","read_u32","read_u64","write_u16_into","write_u32_into","write_u64_into","write_u128_into","from_slice_u16","from_slice_u32","from_slice_u64","from_slice_u128","from_slice_f32","from_slice_f64","bigendian","littleendian","Reads an unsigned 8 bit integer from the underlying reader.","Reads a signed 8 bit integer from the underlying reader.","Reads an unsigned 16 bit integer from the underlying reader.","read_i16","Reads a signed 16 bit integer from the underlying reader.","read_u24","Reads an unsigned 24 bit integer from the underlying reader.","read_i24","Reads a signed 24 bit integer from the underlying reader.","Reads an unsigned 32 bit integer from the underlying reader.","read_i32","Reads a signed 32 bit integer from the underlying reader.","read_u48","Reads an unsigned 48 bit integer from the underlying reader.","read_i48","Reads a signed 48 bit integer from the underlying reader.","Reads an unsigned 64 bit integer from the underlying reader.","read_i64","Reads a signed 64 bit integer from the underlying reader.","Reads an unsigned 128 bit integer from the underlying…","Reads a signed 128 bit integer from the underlying reader.","read_int","read_f32","read_f64","Reads a sequence of unsigned 16 bit integers from the…","Reads a sequence of unsigned 32 bit integers from the…","Reads a sequence of unsigned 64 bit integers from the…","Reads a sequence of unsigned 128 bit integers from the…","read_i8_into","Reads a sequence of signed 8 bit integers from the…","Reads a sequence of signed 16 bit integers from the…","Reads a sequence of signed 32 bit integers from the…","Reads a sequence of signed 64 bit integers from the…","Reads a sequence of signed 128 bit integers from the…","Reads a sequence of IEEE754 single-precision (4 bytes)…","Reads a sequence of IEEE754 double-precision (8 bytes)…","Writes an unsigned 8 bit integer to the underlying writer.","Writes a signed 8 bit integer to the underlying writer.","Writes an unsigned 16 bit integer to the underlying writer.","Writes a signed 16 bit integer to the underlying writer.","Writes an unsigned 24 bit integer to the underlying writer.","Writes a signed 24 bit integer to the underlying writer.","Writes an unsigned 32 bit integer to the underlying writer.","Writes a signed 32 bit integer to the underlying writer.","Writes an unsigned 48 bit integer to the underlying writer.","Writes a signed 48 bit integer to the underlying writer.","Writes an unsigned 64 bit integer to the underlying writer.","Writes a signed 64 bit integer to the underlying writer.","Writes an unsigned 128 bit integer to the underlying writer.","Writes a signed 128 bit integer to the underlying writer.","ReadBytesExt","WriteBytesExt","ByteOrder","BigEndian","LittleEndian","A potential output from `Cmp`, this is the type equivalent…","Instantiates a singleton representing this bit.","Instantiates a singleton representing this unsigned integer.","Instantiates a singleton representing this strictly…","typenum","This function isn't used in this crate, but may be useful…","The type representing either `True` or `False`","Method returning `True` or `False`.","typenum::bit","is_equal","is_greater","is_less_or_equal","is_not_equal","is_greater_or_equal","typenum::uint","partial_div","typenum::int","is_less","typenum::array","to_ordering","to_isize","to_usize","PartialDiv","IsGreater","IsLessOrEqual","IsNotEqual","IsGreaterOrEqual","pusherror","poperror","Returns `true` if the queue is empty.","Returns the number of elements in the queue.","PushError","ArrayQueue","Returned by `Generics::split_for_impl`.","lifetimes","bound_lifetimes","Unsuffixed","Delimited","deriveinput","whereclause","typarambound","attribute","byte_string","bytestrlit","character","anglebracketedparameterdata","lifetime","nestedmetaitem","variantdata","visibility","lifetimedef","traitboundmodifier","wherepredicate","whereboundpredicate","whereregionpredicate","whereeqpredicate","mutability","pathsegment","pathparameters","typebinding","parenthesizedparameterdata","polytraitref","functionretty","syn::parse","LifetimeDef","WhereBoundPredicate","WhereClause","WhereEqPredicate","WhereRegionPredicate","DeriveInput","AngleBracketedParameterData","ParenthesizedParameterData","PathSegment","PolyTraitRef","TypeBinding","NestedMetaItem","VariantData","TraitBoundModifier","TyParamBound","WherePredicate","FunctionRetTy","PathParameters","ImplGenerics","The result of a parser.","Parsing succeeded. The first field contains the rest of…","Parsing failed.","Unwraps the result, asserting the the parse is complete.…","delimited","num_traits","neg_infinity","Returns `-0.0`.","Returns the smallest finite value that this type can…","min_positive_value","Returns the smallest positive, normalized value that this…","Returns epsilon, a small positive value.","Returns the largest finite value that this type can…","is_infinite","Returns `true` if the number is neither zero, infinite,…","Returns the floating point category of the number. If only…","Returns the largest integer less than or equal to a number.","Returns the smallest integer greater than or equal to a…","Returns the nearest integer to a number. Round half-way…","Return the integer part of a number.","Returns the fractional part of a number.","Computes the absolute value of `self`. Returns…","Returns a number that represents the sign of `self`.","is_sign_positive","is_sign_negative","Raise a number to an integer power.","Returns the maximum of the two numbers.","Returns the minimum of the two numbers.","integer_decode","Returns the mantissa, base 2 exponent, and sign as…","Shifts the bits to the left by a specified amount amount,…","Shifts the bits to the right by a specified amount amount,…","num_traits::ops","Fused multiply-add. Computes `(self * a) + b` with only…","Performs the fused multiply-add operation.","The result after applying the operator.","min_value","max_value","Returns `true` if `self` is positive, including `+0.0`,…","Returns `true` if `self` is negative, including `-0.0`,…","Take the reciprocal (inverse) of a number, `1/x`.","Take the square root of a number.","Returns `e^(self)`, (the exponential function).","Returns `2^(self)`.","Returns the natural logarithm of the number.","Returns the logarithm of the number with respect to an…","Returns the base 2 logarithm of the number.","Returns the base 10 logarithm of the number.","to_degrees","Converts radians to degrees.","to_radians","Converts degrees to radians.","The positive difference of two numbers.","Take the cubic root of a number.","Calculate the length of the hypotenuse of a right-angle…","Computes the sine of a number (in radians).","Computes the cosine of a number (in radians).","Computes the tangent of a number (in radians).","Computes the arcsine of a number. Return value is in…","Computes the arccosine of a number. Return value is in…","Computes the arctangent of a number. Return value is in…","Computes the four quadrant arctangent of `self` (`y`) and…","Simultaneously computes the sine and cosine of the number,…","Returns `e^(self) - 1` in a way that is accurate even if…","Returns `ln(1+n)` (natural logarithm) more accurately than…","Hyperbolic sine function.","Hyperbolic cosine function.","Hyperbolic tangent function.","Inverse hyperbolic sine function.","Inverse hyperbolic cosine function.","Inverse hyperbolic tangent function.","Computes the absolute value.","Returns the sign of the number.","ParseFloatError","FloatErrorKind","ToPrimitive","FromPrimitive","AsPrimitive","MulAddAssign","WrappingAdd","WrappingSub","WrappingMul","WrappingShl","WrappingShr","backtrace_state","into_token_stream","Convert `self` directly into a `TokenStream` object.","TokenStreamExt","blake2b_simd","Equivalent to `Params::default()`.","Hash an input all at once with these parameters.","hash_length","Equivalent to `State::default()` or…","Add input to the hash. You can call `update` any number of…","Finalize the state and return a `Hash`. This method is…","Return the total number of bytes input so far.","blake2b_simd::blake2bp","blake2b_simd::many","HashManyJob","Span associated with this `IdentFragment`.","to_token_stream","IdentFragment","aho_corasick","aho_corasick::ErrorKind","ahocorasick","Build an Aho-Corasick automaton using the configuration…","ahocorasickbuilder","LeftmostFirst","Use leftmost-first match semantics, which reports leftmost…","LeftmostLongest","Use leftmost-longest match semantics, which reports…","match_kind","Return the first occurrence of any of the patterns in this…","matchkind","Returns the approximate total amount of heap used by this…","aho_corasick::packed","AhoCorasick","AhoCorasickBuilder","MatchKind","FindOverlappingIter","StreamFindIter","A wrapper for generating floating point numbers uniformly…","rand::distributions","timererror","A random number generator that uses the ChaCha20 algorithm…","A random number generator that uses the ISAAC algorithm[1].","A random number generator that uses ISAAC-64[1], the…","new_unseeded","xorshiftrng","partialord","samplerange","rand::distributions::range","rand::distributions::gamma","rand::distributions::normal","rand::distributions::exponential","rand::jitter","rand::reseeding","ind_sample","fill_bytes","rand::read","next_u32","next_u64","reseedingrng","from_seed","Create an ISAAC random number generator with a seed. This…","isaac64rng","standardnormal","reseedwithdefault","chacharng","SampleRange","StandardNormal","IndependentSample","WeightedChoice","ReseedingRng","Isaac64Rng","XorShiftRng","SeedableRng","AsciiGenerator","ReseedWithDefault","Creates a read-only memory map backed by a file.","Creates a writeable memory map backed by a file.","Creates an anonymous memory map.","Asynchronously flushes outstanding memory map…","mmapoptions","MmapOptions","Returns the current value of a high-resolution performance…","parseerror","duration","checked_add","checked_sub","outofrangeerror","stdduration","precisetime","Returns a TmFmt that outputs according to the `asctime`…","Formats the time according to the format string.","steadytime","The resulting Tm is in UTC.","PreciseTime","OutOfRangeError","generic_array","mappedsequence","genericarray","generic_array::iter","MappedGenericSequence","FunctionalSequence","GenericArrayIter","GenericSequence","ArrayLength","GenericArray","EINPROGRESS","EDESTADDRREQ","ENOPROTOOPT","EPROTONOSUPPORT","ESOCKTNOSUPPORT","EPFNOSUPPORT","EAFNOSUPPORT","EADDRNOTAVAIL","ENETUNREACH","ECONNABORTED","ETOOMANYREFS","ECONNREFUSED","ENAMETOOLONG","EHOSTUNREACH","ERPCMISMATCH","EPROGUNAVAIL","EPROGMISMATCH","EPROCUNAVAIL","ENOTRECOVERABLE","EWOULDBLOCK","errnosentinel","F_DUPFD_CLOEXEC","F_FULLFSYNC","AT_REMOVEDIR","AT_SYMLINK_NOFOLLOW","O_DIRECTORY","Returns an empty set of flags","Returns the set containing all flags.","Returns the raw value of the flags currently stored.","Convert from underlying bit representation, unless that…","from_bits_truncate","Convert from underlying bit representation, dropping any…","Returns `true` if no flags are currently stored.","Returns `true` if all flags are currently set.","Returns `true` if there are flags common to both `self`…","Returns `true` all of the flags in `other` are contained…","Inserts the specified flags in-place.","Removes the specified flags in-place.","Toggles the specified flags in-place.","Inserts or removes the specified flags depending on the…","intersects","interfaceaddressiterator","if_nametoindex","IFF_BROADCAST","IFF_LOOPBACK","IFF_POINTOPOINT","IFF_NOTRAILERS","IFF_RUNNING","IFF_PROMISC","IFF_ALLMULTI","IFF_OACTIVE","IFF_SIMPLEX","IFF_MULTICAST","Per link layer defined bit.","IFF_ALTPHYS","interfaceflags","from_bits","pollflags","contains","The master port in a virtual pty pair","posix_openpt","ptymaster","openptyresult","forkptyresult","sched_yield","aiocancelstat","aio_suspend","from_mut_slice","sigevnotify","lioopcode","EVFILT_MACHPORT","EVFILT_PROC","EVFILT_READ","EVFILT_SIGNAL","EVFILT_TIMER","EVFILT_USER","EVFILT_VNODE","EVFILT_WRITE","EV_DISPATCH","EV_SYSFLAGS","type_of_event_flag","eventflag","NOTE_ABSOLUTE","NOTE_ATTRIB","NOTE_DELETE","NOTE_EXITSTATUS","NOTE_EXTEND","NOTE_FFCOPY","NOTE_FFCTRLMASK","NOTE_FFLAGSMASK","NOTE_NSECONDS","NOTE_PCTRLMASK","NOTE_PDATAMASK","NOTE_RENAME","NOTE_REVOKE","NOTE_SECONDS","NOTE_SIGNAL","NOTE_TRACKERR","NOTE_TRIGGER","NOTE_USECONDS","NOTE_VM_ERROR","NOTE_VM_PRESSURE","NOTE_VM_PRESSURE_SUDDEN_TERMINATE","NOTE_VM_PRESSURE_TERMINATE","filterflag","eventfilter","MADV_NORMAL","MADV_RANDOM","MADV_SEQUENTIAL","MADV_WILLNEED","MADV_DONTNEED","MADV_ZERO_WIRED_PAGES","MADV_FREE_REUSABLE","MADV_FREE_REUSE","MADV_CAN_REUSE","protflags","MAP_PRIVATE","MAP_NORESERVE","MAP_NOCACHE","mapflags","MS_INVALIDATE","MS_KILLPAGES","MS_DEACTIVATE","MCL_CURRENT","mlockallflags","pthread_self","PT_TRACE_ME","PT_CONTINUE","PT_THUPDATE","PT_ATTACHEXC","addresstype","nix::sys","SIG_UNBLOCK","SIG_SETMASK","Use the given signal-catching function, which takes in the…","nix::sys::signal","sighandler","pthread_sigmask","sigprocmask","SA_NOCLDSTOP","SA_NOCLDWAIT","SA_RESETHAND","sigmaskhow","msg_namelen","msg_control","msg_controllen","sa_family_t","sin6_family","sin6_flowinfo","sin6_scope_id","addressfamily","sockprotocol","getsockopt","setsockopt","getpeername","getsockname","Ipv4PacketInfo","Ipv4RecvDstAddr","nix::sys::socket","Represents a socket option that can be accessed or set.…","sockflag","MSG_WAITALL","MSG_DONTWAIT","msgflags","ipv4addr","st_atime_nsec","st_mtime_nsec","st_ctime_nsec","st_birthtime","st_birthtime_nsec","FollowSymlink","NoFollowSymlink","filestat","Change the access and modification times of a file.","blocks_free","fsblkcnt_t","blocks_available","fsfilcnt_t","filesystem_id","_POSIX_VDISABLE","cfgetispeed","cfgetospeed","cfsetispeed","cfsetospeed","tcsendbreak","inputflags","outputflags","tcflag_t","controlflags","localflags","suseconds_t","waitpidflag","waitstatus","nix::unistd","AIO_LISTIO_MAX","The implementation supports the Non-Robust Mutex Priority…","The implementation provides a C-language compilation…","PTHREAD_STACK_MIN","Change the ownership of the file at `path` to be owned by…","Replace the current process image with a new one (see…","sethostname","gethostname","Truncate a file to a specified length","Remove a directory entry","pathconfvar","accessflags","Generate an ioctl request code for a command that passes…","Generates a wrapper function for a \"bad\" ioctl that writes…","Generates a wrapper function for a \"bad\" ioctl that reads…","Generates a wrapper function for an ioctl that reads and…","nix::ifaddrs","nix::net::if_","nix::sys::aio","nix::sys::event","nix::sys::mman","nix::sys::ptrace","nix::sys::select","nix::sys::socket::sockopt","nix::sys::stat","nix::sys::statfs","nix::sys::statvfs","nix::sys::termios","nix::sys::time","nix::sys::uio","nix::sys::utsname","nix::sys::wait","ipmembershiprequest","ipv6membershiprequest","milliseconds","microseconds","nanoseconds","num_seconds","num_milliseconds","num_microseconds","num_nanoseconds","nix::fcntl","nix::errno","nix::poll","nix::pty","aiofsyncmode","signaliterator","cmsgiterator","fchmodatflags","utimensatflags","forkresult","fchownatflags","unlinkatflags","mmapadvise","specialcharacterindices","interfaceaddress","ipv6addr","ipaddmembership","ipdropmembership","ipv6addmembership","ipv6dropmembership","ipmulticastttl","ipmulticastloop","receivetimeout","sendtimeout","socketerror","tcpkeepalive","socktype","receivetimestamp","ipv4packetinfo","ipv6recvpacketinfo","ipv4recvdstaddr","controlmessageowned","controlmessage","sysconfvar","nix::dir","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Returns the complement of this set of flags.","Returns the intersection between the two sets of flags.","Returns the union of the two sets of flags.","Returns the left flags, but with all the right flags…","bitand_assign","Disables all flags disabled in the set.","bitor_assign","Adds the set of flags.","bitxor_assign","Toggles the set of flags.","ErrnoSentinel","InterfaceAddress","InterfaceFlags","OpenptyResult","ForkptyResult","AioFsyncMode","AioCancelStat","EventFilter","MlockAllFlags","SigevNotify","AddressFamily","SockProtocol","ControlMessageOwned","ControlMessage","IpMembershipRequest","Ipv6MembershipRequest","FchmodatFlags","UtimensatFlags","SpecialCharacterIndices","OutputFlags","ControlFlags","TimeValLike","WaitPidFlag","FchownatFlags","UnlinkatFlags","PathconfVar","AccessFlags","InterfaceAddressIterator","SignalIterator","CmsgIterator","IpAddMembership","IpDropMembership","Ipv6AddMembership","Ipv6DropMembership","IpMulticastTtl","IpMulticastLoop","ReceiveTimeout","SendTimeout","SocketError","TcpKeepAlive","ReceiveTimestamp","Ipv6RecvPacketInfo","Ipv4RecvIf","InvalidUtf8","num_minutes","unparkresult","parking_lot_core","unparktoken","parkresult","parktoken","UnparkResult","UnparkToken","Defines an additive identity element for `Self`.","Returns the additive identity element of `Self`, `0`. #…","Sets `self` to the additive identity element of `Self`, `0`.","Returns `true` if `self` is equal to the additive identity.","Defines a multiplicative identity element for `Self`.","Returns the multiplicative identity element of `Self`, `1`.","Sets `self` to the multiplicative identity element of…","Returns `true` if `self` is equal to the multiplicative…","Returns the additive identity, `0`.","Returns the multiplicative identity, `1`.","Useful functions for signed numbers (i.e. numbers that can…","is_positive","Returns true if the number is positive and false if the…","is_negative","Returns true if the number is negative and false if the…","A trait for values which cannot be negative","Saturating math operations","saturating_add","Saturating addition operator. Returns a+b, saturating at…","saturating_sub","Saturating subtraction operator. Returns a-b, saturating…","Performs addition that returns `None` instead of wrapping…","Adds two numbers, checking for overflow. If overflow…","Performs subtraction that returns `None` instead of…","Subtracts two numbers, checking for underflow. If…","Performs multiplication that returns `None` instead of…","checked_mul","Multiplies two numbers, checking for underflow or…","Performs division that returns `None` instead of panicking…","checked_div","Divides two numbers, checking for underflow, overflow and…","Performs a left shift that returns `None` on shifts larger…","checked_shl","Checked shift left. Computes `self << rhs`, returning…","Performs a right shift that returns `None` on shifts…","checked_shr","Checked shift right. Computes `self >> rhs`, returning…","Performs addition that wraps around on overflow.","wrapping_add","Wrapping (modular) addition. Computes `self + other`,…","Performs multiplication that wraps around on overflow.","wrapping_mul","Wrapping (modular) multiplication. Computes `self *…","Performs subtraction that wraps around on overflow.","wrapping_sub","Wrapping (modular) subtraction. Computes `self - other`,…","Numbers which have upper and lower bounds","returns the smallest finite number this type can represent","returns the largest finite number this type can represent","Generic trait for floating point numbers","Returns the `NaN` value.","Returns the infinite value.","Returns the negative infinite value.","Returns `true` if this value is `NaN` and false otherwise.","Returns `true` if this value is positive infinity or…","Returns `true` if this number is neither infinite nor `NaN`.","Raise a number to a floating point power.","Return Euler’s number.","Return `1.0 / π`.","FRAC_1_SQRT_2","Return `1.0 / sqrt(2.0)`.","Return `2.0 / π`.","FRAC_2_SQRT_PI","Return `2.0 / sqrt(π)`.","Return `π / 2.0`.","Return `π / 3.0`.","Return `π / 4.0`.","Return `π / 6.0`.","Return `π / 8.0`.","Return `ln(10.0)`.","Return `ln(2.0)`.","Return `log10(e)`.","Return `log2(e)`.","Return Archimedes’ constant.","Return `sqrt(2.0)`.","A generic interface for casting between machine scalars…","Convert a value to another, using the `as` operator.","A generic trait for converting a number to a value.","Convert an `isize` to return an optional value of this…","Convert an `i8` to return an optional value of this type.…","Convert an `i16` to return an optional value of this type.…","Convert an `i32` to return an optional value of this type.…","Convert an `i64` to return an optional value of this type.…","Convert an `i128` to return an optional value of this…","from_usize","Convert a `usize` to return an optional value of this…","Convert an `u8` to return an optional value of this type.…","Convert an `u16` to return an optional value of this type.…","Convert an `u32` to return an optional value of this type.…","Convert an `u64` to return an optional value of this type.…","Convert an `u128` to return an optional value of this…","Convert a `f32` to return an optional value of this type.…","Convert a `f64` to return an optional value of this type.…","A generic trait for converting a value to a number.","Converts the value of `self` to an `isize`.","Converts the value of `self` to an `i8`.","Converts the value of `self` to an `i16`.","Converts the value of `self` to an `i32`.","Converts the value of `self` to an `i64`.","Converts the value of `self` to an `i128`.","Converts the value of `self` to a `usize`.","Converts the value of `self` to an `u8`.","Converts the value of `self` to an `u16`.","Converts the value of `self` to an `u32`.","Converts the value of `self` to an `u64`.","Converts the value of `self` to an `u128`.","Converts the value of `self` to an `f32`.","Converts the value of `self` to an `f64`.","An interface for casting between machine scalars.","Creates a number from another value that can be converted…","Cast from one machine scalar to another.","Generic trait for primitive integers.","Returns the number of ones in the binary representation of…","count_zeros","Returns the number of zeros in the binary representation…","leading_zeros","Returns the number of leading zeros in the binary…","trailing_zeros","Returns the number of trailing zeros in the binary…","rotate_left","rotate_right","unsigned_shl","unsigned_shr","Reverses the byte order of the integer.","Convert an integer from big endian to the target's…","Convert an integer from little endian to the target's…","Convert `self` to big endian from the target's endianness.","Convert `self` to little endian from the target's…","Raises self to the power of `exp`, using exponentiation by…","Raises a value to the power of exp, using exponentiation…","checked_pow","Raises a value to the power of exp, returning `None` if an…","FloatConst","CheckedAdd","CheckedSub","CheckedMul","CheckedDiv","CheckedShl","CheckedShr","Saturating","bytesorwidestring","symbolname","symbol_address","backtraceframe","backtrace","BytesOrWideString","BacktraceFrame","BacktraceSymbol","nonzerou32","A wrapper type implementing [`RngCore`] for some type…","The core part of the RNG, implementing the `generate`…","Create a new `BlockRng` from an existing RNG implementing…","Get the index into the result buffer.","Reset the number of available results. This will force a…","generate_and_set","Generate a new set of results immediately, setting the…","Implement `fill_bytes` by reading chunks from the output…","rand_core","Fill `dest` with random data.","rand_core::block","try_fill_bytes","seed_from_u64","BlockRngCore","RegexBuilder","A configurable builder for a regular expression.","RegexSetBuilder","A configurable builder for a set of regular expressions.","Match represents a single match of a regex in a haystack.","An iterator over all non-overlapping matches for a…","CaptureMatches","An iterator that yields all non-overlapping capture groups…","Yields all substrings delimited by a regular expression…","Yields at most `N` substrings delimited by a regular…","CaptureNames","An iterator over the names of all possible captures.","CaptureLocations","CaptureLocations is a low level representation of the raw…","SubCaptureMatches","An iterator that yields all capturing matches in the order…","ReplacerRef","By-reference adaptor for a `Replacer`","Match multiple (possibly overlapping) regular expressions…","A set of matches returned by a regex set.","SetMatchesIntoIter","An owned iterator over the set of matches from a regex set.","SetMatchesIter","A borrowed iterator over the set of matches from a regex…","regexbuilder","Create a new regular expression builder with the given…","Consume the builder and compile the regular expression.","Set the value for the case insensitive (`i`) flag.","Set the value for the multi-line matching (`m`) flag.","Set the value for the any character (`s`) flag, where in…","Set the value for the greedy swap (`U`) flag.","Set the value for the ignore whitespace (`x`) flag.","Set the value for the Unicode (`u`) flag.","Set the approximate size limit of the compiled regular…","dfa_size_limit","Set the approximate size of the cache used by the DFA.","regex::bytes","regexsetbuilder","size_limit","Consume the builder and compile the regular expressions…","no_expansion","Return a fixed unchanging replacement byte string.","Return a `Replacer` that borrows and wraps this `Replacer`.","replacerref","replace_all","capturelocations","Create a new regex set with the given regular expressions.","regexset","Returns true if and only if one of the regexes in this set…","Returns the set of regular expressions that match in the…","Returns the total number of regular expressions in this set.","Returns the patterns that this set will match on.","matched_any","Whether this set contains any matches.","Whether the regex at the given index matched.","The total number of regexes in the set that created these…","Returns an iterator over indexes in the regex that matched.","setmatchesiter","Returns the starting byte offset of the match in the…","Returns the ending byte offset of the match in the haystack.","Returns the matched text.","Compiles a regular expression. Once compiled, it can be…","Returns true if and only if the regex matches the string…","Returns the start and end byte range of the leftmost-first…","find_iter","Returns an iterator for each successive non-overlapping…","Returns the capture groups corresponding to the…","captures","captures_iter","Returns an iterator over all the non-overlapping capture…","capturematches","Returns an iterator of substrings of `text` delimited by a…","Returns an iterator of at most `limit` substrings of…","Replaces the leftmost-first match with the replacement…","Replaces all non-overlapping matches in `text` with the…","Replaces at most `limit` non-overlapping matches in `text`…","shortest_match","Returns the end location of a match in the text given.","shortest_match_at","Returns the same as shortest_match, but starts the search…","is_match_at","Returns the same as is_match, but starts the search at the…","Returns the same as find, but starts the search at the…","captures_read","This is like `captures`, but uses `CaptureLocations`…","captures_read_at","Returns the original string of this regex.","capture_names","Returns an iterator over the capture names.","capturenames","captures_len","Returns the number of captures.","capture_locations","Returns an empty set of capture locations that can be…","Returns the start and end positions of the Nth capture…","Returns the total number of capturing groups.","Returns the match associated with the capture group at…","Returns the match for the capture group named `name`. If…","subcapturematches","Expands all instances of `$name` in `replacement` to the…","Returns the number of captured groups.","Replacer describes types that can be used to replace…","replace_append","Appends text to `dst` to replace the current match.","setmatches","Shows the original regular expression.","Attempts to parse a string into a regular expression","Return a fixed unchanging replacement string.","SetMatches","Escapes all regular expression meta characters in `text`.","featureinfo","cacheinfoiter","processorserial","cacheparametersiter","monitormwaitinfo","thermalpowerinfo","extendedfeatures","directcacheaccessinfo","performancemonitoringinfo","extendedtopologyiter","extendedstateinfo","rdtmonitoringinfo","rdtallocationinfo","processortraceinfo","processorfrequencyinfo","socvendorinfo","hypervisorinfo","extendedfunctioninfo","A value of 1 indicates that the processor supports the…","Maximum number of addressable IDs for logical processors…","Supports Intel Resource Director Technology (RDT)…","Maximum size (bytes, from the beginning of the…","l3monitoringinfo","membwallocationinfo","capacity_mask_length","Length of the capacity bit mask using minus-one notation.","isolation_bitmap","Bit-granular map of isolation/contention of allocation…","highest_cos","Highest COS number supported for this Leaf.","is_fully_associative","socvendorattributesiter","tsc_frequency","l2associativity","topologytype","cacheparameter","extendedtopologylevel","extendedstate","sgxsectioninfo","cpuidresult","vendorinfo","cacheinfotype","cacheinfo","extendedstateiter","sgxsectioniter","socvendorbrand","CpuIdResult","ExtendedState","CacheInfoType","TopologyType","SgxSectionInfo","L2Associativity","ProcessorSerial","FeatureInfo","CacheParameter","MonitorMwaitInfo","ThermalPowerInfo","ExtendedFeatures","DirectCacheAccessInfo","PerformanceMonitoringInfo","ExtendedTopologyLevel","ExtendedStateInfo","RdtMonitoringInfo","L3MonitoringInfo","RdtAllocationInfo","MemBwAllocationInfo","ProcessorTraceInfo","ProcessorFrequencyInfo","SoCVendorInfo","SoCVendorBrand","HypervisorInfo","ExtendedFunctionInfo","CacheInfoIter","CacheParametersIter","ExtendedTopologyIter","ExtendedStateIter","SgxSectionIter","SoCVendorAttributesIter","assemblyoffset","dynasmerror","This struct is a wrapper around an `Assembler` normally…","dynamiclabel","uncommittedmodifier","executablebuffer","assembler","Sets the current modification offset to the given value","Checks that the current modification offset is not larger…","check_exact","Checks that the current modification offset is exactly the…","This struct is an implementation of a dynasm runtime. It…","AssemblyModifier","Create a new `Assembler` instance This function will…","new_dynamic_label","Create a new dynamic label that can be referenced and…","get_dynamic_label_offset","Query the offset of a dynamic label.","To allow already committed code to be altered, this method…","alter_uncommitted","Similar to `Assembler::alter`, this method allows…","Commit the assembled code from a temporary buffer to the…","Consumes the assembler to return the internal…","Creates a read-only reference to the internal…","dynasmrt::common","dynasmrt::x64","dynasmrt::x86","global_label","global_reloc","dynamic_label","dynamic_reloc","local_label","forward_reloc","backward_reloc","bare_reloc","AssemblyOffset","DynasmError","UncommittedModifier","Assembler","DynasmLabelApi","ExecutableBuffer","DynamicLabel","Digest input data.","Digest input data in a chained manner.","Retrieve result and consume hasher instance.","invalidoutputsize","output_size","FixedOutput","VariableOutput","ExtendableOutput","InvalidOutputSize","An iterator for getting multiple values out of an argument…","AllowLeadingHyphen","NextLineHelp","Occurs when the user provides an unrecognized…","Sets a string describing what the program does. This will…","Adds additional help information to be displayed in…","Sets a string of the version number to be displayed when…","appsettings","Prints the full help message to [`io::stdout()`] using a…","clapresult","Writes the full help message to the user to a…","Writes the version message to the user to a [`io::Write`]…","Generate a completions file for a specified shell at…","argmatches","visible_alias","visible_aliases","Specifies that if the value is not passed in as an…","display_order","argsettings","Because [`Subcommand`]s are essentially \"sub-[`App`]s\"…","requires_all","Sets the requirement rules of this group. This is not to…","conflicts_with","conflicts_with_all","Convenience macro getting a typed value `T` where `T`…","Convenience macro getting a typed value [`Vec<T>`] where…","subcommand","ArgSettings","AppSettings","CaseInsensitive","Stores a `Shared` or `Owned` pointer into the atomic…","compareandseterror","Stores the pointer `new` (either `Shared` or `Owned`) into…","Dereferences the pointer.","Takes ownership of the pointee.","Returns the tag stored within the pointer.","Returns the same pointer, but tagged with `tag`. `tag` is…","Stores a function so that it can be executed at some point…","collector","Returns a new pointer pointing to the tagged pointer `data`.","into_usize","CompareAndSetError","LocalHandle","CompareAndSetOrdering","load_consume","Waits on this condition variable for a notification,…","waittimeoutresult","An RAII mutex guard returned by `MutexGuard::map`, which…","A mutual exclusion primitive useful for protecting shared…","An RAII implementation of a \"scoped lock\" of a mutex. When…","An RAII mutex guard returned by…","A mutex which can be recursively locked by a single thread.","An RAII implementation of a \"scoped lock\" of a reentrant…","An RAII read lock guard returned by…","An RAII write lock guard returned by…","A reader-writer lock","RAII structure used to release the shared read access of a…","RAII structure used to release the upgradable read access…","RAII structure used to release the exclusive write access…","nonzero_thread_id","nonzerousize","lock_exclusive","try_lock_exclusive","unlock_exclusive","lock_shared","try_lock_shared","unlock_shared","unlock_shared_fair","unlock_exclusive_fair","try_lock_shared_for","try_lock_shared_until","try_lock_exclusive_for","try_lock_exclusive_until","lock_shared_recursive","try_lock_shared_recursive","try_lock_shared_recursive_for","try_lock_shared_recursive_until","lock_upgradable","try_lock_upgradable","unlock_upgradable","unlock_upgradable_fair","downgrade_upgradable","try_lock_upgradable_until","try_lock_upgradable_for","WaitTimeoutResult","RawThreadId","The ChaCha random number generator.","A cryptographically secure random number generator that…","get_word_pos","Get the offset from the start of the stream, in 32-bit…","set_word_pos","Set the offset from the start of the stream, in 32-bit…","Set the stream number.","set_stream","ChaChaRng","ChaCha with 20 rounds","chacha20core","chacha12core","chacha8core","ChaCha20Rng","ChaCha12Rng","ChaCha12Core","ChaCha20Core","ChaCha8Core","Returns `true` if the deque is empty.","A word of Rust code, which may be a keyword or legal…","paren_token","bracket_token","brace_token","colon_token","Attributes tagged on the field.","dot2_token","comma_token","semi_token","const_token","eq_token","defaultness","type_token","existential_token","crate_token","static_token","generics","trait_token","colon2_token","struct_token","union_token","extern_token","group_token","underscore_token","and_token","leading_colon","A structured list within an attribute, like `derive(Copy,…","A name-value pair within an attribute, like `feature =…","Named fields of a struct or struct variant such as `Point…","Unnamed fields of a tuple struct or tuple variant such as…","A public visibility level: `pub`.","A crate-level visibility: `crate`.","A visibility level restricted to some path: `pub(self)` or…","A box expression: `box f`.","A placement expression: `place <- value`.","A slice literal expression: `[a, b, c, d]`.","A function call expression: `invoke(a, b)`.","A method call expression: `x.foo::<T>(a, b)`.","A tuple expression: `(a, b, c, d)`.","A binary operation: `a + b`, `a * b`.","A unary operation: `!x`, `*x`.","A literal in place of an expression: `1`, `\"foo\"`.","A cast expression: `foo as f64`.","A type ascription expression: `foo: f64`.","A `let` guard: `let Some(x) = opt`.","An `if` expression with an optional `else` block: `if expr…","A while loop: `while expr { ... }`.","A for loop: `for pat in expr { ... }`.","Conditionless loop: `loop { ... }`.","A `match` expression: `match n { Some(n) => {}, None => {}…","A closure expression: `|a, b| a + b`.","An unsafe block: `unsafe { ... }`.","A blocked scope: `{ ... }`.","An assignment expression: `a = compute()`.","A compound assignment expression: `counter += 1`.","Access of a named struct field (`obj.k`) or unnamed tuple…","A square bracketed indexing expression: `vector[2]`.","A range expression: `1..2`, `1..`, `..2`, `1..=2`, `..=2`.","A path like `std::mem::replace` possibly containing…","A referencing operation: `&a` or `&mut a`.","A `break`, with an optional label to break and an optional…","A `continue`, with an optional label.","A `return`, with an optional value to be returned.","A macro invocation expression: `format!(\"{}\", q)`.","A struct literal expression: `Point { x: 1, y: 1 }`.","An array literal constructed from one repeated element:…","A parenthesized expression: `(a + b)`.","An expression contained within invisible delimiters.","A try-expression: `expr?`.","An async block: `async { ... }`.","A try block: `try { ... }`.","A yield expression: `yield expr`.","Tokens in expression position not interpreted by Syn.","A pattern that matches any value: `_`.","A pattern that binds a new variable: `ref mut binding @…","A struct or struct variant pattern: `Variant { x, y, .. }`.","A tuple struct or tuple variant pattern: `Variant(x, y,…","A path pattern like `Color::Red`, optionally qualified…","A tuple pattern: `(a, b)`.","A box pattern: `box v`.","A reference pattern: `&mut (first, second)`.","A literal pattern: `0`.","A range pattern: `1..=2`.","A dynamically sized slice pattern: `[a, b, i.., y, z]`.","A macro in expression position.","Tokens in pattern position not interpreted by Syn.","A generic type parameter: `T: Into<String>`.","A lifetime definition: `'a: 'b + 'c + 'd`.","A const generic parameter: `const LENGTH: usize`.","A type predicate in a `where` clause: `for<'c> Foo<'c>:…","A lifetime predicate in a `where` clause: `'a: 'b + 'c`.","An equality predicate in a `where` clause (unsupported).","Self captured by reference in a function signature:…","Self captured by value in a function signature: `self` or…","An explicitly typed pattern captured by a function…","A foreign function in an `extern` block.","A foreign static item in an `extern` block: `static ext:…","A foreign type in an `extern` block: `type void`.","A macro invocation within an extern block.","Tokens in an `extern` block not interpreted by Syn.","An associated constant within an impl block.","A method within an impl block.","An associated type within an impl block.","An existential type within an impl block.","A macro invocation within an impl block.","Tokens within an impl block not interpreted by Syn.","An `extern crate` item: `extern crate serde`.","A use declaration: `use std::collections::HashMap`.","A static item: `static BIKE: Shed = Shed(42)`.","A constant item: `const MAX: u16 = 65535`.","A free-standing function: `fn process(n: usize) ->…","A module or module declaration: `mod m` or `mod m { ... }`.","A block of foreign items: `extern \"C\" { ... }`.","A type alias: `type Result<T> = std::result::Result<T,…","Existential","An existential type: `existential type Iter: Iterator<Item…","A struct definition: `struct Foo<A> { x: A }`.","An enum definition: `enum Foo<A, B> { C<A>, D<B> }`.","A union definition: `union Foo<A, B> { x: A, y: B }`.","A trait definition: `pub trait Iterator { ... }`.","A trait alias: `pub trait SharableIterator = Iterator +…","An impl block providing trait or associated items:…","A macro invocation, which includes `macro_rules!`…","A 2.0-style declarative macro introduced by the `macro`…","Tokens forming an item not interpreted by Syn.","An associated constant within the definition of a trait.","A trait method within the definition of a trait.","An associated type within the definition of a trait.","A macro invocation within the definition of a trait.","Verbatim","Tokens within the definition of a trait not interpreted by…","A path prefix of imports in a `use` item: `std::...`.","An identifier imported by a `use` item: `HashMap`.","An renamed identifier imported by a `use` item: `HashMap…","A glob import in a `use` item: `*`.","A braced group of imports in a `use` item: `{A, B, C}`.","A UTF-8 string literal: `\"foo\"`.","A byte string literal: `b\"foo\"`.","A byte literal: `b'f'`.","A character literal: `'a'`.","An integer literal: `1` or `1u16`.","A floating point literal: `1f64` or `1.0e10f64`.","A boolean literal: `true` or `false`.","A raw token literal not interpreted by Syn, possibly…","A struct input to a `proc_macro_derive` macro.","An enum input to a `proc_macro_derive` macro.","A tagged union input to a `proc_macro_derive` macro.","A dynamically sized slice type: `[T]`.","A fixed size array type: `[T; n]`.","A raw pointer type: `*const T` or `*mut T`.","A reference type: `&'a T` or `&'a mut T`.","A bare function type: `fn(usize) -> bool`.","The never type: `!`.","A tuple type: `(A, B, C, String)`.","A path like `std::slice::Iter`, optionally qualified with…","A trait object type `Bound1 + Bound2 + Bound3` where…","An `impl Bound1 + Bound2 + Bound3` type where `Bound` is a…","A parenthesized type equivalent to the inner type.","A type contained within invisible delimiters.","Indication that a type should be inferred by the compiler:…","A macro in the type position.","Tokens in type position not interpreted by Syn.","A type argument.","An associated type bound: `Iterator<Item: Display>`.","A const expression. Must be inside of a block.","parsestream","floatsuffix","Parse the tokens within the macro invocation's delimiters…","without_plus","Creates a `TokenBuffer` containing all the tokens from the…","tokenbuffer","token_stream","Returns an iterator over the contents of this sequence as…","Appends a syntax tree node onto the end of this punctuated…","A trait that can provide the `Span` of the complete…","Syntax tree traversal to walk a shared borrow of a syntax…","visit_angle_bracketed_generic_arguments","anglebracketedgenericarguments","visit_arg_captured","argcaptured","visit_arg_self","visit_arg_self_ref","visit_attr_style","visit_attribute","visit_bare_fn_arg","visit_bare_fn_arg_name","barefnargname","visit_bin_op","visit_binding","visit_block","visit_bound_lifetimes","boundlifetimes","visit_const_param","visit_constraint","visit_data_enum","visit_data_struct","visit_data_union","visit_derive_input","visit_expr_array","visit_expr_assign","visit_expr_assign_op","exprassignop","visit_expr_async","visit_expr_binary","visit_expr_block","visit_expr_box","visit_expr_break","visit_expr_call","visit_expr_cast","visit_expr_closure","exprclosure","visit_expr_continue","exprcontinue","visit_expr_field","visit_expr_for_loop","exprforloop","visit_expr_group","visit_expr_if","visit_expr_in_place","exprinplace","visit_expr_index","visit_expr_let","visit_expr_lit","visit_expr_loop","visit_expr_macro","visit_expr_match","visit_expr_method_call","exprmethodcall","visit_expr_paren","visit_expr_path","visit_expr_range","visit_expr_reference","exprreference","visit_expr_repeat","visit_expr_return","visit_expr_struct","visit_expr_try","visit_expr_try_block","exprtryblock","visit_expr_tuple","visit_expr_type","visit_expr_unary","visit_expr_unsafe","visit_expr_verbatim","exprverbatim","visit_expr_while","visit_expr_yield","visit_field","visit_field_pat","visit_field_value","visit_fields","visit_fields_named","fieldsnamed","visit_fields_unnamed","fieldsunnamed","visit_fn_arg","visit_fn_decl","visit_foreign_item","foreignitem","visit_foreign_item_fn","foreignitemfn","visit_foreign_item_macro","foreignitemmacro","visit_foreign_item_static","foreignitemstatic","visit_foreign_item_type","foreignitemtype","visit_foreign_item_verbatim","foreignitemverbatim","visit_generic_argument","genericargument","visit_generic_method_argument","genericmethodargument","visit_generic_param","genericparam","visit_generics","visit_impl_item","visit_impl_item_const","implitemconst","visit_impl_item_existential","implitemexistential","visit_impl_item_macro","implitemmacro","visit_impl_item_method","implitemmethod","visit_impl_item_type","implitemtype","visit_impl_item_verbatim","implitemverbatim","visit_index","visit_item_const","visit_item_enum","visit_item_existential","itemexistential","visit_item_extern_crate","itemexterncrate","visit_item_fn","visit_item_foreign_mod","itemforeignmod","visit_item_impl","visit_item_macro","visit_item_macro2","visit_item_mod","visit_item_static","visit_item_struct","visit_item_trait","visit_item_trait_alias","itemtraitalias","visit_item_type","visit_item_union","visit_item_use","visit_item_verbatim","itemverbatim","visit_label","visit_lifetime","visit_lifetime_def","visit_lit_bool","visit_lit_byte","visit_lit_byte_str","visit_lit_char","visit_lit_float","visit_lit_int","visit_lit_str","visit_lit_verbatim","litverbatim","visit_local","visit_macro","visit_macro_delimiter","macrodelimiter","visit_member","visit_meta_list","visit_meta_name_value","metanamevalue","visit_method_sig","visit_method_turbofish","methodturbofish","visit_nested_meta","visit_parenthesized_generic_arguments","parenthesizedgenericarguments","visit_pat_box","visit_pat_ident","visit_pat_lit","visit_pat_macro","visit_pat_path","visit_pat_range","visit_pat_ref","visit_pat_slice","visit_pat_struct","visit_pat_tuple","visit_pat_tuple_struct","pattuplestruct","visit_pat_verbatim","patverbatim","visit_pat_wild","visit_path_arguments","patharguments","visit_path_segment","visit_predicate_eq","predicateeq","visit_predicate_lifetime","predicatelifetime","visit_predicate_type","predicatetype","visit_qself","visit_range_limits","rangelimits","visit_return_type","visit_trait_bound","visit_trait_bound_modifier","visit_trait_item","visit_trait_item_const","traititemconst","visit_trait_item_macro","traititemmacro","visit_trait_item_method","traititemmethod","visit_trait_item_type","traititemtype","visit_trait_item_verbatim","traititemverbatim","visit_type_array","visit_type_bare_fn","visit_type_group","visit_type_impl_trait","typeimpltrait","visit_type_infer","visit_type_macro","visit_type_never","visit_type_param","visit_type_param_bound","typeparambound","visit_type_paren","visit_type_path","visit_type_ptr","visit_type_reference","typereference","visit_type_slice","visit_type_trait_object","typetraitobject","visit_type_tuple","visit_type_verbatim","typeverbatim","visit_un_op","visit_use_glob","visit_use_group","visit_use_name","visit_use_path","visit_use_rename","visit_use_tree","visit_variant","visit_vis_crate","visit_vis_public","visit_vis_restricted","visrestricted","visit_visibility","visit_where_clause","visit_where_predicate","visit_ident","argselfref","attrstyle","barefnarg","constparam","constraint","datastruct","dataunion","exprarray","exprassign","exprasync","exprbinary","exprblock","exprbreak","exprfield","exprgroup","exprindex","exprmacro","exprmatch","exprparen","exprrange","exprrepeat","exprreturn","exprstruct","exprtuple","exprunary","exprunsafe","exprwhile","expryield","fieldvalue","itemconst","itemmacro","itemmacro2","itemstatic","itemstruct","itemtrait","itemunion","litbytestr","methodsig","nestedmeta","patstruct","returntype","traitbound","traititem","typearray","typebarefn","typegroup","typeinfer","typemacro","typenever","typeparam","typeparen","typeslice","typetuple","userename","vispublic","Syntax tree traversal to transform the nodes of an owned…","fold_angle_bracketed_generic_arguments","fold_arg_captured","fold_arg_self","fold_arg_self_ref","fold_attr_style","fold_attribute","fold_bare_fn_arg","fold_bare_fn_arg_name","fold_bin_op","fold_binding","fold_bound_lifetimes","fold_const_param","fold_constraint","fold_data_enum","fold_data_struct","fold_data_union","fold_derive_input","fold_expr_array","fold_expr_assign","fold_expr_assign_op","fold_expr_async","fold_expr_binary","fold_expr_block","fold_expr_box","fold_expr_break","fold_expr_call","fold_expr_cast","fold_expr_closure","fold_expr_continue","fold_expr_field","fold_expr_for_loop","fold_expr_group","fold_expr_if","fold_expr_in_place","fold_expr_index","fold_expr_let","fold_expr_lit","fold_expr_loop","fold_expr_macro","fold_expr_match","fold_expr_method_call","fold_expr_paren","fold_expr_path","fold_expr_range","fold_expr_reference","fold_expr_repeat","fold_expr_return","fold_expr_struct","fold_expr_try","fold_expr_try_block","fold_expr_tuple","fold_expr_type","fold_expr_unary","fold_expr_unsafe","fold_expr_verbatim","fold_expr_while","fold_expr_yield","fold_field_pat","fold_field_value","fold_fields","fold_fields_named","fold_fields_unnamed","fold_fn_arg","fold_fn_decl","fold_foreign_item","fold_foreign_item_fn","fold_foreign_item_macro","fold_foreign_item_static","fold_foreign_item_type","fold_foreign_item_verbatim","fold_generic_argument","fold_generic_method_argument","fold_generic_param","fold_generics","fold_impl_item","fold_impl_item_const","fold_impl_item_existential","fold_impl_item_macro","fold_impl_item_method","fold_impl_item_type","fold_impl_item_verbatim","fold_item_const","fold_item_enum","fold_item_existential","fold_item_extern_crate","fold_item_fn","fold_item_foreign_mod","fold_item_impl","fold_item_macro","fold_item_macro2","fold_item_mod","fold_item_static","fold_item_struct","fold_item_trait","fold_item_trait_alias","fold_item_type","fold_item_union","fold_item_use","fold_item_verbatim","fold_lifetime","fold_lifetime_def","fold_lit_bool","fold_lit_byte","fold_lit_byte_str","fold_lit_char","fold_lit_float","fold_lit_int","fold_lit_str","fold_lit_verbatim","fold_macro_delimiter","fold_member","fold_meta_list","fold_meta_name_value","fold_method_sig","fold_method_turbofish","fold_nested_meta","fold_parenthesized_generic_arguments","fold_pat_box","fold_pat_ident","fold_pat_lit","fold_pat_macro","fold_pat_path","fold_pat_range","fold_pat_ref","fold_pat_slice","fold_pat_struct","fold_pat_tuple","fold_pat_tuple_struct","fold_pat_verbatim","fold_pat_wild","fold_path_arguments","fold_path_segment","fold_predicate_eq","fold_predicate_lifetime","fold_predicate_type","fold_range_limits","fold_return_type","fold_trait_bound","fold_trait_bound_modifier","fold_trait_item","fold_trait_item_const","fold_trait_item_macro","fold_trait_item_method","fold_trait_item_type","fold_trait_item_verbatim","fold_type_array","fold_type_bare_fn","fold_type_group","fold_type_impl_trait","fold_type_infer","fold_type_macro","fold_type_never","fold_type_param","fold_type_param_bound","fold_type_paren","fold_type_path","fold_type_ptr","fold_type_reference","fold_type_slice","fold_type_trait_object","fold_type_tuple","fold_type_verbatim","fold_use_glob","fold_use_group","fold_use_name","fold_use_path","fold_use_rename","fold_use_tree","fold_variant","fold_vis_crate","fold_vis_public","fold_vis_restricted","fold_visibility","fold_where_clause","fold_where_predicate","Error returned when a Syn parser cannot parse the input…","Parse a proc-macro2 token stream into the chosen syntax…","Parse tokens of source code into the chosen syntax tree…","Parse a string of Rust code into the chosen syntax tree…","parse_terminated","Parses zero or more occurrences of `T` separated by…","punctuated","Triggers an error at the current position of the parse…","The result of a Syn parser.","syn::buffer","syn::punctuated","syn::token","metalist","viscrate","exprcall","exprcast","exprtype","exprloop","exprpath","patident","pattuple","patrange","patslice","patmacro","fieldpat","itemtype","itemenum","itemimpl","usegroup","implitem","litfloat","dataenum","typepath","existential","implgenerics","typegenerics","turbofish","intsuffix","underscore","Creates a new `Ident` with the given `string` as well as…","Returns the span of this `Ident`.","Configures the span of this `Ident`, possibly changing its…","visit_data","visit_expr","visit_file","visit_item","visit_meta","visit_path","visit_stmt","visit_type","visit_span","fold_block","fold_field","fold_index","fold_label","fold_local","fold_macro","fold_qself","fold_un_op","fold_ident","Looks at the next token in the parse stream to determine…","MetaNameValue","FieldsNamed","FieldsUnnamed","VisRestricted","ExprAssignOp","ExprClosure","ExprContinue","ExprForLoop","ExprInPlace","ExprMethodCall","ExprReference","ExprTryBlock","ExprVerbatim","MethodTurbofish","PatTupleStruct","PatVerbatim","BoundLifetimes","PredicateEq","PredicateLifetime","PredicateType","ArgCaptured","ForeignItemFn","ForeignItemMacro","ForeignItemStatic","ForeignItemType","ForeignItemVerbatim","ImplItemConst","ImplItemExistential","ImplItemMacro","ImplItemMethod","ImplItemType","ImplItemVerbatim","ItemExistential","ItemExternCrate","ItemForeignMod","ItemTraitAlias","ItemVerbatim","TraitItemConst","TraitItemMacro","TraitItemMethod","TraitItemType","TraitItemVerbatim","LitVerbatim","TypeImplTrait","TypeReference","TypeTraitObject","TypeVerbatim","AngleBracketedGenericArguments","Constraint","ParenthesizedGenericArguments","GenericMethodArgument","RangeLimits","GenericParam","TypeParamBound","ForeignItem","FloatSuffix","MacroDelimiter","BareFnArgName","GenericArgument","PathArguments","TypeGenerics","TokenBuffer","Punctuated","Speculative","ParseBuffer","A distribution to sample floating point numbers uniformly…","Sample values uniformly between two bounds.","new_inclusive","Create a new `Uniform` instance which samples uniformly…","bernoullierror","bernoulli","WeightedIndex","A distribution using weighted sampling to pick a…","weightederror","rand::distributions::weighted","weightedindex","rand::rngs","choose_multiple","sample_iter","Fill `dest` entirely with random bytes (uniform value…","rand::distributions::uniform","rand::distributions::weighted::alias_method","rand::rngs::adapter","rand::rngs::mock","rand::seq::index","sample_single","rand::seq","unitspheresurface","indexvecintoiter","BernoulliError","SampleUniform","UniformSampler","SampleBorrow","WeightedError","UnitSphereSurface","Distribution","SliceRandom","IteratorRandom","AsByteSliceMut","Alphanumeric","OpenClosed01","UniformFloat","UniformDuration","SliceChooseIter","IndexVecIter","IndexVecIntoIter","Error type of random number generators","Construct from any type supporting `std::error::Error`","Reference the inner error (`std` only)","Unwrap the inner error (`std` only)","Retrieve the error code, if any.","The core of a random number generator.","Return the next random `u32`.","Return the next random `u64`.","Fill `dest` entirely with random data.","A marker trait used to indicate that an [`RngCore`] or…","A random number generator that can be explicitly seeded.","Seed type, which is restricted to types…","Create a new PRNG using the given seed.","Create a new PRNG using a `u64` seed.","Create a new PRNG seeded from another `Rng`.","from_entropy","Creates a new instance of the RNG seeded via [`getrandom`].","Equality comparisons based on floating point tolerances.","Used for specifying relative comparisons.","default_epsilon","The default tolerance to use when testing values that are…","default_max_relative","The default relative tolerance for testing values that are…","default_max_ulps","The default ULPs to tolerate when testing values that are…","A test for equality that uses a relative comparison if the…","The inverse of `ApproxEq::relative_eq`.","A test for equality that uses units in the last place…","The inverse of `ApproxEq::ulps_eq`.","The relative tolerance for testing values that are…","The ULPs to tolerate when testing values that are far-apart.","assert_relative_eq","assert_ulps_ne","assert_ulps_eq","assert_relative_ne","The first column of the matrix.","The second column of the matrix.","The third column of the matrix.","The x component of the vector.","The y component of the vector.","The z component of the vector.","The short constructor.","basefloat","Get the pointer to the first element of the array.","Get a mutable pointer to the first element of the array.","swap_elements","as_mut_ptr","Swap the elements at indices `i` and `j` in-place.","The distance between two values.","is_perpendicular","Returns `true` if the vector is perpendicular (at right…","Returns the squared magnitude.","The distance from the tail to the tip of the vector.","Returns the angle between two vectors in radians.","Returns a vector with the same direction, but with a…","normalize_to","Returns a vector with the same direction and a given…","Returns the result of linearly interpolating the magnitude…","Returns the vector projection of the current inner space…","Returns the middle point between two other points.","Returns the average position of all points in the slice.","replace_col","Replace a column in the array.","The [identity matrix]. Multiplying this matrix with…","Return the trace of this matrix. That is, the sum of the…","is_invertible","Test if this matrix is invertible.","is_identity","Test if this matrix is the identity matrix. That is, it is…","normalize","Return the angle, normalized to the range `[0, full_turn)`.","Return the angle rotated by half a turn.","Returns the interior bisector of the two angles.","Half of a full rotation.","A third of a full rotation.","A quarter of a full rotation.","A sixth of a full rotation.","Compute the cosecant of the angle.","Compute the cotangent of the angle.","Compute the secant of the angle.","Create a new matrix, providing values for each index.","Create a new matrix, providing columns.","from_angle_x","from_angle_y","from_angle_z","from_axis_angle","Create a homogeneous transformation matrix that will cause…","Create a homogeneous transformation matrix from a rotation…","Component-wise casting to another type","quaternion","Component-wise casting to another type.","Construct a new vector, using the provided values.","Perform the given operation on each field in the vector,…","A unit vector in the `x` direction.","A unit vector in the `y` direction.","A unit vector in the `z` direction.","Construct a new point, using the provided values.","Perform the given operation on each field in the point,…","rotate_point","cgmath::prelude","Rotate a point using this rotation, by converting it to…","Create a rotation from an angle around the `x` axis (pitch).","Create a rotation from an angle around the `y` axis (yaw).","Create a rotation from an angle around the `z` axis (roll).","inverse_transform_vector","Inverse transform a vector using this transform","concat_self","Combine this transform with another, in-place.","perspective","An array containing elements of type `Element`","Get the number of elements in the array type","from_value","Construct a vector from a single value, replicating it.","The sum of the elements of the array.","The product of the elements of the array.","ElementWise","Element-wise arithmetic operations. These are supplied for…","add_element_wise","sub_element_wise","mul_element_wise","div_element_wise","rem_element_wise","add_assign_element_wise","sub_assign_element_wise","mul_assign_element_wise","div_assign_element_wise","rem_assign_element_wise","VectorSpace","Vectors that can be added together and multiplied by…","The associated scalar.","MetricSpace","A type with a distance function between values.","The metric to be returned by the `distance` function.","Returns the squared distance.","Vectors that also have a dot (or inner) product.","Vector dot (or inner) product.","magnitude2","project_on","EuclideanSpace","Points in a Euclidean space with an associated space of…","The associated scalar over which the space is defined.","The associated space of displacement vectors.","The point at the origin of the Euclidean space.","Convert a displacement vector to a point.","Convert a point to a displacement vector.","This is a weird one, but its useful for plane calculations.","A column-major matrix of arbitrary dimensions.","The row vector of the matrix.","The column vector of the matrix.","The result of transposing the matrix","Get a row from this matrix by-value.","Swap two rows of this array.","swap_columns","Swap two columns of this array.","Swap the values at index `a` and `b`","Transpose this matrix, returning a new matrix.","SquareMatrix","A column-major major matrix where the rows and column…","The row/column vector of the matrix.","Create a new diagonal matrix using the supplied value.","from_diagonal","Create a matrix from a non-uniform scale","transpose_self","Transpose this matrix in-place.","determinant","Take the determinant of this matrix.","Return a vector containing the diagonal of this matrix.","Invert this matrix, returning a new matrix.…","is_diagonal","Test if this is a diagonal matrix. That is, every element…","is_symmetric","Test if this matrix is symmetric. That is, it is equal to…","Angles and their associated trigonometric functions.","A full rotation.","turn_div_2","turn_div_3","turn_div_4","turn_div_6","Compute the sine of the angle, returning a unitless ratio.","Compute the cosine of the angle, returning a unitless ratio.","Compute the tangent of the angle, returning a unitless…","Compute the sine and cosine of the angle, returning the…","Compute the arcsine of the ratio, returning the resulting…","Compute the arccosine of the ratio, returning the…","Compute the arctangent of the ratio, returning the…","A trait for a generic rotation. A rotation is a…","Create a rotation to a given direction with an 'up' vector.","between_vectors","Create a shortest rotation to transform vector 'a' into…","rotate_vector","Rotate a vector using this rotation.","Create a new rotation which \"un-does\" this rotation. That…","A two-dimensional rotation.","from_angle","Create a rotation by a given angle. Thus is a redundant…","A three-dimensional rotation.","Create a rotation using an angle around a given axis.","A trait representing an affine transformation that can be…","Create an identity transformation. That is, a…","Create a transformation that rotates a vector to look at…","transform_vector","Transform a vector using this transform.","transform_point","Transform a point using this transform.","Combine this transform with another, yielding a new…","inverse_transform","Create a transform that \"un-does\" this one.","distance2","swap_rows","transpose","full_turn","decomposed","perspectivefov","Clone the elements of a 2-dimensional matrix into the…","div_assign","rem_assign","iterator","The beginning of a chained equality expression, using a…","Replace the maximum relative value with the one specified.","The beginning of a chained equality expression, using an…","Replace the max ulps value with the one specified.","PerspectiveFov","Perspective","InnerSpace","Represents a fork-join scope which can be used to spawn…","Fires off a task into the Rayon threadpool in the \"static\"…","Spawns a job into the fork-join scope `self`. This job…","configuration","current_num_threads","current_thread_index","current_thread_has_pending_tasks","Creates a scope that executes within this thread-pool.…","spawn_fifo","Spawns an asynchronous task in this thread-pool. This task…","threadpool","threadpoolbuilderror","customspawn","stack_size","Deprecated in favor of `ThreadPoolBuilder::build`.","thread_name","num_threads","panic_handler","breadth_first","start_handler","exit_handler","ThreadBuilder","ThreadPoolBuilder","Configuration","ThreadPoolBuildError","Appends the two values, which are required to be metadata…","Build a module from the bitcode in the specified memory…","Read a module from the specified path, returning a module…","Add a module-level flag to the module-level flags metadata…","Remove the given instruction from its containing building…","Deprecated: LLVM threading is configured at compile-time…","llvm_sys","Added in LLVM 3.7.","Return the number of object files produced by the code…","Returns 1 on failure.","llvm_sys::transforms","LLVMAddInstructionCombiningPass","llvm_sys::analysis","llvm_sys::comdat","llvm_sys::debuginfo","llvm_sys::disassembler","llvm_sys::error","llvm_sys::execution_engine","llvm_sys::link_time_optimizer","llvm_sys::linker","llvm_sys::lto","llvm_sys::object","llvm_sys::opt_remarks","llvm_sys::orc","llvm_sys::target","llvm_sys::target_machine","llvm_sys::transforms::pass_manager_builder","llvm_lto_status_t","lto_symbol_attributes","lto_debug_model","lto_codegen_model","lto_codegen_diagnostic_severity_t","llvmverifierfailureaction","llvmcomdatselectionkind","llvmbyteordering","llvmcodegenoptlevel","llvmrelocmode","llvmcodemodel","llvmcodegenfiletype","llvmtypekind","llvmlinkage","llvmvisibility","llvmunnamedaddr","llvmdllstorageclass","llvmcallconv","llvmvaluekind","llvmintpredicate","llvmrealpredicate","llvmlandingpadclausety","llvmthreadlocalmode","llvmatomicordering","llvmatomicrmwbinop","llvmdiagnosticseverity","llvminlineasmdialect","llvmmoduleflagbehavior","LLVMTypeKind","LLVMLinkage","LLVMVisibility","LLVMUnnamedAddr","LLVMDLLStorageClass","LLVMCallConv","LLVMValueKind","LLVMIntPredicate","LLVMRealPredicate","LLVMLandingPadClauseTy","LLVMThreadLocalMode","LLVMAtomicOrdering","LLVMAtomicRMWBinOp","LLVMDiagnosticSeverity","LLVMInlineAsmDialect","LLVMModuleFlagBehavior","LLVMVerifierFailureAction","LLVMComdatSelectionKind","LLVMDIFlags","LLVMDWARFSourceLanguage","LLVMDWARFEmissionKind","LLVMMetadataKind","LLVMOpInfoSymbol1","Struct_LLVMOpInfo1","LLVMMCJITCompilerOptions","LLVMLinkerMode","LLVMByteOrdering","LLVMCodeGenOptLevel","LLVMRelocMode","LLVMCodeModel","LLVMCodeGenFileType","LLVMMemoryBuffer","LLVMContext","LLVMBasicBlock","LLVMOpaqueMetadata","LLVMOpaqueNamedMDNode","LLVMOpaqueValueMetadataEntry","LLVMBuilder","LLVMOpaqueDIBuilder","LLVMModuleProvider","LLVMPassManager","LLVMPassRegistry","LLVMDiagnosticInfo","LLVMOpaqueModuleFlagEntry","LLVMOpaqueJITEventListener","LLVMOpaqueAttributeRef","LLVMOpaqueDisasmContext","LLVMOpaqueError","LLVMOpaqueGenericValue","LLVMOpaqueExecutionEngine","LLVMOpaqueMCJITMemoryManager","LTOObjectBuffer","LLVMOpaqueLTOModule","LLVMOpaqueLTOCodeGenerator","LLVMOpaqueThinLTOCodeGenerator","LLVMOpaqueObjectFile","LLVMOpaqueSectionIterator","LLVMOpaqueSymbolIterator","LLVMOpaqueRelocationIterator","LLVMOptRemarkStringRef","LLVMOptRemarkDebugLoc","LLVMOptRemarkArg","LLVMOptRemarkEntry","LLVMOptRemarkOpaqueParser","LLVMOrcOpaqueJITStack","LLVMOpaqueTargetData","LLVMOpaqueTargetLibraryInfotData","LLVMOpaqueTargetMachine","LLVMOpaquePassManagerBuilder","An await expression: `fut.await`.","The `self` argument of an associated method, whether taken…","An enum definition: `enum Foo<A, B> { A(A), B(B) }`.","An untagged union input to a `proc_macro_derive` macro.","A macro in pattern position.","A pattern that matches any one of a set of cases.","A reference pattern: `&mut var`.","The dots in a tuple or slice pattern: `[0, 1, ..]`","A dynamically sized slice pattern: `[a, b, ref i @ .., y,…","A type ascription pattern: `foo: f64`.","base10_digits","base10_parse","visit_expr_await","visit_pat_or","visit_pat_reference","patreference","visit_pat_rest","visit_pat_type","visit_receiver","visit_signature","visit_variadic","exprawait","signature","fold_expr_await","fold_pat_or","fold_pat_reference","fold_pat_rest","fold_pat_type","fold_receiver","receiver","fold_signature","fold_variadic","variadic","PatReference","discriminant","Runs the passed-in function once for each bound field,…","referenced_ty_params","Returns a list of the type parameters which are referenced…","Returns a reference to the underlying `syn` AST node which…","Updates the `BindStyle` for each of the passed-in fields…","binding_name","Updates the binding name for each fo the passed-in fields…","NOTE: This methods' features are superceded by…","addbounds","bindinginfo","variantast","variantinfo","BindingInfo","VariantInfo","set_override","unset_override","coloredstring","colored::control","bright_black","bright_green","bright_yellow","bright_blue","bright_magenta","bright_purple","bright_cyan","bright_white","on_bright_black","on_bright_red","on_bright_green","on_bright_yellow","on_bright_blue","on_bright_magenta","on_bright_purple","on_bright_cyan","on_bright_white","shouldcolorize","ShouldColorize","ColoredString","SHOULD_COLORIZE","initialize","rayon::collections","This module contains the parallel iterator types for…","Parallel iterator over an immutable reference to a B-Tree…","This module contains the parallel iterator types for hash…","The enum `Either` with variants `Left` and `Right` is a…","A value of type `L`.","A value of type `R`.","Iterate the producer, feeding each element to `folder`,…","rayon::iter","Converts `self` into a parallel iterator.","Reduces the items in the iterator into one item using…","Reduces the items in the iterator into one item using a…","Applies the given predicate to the items in the parallel…","Searches for some item in the parallel iterator that…","intersperse","Internal method used to define the behavior of this…","Interleave elements of this iterator and the other given…","Lexicographically compares the elements of this…","Determines if the elements of this `ParallelIterator` are…","Searches for the sequentially first item in the parallel…","Searches for the sequentially last item in the parallel…","ParallelBridge","Conversion trait to convert an `Iterator` to a…","Create a bridge from this type to a `ParallelIterator`.","Returns a parallel iterator over at most `chunk_size`…","Returns a parallel iterator over substrings that match a…","into_par_iter","rayon::collections::binary_heap","rayon::collections::btree_map","rayon::collections::btree_set","rayon::collections::hash_map","rayon::collections::hash_set","rayon::collections::linked_list","rayon::collections::vec_deque","rayon::option","rayon::range","rayon::range_inclusive","rayon::result","rayon::slice","read_to_end","defaultspawn","drive_unindexed","rayon::str","rayon::vec","with_producer","consumer","iterbridge","tryfoldwith","interleave","interleaveshortest","charindices","encodeutf16","splitterminator","splitwhitespace","matchindices","threadpoolbuilder","Return true if the value is the `Left` variant.","Return true if the value is the `Right` variant.","Convert the left side of `Either<L, R>` to an `Option<L>`.","Convert the right side of `Either<L, R>` to an `Option<R>`.","Convert `&Either<L, R>` to `Either<&L, &R>`.","Convert `&mut Either<L, R>` to `Either<&mut L, &mut R>`.","Convert `Either<L, R>` to `Either<R, L>`.","Apply one of two functions depending on contents, unifying…","either_with","Like `either`, but provide some context to whichever of…","left_and_then","right_and_then","Convert the inner value to an iterator.","Return left value or given value","left_or_default","Return left or a default","left_or_else","Return right value or given value","right_or_default","Return right or a default","right_or_else","factor_first","factor_second","Extract the value of an either over two equivalent types.","ProducerCallback","UnindexedConsumer","UnindexedProducer","IntoParallelIterator","IntoParallelRefIterator","IntoParallelRefMutIterator","ParallelIterator","IndexedParallelIterator","FromParallelIterator","ParallelExtend","ParallelSlice","ParallelSliceMut","ParallelString","TryFoldWith","InterleaveShortest","Intersperse","CharIndices","EncodeUtf16","SplitTerminator","SplitWhitespace","MatchIndices","Thread builder used for customization via…","ThreadPool","Represents a user created [thread-pool].","Error when initializing a thread pool.","Used to create a new [`ThreadPool`] or to configure the…","Provides the calling context to a closure called by…","Takes two closures and potentially runs them in parallel.…","join_context","Identical to `join`, except that the closures have a…","Create a \"fork-join\" scope `s` and invokes the closure…","scope_fifo","Create a \"fork-join\" scope `s` with FIFO order, and…","If called from a Rayon worker thread, returns the index of…","Returns the number of threads in the current registry. If…","Get the index of this thread in the pool, within…","Get the string that was specified by…","Get the value that was specified by…","Execute the main loop for this thread. This will not…","Executes `op` within the threadpool. Any attempts to use…","Returns the (current) number of threads in the thread pool.","If called from a Rayon worker thread in this thread-pool,…","Returns true if the current worker thread currently has…","Execute `oper_a` and `oper_b` in the thread-pool and…","Creates and returns a valid rayon thread pool builder, but…","Create a new `ThreadPool` initialized using this…","build_global","Initializes the global thread pool. This initialization is…","build_scoped","Create a scoped `ThreadPool` initialized using this…","spawn_handler","Set a custom function for spawning threads.","Set a closure which takes a thread index and returns the…","Set the number of threads to be used in the rayon…","Normally, whenever Rayon catches a panic, it tries to…","Set the stack size of the worker threads","(DEPRECATED) Suggest to worker threads that they execute…","Set a callback to be invoked on thread start.","Set a callback to be invoked on thread exit.","Returns `true` if the closure was called from a different…","ScopeFifo","FnContext","Define your own PhantomData and similarly behaved unit…","scroll::Error","Reads a value from `self` at `offset` with a default…","tryfromctx","Trys to write `inout.len()` `N`s into `inout` from `Self`…","tryintoctx","Writes the type `N` into `Self`, with the parsing context…","scroll::ctx","try_from_ctx","Reads a value from `self` at `offset` with the given `ctx`…","Reads a value from `self` at `offset` with the given…","gread_inout","gread_inout_with","pwrite_with","Write `N` at offset `I` with context `Ctx` # Example ```…","Write `n` into `self` at `offset`, with a default `Ctx`.…","gwrite_with","Write `n` into `self` at `offset`, with the `ctx`. Updates…","Reads a value from `Self` at `offset` with `ctx`. Cannot…","Reads a value implementing `FromCtx` from `Self` at…","Writes `n` into `Self` at `offset`; uses default context.…","cwrite_with","Writes `n` into `Self` at `offset` with `ctx`","Reads the type `N` from `Self`, with a default parsing…","ioread_with","Reads the type `N` from `Self`, with the parsing context…","sizewith","iowrite_with","MeasureWith","Attempts to downcast this `Error` to a particular `Fail`…","Returns a reference to the underlying cause of this…","downcast_ref","downcast_mut","Attempts to downcast this failure to a concrete type by…","find_root_cause","iter_causes","Returns a iterator over all fails up the chain from the…","Deprecated alias to `find_root_cause`.","Backtrace","SyncFailure","Build `App`, `Arg`s, `SubCommand`s and `Group`s with…","Used to create a representation of a command line program…","crate_version","Allows you to pull the version from your Cargo.toml at…","crate_description","Allows you to pull the description from your Cargo.toml at…","Command Line Argument Parser Error","Formatted error message","The type of error","Any additional information passed along, such as the…","The abstract representation of a command line argument.…","Short hand for [`Result`] type","Describes which shell to produce a completions file for","Generates a .bash completion file for the Bourne Again…","Generates a .fish completion file for the Friendly…","Generates a completion file for the Z SHell (ZSH)","Generates a completion file for PowerShell","Generates a completion file for Elvish","Allows you to pull the name from your Cargo.toml at…","values_t_or_exit","crate_authors","Allows you to pull the authors for the app from your…","Various settings that apply to arguments and may be set,…","The argument must be used","The argument may be used multiple times such as `--flag…","EmptyValues","The argument allows empty values such as `--option \"\"`","The argument should be propagated down through all child…","The argument should not be shown in help text","The argument accepts a value, such as `--option <value>`","UseValueDelimiter","Determines if the argument allows values to be grouped via…","Prints the help text on the line after the argument","RequireDelimiter","Requires the use of a value delimiter for all multiple…","HidePossibleValues","Hides the possible values from the help string","Allows vals that start with a '-'","RequireEquals","Require options use `--option=val` syntax","Specifies that the arg is the last positional argument and…","HideDefaultValue","Hides the default value from the help string","Makes `Arg::possible_values` case insensitive","HideEnvValues","Hides ENV values in the help message","HiddenShortHelp","The argument should not be shown in short help text","HiddenLongHelp","The argument should not be shown in long help text","value_t_or_exit","_clap_count_exprs","Counts the number of comma-delimited expressions passed to…","app_from_crate","Allows you to build the `App` instance from your…","SubCommand","The abstract representation of a command line subcommand.","ArgMatches","Used to get information about the arguments that where…","Convenience macro to generate more complete enums with…","Application level settings, which affect how [`App`]…","AllowInvalidUtf8","Specifies that any invalid UTF-8 code points should not be…","AllArgsOverrideSelf","Essentially sets [`Arg::overrides_with(\"itself\")`] for all…","Specifies that leading hyphens are allowed in argument…","AllowNegativeNumbers","Allows negative numbers to pass as values. This is similar…","AllowMissingPositional","Allows one to implement two styles of CLIs where…","AllowExternalSubcommands","Specifies that an unexpected positional argument, which…","ArgsNegateSubcommands","Specifies that use of a valid [argument] negates…","ArgRequiredElseHelp","Specifies that the help text should be displayed (and then…","ColoredHelp","Uses colorized help messages.","Enables colored output only when the output is going to a…","ColorAlways","Enables colored output regardless of whether or not the…","Disables colored output no matter if the output is going…","DontCollapseArgsInUsage","Disables the automatic collapsing of positional args into…","DontDelimitTrailingValues","Disables the automatic delimiting of values when `--` or…","DisableHelpFlags","Disables `-h` and `--help` [`App`] without affecting any…","DisableHelpSubcommand","Disables the `help` subcommand","DisableVersion","Disables `-V` and `--version` [`App`] without affecting…","DeriveDisplayOrder","Displays the arguments and [`SubCommand`]s in the help…","GlobalVersion","Specifies to use the version of the current command for…","Specifies that this [`SubCommand`] should be hidden from…","HidePossibleValuesInHelp","Tells `clap` not to print possible values when displaying…","InferSubcommands","Tries to match unknown args to partial [`subcommands`] or…","NoBinaryName","Specifies that the parser should not assume the first…","Places the help string for all arguments on the line after…","PropagateGlobalValuesDown","DEPRECATED: This setting is no longer required in order to…","SubcommandsNegateReqs","Allows [`SubCommand`]s to override all requirements of the…","SubcommandRequiredElseHelp","Specifies that the help text should be displayed (before…","Specifies that any invalid UTF-8 code points should be…","SubcommandRequired","Allows specifying that if no [`SubCommand`] is present at…","TrailingVarArg","Specifies that the final positional argument is a \"VarArg\"…","UnifiedHelpMessage","Groups flags and options together, presenting a more…","VersionlessSubcommands","Disables `-V` and `--version` for all [`SubCommand`]s…","WaitOnError","Will display a message \"Press [ENTER]/[RETURN] to…","`ArgGroup`s are a family of related [arguments] and way…","Command line argument parser kind of error","InvalidValue","Occurs when an [`Arg`] has a set of possible values, and…","UnknownArgument","Occurs when a user provides a flag, option, argument or…","InvalidSubcommand","UnrecognizedSubcommand","Occurs when the user provides an empty value for an option…","ValueValidation","Occurs when the user provides a value for an argument with…","TooManyValues","Occurs when a user provides more values for an argument…","TooFewValues","Occurs when the user provides fewer values for an argument…","WrongNumberOfValues","Occurs when the user provides a different number of values…","ArgumentConflict","Occurs when the user provides two values which conflict…","MissingRequiredArgument","Occurs when the user does not provide one or more required…","MissingSubcommand","Occurs when a subcommand is required (as defined by…","MissingArgumentOrSubcommand","Occurs when either an argument or [`SubCommand`] is…","UnexpectedMultipleUsage","Occurs when the user provides multiple values to an…","Occurs when the user provides a value containing invalid…","HelpDisplayed","Not a true \"error\" as it means `--help` or similar was…","VersionDisplayed","Not a true \"error\" as it means `--version` or similar was…","ArgumentNotFound","Occurs when using the [`value_t!`] and [`values_t!`]…","Represents an [I/O error]. Can occur when writing to…","Represents a [Format error] (which is a part of…","Gets the struct from any iterator such as a `Vec` of your…","structopt::clap","arggroup","Creates a new instance of an application requiring a name.…","Get the name of the app","get_bin_name","Get the name of the binary","with_defaults","Creates a new instance of an application requiring a name,…","Sets a string of author(s) that will be displayed to the…","Overrides the system-determined binary name. This should…","Sets the program's name. This will be displayed when…","before_help","long_version","Sets a custom usage string to override the auto-generated…","Sets a custom help message and overrides the…","Sets the [`short`] for the auto-generated `help` argument.","version_short","Sets the [`short`] for the auto-generated `version`…","help_message","Sets the help text for the auto-generated `help` argument.","version_message","Sets the help text for the auto-generated `version`…","Sets the help template to be used, overriding the default…","Enables a single command, or [`SubCommand`], level settings.","Enables multiple command, or [`SubCommand`], level settings","global_setting","Enables a single setting that is propagated down through…","global_settings","Enables multiple settings which are propagated down…","unset_setting","Disables a single command, or [`SubCommand`], level setting.","unset_settings","Disables multiple command, or [`SubCommand`], level…","set_term_width","Sets the terminal width at which to wrap help messages.…","max_term_width","Sets the max terminal width at which to wrap help…","Adds an [argument] to the list of valid possibilities.","Adds multiple [arguments] to the list of valid possibilities","arg_from_usage","A convenience method for adding a single [argument] from a…","args_from_usage","Adds multiple [arguments] at once from a usage string, one…","Allows adding a [`SubCommand`] alias, which function as…","Allows adding [`SubCommand`] aliases, which function as…","Allows adding a [`SubCommand`] alias that functions…","Allows adding multiple [`SubCommand`] aliases that…","Adds an [`ArgGroup`] to the application. [`ArgGroup`]s are…","Adds multiple [`ArgGroup`]s to the [`App`] at once.","Adds a [`SubCommand`] to the list of valid possibilities.…","subcommands","Adds multiple subcommands to the list of valid…","Allows custom ordering of [`SubCommand`]s within the help…","print_long_help","write_long_help","write_version","write_long_version","gen_completions","gen_completions_to","get_matches","Starts the parsing process, upon a failed parse an error…","get_matches_safe","Starts the parsing process. This method will return a…","get_matches_from","Starts the parsing process. Like [`App::get_matches`] this…","get_matches_from_safe","Starts the parsing process. A combination of…","get_matches_from_safe_borrow","Starts the parsing process without consuming the [`App`]…","Should the message be written to `stdout` or not","Prints the error to `stderr` and exits with a status of `1`","with_description","Create an error with a custom description.","with_name","Creates a new instance of [`Arg`] using a unique string…","Creates a new instance of [`Arg`] from a usage string.…","Sets the short version of the argument without the…","Sets the long version of the argument without the…","Allows adding a [`Arg`] alias, which function as \"hidden\"…","Allows adding [`Arg`] aliases, which function as \"hidden\"…","Allows adding a [`Arg`] alias that functions exactly like…","Allows adding multiple [`Arg`] aliases that functions…","Sets the short help text of the argument that will be…","Sets the long help text of the argument that will be…","Specifies that this arg is the last, or final, positional…","Sets whether or not the argument is required by default.…","require_equals","Requires that options use the `--option=val` syntax (i.e.…","allow_hyphen_values","Allows values which start with a leading hyphen (`-`)","required_unless","Sets an arg that override this arg's required setting.…","required_unless_all","Sets args that override this arg's required setting. (i.e.…","required_unless_one","Sets args that override this arg's [required] setting.…","Sets a conflicting argument by name. I.e. when using this…","The same as [`Arg::conflicts_with`] but allows specifying…","overrides_with","Sets a overridable argument by name. I.e. this argument…","overrides_with_all","Sets multiple mutually overridable arguments by name. I.e.…","Sets an argument by name that is required when this one is…","requires_if","Allows a conditional requirement. The requirement will…","requires_ifs","Allows multiple conditional requirements. The requirement…","required_if","Allows specifying that an argument is [required]…","required_ifs","Allows specifying that an argument is [required] based on…","Sets multiple arguments by names that are required when…","takes_value","Specifies that the argument takes a value at run time.","hide_possible_values","Specifies if the possible values of an argument should be…","hide_default_value","Specifies if the default value of an argument should be…","Specifies the index of a positional argument starting at 1.","Specifies that the argument may appear more than once. For…","value_terminator","Specifies a value that stops parsing multiple values of a…","Specifies that an argument can be matched to all child…","empty_values","Allows an argument to accept explicitly empty values. An…","Hides an argument from help message output.","possible_values","Specifies a list of possible values for this argument. At…","possible_value","Specifies a possible value for this argument, one at a…","When used with [`Arg::possible_values`] it allows the…","Specifies the name of the [`ArgGroup`] the argument…","Specifies the names of multiple [`ArgGroup`]'s the…","number_of_values","Specifies how many values are required to satisfy this…","Allows one to perform a custom validation on the argument…","validator_os","Works identically to Validator but is intended to be used…","Specifies the maximum number of values are for this…","Specifies the minimum number of values for this argument.…","use_delimiter","Specifies whether or not an argument should allow grouping…","require_delimiter","Specifies that multiple values may only be set using the…","value_delimiter","Specifies the separator to use when values are clumped…","value_names","Specify multiple names for values of option arguments.…","Specifies the name for value of [option] or [positional]…","default_value","Specifies the value of the argument when not specified at…","default_value_os","Provides a default value in the exact same manner as…","default_value_if","Specifies the value of the argument if `arg` has been used…","default_value_if_os","Provides a conditional default value in the exact same…","default_value_ifs","Specifies multiple values and conditions in the same…","default_value_ifs_os","Provides multiple conditional default values in the exact…","hide_env_values","@TODO @p2 @docs @release: write docs","next_line_help","When set to `true` the help string will be displayed on…","Allows custom ordering of args within the help message.…","Indicates that all parameters passed after this should not…","hidden_short_help","Hides an argument from short help message output.","hidden_long_help","Hides an argument from long help message output.","Checks if one of the [`ArgSettings`] settings is set for…","Sets one of the [`ArgSettings`] settings for the argument.","Unsets one of the [`ArgSettings`] settings for the argument.","A list of possible variants in `&'static str` form","Creates a new instance of a subcommand requiring a name.…","Gets the value of a specific [option] or [positional]…","value_of_lossy","Gets the lossy value of a specific argument. If the…","value_of_os","Gets the OS version of a string value of a specific…","Gets a [`Values`] struct which implements [`Iterator`] for…","values_of_lossy","Gets the lossy values of a specific argument. If the…","values_of_os","Gets a [`OsValues`] struct which is implements…","osvalues","Returns `true` if an argument was present at runtime,…","occurrences_of","Returns the number of times an argument was used at…","Gets the starting index of the argument in respect to all…","Gets all indices of the argument in respect to all other…","subcommand_matches","subcommand_name","This brings together [`ArgMatches::subcommand_matches`]…","Returns a string slice of the usage statement for the…","Creates a new instance of `ArgGroup` using a unique string…","Adds an [argument] to this group by name","Adds multiple [arguments] to this group by name","Allows more than one of the ['Arg']s in this group to be…","Sets the group as required or not. A required group will…","Sets the exclusion rules of this group. Exclusion (aka…","Sets the exclusion rules of this group. Exclusion rules…","WabtParseWatResult","WabtParseWastResult","WabtWriteModuleResult","WabtReadBinaryResult","OutputBuffer","WabtWriteScriptResult","A custom Goblin error","e_phentsize","e_shentsize","goblin::elf::header","Magic number and other info","Object file type","Architecture","Object file version","Entry point virtual address","Program header table file offset","Section header table file offset","Processor-specific flags","ELF header size in bytes","Program header table entry size","Program header table entry count","Section header table entry size","Section header table entry count","e_shstrndx","Section header string table index","SIZEOF_EHDR","Returns the corresponding ELF header from the given byte…","Load a header from a file. You must ensure the seek is at…","Parses an ELF header from the given bytes","container","goblin::elf","ProgramHeader","programheader","goblin::elf::program_header","Segment type","Segment flags","Segment file offset","Segment virtual address","Segment physical address","Segment size in file","Segment size in memory","Segment alignment","SIZEOF_PHDR","from_raw_parts","Sun Specific segment","End of OS-specific","Return the size of the underlying program header, given a…","SectionHeader","Section name (string tbl index)","Section type","Section flags","Section virtual addr at execution","Section file offset","Section size in bytes","Link to another section","Additional section information","sh_addralign","Section alignment","Entry size if section holds table","sectionheader","goblin::elf::section_header","Section Headers are typically used by humans and static…","sh_entsize","SIZEOF_SHDR","Number of defined types.","Start of processor-specific.","End of processor-specific.","is_executable","CompressionHeader","Compression format","Uncompressed data size","ch_addralign","Uncompressed data alignment","compressionheader","goblin::elf::compression_header","The compression header is used at the start of…","SIZEOF_CHDR","Start of OS-specific.","End of OS-specific.","goblin::elf::sym","Symbol name (string tbl index)","Symbol type and binding","Symbol visibility","Section index","Symbol value","Symbol size","Checks whether this `Sym` has `STB_GLOBAL`/`STB_WEAK` bind…","is_function","Checks whether this `Sym` has type `STT_FUNC`","is_import","Get the ST bind.","Get the ST type.","st_visibility","Get the ST visibility.","DynamicInfo","Important dynamic linking info generated via a single pass…","init_arraysz","fini_arraysz","needed_count","goblin::elf::dynamic","An entry in the dynamic array","Dynamic entry type","Integer value","verneednum","init_array","fini_array","Returns a vector of dynamic entries from the given fd and…","from_raw","Given a bias and a memory address (typically for a…","Maybe gets and returns the dynamic array with the same…","Gets the needed libraries from the `_DYNAMIC` array, with…","dynamicinfo","Start of OS-specific","Start of processor-specific","End of processor-specific","goblin::elf::reloc","Relocation with an explicit addend","Relocation type and symbol index","Relocation without an addend","relocation type and symbol address","from_raw_rela","Gets the rela entries given a rela pointer and the size of…","from_raw_rel","Gets the rel entries given a rel pointer and the size of…","SIZEOF_RELA","Offset in initial TLS block.","Load from 32 bit signed pc relative offset to GOT entry…","Direct 32 bit","Copy symbol at runtime","Create GOT entry","Create PLT entry","Adjust by program base","Likewise for MOVK; no check","Likewise; MOVK; no check","Likewise; no check","GOT-rel. MOV{N,Z} 31:16","Likewise; no ovfl. check","TLS Descriptor","STT_GNU_IFUNC relocation","PC relative 32 bit","ID of module containing symbol","Offset in TLS block","Offset in static TLS block","32 bit offset to GOT","32 bit PC relative offset to GOT","32 bit GOT entry","Deprecated, prog. base relative","PC relative (ADD, SUB)","PC relative (LDR,STR,LDRB,STRB)","PC relative (STR{D,H},LDR{D,SB,H,SH})","PC relative (LDC, STC)","Program base relative (ADD,SUB)","Program base relative (LDR, STR, LDRB, STRB)","Program base relative (LDC,STC)","Program base relative 16 bit (MOVW)","Program base relative 16 bit (Thumb32 MOVW)","Keep this the last entry","Direct 16 bit","TP-relative offset, 64 bit","Local label subtraction","relocsection","Note section contents. Each entry in the note section…","Length of the note's name (includes the terminator)","type_to_str","RelocSection","noteiterator","GNU hash function: takes a string and returns the u32 hash…","Given a name, a hash of that name, a strtab to…","little_endian","mach magic number identifier","cpu specifier","machine specifier","type of file","number of load commands","the size of all the load commands","When this bit is set, the binary declares it is safe for…","Transmutes the given byte array into the corresponding…","goblin::mach","An alias for u32","goblin::mach::constants","template of initial  values for TLVs","string table","fatheader","Returns the cpu type","Returns the cpu subtype with the capabilities removed","Returns the capabilities of the CPU","name of this section","segment this section goes in","memory address of this section","size in bytes of this section","file offset of this section","section alignment (power of 2)","file offset of relocation entries","number of relocation entries","reserved (for offset or index)","reserved (for count or sizeof)","includes pathname string","the library identification","library's path name","total size of this command","init_address","address of initialization routine","init_module","index into the module table that the init routine is…","reserved1","reserved2","number of externally defined symbols","number of local symbols","number of external relocation entries","module_name","the module name (index into string table)","iextdefsym","index into externally defined symbols","nextdefsym","index into reference symbol table","number of reference symbol table entries","index into symbols for local symbols","index into external relocation entries","iinit_iterm","low 16 bits are the index into the init section, high 16…","ninit_nterm","low 16 bits are the number of init section entries, high…","objc_module_info_size","the (__OBJC,__module_info) section","objc_module_info_addr","file offset of encrypted range","file size of encrypted range","which enryption system, 0 means not-encrypted yet","X.Y.Z is encoded in nibbles xxxx.yy.zz","file offset to lazy binding info","size of lazy binding infs","header_addr","LC_PREBOUND_DYLIB","LC_ROUTINES","LC_SUB_FRAMEWORK","LC_SUB_UMBRELLA","LC_SUB_CLIENT","LC_SUB_LIBRARY","LC_TWOLEVEL_HINTS","LC_PREBIND_CKSUM","LC_ROUTINES_64","LC_ENCRYPTION_INFO","LC_SOURCE_VERSION","LC_ENCRYPTION_INFO_64","index into the string table","type flag, see below","section number or NO_SECT","see <mach-o/stab.h>","value of this symbol (or stab offset)","This symbol is defined in another module in this file, is…","goblin::mach::exports","goblin::mach::exports::ExportInfo","exportinfo","dyldinfocommand","flags (section type and attributes","is_object_file","symboliterator","symboltable","optional_header","major_linker_version","minor_linker_version","size_of_code","size_of_initialized_data","size_of_uninitialized_data","address_of_entry_point","base_of_code","base_of_data","absent in 64-bit PE32+","image_base","section_alignment","file_alignment","major_operating_system_version","minor_operating_system_version","major_image_version","minor_image_version","major_subsystem_version","minor_subsystem_version","win32_version_value","size_of_image","size_of_headers","dll_characteristics","size_of_stack_reserve","size_of_stack_commit","size_of_heap_reserve","size_of_heap_commit","loader_flags","number_of_rva_and_sizes","goblin::pe","characteristics","relocations","data_directories","virtual_address","time_date_stamp","minor_version","goblin::pe::export","goblin::pe::export::Reexport","exportdata","import_data","importlookuptable","syntheticimportdirectoryentry","datadirectory","importdata","major_version","pointer_to_raw_data","runtimefunction","Unused padding.","pointer_to_next_function","number_of_relocations","SymbolIterator","The linker chooses an arbitrary section among the…","name_offset","set_name_offset","auxfunctiondefinition","auxbeginandendfunction","auxweakexternal","auxsectiondefinition","Not supported.","The relocation is ignored.","The 16-bit section index of the section that contains the…","The 32-bit offset of the target from the beginning of its…","File offset from the start of the archive to where the…","goblin::error","goblin::strtab","goblin::container","goblin::elf::header::header32","goblin::elf::header::header64","goblin::elf::program_header::program_header32","goblin::elf::program_header::program_header64","goblin::elf::section_header::section_header32","goblin::elf::section_header::section_header64","goblin::elf::compression_header::compression_header32","goblin::elf::compression_header::compression_header64","goblin::elf::sym::sym32","goblin::elf::sym::sym64","goblin::elf::dynamic::dyn32","goblin::elf::dynamic::dyn64","goblin::elf::reloc::reloc32","goblin::elf::reloc::reloc64","goblin::elf::note","goblin::elf32::gnu_hash","goblin::elf64::gnu_hash","goblin::mach::header","goblin::mach::fat","goblin::mach::load_command","goblin::mach::symbols","goblin::mach::imports","goblin::mach::relocation","goblin::mach::segment","goblin::pe::header","goblin::pe::optional_header","goblin::pe::section_table","goblin::pe::data_directories","goblin::pe::import","goblin::pe::debug","goblin::pe::exception","goblin::pe::symbol","goblin::pe::relocation","goblin::archive","sectiontable","imagedebugdirectory","relocation","segmentcommand32","segmentcommand64","symtabcommand","standardfields32","standardfields64","standardfields","windowsfields32","windowsfields64","datadirectories","exportdirectorytable","codeviewpdb70debuginfo","unwindcodeiterator","unwindinfo","register","dosheader","coffheader","optionalheader","debugdata","stackframeoffset","unwindoperation","unwindcode","unwindhandler","memberheader","elfprogramheader","elfsectionheader","elfcompressionheader","from_ctx","symbolsctx","into_ctx","try_into_ctx","a Pwrite impl for Header: note we use the endianness value…","Writes the relocation into `bytes`","size_with","NoteDataIterator","NoteIterator","LoadCommandHeader","SegmentCommand32","SegmentCommand64","FvmlibCommand","DylibCommand","SubFrameworkCommand","SubClientCommand","SubUmbrellaCommand","SubLibraryCommand","PreboundDylibCommand","DylinkerCommand","ThreadCommand","RoutinesCommand32","RoutinesCommand64","SymtabCommand","DysymtabCommand","DylibTableOfContents","DylibModule","DylibModule64","DylibReference","TwolevelHintsCommand","TwolevelHint","PrebindCksumCommand","UuidCommand","RpathCommand","LinkeditDataCommand","EncryptionInfoCommand32","EncryptionInfoCommand64","VersionMinCommand","DyldInfoCommand","LinkerOptionCommand","SymsegCommand","IdentCommand","FvmfileCommand","EntryPointCommand","SourceVersionCommand","DataInCodeEntry","LoadCommand","CommandVariant","BindInterpreter","RelocationInfo","StandardFields32","StandardFields64","StandardFields","WindowsFields32","WindowsFields64","OptionalHeader","SectionTable","DataDirectory","DataDirectories","ExportDirectoryTable","ExportAddressTableEntry","HintNameTableEntry","ImportDirectoryEntry","SyntheticImportDirectoryEntry","SyntheticImportLookupTableEntry","ImageDebugDirectory","CodeviewPDB70DebugInfo","RuntimeFunction","StackFrameOffset","UnwindOperation","UnwindHandler","ExceptionData","AuxFunctionDefinition","AuxBeginAndEndFunction","AuxWeakExternal","AuxSectionDefinition","SymbolTable","Relocation","Relocations","MemberHeader","SymIterator","RelocIterator","FatArchIterator","MachOIterator","RelocationIterator","RuntimeFunctionIterator","UnwindCodeIterator","WindowsFields","LC_SEGMENT_64","MH_MAGIC_64","The endianness (byte order) of a stream of bytes","Check for remaining elements after passing a…","deserialize","Hint that the `Deserialize` type is expecting a string…","Hint that the `Deserialize` type is expecting a byte array…","Hint that the `Deserialize` type is expecting a sequence…","The error type that can be returned if some error occurs…","This returns `Ok(Some(value))` for the next value in the…","This returns `Ok(Some(key))` for the next key in the map,…","This returns a `Ok(value)` for the next value in the map.","This returns `Ok(Some((key, value)))` for the next…","`variant` is called to identify which variant to…","Called when deserializing a variant with a single value.","Deserializer","is_human_readable","SerializeSeq","SerializeTuple","Must match the `Ok` type of our `Serializer`.","Must match the `Error` type of our `Serializer`.","serialize_element","SerializeTupleStruct","SerializeTupleVariant","serialize_field","SerializeMap","SerializeStruct","SerializeStructVariant","Deserialize","A data structure that can be deserialized from any data…","Deserialize this value from the given Serde deserializer.","A data format that can deserialize any data structure…","deserialize_any","Require the `Deserializer` to figure out how to drive the…","deserialize_bool","Hint that the `Deserialize` type is expecting a `bool`…","deserialize_i8","Hint that the `Deserialize` type is expecting an `i8` value.","deserialize_i16","Hint that the `Deserialize` type is expecting an `i16`…","deserialize_i32","Hint that the `Deserialize` type is expecting an `i32`…","deserialize_i64","Hint that the `Deserialize` type is expecting an `i64`…","deserialize_i128","Hint that the `Deserialize` type is expecting an `i128`…","deserialize_u8","Hint that the `Deserialize` type is expecting a `u8` value.","deserialize_u16","Hint that the `Deserialize` type is expecting a `u16` value.","deserialize_u32","Hint that the `Deserialize` type is expecting a `u32` value.","deserialize_u64","Hint that the `Deserialize` type is expecting a `u64` value.","deserialize_u128","Hint that the `Deserialize` type is expecting an `u128`…","deserialize_f32","Hint that the `Deserialize` type is expecting a `f32` value.","deserialize_f64","Hint that the `Deserialize` type is expecting a `f64` value.","deserialize_char","Hint that the `Deserialize` type is expecting a `char`…","deserialize_str","deserialize_string","deserialize_bytes","deserialize_byte_buf","deserialize_option","Hint that the `Deserialize` type is expecting an optional…","deserialize_unit","Hint that the `Deserialize` type is expecting a unit value.","deserialize_unit_struct","Hint that the `Deserialize` type is expecting a unit…","deserialize_newtype_struct","Hint that the `Deserialize` type is expecting a newtype…","deserialize_seq","deserialize_tuple","deserialize_tuple_struct","Hint that the `Deserialize` type is expecting a tuple…","deserialize_map","Hint that the `Deserialize` type is expecting a map of…","deserialize_struct","Hint that the `Deserialize` type is expecting a struct…","deserialize_enum","Hint that the `Deserialize` type is expecting an enum…","deserialize_identifier","Hint that the `Deserialize` type is expecting the name of…","deserialize_ignored_any","Hint that the `Deserialize` type needs to deserialize a…","Determine whether `Deserialize` implementations should…","A data structure that can be serialized into any data…","Serialize this value into the given Serde serializer.","A data format that can serialize any data structure…","The output type produced by this `Serializer` during…","The error type when some error occurs during serialization.","Type returned from [`serialize_seq`] for serializing the…","Type returned from [`serialize_tuple`] for serializing the…","Type returned from [`serialize_tuple_struct`] for…","Type returned from [`serialize_tuple_variant`] for…","Type returned from [`serialize_map`] for serializing the…","Type returned from [`serialize_struct`] for serializing…","Type returned from [`serialize_struct_variant`] for…","serialize_bool","Serialize a `bool` value.","serialize_i8","Serialize an `i8` value.","serialize_i16","Serialize an `i16` value.","serialize_i32","Serialize an `i32` value.","serialize_i64","Serialize an `i64` value.","serialize_i128","Serialize an `i128` value.","serialize_u8","Serialize a `u8` value.","serialize_u16","Serialize a `u16` value.","serialize_u32","Serialize a `u32` value.","serialize_u64","Serialize a `u64` value.","serialize_u128","Serialize a `u128` value.","serialize_f32","Serialize an `f32` value.","serialize_f64","Serialize an `f64` value.","serialize_char","Serialize a character.","serialize_str","Serialize a `&str`.","serialize_bytes","Serialize a chunk of raw byte data.","serialize_none","Serialize a [`None`] value.","serialize_some","Serialize a [`Some(T)`] value.","serialize_unit","Serialize a `()` value.","serialize_unit_struct","Serialize a unit struct like `struct Unit` or…","serialize_unit_variant","Serialize a unit variant like `E::A` in `enum E { A, B }`.","serialize_newtype_struct","Serialize a newtype struct like `struct Millimeters(u8)`.","serialize_newtype_variant","Serialize a newtype variant like `E::N` in `enum E { N(u8)…","serialize_seq","Begin to serialize a variably sized sequence. This call…","serialize_tuple","Begin to serialize a statically sized sequence whose…","serialize_tuple_struct","Begin to serialize a tuple struct like `struct Rgb(u8, u8,…","serialize_tuple_variant","Begin to serialize a tuple variant like `E::T` in `enum E…","serialize_map","Begin to serialize a map. This call must be followed by…","serialize_struct","Begin to serialize a struct like `struct Rgb { r: u8, g:…","serialize_struct_variant","Begin to serialize a struct variant like `E::S` in `enum E…","collect_seq","Collect an iterator as a sequence.","collect_map","Collect an iterator as a map.","collect_str","Serialize a string produced by an implementation of…","Determine whether `Serialize` implementations should…","serde::de::value","serde::de","visit_newtype_struct","visit_bytes","next_element_seed","next_key_seed","next_value_seed","next_entry_seed","variant_seed","serde::ser","serialize_key","serialize_value","ignoredany","unexpected","BorrowedStrDeserializer","BorrowedBytesDeserializer","SeqDeserializer","SeqAccessDeserializer","MapDeserializer","MapAccessDeserializer","DeserializeSeed","VariantAccess","IntoDeserializer","Serializer","UnitDeserializer","BoolDeserializer","I8Deserializer","I16Deserializer","I32Deserializer","I64Deserializer","IsizeDeserializer","U8Deserializer","U16Deserializer","U64Deserializer","UsizeDeserializer","F32Deserializer","F64Deserializer","CharDeserializer","I128Deserializer","U128Deserializer","U32Deserializer","StrDeserializer","StringDeserializer","CowStrDeserializer","Serialize","serialize","fromutf8error","tuplestruct","tuplevariant","structvariant","erased_is_human_readable","deserializer","Returned if the deserializer attempts to deserialize a…","Serializes a serializable object into a `Vec` of bytes…","serialized_size","Returns the size that an object would be if serialized…","serialize_into","Deserializes a slice of bytes into an instance of `T`…","deserialize_from","deserialize_from_custom","Deserializes an object from a custom `BincodeRead`er using…","deserializeowned","BincodeRead","Represents a JSON number, whether integer or floating point.","Serialize the given data structure as a pretty-printed…","A structure that deserializes JSON into Rust values.","StreamDeserializer","Iterator that deserializes a stream into multiple JSON…","from_reader","Deserialize an instance of type `T` from an IO stream of…","Deserialize an instance of type `T` from bytes of JSON text.","Deserialize an instance of type `T` from a string of JSON…","This type represents all possible errors that can occur…","serde_json","Represents a JSON key/value type.","A structure for serializing Rust values into JSON.","CarriageReturn","Serialize the given data structure as JSON into the IO…","to_writer_pretty","Serialize the given data structure as pretty-printed JSON…","Serialize the given data structure as a JSON byte vector.","to_vec_pretty","Serialize the given data structure as a String of JSON.","to_string_pretty","Writes an integer value like `-123` to the specified writer.","Writes an integer value like `123` to the specified writer.","Writes a floating point value like `-31.26e+12` to the…","Represents any valid JSON value.","Represents a JSON null value.","Represents a JSON boolean.","Represents a JSON string.","Represents a JSON array.","Represents a JSON object.","Convert a `T` into `serde_json::Value` which is an enum…","Interpret a `serde_json::Value` as an instance of type `T`.","serde_json::de","Alias for a `Result` with the error type…","serde_json::error","serde_json::ser","serde_json::map","serde_json::value","begin_array","begin_array_value","end_array_value","begin_object","begin_object_key","begin_object_value","end_object_value","byte_offset","reference","peek_position","parse_str_raw","decode_hex_escape","ignore_str","invalid_type","PrettyFormatter","CompactFormatter","parse_str","A vacant Entry.","An occupied Entry.","A view into a single entry in a map, which may either be…","Returns true if the map contains no elements.","Returns true if the map contains a value for the specified…","Removes a key from the map, returning the value at the key…","Gets the given key's corresponding entry in the map for…","Ensures a value is in the entry by inserting the default…","or_insert_with","Ensures a value is in the entry by inserting the result of…","Sets the value of the entry with the VacantEntry's key,…","Gets a reference to the value in the entry.","Gets a mutable reference to the value in the entry.","Converts the entry into a mutable reference to its value.","Takes the value of the entry out of the map, and returns it.","Create a new set with capacity for `n` elements. (Does not…","intersection","indexset","with_capacity_and_hasher","Create a new map with capacity for `n` key-value pairs.…","with_hasher","Computes in O(1) time.","Computes in O(1) time (amortized average).","insert_full","Return an iterator over the key-value pairs of the map, in…","swap_remove_full","Remove the key-value pair equivalent to `key` and return…","Scan through each key-value pair in the map and keep those…","Get a key-value pair by index","swap_remove_index","Remove the key-value pair by index","indexmap::set","indexmap::map","get_full_mut2","__private_marker","privatemarker","Extend the map with all key-value pairs in the iterable.","Panics if `key` is not present in the map.","into_deserializer","MutableKeys","Intersection","SymmetricDifference","Difference","endianness","pointerwidth","pointer_width","callingconvention","architecture","environment","operatingsystem","binaryformat","BinaryFormat","Environment","OperatingSystem","CallingConvention","PointerWidth","ParseError","Translate wasm text source to wasm binary format.","wabt::script","wabt::script::Action","Name of the module. If `None`, last defined module should…","Field name on which action should be performed.","wabt::script::CommandKind","Action to perform.","Expected failure should be with this message.","features","Perform conversion.","readbinaryoptions","commandkind","CommandKind","ModuleBinary","ScriptParser","ReadBinaryOptions","enable_threads","enable_simd","enable_bulk_memory","enable_multi_value","compileresult","generate","wasmer_runtime_core","compilerconfig","moduleinfo","cacheerror","moduleinner","wasmer_runtime_core::error","wasmer_runtime_core::error::CompileError","wasmer_runtime_core::error::LinkError","expected","namespace","wasmer_runtime_core::error::RuntimeError","wasmer_runtime_core::error::ResolveError","CompileError","RuntimeError","ResolveError","CreationError","ExceededMaxPages","wasmer_runtime_core::export","likenamespace","An instantiated WebAssembly module.","A representation of an exported WebAssembly function.","resolveresult","internalfield","This is an internal-only api.","wasmer_runtime_core::memory","localmemory","growerror","as_slice_mut","atomically","creationerror","memorydescriptor","A compiled WebAssembly module.","Either a constant offset or a `get_global`","middlewarechain","binaryreadererror","descriptor","tabledescriptor","get_context","runtimeerror","The `i32` type.","The `i64` type.","The `f32` type.","The `f64` type.","The `v128` type.","funcindex","local_or_import","localorimport","memoryindex","convert_up","tableindex","globalindex","get_internal","set_internal","offset_base","offset_func","offset_vmctx","codeversion","breakpointmap","wasm_stack_private_depth","wasm_inst_offset","local_function_id","instanceimage","executionstateimage","x64register","wasmer_runtime_core::state","machinestate","wasmabstractvalue","functionstatemap","importobject","wasmer_runtime_core::instance","wasmer_runtime_core::module","wasmer_runtime_core::typed_func","wasmer_runtime_core::vm","wasmer_runtime_core::cache","wasmer_runtime_core::codegen","wasmer_runtime_core::global","wasmer_runtime_core::import","wasmer_runtime_core::loader","equivalent","wasmer_runtime_core::memory::ptr","from_ret_array","empty_ret_array","from_c_struct","into_c_struct","wasmer_runtime_core::parse","wasmer_runtime_core::structures","wasmer_runtime_core::table","wasmer_runtime_core::trampoline_x64","wasmer_runtime_core::types","wasmer_runtime_core::units","wasmer_runtime_core::fault","wasmer_runtime_core::state::x64","wasmer_runtime_core::tiering","get_exports","maybe_insert","get_export","to_export","runnablemodule","from_native","machinestatediff","stringtable","globaldescriptor","boundaryregisterpreservation","registerindex","modulestatemap","localfuncindex","importedfuncindex","localmemoryindex","importedmemoryindex","localtableindex","importedtableindex","localglobalindex","importedglobalindex","compileerror","resolveerror","exportindex","namespaceindex","elementtype","initializer","sigindex","machinevalue","linkerror","loaderror","importedfunc","InvalidFileType","BreakpointInfo","InternalEvent","ModuleCodeGenerator","FunctionMiddleware","FunctionCodeGenerator","SimpleStreamingCompilerGen","StreamingCompiler","MiddlewareChain","MemoryCreationError","MemoryProtectionError","FuncPointer","ImportObject","LikeNamespace","DynamicMemory","StaticMemory","UnsharedMemory","SharedMemory","DataInitializer","TableInitializer","ExportIndex","StringTableBuilder","StringTable","TableStorage","TrampolineBufferBuilder","TrampolineBuffer","WasmTrapInfo","WasmTypeList","ExternalFunction","TableDescriptor","GlobalDescriptor","MemoryDescriptor","ElementType","Initializer","LocalOrImport","NativeWasmType","WasmExternType","LocalImport","LocalFuncIndex","ImportedFuncIndex","MemoryIndex","LocalMemoryIndex","ImportedMemoryIndex","LocalTableIndex","ImportedTableIndex","GlobalIndex","LocalGlobalIndex","ImportedGlobalIndex","ImportedFunc","LocalMemory","LocalGlobal","InternalField","BoundaryRegisterPreservation","RegisterIndex","MachineState","MachineStateDiff","FunctionStateMap","ModuleStateMap","WasmFunctionStateDump","ExecutionStateImage","InstanceImage","CodeVersion","WasmAbstractValue","MachineValue","SuspendOffset","X64Register","InteractiveShellContext","ShellExitOperation","LocalBacking","ImportBacking","ImportObjectIterator","LocalLoader","LocalInstance","SharedMemoryInternal","NamespaceIndex","CallContext","Trampoline","Unreachable","memory_index","cranelift_codegen","codeoffset","Add a relocation referencing an EBB at the current offset.","reloc_external","externalname","Add a relocation referencing a jump table.","The referenced function.","cursorposition","sourceloc","Remove the instruction under the cursor.","function","targetisa","Use the source location of `inst` for future instructions.","insertbuilder","controlflowgraph","with_function","cranelift_codegen::ir","cranelift_codegen::ir::ExternalName","cranelift_codegen::ir::GlobalValueData","The base pointer global value.","global_type","cranelift_codegen::ir::HeapStyle","Source location when it is in effect","The label index.","insertreusebuilder","display_inst","displayinst","Create result values for `inst`, reusing the provided…","GlobalValue","An external function.","Return the underlying index value as a `u32`.","with_number","from_u32","argumentpurpose","Return an object that can display `self` with correct…","Return an object that can display this function with…","displayfunction","collect_debug_info","Starts collection of debug information.","wrapping_neg","Return self negated.","fcvt_to_sint_negative_overflow","Get the bitwise representation.","cranelift_codegen::ir::instructions","cranelift_codegen::ir::instructions::InstructionData","UnaryIeee32","UnaryIeee64","UnaryGlobalValue","ExtractLane","IntCompareImm","FloatCompare","destination","BranchFloat","BranchTable","BranchTableEntry","BranchTableBase","IndirectJump","CallIndirect","LoadComplex","StoreComplex","CopySpecial","IntCondTrap","FloatCondTrap","StackStore","valuelistpool","valuelist","analyze_branch","valuetypeset","jumptable","insert_inst","remove_inst","unwrap_inst","stackslotdata","stackslot","Get an iterator over all the stack slot keys.","stackoffset","Get a type with the same number of lanes as this type, but…","is_assigned","Is this an assigned location? (That is, not `Unassigned`).","trapcode","offset32","memflags","global_value","globalvalue","Unary(imms=(), vals=1)","UnaryImm(imms=(imm: imm64), vals=0)","UnaryIeee32(imms=(imm: ieee32), vals=0)","UnaryIeee64(imms=(imm: ieee64), vals=0)","UnaryBool(imms=(imm: boolean), vals=0)","UnaryGlobalValue(imms=(global_value: global_value), vals=0)","Binary(imms=(), vals=2)","BinaryImm(imms=(imm: imm64), vals=1)","Ternary(imms=(), vals=3)","MultiAry(imms=(), vals=0)","NullAry(imms=(), vals=0)","InsertLane","InsertLane(imms=(lane: uimm8), vals=2)","ExtractLane(imms=(lane: uimm8), vals=1)","IntCompare","IntCompare(imms=(cond: intcc), vals=2)","IntCompareImm(imms=(cond: intcc, imm: imm64), vals=1)","IntCond(imms=(cond: intcc), vals=1)","FloatCompare(imms=(cond: floatcc), vals=2)","FloatCond(imms=(cond: floatcc), vals=1)","IntSelect(imms=(cond: intcc), vals=3)","Jump(imms=(destination: ebb), vals=0)","Branch(imms=(destination: ebb), vals=1)","BranchInt(imms=(cond: intcc, destination: ebb), vals=1)","BranchFloat(imms=(cond: floatcc, destination: ebb), vals=1)","BranchIcmp","BranchIcmp(imms=(cond: intcc, destination: ebb), vals=2)","BranchTable(imms=(destination: ebb, table: jump_table),…","BranchTableEntry(imms=(imm: uimm8, table: jump_table),…","BranchTableBase(imms=(table: jump_table), vals=0)","IndirectJump(imms=(table: jump_table), vals=1)","Call(imms=(func_ref: func_ref), vals=0)","CallIndirect(imms=(sig_ref: sig_ref), vals=1)","FuncAddr(imms=(func_ref: func_ref), vals=0)","Load(imms=(flags: memflags, offset: offset32), vals=1)","LoadComplex(imms=(flags: memflags, offset: offset32),…","Store(imms=(flags: memflags, offset: offset32), vals=2)","StoreComplex(imms=(flags: memflags, offset: offset32),…","StackLoad","StackLoad(imms=(stack_slot: stack_slot, offset: offset32),…","StackStore(imms=(stack_slot: stack_slot, offset:…","HeapAddr(imms=(heap: heap, imm: uimm32), vals=1)","TableAddr","TableAddr(imms=(table: table, offset: offset32), vals=1)","RegMove(imms=(src: regunit, dst: regunit), vals=1)","CopySpecial(imms=(src: regunit, dst: regunit), vals=0)","RegSpill(imms=(src: regunit, dst: stack_slot), vals=1)","RegFill(imms=(src: stack_slot, dst: regunit), vals=1)","Trap(imms=(code: trapcode), vals=0)","CondTrap(imms=(code: trapcode), vals=1)","IntCondTrap(imms=(cond: intcc, code: trapcode), vals=1)","FloatCondTrap(imms=(cond: floatcc, code: trapcode), vals=1)","dataflowgraph","instructiondata","data_flow_graph","data_flow_graph_mut","constraints","lookuperror","regdiversions","recipeconstraints","branchrange","regclassindex","regclass","cranelift_codegen::isa","default_call_conv","encoding","codegenresult","pointer_type","pointer_bits","pointer_bytes","loop_analysis","dominatortree","cranelift_codegen::settings::detail","cranelift_codegen::settings::detail::Detail","enumerators","cranelift_codegen::settings","timingtoken","legalize","prologue_epilogue","shrink_instructions","relax_branches","verify_cssa","verifiererrors","verify_liveness","verifierstepresult","verify_locations","flagsorisa","displayfunctionannotations","write_ebb_header","codeinfo","verifierresult","canonicalize_nans","valuelabelsranges","cranelift_codegen::binemit","diversion","valuelocations","cranelift_codegen::packed_option","cranelift_codegen::cfg_printer","cranelift_codegen::cursor","cranelift_codegen::dbg","cranelift_codegen::dominator_tree","cranelift_codegen::flowgraph","cranelift_codegen::ir::condcodes","cranelift_codegen::ir::dfg","cranelift_codegen::ir::entities","cranelift_codegen::ir::function","cranelift_codegen::ir::immediates","cranelift_codegen::ir::jumptable","cranelift_codegen::ir::layout","cranelift_codegen::ir::stackslot","cranelift_codegen::ir::types","cranelift_codegen::isa::registers","cranelift_codegen::loop_analysis","cranelift_codegen::timing","cranelift_codegen::verifier","cranelift_codegen::write","begin_jumptables","begin_rodata","end_codegen","set_position","set_srcloc","layout_mut","setresult","write_instruction","secondarymap","verifiererror","basicblock","anyentity","instructionformat","resolvedconstraint","programpoint","expandedprogrampoint","stackslotkind","valueloc","argumentloc","operandconstraint","constraintkind","stackbasemask","codegenerror","argumentextension","extfuncdata","globalvaluedata","opcodeconstraints","jumptabledata","stackslots","valuelabel","targetfrontendconfig","predicateview","reserved_value","`jump EBB, args`","fallthrough","`fallthrough EBB, args`","`brz c, EBB, args`","`brnz c, EBB, args`","`br_icmp Cond, x, y, EBB, args`","`brif Cond, f, EBB, args`","`brff Cond, f, EBB, args`","`br_table x, EBB, JT`","jump_table_entry","`entry = jump_table_entry x, addr, Size, JT`","jump_table_base","`addr = jump_table_base JT`","indirect_jump_table_br","`indirect_jump_table_br addr, JT`","`debugtrap`","`trap code`","`trapz c, code`","`trapnz c, code`","`trapif Cond, f, code`","`trapff Cond, f, code`","`return rvals`","fallthrough_return","`fallthrough_return rvals`","`rvals = call FN, args`","call_indirect","`rvals = call_indirect SIG, callee, args`","`addr = func_addr FN`","`a = load MemFlags, p, Offset`","load_complex","`a = load_complex MemFlags, args, Offset`","`store MemFlags, x, p, Offset`","store_complex","`store_complex MemFlags, x, args, Offset`","`a = uload8 MemFlags, p, Offset`","uload8_complex","`a = uload8_complex MemFlags, args, Offset`","`a = sload8 MemFlags, p, Offset`","sload8_complex","`a = sload8_complex MemFlags, args, Offset`","`istore8 MemFlags, x, p, Offset`","istore8_complex","`istore8_complex MemFlags, x, args, Offset`","`a = uload16 MemFlags, p, Offset`","uload16_complex","`a = uload16_complex MemFlags, args, Offset`","`a = sload16 MemFlags, p, Offset`","sload16_complex","`a = sload16_complex MemFlags, args, Offset`","`istore16 MemFlags, x, p, Offset`","istore16_complex","`istore16_complex MemFlags, x, args, Offset`","`a = uload32 MemFlags, p, Offset`","uload32_complex","`a = uload32_complex MemFlags, args, Offset`","`a = sload32 MemFlags, p, Offset`","sload32_complex","`a = sload32_complex MemFlags, args, Offset`","`istore32 MemFlags, x, p, Offset`","istore32_complex","`istore32_complex MemFlags, x, args, Offset`","`a = stack_load SS, Offset`","stack_store","`stack_store x, SS, Offset`","`addr = stack_addr SS, Offset`","`a = global_value GV`","symbol_value","`a = symbol_value GV`","`addr = heap_addr H, p, Size`","`addr = table_addr T, p, Offset`","`a = iconst N`","`a = f32const N`","`a = f64const N`","`a = bconst N`","`a = select c, x, y`","`a = selectif cc, flags, x, y`","`a = copy x`","`a = spill x`","`a = fill x`","`regmove x, src, dst`","copy_special","`copy_special src, dst`","`a = copy_nop x`","adjust_sp_down","`adjust_sp_down delta`","adjust_sp_up_imm","`adjust_sp_up_imm Offset`","adjust_sp_down_imm","`adjust_sp_down_imm Offset`","`f = ifcmp_sp addr`","`regspill x, src, SS`","`regfill x, SS, dst`","`lo, hi = vsplit x`","`a = vconcat x, y`","`a = vselect c, x, y`","`a = splat x`","`a = insertlane x, Idx, y`","extractlane","`a = extractlane x, Idx`","`a = icmp Cond, x, y`","`a = icmp_imm Cond, x, Y`","`f = ifcmp x, y`","`f = ifcmp_imm x, Y`","`a = iadd x, y`","`a = isub x, y`","`a = imul x, y`","`a = umulhi x, y`","`a = smulhi x, y`","`a = udiv x, y`","`a = sdiv x, y`","`a = urem x, y`","`a = srem x, y`","`a = iadd_imm x, Y`","`a = imul_imm x, Y`","`a = udiv_imm x, Y`","`a = sdiv_imm x, Y`","`a = urem_imm x, Y`","`a = srem_imm x, Y`","`a = irsub_imm x, Y`","`a = iadd_cin x, y, c_in`","`a, c_out = iadd_cout x, y`","`a, c_out = iadd_carry x, y, c_in`","`a = isub_bin x, y, b_in`","`a, b_out = isub_bout x, y`","isub_borrow","`a, b_out = isub_borrow x, y, b_in`","`a = band x, y`","`a = bor x, y`","`a = bxor x, y`","`a = bnot x`","`a = band_not x, y`","`a = bor_not x, y`","`a = bxor_not x, y`","`a = band_imm x, Y`","`a = bor_imm x, Y`","`a = bxor_imm x, Y`","`a = rotl x, y`","`a = rotr x, y`","`a = rotl_imm x, Y`","`a = rotr_imm x, Y`","`a = ishl x, y`","`a = ushr x, y`","`a = sshr x, y`","`a = ishl_imm x, Y`","`a = ushr_imm x, Y`","`a = sshr_imm x, Y`","`a = bitrev x`","`a = clz x`","`a = cls x`","`a = ctz x`","`a = popcnt x`","`a = fcmp Cond, x, y`","`f = ffcmp x, y`","`a = fadd x, y`","`a = fsub x, y`","`a = fmul x, y`","`a = fdiv x, y`","`a = sqrt x`","`a = fma x, y, z`","`a = fneg x`","`a = fabs x`","`a = fcopysign x, y`","`a = fmin x, y`","`a = fmax x, y`","`a = ceil x`","`a = floor x`","`a = trunc x`","`a = nearest x`","`a = trueif Cond, f`","`a = trueff Cond, f`","`a = bitcast x`","`a = breduce x`","`a = bextend x`","`a = bint x`","`a = bmask x`","`a = ireduce x`","`a = uextend x`","`a = sextend x`","`a = fpromote x`","`a = fdemote x`","fcvt_to_uint","`a = fcvt_to_uint x`","fcvt_to_uint_sat","`a = fcvt_to_uint_sat x`","fcvt_to_sint","`a = fcvt_to_sint x`","fcvt_to_sint_sat","`a = fcvt_to_sint_sat x`","fcvt_from_uint","`a = fcvt_from_uint x`","fcvt_from_sint","`a = fcvt_from_sint x`","`lo, hi = isplit x`","`a = iconcat lo, hi`","x86_udivmodx","`q, r = x86_udivmodx nlo, nhi, d`","x86_sdivmodx","`q, r = x86_sdivmodx nlo, nhi, d`","`resLo, resHi = x86_umulx argL, argR`","`resLo, resHi = x86_smulx argL, argR`","x86_cvtt2si","`a = x86_cvtt2si x`","`a = x86_fmin x, y`","`a = x86_fmax x, y`","`x86_push x`","`x = x86_pop`","`y, rflags = x86_bsr x`","`y, rflags = x86_bsf x`","UnaryBool","BinaryImm","FloatCond","IntSelect","BranchInt","ValueLocRange","CodegenError","MemoryCodeSink","CursorPosition","DisplayList","DominatorTree","DominatorTreePreorder","ControlFlowGraph","ExtFuncData","ValueLabelStart","ArgumentExtension","ArgumentPurpose","ExternalName","GlobalValueData","ExpandedProgramPoint","ArgumentLoc","ValueLabelAssignments","InsertBuilder","DataFlowGraph","DisplayFunctionAnnotations","ValueTypeSet","InstructionFormat","InstructionData","ResolvedConstraint","VariableArgs","OpcodeConstraints","JumpTableData","StackSlotData","StackSlotKind","InstBuilder","InstBuilderBase","InstInserterBase","ProgramOrder","BranchRange","OperandConstraint","RecipeConstraints","StackBaseMask","TargetFrontendConfig","ConstraintKind","LookupError","RegClassData","LoopAnalysis","Configurable","PredicateView","VerifierError","VerifierErrors","RegDiversions","NullTrapSink","ProgramPoint","DisplayInst","DisplayFunction","InstOffsetIter","RegClassIndex","DisplayRegUnit","TimingToken","PlainWriter","packed_option","Compact representation of `Option<T>` for types with a…","Packed representation of `Option<T>`.","Types that have a reserved value which can't be created…","Create an instance of the reserved value.","Returns `true` if the packed option is a `None` value.","Returns `true` if the packed option is a `Some` value.","Expand the packed option into a normal `Option`.","Maps a `PackedOption<T>` to `Option<U>` by applying a…","Takes the value out of the packed option, leaving a `None`…","Convert `t` into a packed `Some(x)`.","Convert an option into its packed equivalent.","Create a default packed option representing `None`.","stacksize","Signature","WindowsFastcall","Return the default calling convention for the given target…","total_size","An IEEE binary32 immediate floating point value,…","An IEEE binary64 immediate floating point value,…","emscriptenglobals","emscriptenglobalsdata","EmscriptenData","EmscriptenGlobals","EmscriptenGlobalsData","callresult","The current version of this crate","wasmer_middleware_common","wasmer_middleware_common::call_trace","wasmer_middleware_common::metering","ExecutionLimitExceededError","feed_event","An index (and generation) into an `Arena`.","wasmer_wasi::state","wasmer_wasi::state::Kind","__wasi_errno_t","polleventbuilder","polleventset","__wasi_timestamp_t","wasifserror","__wasi_fd_t","__wasi_filestat_t","__wasi_fdstat_t","__wasi_prestat_t","__wasi_rights_t","__wasi_fdflags_t","wasmer_wasi","wasmer_wasi::types","pr_name_len","FdReadWrite","__wasi_dirent_t","__wasi_filetype_t","__wasi_eventtype_t","__wasi_filesize_t","erased_serialize","serializer","last_accessed","set_last_accessed","last_modified","set_last_modified","created_time","set_created_time","sync_to_disk","rename_file","bytes_available","get_raw_fd","__wasi_ciovec_t","__wasi_event_fd_readwrite_t","__wasi_event_u","__wasi_event_t","__wasi_prestat_u_dir_t","__wasi_prestat_u","__wasi_iovec_t","__wasi_subscription_clock_t","__wasi_subscription_fs_readwrite_t","__wasi_subscription_u","__wasi_subscription_t","wasisubscription","write_all","write_fmt","read_to_string","read_exact","set the last time the file was accessed in nanoseconds as…","set the last time the file was modified in nanoseconds as…","set the time at which the file was created in nanoseconds…","Change the size of the file, if the `new_size` is greater…","Request deletion of the file","Store file contents and metadata to disk","Moves the file to a new location NOTE: the signature of…","Returns the number of bytes available. This function must…","Used for polling. Default returns `None` because this…","prestatenum","subscriptionenum","WasiFsError","PollEventBuilder","WasiSubscription","PrestatEnum","SubscriptionEnum","PollEventIter","callproterror","wasmer_singlepass_backend","wasmer_singlepass_backend::protect_unix","CallProtError","Version number of this crate.","create_jump_table","Creates a jump table in the function, to be used by…","create_stack_slot","Creates a stack slot in the function, to be used by…","import_signature","Adds a signature which can later be used to declare an…","import_function","Declare an external function import.","create_global_value","Declares a global value accessible to the function.","create_heap","Declares a heap accessible to the function.","funccursor","Append parameters to the given `Ebb` corresponding to the…","append_ebb_param","inst_results","Calls libc.memset","FunctionBuilder","FunctionBuilderContext","finalize","inkwell::support","comdatselectionkind","BasicBlock","A `BasicBlock` is a container of instructions.","functionvalue","instructionvalue","pointervalue","GEP is very likely to segfault if indexes are used…","basicvalue","basictype","intmathvalue","basicvalueenum","floatmathvalue","pointermathvalue","aggregatevalueenum","vectorvalue","intvalue","atomicordering","structvalue","floattype","Gets the `FloatType` representing a 128 bit width. It will…","prepend_basic_block","metadatavalue","This function probably doesn't need to be called, but is…","removemoduleerror","get_function","functionlookuperror","jitfunction","This method allows you to call the underlying function…","llvmstring","This will create a new `MemoryBuffer` from the given input.","FIXME: Unknown linkage type","Some languages allow differing globals to be merged, such…","contextref","basictypeenum","executionengine","addressspace","memorybuffer","datalayout","Creates a new `Module` from a `MemoryBuffer`.","flagbehavior","relocationiterator","get_symbols","get_address","optimizationlevel","passmanager","This pass loops over all of the functions in the input…","No LLVM documentation is available at this time.","This pass performs global value numbering to eliminate…","This file promotes memory references to be register…","get_global","passregistry","initializationconfig","targetmachine","get_target_data","Gets the `IntType` representing a bit width of a pointer.…","get_data_layout","targetdata","structtype","FunctionType","PointerType","ArrayType","A contiguous homogeneous container type.","A floating point type.","A pointer type.","StructType","A contiguous heterogeneous container type.","VectorType","A contiguous homogeneous \"SIMD\" container type.","pointertype","functiontype","print_to_string","arrayvalue","as_array_type","arraytype","as_float_type","as_int_type","as_pointer_type","as_struct_type","as_vector_type","vectortype","into_array_type","into_float_type","into_int_type","into_pointer_type","into_struct_type","into_vector_type","is_array_type","is_float_type","is_int_type","is_pointer_type","is_struct_type","is_vector_type","floatvalue","get_alignment","x86_f80_type","Gets the `FloatType` representing a 80 bit width. It will…","ppc_f128_type","Creates a new `FloatType` which represents one hundred and…","genericvalue","const_array","Creates a constant `ArrayValue`.","Gets the `IntType` representing 1 bit width. It will be…","Gets the `IntType` representing 8 bit width. It will be…","Gets the `IntType` representing 16 bit width. It will be…","Gets the `IntType` representing 32 bit width. It will be…","Gets the `IntType` representing 64 bit width. It will be…","Gets the `IntType` representing 128 bit width. It will be…","custom_width_int_type","Gets the `IntType` representing a custom bit width. It…","const_zero","array_type","create_generic_value","Creates a `GenericValue` for use with `ExecutionEngine`s.","get_undef","get_element_type","const_struct","get_name","struct_type","Creates a `StructType` definiton from heterogeneous types…","Determines whether or not a `StructType` is opaque.","is_sized","ptr_type","anytypeenum","MathConvType","PtrConvType","FunctionValue","PointerValue","StructValue","VectorValue","InstructionValue","ArrayValue","FloatValue","MetadataValue","print_to_stderr","attributeloc","as_array_value","as_struct_value","into_array_value","into_struct_value","is_array_value","is_struct_value","as_int_value","as_float_value","as_pointer_value","as_vector_value","into_int_value","into_float_value","into_pointer_value","into_vector_value","is_int_value","is_float_value","is_pointer_value","is_vector_value","get_type","as_instruction","has_metadata","get_metadata","set_metadata","floatpredicate","replace_all_uses_with","append_basic_block","add_attribute","count_attributes","remove_string_attribute","remove_enum_attribute","get_enum_attribute","get_string_attribute","dllstorageclass","threadlocalmode","globalvisibility","unnamedaddress","get_linkage","set_linkage","instructionopcode","is_tail_call","basicvalueuse","intpredicate","const_truncate","get_string_value","basicmetadatavalueenum","get_kind_id","const_cast","set_name","is_undef","const_string","Creates a const string which may be null terminated.","const_select","Returns an enum containing a typed version of the…","as_instruction_value","get_first_use","llvmvalueref","inkwell::attributes","inkwell::comdat","inkwell::basic_block","inkwell::builder","inkwell::context","inkwell::data_layout","inkwell::execution_engine","inkwell::memory_buffer","inkwell::module","inkwell::object_file","inkwell::passes","inkwell::targets","inkwell::types","inkwell::values","llvmpassmanagerref","run_in_pass_manager","stringradix","callsitevalue","anyvalueenum","atomicrmwbinop","byteordering","phivalue","voidtype","as_any_type_enum","Returns an `AnyTypeEnum` that represents the current type.","as_basic_type_enum","Returns a `BasicTypeEnum` that represents the current type.","Create a `FunctionType` with this `BasicType` as its…","Create an `ArrayType` with this `BasicType` as its elements.","Create a `PointerType` that points to this `BasicType`.","as_aggregate_value_enum","const_extract_value","const_insert_value","as_basic_value_enum","Most `BasicValue`s are the byproduct of an instruction and…","as_any_value_enum","Returns an enum containing a typed version of `AnyValue`.","AddressSpace","IntPredicate","FloatPredicate","AtomicOrdering","AtomicRMWBinOp","OptimizationLevel","GlobalVisibility","ThreadLocalMode","DLLStorageClass","AttributeLoc","ComdatSelectionKind","FunctionLookupError","RemoveModuleError","ExecutionEngine","JitFunction","MemoryBuffer","FlagBehavior","PassManagerSubType","PassManagerBuilder","PassManager","PassRegistry","InitializationConfig","ByteOrdering","TargetMachine","AnyTypeEnum","BasicTypeEnum","StringRadix","FloatType","IntMathType","FloatMathType","PointerMathType","AnyValueEnum","AggregateValueEnum","BasicValueEnum","BasicMetadataValueEnum","UnnamedAddress","InstructionOpcode","BasicValueUse","CallSiteValue","GenericValue","AggregateValue","IntMathValue","FloatMathValue","PointerMathValue","filetype","Emits an error if two values disagree, otherwise the…","Emits a warning if two values disagree. The result value…","Adds a requirement that another module flag be present and…","Uses the specified value, regardless of the behavior or…","The linker may choose any COMDAT.","The data referenced by the COMDAT must be the same.","The linker will choose the largest COMDAT.","No other Module may specify this COMDAT.","The data referenced by the COMDAT must be the same size.","disassembler","error_handling","execution_engine","llvmopcode","Attribute","ValueType","sectioniterator","wasmer_clif_fork_wasm","FallthroughReturn","Unsupported","ImplLimitExceeded","An implementation limit was exceeded.","A function.","functionbuilder","wasmresult","globalvariable","Set up the necessary preamble definitions in `func` to…","signatureindex","target_config","Get the information needed to produce Cranelift IR for the…","declare_signature","declare_func_import","declare_func_type","declare_global","declare_global_import","declare_table","declare_table_import","declare_table_elements","declare_memory","declare_memory_import","declare_data_initialization","declare_func_export","declare_table_export","declare_memory_export","declare_global_export","declare_start_func","define_function_body","returnmode","definedfuncindex","definedtableindex","definedmemoryindex","definedglobalindex","Get the Cranelift integer type to use for native pointers.","Get the size of a native pointer, in bytes.","return_mode","Should the code be structured to use a single…","translate_call","Translate a `call` WebAssembly instruction at `pos`.","translate_loop_header","Emit code at the beginning of every wasm loop.","reserve_signatures","Provides the number of signatures up front. By default…","reserve_imports","Provides the number of imports up front. By default this…","finish_imports","Notifies the implementation that all imports have been…","reserve_func_types","Provides the number of defined functions up front. By…","reserve_tables","Provides the number of defined tables up front. By default…","reserve_memories","Provides the number of defined memories up front. By…","reserve_globals","Provides the number of defined globals up front. By…","reserve_exports","Provides the number of exports up front. By default this…","finish_exports","Notifies the implementation that all exports have been…","reserve_table_elements","Provides the number of element initializers up front. By…","reserve_data_initializers","Provides the number of data initializers up front. By…","DummyEnvironment","FuncTranslator","TranslationState","GlobalVariable","TableElementType","DefinedFuncIndex","DefinedTableIndex","DefinedMemoryIndex","DefinedGlobalIndex","SignatureIndex","FuncEnvironment","ModuleEnvironment","GlobalInit","TableIndex","FuncIndex","LLVMOptions","wasmer_runtime","A shared or unshared wasm linear memory.","Represents a WebAssembly value.","wasmer_runtime::error","wasmer_runtime::error::CompileError","wasmer_runtime::error::LinkError","wasmer_runtime::error::RuntimeError","wasmer_runtime::error::ResolveError","wasmer_runtime::cache","wasmer_runtime::wasm","wasmer_runtime::memory","wasmer_runtime::units","wasmhash","callerror","load_with_backend","nonatomically","instantiate","FileSystemCache","compile_with","Compile a [`Module`] using the provided compiler from…","compile_with_config","Perform validation as defined by the WebAssembly…","The hash of a wasm module.","DeserializeError","SerializeError","InvalidFile","InvalidatedCache","UnsupportedBackend","A generic cache for storing and loading compiled wasm…","loads a module using the default `Backend`","loads a cached module using a specific `Backend`","Hash a wasm module.","Create the hexadecimal representation of the stored hash.","Create hash from hexadecimal representation","streamingcompiler","This is returned when the chosen compiler is unable to…","ValidationError","InternalError","LinkError","This is returned when the runtime is unable to correctly…","IncorrectImportType","IncorrectImportSignature","ImportNotFound","IncorrectMemoryDescriptor","IncorrectTableDescriptor","IncorrectGlobalDescriptor","This is the error type returned when calling a WebAssembly…","This error type is produced by resolving a wasm function…","ExportNotFound","ExportWrongType","CallError","This error type is produced by calling a wasm function…","This error type is produced when creating something, like…","UnableToCreateMemory","UnableToCreateTable","InvalidDescriptor","The amalgamation of all errors that can occur during the…","MemoryGrowError","TableGrowError","ExceededMaxPagesForMemory","CouldNotProtectMemory","CouldNotCreateMemory","VirtualMemoryAllocationFailed","CouldNotCreateMemoryFromFile","ProtectionFailed","BinaryReadError","CompileResult","RuntimeResult","ResolveResult","ParseResult","Create a new `Global` value.","new_mutable","Create a new, mutable `Global` value.","Get the [`GlobalDescriptor`] generated for this global.","Set the value help by this global.","Get the value held by this global.","All of the import data used when instantiating.","allow_missing_functions","Create a new `ImportObject`.","new_with_data","Register anything that implements `LikeNamespace` as a…","get_namespace","Through generic magic and the awe-inspiring power of…","resolve_func","This returns the representation of a function that can be…","Call an exported WebAssembly function given the export…","Returns an immutable reference to the [`Ctx`] used by this…","context_mut","Returns a mutable reference to the [`Ctx`] used by this…","Returns an iterator over all of the items exported from…","The module used to instantiate this Instance.","Call an exported WebAssembly function safely.","Atomically","MemoryView","memoryview","Create a new `Memory` from a [`MemoryDescriptor`]","Return the [`MemoryDescriptor`] that this memory was…","Grow this memory by the specified number of pages.","The size, in wasm pages, of this memory.","Return a \"view\" of the currently accessible memory. By…","Instantiate a WebAssembly module with the provided…","artifact","Create a new `Table` from a [`TableDescriptor`]","Get the `TableDescriptor` used to create this `Table`.","Set the element at index.","The current size of this table.","Grow this table by `delta`.","vm_local_table","get_vm_func","Type of data stored in this table.","The minimum number of elements that must be stored in this…","The maximum number of elements in this table.","Describes the mutability and type of a Global","A wasm memory.","The minimum number of allowed pages.","The maximum number of allowed pages.","This memory can be shared between wasm threads.","The signature of a function that is either implemented in…","Represents a WebAssembly type.","memory_type","check_param_value_types","Units of WebAssembly pages (as specified to be 65,536…","Units of WebAssembly memory in terms of 8-bit bytes.","pageerror","The context of the currently running WebAssembly instance.","local_backing","These are pointers to things that are known to be owned by…","import_backing","This is intended to be user-supplied, per-instance…","data_finalizer","If there's a function set in this field, it gets called…","This exposes the specified memory of the WebAssembly…","borrow_symbol_map","Gives access to the emscripten symbol map, used for…","dynamic_sigindice_count","Returns the number of dynamic sigindices.","Returns the value of the specified internal field.","Writes the value to the specified internal field.","Generate an [`ImportObject`] safely.","Instance","GrowError","PageError","LoadError","resultobject","ResultObject","InstanceABI","compile_with_config_with","The same as `compile_with_config` but takes a `Compiler`…","compiler"];
searchIndex["aho_corasick"]={"doc":"A library for finding occurrences of many patterns at…","i":[[3,R[1154],R[1140],"An automaton for searching multiple strings in linear time.",N,N],[3,R[1155],E,"A builder for configuring an Aho-Corasick automaton.",N,N],[3,"FindIter",E,"An iterator of non-overlapping matches in a particular…",N,N],[3,R[1157],E,"An iterator of overlapping matches in a particular haystack.",N,N],[3,R[1158],E,"An iterator that reports Aho-Corasick matches in a stream.",N,N],[3,"Error",E,"An error that occurred during the construction of an…",N,N],[3,"Match",E,"A representation of a match reported by an Aho-Corasick…",N,N],[4,R[1156],E,"A knob for controlling the match semantics of an…",N,N],[13,"Standard",E,"Use standard match semantics, which support overlapping…",0,N],[13,R[1145],E,R[1146],0,N],[13,R[1147],E,R[1148],0,N],[4,R[372],E,"The kind of error that occurred.",N,N],[13,"StateIDOverflow",E,"An error that occurs when constructing an automaton would…",1,N],[12,"max",R[1141],"The maximum possible state ID.",1,N],[13,"PremultiplyOverflow",R[1140],"An error that occurs when premultiplication of state IDs…",1,N],[12,"max",R[1141],"The maximum possible state id.",1,N],[12,"requested_max",E,"The maximum ID required by premultiplication.",1,N],[11,"new",R[1140],"Create a new Aho-Corasick automaton using the default…",2,[[["i"]],[R[1142]]]],[11,"new_auto_configured",E,"Build an Aho-Corasick automaton with an automatically…",2,[[],[R[1142]]]],[11,"is_match",E,"Returns true if and only if this automaton matches the…",2,[[["self"],["asref"]],["bool"]]],[11,"earliest_find",E,"Returns the location of the first detected match in…",2,[[["self"],["asref"]],[["match"],[R[23],["match"]]]]],[11,"find",E,"Returns the location of the first match according to the…",2,[[["self"],["asref"]],[["match"],[R[23],["match"]]]]],[11,R[1788],E,"Returns an iterator of non-overlapping matches, using the…",2,[[["self"],["b"]],["finditer"]]],[11,"find_overlapping_iter",E,"Returns an iterator of overlapping matches in the given…",2,[[["self"],["b"]],["findoverlappingiter"]]],[11,R[1768],E,"Replace all matches with a corresponding value in the…",2,[[["self"],["str"]],["string"]]],[11,"replace_all_bytes",E,"Replace all matches using raw bytes with a corresponding…",2,[[["self"]],[["u8"],["vec",["u8"]]]]],[11,"replace_all_with",E,"Replace all matches using a closure called on each match.…",2,[[["self"],["string"],["str"],["f"]]]],[11,"replace_all_with_bytes",E,"Replace all matches using raw bytes with a closure called…",2,[[["self"],["vec"],["f"]]]],[11,"stream_find_iter",E,"Returns an iterator of non-overlapping matches in the…",2,[[["self"],["read"]],[["read"],["streamfinditer"]]]],[11,"stream_replace_all",E,"Search for and replace all matches of this automaton in…",2,[[["self"],["w"],["r"]],[R[3]]]],[11,"stream_replace_all_with",E,"Search the given reader and replace all matches of this…",2,[[["self"],["w"],["f"],["r"]],[R[3]]]],[11,R[1149],E,"Returns the match kind used by this automaton.",2,[[["self"]],[R[1151]]]],[11,"max_pattern_len",E,"Returns the length of the longest pattern matched by this…",2,[[["self"]],["usize"]]],[11,"pattern_count",E,"Return the total number of patterns matched by this…",2,[[["self"]],["usize"]]],[11,"supports_overlapping",E,"Returns true if and only if this automaton supports…",2,[[["self"]],["bool"]]],[11,"supports_stream",E,"Returns true if and only if this automaton supports stream…",2,[[["self"]],["bool"]]],[11,"heap_bytes",E,R[1152],2,[[["self"]],["usize"]]],[11,"new",E,"Create a new builder for configuring an Aho-Corasick…",3,[[],[R[1144]]]],[11,"build",E,R[1143],3,[[["self"],["i"]],[R[1142]]]],[11,"build_with_size",E,R[1143],3,[[["self"],["i"]],[["error"],[R[3],[R[1142],"error"]],[R[1142]]]]],[11,"auto_configure",E,"Automatically configure the settings on this builder…",3,[[["self"]],[R[1144]]]],[11,R[1149],E,"Set the desired match semantics.",3,[[["self"],[R[1151]]],[R[1144]]]],[11,"anchored",E,"Enable anchored mode, which requires all matches to start…",3,[[["self"],["bool"]],[R[1144]]]],[11,"ascii_case_insensitive",E,"Enable ASCII-aware case insensitive matching.",3,[[["self"],["bool"]],[R[1144]]]],[11,"dense_depth",E,"Set the limit on how many NFA states use a dense…",3,[[["self"],["usize"]],[R[1144]]]],[11,"dfa",E,"Compile the standard Aho-Corasick automaton into a…",3,[[["self"],["bool"]],[R[1144]]]],[11,"prefilter",E,"Enable heuristic prefilter optimizations.",3,[[["self"],["bool"]],[R[1144]]]],[11,"byte_classes",E,"Shrink the size of the transition alphabet by mapping…",3,[[["self"],["bool"]],[R[1144]]]],[11,"premultiply",E,"Premultiply state identifiers in the transition table.…",3,[[["self"],["bool"]],[R[1144]]]],[11,"kind",E,"Return the kind of this error.",4,[[["self"]],[R[401]]]],[0,"packed",E,"A lower level API for packed multiple substring search,…",N,N],[3,"Builder",R[1153],"A builder for constructing a packed searcher from a…",N,N],[3,"Config",E,"The configuration for a packed multiple pattern searcher.",N,N],[3,"FindIter",E,"An iterator over non-overlapping matches from a packed…",N,N],[3,"Searcher",E,"A packed searcher for quickly finding occurrences of…",N,N],[4,R[1156],E,"A knob for controlling the match semantics of a packed…",N,N],[13,R[1145],E,R[1146],5,N],[13,R[1147],E,R[1148],5,N],[11,"new",E,"Create a new default configuration. A default…",6,[[],["config"]]],[11,"builder",E,"Create a packed builder from this configuration. The…",6,[[["self"]],["builder"]]],[11,R[1149],E,"Set the match semantics for this configuration.",6,[[["self"],[R[1151]]],["config"]]],[11,"new",E,"Create a new builder for constructing a multi-pattern…",7,[[],["builder"]]],[11,"build",E,"Build a searcher from the patterns added to this builder…",7,[[["self"]],[[R[23],["searcher"]],["searcher"]]]],[11,"add",E,"Add the given pattern to this set to match.",7,[[["self"],["asref"]],["builder"]]],[11,"extend",E,"Add the given iterator of patterns to this set to match.",7,[[["self"],["i"]],["builder"]]],[11,"new",E,"A convenience function for constructing a searcher from an…",8,[[["i"]],[[R[23],["searcher"]],["searcher"]]]],[11,"find",E,R[1150],8,[[["self"],["asref"]],[["match"],[R[23],["match"]]]]],[11,"find_at",E,R[1150],8,[[["self"],["usize"],["asref"]],[["match"],[R[23],["match"]]]]],[11,R[1788],E,"Return an iterator of non-overlapping occurrences of the…",8,[[["self"],["b"]],["finditer"]]],[11,R[1149],E,"Returns the match kind used by this packed searcher.",8,[[["self"]],[R[1151]]]],[11,"minimum_len",E,"Returns the minimum length of a haystack that is required…",8,[[["self"]],["usize"]]],[11,"heap_bytes",E,R[1152],8,[[["self"]],["usize"]]],[8,"StateID",R[1140],"A trait describing the representation of an automaton's…",N,N],[10,R[1645],E,"Convert from a `usize` to this implementation's…",9,[[["usize"]],["self"]]],[10,R[976],E,"Convert this implementation's representation to a `usize`.",9,[[],["usize"]]],[10,"max_id",E,"Return the maximum state identifier supported by this…",9,[[],["usize"]]],[11,"pattern",E,"Returns the identifier of the pattern that matched.",10,[[["self"]],["usize"]]],[11,"start",E,"The starting position of the match.",10,[[["self"]],["usize"]]],[11,"end",E,"The ending position of the match.",10,[[["self"]],["usize"]]],[11,R[25],E,"Returns true if and only if this match is empty. That is,…",10,[[["self"]],["bool"]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[46],E,E,2,[[["self"]],[T]]],[11,R[47],E,E,2,[[["self"],[T]]]],[11,R[4],E,E,2,[[[U]],[R[3]]]],[11,R[5],E,E,2,[[],[R[3]]]],[11,R[7],E,E,2,[[["self"]],[T]]],[11,R[6],E,E,2,[[["self"]],[T]]],[11,R[8],E,E,2,[[["self"]],[R[9]]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[46],E,E,3,[[["self"]],[T]]],[11,R[47],E,E,3,[[["self"],[T]]]],[11,R[4],E,E,3,[[[U]],[R[3]]]],[11,R[5],E,E,3,[[],[R[3]]]],[11,R[7],E,E,3,[[["self"]],[T]]],[11,R[6],E,E,3,[[["self"]],[T]]],[11,R[8],E,E,3,[[["self"]],[R[9]]]],[11,"into",E,E,11,[[],[U]]],[11,R[45],E,E,11,[[],["i"]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[4],E,E,11,[[[U]],[R[3]]]],[11,R[5],E,E,11,[[],[R[3]]]],[11,R[7],E,E,11,[[["self"]],[T]]],[11,R[6],E,E,11,[[["self"]],[T]]],[11,R[8],E,E,11,[[["self"]],[R[9]]]],[11,"into",E,E,12,[[],[U]]],[11,R[45],E,E,12,[[],["i"]]],[11,"from",E,E,12,[[[T]],[T]]],[11,R[4],E,E,12,[[[U]],[R[3]]]],[11,R[5],E,E,12,[[],[R[3]]]],[11,R[7],E,E,12,[[["self"]],[T]]],[11,R[6],E,E,12,[[["self"]],[T]]],[11,R[8],E,E,12,[[["self"]],[R[9]]]],[11,"into",E,E,13,[[],[U]]],[11,R[45],E,E,13,[[],["i"]]],[11,"from",E,E,13,[[[T]],[T]]],[11,R[4],E,E,13,[[[U]],[R[3]]]],[11,R[5],E,E,13,[[],[R[3]]]],[11,R[7],E,E,13,[[["self"]],[T]]],[11,R[6],E,E,13,[[["self"]],[T]]],[11,R[8],E,E,13,[[["self"]],[R[9]]]],[11,"into",E,E,4,[[],[U]]],[11,R[113],E,E,4,[[["self"]],["string"]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[46],E,E,4,[[["self"]],[T]]],[11,R[47],E,E,4,[[["self"],[T]]]],[11,R[4],E,E,4,[[[U]],[R[3]]]],[11,R[5],E,E,4,[[],[R[3]]]],[11,R[7],E,E,4,[[["self"]],[T]]],[11,R[6],E,E,4,[[["self"]],[T]]],[11,R[8],E,E,4,[[["self"]],[R[9]]]],[11,"into",E,E,10,[[],[U]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[46],E,E,10,[[["self"]],[T]]],[11,R[47],E,E,10,[[["self"],[T]]]],[11,R[4],E,E,10,[[[U]],[R[3]]]],[11,R[5],E,E,10,[[],[R[3]]]],[11,R[7],E,E,10,[[["self"]],[T]]],[11,R[6],E,E,10,[[["self"]],[T]]],[11,R[8],E,E,10,[[["self"]],[R[9]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[46],E,E,0,[[["self"]],[T]]],[11,R[47],E,E,0,[[["self"],[T]]]],[11,R[4],E,E,0,[[[U]],[R[3]]]],[11,R[5],E,E,0,[[],[R[3]]]],[11,R[7],E,E,0,[[["self"]],[T]]],[11,R[6],E,E,0,[[["self"]],[T]]],[11,R[8],E,E,0,[[["self"]],[R[9]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[46],E,E,1,[[["self"]],[T]]],[11,R[47],E,E,1,[[["self"],[T]]]],[11,R[4],E,E,1,[[[U]],[R[3]]]],[11,R[5],E,E,1,[[],[R[3]]]],[11,R[7],E,E,1,[[["self"]],[T]]],[11,R[6],E,E,1,[[["self"]],[T]]],[11,R[8],E,E,1,[[["self"]],[R[9]]]],[11,"into",R[1153],E,7,[[],[U]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[46],E,E,7,[[["self"]],[T]]],[11,R[47],E,E,7,[[["self"],[T]]]],[11,R[4],E,E,7,[[[U]],[R[3]]]],[11,R[5],E,E,7,[[],[R[3]]]],[11,R[7],E,E,7,[[["self"]],[T]]],[11,R[6],E,E,7,[[["self"]],[T]]],[11,R[8],E,E,7,[[["self"]],[R[9]]]],[11,"into",E,E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[46],E,E,6,[[["self"]],[T]]],[11,R[47],E,E,6,[[["self"],[T]]]],[11,R[4],E,E,6,[[[U]],[R[3]]]],[11,R[5],E,E,6,[[],[R[3]]]],[11,R[7],E,E,6,[[["self"]],[T]]],[11,R[6],E,E,6,[[["self"]],[T]]],[11,R[8],E,E,6,[[["self"]],[R[9]]]],[11,"into",E,E,14,[[],[U]]],[11,R[45],E,E,14,[[],["i"]]],[11,"from",E,E,14,[[[T]],[T]]],[11,R[4],E,E,14,[[[U]],[R[3]]]],[11,R[5],E,E,14,[[],[R[3]]]],[11,R[7],E,E,14,[[["self"]],[T]]],[11,R[6],E,E,14,[[["self"]],[T]]],[11,R[8],E,E,14,[[["self"]],[R[9]]]],[11,"into",E,E,8,[[],[U]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[46],E,E,8,[[["self"]],[T]]],[11,R[47],E,E,8,[[["self"],[T]]]],[11,R[4],E,E,8,[[[U]],[R[3]]]],[11,R[5],E,E,8,[[],[R[3]]]],[11,R[7],E,E,8,[[["self"]],[T]]],[11,R[6],E,E,8,[[["self"]],[T]]],[11,R[8],E,E,8,[[["self"]],[R[9]]]],[11,"into",E,E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[46],E,E,5,[[["self"]],[T]]],[11,R[47],E,E,5,[[["self"],[T]]]],[11,R[4],E,E,5,[[[U]],[R[3]]]],[11,R[5],E,E,5,[[],[R[3]]]],[11,R[7],E,E,5,[[["self"]],[T]]],[11,R[6],E,E,5,[[["self"]],[T]]],[11,R[8],E,E,5,[[["self"]],[R[9]]]],[11,R[83],R[1140],E,3,[[],[R[1144]]]],[11,R[83],E,E,0,[[],[R[1151]]]],[11,R[83],R[1153],E,5,[[],[R[1151]]]],[11,R[83],E,E,6,[[],["config"]]],[11,R[83],E,E,7,[[],["builder"]]],[11,"clone",R[1140],E,2,[[["self"]],[R[1142]]]],[11,"clone",E,E,3,[[["self"]],[R[1144]]]],[11,"clone",E,E,0,[[["self"]],[R[1151]]]],[11,"clone",E,E,4,[[["self"]],["error"]]],[11,"clone",E,E,1,[[["self"]],[R[401]]]],[11,"clone",R[1153],E,5,[[["self"]],[R[1151]]]],[11,"clone",E,E,6,[[["self"]],["config"]]],[11,"clone",E,E,7,[[["self"]],["builder"]]],[11,"clone",E,E,8,[[["self"]],["searcher"]]],[11,"clone",R[1140],E,10,[[["self"]],["match"]]],[11,"eq",E,E,0,[[["self"],[R[1151]]],["bool"]]],[11,"eq",R[1153],E,5,[[["self"],[R[1151]]],["bool"]]],[11,"eq",R[1140],E,10,[[["self"],["match"]],["bool"]]],[11,"ne",E,E,10,[[["self"],["match"]],["bool"]]],[11,"next",E,E,11,[[["self"]],[["match"],[R[23],["match"]]]]],[11,"next",E,E,12,[[["self"]],[["match"],[R[23],["match"]]]]],[11,"next",E,E,13,[[["self"]],[[R[3],["match"]],[R[23],[R[3]]]]]],[11,"next",R[1153],E,14,[[["self"]],[["match"],[R[23],["match"]]]]],[11,"hash",R[1140],E,10,[[["self"],["__h"]]]],[11,"fmt",E,E,2,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,11,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,12,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,13,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,3,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,0,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,4,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,1,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[1153],E,5,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,6,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,7,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,8,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,14,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[1140],E,10,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,4,[[["self"],[R[10]]],[R[3]]]],[11,R[157],E,E,4,[[["self"]],["str"]]]],"p":[[4,R[1156]],[4,R[372]],[3,R[1154]],[3,R[1155]],[3,"Error"],[4,R[1156]],[3,"Config"],[3,"Builder"],[3,"Searcher"],[8,"StateID"],[3,"Match"],[3,"FindIter"],[3,R[1157]],[3,R[1158]],[3,"FindIter"]]};
searchIndex["ansi_term"]={"doc":"This is a library for controlling colours and formatting,…","i":[[3,"Prefix","ansi_term","Like `ANSIString`, but only displays the style prefix.",N,N],[3,"Infix",E,"Like `ANSIString`, but only displays the difference…",N,N],[3,"Suffix",E,"Like `ANSIString`, but only displays the style suffix.",N,N],[3,"Style",E,"A style is a collection of properties that can format a…",N,N],[12,"foreground",E,"The style's foreground colour, if it has one.",0,N],[12,"background",E,"The style's background colour, if it has one.",0,N],[12,"is_bold",E,"Whether this style is bold.",0,N],[12,"is_dimmed",E,"Whether this style is dimmed.",0,N],[12,"is_italic",E,"Whether this style is italic.",0,N],[12,"is_underline",E,"Whether this style is underlined.",0,N],[12,"is_blink",E,"Whether this style is blinking.",0,N],[12,"is_reverse",E,"Whether this style has reverse colours.",0,N],[12,"is_hidden",E,"Whether this style is hidden.",0,N],[12,"is_strikethrough",E,"Whether this style is struckthrough.",0,N],[3,R[343],E,"An `ANSIGenericString` includes a generic string type and…",N,N],[3,R[342],E,"A set of `ANSIGenericString`s collected together, in order…",N,N],[12,"0",E,E,1,N],[4,"Colour",E,R[317],N,N],[13,"Black",E,R[318],2,N],[13,"Red",E,R[319],2,N],[13,"Green",E,R[320],2,N],[13,"Yellow",E,R[321],2,N],[13,"Blue",E,R[322],2,N],[13,"Purple",E,R[323],2,N],[13,"Cyan",E,R[324],2,N],[13,"White",E,R[325],2,N],[13,"Fixed",E,R[326],2,N],[13,"RGB",E,R[327],2,N],[4,"Color",E,R[317],N,N],[13,"Black",E,R[318],2,N],[13,"Red",E,R[319],2,N],[13,"Green",E,R[320],2,N],[13,"Yellow",E,R[321],2,N],[13,"Blue",E,R[322],2,N],[13,"Purple",E,R[323],2,N],[13,"Cyan",E,R[324],2,N],[13,"White",E,R[325],2,N],[13,"Fixed",E,R[326],2,N],[13,"RGB",E,R[327],2,N],[5,R[340],E,"A function to construct an `ANSIStrings` instance.",N,[[],["ansistrings"]]],[5,R[341],E,"A function to construct an `ANSIByteStrings` instance.",N,[[],["ansibytestrings"]]],[11,"prefix",E,"The prefix for this style.",0,[[],["prefix"]]],[11,"infix",E,"The infix between this style and another.",0,[[["style"]],["infix"]]],[11,"suffix",E,"The suffix for this style.",0,[[],["suffix"]]],[11,"prefix",E,"The prefix for this colour.",2,[[],["prefix"]]],[11,"infix",E,"The infix between this colour and another.",2,[[["colour"]],["infix"]]],[11,"suffix",E,"The suffix for this colour.",2,[[],["suffix"]]],[11,"new",E,"Creates a new Style with no differences.",0,[[],["style"]]],[11,"bold",E,R[329],0,[[["self"]],["style"]]],[11,"dimmed",E,R[330],0,[[["self"]],["style"]]],[11,"italic",E,R[331],0,[[["self"]],["style"]]],[11,R[332],E,R[333],0,[[["self"]],["style"]]],[11,"blink",E,R[334],0,[[["self"]],["style"]]],[11,"reverse",E,R[335],0,[[["self"]],["style"]]],[11,"hidden",E,R[328],0,[[["self"]],["style"]]],[11,R[336],E,R[328],0,[[["self"]],["style"]]],[11,"fg",E,"Returns a `Style` with the foreground colour property set.",0,[[["self"],["colour"]],["style"]]],[11,"on",E,R[337],0,[[["self"],["colour"]],["style"]]],[11,"is_plain",E,"Return true if this `Style` has no actual styles, and can…",0,[[],["bool"]]],[11,"normal",E,"Return a `Style` with the foreground colour set to this…",2,[[],["style"]]],[11,"bold",E,R[329],2,[[],["style"]]],[11,"dimmed",E,R[330],2,[[],["style"]]],[11,"italic",E,R[331],2,[[],["style"]]],[11,R[332],E,R[333],2,[[],["style"]]],[11,"blink",E,R[334],2,[[],["style"]]],[11,"reverse",E,R[335],2,[[],["style"]]],[11,"hidden",E,R[328],2,[[],["style"]]],[11,R[336],E,"Returns a `Style` with the strikethrough property set.",2,[[],["style"]]],[11,"on",E,R[337],2,[[["colour"]],["style"]]],[11,"paint",E,R[338],0,[[["i"]],[[R[339]],["toowned"],["sized"]]]],[11,"paint",E,R[338],2,[[["i"]],[[R[339]],["toowned"],["sized"]]]],[6,R[344],E,"An ANSI String is a string coupled with the `Style` to…",N,N],[6,R[345],E,"An `ANSIByteString` represents a formatted series of…",N,N],[6,R[340],E,"A set of `ANSIString`s collected together, in order to be…",N,N],[6,R[341],E,"A set of `ANSIByteString`s collected together, in order to…",N,N],[11,"into",E,E,3,[[],[U]]],[11,R[113],E,E,3,[[["self"]],["string"]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[46],E,E,3,[[["self"]],[T]]],[11,R[47],E,E,3,[[["self"],[T]]]],[11,R[4],E,E,3,[[[U]],[R[3]]]],[11,R[5],E,E,3,[[],[R[3]]]],[11,R[7],E,E,3,[[["self"]],[T]]],[11,R[6],E,E,3,[[["self"]],[T]]],[11,R[8],E,E,3,[[["self"]],[R[9]]]],[11,"into",E,E,4,[[],[U]]],[11,R[113],E,E,4,[[["self"]],["string"]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[46],E,E,4,[[["self"]],[T]]],[11,R[47],E,E,4,[[["self"],[T]]]],[11,R[4],E,E,4,[[[U]],[R[3]]]],[11,R[5],E,E,4,[[],[R[3]]]],[11,R[7],E,E,4,[[["self"]],[T]]],[11,R[6],E,E,4,[[["self"]],[T]]],[11,R[8],E,E,4,[[["self"]],[R[9]]]],[11,"into",E,E,5,[[],[U]]],[11,R[113],E,E,5,[[["self"]],["string"]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[46],E,E,5,[[["self"]],[T]]],[11,R[47],E,E,5,[[["self"],[T]]]],[11,R[4],E,E,5,[[[U]],[R[3]]]],[11,R[5],E,E,5,[[],[R[3]]]],[11,R[7],E,E,5,[[["self"]],[T]]],[11,R[6],E,E,5,[[["self"]],[T]]],[11,R[8],E,E,5,[[["self"]],[R[9]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[46],E,E,0,[[["self"]],[T]]],[11,R[47],E,E,0,[[["self"],[T]]]],[11,R[4],E,E,0,[[[U]],[R[3]]]],[11,R[5],E,E,0,[[],[R[3]]]],[11,R[7],E,E,0,[[["self"]],[T]]],[11,R[6],E,E,0,[[["self"]],[T]]],[11,R[8],E,E,0,[[["self"]],[R[9]]]],[11,"into",E,E,6,[[],[U]]],[11,R[113],E,E,6,[[["self"]],["string"]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[46],E,E,6,[[["self"]],[T]]],[11,R[47],E,E,6,[[["self"],[T]]]],[11,R[4],E,E,6,[[[U]],[R[3]]]],[11,R[5],E,E,6,[[],[R[3]]]],[11,R[7],E,E,6,[[["self"]],[T]]],[11,R[6],E,E,6,[[["self"]],[T]]],[11,R[8],E,E,6,[[["self"]],[R[9]]]],[11,"into",E,E,1,[[],[U]]],[11,R[113],E,E,1,[[["self"]],["string"]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[4],E,E,1,[[[U]],[R[3]]]],[11,R[5],E,E,1,[[],[R[3]]]],[11,R[7],E,E,1,[[["self"]],[T]]],[11,R[6],E,E,1,[[["self"]],[T]]],[11,R[8],E,E,1,[[["self"]],[R[9]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[46],E,E,2,[[["self"]],[T]]],[11,R[47],E,E,2,[[["self"],[T]]]],[11,R[4],E,E,2,[[[U]],[R[3]]]],[11,R[5],E,E,2,[[],[R[3]]]],[11,R[7],E,E,2,[[["self"]],[T]]],[11,R[6],E,E,2,[[["self"]],[T]]],[11,R[8],E,E,2,[[["self"]],[R[9]]]],[11,R[83],E,"Returns a style with no properties set. Formatting text…",0,[[],["style"]]],[11,"clone",E,E,3,[[["self"]],["prefix"]]],[11,"clone",E,E,4,[[["self"]],["infix"]]],[11,"clone",E,E,5,[[["self"]],["suffix"]]],[11,"clone",E,E,0,[[["self"]],["style"]]],[11,"clone",E,E,2,[[["self"]],["colour"]]],[11,"clone",E,E,6,[[["self"]],[R[339]]]],[11,"eq",E,E,0,[[["self"],["style"]],["bool"]]],[11,"ne",E,E,0,[[["self"],["style"]],["bool"]]],[11,"eq",E,E,2,[[["self"],["colour"]],["bool"]]],[11,"ne",E,E,2,[[["self"],["colour"]],["bool"]]],[11,"eq",E,E,6,[[["self"],[R[339]]],["bool"]]],[11,"ne",E,E,6,[[["self"],[R[339]]],["bool"]]],[11,"from",E,"You can turn a `Colour` into a `Style` with the foreground…",0,[[["colour"]],["style"]]],[11,"from",E,E,6,[[["i"]],[R[339]]]],[11,"deref",E,E,6,[[["self"]],["s"]]],[11,"fmt",E,E,3,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,4,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,5,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,2,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,6,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,0,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,3,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,4,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,5,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,7,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,8,[[["self"],[R[10]]],[R[3]]]],[11,"write_to",E,"Write an `ANSIByteString` to an `io::Write`. This writes…",9,[[["self"],["w"]],[R[3]]]],[11,"write_to",E,"Write `ANSIByteStrings` to an `io::Write`. This writes the…",10,[[["self"],["w"]],[R[3]]]]],"p":[[3,"Style"],[3,R[342]],[4,"Colour"],[3,"Prefix"],[3,"Infix"],[3,"Suffix"],[3,R[343]],[6,R[344]],[6,R[340]],[6,R[345]],[6,R[341]]]};
searchIndex["approx"]={"doc":"A crate that provides facilities for testing the…","i":[[3,"Relative","approx",R[99],N,N],[12,"lhs",E,R[100],0,N],[12,"rhs",E,R[101],0,N],[12,"epsilon",E,R[102],0,N],[12,R[103],E,R[2913],0,N],[3,"Ulps",E,R[99],N,N],[12,"lhs",E,R[100],1,N],[12,"rhs",E,R[101],1,N],[12,"epsilon",E,R[102],1,N],[12,"max_ulps",E,R[2914],1,N],[8,"ApproxEq",E,R[2901],N,N],[16,"Epsilon",E,R[2902],2,N],[10,R[2903],E,R[2904],2,[[]]],[10,R[2905],E,R[2906],2,[[]]],[10,R[2907],E,R[2908],2,[[],["u32"]]],[10,R[108],E,R[2909],2,[[["self"]],["bool"]]],[11,R[109],E,R[2910],2,[[["self"]],["bool"]]],[10,"ulps_eq",E,R[2911],2,[[["self"],["u32"]],["bool"]]],[11,"ulps_ne",E,R[2912],2,[[["self"],["u32"]],["bool"]]],[11,"new",E,R[3101],0,[[[T]],[R[104]]]],[11,"epsilon",E,R[105],0,[[],[R[104]]]],[11,R[103],E,R[3102],0,[[],[R[104]]]],[11,"eq",E,R[106],0,[[],["bool"]]],[11,"ne",E,R[107],0,[[],["bool"]]],[11,"new",E,R[3103],1,[[[T]],["ulps"]]],[11,"epsilon",E,R[105],1,[[],["ulps"]]],[11,"max_ulps",E,R[3104],1,[[["u32"]],["ulps"]]],[11,"eq",E,R[106],1,[[],["bool"]]],[11,"ne",E,R[107],1,[[],["bool"]]],[14,R[108],E,R[110],N,N],[14,R[109],E,R[111],N,N],[14,R[2915],E,E,N,N],[14,R[2918],E,E,N,N],[14,"ulps_eq",E,R[110],N,N],[14,"ulps_ne",E,R[111],N,N],[14,R[2917],E,E,N,N],[14,R[2916],E,E,N,N],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[4],E,E,0,[[[U]],[R[3]]]],[11,R[5],E,E,0,[[],[R[3]]]],[11,R[7],E,E,0,[[["self"]],[T]]],[11,R[6],E,E,0,[[["self"]],[T]]],[11,R[8],E,E,0,[[["self"]],[R[9]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[4],E,E,1,[[[U]],[R[3]]]],[11,R[5],E,E,1,[[],[R[3]]]],[11,R[7],E,E,1,[[["self"]],[T]]],[11,R[6],E,E,1,[[["self"]],[T]]],[11,R[8],E,E,1,[[["self"]],[R[9]]]]],"p":[[3,"Relative"],[3,"Ulps"],[8,"ApproxEq"]]};
searchIndex["arrayref"]={"doc":"This package contains just four macros, which enable the…","i":[[14,"array_ref","arrayref","You can use `array_ref` to generate an array reference to…",N,N],[14,"array_refs",E,"You can use `array_refs` to generate a series of array…",N,N],[14,"mut_array_refs",E,"You can use `mut_array_refs` to generate a series of…",N,N],[14,"array_mut_ref",E,"You can use `array_mut_ref` to generate a mutable array…",N,N]],"p":[]};
searchIndex["arrayvec"]={"doc":"arrayvec provides the types `ArrayVec` and `ArrayString`:…","i":[[3,R[761],R[756],"A string with a fixed capacity.",N,N],[3,R[762],E,"Error value indicating insufficient capacity",N,N],[3,"ArrayVec",E,"A vector with a fixed capacity.",N,N],[3,R[306],E,"By-value iterator for `ArrayVec`.",N,N],[3,"Drain",E,"A draining iterator for `ArrayVec`.",N,N],[11,"new",E,"Create a new empty `ArrayString`.",0,[[],[R[757]]]],[11,"from",E,"Create a new `ArrayString` from a `str`.",0,[[["str"]],[[R[748],["str"]],[R[3],[R[748]]]]]],[11,"from_byte_string",E,"Create a new `ArrayString` from a byte string literal.",0,[[["a"]],[[R[3],[R[749]]],[R[749]]]]],[11,R[764],E,"Return the capacity of the `ArrayString`.",0,[[["self"]],["usize"]]],[11,"is_full",E,"Return if the `ArrayString` is completely filled.",0,[[["self"]],["bool"]]],[11,"push",E,R[750],0,[[["self"],["char"]]]],[11,"try_push",E,R[750],0,[[["self"],["char"]],[[R[3],[R[748]]],[R[748],["char"]]]]],[11,"push_str",E,R[751],0,[[["self"],["str"]]]],[11,"try_push_str",E,R[751],0,[[["self"],["str"]],[[R[748],["str"]],[R[3],[R[748]]]]]],[11,"pop",E,"Removes the last character from the string and returns it.",0,[[["self"]],[[R[23],["char"]],["char"]]]],[11,R[765],E,"Shortens this `ArrayString` to the specified length.",0,[[["self"],["usize"]]]],[11,"remove",E,"Removes a `char` from this `ArrayString` at a byte…",0,[[["self"],["usize"]],["char"]]],[11,"clear",E,"Make the string empty.",0,[[["self"]]]],[11,"set_len",E,"Set the strings’s length.",0,[[["self"],["usize"]]]],[11,"as_str",E,"Return a string slice of the whole `ArrayString`.",0,[[["self"]],["str"]]],[11,"new",E,"Create a new `CapacityError` from `element`.",1,[[[T]],[R[748]]]],[11,"element",E,"Extract the overflowing element",1,[[],[T]]],[11,"simplify",E,"Convert into a `CapacityError` that does not carry an…",1,[[],[R[748]]]],[8,"Array",E,"Trait for fixed size arrays.",N,N],[16,"Item",E,"The array’s element type",2,N],[8,R[763],E,"`RangeArgument` is implemented by Rust's built-in range…",N,N],[11,"start",E,R[759],3,[[["self"]],[[R[23],["usize"]],["usize"]]]],[11,"end",E,R[760],3,[[["self"]],[[R[23],["usize"]],["usize"]]]],[11,"new",E,"Create a new empty `ArrayVec`.",4,[[],[R[756]]]],[11,"len",E,"Return the number of elements in the `ArrayVec`.",4,[[["self"]],["usize"]]],[11,R[764],E,"Return the capacity of the `ArrayVec`.",4,[[["self"]],["usize"]]],[11,"is_full",E,"Return if the `ArrayVec` is completely filled.",4,[[["self"]],["bool"]]],[11,"push",E,R[752],4,[[["self"]]]],[11,"try_push",E,R[752],4,[[["self"]],[[R[3],[R[748]]],[R[748]]]]],[11,"push_unchecked",E,"Push `element` to the end of the vector without checking…",4,[[["self"]]]],[11,"insert",E,R[753],4,[[["self"],["usize"]]]],[11,"try_insert",E,R[753],4,[[["self"],["usize"]],[[R[3],[R[748]]],[R[748]]]]],[11,"pop",E,"Remove the last element in the vector and return it.",4,[[["self"]],[R[23]]]],[11,R[120],E,R[754],4,[[["self"],["usize"]]]],[11,"swap_pop",E,R[754],4,[[["self"],["usize"]],[R[23]]]],[11,"remove",E,R[755],4,[[["self"],["usize"]]]],[11,"pop_at",E,R[755],4,[[["self"],["usize"]],[R[23]]]],[11,R[765],E,"Shortens the vector, keeping the first `len` elements and…",4,[[["self"],["usize"]]]],[11,"clear",E,"Remove all elements in the vector.",4,[[["self"]]]],[11,"retain",E,R[313],4,[[["self"],["f"]]]],[11,"set_len",E,"Set the vector’s length without dropping or moving out…",4,[[["self"],["usize"]]]],[11,"drain",E,"Create a draining iterator that removes the specified…",4,[[["self"],["rangeargument"]],["drain"]]],[11,R[15],E,"Return the inner fixed size array, if it is full to its…",4,[[],[R[3]]]],[11,"dispose",E,"Dispose of `self` without the overwriting that is needed…",4,[[]]],[11,R[44],E,"Return a slice containing all elements of the vector.",4,[[["self"]]]],[11,R[74],E,"Return a mutable slice containing all elements of the…",4,[[["self"]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[4],E,E,0,[[[U]],[R[3]]]],[11,"into",E,E,0,[[],[U]]],[11,R[5],E,E,0,[[],[R[3]]]],[11,R[6],E,E,0,[[["self"]],[T]]],[11,R[7],E,E,0,[[["self"]],[T]]],[11,R[8],E,E,0,[[["self"]],[R[9]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[4],E,E,1,[[[U]],[R[3]]]],[11,"into",E,E,1,[[],[U]]],[11,R[5],E,E,1,[[],[R[3]]]],[11,R[6],E,E,1,[[["self"]],[T]]],[11,R[7],E,E,1,[[["self"]],[T]]],[11,R[8],E,E,1,[[["self"]],[R[9]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[4],E,E,4,[[[U]],[R[3]]]],[11,R[45],E,E,4,[[],["i"]]],[11,"into",E,E,4,[[],[U]]],[11,R[5],E,E,4,[[],[R[3]]]],[11,R[6],E,E,4,[[["self"]],[T]]],[11,R[7],E,E,4,[[["self"]],[T]]],[11,R[8],E,E,4,[[["self"]],[R[9]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[4],E,E,5,[[[U]],[R[3]]]],[11,R[45],E,E,5,[[],["i"]]],[11,"into",E,E,5,[[],[U]]],[11,R[5],E,E,5,[[],[R[3]]]],[11,R[6],E,E,5,[[["self"]],[T]]],[11,R[7],E,E,5,[[["self"]],[T]]],[11,R[8],E,E,5,[[["self"]],[R[9]]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[4],E,E,6,[[[U]],[R[3]]]],[11,R[45],E,E,6,[[],["i"]]],[11,"into",E,E,6,[[],[U]]],[11,R[5],E,E,6,[[],[R[3]]]],[11,R[6],E,E,6,[[["self"]],[T]]],[11,R[7],E,E,6,[[["self"]],[T]]],[11,R[8],E,E,6,[[["self"]],[R[9]]]],[11,"deref",E,E,0,[[["self"]],["str"]]],[11,"deref",E,E,4,[[["self"]]]],[11,R[17],E,E,0,[[["self"]],["str"]]],[11,R[17],E,E,4,[[["self"]]]],[11,"from",E,E,4,[[["a"]],["self"]]],[11,"eq",E,E,0,[[["self"]],["bool"]]],[11,"eq",E,E,0,[[["self"],["str"]],["bool"]]],[11,"eq",E,E,1,[[["self"],[R[748]]],["bool"]]],[11,"ne",E,E,1,[[["self"],[R[748]]],["bool"]]],[11,"eq",E,E,4,[[["self"]],["bool"]]],[11,"eq",E,E,4,[[["self"]],["bool"]]],[11,"cmp",E,E,0,[[["self"]],[R[50]]]],[11,"cmp",E,E,1,[[["self"],[R[748]]],[R[50]]]],[11,"cmp",E,E,4,[[["self"],[R[756]]],[R[50]]]],[11,R[77],E,E,0,[[["self"]],[[R[23],[R[50]]],[R[50]]]]],[11,"lt",E,E,0,[[["self"]],["bool"]]],[11,"le",E,E,0,[[["self"]],["bool"]]],[11,"gt",E,E,0,[[["self"]],["bool"]]],[11,"ge",E,E,0,[[["self"]],["bool"]]],[11,R[77],E,E,0,[[["self"],["str"]],[[R[23],[R[50]]],[R[50]]]]],[11,"lt",E,E,0,[[["self"],["str"]],["bool"]]],[11,"le",E,E,0,[[["self"],["str"]],["bool"]]],[11,"gt",E,E,0,[[["self"],["str"]],["bool"]]],[11,"ge",E,E,0,[[["self"],["str"]],["bool"]]],[11,R[77],E,E,1,[[["self"],[R[748]]],[[R[23],[R[50]]],[R[50]]]]],[11,"lt",E,E,1,[[["self"],[R[748]]],["bool"]]],[11,"le",E,E,1,[[["self"],[R[748]]],["bool"]]],[11,"gt",E,E,1,[[["self"],[R[748]]],["bool"]]],[11,"ge",E,E,1,[[["self"],[R[748]]],["bool"]]],[11,R[77],E,E,4,[[["self"],[R[756]]],[[R[23],[R[50]]],[R[50]]]]],[11,"lt",E,E,4,[[["self"]],["bool"]]],[11,"le",E,E,4,[[["self"]],["bool"]]],[11,"ge",E,E,4,[[["self"]],["bool"]]],[11,"gt",E,E,4,[[["self"]],["bool"]]],[11,"hash",E,E,0,[[["self"],["h"]]]],[11,"hash",E,E,4,[[["self"],["h"]]]],[11,"fmt",E,E,0,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,1,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,5,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,4,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,0,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,1,[[["self"],[R[10]]],[R[3]]]],[11,"drop",E,E,4,[[["self"]]]],[11,"drop",E,E,5,[[["self"]]]],[11,"drop",E,E,6,[[["self"]]]],[11,"extend",E,E,4,[[["self"],[R[82]]]]],[11,R[81],E,E,4,[[[R[82]]],["self"]]],[11,R[45],E,E,4,[[],[R[766]]]],[11,R[52],E,E,5,[[["self"]],[R[23]]]],[11,R[52],E,E,6,[[["self"]],[R[23]]]],[11,"next",E,E,5,[[["self"]],[R[23]]]],[11,R[53],E,E,5,[[["self"]]]],[11,"next",E,E,6,[[["self"]],[R[23]]]],[11,R[53],E,E,6,[[["self"]]]],[11,"write_char",E,E,0,[[["self"],["char"]],[R[3]]]],[11,"write_str",E,E,0,[[["self"],["str"]],[R[3]]]],[11,"as_ref",E,E,0,[[["self"]],["str"]]],[11,"as_ref",E,E,4,[[["self"]]]],[11,"as_mut",E,E,4,[[["self"]]]],[11,"clone",E,E,0,[[["self"]],[R[757]]]],[11,R[758],E,E,0,[[["self"],["self"]]]],[11,"clone",E,E,1,[[["self"]],[R[748]]]],[11,"clone",E,E,5,[[["self"]],[R[766]]]],[11,"clone",E,E,4,[[["self"]],["self"]]],[11,R[758],E,E,4,[[["self"],["self"]]]],[11,R[83],E,"Return an empty `ArrayString`",0,[[],[R[757]]]],[11,R[83],E,"Return an empty array",4,[[],[R[756]]]],[11,R[6],E,E,0,[[["self"]],["str"]]],[11,R[6],E,E,4,[[["self"]]]],[11,R[7],E,E,4,[[["self"]]]],[11,"start",E,R[759],3,[[["self"]],[[R[23],["usize"]],["usize"]]]],[11,"end",E,R[760],3,[[["self"]],[[R[23],["usize"]],["usize"]]]]],"p":[[3,R[761]],[3,R[762]],[8,"Array"],[8,R[763]],[3,"ArrayVec"],[3,R[306]],[3,"Drain"]]};
searchIndex["atty"]={"doc":"atty is a simple utility that answers one question > is…","i":[[4,"Stream","atty","possible stream sources",N,N],[13,"Stdout",E,E,0,N],[13,"Stderr",E,E,0,N],[13,"Stdin",E,E,0,N],[5,"is",E,"returns true if this is a tty",N,[[["stream"]],["bool"]]],[5,"isnt",E,"returns true if this is not a tty",N,[[["stream"]],["bool"]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[4],E,E,0,[[[U]],[R[3]]]],[11,"into",E,E,0,[[],[U]]],[11,R[5],E,E,0,[[],[R[3]]]],[11,R[6],E,E,0,[[["self"]],[T]]],[11,R[7],E,E,0,[[["self"]],[T]]],[11,R[8],E,E,0,[[["self"]],[R[9]]]],[11,"fmt",E,E,0,[[["self"],[R[10]]],[R[3]]]],[11,"clone",E,E,0,[[["self"]],["stream"]]]],"p":[[4,"Stream"]]};
searchIndex["backtrace"]={"doc":"A library for acquiring a backtrace at runtime","i":[[3,"Frame",R[1705],"A trait representing one frame of a backtrace, yielded to…",N,N],[3,"Symbol",E,"A trait representing the resolution of a symbol in a file.",N,N],[3,"SymbolName",E,"A wrapper around a symbol name to provide ergonomic…",N,N],[3,R[3512],E,"Representation of an owned and self-contained backtrace.",N,N],[3,R[1707],E,"Captured version of a frame in a backtrace.",N,N],[3,R[1708],E,"Captured version of a symbol in a backtrace.",N,N],[4,R[1706],E,"A platform independent representation of a string. When…",N,N],[13,"Bytes",E,"A slice, typically provided on Unix platforms.",0,N],[13,"Wide",E,"Wide strings typically from Windows.",0,N],[5,"trace_unsynchronized",E,"Same as `trace`, only unsafe as it's unsynchronized.",N,[[["fnmut"]]]],[5,"resolve_frame_unsynchronized",E,"Same as `resolve_frame`, only unsafe as it's unsynchronized.",N,[[["frame"],["f"]]]],[5,"resolve_unsynchronized",E,"Same as `resolve`, only unsafe as it's unsynchronized.",N,[[["f"]]]],[5,"clear_symbol_cache",E,"Attempt to reclaim that cached memory used to symbolicate…",N,[[]]],[5,"trace",E,"Inspects the current call-stack, passing all active frames…",N,[[["fnmut"]]]],[5,"resolve",E,"Resolve an address to a symbol, passing the symbol to the…",N,[[["fnmut"]]]],[5,"resolve_frame",E,"Resolve a previously capture frame to a symbol, passing…",N,[[["frame"],["fnmut"]]]],[11,"ip",E,"Returns the current instruction pointer of this frame.",1,[[["self"]]]],[11,R[1703],E,"Returns the starting symbol address of the frame of this…",1,[[["self"]]]],[11,"name",E,"Returns the name of this function.",2,[[["self"]],[[R[1702]],[R[23],[R[1702]]]]]],[11,"addr",E,"Returns the starting address of this function.",2,[[["self"]],[R[23]]]],[11,"filename_raw",E,"Returns the raw filename as a slice. This is mainly useful…",2,[[["self"]],[[R[1701]],[R[23],[R[1701]]]]]],[11,"lineno",E,"Returns the line number for where this symbol is currently…",2,[[["self"]],[[R[23],["u32"]],["u32"]]]],[11,"filename",E,"Returns the file name where this function was defined.",2,[[["self"]],[[R[23],["path"]],["path"]]]],[11,"new",E,"Creates a new symbol name from the raw underlying bytes.",3,[[],[R[1702]]]],[11,"as_str",E,"Returns the raw (mangled) symbol name as a `str` if the…",3,[[["self"]],[["str"],[R[23],["str"]]]]],[11,R[84],E,"Returns the raw symbol name as a list of bytes",3,[[["self"]]]],[11,"to_str_lossy",E,"Lossy converts to a `Cow<str>`, will allocate if `Bytes`…",0,[[["self"]],[["str"],["cow",["str"]]]]],[11,"into_path_buf",E,"Provides a `Path` representation of `BytesOrWideString`.",0,[[],["pathbuf"]]],[11,"new",E,"Captures a backtrace at the callsite of this function,…",4,[[],[R[1705]]]],[11,"new_unresolved",E,"Similar to `new` except that this does not resolve any…",4,[[],[R[1705]]]],[11,"frames",E,"Returns the frames from when this backtrace was captured.",4,[[["self"]]]],[11,"resolve",E,"If this backtrace was created from `new_unresolved` then…",4,[[["self"]]]],[11,"ip",E,"Same as `Frame::ip`",5,[[["self"]]]],[11,R[1703],E,"Same as `Frame::symbol_address`",5,[[["self"]]]],[11,"symbols",E,"Returns the list of symbols that this frame corresponds to.",5,[[["self"]]]],[11,"name",E,"Same as `Symbol::name`",6,[[["self"]],[[R[1702]],[R[23],[R[1702]]]]]],[11,"addr",E,"Same as `Symbol::addr`",6,[[["self"]],[R[23]]]],[11,"filename",E,"Same as `Symbol::filename`",6,[[["self"]],[[R[23],["path"]],["path"]]]],[11,"lineno",E,"Same as `Symbol::lineno`",6,[[["self"]],[[R[23],["u32"]],["u32"]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[4],E,E,1,[[[U]],[R[3]]]],[11,"into",E,E,1,[[],[U]]],[11,R[5],E,E,1,[[],[R[3]]]],[11,R[6],E,E,1,[[["self"]],[T]]],[11,R[7],E,E,1,[[["self"]],[T]]],[11,R[8],E,E,1,[[["self"]],[R[9]]]],[11,R[46],E,E,1,[[["self"]],[T]]],[11,R[47],E,E,1,[[["self"],[T]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[4],E,E,2,[[[U]],[R[3]]]],[11,"into",E,E,2,[[],[U]]],[11,R[5],E,E,2,[[],[R[3]]]],[11,R[6],E,E,2,[[["self"]],[T]]],[11,R[7],E,E,2,[[["self"]],[T]]],[11,R[8],E,E,2,[[["self"]],[R[9]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[4],E,E,3,[[[U]],[R[3]]]],[11,"into",E,E,3,[[],[U]]],[11,R[5],E,E,3,[[],[R[3]]]],[11,R[6],E,E,3,[[["self"]],[T]]],[11,R[7],E,E,3,[[["self"]],[T]]],[11,R[8],E,E,3,[[["self"]],[R[9]]]],[11,R[113],E,E,3,[[["self"]],["string"]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[4],E,E,4,[[[U]],[R[3]]]],[11,"into",E,E,4,[[],[U]]],[11,R[5],E,E,4,[[],[R[3]]]],[11,R[6],E,E,4,[[["self"]],[T]]],[11,R[7],E,E,4,[[["self"]],[T]]],[11,R[8],E,E,4,[[["self"]],[R[9]]]],[11,R[46],E,E,4,[[["self"]],[T]]],[11,R[47],E,E,4,[[["self"],[T]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[4],E,E,5,[[[U]],[R[3]]]],[11,"into",E,E,5,[[],[U]]],[11,R[5],E,E,5,[[],[R[3]]]],[11,R[6],E,E,5,[[["self"]],[T]]],[11,R[7],E,E,5,[[["self"]],[T]]],[11,R[8],E,E,5,[[["self"]],[R[9]]]],[11,R[46],E,E,5,[[["self"]],[T]]],[11,R[47],E,E,5,[[["self"],[T]]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[4],E,E,6,[[[U]],[R[3]]]],[11,"into",E,E,6,[[],[U]]],[11,R[5],E,E,6,[[],[R[3]]]],[11,R[6],E,E,6,[[["self"]],[T]]],[11,R[7],E,E,6,[[["self"]],[T]]],[11,R[8],E,E,6,[[["self"]],[R[9]]]],[11,R[46],E,E,6,[[["self"]],[T]]],[11,R[47],E,E,6,[[["self"],[T]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[4],E,E,0,[[[U]],[R[3]]]],[11,"into",E,E,0,[[],[U]]],[11,R[5],E,E,0,[[],[R[3]]]],[11,R[6],E,E,0,[[["self"]],[T]]],[11,R[7],E,E,0,[[["self"]],[T]]],[11,R[8],E,E,0,[[["self"]],[R[9]]]],[11,R[113],E,E,0,[[["self"]],["string"]]],[11,"from",E,E,4,[[[R[1704]],["vec",[R[1704]]]],["self"]]],[11,"fmt",E,E,1,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,2,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,3,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,0,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,4,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,5,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,6,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,3,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,0,[[["self"],[R[10]]],[R[3]]]],[11,"into",E,E,4,[[],[[R[1704]],["vec",[R[1704]]]]]],[11,"clone",E,E,1,[[["self"]],["frame"]]],[11,"clone",E,E,4,[[["self"]],[R[1705]]]],[11,"clone",E,E,5,[[["self"]],[R[1704]]]],[11,"clone",E,E,6,[[["self"]],["backtracesymbol"]]],[11,R[83],E,E,4,[[],[R[1705]]]]],"p":[[4,R[1706]],[3,"Frame"],[3,"Symbol"],[3,"SymbolName"],[3,R[3512]],[3,R[1707]],[3,R[1708]]]};
searchIndex["backtrace_sys"]={"doc":E,"i":[[4,R[1122],"backtrace_sys",E,N,N],[5,"backtrace_create_state",E,E,N,N],[5,"backtrace_syminfo",E,E,N,N],[5,"backtrace_pcinfo",E,E,N,N],[6,"backtrace_syminfo_callback",E,E,N,N],[6,"backtrace_full_callback",E,E,N,N],[6,"backtrace_error_callback",E,E,N,N],[11,"from",E,E,0,[[[T]],[T]]],[11,R[4],E,E,0,[[[U]],[R[3]]]],[11,"into",E,E,0,[[],[U]]],[11,R[5],E,E,0,[[],[R[3]]]],[11,R[6],E,E,0,[[["self"]],[T]]],[11,R[7],E,E,0,[[["self"]],[T]]],[11,R[8],E,E,0,[[["self"]],[R[9]]]]],"p":[[4,R[1122]]]};
searchIndex["bincode"]={"doc":"Bincode is a crate for encoding and decoding using a tiny…","i":[[3,"Config","bincode","A configuration builder whose options Bincode will use…",N,N],[4,R[372],E,"The kind of error that can be produced during a…",N,N],[13,"Io",E,"If the error stems from the reader/writer that is being…",0,N],[13,"InvalidUtf8Encoding",E,R[4570],0,N],[13,"InvalidBoolEncoding",E,R[4570],0,N],[13,"InvalidCharEncoding",E,R[4570],0,N],[13,"InvalidTagEncoding",E,"Returned if the deserializer attempts to deserialize the…",0,N],[13,"DeserializeAnyNotSupported",E,"Serde has a deserialize_any method that lets the format…",0,N],[13,"SizeLimit",E,"If (de)serializing a message takes more than the provided…",0,N],[13,"SequenceMustHaveLength",E,"Bincode can not encode sequences of unknown length (like…",0,N],[13,"Custom",E,"A custom error message from Serde.",0,N],[5,"config",E,"Get a default configuration object.",N,[[],["config"]]],[5,R[4574],E,"Serializes an object directly into a `Writer` using the…",N,[[["w"],[T]],[R[3]]]],[5,R[4563],E,R[4571],N,[[[T]],[["vec",["u8"]],[R[3],["vec"]]]]],[5,R[4576],E,"Deserializes an object directly from a `Read`er using the…",N,[[["r"]],[R[3]]]],[5,R[4577],E,R[4578],N,[[["r"]],[R[3]]]],[5,R[4354],E,R[4575],N,[[],[R[3]]]],[5,R[4572],E,R[4573],N,[[[T]],[[R[3],["u64"]],["u64"]]]],[11,"no_limit",E,"Sets the byte limit to be unlimited. This is the default.",1,[[["self"]],["self"]]],[11,"limit",E,"Sets the byte limit to `limit`.",1,[[["self"],["u64"]],["self"]]],[11,R[4043],E,"Sets the endianness to little-endian This is the default.",1,[[["self"]],["self"]]],[11,"big_endian",E,"Sets the endianness to big-endian",1,[[["self"]],["self"]]],[11,"native_endian",E,"Sets the endianness to the the machine-native endianness",1,[[["self"]],["self"]]],[11,R[4563],E,R[4571],1,[[["self"],[T]],[["vec",["u8"]],[R[3],["vec"]]]]],[11,R[4572],E,R[4573],1,[[["self"],[T]],[[R[3],["u64"]],["u64"]]]],[11,R[4574],E,"Serializes an object directly into a `Writer` using this…",1,[[["self"],["write"],[T]],[R[3]]]],[11,R[4354],E,R[4575],1,[[["self"]],[[R[3]],[R[4354]]]]],[11,"deserialize_seed",E,"Deserializes a slice of bytes with state `seed` using this…",1,[[["self"],["deserializeseed"]],[R[3]]]],[11,R[4576],E,"Deserializes an object directly from a `Read`er using this…",1,[[["self"],["read"]],[[R[4579]],[R[3]]]]],[11,R[4577],E,R[4578],1,[[["self"],["bincoderead"]],[[R[4579]],[R[3]]]]],[6,"Error",E,"An error that can be produced during (de)serializing.",N,N],[6,"Result",E,"The result of a serialization or deserialization operation.",N,N],[8,R[4580],E,"An optional Read trait for advanced Bincode usage.",N,N],[10,"forward_read_str",E,"Forwards reading `length` bytes of a string on to the…",2,[[["self"],["usize"],["v"]],[R[3]]]],[10,"get_byte_buffer",E,"Return the first `length` bytes of the internal byte buffer.",2,[[["self"],["usize"]],[["vec",["u8"]],[R[3],["vec"]]]]],[10,"forward_read_bytes",E,"Forwards reading `length` bytes on to the serde reader.",2,[[["self"],["usize"],["v"]],[R[3]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[4],E,E,1,[[[U]],[R[3]]]],[11,R[5],E,E,1,[[],[R[3]]]],[11,R[7],E,E,1,[[["self"]],[T]]],[11,R[6],E,E,1,[[["self"]],[T]]],[11,R[8],E,E,1,[[["self"]],[R[9]]]],[11,"into",E,E,0,[[],[U]]],[11,R[113],E,E,0,[[["self"]],["string"]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[4],E,E,0,[[[U]],[R[3]]]],[11,R[5],E,E,0,[[],[R[3]]]],[11,R[7],E,E,0,[[["self"]],[T]]],[11,R[6],E,E,0,[[["self"]],[T]]],[11,R[8],E,E,0,[[["self"]],[R[9]]]],[11,"from",E,E,3,[[["error"]],["error"]]],[11,"fmt",E,E,0,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,0,[[["self"],[R[10]]],[R[3]]]],[11,R[157],E,E,0,[[["self"]],["str"]]],[11,"cause",E,E,0,[[["self"]],[[R[23],["error"]],["error"]]]],[11,"custom",E,E,3,[[["display"]],["self"]]],[11,"custom",E,E,3,[[["display"]],["error"]]]],"p":[[4,R[372]],[3,"Config"],[8,R[4580]],[6,"Error"]]};
searchIndex["bitflags"]={"doc":"A typesafe bitmask flag generator useful for sets of…","i":[[14,"bitflags","bitflags","The macro used to generate the flag structure.",N,N]],"p":[]};
searchIndex["blake2b_simd"]={"doc":"GitHub crates.io Build Status","i":[[3,"Params",R[1126],"A parameter builder that exposes all the non-default…",N,N],[3,"State",E,"An incremental hasher for BLAKE2b.",N,N],[3,"Hash",E,"A finalized BLAKE2 hash, with constant-time equality.",N,N],[5,"blake2b",E,"Compute the BLAKE2b hash of a slice of bytes all at once,…",N,[[],["hash"]]],[0,"blake2bp",E,"BLAKE2bp, a variant of BLAKE2b that uses SIMD more…",N,N],[3,"Params",R[1134],"A parameter builder for BLAKE2bp, just like the `Params`…",N,N],[3,"State",E,"An incremental hasher for BLAKE2bp, just like the `State`…",N,N],[5,"blake2bp",E,"Compute the BLAKE2bp hash of a slice of bytes all at once,…",N,[[],["hash"]]],[11,"new",E,R[1127],0,[[],["self"]]],[11,"hash",E,R[1128],0,[[["self"]],["hash"]]],[11,"to_state",E,"Construct a BLAKE2bp `State` object based on these…",0,[[["self"]],["state"]]],[11,R[1129],E,"Set the length of the final hash, from 1 to `OUTBYTES`…",0,[[["self"],["usize"]],["self"]]],[11,"key",E,"Use a secret key, so that BLAKE2bp acts as a MAC. The…",0,[[["self"]],["self"]]],[11,"new",E,R[1130],1,[[],["self"]]],[11,"update",E,R[1131],1,[[["self"]],["self"]]],[11,R[5543],E,R[1132],1,[[["self"]],["hash"]]],[11,"count",E,R[1133],1,[[["self"]],["u128"]]],[0,"many",R[1126],"Interfaces for hashing multiple inputs at once, using SIMD…",N,N],[3,R[1136],R[1135],"A job for the [`hash_many`] function. After calling…",N,N],[5,"degree",E,"The parallelism degree of the implementation, detected at…",N,[[],["usize"]]],[5,"update_many",E,"Update any number of `State` objects at once.",N,[[["i"]]]],[5,"hash_many",E,"Hash any number of complete inputs all at once.",N,[[["i"]]]],[17,"MAX_DEGREE",E,"The largest possible value of `degree` on the target…",N,N],[11,"new",E,"Construct a new `HashManyJob` from a set of hashing…",2,[[["params"]],["self"]]],[11,"to_hash",E,"Get the hash from a finished job. If you call this before…",2,[[["self"]],["hash"]]],[17,"OUTBYTES",R[1126],"The max hash length.",N,N],[17,"KEYBYTES",E,"The max key length.",N,N],[17,"SALTBYTES",E,"The max salt length.",N,N],[17,"PERSONALBYTES",E,"The max personalization length.",N,N],[17,"BLOCKBYTES",E,"The number input bytes passed to each call to the…",N,N],[11,"new",E,R[1127],3,[[],["self"]]],[11,"hash",E,R[1128],3,[[["self"]],["hash"]]],[11,"to_state",E,"Construct a `State` object based on these parameters, for…",3,[[["self"]],["state"]]],[11,R[1129],E,"Set the length of the final hash in bytes, from 1 to…",3,[[["self"],["usize"]],["self"]]],[11,"key",E,"Use a secret key, so that BLAKE2 acts as a MAC. The…",3,[[["self"]],["self"]]],[11,"salt",E,"At most `SALTBYTES` (16). Shorter salts are padded with…",3,[[["self"]],["self"]]],[11,"personal",E,"At most `PERSONALBYTES` (16). Shorter personalizations are…",3,[[["self"]],["self"]]],[11,"fanout",E,"From 0 (meaning unlimited) to 255. The default is 1…",3,[[["self"],["u8"]],["self"]]],[11,"max_depth",E,"From 1 (the default, meaning sequential) to 255 (meaning…",3,[[["self"],["u8"]],["self"]]],[11,"max_leaf_length",E,"From 0 (the default, meaning unlimited or sequential) to…",3,[[["self"],["u32"]],["self"]]],[11,"node_offset",E,"From 0 (the default, meaning first, leftmost, leaf, or…",3,[[["self"],["u64"]],["self"]]],[11,"node_depth",E,"From 0 (the default, meaning leaf or sequential) to 255.",3,[[["self"],["u8"]],["self"]]],[11,"inner_hash_length",E,"From 0 (the default, meaning sequential) to `OUTBYTES` (64).",3,[[["self"],["usize"]],["self"]]],[11,"last_node",E,"Indicates the rightmost node in a row. This can also be…",3,[[["self"],["bool"]],["self"]]],[11,"new",E,R[1130],4,[[],["self"]]],[11,"update",E,R[1131],4,[[["self"]],["self"]]],[11,R[5543],E,R[1132],4,[[["self"]],["hash"]]],[11,"set_last_node",E,"Set a flag indicating that this is the last node of its…",4,[[["self"],["bool"]],["self"]]],[11,"count",E,R[1133],4,[[["self"]],["u128"]]],[11,R[84],E,"Convert the hash to a byte slice. Note that if you're…",5,[[["self"]]]],[11,"as_array",E,"Convert the hash to a byte array. Note that if you're…",5,[[["self"]]]],[11,"to_hex",E,"Convert the hash to a lowercase hexadecimal `ArrayString`.",5,[[["self"]],[R[757]]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[46],E,E,3,[[["self"]],[T]]],[11,R[47],E,E,3,[[["self"],[T]]]],[11,R[4],E,E,3,[[[U]],[R[3]]]],[11,R[5],E,E,3,[[],[R[3]]]],[11,R[7],E,E,3,[[["self"]],[T]]],[11,R[6],E,E,3,[[["self"]],[T]]],[11,R[8],E,E,3,[[["self"]],[R[9]]]],[11,"into",E,E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[46],E,E,4,[[["self"]],[T]]],[11,R[47],E,E,4,[[["self"],[T]]]],[11,R[4],E,E,4,[[[U]],[R[3]]]],[11,R[5],E,E,4,[[],[R[3]]]],[11,R[7],E,E,4,[[["self"]],[T]]],[11,R[6],E,E,4,[[["self"]],[T]]],[11,R[8],E,E,4,[[["self"]],[R[9]]]],[11,"into",E,E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[46],E,E,5,[[["self"]],[T]]],[11,R[47],E,E,5,[[["self"],[T]]]],[11,R[4],E,E,5,[[[U]],[R[3]]]],[11,R[5],E,E,5,[[],[R[3]]]],[11,R[7],E,E,5,[[["self"]],[T]]],[11,R[6],E,E,5,[[["self"]],[T]]],[11,R[8],E,E,5,[[["self"]],[R[9]]]],[11,"into",R[1134],E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[46],E,E,0,[[["self"]],[T]]],[11,R[47],E,E,0,[[["self"],[T]]]],[11,R[4],E,E,0,[[[U]],[R[3]]]],[11,R[5],E,E,0,[[],[R[3]]]],[11,R[7],E,E,0,[[["self"]],[T]]],[11,R[6],E,E,0,[[["self"]],[T]]],[11,R[8],E,E,0,[[["self"]],[R[9]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[46],E,E,1,[[["self"]],[T]]],[11,R[47],E,E,1,[[["self"],[T]]]],[11,R[4],E,E,1,[[[U]],[R[3]]]],[11,R[5],E,E,1,[[],[R[3]]]],[11,R[7],E,E,1,[[["self"]],[T]]],[11,R[6],E,E,1,[[["self"]],[T]]],[11,R[8],E,E,1,[[["self"]],[R[9]]]],[11,"into",R[1135],E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[46],E,E,2,[[["self"]],[T]]],[11,R[47],E,E,2,[[["self"],[T]]]],[11,R[4],E,E,2,[[[U]],[R[3]]]],[11,R[5],E,E,2,[[],[R[3]]]],[11,R[7],E,E,2,[[["self"]],[T]]],[11,R[6],E,E,2,[[["self"]],[T]]],[11,R[8],E,E,2,[[["self"]],[R[9]]]],[11,"as_ref",R[1126],E,5,[[["self"]]]],[11,R[83],R[1134],E,0,[[],["self"]]],[11,R[83],E,E,1,[[],["self"]]],[11,R[83],R[1126],E,3,[[],["self"]]],[11,R[83],E,E,4,[[],["self"]]],[11,"clone",R[1134],E,0,[[["self"]],["params"]]],[11,"clone",E,E,1,[[["self"]],["state"]]],[11,"clone",R[1135],E,2,[[["self"]],["hashmanyjob"]]],[11,"clone",R[1126],E,3,[[["self"]],["params"]]],[11,"clone",E,E,4,[[["self"]],["state"]]],[11,"clone",E,E,5,[[["self"]],["hash"]]],[11,"eq",E,E,5,[[["self"],["hash"]],["bool"]]],[11,"eq",E,E,5,[[["self"]],["bool"]]],[11,"fmt",R[1134],E,0,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,1,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[1135],E,2,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[1126],E,3,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,4,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,5,[[["self"],[R[10]]],[R[3]]]],[11,"write",R[1134],E,1,[[["self"]],[[R[3],["usize"]],["usize"]]]],[11,"flush",E,E,1,[[["self"]],[R[3]]]],[11,"write",R[1126],E,4,[[["self"]],[[R[3],["usize"]],["usize"]]]],[11,"flush",E,E,4,[[["self"]],[R[3]]]]],"p":[[3,"Params"],[3,"State"],[3,R[1136]],[3,"Params"],[3,"State"],[3,"Hash"]]};
searchIndex["byteorder"]={"doc":"This crate provides convenience methods for encoding and…","i":[[4,R[953],"byteorder","Defines big-endian serialization.",N,N],[4,R[954],E,"Defines little-endian serialization.",N,N],[6,"BE",E,"A type alias for [`BigEndian`].",N,N],[6,"LE",E,"A type alias for [`LittleEndian`].",N,N],[6,"NetworkEndian",E,"Defines network byte order serialization.",N,N],[6,"NativeEndian",E,"Defines system native-endian serialization.",N,N],[8,R[950],E,"Extends [`Read`] with methods for reading numbers. (For…",N,N],[11,"read_u8",E,R[900],0,[[["self"]],[[R[3],["u8"]],["u8"]]]],[11,"read_i8",E,R[901],0,[[["self"]],[["i8"],[R[3],["i8"]]]]],[11,R[885],E,R[902],0,[[["self"]],[["u16"],[R[3],["u16"]]]]],[11,R[903],E,R[904],0,[[["self"]],[[R[3],["i16"]],["i16"]]]],[11,R[905],E,R[906],0,[[["self"]],[[R[3],["u32"]],["u32"]]]],[11,R[907],E,R[908],0,[[["self"]],[["i32"],[R[3],["i32"]]]]],[11,R[886],E,R[909],0,[[["self"]],[[R[3],["u32"]],["u32"]]]],[11,R[910],E,R[911],0,[[["self"]],[["i32"],[R[3],["i32"]]]]],[11,R[912],E,R[913],0,[[["self"]],[["u64"],[R[3],["u64"]]]]],[11,R[914],E,R[915],0,[[["self"]],[["i64"],[R[3],["i64"]]]]],[11,R[887],E,R[916],0,[[["self"]],[["u64"],[R[3],["u64"]]]]],[11,R[917],E,R[918],0,[[["self"]],[["i64"],[R[3],["i64"]]]]],[11,R[841],E,R[919],0,[[["self"]],[["u128"],[R[3],["u128"]]]]],[11,R[854],E,R[920],0,[[["self"]],[[R[3],["i128"]],["i128"]]]],[11,R[842],E,R[836],0,[[["self"],["usize"]],[["u64"],[R[3],["u64"]]]]],[11,R[921],E,R[837],0,[[["self"],["usize"]],[["i64"],[R[3],["i64"]]]]],[11,R[843],E,R[836],0,[[["self"],["usize"]],[["u128"],[R[3],["u128"]]]]],[11,R[855],E,R[837],0,[[["self"],["usize"]],[[R[3],["i128"]],["i128"]]]],[11,R[922],E,R[857],0,[[["self"]],[["f32"],[R[3],["f32"]]]]],[11,R[923],E,R[858],0,[[["self"]],[[R[3],["f64"]],["f64"]]]],[11,R[872],E,R[924],0,[[["self"]],[R[3]]]],[11,R[873],E,R[925],0,[[["self"]],[R[3]]]],[11,R[874],E,R[926],0,[[["self"]],[R[3]]]],[11,R[875],E,R[927],0,[[["self"]],[R[3]]]],[11,R[928],E,R[929],0,[[["self"]],[R[3]]]],[11,R[876],E,R[930],0,[[["self"]],[R[3]]]],[11,R[877],E,R[931],0,[[["self"]],[R[3]]]],[11,R[878],E,R[932],0,[[["self"]],[R[3]]]],[11,R[879],E,R[933],0,[[["self"]],[R[3]]]],[11,R[880],E,R[934],0,[[["self"]],[R[3]]]],[11,R[881],E,R[838],0,[[["self"]],[R[3]]]],[11,R[882],E,R[935],0,[[["self"]],[R[3]]]],[11,R[884],E,R[838],0,[[["self"]],[R[3]]]],[8,R[951],E,"Extends [`Write`] with methods for writing numbers. (For…",N,N],[11,"write_u8",E,R[936],1,[[["self"],["u8"]],[R[3]]]],[11,"write_i8",E,R[937],1,[[["self"],["i8"]],[R[3]]]],[11,R[845],E,R[938],1,[[["self"],["u16"]],[R[3]]]],[11,R[859],E,R[939],1,[[["self"],["i16"]],[R[3]]]],[11,R[846],E,R[940],1,[[["self"],["u32"]],[R[3]]]],[11,R[860],E,R[941],1,[[["self"],["i32"]],[R[3]]]],[11,R[847],E,R[942],1,[[["self"],["u32"]],[R[3]]]],[11,R[861],E,R[943],1,[[["self"],["i32"]],[R[3]]]],[11,R[848],E,R[944],1,[[["self"],["u64"]],[R[3]]]],[11,R[862],E,R[945],1,[[["self"],["i64"]],[R[3]]]],[11,R[849],E,R[946],1,[[["self"],["u64"]],[R[3]]]],[11,R[863],E,R[947],1,[[["self"],["i64"]],[R[3]]]],[11,R[850],E,R[948],1,[[["self"],["u128"]],[R[3]]]],[11,R[864],E,R[949],1,[[["self"],["i128"]],[R[3]]]],[11,R[851],E,R[839],1,[[["self"],["u64"],["usize"]],[R[3]]]],[11,R[865],E,R[840],1,[[["self"],["i64"],["usize"]],[R[3]]]],[11,R[852],E,R[839],1,[[["self"],["usize"],["u128"]],[R[3]]]],[11,R[866],E,R[840],1,[[["self"],["i128"],["usize"]],[R[3]]]],[11,R[868],E,R[869],1,[[["self"],["f32"]],[R[3]]]],[11,R[870],E,R[871],1,[[["self"],["f64"]],[R[3]]]],[8,R[952],E,"`ByteOrder` describes types that can serialize integers as…",N,N],[10,R[885],E,"Reads an unsigned 16 bit integer from `buf`.",2,[[],["u16"]]],[11,R[905],E,"Reads an unsigned 24 bit integer from `buf`, stored in u32.",2,[[],["u32"]]],[10,R[886],E,"Reads an unsigned 32 bit integer from `buf`.",2,[[],["u32"]]],[11,R[912],E,"Reads an unsigned 48 bit integer from `buf`, stored in u64.",2,[[],["u64"]]],[10,R[887],E,"Reads an unsigned 64 bit integer from `buf`.",2,[[],["u64"]]],[10,R[841],E,"Reads an unsigned 128 bit integer from `buf`.",2,[[],["u128"]]],[10,R[842],E,R[844],2,[[["usize"]],["u64"]]],[10,R[843],E,R[844],2,[[["usize"]],["u128"]]],[10,R[845],E,"Writes an unsigned 16 bit integer `n` to `buf`.",2,[[["u16"]]]],[11,R[846],E,"Writes an unsigned 24 bit integer `n` to `buf`, stored in…",2,[[["u32"]]]],[10,R[847],E,"Writes an unsigned 32 bit integer `n` to `buf`.",2,[[["u32"]]]],[11,R[848],E,"Writes an unsigned 48 bit integer `n` to `buf`, stored in…",2,[[["u64"]]]],[10,R[849],E,"Writes an unsigned 64 bit integer `n` to `buf`.",2,[[["u64"]]]],[10,R[850],E,"Writes an unsigned 128 bit integer `n` to `buf`.",2,[[["u128"]]]],[10,R[851],E,R[853],2,[[["usize"],["u64"]]]],[10,R[852],E,R[853],2,[[["u128"],["usize"]]]],[11,R[903],E,"Reads a signed 16 bit integer from `buf`.",2,[[],["i16"]]],[11,R[907],E,"Reads a signed 24 bit integer from `buf`, stored in i32.",2,[[],["i32"]]],[11,R[910],E,"Reads a signed 32 bit integer from `buf`.",2,[[],["i32"]]],[11,R[914],E,"Reads a signed 48 bit integer from `buf`, stored in i64.",2,[[],["i64"]]],[11,R[917],E,"Reads a signed 64 bit integer from `buf`.",2,[[],["i64"]]],[11,R[854],E,"Reads a signed 128 bit integer from `buf`.",2,[[],["i128"]]],[11,R[921],E,R[856],2,[[["usize"]],["i64"]]],[11,R[855],E,R[856],2,[[["usize"]],["i128"]]],[11,R[922],E,R[857],2,[[],["f32"]]],[11,R[923],E,R[858],2,[[],["f64"]]],[11,R[859],E,"Writes a signed 16 bit integer `n` to `buf`.",2,[[["i16"]]]],[11,R[860],E,"Writes a signed 24 bit integer `n` to `buf`, stored in i32.",2,[[["i32"]]]],[11,R[861],E,"Writes a signed 32 bit integer `n` to `buf`.",2,[[["i32"]]]],[11,R[862],E,"Writes a signed 48 bit integer `n` to `buf`, stored in i64.",2,[[["i64"]]]],[11,R[863],E,"Writes a signed 64 bit integer `n` to `buf`.",2,[[["i64"]]]],[11,R[864],E,"Writes a signed 128 bit integer `n` to `buf`.",2,[[["i128"]]]],[11,R[865],E,R[867],2,[[["i64"],["usize"]]]],[11,R[866],E,R[867],2,[[["i128"],["usize"]]]],[11,R[868],E,R[869],2,[[["f32"]]]],[11,R[870],E,R[871],2,[[["f64"]]]],[10,R[872],E,"Reads unsigned 16 bit integers from `src` into `dst`.",2,[[]]],[10,R[873],E,"Reads unsigned 32 bit integers from `src` into `dst`.",2,[[]]],[10,R[874],E,"Reads unsigned 64 bit integers from `src` into `dst`.",2,[[]]],[10,R[875],E,"Reads unsigned 128 bit integers from `src` into `dst`.",2,[[]]],[11,R[876],E,"Reads signed 16 bit integers from `src` to `dst`.",2,[[]]],[11,R[877],E,"Reads signed 32 bit integers from `src` into `dst`.",2,[[]]],[11,R[878],E,"Reads signed 64 bit integers from `src` into `dst`.",2,[[]]],[11,R[879],E,"Reads signed 128 bit integers from `src` into `dst`.",2,[[]]],[11,R[880],E,R[883],2,[[]]],[11,R[881],E,R[838],2,[[]]],[11,R[882],E,R[883],2,[[]]],[11,R[884],E,R[838],2,[[]]],[10,R[888],E,"Writes unsigned 16 bit integers from `src` into `dst`.",2,[[]]],[10,R[889],E,"Writes unsigned 32 bit integers from `src` into `dst`.",2,[[]]],[10,R[890],E,"Writes unsigned 64 bit integers from `src` into `dst`.",2,[[]]],[10,R[891],E,"Writes unsigned 128 bit integers from `src` into `dst`.",2,[[]]],[11,"write_i16_into",E,"Writes signed 16 bit integers from `src` into `dst`.",2,[[]]],[11,"write_i32_into",E,"Writes signed 32 bit integers from `src` into `dst`.",2,[[]]],[11,"write_i64_into",E,"Writes signed 64 bit integers from `src` into `dst`.",2,[[]]],[11,"write_i128_into",E,"Writes signed 128 bit integers from `src` into `dst`.",2,[[]]],[11,"write_f32_into",E,"Writes IEEE754 single-precision (4 bytes) floating point…",2,[[]]],[11,"write_f64_into",E,"Writes IEEE754 double-precision (8 bytes) floating point…",2,[[]]],[10,R[892],E,"Converts the given slice of unsigned 16 bit integers to a…",2,[[]]],[10,R[893],E,"Converts the given slice of unsigned 32 bit integers to a…",2,[[]]],[10,R[894],E,"Converts the given slice of unsigned 64 bit integers to a…",2,[[]]],[10,R[895],E,"Converts the given slice of unsigned 128 bit integers to a…",2,[[]]],[11,"from_slice_i16",E,"Converts the given slice of signed 16 bit integers to a…",2,[[]]],[11,"from_slice_i32",E,"Converts the given slice of signed 32 bit integers to a…",2,[[]]],[11,"from_slice_i64",E,"Converts the given slice of signed 64 bit integers to a…",2,[[]]],[11,"from_slice_i128",E,"Converts the given slice of signed 128 bit integers to a…",2,[[]]],[10,R[896],E,"Converts the given slice of IEEE754 single-precision (4…",2,[[]]],[10,R[897],E,"Converts the given slice of IEEE754 double-precision (8…",2,[[]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[46],E,E,3,[[["self"]],[T]]],[11,R[47],E,E,3,[[["self"],[T]]]],[11,R[4],E,E,3,[[[U]],[R[3]]]],[11,R[5],E,E,3,[[],[R[3]]]],[11,R[7],E,E,3,[[["self"]],[T]]],[11,R[6],E,E,3,[[["self"]],[T]]],[11,R[8],E,E,3,[[["self"]],[R[9]]]],[11,"into",E,E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[46],E,E,4,[[["self"]],[T]]],[11,R[47],E,E,4,[[["self"],[T]]]],[11,R[4],E,E,4,[[[U]],[R[3]]]],[11,R[5],E,E,4,[[],[R[3]]]],[11,R[7],E,E,4,[[["self"]],[T]]],[11,R[6],E,E,4,[[["self"]],[T]]],[11,R[8],E,E,4,[[["self"]],[R[9]]]],[11,R[885],E,E,3,[[],["u16"]]],[11,R[886],E,E,3,[[],["u32"]]],[11,R[887],E,E,3,[[],["u64"]]],[11,R[841],E,E,3,[[],["u128"]]],[11,R[842],E,E,3,[[["usize"]],["u64"]]],[11,R[843],E,E,3,[[["usize"]],["u128"]]],[11,R[845],E,E,3,[[["u16"]]]],[11,R[847],E,E,3,[[["u32"]]]],[11,R[849],E,E,3,[[["u64"]]]],[11,R[850],E,E,3,[[["u128"]]]],[11,R[851],E,E,3,[[["usize"],["u64"]]]],[11,R[852],E,E,3,[[["u128"],["usize"]]]],[11,R[872],E,E,3,[[]]],[11,R[873],E,E,3,[[]]],[11,R[874],E,E,3,[[]]],[11,R[875],E,E,3,[[]]],[11,R[888],E,E,3,[[]]],[11,R[889],E,E,3,[[]]],[11,R[890],E,E,3,[[]]],[11,R[891],E,E,3,[[]]],[11,R[892],E,E,3,[[]]],[11,R[893],E,E,3,[[]]],[11,R[894],E,E,3,[[]]],[11,R[895],E,E,3,[[]]],[11,R[896],E,E,3,[[]]],[11,R[897],E,E,3,[[]]],[11,R[885],E,E,4,[[],["u16"]]],[11,R[886],E,E,4,[[],["u32"]]],[11,R[887],E,E,4,[[],["u64"]]],[11,R[841],E,E,4,[[],["u128"]]],[11,R[842],E,E,4,[[["usize"]],["u64"]]],[11,R[843],E,E,4,[[["usize"]],["u128"]]],[11,R[845],E,E,4,[[["u16"]]]],[11,R[847],E,E,4,[[["u32"]]]],[11,R[849],E,E,4,[[["u64"]]]],[11,R[850],E,E,4,[[["u128"]]]],[11,R[851],E,E,4,[[["usize"],["u64"]]]],[11,R[852],E,E,4,[[["u128"],["usize"]]]],[11,R[872],E,E,4,[[]]],[11,R[873],E,E,4,[[]]],[11,R[874],E,E,4,[[]]],[11,R[875],E,E,4,[[]]],[11,R[888],E,E,4,[[]]],[11,R[889],E,E,4,[[]]],[11,R[890],E,E,4,[[]]],[11,R[891],E,E,4,[[]]],[11,R[892],E,E,4,[[]]],[11,R[893],E,E,4,[[]]],[11,R[894],E,E,4,[[]]],[11,R[895],E,E,4,[[]]],[11,R[896],E,E,4,[[]]],[11,R[897],E,E,4,[[]]],[11,R[83],E,E,3,[[],[R[898]]]],[11,R[83],E,E,4,[[],[R[899]]]],[11,"clone",E,E,3,[[["self"]],[R[898]]]],[11,"clone",E,E,4,[[["self"]],[R[899]]]],[11,R[77],E,E,3,[[["self"],[R[898]]],[[R[50]],[R[23],[R[50]]]]]],[11,R[77],E,E,4,[[["self"],[R[899]]],[[R[50]],[R[23],[R[50]]]]]],[11,"cmp",E,E,3,[[["self"],[R[898]]],[R[50]]]],[11,"cmp",E,E,4,[[["self"],[R[899]]],[R[50]]]],[11,"eq",E,E,3,[[["self"],[R[898]]],["bool"]]],[11,"eq",E,E,4,[[["self"],[R[899]]],["bool"]]],[11,"hash",E,E,3,[[["self"],["__h"]]]],[11,"hash",E,E,4,[[["self"],["__h"]]]],[11,"fmt",E,E,3,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,4,[[["self"],[R[10]]],[R[3]]]],[11,"read_u8",E,R[900],0,[[["self"]],[[R[3],["u8"]],["u8"]]]],[11,"read_i8",E,R[901],0,[[["self"]],[["i8"],[R[3],["i8"]]]]],[11,R[885],E,R[902],0,[[["self"]],[["u16"],[R[3],["u16"]]]]],[11,R[903],E,R[904],0,[[["self"]],[[R[3],["i16"]],["i16"]]]],[11,R[905],E,R[906],0,[[["self"]],[[R[3],["u32"]],["u32"]]]],[11,R[907],E,R[908],0,[[["self"]],[["i32"],[R[3],["i32"]]]]],[11,R[886],E,R[909],0,[[["self"]],[[R[3],["u32"]],["u32"]]]],[11,R[910],E,R[911],0,[[["self"]],[["i32"],[R[3],["i32"]]]]],[11,R[912],E,R[913],0,[[["self"]],[["u64"],[R[3],["u64"]]]]],[11,R[914],E,R[915],0,[[["self"]],[["i64"],[R[3],["i64"]]]]],[11,R[887],E,R[916],0,[[["self"]],[["u64"],[R[3],["u64"]]]]],[11,R[917],E,R[918],0,[[["self"]],[["i64"],[R[3],["i64"]]]]],[11,R[841],E,R[919],0,[[["self"]],[["u128"],[R[3],["u128"]]]]],[11,R[854],E,R[920],0,[[["self"]],[[R[3],["i128"]],["i128"]]]],[11,R[842],E,R[836],0,[[["self"],["usize"]],[["u64"],[R[3],["u64"]]]]],[11,R[921],E,R[837],0,[[["self"],["usize"]],[["i64"],[R[3],["i64"]]]]],[11,R[843],E,R[836],0,[[["self"],["usize"]],[["u128"],[R[3],["u128"]]]]],[11,R[855],E,R[837],0,[[["self"],["usize"]],[[R[3],["i128"]],["i128"]]]],[11,R[922],E,R[857],0,[[["self"]],[["f32"],[R[3],["f32"]]]]],[11,R[923],E,R[858],0,[[["self"]],[[R[3],["f64"]],["f64"]]]],[11,R[872],E,R[924],0,[[["self"]],[R[3]]]],[11,R[873],E,R[925],0,[[["self"]],[R[3]]]],[11,R[874],E,R[926],0,[[["self"]],[R[3]]]],[11,R[875],E,R[927],0,[[["self"]],[R[3]]]],[11,R[928],E,R[929],0,[[["self"]],[R[3]]]],[11,R[876],E,R[930],0,[[["self"]],[R[3]]]],[11,R[877],E,R[931],0,[[["self"]],[R[3]]]],[11,R[878],E,R[932],0,[[["self"]],[R[3]]]],[11,R[879],E,R[933],0,[[["self"]],[R[3]]]],[11,R[880],E,R[934],0,[[["self"]],[R[3]]]],[11,R[881],E,R[838],0,[[["self"]],[R[3]]]],[11,R[882],E,R[935],0,[[["self"]],[R[3]]]],[11,R[884],E,R[838],0,[[["self"]],[R[3]]]],[11,"write_u8",E,R[936],1,[[["self"],["u8"]],[R[3]]]],[11,"write_i8",E,R[937],1,[[["self"],["i8"]],[R[3]]]],[11,R[845],E,R[938],1,[[["self"],["u16"]],[R[3]]]],[11,R[859],E,R[939],1,[[["self"],["i16"]],[R[3]]]],[11,R[846],E,R[940],1,[[["self"],["u32"]],[R[3]]]],[11,R[860],E,R[941],1,[[["self"],["i32"]],[R[3]]]],[11,R[847],E,R[942],1,[[["self"],["u32"]],[R[3]]]],[11,R[861],E,R[943],1,[[["self"],["i32"]],[R[3]]]],[11,R[848],E,R[944],1,[[["self"],["u64"]],[R[3]]]],[11,R[862],E,R[945],1,[[["self"],["i64"]],[R[3]]]],[11,R[849],E,R[946],1,[[["self"],["u64"]],[R[3]]]],[11,R[863],E,R[947],1,[[["self"],["i64"]],[R[3]]]],[11,R[850],E,R[948],1,[[["self"],["u128"]],[R[3]]]],[11,R[864],E,R[949],1,[[["self"],["i128"]],[R[3]]]],[11,R[851],E,R[839],1,[[["self"],["u64"],["usize"]],[R[3]]]],[11,R[865],E,R[840],1,[[["self"],["i64"],["usize"]],[R[3]]]],[11,R[852],E,R[839],1,[[["self"],["usize"],["u128"]],[R[3]]]],[11,R[866],E,R[840],1,[[["self"],["i128"],["usize"]],[R[3]]]],[11,R[868],E,R[869],1,[[["self"],["f32"]],[R[3]]]],[11,R[870],E,R[871],1,[[["self"],["f64"]],[R[3]]]]],"p":[[8,R[950]],[8,R[951]],[8,R[952]],[4,R[953]],[4,R[954]]]};
searchIndex["c2_chacha"]={"doc":"Pure Rust ChaCha with SIMD optimizations.","i":[[0,"guts","c2_chacha",E,N,N],[8,"Machine","c2_chacha::guts",E,N,N],[16,"u32x4",E,E,0,N],[16,"u64x2",E,E,0,N],[16,"u128x1",E,E,0,N],[16,"u32x4x2",E,E,0,N],[16,"u64x2x2",E,E,0,N],[16,"u64x4",E,E,0,N],[16,"u128x2",E,E,0,N],[16,"u32x4x4",E,E,0,N],[16,"u64x2x4",E,E,0,N],[16,"u128x4",E,E,0,N],[11,"unpack",E,E,0,[[["s"]],["v"]]],[11,"vec",E,E,0,[[["a"]],["v"]]],[11,"read_le",E,E,0,[[],["v"]]],[11,"read_be",E,E,0,[[],["v"]]],[10,R[143],E,E,0,[[],["self"]]],[3,"ChaCha",E,E,N,N],[3,"State",E,E,N,N],[11,"new",E,E,1,[[],["self"]]],[11,"refill4",E,"Produce 4 blocks of output, advancing the state",1,[[["self"],["u32"]]]],[11,"refill",E,"Produce a block of output, advancing the state",1,[[["self"],["u32"]]]],[11,"set_stream_param",E,E,1,[[["self"],["u32"],["u64"]]]],[11,"get_stream_param",E,E,1,[[["self"],["u32"]],["u64"]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[46],E,E,1,[[["self"]],[T]]],[11,R[47],E,E,1,[[["self"],[T]]]],[11,R[4],E,E,1,[[[U]],[R[3]]]],[11,R[5],E,E,1,[[],[R[3]]]],[11,R[7],E,E,1,[[["self"]],[T]]],[11,R[6],E,E,1,[[["self"]],[T]]],[11,R[8],E,E,1,[[["self"]],[R[9]]]],[11,"vzip",E,E,1,[[],["v"]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[46],E,E,2,[[["self"]],[T]]],[11,R[47],E,E,2,[[["self"],[T]]]],[11,R[4],E,E,2,[[[U]],[R[3]]]],[11,R[5],E,E,2,[[],[R[3]]]],[11,R[7],E,E,2,[[["self"]],[T]]],[11,R[6],E,E,2,[[["self"]],[T]]],[11,R[8],E,E,2,[[["self"]],[R[9]]]],[11,"vzip",E,E,2,[[],["v"]]],[11,"clone",E,E,1,[[["self"]],["chacha"]]],[11,"clone",E,E,2,[[["self"]],["state"]]]],"p":[[8,"Machine"],[3,"ChaCha"],[3,"State"]]};
searchIndex["cfg_if"]={"doc":"A macro for defining `#[cfg]` if-else statements.","i":[[14,"cfg_if","cfg_if","The main macro provided by this crate. See crate…",N,N]],"p":[]};
searchIndex["cgmath"]={"doc":"A low-dimensional linear algebra library, targeted at…","i":[[8,"ApproxEq","cgmath",R[2901],N,N],[16,"Epsilon",E,R[2902],0,N],[10,R[2903],E,R[2904],0,[[]]],[10,R[2905],E,R[2906],0,[[]]],[10,R[2907],E,R[2908],0,[[],["u32"]]],[10,R[108],E,R[2909],0,[[["self"]],["bool"]]],[11,R[109],E,R[2910],0,[[["self"]],["bool"]]],[10,"ulps_eq",E,R[2911],0,[[["self"],["u32"]],["bool"]]],[11,"ulps_ne",E,R[2912],0,[[["self"],["u32"]],["bool"]]],[3,"Relative",E,R[99],N,N],[12,"lhs",E,R[100],1,N],[12,"rhs",E,R[101],1,N],[12,"epsilon",E,R[102],1,N],[12,R[103],E,R[2913],1,N],[3,"Ulps",E,R[99],N,N],[12,"lhs",E,R[100],2,N],[12,"rhs",E,R[101],2,N],[12,"epsilon",E,R[102],2,N],[12,"max_ulps",E,R[2914],2,N],[14,R[2918],E,E,N,N],[14,"ulps_ne",E,R[111],N,N],[14,R[108],E,R[110],N,N],[14,R[2916],E,E,N,N],[14,R[2915],E,E,N,N],[14,R[109],E,R[111],N,N],[14,"ulps_eq",E,R[110],N,N],[14,R[2917],E,E,N,N],[8,"Bounded",E,R[1607],N,N],[10,R[1074],E,R[1608],3,[[],["self"]]],[10,R[1075],E,R[1609],3,[[],["self"]]],[8,"One",E,R[1565],N,N],[10,"one",E,R[1566],4,[[],["self"]]],[11,"set_one",E,R[1567],4,[[["self"]]]],[11,"is_one",E,R[1568],4,[[["self"]],["bool"]]],[8,"Zero",E,R[1561],N,N],[10,"zero",E,R[1562],5,[[],["self"]]],[11,"set_zero",E,R[1563],5,[[["self"]]]],[10,"is_zero",E,R[1564],5,[[["self"]],["bool"]]],[3,"Matrix2",E,"A 2 x 2, column major matrix",N,N],[12,"x",E,R[2919],6,N],[12,"y",E,R[2920],6,N],[3,"Matrix3",E,"A 3 x 3, column major matrix",N,N],[12,"x",E,R[2919],7,N],[12,"y",E,R[2920],7,N],[12,"z",E,R[2921],7,N],[3,"Matrix4",E,"A 4 x 4, column major matrix",N,N],[12,"x",E,R[2919],8,N],[12,"y",E,R[2920],8,N],[12,"z",E,R[2921],8,N],[12,"w",E,"The fourth column of the matrix.",8,N],[3,"Quaternion",E,"A quaternion in scalar/vector form.",N,N],[12,"s",E,"The scalar part of the quaternion.",9,N],[12,"v",E,"The vector part of the quaternion.",9,N],[3,"Vector1",E,"A 1-dimensional vector.",N,N],[12,"x",E,R[2922],10,N],[3,"Vector2",E,"A 2-dimensional vector.",N,N],[12,"x",E,R[2922],11,N],[12,"y",E,R[2923],11,N],[3,"Vector3",E,"A 3-dimensional vector.",N,N],[12,"x",E,R[2922],12,N],[12,"y",E,R[2923],12,N],[12,"z",E,R[2924],12,N],[3,"Vector4",E,"A 4-dimensional vector.",N,N],[12,"x",E,R[2922],13,N],[12,"y",E,R[2923],13,N],[12,"z",E,R[2924],13,N],[12,"w",E,"The w component of the vector.",13,N],[3,"Deg",E,"An angle, in degrees.",N,N],[12,"0",E,E,14,N],[3,"Rad",E,"An angle, in radians.",N,N],[12,"0",E,E,15,N],[3,"Euler",E,"A set of [Euler angles] representing a rotation in…",N,N],[12,"x",E,"The angle to apply around the x axis. Also known at the…",16,N],[12,"y",E,"The angle to apply around the y axis. Also known at the yaw.",16,N],[12,"z",E,"The angle to apply around the z axis. Also known at the…",16,N],[3,"Point1",E,"A point in 1-dimensional space.",N,N],[12,"x",E,E,17,N],[3,"Point2",E,"A point in 2-dimensional space.",N,N],[12,"x",E,E,18,N],[12,"y",E,E,18,N],[3,"Point3",E,"A point in 3-dimensional space.",N,N],[12,"x",E,E,19,N],[12,"y",E,E,19,N],[12,"z",E,E,19,N],[3,"Basis2",E,"A two-dimensional rotation matrix.",N,N],[3,"Basis3",E,"A three-dimensional rotation matrix.",N,N],[3,"Decomposed",E,"A generic transformation consisting of a rotation,…",N,N],[12,"scale",E,E,20,N],[12,"rot",E,E,20,N],[12,"disp",E,E,20,N],[3,R[3105],E,"A perspective projection based on a vertical field-of-view…",N,N],[12,"fovy",E,E,21,N],[12,"aspect",E,E,21,N],[12,"near",E,E,21,N],[12,"far",E,E,21,N],[3,R[3106],E,"A perspective projection with arbitrary…",N,N],[12,"left",E,E,22,N],[12,"right",E,E,22,N],[12,"bottom",E,E,22,N],[12,"top",E,E,22,N],[12,"near",E,E,22,N],[12,"far",E,E,22,N],[3,"Ortho",E,"An orthographic projection with arbitrary…",N,N],[12,"left",E,E,23,N],[12,"right",E,E,23,N],[12,"bottom",E,E,23,N],[12,"top",E,E,23,N],[12,"near",E,E,23,N],[12,"far",E,E,23,N],[5,"dot",E,"Dot product of two vectors.",N,[[["innerspace"]]]],[5,"vec1",E,R[2925],N,[[["s"]],["vector1"]]],[5,"vec2",E,R[2925],N,[[["s"]],["vector2"]]],[5,"vec3",E,R[2925],N,[[["s"]],["vector3"]]],[5,"vec4",E,R[2925],N,[[["s"]],["vector4"]]],[5,R[2992],E,"Create a perspective projection matrix.",N,[[["rad"],["into",["rad"]],[R[2926]]],[["matrix4"],[R[2926]]]]],[5,"frustum",E,"Create a perspective matrix from a view frustum.",N,[[[R[2926]]],[["matrix4"],[R[2926]]]]],[5,"ortho",E,"Create an orthographic projection matrix.",N,[[[R[2926]]],[["matrix4"],[R[2926]]]]],[0,"conv",E,"Constrained conversion functions for assisting in…",N,N],[5,"array2","cgmath::conv","Force a conversion into a 2-element array.",N,[[["into"]]]],[5,"array3",E,"Force a conversion into a 3-element array.",N,[[["into"]]]],[5,"array4",E,"Force a conversion into a 4-element array.",N,[[["into"]]]],[5,"array2x2",E,"Force a conversion into a 2x2-element array.",N,[[["into"]]]],[5,"array3x3",E,"Force a conversion into a 3x3-element array.",N,[[["into"]]]],[5,"array4x4",E,"Force a conversion into a 4x4-element array.",N,[[["into"]]]],[0,"prelude","cgmath","This module contains the most common traits used in…",N,N],[8,"Bounded",R[2983],R[1607],N,N],[10,R[1074],E,R[1608],3,[[],["self"]]],[10,R[1075],E,R[1609],3,[[],["self"]]],[8,"One",E,R[1565],N,N],[10,"one",E,R[1566],4,[[],["self"]]],[11,"set_one",E,R[1567],4,[[["self"]]]],[11,"is_one",E,R[1568],4,[[["self"]],["bool"]]],[8,"Zero",E,R[1561],N,N],[10,"zero",E,R[1562],5,[[],["self"]]],[11,"set_zero",E,R[1563],5,[[["self"]]]],[10,"is_zero",E,R[1564],5,[[["self"]],["bool"]]],[8,"Array",E,R[2993],N,N],[16,"Element",E,E,24,N],[10,"len",E,R[2994],24,[[],["usize"]]],[10,R[2995],E,R[2996],24,[[],["self"]]],[11,"as_ptr",E,R[2927],24,[[["self"]]]],[11,R[2930],E,R[2928],24,[[["self"]]]],[11,R[2929],E,R[2931],24,[[["self"],["usize"]]]],[10,"sum",E,R[2997],24,[[]]],[10,"product",E,R[2998],24,[[]]],[8,R[2999],E,R[3000],N,N],[10,R[3001],E,E,25,[[["rhs"]],["self"]]],[10,R[3002],E,E,25,[[["rhs"]],["self"]]],[10,R[3003],E,E,25,[[["rhs"]],["self"]]],[10,R[3004],E,E,25,[[["rhs"]],["self"]]],[10,R[3005],E,E,25,[[["rhs"]],["self"]]],[10,R[3006],E,E,25,[[["self"],["rhs"]]]],[10,R[3007],E,E,25,[[["self"],["rhs"]]]],[10,R[3008],E,E,25,[[["self"],["rhs"]]]],[10,R[3009],E,E,25,[[["self"],["rhs"]]]],[10,R[3010],E,E,25,[[["self"],["rhs"]]]],[8,R[3011],E,R[3012],N,N],[16,"Scalar",E,R[3013],26,N],[8,R[3014],E,R[3015],N,N],[16,"Metric",E,R[3016],27,N],[10,R[3091],E,R[3017],27,[[]]],[11,"distance",E,R[2932],27,[[]]],[8,R[3107],E,R[3018],N,N],[10,"dot",E,R[3019],28,[[]]],[11,R[2933],E,R[2934],28,[[],["bool"]]],[11,R[3020],E,R[2935],28,[[]]],[11,"magnitude",E,R[2936],28,[[]]],[11,"angle",E,R[2937],28,[[],["rad"]]],[11,R[2953],E,R[2938],28,[[],["self"]]],[11,R[2939],E,R[2940],28,[[],["self"]]],[11,"lerp",E,R[2941],28,[[],["self"]]],[11,R[3021],E,R[2942],28,[[],["self"]]],[8,R[3022],E,R[3023],N,N],[16,"Scalar",E,R[3024],29,N],[16,"Diff",E,R[3025],29,N],[10,"origin",E,R[3026],29,[[],["self"]]],[10,"from_vec",E,R[3027],29,[[],["self"]]],[10,"to_vec",E,R[3028],29,[[]]],[11,"midpoint",E,R[2943],29,[[],["self"]]],[11,"centroid",E,R[2944],29,[[],["self"]]],[10,"dot",E,R[3029],29,[[]]],[8,"Matrix",E,R[3030],N,N],[16,"Row",E,R[3031],30,N],[16,"Column",E,R[3032],30,N],[16,"Transpose",E,R[3033],30,N],[11,"as_ptr",E,R[2927],30,[[["self"]]]],[11,R[2930],E,R[2928],30,[[["self"]]]],[11,R[2945],E,R[2946],30,[[["self"],["usize"]]]],[10,"row",E,R[3034],30,[[["self"],["usize"]]]],[10,R[3092],E,R[3035],30,[[["self"],["usize"]]]],[10,R[3036],E,R[3037],30,[[["self"],["usize"]]]],[10,R[2929],E,R[3038],30,[[["self"]]]],[10,R[3093],E,R[3039],30,[[["self"]]]],[8,R[3040],E,R[3041],N,N],[16,"ColumnRow",E,R[3042],31,N],[10,R[2995],E,R[3043],31,[[],["self"]]],[10,R[3044],E,R[3045],31,[[],["self"]]],[11,"identity",E,R[2947],31,[[],["self"]]],[10,R[3046],E,R[3047],31,[[["self"]]]],[10,R[3048],E,R[3049],31,[[["self"]]]],[10,"diagonal",E,R[3050],31,[[["self"]]]],[11,"trace",E,R[2948],31,[[["self"]]]],[10,"invert",E,R[3051],31,[[["self"]],[R[23]]]],[11,R[2949],E,R[2950],31,[[["self"]],["bool"]]],[11,R[2951],E,R[2952],31,[[["self"]],["bool"]]],[10,R[3052],E,R[3053],31,[[["self"]],["bool"]]],[10,R[3054],E,R[3055],31,[[["self"]],["bool"]]],[8,"Angle",E,R[3056],N,N],[16,"Unitless",E,E,32,N],[11,R[2953],E,R[2954],32,[[],["self"]]],[11,"opposite",E,R[2955],32,[[],["self"]]],[11,"bisect",E,R[2956],32,[[],["self"]]],[10,R[3094],E,R[3057],32,[[],["self"]]],[11,R[3058],E,R[2957],32,[[],["self"]]],[11,R[3059],E,R[2958],32,[[],["self"]]],[11,R[3060],E,R[2959],32,[[],["self"]]],[11,R[3061],E,R[2960],32,[[],["self"]]],[10,"sin",E,R[3062],32,[[]]],[10,"cos",E,R[3063],32,[[]]],[10,"tan",E,R[3064],32,[[]]],[10,"sin_cos",E,R[3065],32,[[]]],[11,"csc",E,R[2961],32,[[]]],[11,"cot",E,R[2962],32,[[]]],[11,"sec",E,R[2963],32,[[]]],[10,"asin",E,R[3066],32,[[],["self"]]],[10,"acos",E,R[3067],32,[[],["self"]]],[10,"atan",E,R[3068],32,[[],["self"]]],[10,"atan2",E,E,32,[[],["self"]]],[8,"Rotation",E,R[3069],N,N],[10,"look_at",E,R[3070],33,[[],["self"]]],[10,R[3071],E,R[3072],33,[[],["self"]]],[10,R[3073],E,R[3074],33,[[["self"]]]],[11,R[2982],E,R[2984],33,[[["self"],["p"]],["p"]]],[10,"invert",E,R[3075],33,[[["self"]],["self"]]],[8,"Rotation2",E,R[3076],N,N],[10,R[3077],E,R[3078],34,[[["rad"],["into",["rad"]]],["self"]]],[8,"Rotation3",E,R[3079],N,N],[10,R[2969],E,R[3080],35,[[["rad"],["vector3"],["into",["rad"]]],["self"]]],[11,R[2966],E,R[2985],35,[[["rad"],["into",["rad"]]],["self"]]],[11,R[2967],E,R[2986],35,[[["rad"],["into",["rad"]]],["self"]]],[11,R[2968],E,R[2987],35,[[["rad"],["into",["rad"]]],["self"]]],[8,"Transform",E,R[3081],N,N],[10,"one",E,R[3082],36,[[],["self"]]],[10,"look_at",E,R[3083],36,[[["p"]],["self"]]],[10,R[3084],E,R[3085],36,[[["self"]]]],[11,R[2988],E,R[2989],36,[[["self"]],[R[23]]]],[10,R[3086],E,R[3087],36,[[["self"],["p"]],["p"]]],[10,"concat",E,R[3088],36,[[["self"]],["self"]]],[10,R[3089],E,R[3090],36,[[["self"]],[R[23]]]],[11,R[2990],E,R[2991],36,[[["self"],["self"]]]],[8,"Transform2",E,E,N,N],[8,"Transform3",E,E,N,N],[11,"set_one",E,R[1567],4,[[["self"]]]],[11,"is_one",E,R[1568],4,[[["self"]],["bool"]]],[11,"set_zero",E,R[1563],5,[[["self"]]]],[11,"as_ptr",E,R[2927],24,[[["self"]]]],[11,R[2930],E,R[2928],24,[[["self"]]]],[11,R[2929],E,R[2931],24,[[["self"],["usize"]]]],[11,"distance",E,R[2932],27,[[]]],[11,R[2933],E,R[2934],28,[[],["bool"]]],[11,R[3020],E,R[2935],28,[[]]],[11,"magnitude",E,R[2936],28,[[]]],[11,"angle",E,R[2937],28,[[],["rad"]]],[11,R[2953],E,R[2938],28,[[],["self"]]],[11,R[2939],E,R[2940],28,[[],["self"]]],[11,"lerp",E,R[2941],28,[[],["self"]]],[11,R[3021],E,R[2942],28,[[],["self"]]],[11,"midpoint",E,R[2943],29,[[],["self"]]],[11,"centroid",E,R[2944],29,[[],["self"]]],[11,"as_ptr",E,R[2927],30,[[["self"]]]],[11,R[2930],E,R[2928],30,[[["self"]]]],[11,R[2945],E,R[2946],30,[[["self"],["usize"]]]],[11,"identity",E,R[2947],31,[[],["self"]]],[11,"trace",E,R[2948],31,[[["self"]]]],[11,R[2949],E,R[2950],31,[[["self"]],["bool"]]],[11,R[2951],E,R[2952],31,[[["self"]],["bool"]]],[11,R[2953],E,R[2954],32,[[],["self"]]],[11,"opposite",E,R[2955],32,[[],["self"]]],[11,"bisect",E,R[2956],32,[[],["self"]]],[11,R[3058],E,R[2957],32,[[],["self"]]],[11,R[3059],E,R[2958],32,[[],["self"]]],[11,R[3060],E,R[2959],32,[[],["self"]]],[11,R[3061],E,R[2960],32,[[],["self"]]],[11,"csc",E,R[2961],32,[[]]],[11,"cot",E,R[2962],32,[[]]],[11,"sec",E,R[2963],32,[[]]],[11,"new","cgmath",R[2964],6,[[["s"]],["matrix2"]]],[11,"from_cols",E,R[2965],6,[[["vector2"]],["matrix2"]]],[11,"look_at",E,"Create a transformation matrix that will cause a vector to…",6,[[["vector2"]],["matrix2"]]],[11,R[3077],E,E,6,[[["rad"],["into",["rad"]]],["matrix2"]]],[11,"new",E,R[2964],7,[[["s"]],["matrix3"]]],[11,"from_cols",E,R[2965],7,[[["vector3"]],["matrix3"]]],[11,"look_at",E,"Create a rotation matrix that will cause a vector to point…",7,[[["vector3"]],["matrix3"]]],[11,R[2966],E,"Create a rotation matrix from a rotation around the `x`…",7,[[["rad"],["into",["rad"]]],["matrix3"]]],[11,R[2967],E,"Create a rotation matrix from a rotation around the `y`…",7,[[["rad"],["into",["rad"]]],["matrix3"]]],[11,R[2968],E,"Create a rotation matrix from a rotation around the `z`…",7,[[["rad"],["into",["rad"]]],["matrix3"]]],[11,R[2969],E,"Create a rotation matrix from an angle around an arbitrary…",7,[[["rad"],["vector3"],["into",["rad"]]],["matrix3"]]],[11,"new",E,R[2964],8,[[["s"]],["matrix4"]]],[11,"from_cols",E,R[2965],8,[[["vector4"]],["matrix4"]]],[11,"from_translation",E,"Create a homogeneous transformation matrix from a…",8,[[["vector3"]],["matrix4"]]],[11,"from_scale",E,"Create a homogeneous transformation matrix from a scale…",8,[[["s"]],["matrix4"]]],[11,"from_nonuniform_scale",E,"Create a homogeneous transformation matrix from a set of…",8,[[["s"]],["matrix4"]]],[11,"look_at_dir",E,R[2970],8,[[["point3"],["vector3"]],["matrix4"]]],[11,"look_at",E,R[2970],8,[[["point3"],["vector3"]],["matrix4"]]],[11,R[2966],E,R[2971],8,[[["rad"],["into",["rad"]]],["matrix4"]]],[11,R[2967],E,R[2971],8,[[["rad"],["into",["rad"]]],["matrix4"]]],[11,R[2968],E,R[2971],8,[[["rad"],["into",["rad"]]],["matrix4"]]],[11,R[2969],E,"Create a homogeneous transformation matrix from an angle…",8,[[["rad"],["vector3"],["into",["rad"]]],["matrix4"]]],[11,"cast",E,R[2972],6,[[["self"]],[[R[23],["matrix2"]],["matrix2"]]]],[11,"cast",E,R[2972],7,[[["self"]],[[R[23],["matrix3"]],["matrix3"]]]],[11,"cast",E,R[2972],8,[[["self"]],[["matrix4"],[R[23],["matrix4"]]]]],[11,"new",E,"Construct a new quaternion from one scalar component and…",9,[[["s"]],[R[2973]]]],[11,"from_sv",E,"Construct a new quaternion from a scalar and a vector.",9,[[["s"],["vector3"]],[R[2973]]]],[11,"from_arc",E,"Construct a new quaternion as a closest arc between two…",9,[[[R[23],["vector3"]],["vector3"]],[R[2973]]]],[11,"conjugate",E,"The conjugate of the quaternion.",9,[[],[R[2973]]]],[11,"nlerp",E,"Do a normalized linear interpolation with `other`, by…",9,[[["s"],[R[2973]]],[R[2973]]]],[11,"slerp",E,"Spherical Linear Interpolation",9,[[["s"],[R[2973]]],[R[2973]]]],[11,"cast",E,R[2974],9,[[["self"]],[[R[23],[R[2973]]],[R[2973]]]]],[11,"new",E,R[2975],10,[[["s"]],["vector1"]]],[11,"map",E,R[2976],10,[[["f"]],["vector1"]]],[11,"cast",E,R[2974],10,[[["self"]],[["vector1"],[R[23],["vector1"]]]]],[11,"new",E,R[2975],11,[[["s"]],["vector2"]]],[11,"map",E,R[2976],11,[[["f"]],["vector2"]]],[11,"cast",E,R[2974],11,[[["self"]],[["vector2"],[R[23],["vector2"]]]]],[11,"new",E,R[2975],12,[[["s"]],["vector3"]]],[11,"map",E,R[2976],12,[[["f"]],["vector3"]]],[11,"cast",E,R[2974],12,[[["self"]],[[R[23],["vector3"]],["vector3"]]]],[11,"new",E,R[2975],13,[[["s"]],["vector4"]]],[11,"map",E,R[2976],13,[[["f"]],["vector4"]]],[11,"cast",E,R[2974],13,[[["self"]],[[R[23],["vector4"]],["vector4"]]]],[11,"unit_x",E,R[2977],10,[[],["vector1"]]],[11,"unit_x",E,R[2977],11,[[],["vector2"]]],[11,"unit_y",E,R[2978],11,[[],["vector2"]]],[11,"perp_dot",E,"The perpendicular dot product of the vector and `other`.",11,[[["vector2"]],["s"]]],[11,"extend",E,"Create a `Vector3`, using the `x` and `y` values from this…",11,[[["s"]],["vector3"]]],[11,"unit_x",E,R[2977],12,[[],["vector3"]]],[11,"unit_y",E,R[2978],12,[[],["vector3"]]],[11,"unit_z",E,R[2979],12,[[],["vector3"]]],[11,"cross",E,"Returns the cross product of the vector and `other`.",12,[[["vector3"]],["vector3"]]],[11,"extend",E,"Create a `Vector4`, using the `x`, `y` and `z` values from…",12,[[["s"]],["vector4"]]],[11,R[765],E,"Create a `Vector2`, dropping the `z` value.",12,[[],["vector2"]]],[11,"unit_x",E,R[2977],13,[[],["vector4"]]],[11,"unit_y",E,R[2978],13,[[],["vector4"]]],[11,"unit_z",E,R[2979],13,[[],["vector4"]]],[11,"unit_w",E,"A unit vector in the `w` direction.",13,[[],["vector4"]]],[11,R[765],E,"Create a `Vector3`, dropping the `w` value.",13,[[],["vector3"]]],[11,"truncate_n",E,"Create a `Vector3`, dropping the nth element.",13,[[["self"],["isize"]],["vector3"]]],[11,"new",E,"Construct a set of euler angles.",16,[[["a"]],["euler"]]],[11,"from_homogeneous",E,E,19,[[["vector4"]],["point3"]]],[11,"to_homogeneous",E,E,19,[[],["vector4"]]],[11,"new",E,R[2980],17,[[["s"]],["point1"]]],[11,"map",E,R[2981],17,[[["f"]],["point1"]]],[11,"cast",E,R[2972],17,[[["self"]],[[R[23],["point1"]],["point1"]]]],[11,"new",E,R[2980],18,[[["s"]],["point2"]]],[11,"map",E,R[2981],18,[[["f"]],["point2"]]],[11,"cast",E,R[2972],18,[[["self"]],[[R[23],["point2"]],["point2"]]]],[11,"new",E,R[2980],19,[[["s"]],["point3"]]],[11,"map",E,R[2981],19,[[["f"]],["point3"]]],[11,"cast",E,R[2972],19,[[["self"]],[[R[23],["point3"]],["point3"]]]],[11,R[2982],R[2983],R[2984],33,[[["self"],["p"]],["p"]]],[11,R[2966],E,R[2985],35,[[["rad"],["into",["rad"]]],["self"]]],[11,R[2967],E,R[2986],35,[[["rad"],["into",["rad"]]],["self"]]],[11,R[2968],E,R[2987],35,[[["rad"],["into",["rad"]]],["self"]]],[11,"from_quaternion","cgmath","Create a new rotation matrix from a quaternion.",37,[[[R[2973]]],["basis3"]]],[11,R[2988],R[2983],R[2989],36,[[["self"]],[R[23]]]],[11,R[2990],E,R[2991],36,[[["self"],["self"]]]],[11,"to_perspective","cgmath",E,21,[[["self"]],[R[2992]]]],[8,"BaseNum",E,"Base numeric types with partial ordering",N,N],[8,"BaseFloat",E,"Base floating point types",N,N],[8,"Array",E,R[2993],N,N],[16,"Element",E,E,24,N],[10,"len",E,R[2994],24,[[],["usize"]]],[10,R[2995],E,R[2996],24,[[],["self"]]],[11,"as_ptr",R[2983],R[2927],24,[[["self"]]]],[11,R[2930],E,R[2928],24,[[["self"]]]],[11,R[2929],E,R[2931],24,[[["self"],["usize"]]]],[10,"sum","cgmath",R[2997],24,[[]]],[10,"product",E,R[2998],24,[[]]],[8,R[2999],E,R[3000],N,N],[10,R[3001],E,E,25,[[["rhs"]],["self"]]],[10,R[3002],E,E,25,[[["rhs"]],["self"]]],[10,R[3003],E,E,25,[[["rhs"]],["self"]]],[10,R[3004],E,E,25,[[["rhs"]],["self"]]],[10,R[3005],E,E,25,[[["rhs"]],["self"]]],[10,R[3006],E,E,25,[[["self"],["rhs"]]]],[10,R[3007],E,E,25,[[["self"],["rhs"]]]],[10,R[3008],E,E,25,[[["self"],["rhs"]]]],[10,R[3009],E,E,25,[[["self"],["rhs"]]]],[10,R[3010],E,E,25,[[["self"],["rhs"]]]],[8,R[3011],E,R[3012],N,N],[16,"Scalar",E,R[3013],26,N],[8,R[3014],E,R[3015],N,N],[16,"Metric",E,R[3016],27,N],[10,R[3091],E,R[3017],27,[[]]],[11,"distance",R[2983],R[2932],27,[[]]],[8,R[3107],"cgmath",R[3018],N,N],[10,"dot",E,R[3019],28,[[]]],[11,R[2933],R[2983],R[2934],28,[[],["bool"]]],[11,R[3020],E,R[2935],28,[[]]],[11,"magnitude",E,R[2936],28,[[]]],[11,"angle",E,R[2937],28,[[],["rad"]]],[11,R[2953],E,R[2938],28,[[],["self"]]],[11,R[2939],E,R[2940],28,[[],["self"]]],[11,"lerp",E,R[2941],28,[[],["self"]]],[11,R[3021],E,R[2942],28,[[],["self"]]],[8,R[3022],"cgmath",R[3023],N,N],[16,"Scalar",E,R[3024],29,N],[16,"Diff",E,R[3025],29,N],[10,"origin",E,R[3026],29,[[],["self"]]],[10,"from_vec",E,R[3027],29,[[],["self"]]],[10,"to_vec",E,R[3028],29,[[]]],[11,"midpoint",R[2983],R[2943],29,[[],["self"]]],[11,"centroid",E,R[2944],29,[[],["self"]]],[10,"dot","cgmath",R[3029],29,[[]]],[8,"Matrix",E,R[3030],N,N],[16,"Row",E,R[3031],30,N],[16,"Column",E,R[3032],30,N],[16,"Transpose",E,R[3033],30,N],[11,"as_ptr",R[2983],R[2927],30,[[["self"]]]],[11,R[2930],E,R[2928],30,[[["self"]]]],[11,R[2945],E,R[2946],30,[[["self"],["usize"]]]],[10,"row","cgmath",R[3034],30,[[["self"],["usize"]]]],[10,R[3092],E,R[3035],30,[[["self"],["usize"]]]],[10,R[3036],E,R[3037],30,[[["self"],["usize"]]]],[10,R[2929],E,R[3038],30,[[["self"]]]],[10,R[3093],E,R[3039],30,[[["self"]]]],[8,R[3040],E,R[3041],N,N],[16,"ColumnRow",E,R[3042],31,N],[10,R[2995],E,R[3043],31,[[],["self"]]],[10,R[3044],E,R[3045],31,[[],["self"]]],[11,"identity",R[2983],R[2947],31,[[],["self"]]],[10,R[3046],"cgmath",R[3047],31,[[["self"]]]],[10,R[3048],E,R[3049],31,[[["self"]]]],[10,"diagonal",E,R[3050],31,[[["self"]]]],[11,"trace",R[2983],R[2948],31,[[["self"]]]],[10,"invert","cgmath",R[3051],31,[[["self"]],[R[23]]]],[11,R[2949],R[2983],R[2950],31,[[["self"]],["bool"]]],[11,R[2951],E,R[2952],31,[[["self"]],["bool"]]],[10,R[3052],"cgmath",R[3053],31,[[["self"]],["bool"]]],[10,R[3054],E,R[3055],31,[[["self"]],["bool"]]],[8,"Angle",E,R[3056],N,N],[16,"Unitless",E,E,32,N],[11,R[2953],R[2983],R[2954],32,[[],["self"]]],[11,"opposite",E,R[2955],32,[[],["self"]]],[11,"bisect",E,R[2956],32,[[],["self"]]],[10,R[3094],"cgmath",R[3057],32,[[],["self"]]],[11,R[3058],R[2983],R[2957],32,[[],["self"]]],[11,R[3059],E,R[2958],32,[[],["self"]]],[11,R[3060],E,R[2959],32,[[],["self"]]],[11,R[3061],E,R[2960],32,[[],["self"]]],[10,"sin","cgmath",R[3062],32,[[]]],[10,"cos",E,R[3063],32,[[]]],[10,"tan",E,R[3064],32,[[]]],[10,"sin_cos",E,R[3065],32,[[]]],[11,"csc",R[2983],R[2961],32,[[]]],[11,"cot",E,R[2962],32,[[]]],[11,"sec",E,R[2963],32,[[]]],[10,"asin","cgmath",R[3066],32,[[],["self"]]],[10,"acos",E,R[3067],32,[[],["self"]]],[10,"atan",E,R[3068],32,[[],["self"]]],[10,"atan2",E,E,32,[[],["self"]]],[8,"Rotation",E,R[3069],N,N],[10,"look_at",E,R[3070],33,[[],["self"]]],[10,R[3071],E,R[3072],33,[[],["self"]]],[10,R[3073],E,R[3074],33,[[["self"]]]],[11,R[2982],R[2983],R[2984],33,[[["self"],["p"]],["p"]]],[10,"invert","cgmath",R[3075],33,[[["self"]],["self"]]],[8,"Rotation2",E,R[3076],N,N],[10,R[3077],E,R[3078],34,[[["rad"],["into",["rad"]]],["self"]]],[8,"Rotation3",E,R[3079],N,N],[10,R[2969],E,R[3080],35,[[["rad"],["vector3"],["into",["rad"]]],["self"]]],[11,R[2966],R[2983],R[2985],35,[[["rad"],["into",["rad"]]],["self"]]],[11,R[2967],E,R[2986],35,[[["rad"],["into",["rad"]]],["self"]]],[11,R[2968],E,R[2987],35,[[["rad"],["into",["rad"]]],["self"]]],[8,"Transform","cgmath",R[3081],N,N],[10,"one",E,R[3082],36,[[],["self"]]],[10,"look_at",E,R[3083],36,[[["p"]],["self"]]],[10,R[3084],E,R[3085],36,[[["self"]]]],[11,R[2988],R[2983],R[2989],36,[[["self"]],[R[23]]]],[10,R[3086],"cgmath",R[3087],36,[[["self"],["p"]],["p"]]],[10,"concat",E,R[3088],36,[[["self"]],["self"]]],[10,R[3089],E,R[3090],36,[[["self"]],[R[23]]]],[11,R[2990],R[2983],R[2991],36,[[["self"],["self"]]]],[8,"Transform2","cgmath",E,N,N],[8,"Transform3",E,E,N,N],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[4],E,E,1,[[[U]],[R[3]]]],[11,R[5],E,E,1,[[],[R[3]]]],[11,R[7],E,E,1,[[["self"]],[T]]],[11,R[6],E,E,1,[[["self"]],[T]]],[11,R[8],E,E,1,[[["self"]],[R[9]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[4],E,E,2,[[[U]],[R[3]]]],[11,R[5],E,E,2,[[],[R[3]]]],[11,R[7],E,E,2,[[["self"]],[T]]],[11,R[6],E,E,2,[[["self"]],[T]]],[11,R[8],E,E,2,[[["self"]],[R[9]]]],[11,"into",E,E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[46],E,E,6,[[["self"]],[T]]],[11,R[47],E,E,6,[[["self"],[T]]]],[11,R[4],E,E,6,[[[U]],[R[3]]]],[11,R[5],E,E,6,[[],[R[3]]]],[11,R[7],E,E,6,[[["self"]],[T]]],[11,R[6],E,E,6,[[["self"]],[T]]],[11,R[8],E,E,6,[[["self"]],[R[9]]]],[11,"into",E,E,7,[[],[U]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[46],E,E,7,[[["self"]],[T]]],[11,R[47],E,E,7,[[["self"],[T]]]],[11,R[4],E,E,7,[[[U]],[R[3]]]],[11,R[5],E,E,7,[[],[R[3]]]],[11,R[7],E,E,7,[[["self"]],[T]]],[11,R[6],E,E,7,[[["self"]],[T]]],[11,R[8],E,E,7,[[["self"]],[R[9]]]],[11,"into",E,E,8,[[],[U]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[46],E,E,8,[[["self"]],[T]]],[11,R[47],E,E,8,[[["self"],[T]]]],[11,R[4],E,E,8,[[[U]],[R[3]]]],[11,R[5],E,E,8,[[],[R[3]]]],[11,R[7],E,E,8,[[["self"]],[T]]],[11,R[6],E,E,8,[[["self"]],[T]]],[11,R[8],E,E,8,[[["self"]],[R[9]]]],[11,"into",E,E,9,[[],[U]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[46],E,E,9,[[["self"]],[T]]],[11,R[47],E,E,9,[[["self"],[T]]]],[11,R[4],E,E,9,[[[U]],[R[3]]]],[11,R[5],E,E,9,[[],[R[3]]]],[11,R[7],E,E,9,[[["self"]],[T]]],[11,R[6],E,E,9,[[["self"]],[T]]],[11,R[8],E,E,9,[[["self"]],[R[9]]]],[11,"into",E,E,10,[[],[U]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[46],E,E,10,[[["self"]],[T]]],[11,R[47],E,E,10,[[["self"],[T]]]],[11,R[4],E,E,10,[[[U]],[R[3]]]],[11,R[5],E,E,10,[[],[R[3]]]],[11,R[7],E,E,10,[[["self"]],[T]]],[11,R[6],E,E,10,[[["self"]],[T]]],[11,R[8],E,E,10,[[["self"]],[R[9]]]],[11,"into",E,E,11,[[],[U]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[46],E,E,11,[[["self"]],[T]]],[11,R[47],E,E,11,[[["self"],[T]]]],[11,R[4],E,E,11,[[[U]],[R[3]]]],[11,R[5],E,E,11,[[],[R[3]]]],[11,R[7],E,E,11,[[["self"]],[T]]],[11,R[6],E,E,11,[[["self"]],[T]]],[11,R[8],E,E,11,[[["self"]],[R[9]]]],[11,"into",E,E,12,[[],[U]]],[11,"from",E,E,12,[[[T]],[T]]],[11,R[46],E,E,12,[[["self"]],[T]]],[11,R[47],E,E,12,[[["self"],[T]]]],[11,R[4],E,E,12,[[[U]],[R[3]]]],[11,R[5],E,E,12,[[],[R[3]]]],[11,R[7],E,E,12,[[["self"]],[T]]],[11,R[6],E,E,12,[[["self"]],[T]]],[11,R[8],E,E,12,[[["self"]],[R[9]]]],[11,"into",E,E,13,[[],[U]]],[11,"from",E,E,13,[[[T]],[T]]],[11,R[46],E,E,13,[[["self"]],[T]]],[11,R[47],E,E,13,[[["self"],[T]]]],[11,R[4],E,E,13,[[[U]],[R[3]]]],[11,R[5],E,E,13,[[],[R[3]]]],[11,R[7],E,E,13,[[["self"]],[T]]],[11,R[6],E,E,13,[[["self"]],[T]]],[11,R[8],E,E,13,[[["self"]],[R[9]]]],[11,"into",E,E,14,[[],[U]]],[11,"from",E,E,14,[[[T]],[T]]],[11,R[46],E,E,14,[[["self"]],[T]]],[11,R[47],E,E,14,[[["self"],[T]]]],[11,R[4],E,E,14,[[[U]],[R[3]]]],[11,R[5],E,E,14,[[],[R[3]]]],[11,R[7],E,E,14,[[["self"]],[T]]],[11,R[6],E,E,14,[[["self"]],[T]]],[11,R[8],E,E,14,[[["self"]],[R[9]]]],[11,"into",E,E,15,[[],[U]]],[11,"from",E,E,15,[[[T]],[T]]],[11,R[46],E,E,15,[[["self"]],[T]]],[11,R[47],E,E,15,[[["self"],[T]]]],[11,R[4],E,E,15,[[[U]],[R[3]]]],[11,R[5],E,E,15,[[],[R[3]]]],[11,R[7],E,E,15,[[["self"]],[T]]],[11,R[6],E,E,15,[[["self"]],[T]]],[11,R[8],E,E,15,[[["self"]],[R[9]]]],[11,"into",E,E,16,[[],[U]]],[11,"from",E,E,16,[[[T]],[T]]],[11,R[46],E,E,16,[[["self"]],[T]]],[11,R[47],E,E,16,[[["self"],[T]]]],[11,R[4],E,E,16,[[[U]],[R[3]]]],[11,R[5],E,E,16,[[],[R[3]]]],[11,R[7],E,E,16,[[["self"]],[T]]],[11,R[6],E,E,16,[[["self"]],[T]]],[11,R[8],E,E,16,[[["self"]],[R[9]]]],[11,"into",E,E,17,[[],[U]]],[11,"from",E,E,17,[[[T]],[T]]],[11,R[46],E,E,17,[[["self"]],[T]]],[11,R[47],E,E,17,[[["self"],[T]]]],[11,R[4],E,E,17,[[[U]],[R[3]]]],[11,R[5],E,E,17,[[],[R[3]]]],[11,R[7],E,E,17,[[["self"]],[T]]],[11,R[6],E,E,17,[[["self"]],[T]]],[11,R[8],E,E,17,[[["self"]],[R[9]]]],[11,"into",E,E,18,[[],[U]]],[11,"from",E,E,18,[[[T]],[T]]],[11,R[46],E,E,18,[[["self"]],[T]]],[11,R[47],E,E,18,[[["self"],[T]]]],[11,R[4],E,E,18,[[[U]],[R[3]]]],[11,R[5],E,E,18,[[],[R[3]]]],[11,R[7],E,E,18,[[["self"]],[T]]],[11,R[6],E,E,18,[[["self"]],[T]]],[11,R[8],E,E,18,[[["self"]],[R[9]]]],[11,"into",E,E,19,[[],[U]]],[11,"from",E,E,19,[[[T]],[T]]],[11,R[46],E,E,19,[[["self"]],[T]]],[11,R[47],E,E,19,[[["self"],[T]]]],[11,R[4],E,E,19,[[[U]],[R[3]]]],[11,R[5],E,E,19,[[],[R[3]]]],[11,R[7],E,E,19,[[["self"]],[T]]],[11,R[6],E,E,19,[[["self"]],[T]]],[11,R[8],E,E,19,[[["self"]],[R[9]]]],[11,"into",E,E,38,[[],[U]]],[11,"from",E,E,38,[[[T]],[T]]],[11,R[46],E,E,38,[[["self"]],[T]]],[11,R[47],E,E,38,[[["self"],[T]]]],[11,R[4],E,E,38,[[[U]],[R[3]]]],[11,R[5],E,E,38,[[],[R[3]]]],[11,R[7],E,E,38,[[["self"]],[T]]],[11,R[6],E,E,38,[[["self"]],[T]]],[11,R[8],E,E,38,[[["self"]],[R[9]]]],[11,"into",E,E,37,[[],[U]]],[11,"from",E,E,37,[[[T]],[T]]],[11,R[46],E,E,37,[[["self"]],[T]]],[11,R[47],E,E,37,[[["self"],[T]]]],[11,R[4],E,E,37,[[[U]],[R[3]]]],[11,R[5],E,E,37,[[],[R[3]]]],[11,R[7],E,E,37,[[["self"]],[T]]],[11,R[6],E,E,37,[[["self"]],[T]]],[11,R[8],E,E,37,[[["self"]],[R[9]]]],[11,"into",E,E,20,[[],[U]]],[11,"from",E,E,20,[[[T]],[T]]],[11,R[46],E,E,20,[[["self"]],[T]]],[11,R[47],E,E,20,[[["self"],[T]]]],[11,R[4],E,E,20,[[[U]],[R[3]]]],[11,R[5],E,E,20,[[],[R[3]]]],[11,R[7],E,E,20,[[["self"]],[T]]],[11,R[6],E,E,20,[[["self"]],[T]]],[11,R[8],E,E,20,[[["self"]],[R[9]]]],[11,"into",E,E,21,[[],[U]]],[11,"from",E,E,21,[[[T]],[T]]],[11,R[46],E,E,21,[[["self"]],[T]]],[11,R[47],E,E,21,[[["self"],[T]]]],[11,R[4],E,E,21,[[[U]],[R[3]]]],[11,R[5],E,E,21,[[],[R[3]]]],[11,R[7],E,E,21,[[["self"]],[T]]],[11,R[6],E,E,21,[[["self"]],[T]]],[11,R[8],E,E,21,[[["self"]],[R[9]]]],[11,"into",E,E,22,[[],[U]]],[11,"from",E,E,22,[[[T]],[T]]],[11,R[46],E,E,22,[[["self"]],[T]]],[11,R[47],E,E,22,[[["self"],[T]]]],[11,R[4],E,E,22,[[[U]],[R[3]]]],[11,R[5],E,E,22,[[],[R[3]]]],[11,R[7],E,E,22,[[["self"]],[T]]],[11,R[6],E,E,22,[[["self"]],[T]]],[11,R[8],E,E,22,[[["self"]],[R[9]]]],[11,"into",E,E,23,[[],[U]]],[11,"from",E,E,23,[[[T]],[T]]],[11,R[46],E,E,23,[[["self"]],[T]]],[11,R[47],E,E,23,[[["self"],[T]]]],[11,R[4],E,E,23,[[[U]],[R[3]]]],[11,R[5],E,E,23,[[],[R[3]]]],[11,R[7],E,E,23,[[["self"]],[T]]],[11,R[6],E,E,23,[[["self"]],[T]]],[11,R[8],E,E,23,[[["self"]],[R[9]]]],[11,"len",E,E,10,[[],["usize"]]],[11,R[2995],E,E,10,[[["s"]],["vector1"]]],[11,"sum",E,E,10,[[],["s"]]],[11,"product",E,E,10,[[],["s"]]],[11,"len",E,E,11,[[],["usize"]]],[11,R[2995],E,E,11,[[["s"]],["vector2"]]],[11,"sum",E,E,11,[[],["s"]]],[11,"product",E,E,11,[[],["s"]]],[11,"len",E,E,12,[[],["usize"]]],[11,R[2995],E,E,12,[[["s"]],["vector3"]]],[11,"sum",E,E,12,[[],["s"]]],[11,"product",E,E,12,[[],["s"]]],[11,"len",E,E,13,[[],["usize"]]],[11,R[2995],E,E,13,[[["s"]],["vector4"]]],[11,"sum",E,E,13,[[],["s"]]],[11,"product",E,E,13,[[],["s"]]],[11,"len",E,E,17,[[],["usize"]]],[11,R[2995],E,E,17,[[["s"]],["point1"]]],[11,"sum",E,E,17,[[],["s"]]],[11,"product",E,E,17,[[],["s"]]],[11,"len",E,E,18,[[],["usize"]]],[11,R[2995],E,E,18,[[["s"]],["point2"]]],[11,"sum",E,E,18,[[],["s"]]],[11,"product",E,E,18,[[],["s"]]],[11,"len",E,E,19,[[],["usize"]]],[11,R[2995],E,E,19,[[["s"]],["point3"]]],[11,"sum",E,E,19,[[],["s"]]],[11,"product",E,E,19,[[],["s"]]],[11,R[3001],E,E,10,[[["vector1"]],["vector1"]]],[11,R[3002],E,E,10,[[["vector1"]],["vector1"]]],[11,R[3003],E,E,10,[[["vector1"]],["vector1"]]],[11,R[3004],E,E,10,[[["vector1"]],["vector1"]]],[11,R[3005],E,E,10,[[["vector1"]],["vector1"]]],[11,R[3006],E,E,10,[[["self"],["vector1"]]]],[11,R[3007],E,E,10,[[["self"],["vector1"]]]],[11,R[3008],E,E,10,[[["self"],["vector1"]]]],[11,R[3009],E,E,10,[[["self"],["vector1"]]]],[11,R[3010],E,E,10,[[["self"],["vector1"]]]],[11,R[3001],E,E,10,[[["s"]],["vector1"]]],[11,R[3002],E,E,10,[[["s"]],["vector1"]]],[11,R[3003],E,E,10,[[["s"]],["vector1"]]],[11,R[3004],E,E,10,[[["s"]],["vector1"]]],[11,R[3005],E,E,10,[[["s"]],["vector1"]]],[11,R[3006],E,E,10,[[["self"],["s"]]]],[11,R[3007],E,E,10,[[["self"],["s"]]]],[11,R[3008],E,E,10,[[["self"],["s"]]]],[11,R[3009],E,E,10,[[["self"],["s"]]]],[11,R[3010],E,E,10,[[["self"],["s"]]]],[11,R[3001],E,E,11,[[["vector2"]],["vector2"]]],[11,R[3002],E,E,11,[[["vector2"]],["vector2"]]],[11,R[3003],E,E,11,[[["vector2"]],["vector2"]]],[11,R[3004],E,E,11,[[["vector2"]],["vector2"]]],[11,R[3005],E,E,11,[[["vector2"]],["vector2"]]],[11,R[3006],E,E,11,[[["self"],["vector2"]]]],[11,R[3007],E,E,11,[[["self"],["vector2"]]]],[11,R[3008],E,E,11,[[["self"],["vector2"]]]],[11,R[3009],E,E,11,[[["self"],["vector2"]]]],[11,R[3010],E,E,11,[[["self"],["vector2"]]]],[11,R[3001],E,E,11,[[["s"]],["vector2"]]],[11,R[3002],E,E,11,[[["s"]],["vector2"]]],[11,R[3003],E,E,11,[[["s"]],["vector2"]]],[11,R[3004],E,E,11,[[["s"]],["vector2"]]],[11,R[3005],E,E,11,[[["s"]],["vector2"]]],[11,R[3006],E,E,11,[[["self"],["s"]]]],[11,R[3007],E,E,11,[[["self"],["s"]]]],[11,R[3008],E,E,11,[[["self"],["s"]]]],[11,R[3009],E,E,11,[[["self"],["s"]]]],[11,R[3010],E,E,11,[[["self"],["s"]]]],[11,R[3001],E,E,12,[[["vector3"]],["vector3"]]],[11,R[3002],E,E,12,[[["vector3"]],["vector3"]]],[11,R[3003],E,E,12,[[["vector3"]],["vector3"]]],[11,R[3004],E,E,12,[[["vector3"]],["vector3"]]],[11,R[3005],E,E,12,[[["vector3"]],["vector3"]]],[11,R[3006],E,E,12,[[["self"],["vector3"]]]],[11,R[3007],E,E,12,[[["self"],["vector3"]]]],[11,R[3008],E,E,12,[[["self"],["vector3"]]]],[11,R[3009],E,E,12,[[["self"],["vector3"]]]],[11,R[3010],E,E,12,[[["self"],["vector3"]]]],[11,R[3001],E,E,12,[[["s"]],["vector3"]]],[11,R[3002],E,E,12,[[["s"]],["vector3"]]],[11,R[3003],E,E,12,[[["s"]],["vector3"]]],[11,R[3004],E,E,12,[[["s"]],["vector3"]]],[11,R[3005],E,E,12,[[["s"]],["vector3"]]],[11,R[3006],E,E,12,[[["self"],["s"]]]],[11,R[3007],E,E,12,[[["self"],["s"]]]],[11,R[3008],E,E,12,[[["self"],["s"]]]],[11,R[3009],E,E,12,[[["self"],["s"]]]],[11,R[3010],E,E,12,[[["self"],["s"]]]],[11,R[3001],E,E,13,[[["vector4"]],["vector4"]]],[11,R[3002],E,E,13,[[["vector4"]],["vector4"]]],[11,R[3003],E,E,13,[[["vector4"]],["vector4"]]],[11,R[3004],E,E,13,[[["vector4"]],["vector4"]]],[11,R[3005],E,E,13,[[["vector4"]],["vector4"]]],[11,R[3006],E,E,13,[[["self"],["vector4"]]]],[11,R[3007],E,E,13,[[["self"],["vector4"]]]],[11,R[3008],E,E,13,[[["self"],["vector4"]]]],[11,R[3009],E,E,13,[[["self"],["vector4"]]]],[11,R[3010],E,E,13,[[["self"],["vector4"]]]],[11,R[3001],E,E,13,[[["s"]],["vector4"]]],[11,R[3002],E,E,13,[[["s"]],["vector4"]]],[11,R[3003],E,E,13,[[["s"]],["vector4"]]],[11,R[3004],E,E,13,[[["s"]],["vector4"]]],[11,R[3005],E,E,13,[[["s"]],["vector4"]]],[11,R[3006],E,E,13,[[["self"],["s"]]]],[11,R[3007],E,E,13,[[["self"],["s"]]]],[11,R[3008],E,E,13,[[["self"],["s"]]]],[11,R[3009],E,E,13,[[["self"],["s"]]]],[11,R[3010],E,E,13,[[["self"],["s"]]]],[11,R[3001],E,E,17,[[["point1"]],["point1"]]],[11,R[3002],E,E,17,[[["point1"]],["point1"]]],[11,R[3003],E,E,17,[[["point1"]],["point1"]]],[11,R[3004],E,E,17,[[["point1"]],["point1"]]],[11,R[3005],E,E,17,[[["point1"]],["point1"]]],[11,R[3006],E,E,17,[[["self"],["point1"]]]],[11,R[3007],E,E,17,[[["self"],["point1"]]]],[11,R[3008],E,E,17,[[["self"],["point1"]]]],[11,R[3009],E,E,17,[[["self"],["point1"]]]],[11,R[3010],E,E,17,[[["self"],["point1"]]]],[11,R[3001],E,E,17,[[["s"]],["point1"]]],[11,R[3002],E,E,17,[[["s"]],["point1"]]],[11,R[3003],E,E,17,[[["s"]],["point1"]]],[11,R[3004],E,E,17,[[["s"]],["point1"]]],[11,R[3005],E,E,17,[[["s"]],["point1"]]],[11,R[3006],E,E,17,[[["self"],["s"]]]],[11,R[3007],E,E,17,[[["self"],["s"]]]],[11,R[3008],E,E,17,[[["self"],["s"]]]],[11,R[3009],E,E,17,[[["self"],["s"]]]],[11,R[3010],E,E,17,[[["self"],["s"]]]],[11,R[3001],E,E,18,[[["point2"]],["point2"]]],[11,R[3002],E,E,18,[[["point2"]],["point2"]]],[11,R[3003],E,E,18,[[["point2"]],["point2"]]],[11,R[3004],E,E,18,[[["point2"]],["point2"]]],[11,R[3005],E,E,18,[[["point2"]],["point2"]]],[11,R[3006],E,E,18,[[["self"],["point2"]]]],[11,R[3007],E,E,18,[[["self"],["point2"]]]],[11,R[3008],E,E,18,[[["self"],["point2"]]]],[11,R[3009],E,E,18,[[["self"],["point2"]]]],[11,R[3010],E,E,18,[[["self"],["point2"]]]],[11,R[3001],E,E,18,[[["s"]],["point2"]]],[11,R[3002],E,E,18,[[["s"]],["point2"]]],[11,R[3003],E,E,18,[[["s"]],["point2"]]],[11,R[3004],E,E,18,[[["s"]],["point2"]]],[11,R[3005],E,E,18,[[["s"]],["point2"]]],[11,R[3006],E,E,18,[[["self"],["s"]]]],[11,R[3007],E,E,18,[[["self"],["s"]]]],[11,R[3008],E,E,18,[[["self"],["s"]]]],[11,R[3009],E,E,18,[[["self"],["s"]]]],[11,R[3010],E,E,18,[[["self"],["s"]]]],[11,R[3001],E,E,19,[[["point3"]],["point3"]]],[11,R[3002],E,E,19,[[["point3"]],["point3"]]],[11,R[3003],E,E,19,[[["point3"]],["point3"]]],[11,R[3004],E,E,19,[[["point3"]],["point3"]]],[11,R[3005],E,E,19,[[["point3"]],["point3"]]],[11,R[3006],E,E,19,[[["self"],["point3"]]]],[11,R[3007],E,E,19,[[["self"],["point3"]]]],[11,R[3008],E,E,19,[[["self"],["point3"]]]],[11,R[3009],E,E,19,[[["self"],["point3"]]]],[11,R[3010],E,E,19,[[["self"],["point3"]]]],[11,R[3001],E,E,19,[[["s"]],["point3"]]],[11,R[3002],E,E,19,[[["s"]],["point3"]]],[11,R[3003],E,E,19,[[["s"]],["point3"]]],[11,R[3004],E,E,19,[[["s"]],["point3"]]],[11,R[3005],E,E,19,[[["s"]],["point3"]]],[11,R[3006],E,E,19,[[["self"],["s"]]]],[11,R[3007],E,E,19,[[["self"],["s"]]]],[11,R[3008],E,E,19,[[["self"],["s"]]]],[11,R[3009],E,E,19,[[["self"],["s"]]]],[11,R[3010],E,E,19,[[["self"],["s"]]]],[11,R[3091],E,E,9,[[],["s"]]],[11,R[3091],E,E,10,[[],["s"]]],[11,R[3091],E,E,11,[[],["s"]]],[11,R[3091],E,E,12,[[],["s"]]],[11,R[3091],E,E,13,[[],["s"]]],[11,R[3091],E,E,17,[[],["s"]]],[11,R[3091],E,E,18,[[],["s"]]],[11,R[3091],E,E,19,[[],["s"]]],[11,"dot",E,E,9,[[[R[2973]]],["s"]]],[11,"dot",E,E,10,[[["vector1"]],["s"]]],[11,"dot",E,E,11,[[["vector2"]],["s"]]],[11,"angle",E,E,11,[[["vector2"]],["rad"]]],[11,"dot",E,E,12,[[["vector3"]],["s"]]],[11,"angle",E,E,12,[[["vector3"]],["rad"]]],[11,"dot",E,E,13,[[["vector4"]],["s"]]],[11,"origin",E,E,17,[[],["point1"]]],[11,"from_vec",E,E,17,[[["vector1"]],["point1"]]],[11,"to_vec",E,E,17,[[],["vector1"]]],[11,"dot",E,E,17,[[["vector1"]],["s"]]],[11,"origin",E,E,18,[[],["point2"]]],[11,"from_vec",E,E,18,[[["vector2"]],["point2"]]],[11,"to_vec",E,E,18,[[],["vector2"]]],[11,"dot",E,E,18,[[["vector2"]],["s"]]],[11,"origin",E,E,19,[[],["point3"]]],[11,"from_vec",E,E,19,[[["vector3"]],["point3"]]],[11,"to_vec",E,E,19,[[],["vector3"]]],[11,"dot",E,E,19,[[["vector3"]],["s"]]],[11,"row",E,E,6,[[["self"],["usize"]],["vector2"]]],[11,R[3092],E,E,6,[[["self"],["usize"]]]],[11,R[3036],E,E,6,[[["self"],["usize"]]]],[11,R[2929],E,E,6,[[["self"]]]],[11,R[3093],E,E,6,[[["self"]],["matrix2"]]],[11,"row",E,E,7,[[["self"],["usize"]],["vector3"]]],[11,R[3092],E,E,7,[[["self"],["usize"]]]],[11,R[3036],E,E,7,[[["self"],["usize"]]]],[11,R[2929],E,E,7,[[["self"]]]],[11,R[3093],E,E,7,[[["self"]],["matrix3"]]],[11,"row",E,E,8,[[["self"],["usize"]],["vector4"]]],[11,R[3092],E,E,8,[[["self"],["usize"]]]],[11,R[3036],E,E,8,[[["self"],["usize"]]]],[11,R[2929],E,E,8,[[["self"]]]],[11,R[3093],E,E,8,[[["self"]],["matrix4"]]],[11,R[2995],E,E,6,[[["s"]],["matrix2"]]],[11,R[3044],E,E,6,[[["vector2"]],["matrix2"]]],[11,R[3046],E,E,6,[[["self"]]]],[11,R[3048],E,E,6,[[["self"]],["s"]]],[11,"diagonal",E,E,6,[[["self"]],["vector2"]]],[11,"invert",E,E,6,[[["self"]],[[R[23],["matrix2"]],["matrix2"]]]],[11,R[3052],E,E,6,[[["self"]],["bool"]]],[11,R[3054],E,E,6,[[["self"]],["bool"]]],[11,R[2995],E,E,7,[[["s"]],["matrix3"]]],[11,R[3044],E,E,7,[[["vector3"]],["matrix3"]]],[11,R[3046],E,E,7,[[["self"]]]],[11,R[3048],E,E,7,[[["self"]],["s"]]],[11,"diagonal",E,E,7,[[["self"]],["vector3"]]],[11,"invert",E,E,7,[[["self"]],[[R[23],["matrix3"]],["matrix3"]]]],[11,R[3052],E,E,7,[[["self"]],["bool"]]],[11,R[3054],E,E,7,[[["self"]],["bool"]]],[11,R[2995],E,E,8,[[["s"]],["matrix4"]]],[11,R[3044],E,E,8,[[["vector4"]],["matrix4"]]],[11,R[3046],E,E,8,[[["self"]]]],[11,R[3048],E,E,8,[[["self"]],["s"]]],[11,"diagonal",E,E,8,[[["self"]],["vector4"]]],[11,"invert",E,E,8,[[["self"]],[[R[23],["matrix4"]],["matrix4"]]]],[11,R[3052],E,E,8,[[["self"]],["bool"]]],[11,R[3054],E,E,8,[[["self"]],["bool"]]],[11,R[3094],E,E,15,[[],["rad"]]],[11,"sin",E,E,15,[[],["s"]]],[11,"cos",E,E,15,[[],["s"]]],[11,"tan",E,E,15,[[],["s"]]],[11,"sin_cos",E,E,15,[[]]],[11,"asin",E,E,15,[[["s"]],["rad"]]],[11,"acos",E,E,15,[[["s"]],["rad"]]],[11,"atan",E,E,15,[[["s"]],["rad"]]],[11,"atan2",E,E,15,[[["s"]],["rad"]]],[11,R[3094],E,E,14,[[],["deg"]]],[11,"sin",E,E,14,[[],["s"]]],[11,"cos",E,E,14,[[],["s"]]],[11,"tan",E,E,14,[[],["s"]]],[11,"sin_cos",E,E,14,[[]]],[11,"asin",E,E,14,[[["s"]],["deg"]]],[11,"acos",E,E,14,[[["s"]],["deg"]]],[11,"atan",E,E,14,[[["s"]],["deg"]]],[11,"atan2",E,E,14,[[["s"]],["deg"]]],[11,"look_at",E,E,9,[[["vector3"]],[R[2973]]]],[11,R[3071],E,E,9,[[["vector3"]],[R[2973]]]],[11,R[3073],E,E,9,[[["self"],["vector3"]],["vector3"]]],[11,"invert",E,E,9,[[["self"]],[R[2973]]]],[11,"look_at",E,E,38,[[["vector2"]],["basis2"]]],[11,R[3071],E,E,38,[[["vector2"]],["basis2"]]],[11,R[3073],E,E,38,[[["self"],["vector2"]],["vector2"]]],[11,"invert",E,E,38,[[["self"]],["basis2"]]],[11,"look_at",E,E,37,[[["vector3"]],["basis3"]]],[11,R[3071],E,E,37,[[["vector3"]],["basis3"]]],[11,R[3073],E,E,37,[[["self"],["vector3"]],["vector3"]]],[11,"invert",E,E,37,[[["self"]],["basis3"]]],[11,R[3077],E,E,38,[[["rad"],["into",["rad"]]],["basis2"]]],[11,R[2969],E,E,9,[[["rad"],["vector3"],["into",["rad"]]],[R[2973]]]],[11,R[2969],E,E,37,[[["rad"],["vector3"],["into",["rad"]]],["basis3"]]],[11,R[2966],E,E,37,[[["rad"],["into",["rad"]]],["basis3"]]],[11,R[2967],E,E,37,[[["rad"],["into",["rad"]]],["basis3"]]],[11,R[2968],E,E,37,[[["rad"],["into",["rad"]]],["basis3"]]],[11,"one",E,E,7,[[],["matrix3"]]],[11,"look_at",E,E,7,[[["point2"],["vector2"]],["matrix3"]]],[11,R[3084],E,E,7,[[["self"],["vector2"]],["vector2"]]],[11,R[3086],E,E,7,[[["self"],["point2"]],["point2"]]],[11,"concat",E,E,7,[[["self"],["matrix3"]],["matrix3"]]],[11,R[3089],E,E,7,[[["self"]],[[R[23],["matrix3"]],["matrix3"]]]],[11,"one",E,E,7,[[],["matrix3"]]],[11,"look_at",E,E,7,[[["point3"],["vector3"]],["matrix3"]]],[11,R[3084],E,E,7,[[["self"],["vector3"]],["vector3"]]],[11,R[3086],E,E,7,[[["self"],["point3"]],["point3"]]],[11,"concat",E,E,7,[[["self"],["matrix3"]],["matrix3"]]],[11,R[3089],E,E,7,[[["self"]],[[R[23],["matrix3"]],["matrix3"]]]],[11,"one",E,E,8,[[],["matrix4"]]],[11,"look_at",E,E,8,[[["point3"],["vector3"]],["matrix4"]]],[11,R[3084],E,E,8,[[["self"],["vector3"]],["vector3"]]],[11,R[3086],E,E,8,[[["self"],["point3"]],["point3"]]],[11,"concat",E,E,8,[[["self"],["matrix4"]],["matrix4"]]],[11,R[3089],E,E,8,[[["self"]],[[R[23],["matrix4"]],["matrix4"]]]],[11,"one",E,E,20,[[],[R[3095]]]],[11,"look_at",E,E,20,[[["p"]],[R[3095]]]],[11,R[3084],E,E,20,[[["self"]]]],[11,R[2988],E,E,20,[[["self"]],[R[23]]]],[11,R[3086],E,E,20,[[["self"],["p"]],["p"]]],[11,"concat",E,E,20,[[["self"],[R[3095]]],[R[3095]]]],[11,R[3089],E,E,20,[[["self"]],[[R[23],[R[3095]]],[R[3095]]]]],[11,"as_ref",E,E,6,[[["self"]]]],[11,"as_ref",E,E,6,[[["self"]]]],[11,"as_ref",E,E,7,[[["self"]]]],[11,"as_ref",E,E,7,[[["self"]]]],[11,"as_ref",E,E,8,[[["self"]]]],[11,"as_ref",E,E,8,[[["self"]]]],[11,"as_ref",E,E,9,[[["self"]]]],[11,"as_ref",E,E,9,[[["self"]]]],[11,"as_ref",E,E,10,[[["self"]]]],[11,"as_ref",E,E,11,[[["self"]]]],[11,"as_ref",E,E,12,[[["self"]]]],[11,"as_ref",E,E,13,[[["self"]]]],[11,"as_ref",E,E,10,[[["self"]]]],[11,"as_ref",E,E,11,[[["self"]]]],[11,"as_ref",E,E,12,[[["self"]]]],[11,"as_ref",E,E,13,[[["self"]]]],[11,"as_ref",E,E,17,[[["self"]]]],[11,"as_ref",E,E,18,[[["self"]]]],[11,"as_ref",E,E,19,[[["self"]]]],[11,"as_ref",E,E,17,[[["self"]]]],[11,"as_ref",E,E,18,[[["self"]]]],[11,"as_ref",E,E,19,[[["self"]]]],[11,"as_ref",E,E,38,[[["self"]],["matrix2"]]],[11,"as_ref",E,E,37,[[["self"]],["matrix3"]]],[11,"clone",E,E,6,[[["self"]],["matrix2"]]],[11,"clone",E,E,7,[[["self"]],["matrix3"]]],[11,"clone",E,E,8,[[["self"]],["matrix4"]]],[11,"clone",E,E,9,[[["self"]],[R[2973]]]],[11,"clone",E,E,10,[[["self"]],["vector1"]]],[11,"clone",E,E,11,[[["self"]],["vector2"]]],[11,"clone",E,E,12,[[["self"]],["vector3"]]],[11,"clone",E,E,13,[[["self"]],["vector4"]]],[11,"clone",E,E,15,[[["self"]],["rad"]]],[11,"clone",E,E,14,[[["self"]],["deg"]]],[11,"clone",E,E,16,[[["self"]],["euler"]]],[11,"clone",E,E,17,[[["self"]],["point1"]]],[11,"clone",E,E,18,[[["self"]],["point2"]]],[11,"clone",E,E,19,[[["self"]],["point3"]]],[11,"clone",E,E,38,[[["self"]],["basis2"]]],[11,"clone",E,E,37,[[["self"]],["basis3"]]],[11,"clone",E,E,20,[[["self"]],[R[3095]]]],[11,"clone",E,E,21,[[["self"]],[R[3096]]]],[11,"clone",E,E,22,[[["self"]],[R[2992]]]],[11,"clone",E,E,23,[[["self"]],["ortho"]]],[11,"into",E,E,6,[[]]],[11,"into",E,E,7,[[]]],[11,"into",E,E,8,[[]]],[11,"into",E,E,9,[[]]],[11,"into",E,E,9,[[]]],[11,"into",E,E,10,[[]]],[11,"into",E,E,11,[[]]],[11,"into",E,E,12,[[]]],[11,"into",E,E,13,[[]]],[11,"into",E,E,10,[[]]],[11,"into",E,E,11,[[]]],[11,"into",E,E,12,[[]]],[11,"into",E,E,13,[[]]],[11,"into",E,E,17,[[]]],[11,"into",E,E,18,[[]]],[11,"into",E,E,19,[[]]],[11,"into",E,E,17,[[]]],[11,"into",E,E,18,[[]]],[11,"into",E,E,19,[[]]],[11,R[77],E,E,15,[[["self"],["rad"]],[[R[50]],[R[23],[R[50]]]]]],[11,"lt",E,E,15,[[["self"],["rad"]],["bool"]]],[11,"le",E,E,15,[[["self"],["rad"]],["bool"]]],[11,"gt",E,E,15,[[["self"],["rad"]],["bool"]]],[11,"ge",E,E,15,[[["self"],["rad"]],["bool"]]],[11,R[77],E,E,14,[[["self"],["deg"]],[[R[50]],[R[23],[R[50]]]]]],[11,"lt",E,E,14,[[["self"],["deg"]],["bool"]]],[11,"le",E,E,14,[[["self"],["deg"]],["bool"]]],[11,"gt",E,E,14,[[["self"],["deg"]],["bool"]]],[11,"ge",E,E,14,[[["self"],["deg"]],["bool"]]],[11,"as_mut",E,E,6,[[["self"]]]],[11,"as_mut",E,E,6,[[["self"]]]],[11,"as_mut",E,E,7,[[["self"]]]],[11,"as_mut",E,E,7,[[["self"]]]],[11,"as_mut",E,E,8,[[["self"]]]],[11,"as_mut",E,E,8,[[["self"]]]],[11,"as_mut",E,E,9,[[["self"]]]],[11,"as_mut",E,E,9,[[["self"]]]],[11,"as_mut",E,E,10,[[["self"]]]],[11,"as_mut",E,E,11,[[["self"]]]],[11,"as_mut",E,E,12,[[["self"]]]],[11,"as_mut",E,E,13,[[["self"]]]],[11,"as_mut",E,E,10,[[["self"]]]],[11,"as_mut",E,E,11,[[["self"]]]],[11,"as_mut",E,E,12,[[["self"]]]],[11,"as_mut",E,E,13,[[["self"]]]],[11,"as_mut",E,E,17,[[["self"]]]],[11,"as_mut",E,E,18,[[["self"]]]],[11,"as_mut",E,E,19,[[["self"]]]],[11,"as_mut",E,E,17,[[["self"]]]],[11,"as_mut",E,E,18,[[["self"]]]],[11,"as_mut",E,E,19,[[["self"]]]],[11,"eq",E,E,6,[[["self"],["matrix2"]],["bool"]]],[11,"ne",E,E,6,[[["self"],["matrix2"]],["bool"]]],[11,"eq",E,E,7,[[["self"],["matrix3"]],["bool"]]],[11,"ne",E,E,7,[[["self"],["matrix3"]],["bool"]]],[11,"eq",E,E,8,[[["self"],["matrix4"]],["bool"]]],[11,"ne",E,E,8,[[["self"],["matrix4"]],["bool"]]],[11,"eq",E,E,9,[[["self"],[R[2973]]],["bool"]]],[11,"ne",E,E,9,[[["self"],[R[2973]]],["bool"]]],[11,"eq",E,E,10,[[["self"],["vector1"]],["bool"]]],[11,"ne",E,E,10,[[["self"],["vector1"]],["bool"]]],[11,"eq",E,E,11,[[["self"],["vector2"]],["bool"]]],[11,"ne",E,E,11,[[["self"],["vector2"]],["bool"]]],[11,"eq",E,E,12,[[["self"],["vector3"]],["bool"]]],[11,"ne",E,E,12,[[["self"],["vector3"]],["bool"]]],[11,"eq",E,E,13,[[["self"],["vector4"]],["bool"]]],[11,"ne",E,E,13,[[["self"],["vector4"]],["bool"]]],[11,"eq",E,E,15,[[["self"],["rad"]],["bool"]]],[11,"ne",E,E,15,[[["self"],["rad"]],["bool"]]],[11,"eq",E,E,14,[[["self"],["deg"]],["bool"]]],[11,"ne",E,E,14,[[["self"],["deg"]],["bool"]]],[11,"eq",E,E,16,[[["self"],["euler"]],["bool"]]],[11,"ne",E,E,16,[[["self"],["euler"]],["bool"]]],[11,"eq",E,E,17,[[["self"],["point1"]],["bool"]]],[11,"ne",E,E,17,[[["self"],["point1"]],["bool"]]],[11,"eq",E,E,18,[[["self"],["point2"]],["bool"]]],[11,"ne",E,E,18,[[["self"],["point2"]],["bool"]]],[11,"eq",E,E,19,[[["self"],["point3"]],["bool"]]],[11,"ne",E,E,19,[[["self"],["point3"]],["bool"]]],[11,"eq",E,E,38,[[["self"],["basis2"]],["bool"]]],[11,"ne",E,E,38,[[["self"],["basis2"]],["bool"]]],[11,"eq",E,E,37,[[["self"],["basis3"]],["bool"]]],[11,"ne",E,E,37,[[["self"],["basis3"]],["bool"]]],[11,"eq",E,E,21,[[["self"],[R[3096]]],["bool"]]],[11,"ne",E,E,21,[[["self"],[R[3096]]],["bool"]]],[11,"eq",E,E,22,[[["self"],[R[2992]]],["bool"]]],[11,"ne",E,E,22,[[["self"],[R[2992]]],["bool"]]],[11,"eq",E,E,23,[[["self"],["ortho"]],["bool"]]],[11,"ne",E,E,23,[[["self"],["ortho"]],["bool"]]],[11,"from",E,E,7,[[["euler"]],["matrix3"]]],[11,"from",E,E,8,[[["euler"]],["matrix4"]]],[11,"from",E,E,6,[[],["matrix2"]]],[11,"from",E,E,7,[[],["matrix3"]]],[11,"from",E,E,8,[[],["matrix4"]]],[11,"from",E,R[3097],7,[[["matrix2"]],["matrix3"]]],[11,"from",E,R[3097],8,[[["matrix2"]],["matrix4"]]],[11,"from",E,"Clone the elements of a 3-dimensional matrix into the…",8,[[["matrix3"]],["matrix4"]]],[11,"from",E,"Convert the matrix to a quaternion",9,[[["matrix3"]],[R[2973]]]],[11,"from",E,E,9,[[["euler"]],[R[2973]]]],[11,"from",E,"Convert the quaternion to a 3 x 3 rotation matrix.",7,[[[R[2973]]],["matrix3"]]],[11,"from",E,"Convert the quaternion to a 4 x 4 rotation matrix.",8,[[[R[2973]]],["matrix4"]]],[11,"from",E,E,37,[[[R[2973]]],["basis3"]]],[11,"from",E,E,9,[[],[R[2973]]]],[11,"from",E,E,9,[[],[R[2973]]]],[11,"from",E,E,10,[[],["vector1"]]],[11,"from",E,E,11,[[],["vector2"]]],[11,"from",E,E,12,[[],["vector3"]]],[11,"from",E,E,13,[[],["vector4"]]],[11,"from",E,E,10,[[],["vector1"]]],[11,"from",E,E,11,[[],["vector2"]]],[11,"from",E,E,12,[[],["vector3"]]],[11,"from",E,E,13,[[],["vector4"]]],[11,"from",E,E,14,[[["rad"]],["deg"]]],[11,"from",E,E,15,[[["deg"]],["rad"]]],[11,"from",E,E,16,[[[R[2973]]],[["rad"],["euler",["rad"]]]]],[11,"from",E,E,17,[[],["point1"]]],[11,"from",E,E,18,[[],["point2"]]],[11,"from",E,E,19,[[],["point3"]]],[11,"from",E,E,17,[[],["point1"]]],[11,"from",E,E,18,[[],["point2"]]],[11,"from",E,E,19,[[],["point3"]]],[11,"from",E,E,6,[[["basis2"]],["matrix2"]]],[11,"from",E,E,7,[[["basis3"]],["matrix3"]]],[11,"from",E,E,9,[[["basis3"]],[R[2973]]]],[11,"from",E,"Create a three-dimensional rotation matrix from a set of…",37,[[["euler"]],["basis3"]]],[11,"from",E,E,7,[[[R[3095],["vector2"]],["vector2"]],["matrix3"]]],[11,"from",E,E,8,[[[R[3095],["vector3"]],["vector3"]],["matrix4"]]],[11,"from",E,E,8,[[[R[3096]]],["matrix4"]]],[11,"from",E,E,8,[[[R[2992]]],["matrix4"]]],[11,"from",E,E,8,[[["ortho"]],["matrix4"]]],[11,"hash",E,E,10,[[["self"],["__h"]]]],[11,"hash",E,E,11,[[["self"],["__h"]]]],[11,"hash",E,E,12,[[["self"],["__h"]]]],[11,"hash",E,E,13,[[["self"],["__h"]]]],[11,"hash",E,E,17,[[["self"],["__h"]]]],[11,"hash",E,E,18,[[["self"],["__h"]]]],[11,"hash",E,E,19,[[["self"],["__h"]]]],[11,"fmt",E,E,6,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,7,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,8,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,9,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,10,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,11,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,12,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,13,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,15,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,14,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,16,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,17,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,18,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,19,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,38,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,37,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,20,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,21,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,22,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,23,[[["self"],[R[10]]],[R[3]]]],[11,"rem",E,E,6,[[["s"]],["matrix2"]]],[11,"rem",E,E,7,[[["s"]],["matrix3"]]],[11,"rem",E,E,8,[[["s"]],["matrix4"]]],[11,"rem",E,E,9,[[["s"]],[R[2973]]]],[11,"rem",E,E,10,[[["s"]],["vector1"]]],[11,"rem",E,E,11,[[["s"]],["vector2"]]],[11,"rem",E,E,12,[[["s"]],["vector3"]]],[11,"rem",E,E,13,[[["s"]],["vector4"]]],[11,"rem",E,E,15,[[["rad"]],["rad"]]],[11,"rem",E,E,15,[[["rad"]],["rad"]]],[11,"rem",E,E,14,[[["deg"]],["deg"]]],[11,"rem",E,E,14,[[["deg"]],["deg"]]],[11,"rem",E,E,17,[[["s"]],["point1"]]],[11,"rem",E,E,18,[[["s"]],["point2"]]],[11,"rem",E,E,19,[[["s"]],["point3"]]],[11,"div",E,E,6,[[["s"]],["matrix2"]]],[11,"div",E,E,7,[[["s"]],["matrix3"]]],[11,"div",E,E,8,[[["s"]],["matrix4"]]],[11,"div",E,E,9,[[["s"]],[R[2973]]]],[11,"div",E,E,10,[[["s"]],["vector1"]]],[11,"div",E,E,11,[[["s"]],["vector2"]]],[11,"div",E,E,12,[[["s"]],["vector3"]]],[11,"div",E,E,13,[[["s"]],["vector4"]]],[11,"div",E,E,15,[[["rad"]],["s"]]],[11,"div",E,E,15,[[["rad"]],["s"]]],[11,"div",E,E,15,[[["s"]],["rad"]]],[11,"div",E,E,14,[[["deg"]],["s"]]],[11,"div",E,E,14,[[["deg"]],["s"]]],[11,"div",E,E,14,[[["s"]],["deg"]]],[11,"div",E,E,17,[[["s"]],["point1"]]],[11,"div",E,E,18,[[["s"]],["point2"]]],[11,"div",E,E,19,[[["s"]],["point3"]]],[11,"add",E,E,6,[[["matrix2"]],["matrix2"]]],[11,"add",E,E,6,[[["matrix2"]],["matrix2"]]],[11,"add",E,E,7,[[["matrix3"]],["matrix3"]]],[11,"add",E,E,7,[[["matrix3"]],["matrix3"]]],[11,"add",E,E,8,[[["matrix4"]],["matrix4"]]],[11,"add",E,E,8,[[["matrix4"]],["matrix4"]]],[11,"add",E,E,9,[[[R[2973]]],[R[2973]]]],[11,"add",E,E,9,[[[R[2973]]],[R[2973]]]],[11,"add",E,E,10,[[["vector1"]],["vector1"]]],[11,"add",E,E,10,[[["vector1"]],["vector1"]]],[11,"add",E,E,11,[[["vector2"]],["vector2"]]],[11,"add",E,E,11,[[["vector2"]],["vector2"]]],[11,"add",E,E,12,[[["vector3"]],["vector3"]]],[11,"add",E,E,12,[[["vector3"]],["vector3"]]],[11,"add",E,E,13,[[["vector4"]],["vector4"]]],[11,"add",E,E,13,[[["vector4"]],["vector4"]]],[11,"add",E,E,15,[[["rad"]],["rad"]]],[11,"add",E,E,15,[[["rad"]],["rad"]]],[11,"add",E,E,14,[[["deg"]],["deg"]]],[11,"add",E,E,14,[[["deg"]],["deg"]]],[11,"add",E,E,17,[[["vector1"]],["point1"]]],[11,"add",E,E,17,[[["vector1"]],["point1"]]],[11,"add",E,E,18,[[["vector2"]],["point2"]]],[11,"add",E,E,18,[[["vector2"]],["point2"]]],[11,"add",E,E,19,[[["vector3"]],["point3"]]],[11,"add",E,E,19,[[["vector3"]],["point3"]]],[11,"sub",E,E,6,[[["matrix2"]],["matrix2"]]],[11,"sub",E,E,6,[[["matrix2"]],["matrix2"]]],[11,"sub",E,E,7,[[["matrix3"]],["matrix3"]]],[11,"sub",E,E,7,[[["matrix3"]],["matrix3"]]],[11,"sub",E,E,8,[[["matrix4"]],["matrix4"]]],[11,"sub",E,E,8,[[["matrix4"]],["matrix4"]]],[11,"sub",E,E,9,[[[R[2973]]],[R[2973]]]],[11,"sub",E,E,9,[[[R[2973]]],[R[2973]]]],[11,"sub",E,E,10,[[["vector1"]],["vector1"]]],[11,"sub",E,E,10,[[["vector1"]],["vector1"]]],[11,"sub",E,E,11,[[["vector2"]],["vector2"]]],[11,"sub",E,E,11,[[["vector2"]],["vector2"]]],[11,"sub",E,E,12,[[["vector3"]],["vector3"]]],[11,"sub",E,E,12,[[["vector3"]],["vector3"]]],[11,"sub",E,E,13,[[["vector4"]],["vector4"]]],[11,"sub",E,E,13,[[["vector4"]],["vector4"]]],[11,"sub",E,E,15,[[["rad"]],["rad"]]],[11,"sub",E,E,15,[[["rad"]],["rad"]]],[11,"sub",E,E,14,[[["deg"]],["deg"]]],[11,"sub",E,E,14,[[["deg"]],["deg"]]],[11,"sub",E,E,17,[[["vector1"]],["point1"]]],[11,"sub",E,E,17,[[["vector1"]],["point1"]]],[11,"sub",E,E,17,[[["point1"]],["vector1"]]],[11,"sub",E,E,17,[[["point1"]],["vector1"]]],[11,"sub",E,E,18,[[["vector2"]],["point2"]]],[11,"sub",E,E,18,[[["vector2"]],["point2"]]],[11,"sub",E,E,18,[[["point2"]],["vector2"]]],[11,"sub",E,E,18,[[["point2"]],["vector2"]]],[11,"sub",E,E,19,[[["vector3"]],["point3"]]],[11,"sub",E,E,19,[[["vector3"]],["point3"]]],[11,"sub",E,E,19,[[["point3"]],["vector3"]]],[11,"sub",E,E,19,[[["point3"]],["vector3"]]],[11,"mul",E,E,6,[[["s"]],["matrix2"]]],[11,"mul",E,E,7,[[["s"]],["matrix3"]]],[11,"mul",E,E,8,[[["s"]],["matrix4"]]],[11,"mul",E,E,6,[[["vector2"]],["vector2"]]],[11,"mul",E,E,6,[[["vector2"]],["vector2"]]],[11,"mul",E,E,7,[[["vector3"]],["vector3"]]],[11,"mul",E,E,7,[[["vector3"]],["vector3"]]],[11,"mul",E,E,8,[[["vector4"]],["vector4"]]],[11,"mul",E,E,8,[[["vector4"]],["vector4"]]],[11,"mul",E,E,6,[[["matrix2"]],["matrix2"]]],[11,"mul",E,E,6,[[["matrix2"]],["matrix2"]]],[11,"mul",E,E,7,[[["matrix3"]],["matrix3"]]],[11,"mul",E,E,7,[[["matrix3"]],["matrix3"]]],[11,"mul",E,E,8,[[["matrix4"]],["matrix4"]]],[11,"mul",E,E,8,[[["matrix4"]],["matrix4"]]],[11,"mul",E,E,9,[[["s"]],[R[2973]]]],[11,"mul",E,E,9,[[["vector3"]],["vector3"]]],[11,"mul",E,E,9,[[["vector3"]],["vector3"]]],[11,"mul",E,E,9,[[[R[2973]]],[R[2973]]]],[11,"mul",E,E,9,[[[R[2973]]],[R[2973]]]],[11,"mul",E,E,10,[[["s"]],["vector1"]]],[11,"mul",E,E,11,[[["s"]],["vector2"]]],[11,"mul",E,E,12,[[["s"]],["vector3"]]],[11,"mul",E,E,13,[[["s"]],["vector4"]]],[11,"mul",E,E,15,[[["s"]],["rad"]]],[11,"mul",E,E,14,[[["s"]],["deg"]]],[11,"mul",E,E,17,[[["s"]],["point1"]]],[11,"mul",E,E,18,[[["s"]],["point2"]]],[11,"mul",E,E,19,[[["s"]],["point3"]]],[11,"mul",E,E,38,[[["basis2"]],["basis2"]]],[11,"mul",E,E,38,[[["basis2"]],["basis2"]]],[11,"mul",E,E,37,[[["basis3"]],["basis3"]]],[11,"mul",E,E,37,[[["basis3"]],["basis3"]]],[11,"neg",E,E,6,[[],["matrix2"]]],[11,"neg",E,E,7,[[],["matrix3"]]],[11,"neg",E,E,8,[[],["matrix4"]]],[11,"neg",E,E,9,[[],[R[2973]]]],[11,"neg",E,E,10,[[],["vector1"]]],[11,"neg",E,E,11,[[],["vector2"]]],[11,"neg",E,E,12,[[],["vector3"]]],[11,"neg",E,E,13,[[],["vector4"]]],[11,"neg",E,E,15,[[],["rad"]]],[11,"neg",E,E,14,[[],["deg"]]],[11,R[78],E,E,6,[[["self"],["matrix2"]]]],[11,R[78],E,E,7,[[["self"],["matrix3"]]]],[11,R[78],E,E,8,[[["self"],["matrix4"]]]],[11,R[78],E,E,9,[[["self"],[R[2973]]]]],[11,R[78],E,E,10,[[["self"],["vector1"]]]],[11,R[78],E,E,11,[[["self"],["vector2"]]]],[11,R[78],E,E,12,[[["self"],["vector3"]]]],[11,R[78],E,E,13,[[["self"],["vector4"]]]],[11,R[78],E,E,15,[[["self"],["rad"]]]],[11,R[78],E,E,14,[[["self"],["deg"]]]],[11,R[78],E,E,17,[[["self"],["vector1"]]]],[11,R[78],E,E,18,[[["self"],["vector2"]]]],[11,R[78],E,E,19,[[["self"],["vector3"]]]],[11,R[79],E,E,6,[[["self"],["matrix2"]]]],[11,R[79],E,E,7,[[["self"],["matrix3"]]]],[11,R[79],E,E,8,[[["self"],["matrix4"]]]],[11,R[79],E,E,9,[[["self"],[R[2973]]]]],[11,R[79],E,E,10,[[["self"],["vector1"]]]],[11,R[79],E,E,11,[[["self"],["vector2"]]]],[11,R[79],E,E,12,[[["self"],["vector3"]]]],[11,R[79],E,E,13,[[["self"],["vector4"]]]],[11,R[79],E,E,15,[[["self"],["rad"]]]],[11,R[79],E,E,14,[[["self"],["deg"]]]],[11,R[79],E,E,17,[[["self"],["vector1"]]]],[11,R[79],E,E,18,[[["self"],["vector2"]]]],[11,R[79],E,E,19,[[["self"],["vector3"]]]],[11,R[80],E,E,6,[[["self"],["s"]]]],[11,R[80],E,E,7,[[["self"],["s"]]]],[11,R[80],E,E,8,[[["self"],["s"]]]],[11,R[80],E,E,9,[[["self"],["s"]]]],[11,R[80],E,E,10,[[["self"],["s"]]]],[11,R[80],E,E,11,[[["self"],["s"]]]],[11,R[80],E,E,12,[[["self"],["s"]]]],[11,R[80],E,E,13,[[["self"],["s"]]]],[11,R[80],E,E,15,[[["self"],["s"]]]],[11,R[80],E,E,14,[[["self"],["s"]]]],[11,R[80],E,E,17,[[["self"],["s"]]]],[11,R[80],E,E,18,[[["self"],["s"]]]],[11,R[80],E,E,19,[[["self"],["s"]]]],[11,R[3098],E,E,6,[[["self"],["s"]]]],[11,R[3098],E,E,7,[[["self"],["s"]]]],[11,R[3098],E,E,8,[[["self"],["s"]]]],[11,R[3098],E,E,9,[[["self"],["s"]]]],[11,R[3098],E,E,10,[[["self"],["s"]]]],[11,R[3098],E,E,11,[[["self"],["s"]]]],[11,R[3098],E,E,12,[[["self"],["s"]]]],[11,R[3098],E,E,13,[[["self"],["s"]]]],[11,R[3098],E,E,15,[[["self"],["s"]]]],[11,R[3098],E,E,14,[[["self"],["s"]]]],[11,R[3098],E,E,17,[[["self"],["s"]]]],[11,R[3098],E,E,18,[[["self"],["s"]]]],[11,R[3098],E,E,19,[[["self"],["s"]]]],[11,R[3099],E,E,6,[[["self"],["s"]]]],[11,R[3099],E,E,7,[[["self"],["s"]]]],[11,R[3099],E,E,8,[[["self"],["s"]]]],[11,R[3099],E,E,9,[[["self"],["s"]]]],[11,R[3099],E,E,10,[[["self"],["s"]]]],[11,R[3099],E,E,11,[[["self"],["s"]]]],[11,R[3099],E,E,12,[[["self"],["s"]]]],[11,R[3099],E,E,13,[[["self"],["s"]]]],[11,R[3099],E,E,15,[[["self"],["rad"]]]],[11,R[3099],E,E,14,[[["self"],["deg"]]]],[11,R[3099],E,E,17,[[["self"],["s"]]]],[11,R[3099],E,E,18,[[["self"],["s"]]]],[11,R[3099],E,E,19,[[["self"],["s"]]]],[11,"index",E,E,6,[[["self"],["usize"]],["vector2"]]],[11,"index",E,E,7,[[["self"],["usize"]],["vector3"]]],[11,"index",E,E,8,[[["self"],["usize"]],["vector4"]]],[11,"index",E,E,9,[[["self"],["usize"]],["s"]]],[11,"index",E,E,9,[[["self"],["range",["usize"]],["usize"]]]],[11,"index",E,E,9,[[["self"],["rangeto",["usize"]],["usize"]]]],[11,"index",E,E,9,[[["self"],["usize"],[R[123],["usize"]]]]],[11,"index",E,E,9,[[["self"],[R[124]]]]],[11,"index",E,E,10,[[["self"],["usize"]],["s"]]],[11,"index",E,E,10,[[["self"],["range",["usize"]],["usize"]]]],[11,"index",E,E,10,[[["self"],["rangeto",["usize"]],["usize"]]]],[11,"index",E,E,10,[[["self"],["usize"],[R[123],["usize"]]]]],[11,"index",E,E,10,[[["self"],[R[124]]]]],[11,"index",E,E,11,[[["self"],["usize"]],["s"]]],[11,"index",E,E,11,[[["self"],["range",["usize"]],["usize"]]]],[11,"index",E,E,11,[[["self"],["rangeto",["usize"]],["usize"]]]],[11,"index",E,E,11,[[["self"],["usize"],[R[123],["usize"]]]]],[11,"index",E,E,11,[[["self"],[R[124]]]]],[11,"index",E,E,12,[[["self"],["usize"]],["s"]]],[11,"index",E,E,12,[[["self"],["range",["usize"]],["usize"]]]],[11,"index",E,E,12,[[["self"],["rangeto",["usize"]],["usize"]]]],[11,"index",E,E,12,[[["self"],["usize"],[R[123],["usize"]]]]],[11,"index",E,E,12,[[["self"],[R[124]]]]],[11,"index",E,E,13,[[["self"],["usize"]],["s"]]],[11,"index",E,E,13,[[["self"],["range",["usize"]],["usize"]]]],[11,"index",E,E,13,[[["self"],["rangeto",["usize"]],["usize"]]]],[11,"index",E,E,13,[[["self"],["usize"],[R[123],["usize"]]]]],[11,"index",E,E,13,[[["self"],[R[124]]]]],[11,"index",E,E,17,[[["self"],["usize"]],["s"]]],[11,"index",E,E,17,[[["self"],["range",["usize"]],["usize"]]]],[11,"index",E,E,17,[[["self"],["rangeto",["usize"]],["usize"]]]],[11,"index",E,E,17,[[["self"],["usize"],[R[123],["usize"]]]]],[11,"index",E,E,17,[[["self"],[R[124]]]]],[11,"index",E,E,18,[[["self"],["usize"]],["s"]]],[11,"index",E,E,18,[[["self"],["range",["usize"]],["usize"]]]],[11,"index",E,E,18,[[["self"],["rangeto",["usize"]],["usize"]]]],[11,"index",E,E,18,[[["self"],["usize"],[R[123],["usize"]]]]],[11,"index",E,E,18,[[["self"],[R[124]]]]],[11,"index",E,E,19,[[["self"],["usize"]],["s"]]],[11,"index",E,E,19,[[["self"],["range",["usize"]],["usize"]]]],[11,"index",E,E,19,[[["self"],["rangeto",["usize"]],["usize"]]]],[11,"index",E,E,19,[[["self"],["usize"],[R[123],["usize"]]]]],[11,"index",E,E,19,[[["self"],[R[124]]]]],[11,R[51],E,E,6,[[["self"],["usize"]],["vector2"]]],[11,R[51],E,E,7,[[["self"],["usize"]],["vector3"]]],[11,R[51],E,E,8,[[["self"],["usize"]],["vector4"]]],[11,R[51],E,E,9,[[["self"],["usize"]],["s"]]],[11,R[51],E,E,9,[[["usize"],["self"],["range",["usize"]]]]],[11,R[51],E,E,9,[[["rangeto",["usize"]],["self"],["usize"]]]],[11,R[51],E,E,9,[[[R[123],["usize"]],["self"],["usize"]]]],[11,R[51],E,E,9,[[["self"],[R[124]]]]],[11,R[51],E,E,10,[[["self"],["usize"]],["s"]]],[11,R[51],E,E,10,[[["usize"],["self"],["range",["usize"]]]]],[11,R[51],E,E,10,[[["rangeto",["usize"]],["self"],["usize"]]]],[11,R[51],E,E,10,[[[R[123],["usize"]],["self"],["usize"]]]],[11,R[51],E,E,10,[[["self"],[R[124]]]]],[11,R[51],E,E,11,[[["self"],["usize"]],["s"]]],[11,R[51],E,E,11,[[["usize"],["self"],["range",["usize"]]]]],[11,R[51],E,E,11,[[["rangeto",["usize"]],["self"],["usize"]]]],[11,R[51],E,E,11,[[[R[123],["usize"]],["self"],["usize"]]]],[11,R[51],E,E,11,[[["self"],[R[124]]]]],[11,R[51],E,E,12,[[["self"],["usize"]],["s"]]],[11,R[51],E,E,12,[[["usize"],["self"],["range",["usize"]]]]],[11,R[51],E,E,12,[[["rangeto",["usize"]],["self"],["usize"]]]],[11,R[51],E,E,12,[[[R[123],["usize"]],["self"],["usize"]]]],[11,R[51],E,E,12,[[["self"],[R[124]]]]],[11,R[51],E,E,13,[[["self"],["usize"]],["s"]]],[11,R[51],E,E,13,[[["usize"],["self"],["range",["usize"]]]]],[11,R[51],E,E,13,[[["rangeto",["usize"]],["self"],["usize"]]]],[11,R[51],E,E,13,[[[R[123],["usize"]],["self"],["usize"]]]],[11,R[51],E,E,13,[[["self"],[R[124]]]]],[11,R[51],E,E,17,[[["self"],["usize"]],["s"]]],[11,R[51],E,E,17,[[["usize"],["self"],["range",["usize"]]]]],[11,R[51],E,E,17,[[["rangeto",["usize"]],["self"],["usize"]]]],[11,R[51],E,E,17,[[[R[123],["usize"]],["self"],["usize"]]]],[11,R[51],E,E,17,[[["self"],[R[124]]]]],[11,R[51],E,E,18,[[["self"],["usize"]],["s"]]],[11,R[51],E,E,18,[[["usize"],["self"],["range",["usize"]]]]],[11,R[51],E,E,18,[[["rangeto",["usize"]],["self"],["usize"]]]],[11,R[51],E,E,18,[[[R[123],["usize"]],["self"],["usize"]]]],[11,R[51],E,E,18,[[["self"],[R[124]]]]],[11,R[51],E,E,19,[[["self"],["usize"]],["s"]]],[11,R[51],E,E,19,[[["usize"],["self"],["range",["usize"]]]]],[11,R[51],E,E,19,[[["rangeto",["usize"]],["self"],["usize"]]]],[11,R[51],E,E,19,[[[R[123],["usize"]],["self"],["usize"]]]],[11,R[51],E,E,19,[[["self"],[R[124]]]]],[11,"product",E,E,6,[[[R[3100]]],["matrix2"]]],[11,"product",E,E,6,[[[R[3100]]],["matrix2"]]],[11,"product",E,E,7,[[[R[3100]]],["matrix3"]]],[11,"product",E,E,7,[[[R[3100]]],["matrix3"]]],[11,"product",E,E,8,[[[R[3100]]],["matrix4"]]],[11,"product",E,E,8,[[[R[3100]]],["matrix4"]]],[11,"product",E,E,9,[[[R[3100]]],[R[2973]]]],[11,"product",E,E,9,[[[R[3100]]],[R[2973]]]],[11,"product",E,E,38,[[[R[3100]]],["basis2"]]],[11,"product",E,E,38,[[[R[3100]]],["basis2"]]],[11,"product",E,E,37,[[[R[3100]]],["basis3"]]],[11,"product",E,E,37,[[[R[3100]]],["basis3"]]],[11,"sum",E,E,6,[[[R[3100]]],["matrix2"]]],[11,"sum",E,E,6,[[[R[3100]]],["matrix2"]]],[11,"sum",E,E,7,[[[R[3100]]],["matrix3"]]],[11,"sum",E,E,7,[[[R[3100]]],["matrix3"]]],[11,"sum",E,E,8,[[[R[3100]]],["matrix4"]]],[11,"sum",E,E,8,[[[R[3100]]],["matrix4"]]],[11,"sum",E,E,9,[[[R[3100]]],[R[2973]]]],[11,"sum",E,E,9,[[[R[3100]]],[R[2973]]]],[11,"sum",E,E,10,[[[R[3100]]],["vector1"]]],[11,"sum",E,E,10,[[[R[3100]]],["vector1"]]],[11,"sum",E,E,11,[[[R[3100]]],["vector2"]]],[11,"sum",E,E,11,[[[R[3100]]],["vector2"]]],[11,"sum",E,E,12,[[[R[3100]]],["vector3"]]],[11,"sum",E,E,12,[[[R[3100]]],["vector3"]]],[11,"sum",E,E,13,[[[R[3100]]],["vector4"]]],[11,"sum",E,E,13,[[[R[3100]]],["vector4"]]],[11,"sum",E,E,15,[[[R[3100]]],["rad"]]],[11,"sum",E,E,15,[[[R[3100]]],["rad"]]],[11,"sum",E,E,14,[[[R[3100]]],["deg"]]],[11,"sum",E,E,14,[[[R[3100]]],["deg"]]],[11,R[2903],E,E,6,[[]]],[11,R[2905],E,E,6,[[]]],[11,R[2907],E,E,6,[[],["u32"]]],[11,R[108],E,E,6,[[["self"]],["bool"]]],[11,"ulps_eq",E,E,6,[[["self"],["u32"]],["bool"]]],[11,R[2903],E,E,7,[[]]],[11,R[2905],E,E,7,[[]]],[11,R[2907],E,E,7,[[],["u32"]]],[11,R[108],E,E,7,[[["self"]],["bool"]]],[11,"ulps_eq",E,E,7,[[["self"],["u32"]],["bool"]]],[11,R[2903],E,E,8,[[]]],[11,R[2905],E,E,8,[[]]],[11,R[2907],E,E,8,[[],["u32"]]],[11,R[108],E,E,8,[[["self"]],["bool"]]],[11,"ulps_eq",E,E,8,[[["self"],["u32"]],["bool"]]],[11,R[2903],E,E,9,[[]]],[11,R[2905],E,E,9,[[]]],[11,R[2907],E,E,9,[[],["u32"]]],[11,R[108],E,E,9,[[["self"]],["bool"]]],[11,"ulps_eq",E,E,9,[[["self"],["u32"]],["bool"]]],[11,R[2903],E,E,10,[[]]],[11,R[2905],E,E,10,[[]]],[11,R[2907],E,E,10,[[],["u32"]]],[11,R[108],E,E,10,[[["self"]],["bool"]]],[11,"ulps_eq",E,E,10,[[["self"],["u32"]],["bool"]]],[11,R[2903],E,E,11,[[]]],[11,R[2905],E,E,11,[[]]],[11,R[2907],E,E,11,[[],["u32"]]],[11,R[108],E,E,11,[[["self"]],["bool"]]],[11,"ulps_eq",E,E,11,[[["self"],["u32"]],["bool"]]],[11,R[2903],E,E,12,[[]]],[11,R[2905],E,E,12,[[]]],[11,R[2907],E,E,12,[[],["u32"]]],[11,R[108],E,E,12,[[["self"]],["bool"]]],[11,"ulps_eq",E,E,12,[[["self"],["u32"]],["bool"]]],[11,R[2903],E,E,13,[[]]],[11,R[2905],E,E,13,[[]]],[11,R[2907],E,E,13,[[],["u32"]]],[11,R[108],E,E,13,[[["self"]],["bool"]]],[11,"ulps_eq",E,E,13,[[["self"],["u32"]],["bool"]]],[11,R[2903],E,E,15,[[]]],[11,R[2905],E,E,15,[[]]],[11,R[2907],E,E,15,[[],["u32"]]],[11,R[108],E,E,15,[[["self"]],["bool"]]],[11,"ulps_eq",E,E,15,[[["self"],["u32"]],["bool"]]],[11,R[2903],E,E,14,[[]]],[11,R[2905],E,E,14,[[]]],[11,R[2907],E,E,14,[[],["u32"]]],[11,R[108],E,E,14,[[["self"]],["bool"]]],[11,"ulps_eq",E,E,14,[[["self"],["u32"]],["bool"]]],[11,R[2903],E,E,16,[[]]],[11,R[2905],E,E,16,[[]]],[11,R[2907],E,E,16,[[],["u32"]]],[11,R[108],E,E,16,[[["self"]],["bool"]]],[11,"ulps_eq",E,E,16,[[["self"],["u32"]],["bool"]]],[11,R[2903],E,E,17,[[]]],[11,R[2905],E,E,17,[[]]],[11,R[2907],E,E,17,[[],["u32"]]],[11,R[108],E,E,17,[[["self"]],["bool"]]],[11,"ulps_eq",E,E,17,[[["self"],["u32"]],["bool"]]],[11,R[2903],E,E,18,[[]]],[11,R[2905],E,E,18,[[]]],[11,R[2907],E,E,18,[[],["u32"]]],[11,R[108],E,E,18,[[["self"]],["bool"]]],[11,"ulps_eq",E,E,18,[[["self"],["u32"]],["bool"]]],[11,R[2903],E,E,19,[[]]],[11,R[2905],E,E,19,[[]]],[11,R[2907],E,E,19,[[],["u32"]]],[11,R[108],E,E,19,[[["self"]],["bool"]]],[11,"ulps_eq",E,E,19,[[["self"],["u32"]],["bool"]]],[11,R[2903],E,E,38,[[]]],[11,R[2905],E,E,38,[[]]],[11,R[2907],E,E,38,[[],["u32"]]],[11,R[108],E,E,38,[[["self"]],["bool"]]],[11,"ulps_eq",E,E,38,[[["self"],["u32"]],["bool"]]],[11,R[2903],E,E,37,[[]]],[11,R[2905],E,E,37,[[]]],[11,R[2907],E,E,37,[[],["u32"]]],[11,R[108],E,E,37,[[["self"]],["bool"]]],[11,"ulps_eq",E,E,37,[[["self"],["u32"]],["bool"]]],[11,R[2903],E,E,20,[[],["e"]]],[11,R[2905],E,E,20,[[],["e"]]],[11,R[2907],E,E,20,[[],["u32"]]],[11,R[108],E,E,20,[[["self"],["e"]],["bool"]]],[11,"ulps_eq",E,E,20,[[["self"],["u32"],["e"]],["bool"]]],[11,"rand",E,E,6,[[["r"]],["matrix2"]]],[11,"rand",E,E,7,[[["r"]],["matrix3"]]],[11,"rand",E,E,8,[[["r"]],["matrix4"]]],[11,"rand",E,E,9,[[["r"]],[R[2973]]]],[11,"rand",E,E,10,[[["r"]],["vector1"]]],[11,"rand",E,E,11,[[["r"]],["vector2"]]],[11,"rand",E,E,12,[[["r"]],["vector3"]]],[11,"rand",E,E,13,[[["r"]],["vector4"]]],[11,"rand",E,E,15,[[["r"]],["rad"]]],[11,"rand",E,E,14,[[["r"]],["deg"]]],[11,"rand",E,E,16,[[["r"]],["euler"]]],[11,"zero",E,E,6,[[],["matrix2"]]],[11,"is_zero",E,E,6,[[["self"]],["bool"]]],[11,"zero",E,E,7,[[],["matrix3"]]],[11,"is_zero",E,E,7,[[["self"]],["bool"]]],[11,"zero",E,E,8,[[],["matrix4"]]],[11,"is_zero",E,E,8,[[["self"]],["bool"]]],[11,"zero",E,E,9,[[],[R[2973]]]],[11,"is_zero",E,E,9,[[["self"]],["bool"]]],[11,"zero",E,E,10,[[],["vector1"]]],[11,"is_zero",E,E,10,[[["self"]],["bool"]]],[11,"zero",E,E,11,[[],["vector2"]]],[11,"is_zero",E,E,11,[[["self"]],["bool"]]],[11,"zero",E,E,12,[[],["vector3"]]],[11,"is_zero",E,E,12,[[["self"]],["bool"]]],[11,"zero",E,E,13,[[],["vector4"]]],[11,"is_zero",E,E,13,[[["self"]],["bool"]]],[11,"zero",E,E,15,[[],["rad"]]],[11,"is_zero",E,E,15,[[["self"]],["bool"]]],[11,"zero",E,E,14,[[],["deg"]]],[11,"is_zero",E,E,14,[[["self"]],["bool"]]],[11,"one",E,E,6,[[],["matrix2"]]],[11,"one",E,E,7,[[],["matrix3"]]],[11,"one",E,E,8,[[],["matrix4"]]],[11,"one",E,E,9,[[],[R[2973]]]],[11,"one",E,E,38,[[],["basis2"]]],[11,"one",E,E,37,[[],["basis3"]]],[11,R[1074],E,E,10,[[],["vector1"]]],[11,R[1075],E,E,10,[[],["vector1"]]],[11,R[1074],E,E,11,[[],["vector2"]]],[11,R[1075],E,E,11,[[],["vector2"]]],[11,R[1074],E,E,12,[[],["vector3"]]],[11,R[1075],E,E,12,[[],["vector3"]]],[11,R[1074],E,E,13,[[],["vector4"]]],[11,R[1075],E,E,13,[[],["vector4"]]],[11,R[1074],E,E,15,[[],["rad"]]],[11,R[1075],E,E,15,[[],["rad"]]],[11,R[1074],E,E,14,[[],["deg"]]],[11,R[1075],E,E,14,[[],["deg"]]],[11,R[1074],E,E,17,[[],["point1"]]],[11,R[1075],E,E,17,[[],["point1"]]],[11,R[1074],E,E,18,[[],["point2"]]],[11,R[1075],E,E,18,[[],["point2"]]],[11,R[1074],E,E,19,[[],["point3"]]],[11,R[1075],E,E,19,[[],["point3"]]],[11,"new",E,R[3101],1,[[[T]],[R[104]]]],[11,"epsilon",E,R[105],1,[[],[R[104]]]],[11,R[103],E,R[3102],1,[[],[R[104]]]],[11,"eq",E,R[106],1,[[],["bool"]]],[11,"ne",E,R[107],1,[[],["bool"]]],[11,"new",E,R[3103],2,[[[T]],["ulps"]]],[11,"epsilon",E,R[105],2,[[],["ulps"]]],[11,"max_ulps",E,R[3104],2,[[["u32"]],["ulps"]]],[11,"eq",E,R[106],2,[[],["bool"]]],[11,"ne",E,R[107],2,[[],["bool"]]]],"p":[[8,"ApproxEq"],[3,"Relative"],[3,"Ulps"],[8,"Bounded"],[8,"One"],[8,"Zero"],[3,"Matrix2"],[3,"Matrix3"],[3,"Matrix4"],[3,"Quaternion"],[3,"Vector1"],[3,"Vector2"],[3,"Vector3"],[3,"Vector4"],[3,"Deg"],[3,"Rad"],[3,"Euler"],[3,"Point1"],[3,"Point2"],[3,"Point3"],[3,"Decomposed"],[3,R[3105]],[3,R[3106]],[3,"Ortho"],[8,"Array"],[8,R[2999]],[8,R[3011]],[8,R[3014]],[8,R[3107]],[8,R[3022]],[8,"Matrix"],[8,R[3040]],[8,"Angle"],[8,"Rotation"],[8,"Rotation2"],[8,"Rotation3"],[8,"Transform"],[3,"Basis3"],[3,"Basis2"]]};
searchIndex["clap"]={"doc":"`clap` is a simple-to-use, efficient, and full-featured…","i":[[3,"Arg","clap",R[3524],N,N],[3,"ArgGroup",E,R[3635],N,N],[3,R[3571],E,R[3572],N,N],[3,"OsValues",E,R[1963],N,N],[3,R[3569],E,R[3570],N,N],[3,"Values",E,R[1963],N,N],[3,"App",E,R[3515],N,N],[3,"Error",E,R[3520],N,N],[12,"message",E,R[3521],0,N],[12,"kind",E,R[3522],0,N],[12,"info",E,R[3523],0,N],[4,R[1990],E,R[3536],N,N],[13,"Required",E,R[3537],1,N],[13,"Multiple",E,R[3538],1,N],[13,R[3539],E,R[3540],1,N],[13,"Global",E,R[3541],1,N],[13,"Hidden",E,R[3542],1,N],[13,"TakesValue",E,R[3543],1,N],[13,R[3544],E,R[3545],1,N],[13,R[1965],E,R[3546],1,N],[13,R[3547],E,R[3548],1,N],[13,R[3549],E,R[3550],1,N],[13,R[1964],E,R[3551],1,N],[13,R[3552],E,R[3553],1,N],[13,"Last",E,R[3554],1,N],[13,R[3555],E,R[3556],1,N],[13,R[1992],E,R[3557],1,N],[13,R[3558],E,R[3559],1,N],[13,R[3560],E,R[3561],1,N],[13,R[3562],E,R[3563],1,N],[4,R[1991],E,R[3574],N,N],[13,R[3575],E,R[3576],2,N],[13,R[3577],E,R[3578],2,N],[13,R[1964],E,R[3579],2,N],[13,R[3580],E,R[3581],2,N],[13,R[3582],E,R[3583],2,N],[13,R[3584],E,R[3585],2,N],[13,R[3586],E,R[3587],2,N],[13,R[3588],E,R[3589],2,N],[13,R[3590],E,R[3591],2,N],[13,"ColorAuto",E,R[3592],2,N],[13,R[3593],E,R[3594],2,N],[13,"ColorNever",E,R[3595],2,N],[13,R[3596],E,R[3597],2,N],[13,R[3598],E,R[3599],2,N],[13,R[3600],E,R[3601],2,N],[13,R[3602],E,R[3603],2,N],[13,R[3604],E,R[3605],2,N],[13,R[3606],E,R[3607],2,N],[13,R[3608],E,R[3609],2,N],[13,"Hidden",E,R[3610],2,N],[13,R[3611],E,R[3612],2,N],[13,R[3613],E,R[3614],2,N],[13,R[3615],E,R[3616],2,N],[13,R[1965],E,R[3617],2,N],[13,R[3618],E,R[3619],2,N],[13,R[3620],E,R[3621],2,N],[13,R[3622],E,R[3623],2,N],[13,"StrictUtf8",E,R[3624],2,N],[13,R[3625],E,R[3626],2,N],[13,R[3627],E,R[3628],2,N],[13,R[3629],E,R[3630],2,N],[13,R[3631],E,R[3632],2,N],[13,R[3633],E,R[3634],2,N],[4,R[372],E,R[3636],N,N],[13,R[3637],E,R[3638],3,N],[13,R[3639],E,R[3640],3,N],[13,R[3641],E,R[1966],3,N],[13,R[3642],E,R[1966],3,N],[13,"EmptyValue",E,R[3643],3,N],[13,R[3644],E,R[3645],3,N],[13,R[3646],E,R[3647],3,N],[13,R[3648],E,R[3649],3,N],[13,R[3650],E,R[3651],3,N],[13,R[3652],E,R[3653],3,N],[13,R[3654],E,R[3655],3,N],[13,R[3656],E,R[3657],3,N],[13,R[3658],E,R[3659],3,N],[13,R[3660],E,R[3661],3,N],[13,R[1552],E,R[3662],3,N],[13,R[3663],E,R[3664],3,N],[13,R[3665],E,R[3666],3,N],[13,R[3667],E,R[3668],3,N],[13,"Io",E,R[3669],3,N],[13,"Format",E,R[3670],3,N],[4,"Shell",E,R[3526],N,N],[13,"Bash",E,R[3527],4,N],[13,"Fish",E,R[3528],4,N],[13,"Zsh",E,R[3529],4,N],[13,"PowerShell",E,R[3530],4,N],[13,"Elvish",E,R[3531],4,N],[11,"new",E,R[3674],5,[[["string"],["into",["string"]]],["self"]]],[11,R[5661],E,R[3675],5,[[["self"]],["str"]]],[11,R[3676],E,R[3677],5,[[["self"]],[["str"],[R[23],["str"]]]]],[11,R[3678],E,R[3679],5,[[["string"],["into",["string"]]],["self"]]],[11,"author",E,R[3680],5,[[["str"],["into",["str"]]],["self"]]],[11,"bin_name",E,R[3681],5,[[["string"],["into",["string"]]],["self"]]],[11,"about",E,R[1967],5,[[["str"],["into",["str"]]],["self"]]],[11,"long_about",E,R[1967],5,[[["str"],["into",["str"]]],["self"]]],[11,"name",E,R[3682],5,[[["string"],["into",["string"]]],["self"]]],[11,"after_help",E,R[1968],5,[[["str"],["into",["str"]]],["self"]]],[11,R[3683],E,R[1968],5,[[["str"],["into",["str"]]],["self"]]],[11,"version",E,R[1969],5,[[["str"],["into",["str"]]],["self"]]],[11,R[3684],E,R[1969],5,[[["str"],["into",["str"]]],["self"]]],[11,"usage",E,R[3685],5,[[["str"],["into",["str"]]],["self"]]],[11,"help",E,R[3686],5,[[["str"],["into",["str"]]],["self"]]],[11,"help_short",E,R[3687],5,[[["str"],["asref",["str"]]],["self"]]],[11,R[3688],E,R[3689],5,[[["str"],["asref",["str"]]],["self"]]],[11,R[3690],E,R[3691],5,[[["into",["str"]],["str"]],["self"]]],[11,R[3692],E,R[3693],5,[[["into",["str"]],["str"]],["self"]]],[11,"template",E,R[3694],5,[[["str"],["into",["str"]]],["self"]]],[11,"setting",E,R[3695],5,[[[R[1970]]],["self"]]],[11,"settings",E,R[3696],5,[[],["self"]]],[11,R[3697],E,R[3698],5,[[[R[1970]]],["self"]]],[11,R[3699],E,R[3700],5,[[],["self"]]],[11,R[3701],E,R[3702],5,[[[R[1970]]],["self"]]],[11,R[3703],E,R[3704],5,[[],["self"]]],[11,R[3705],E,R[3706],5,[[["usize"]],["self"]]],[11,R[3707],E,R[3708],5,[[["usize"]],["self"]]],[11,"arg",E,R[3709],5,[[["arg"],["into",["arg"]]],["self"]]],[11,"args",E,R[3710],5,[[],["self"]]],[11,R[3711],E,R[3712],5,[[["str"]],["self"]]],[11,R[3713],E,R[3714],5,[[["str"]],["self"]]],[11,"alias",E,R[3715],5,[[["str"],["into",["str"]]],["self"]]],[11,"aliases",E,R[3716],5,[[],["self"]]],[11,R[1977],E,R[3717],5,[[["str"],["into",["str"]]],["self"]]],[11,R[1978],E,R[3718],5,[[],["self"]]],[11,"group",E,R[3719],5,[[[R[3673]]],["self"]]],[11,"groups",E,R[3720],5,[[],["self"]]],[11,R[1989],E,R[3721],5,[[["app"]],["self"]]],[11,R[3722],E,R[3723],5,[[["i"]],["self"]]],[11,R[1980],E,R[3724],5,[[["usize"]],["self"]]],[11,"print_help",E,R[1971],5,[[["self"]],[R[1972]]]],[11,R[3725],E,R[1971],5,[[["self"]],[R[1972]]]],[11,"write_help",E,R[1973],5,[[["self"],["w"]],[R[1972]]]],[11,R[3726],E,R[1973],5,[[["self"],["w"]],[R[1972]]]],[11,R[3727],E,R[1974],5,[[["self"],["w"]],[R[1972]]]],[11,R[3728],E,R[1974],5,[[["self"],["w"]],[R[1972]]]],[11,R[3729],E,R[1975],5,[[["self"],["into",["osstring"]],["string"],["osstring"],["shell"],["into",["string"]]]]],[11,R[3730],E,R[1975],5,[[["self"],["string"],["shell"],["w"],["into",["string"]]]]],[11,R[3731],E,R[3732],5,[[],[R[1976]]]],[11,R[3733],E,R[3734],5,[[],[[R[1972],[R[1976]]],[R[1976]]]]],[11,R[3735],E,R[3736],5,[[["i"]],[R[1976]]]],[11,R[3737],E,R[3738],5,[[["i"]],[[R[1972],[R[1976]]],[R[1976]]]]],[11,R[3739],E,R[3740],5,[[["self"],["i"]],[[R[1972],[R[1976]]],[R[1976]]]]],[11,R[3745],E,R[3746],6,[[["str"]],["self"]]],[11,"from_usage",E,R[3747],6,[[["str"]],["self"]]],[11,"short",E,R[3748],6,[[["str"],["asref",["str"]]],["self"]]],[11,"long",E,R[3749],6,[[["str"]],["self"]]],[11,"alias",E,R[3750],6,[[["str"],["into",["str"]]],["self"]]],[11,"aliases",E,R[3751],6,[[],["self"]]],[11,R[1977],E,R[3752],6,[[["str"],["into",["str"]]],["self"]]],[11,R[1978],E,R[3753],6,[[],["self"]]],[11,"help",E,R[3754],6,[[["str"]],["self"]]],[11,"long_help",E,R[3755],6,[[["str"]],["self"]]],[11,"last",E,R[3756],6,[[["bool"]],["self"]]],[11,"required",E,R[3757],6,[[["bool"]],["self"]]],[11,R[3758],E,R[3759],6,[[["bool"]],["self"]]],[11,R[3760],E,R[3761],6,[[["bool"]],["self"]]],[11,R[3762],E,R[3763],6,[[["str"]],["self"]]],[11,R[3764],E,R[3765],6,[[],["self"]]],[11,R[3766],E,R[3767],6,[[],["self"]]],[11,R[1985],E,R[3768],6,[[["str"]],["self"]]],[11,R[1986],E,R[3769],6,[[],["self"]]],[11,R[3770],E,R[3771],6,[[["str"]],["self"]]],[11,R[3772],E,R[3773],6,[[],["self"]]],[11,"requires",E,R[3774],6,[[["str"]],["self"]]],[11,R[3775],E,R[3776],6,[[["str"],["str"]],["self"]]],[11,R[3777],E,R[3778],6,[[],["self"]]],[11,R[3779],E,R[3780],6,[[["str"],["str"]],["self"]]],[11,R[3781],E,R[3782],6,[[],["self"]]],[11,R[1983],E,R[3783],6,[[],["self"]]],[11,R[3784],E,R[3785],6,[[["bool"]],["self"]]],[11,R[3786],E,R[3787],6,[[["bool"]],["self"]]],[11,R[3788],E,R[3789],6,[[["bool"]],["self"]]],[11,"index",E,R[3790],6,[[["u64"]],["self"]]],[11,"multiple",E,R[3791],6,[[["bool"]],["self"]]],[11,R[3792],E,R[3793],6,[[["str"]],["self"]]],[11,"global",E,R[3794],6,[[["bool"]],["self"]]],[11,R[3795],E,R[3796],6,[[["bool"]],["self"]]],[11,"hidden",E,R[3797],6,[[["bool"]],["self"]]],[11,R[3798],E,R[3799],6,[[],["self"]]],[11,R[3800],E,R[3801],6,[[["str"]],["self"]]],[11,R[435],E,R[3802],6,[[["bool"]],["self"]]],[11,"group",E,R[3803],6,[[["str"]],["self"]]],[11,"groups",E,R[3804],6,[[],["self"]]],[11,R[3805],E,R[3806],6,[[["u64"]],["self"]]],[11,"validator",E,R[3807],6,[[["f"]],["self"]]],[11,R[3808],E,R[3809],6,[[["f"]],["self"]]],[11,"max_values",E,R[3810],6,[[["u64"]],["self"]]],[11,"min_values",E,R[3811],6,[[["u64"]],["self"]]],[11,R[3812],E,R[3813],6,[[["bool"]],["self"]]],[11,R[3814],E,R[3815],6,[[["bool"]],["self"]]],[11,R[3816],E,R[3817],6,[[["str"]],["self"]]],[11,R[3818],E,R[3819],6,[[],["self"]]],[11,"value_name",E,R[3820],6,[[["str"]],["self"]]],[11,R[3821],E,R[3822],6,[[["str"]],["self"]]],[11,R[3823],E,R[3824],6,[[["osstr"]],["self"]]],[11,R[3825],E,R[3826],6,[[[R[23],["str"]],["str"],["str"]],["self"]]],[11,R[3827],E,R[3828],6,[[[R[23],["osstr"]],["str"],["osstr"]],["self"]]],[11,R[3829],E,R[3830],6,[[],["self"]]],[11,R[3831],E,R[3832],6,[[],["self"]]],[11,"env",E,R[1979],6,[[["str"]],["self"]]],[11,"env_os",E,R[1979],6,[[["osstr"]],["self"]]],[11,R[3833],E,R[3834],6,[[["bool"]],["self"]]],[11,R[3835],E,R[3836],6,[[["bool"]],["self"]]],[11,R[1980],E,R[3837],6,[[["usize"]],["self"]]],[11,"raw",E,R[3838],6,[[["bool"]],["self"]]],[11,R[3839],E,R[3840],6,[[["bool"]],["self"]]],[11,R[3841],E,R[3842],6,[[["bool"]],["self"]]],[11,"is_set",E,R[3843],6,[[["self"],[R[1981]]],["bool"]]],[11,"set",E,R[3844],6,[[[R[1981]]],["self"]]],[11,"unset",E,R[3845],6,[[[R[1981]]],["self"]]],[11,"value_of",E,R[3848],7,[[["self"],["str"],["asref",["str"]]],[["str"],[R[23],["str"]]]]],[11,R[3849],E,R[3850],7,[[["str"],["self"],["asref",["str"]]],[["cow",["str"]],[R[23],["cow"]]]]],[11,R[3851],E,R[3852],7,[[["self"],["str"],["asref",["str"]]],[["osstr"],[R[23],["osstr"]]]]],[11,"values_of",E,R[3853],7,[[["str"],["self"],["asref",["str"]]],[[R[23],["values"]],["values"]]]],[11,R[3854],E,R[3855],7,[[["str"],["self"],["asref",["str"]]],[["vec",["string"]],[R[23],["vec"]]]]],[11,R[3856],E,R[3857],7,[[["str"],["self"],["asref",["str"]]],[[R[23],[R[3858]]],[R[3858]]]]],[11,"is_present",E,R[3859],7,[[["self"],["str"],["asref",["str"]]],["bool"]]],[11,R[3860],E,R[3861],7,[[["self"],["str"],["asref",["str"]]],["u64"]]],[11,"index_of",E,R[3862],7,[[["self"],["str"],["asref",["str"]]],[[R[23],["usize"]],["usize"]]]],[11,"indices_of",E,R[3863],7,[[["str"],["self"],["asref",["str"]]],[[R[23],["indices"]],["indices"]]]],[11,R[3864],E,R[1982],7,[[["self"],["str"],["asref",["str"]]],[[R[23],[R[1976]]],[R[1976]]]]],[11,R[3865],E,R[1982],7,[[["self"]],[["str"],[R[23],["str"]]]]],[11,R[1989],E,R[3866],7,[[["self"]]]],[11,"usage",E,R[3867],7,[[["self"]],["str"]]],[11,R[3745],E,R[3847],8,[[["str"]],["app"]]],[11,R[3745],E,R[3868],9,[[["str"]],["self"]]],[11,"arg",E,R[3869],9,[[["str"]],["self"]]],[11,"args",E,R[3870],9,[[],["self"]]],[11,"multiple",E,R[3871],9,[[["bool"]],["self"]]],[11,"required",E,R[3872],9,[[["bool"]],["self"]]],[11,"requires",E,R[1984],9,[[["str"]],["self"]]],[11,R[1983],E,R[1984],9,[[],["self"]]],[11,R[1985],E,R[3873],9,[[["str"]],["self"]]],[11,R[1986],E,R[3874],9,[[],["self"]]],[11,"use_stderr",E,R[3741],0,[[["self"]],["bool"]]],[11,"exit",E,R[3742],0,[[["self"]]]],[11,R[3743],E,R[3744],0,[[[R[401]],["str"]],["self"]]],[11,"variants",E,R[3846],4,[[]]],[6,"Result",E,R[3525],N,N],[14,"value_t",E,R[1987],N,N],[14,R[3564],E,R[1987],N,N],[14,"values_t",E,R[1988],N,N],[14,R[3533],E,R[1988],N,N],[14,R[3565],E,R[3566],N,N],[14,"arg_enum",E,R[3573],N,N],[14,R[3516],E,R[3517],N,N],[14,R[3534],E,R[3535],N,N],[14,R[3518],E,R[3519],N,N],[14,"crate_name",E,R[3532],N,N],[14,R[3567],E,R[3568],N,N],[14,"clap_app",E,R[3514],N,N],[11,"into",E,E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[46],E,E,6,[[["self"]],[T]]],[11,R[47],E,E,6,[[["self"],[T]]]],[11,R[4],E,E,6,[[[U]],[R[3]]]],[11,R[5],E,E,6,[[],[R[3]]]],[11,R[7],E,E,6,[[["self"]],[T]]],[11,R[6],E,E,6,[[["self"]],[T]]],[11,R[8],E,E,6,[[["self"]],[R[9]]]],[11,"into",E,E,9,[[],[U]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[46],E,E,9,[[["self"]],[T]]],[11,R[47],E,E,9,[[["self"],[T]]]],[11,R[4],E,E,9,[[[U]],[R[3]]]],[11,R[5],E,E,9,[[],[R[3]]]],[11,R[7],E,E,9,[[["self"]],[T]]],[11,R[6],E,E,9,[[["self"]],[T]]],[11,R[8],E,E,9,[[["self"]],[R[9]]]],[11,"into",E,E,7,[[],[U]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[46],E,E,7,[[["self"]],[T]]],[11,R[47],E,E,7,[[["self"],[T]]]],[11,R[4],E,E,7,[[[U]],[R[3]]]],[11,R[5],E,E,7,[[],[R[3]]]],[11,R[7],E,E,7,[[["self"]],[T]]],[11,R[6],E,E,7,[[["self"]],[T]]],[11,R[8],E,E,7,[[["self"]],[R[9]]]],[11,"into",E,E,10,[[],[U]]],[11,R[45],E,E,10,[[],["i"]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[46],E,E,10,[[["self"]],[T]]],[11,R[47],E,E,10,[[["self"],[T]]]],[11,R[4],E,E,10,[[[U]],[R[3]]]],[11,R[5],E,E,10,[[],[R[3]]]],[11,R[7],E,E,10,[[["self"]],[T]]],[11,R[6],E,E,10,[[["self"]],[T]]],[11,R[8],E,E,10,[[["self"]],[R[9]]]],[11,"into",E,E,8,[[],[U]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[46],E,E,8,[[["self"]],[T]]],[11,R[47],E,E,8,[[["self"],[T]]]],[11,R[4],E,E,8,[[[U]],[R[3]]]],[11,R[5],E,E,8,[[],[R[3]]]],[11,R[7],E,E,8,[[["self"]],[T]]],[11,R[6],E,E,8,[[["self"]],[T]]],[11,R[8],E,E,8,[[["self"]],[R[9]]]],[11,"into",E,E,11,[[],[U]]],[11,R[45],E,E,11,[[],["i"]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[46],E,E,11,[[["self"]],[T]]],[11,R[47],E,E,11,[[["self"],[T]]]],[11,R[4],E,E,11,[[[U]],[R[3]]]],[11,R[5],E,E,11,[[],[R[3]]]],[11,R[7],E,E,11,[[["self"]],[T]]],[11,R[6],E,E,11,[[["self"]],[T]]],[11,R[8],E,E,11,[[["self"]],[R[9]]]],[11,"into",E,E,5,[[],[U]]],[11,R[113],E,E,5,[[["self"]],["string"]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[46],E,E,5,[[["self"]],[T]]],[11,R[47],E,E,5,[[["self"],[T]]]],[11,R[4],E,E,5,[[[U]],[R[3]]]],[11,R[5],E,E,5,[[],[R[3]]]],[11,R[7],E,E,5,[[["self"]],[T]]],[11,R[6],E,E,5,[[["self"]],[T]]],[11,R[8],E,E,5,[[["self"]],[R[9]]]],[11,"into",E,E,0,[[],[U]]],[11,R[113],E,E,0,[[["self"]],["string"]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[4],E,E,0,[[[U]],[R[3]]]],[11,R[5],E,E,0,[[],[R[3]]]],[11,R[7],E,E,0,[[["self"]],[T]]],[11,R[6],E,E,0,[[["self"]],[T]]],[11,R[8],E,E,0,[[["self"]],[R[9]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[46],E,E,1,[[["self"]],[T]]],[11,R[47],E,E,1,[[["self"],[T]]]],[11,R[4],E,E,1,[[[U]],[R[3]]]],[11,R[5],E,E,1,[[],[R[3]]]],[11,R[7],E,E,1,[[["self"]],[T]]],[11,R[6],E,E,1,[[["self"]],[T]]],[11,R[8],E,E,1,[[["self"]],[R[9]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[46],E,E,2,[[["self"]],[T]]],[11,R[47],E,E,2,[[["self"],[T]]]],[11,R[4],E,E,2,[[[U]],[R[3]]]],[11,R[5],E,E,2,[[],[R[3]]]],[11,R[7],E,E,2,[[["self"]],[T]]],[11,R[6],E,E,2,[[["self"]],[T]]],[11,R[8],E,E,2,[[["self"]],[R[9]]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[46],E,E,3,[[["self"]],[T]]],[11,R[47],E,E,3,[[["self"],[T]]]],[11,R[4],E,E,3,[[[U]],[R[3]]]],[11,R[5],E,E,3,[[],[R[3]]]],[11,R[7],E,E,3,[[["self"]],[T]]],[11,R[6],E,E,3,[[["self"]],[T]]],[11,R[8],E,E,3,[[["self"]],[R[9]]]],[11,"into",E,E,4,[[],[U]]],[11,R[113],E,E,4,[[["self"]],["string"]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[46],E,E,4,[[["self"]],[T]]],[11,R[47],E,E,4,[[["self"],[T]]]],[11,R[4],E,E,4,[[[U]],[R[3]]]],[11,R[5],E,E,4,[[],[R[3]]]],[11,R[7],E,E,4,[[["self"]],[T]]],[11,R[6],E,E,4,[[["self"]],[T]]],[11,R[8],E,E,4,[[["self"]],[R[9]]]],[11,R[83],E,E,6,[[],["arg"]]],[11,R[83],E,E,7,[[],["self"]]],[11,R[83],E,E,11,[[],["self"]]],[11,R[83],E,E,10,[[],["self"]]],[11,R[83],E,E,9,[[],[R[3673]]]],[11,"clone",E,E,2,[[["self"]],[R[1970]]]],[11,"clone",E,E,5,[[["self"]],["self"]]],[11,"clone",E,E,6,[[["self"]],["arg"]]],[11,"clone",E,E,7,[[["self"]],[R[1976]]]],[11,"clone",E,E,11,[[["self"]],["values"]]],[11,"clone",E,E,10,[[["self"]],[R[3858]]]],[11,"clone",E,E,8,[[["self"]],[R[1989]]]],[11,"clone",E,E,9,[[["self"]],["self"]]],[11,"clone",E,E,1,[[["self"]],[R[1981]]]],[11,"clone",E,E,3,[[["self"]],[R[401]]]],[11,"clone",E,E,4,[[["self"]],["shell"]]],[11,"eq",E,E,2,[[["self"],[R[1970]]],["bool"]]],[11,"eq",E,E,6,[[["self"],["arg"]],["bool"]]],[11,"eq",E,E,1,[[["self"],[R[1981]]],["bool"]]],[11,"eq",E,E,3,[[["self"],[R[401]]],["bool"]]],[11,R[52],E,E,11,[[["self"]],[[R[23],["str"]],["str"]]]],[11,R[52],E,E,10,[[["self"]],[["osstr"],[R[23],["osstr"]]]]],[11,"from",E,E,6,[[["arg"]],["self"]]],[11,"from",E,E,9,[[[R[3673]]],["self"]]],[11,"from",E,E,0,[[["error"]],["self"]]],[11,"from",E,E,0,[[["error"]],["self"]]],[11,"next",E,E,11,[[["self"]],[[R[23],["str"]],["str"]]]],[11,R[53],E,E,11,[[["self"]]]],[11,"next",E,E,10,[[["self"]],[["osstr"],[R[23],["osstr"]]]]],[11,R[53],E,E,10,[[["self"]]]],[11,"fmt",E,E,2,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,7,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,11,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,10,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,8,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,9,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,1,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,3,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,0,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,4,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,5,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,0,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,4,[[["self"],[R[10]]],[R[3]]]],[11,R[775],E,E,2,[[["str"]],[R[3]]]],[11,R[775],E,E,1,[[["str"]],[R[3]]]],[11,R[775],E,E,4,[[["str"]],[R[3]]]],[11,R[157],E,E,0,[[["self"]],["str"]]]],"p":[[3,"Error"],[4,R[1990]],[4,R[1991]],[4,R[372]],[4,"Shell"],[3,"App"],[3,"Arg"],[3,R[3571]],[3,R[3569]],[3,"ArgGroup"],[3,"OsValues"],[3,"Values"]]};
searchIndex["colored"]={"doc":"Coloring terminal so simple, you already know how to do it !","i":[[3,R[3329],"colored","A string that may have color and/or style applied to it.",N,N],[4,"Color",E,"The 8 standard colors.",N,N],[13,"Black",E,E,0,N],[13,"Red",E,E,0,N],[13,"Green",E,E,0,N],[13,"Yellow",E,E,0,N],[13,"Blue",E,E,0,N],[13,"Magenta",E,E,0,N],[13,"Cyan",E,E,0,N],[13,"White",E,E,0,N],[13,"BrightBlack",E,E,0,N],[13,"BrightRed",E,E,0,N],[13,"BrightGreen",E,E,0,N],[13,"BrightYellow",E,E,0,N],[13,"BrightBlue",E,E,0,N],[13,"BrightMagenta",E,E,0,N],[13,"BrightCyan",E,E,0,N],[13,"BrightWhite",E,E,0,N],[11,"to_fg_str",E,E,0,[[["self"]],["str"]]],[11,"to_bg_str",E,E,0,[[["self"]],["str"]]],[0,"control",E,"A couple of functions to enable and disable coloring.",N,N],[3,R[3328],R[3309],E,N,N],[3,R[3330],E,E,N,N],[5,R[3306],E,"Use this to force colored to ignore the environment and…",N,[[["bool"]]]],[5,R[3307],E,"Remove the manual override and let the environment decide…",N,[[]]],[11,"from_env",E,"Reads environment variables to determine whether…",1,[[],["self"]]],[11,"should_colorize",E,E,1,[[["self"]],["bool"]]],[11,R[3306],E,E,1,[[["self"],["bool"]]]],[11,R[3307],E,E,1,[[["self"]]]],[8,"Colorize","colored","The trait that enables something to be given color.",N,N],[10,"black",E,E,2,[[],[R[3308]]]],[10,"red",E,E,2,[[],[R[3308]]]],[10,"green",E,E,2,[[],[R[3308]]]],[10,"yellow",E,E,2,[[],[R[3308]]]],[10,"blue",E,E,2,[[],[R[3308]]]],[10,"magenta",E,E,2,[[],[R[3308]]]],[10,"purple",E,E,2,[[],[R[3308]]]],[10,"cyan",E,E,2,[[],[R[3308]]]],[10,"white",E,E,2,[[],[R[3308]]]],[10,R[3310],E,E,2,[[],[R[3308]]]],[10,"bright_red",E,E,2,[[],[R[3308]]]],[10,R[3311],E,E,2,[[],[R[3308]]]],[10,R[3312],E,E,2,[[],[R[3308]]]],[10,R[3313],E,E,2,[[],[R[3308]]]],[10,R[3314],E,E,2,[[],[R[3308]]]],[10,R[3315],E,E,2,[[],[R[3308]]]],[10,R[3316],E,E,2,[[],[R[3308]]]],[10,R[3317],E,E,2,[[],[R[3308]]]],[10,"color",E,E,2,[[["into",["color"]],["color"]],[R[3308]]]],[10,"on_black",E,E,2,[[],[R[3308]]]],[10,"on_red",E,E,2,[[],[R[3308]]]],[10,"on_green",E,E,2,[[],[R[3308]]]],[10,"on_yellow",E,E,2,[[],[R[3308]]]],[10,"on_blue",E,E,2,[[],[R[3308]]]],[10,"on_magenta",E,E,2,[[],[R[3308]]]],[10,"on_purple",E,E,2,[[],[R[3308]]]],[10,"on_cyan",E,E,2,[[],[R[3308]]]],[10,"on_white",E,E,2,[[],[R[3308]]]],[10,R[3318],E,E,2,[[],[R[3308]]]],[10,R[3319],E,E,2,[[],[R[3308]]]],[10,R[3320],E,E,2,[[],[R[3308]]]],[10,R[3321],E,E,2,[[],[R[3308]]]],[10,R[3322],E,E,2,[[],[R[3308]]]],[10,R[3323],E,E,2,[[],[R[3308]]]],[10,R[3324],E,E,2,[[],[R[3308]]]],[10,R[3325],E,E,2,[[],[R[3308]]]],[10,R[3326],E,E,2,[[],[R[3308]]]],[10,"on_color",E,E,2,[[["into",["color"]],["color"]],[R[3308]]]],[10,"clear",E,E,2,[[],[R[3308]]]],[10,"normal",E,E,2,[[],[R[3308]]]],[10,"bold",E,E,2,[[],[R[3308]]]],[10,"dimmed",E,E,2,[[],[R[3308]]]],[10,"italic",E,E,2,[[],[R[3308]]]],[10,R[332],E,E,2,[[],[R[3308]]]],[10,"blink",E,E,2,[[],[R[3308]]]],[10,"reverse",E,"Historical name of `Colorize::reversed`. May be removed in…",2,[[],[R[3308]]]],[10,"reversed",E,"This should be preferred to `Colorize::reverse`.",2,[[],[R[3308]]]],[10,"hidden",E,E,2,[[],[R[3308]]]],[10,R[336],E,E,2,[[],[R[3308]]]],[11,"is_plain",E,E,3,[[["self"]],["bool"]]],[11,"into",E,E,3,[[],[U]]],[11,R[113],E,E,3,[[["self"]],["string"]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[46],E,E,3,[[["self"]],[T]]],[11,R[47],E,E,3,[[["self"],[T]]]],[11,R[4],E,E,3,[[[U]],[R[3]]]],[11,R[5],E,E,3,[[],[R[3]]]],[11,R[7],E,E,3,[[["self"]],[T]]],[11,R[6],E,E,3,[[["self"]],[T]]],[11,R[8],E,E,3,[[["self"]],[R[9]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[46],E,E,0,[[["self"]],[T]]],[11,R[47],E,E,0,[[["self"],[T]]]],[11,R[4],E,E,0,[[[U]],[R[3]]]],[11,R[5],E,E,0,[[],[R[3]]]],[11,R[7],E,E,0,[[["self"]],[T]]],[11,R[6],E,E,0,[[["self"]],[T]]],[11,R[8],E,E,0,[[["self"]],[R[9]]]],[11,"into",R[3309],E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[4],E,E,1,[[[U]],[R[3]]]],[11,R[5],E,E,1,[[],[R[3]]]],[11,R[7],E,E,1,[[["self"]],[T]]],[11,R[6],E,E,1,[[["self"]],[T]]],[11,R[8],E,E,1,[[["self"]],[R[9]]]],[11,"into",E,E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[4],E,E,4,[[[U]],[R[3]]]],[11,R[5],E,E,4,[[],[R[3]]]],[11,R[7],E,E,4,[[["self"]],[T]]],[11,R[6],E,E,4,[[["self"]],[T]]],[11,R[8],E,E,4,[[["self"]],[R[9]]]],[11,"black","colored",E,3,[[],[R[3308]]]],[11,"red",E,E,3,[[],[R[3308]]]],[11,"green",E,E,3,[[],[R[3308]]]],[11,"yellow",E,E,3,[[],[R[3308]]]],[11,"blue",E,E,3,[[],[R[3308]]]],[11,"magenta",E,E,3,[[],[R[3308]]]],[11,"purple",E,E,3,[[],[R[3308]]]],[11,"cyan",E,E,3,[[],[R[3308]]]],[11,"white",E,E,3,[[],[R[3308]]]],[11,R[3310],E,E,3,[[],[R[3308]]]],[11,"bright_red",E,E,3,[[],[R[3308]]]],[11,R[3311],E,E,3,[[],[R[3308]]]],[11,R[3312],E,E,3,[[],[R[3308]]]],[11,R[3313],E,E,3,[[],[R[3308]]]],[11,R[3314],E,E,3,[[],[R[3308]]]],[11,R[3315],E,E,3,[[],[R[3308]]]],[11,R[3316],E,E,3,[[],[R[3308]]]],[11,R[3317],E,E,3,[[],[R[3308]]]],[11,"color",E,E,3,[[["into",["color"]],["color"]],[R[3308]]]],[11,"on_black",E,E,3,[[],[R[3308]]]],[11,"on_red",E,E,3,[[],[R[3308]]]],[11,"on_green",E,E,3,[[],[R[3308]]]],[11,"on_yellow",E,E,3,[[],[R[3308]]]],[11,"on_blue",E,E,3,[[],[R[3308]]]],[11,"on_magenta",E,E,3,[[],[R[3308]]]],[11,"on_purple",E,E,3,[[],[R[3308]]]],[11,"on_cyan",E,E,3,[[],[R[3308]]]],[11,"on_white",E,E,3,[[],[R[3308]]]],[11,R[3318],E,E,3,[[],[R[3308]]]],[11,R[3319],E,E,3,[[],[R[3308]]]],[11,R[3320],E,E,3,[[],[R[3308]]]],[11,R[3321],E,E,3,[[],[R[3308]]]],[11,R[3322],E,E,3,[[],[R[3308]]]],[11,R[3323],E,E,3,[[],[R[3308]]]],[11,R[3324],E,E,3,[[],[R[3308]]]],[11,R[3325],E,E,3,[[],[R[3308]]]],[11,R[3326],E,E,3,[[],[R[3308]]]],[11,"on_color",E,E,3,[[["into",["color"]],["color"]],[R[3308]]]],[11,"clear",E,E,3,[[],[R[3308]]]],[11,"normal",E,E,3,[[],[R[3308]]]],[11,"bold",E,E,3,[[],[R[3308]]]],[11,"dimmed",E,E,3,[[],[R[3308]]]],[11,"italic",E,E,3,[[],[R[3308]]]],[11,R[332],E,E,3,[[],[R[3308]]]],[11,"blink",E,E,3,[[],[R[3308]]]],[11,"reverse",E,E,3,[[],[R[3308]]]],[11,"reversed",E,E,3,[[],[R[3308]]]],[11,"hidden",E,E,3,[[],[R[3308]]]],[11,R[336],E,E,3,[[],[R[3308]]]],[11,R[83],R[3309],E,1,[[],[R[3327]]]],[11,R[83],"colored",E,3,[[],["self"]]],[11,"clone",E,E,0,[[["self"]],["color"]]],[11,"clone",E,E,3,[[["self"]],[R[3308]]]],[11,"eq",E,E,0,[[["self"],["color"]],["bool"]]],[11,"eq",E,E,3,[[["self"],[R[3308]]],["bool"]]],[11,"ne",E,E,3,[[["self"],[R[3308]]],["bool"]]],[11,"from",E,E,0,[[["str"]],["self"]]],[11,"from",E,E,0,[[["string"]],["self"]]],[11,"from",E,E,3,[[["str"]],["self"]]],[11,"deref",R[3309],E,4,[[["self"]],[R[3327]]]],[11,"deref","colored",E,3,[[["self"]],["str"]]],[11,"fmt",E,E,0,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,3,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,3,[[["self"],[R[10]]],[R[3]]]],[11,R[775],E,E,0,[[["str"]],[R[3]]]],[11,R[3331],R[3309],E,4,[[["self"]]]]],"p":[[4,"Color"],[3,R[3328]],[8,"Colorize"],[3,R[3329]],[3,R[3330]]]};
searchIndex["constant_time_eq"]={"doc":E,"i":[[5,R[126],R[126],"Compares two equal-sized byte strings in constant time.",N,[[],["bool"]]]],"p":[]};
searchIndex["cranelift_bforest"]={"doc":"A forest of B+-trees.","i":[[3,"Map","cranelift_bforest","B-tree mapping from `K` to `V`.",N,N],[3,R[703],E,"A position in a `Map` used to navigate and modify the…",N,N],[3,R[702],E,"Memory pool for a forest of `Map` instances.",N,N],[3,"MapIter",E,"An iterator visiting the key-value pairs of a `Map`.",N,N],[3,"Set",E,"B-tree representing an ordered set of `K`s using `C` for…",N,N],[3,R[705],E,"A position in a `Set` used to navigate and modify the…",N,N],[3,R[704],E,"Memory pool for a forest of `Set` instances.",N,N],[3,"SetIter",E,"An iterator visiting the elements of a `Set`.",N,N],[11,"new",E,R[696],0,[[],["self"]]],[11,"clear",E,"Clear all maps in the forest.",0,[[["self"]]]],[11,"new",E,"Make an empty map.",1,[[],["self"]]],[11,R[25],E,"Is this an empty map?",1,[[["self"]],["bool"]]],[11,"get",E,"Get the value stored for `key`.",1,[[["self"],["c"],["k"],[R[695]]],[R[23]]]],[11,"get_or_less",E,"Look up the value stored for `key`.",1,[[["self"],["c"],["k"],[R[695]]],[R[23]]]],[11,"insert",E,"Insert `key, value` into the map and return the old value…",1,[[["self"],["c"],[R[695]],["k"],["v"]],[R[23]]]],[11,"remove",E,"Remove `key` from the map and return the removed value for…",1,[[["self"],[R[695]],["k"],["c"]],[R[23]]]],[11,"clear",E,R[698],1,[[["self"],[R[695]]]]],[11,"retain",E,R[313],1,[[["self"],[R[695]],["f"]]]],[11,"cursor",E,"Create a cursor for navigating this map. The cursor is…",1,[[[R[695]],["self"],["c"]],[[R[699]],["mapcursor"]]]],[11,"iter",E,"Create an iterator traversing this map. The iterator type…",1,[[[R[695]],["self"]],["mapiter"]]],[11,R[25],E,"Is this cursor pointing to an empty map?",2,[[["self"]],["bool"]]],[11,"next",E,"Move cursor to the next key-value pair and return it.",2,[[["self"]],[R[23]]]],[11,"prev",E,"Move cursor to the previous key-value pair and return it.",2,[[["self"]],[R[23]]]],[11,"key",E,"Get the current key, or `None` if the cursor is at the end.",2,[[["self"]],[R[23]]]],[11,"value",E,"Get the current value, or `None` if the cursor is at the…",2,[[["self"]],[R[23]]]],[11,"value_mut",E,"Get a mutable reference to the current value, or `None` if…",2,[[["self"]],[[R[23]],["v"]]]],[11,"goto",E,"Move this cursor to `key`.",2,[[["self"],["k"]],[R[23]]]],[11,R[700],E,R[701],2,[[["self"]],[R[23]]]],[11,"insert",E,"Insert `(key, value))` into the map and leave the cursor…",2,[[["self"],["k"],["v"]],[R[23]]]],[11,"remove",E,"Remove the current entry (if any) and return the mapped…",2,[[["self"]],[R[23]]]],[11,"new",E,R[696],3,[[],["self"]]],[11,"clear",E,"Clear all sets in the forest.",3,[[["self"]]]],[11,"new",E,"Make an empty set.",4,[[],["self"]]],[11,R[25],E,"Is this an empty set?",4,[[["self"]],["bool"]]],[11,R[1285],E,"Does the set contain `key`?.",4,[[["self"],[R[697]],["k"],["c"]],["bool"]]],[11,"insert",E,"Try to insert `key` into the set.",4,[[["self"],[R[697]],["k"],["c"]],["bool"]]],[11,"remove",E,"Remove `key` from the set and return true.",4,[[["self"],[R[697]],["k"],["c"]],["bool"]]],[11,"clear",E,R[698],4,[[["self"],[R[697]]]]],[11,"retain",E,R[313],4,[[["self"],[R[697]],["f"]]]],[11,"cursor",E,"Create a cursor for navigating this set. The cursor is…",4,[[[R[697]],["self"],["c"]],[[R[699]],["setcursor"]]]],[11,"iter",E,"Create an iterator traversing this set. The iterator type…",4,[[[R[697]],["self"]],["setiter"]]],[11,R[25],E,"Is this cursor pointing to an empty set?",5,[[["self"]],["bool"]]],[11,"next",E,"Move cursor to the next element and return it.",5,[[["self"]],[R[23]]]],[11,"prev",E,"Move cursor to the previous element and return it.",5,[[["self"]],[R[23]]]],[11,"elem",E,"Get the current element, or `None` if the cursor is at the…",5,[[["self"]],[R[23]]]],[11,"goto",E,"Move this cursor to `elem`.",5,[[["self"],["k"]],["bool"]]],[11,R[700],E,R[701],5,[[["self"]],[R[23]]]],[11,"insert",E,"Try to insert `elem` into the set and leave the cursor at…",5,[[["self"],["k"]],["bool"]]],[11,"remove",E,"Remove the current element (if any) and return it. This…",5,[[["self"]],[R[23]]]],[8,R[706],E,"Key comparator.",N,N],[10,"cmp",E,"Compare keys `a` and `b`.",6,[[["self"],["k"]],[R[50]]]],[11,"search",E,"Binary search for `k` in an ordered slice.",6,[[["self"],["k"]],[[R[3],["usize","usize"]],["usize"]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[4],E,E,1,[[[U]],[R[3]]]],[11,"into",E,E,1,[[],[U]]],[11,R[5],E,E,1,[[],[R[3]]]],[11,R[6],E,E,1,[[["self"]],[T]]],[11,R[7],E,E,1,[[["self"]],[T]]],[11,R[8],E,E,1,[[["self"]],[R[9]]]],[11,R[46],E,E,1,[[["self"]],[T]]],[11,R[47],E,E,1,[[["self"],[T]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[4],E,E,2,[[[U]],[R[3]]]],[11,"into",E,E,2,[[],[U]]],[11,R[5],E,E,2,[[],[R[3]]]],[11,R[6],E,E,2,[[["self"]],[T]]],[11,R[7],E,E,2,[[["self"]],[T]]],[11,R[8],E,E,2,[[["self"]],[R[9]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[4],E,E,0,[[[U]],[R[3]]]],[11,"into",E,E,0,[[],[U]]],[11,R[5],E,E,0,[[],[R[3]]]],[11,R[6],E,E,0,[[["self"]],[T]]],[11,R[7],E,E,0,[[["self"]],[T]]],[11,R[8],E,E,0,[[["self"]],[R[9]]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[4],E,E,7,[[[U]],[R[3]]]],[11,R[45],E,E,7,[[],["i"]]],[11,"into",E,E,7,[[],[U]]],[11,R[5],E,E,7,[[],[R[3]]]],[11,R[6],E,E,7,[[["self"]],[T]]],[11,R[7],E,E,7,[[["self"]],[T]]],[11,R[8],E,E,7,[[["self"]],[R[9]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[4],E,E,4,[[[U]],[R[3]]]],[11,"into",E,E,4,[[],[U]]],[11,R[5],E,E,4,[[],[R[3]]]],[11,R[6],E,E,4,[[["self"]],[T]]],[11,R[7],E,E,4,[[["self"]],[T]]],[11,R[8],E,E,4,[[["self"]],[R[9]]]],[11,R[46],E,E,4,[[["self"]],[T]]],[11,R[47],E,E,4,[[["self"],[T]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[4],E,E,5,[[[U]],[R[3]]]],[11,"into",E,E,5,[[],[U]]],[11,R[5],E,E,5,[[],[R[3]]]],[11,R[6],E,E,5,[[["self"]],[T]]],[11,R[7],E,E,5,[[["self"]],[T]]],[11,R[8],E,E,5,[[["self"]],[R[9]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[4],E,E,3,[[[U]],[R[3]]]],[11,"into",E,E,3,[[],[U]]],[11,R[5],E,E,3,[[],[R[3]]]],[11,R[6],E,E,3,[[["self"]],[T]]],[11,R[7],E,E,3,[[["self"]],[T]]],[11,R[8],E,E,3,[[["self"]],[R[9]]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[4],E,E,8,[[[U]],[R[3]]]],[11,R[45],E,E,8,[[],["i"]]],[11,"into",E,E,8,[[],[U]]],[11,R[5],E,E,8,[[],[R[3]]]],[11,R[6],E,E,8,[[["self"]],[T]]],[11,R[7],E,E,8,[[["self"]],[T]]],[11,R[8],E,E,8,[[["self"]],[R[9]]]],[11,"next",E,E,7,[[["self"]],[R[23]]]],[11,"next",E,E,8,[[["self"]],[R[23]]]],[11,"clone",E,E,1,[[["self"]],["map"]]],[11,"clone",E,E,4,[[["self"]],["set"]]],[11,R[83],E,E,1,[[],["self"]]],[11,R[83],E,E,4,[[],["self"]]]],"p":[[3,R[702]],[3,"Map"],[3,R[703]],[3,R[704]],[3,"Set"],[3,R[705]],[8,R[706]],[3,"MapIter"],[3,"SetIter"]]};
searchIndex["cranelift_codegen"]={"doc":"Cranelift code generation library.","i":[[0,R[5420],R[4918],R[5421],N,N],[8,R[55],R[5098],R[5423],N,N],[10,R[5150],E,R[5424],0,[[],["self"]]],[3,R[56],E,R[5422],N,N],[3,"Context",R[4918],"Persistent data structures and compilation pipeline.",N,N],[12,"func",E,"The function we're compiling.",1,N],[12,"cfg",E,"The control flow graph of `func`.",1,N],[12,"domtree",E,"Dominator tree for `func`.",1,N],[12,"regalloc",E,"Register allocation context.",1,N],[12,R[5072],E,"Loop analysis of `func`.",1,N],[3,R[5364],E,"Value location range.",N,N],[12,"loc",E,"The ValueLoc containing a ValueLabel during this range.",2,N],[12,"start",E,"The start of the range.",2,N],[12,"end",E,"The end of the range.",2,N],[4,R[5365],E,"A compilation error.",N,N],[13,"Verifier",E,"A list of IR verifier errors.",3,N],[13,R[5837],E,R[5838],3,N],[13,"CodeTooLarge",E,"The code size for the function is too large.",3,N],[5,"legalize_function",E,"Legalize `func` for `isa`.",N,[[[R[4929]],[R[4928]],[R[4932]]]]],[0,"binemit",E,"Binary machine code emission.",N,N],[3,R[5366],R[5095],"A `CodeSink` that writes binary machine code directly into…",N,N],[12,"info",E,"Information about the generated code and read-only data.",4,N],[3,R[5411],E,"A `TrapSink` implementation that does nothing, which is…",N,N],[3,R[5410],E,"Keep track of diversions in an EBB.",N,N],[3,"CodeInfo",E,"Container for information about a vector of compiled code…",N,N],[12,"code_size",E,"Number of bytes of machine code (the code starts at offset…",5,N],[12,"jumptables_size",E,"Number of bytes of jumptables.",5,N],[12,"rodata_size",E,"Number of bytes of rodata.",5,N],[12,R[5437],E,"Number of bytes in total.",5,N],[4,"Reloc",E,"Relocation kinds for every ISA",N,N],[13,"Abs4",E,"absolute 4-byte",6,N],[13,"Abs8",E,"absolute 8-byte",6,N],[13,"X86PCRel4",E,"x86 PC-relative 4-byte",6,N],[13,"X86PCRelRodata4",E,"x86 PC-relative 4-byte offset to trailing rodata",6,N],[13,"X86CallPCRel4",E,"x86 call to PC-relative 4-byte",6,N],[13,"X86CallPLTRel4",E,"x86 call to PLT-relative 4-byte",6,N],[13,"X86GOTPCRel4",E,"x86 GOT PC-relative 4-byte",6,N],[13,"Arm32Call",E,"Arm32 call target",6,N],[13,"Arm64Call",E,"Arm64 call target",6,N],[13,"RiscvCall",E,"RISC-V call target",6,N],[5,R[5082],E,"Relax branches and compute the final layout of EBB headers…",N,[[[R[4929]],[R[4928]]],[[R[5068],[R[5091]]],[R[5091]]]]],[5,R[5081],E,"Pick the smallest valid encodings for instructions.",N,[[[R[4929]],[R[4928]]]]],[5,"bad_encoding",E,"Report a bad encoding error.",N,[[[R[4928]],["inst"]]]],[5,"emit_function",E,"Emit a function to `sink`, given an instruction emitter…",N,[[[R[4928]],["ei"],["cs"]]]],[11,"new",E,"Create a new memory code sink that writes a function to…",4,[[["relocsink"],["trapsink"]],["self"]]],[6,"CodeOffset",E,"Offset in bytes from the beginning of the function.",N,N],[6,"Addend",E,"Addend to add to the symbol value.",N,N],[8,"RelocSink",E,"A trait for receiving relocations for code that is emitted…",N,N],[10,"reloc_ebb",E,R[4920],7,[[["self"],[R[4919]],["reloc"]]]],[10,R[4921],E,"Add a relocation referencing an external symbol at the…",7,[[["self"],["addend"],[R[4919]],["reloc"],[R[4922]]]]],[10,"reloc_jt",E,R[4923],7,[[["self"],[R[4986]],[R[4919]],["reloc"]]]],[8,"TrapSink",E,"A trait for receiving trap codes and offsets.",N,N],[10,"trap",E,"Add trap information for a specific offset.",8,[[["self"],[R[4926]],[R[4919]],[R[4997]]]]],[8,"CodeSink",E,"Abstract interface for adding bytes to the code segment.",N,N],[10,"offset",E,"Get the current position.",9,[[["self"]],[R[4919]]]],[10,"put1",E,"Add 1 byte to the code section.",9,[[["self"],["u8"]]]],[10,"put2",E,"Add 2 bytes to the code section.",9,[[["self"],["u16"]]]],[10,"put4",E,"Add 4 bytes to the code section.",9,[[["self"],["u32"]]]],[10,"put8",E,"Add 8 bytes to the code section.",9,[[["self"],["u64"]]]],[10,"reloc_ebb",E,R[4920],9,[[["self"],["reloc"],[R[4919]]]]],[10,R[4921],E,"Add a relocation referencing an external symbol plus the…",9,[[["self"],["addend"],["reloc"],[R[4922]]]]],[10,"reloc_jt",E,R[4923],9,[[["self"],["reloc"],[R[4986]]]]],[10,"trap",E,"Add trap information for the current offset.",9,[[["self"],[R[4997]],[R[4926]]]]],[10,R[5118],E,"Machine code output is complete, jump table data may follow.",9,[[["self"]]]],[10,R[5119],E,"Jump table output is complete, raw read-only data may…",9,[[["self"]]]],[10,R[5120],E,"Read-only data output is complete, we're done.",9,[[["self"]]]],[11,"jumptables",E,"Offset of any relocatable jump tables, or equal to rodata…",5,[[["self"]],[R[4919]]]],[11,"rodata",E,"Offset of any copyable read-only data, or equal to…",5,[[["self"]],[R[4919]]]],[0,"cfg_printer",R[4918],"The `CFGPrinter` utility.",N,N],[3,"CFGPrinter",R[5099],"A utility for pretty-printing the CFG of a `Function`.",N,N],[11,"new",E,"Create a new CFGPrinter.",10,[[[R[4928]]],["self"]]],[11,"write",E,"Write the CFG for this function to `w`.",10,[[["self"],["write"]],[R[3]]]],[0,"cursor",R[4918],"Cursor library.",N,N],[3,"FuncCursor",R[5100],"Function cursor.",N,N],[12,"func",E,R[4924],11,N],[3,"EncCursor",E,"Encoding cursor.",N,N],[12,"func",E,R[4924],12,N],[12,"isa",E,"The target ISA that will be used to encode instructions.",12,N],[4,R[5367],E,"The possible positions of a cursor.",N,N],[13,"Nowhere",E,"Cursor is not pointing anywhere. No instructions can be…",13,N],[13,"At",E,"Cursor is pointing at an existing instruction. New…",13,N],[13,"Before",E,"Cursor is before the beginning of an EBB. No instructions…",13,N],[13,"After",E,"Cursor is pointing after the end of an EBB. New…",13,N],[8,"Cursor",E,"All cursor types implement the `Cursor` which provides…",N,N],[10,R[368],E,"Get the current cursor position.",14,[[["self"]],[R[4925]]]],[10,R[5121],E,"Set the current position.",14,[[["self"],[R[4925]]]]],[10,"srcloc",E,"Get the source location that should be assigned to new…",14,[[["self"]],[R[4926]]]],[10,R[5122],E,"Set the source location that should be assigned to new…",14,[[["self"],[R[4926]]]]],[10,"layout",E,"Borrow a reference to the function layout that this cursor…",14,[[["self"]],["layout"]]],[10,R[5123],E,"Borrow a mutable reference to the function layout that…",14,[[["self"]],["layout"]]],[11,"with_srcloc",E,"Exchange this cursor for one with a set source location.",14,[[[R[4926]]],["self"]]],[11,"at_position",E,"Rebuild this cursor positioned at `pos`.",14,[[[R[4925]]],["self"]]],[11,"at_inst",E,"Rebuild this cursor positioned at `inst`.",14,[[["inst"]],["self"]]],[11,"at_first_insertion_point",E,"Rebuild this cursor positioned at the first insertion…",14,[[["ebb"]],["self"]]],[11,"at_first_inst",E,"Rebuild this cursor positioned at the first instruction in…",14,[[["ebb"]],["self"]]],[11,"at_last_inst",E,"Rebuild this cursor positioned at the last instruction in…",14,[[["ebb"]],["self"]]],[11,"after_inst",E,"Rebuild this cursor positioned after `inst`.",14,[[["inst"]],["self"]]],[11,"at_top",E,"Rebuild this cursor positioned at the top of `ebb`.",14,[[["ebb"]],["self"]]],[11,"at_bottom",E,"Rebuild this cursor positioned at the bottom of `ebb`.",14,[[["ebb"]],["self"]]],[11,"current_ebb",E,"Get the EBB corresponding to the current position.",14,[[["self"]],[[R[23],["ebb"]],["ebb"]]]],[11,"current_inst",E,"Get the instruction corresponding to the current position,…",14,[[["self"]],[["inst"],[R[23],["inst"]]]]],[11,"goto_after_inst",E,"Go to the position after a specific instruction, which…",14,[[["self"],["inst"]]]],[11,"goto_inst",E,"Go to a specific instruction which must be inserted in the…",14,[[["self"],["inst"]]]],[11,"goto_first_insertion_point",E,"Go to the position for inserting instructions at the…",14,[[["self"],["ebb"]]]],[11,"goto_first_inst",E,"Go to the first instruction in `ebb`.",14,[[["self"],["ebb"]]]],[11,"goto_last_inst",E,"Go to the last instruction in `ebb`.",14,[[["self"],["ebb"]]]],[11,"goto_top",E,"Go to the top of `ebb` which must be inserted into the…",14,[[["self"],["ebb"]]]],[11,"goto_bottom",E,"Go to the bottom of `ebb` which must be inserted into the…",14,[[["self"],["ebb"]]]],[11,"next_ebb",E,"Go to the top of the next EBB in layout order and return it.",14,[[["self"]],[[R[23],["ebb"]],["ebb"]]]],[11,"prev_ebb",E,"Go to the bottom of the previous EBB in layout order and…",14,[[["self"]],[[R[23],["ebb"]],["ebb"]]]],[11,"next_inst",E,"Move to the next instruction in the same EBB and return it.",14,[[["self"]],[["inst"],[R[23],["inst"]]]]],[11,"prev_inst",E,"Move to the previous instruction in the same EBB and…",14,[[["self"]],[["inst"],[R[23],["inst"]]]]],[11,R[4987],E,"Insert an instruction at the current position.",14,[[["self"],["inst"]]]],[11,R[4988],E,R[4927],14,[[["self"]],["inst"]]],[11,"remove_inst_and_step_back",E,R[4927],14,[[["self"]],["inst"]]],[11,"insert_ebb",E,"Insert an EBB at the current position and switch to it.",14,[[["self"],["ebb"]]]],[11,"new",E,"Create a new `FuncCursor` pointing nowhere.",11,[[[R[4928]]],["self"]]],[11,"use_srcloc",E,R[4930],11,[[["self"],["inst"]]]],[11,"ins",E,"Create an instruction builder that inserts an instruction…",11,[[["self"]],[[R[4931],[R[5536]]],[R[5536]]]]],[11,"new",E,"Create a new `EncCursor` pointing nowhere.",12,[[[R[4929]],[R[4928]]],["self"]]],[11,"use_srcloc",E,R[4930],12,[[["self"],["inst"]]]],[11,"ins",E,"Create an instruction builder that will insert an encoded…",12,[[["self"]],[[R[4931],["enccursor"]],["enccursor"]]]],[11,"built_inst",E,"Get the last built instruction.",12,[[["self"]],["inst"]]],[11,R[4943],E,"Return an object that can display `inst`.",12,[[["self"],["inst"]],[R[4944]]]],[0,"dbg",R[4918],"Debug tracing helpers.",N,N],[3,R[5368],R[5101],"Helper for printing lists.",N,N],[12,"0",E,E,15,N],[7,"LOG_FILENAME_PREFIX",E,"Prefix added to the log file names, just before the thread…",N,N],[0,"dominator_tree",R[4918],"A Dominator Tree represented as mappings of Ebbs to their…",N,N],[3,R[5369],R[5102],"The dominator tree for a single function.",N,N],[3,R[5370],E,"Optional pre-order information that can be computed for a…",N,N],[3,"ChildIter",E,"An iterator that enumerates the direct children of an EBB…",N,N],[11,"is_reachable",E,"Is `ebb` reachable from the entry block?",16,[[["self"],["ebb"]],["bool"]]],[11,"cfg_postorder",E,"Get the CFG post-order of EBBs that was used to compute…",16,[[["self"]]]],[11,"idom",E,"Returns the immediate dominator of `ebb`.",16,[[["self"],["ebb"]],[[R[23],["inst"]],["inst"]]]],[11,"rpo_cmp",E,"Compare two program points relative to a reverse…",16,[[["self"],["a"],["layout"],["b"]],[R[50]]]],[11,"dominates",E,"Returns `true` if `a` dominates `b`.",16,[[["self"],["a"],["layout"],["b"]],["bool"]]],[11,"last_dominator",E,"Find the last instruction in `a` that dominates `b`. If no…",16,[[["self"],["layout"],["b"],["ebb"]],[[R[23],["inst"]],["inst"]]]],[11,"common_dominator",E,"Compute the common dominator of two basic blocks.",16,[[["self"],["layout"],[R[5128]]],[R[5128]]]],[11,"new",E,"Allocate a new blank dominator tree. Use `compute` to…",16,[[],["self"]]],[11,R[4933],E,"Allocate and compute a dominator tree.",16,[[[R[4928]],[R[4932]]],["self"]]],[11,"compute",E,"Reset and compute a CFG post-order and dominator tree.",16,[[["self"],[R[4928]],[R[4932]]]]],[11,"clear",E,"Clear the data structures used to represent the dominator…",16,[[["self"]]]],[11,R[27],E,"Check if the dominator tree is in a valid state.",16,[[["self"]],["bool"]]],[11,"recompute_split_ebb",E,"When splitting an `Ebb` using `Layout::split_ebb`, you can…",16,[[["self"],["inst"],["ebb"]]]],[11,"new",E,"Create a new blank `DominatorTreePreorder`.",17,[[],["self"]]],[11,"compute",E,"Recompute this data structure to match `domtree`.",17,[[["self"],[R[5073]],["layout"]]]],[11,"children",E,"Get an iterator over the direct children of `ebb` in the…",17,[[["self"],["ebb"]],["childiter"]]],[11,"dominates",E,"Fast, constant time dominance check with EBB granularity.",17,[[["self"],["ebb"]],["bool"]]],[11,"pre_cmp_ebb",E,"Compare two EBBs according to the dominator pre-order.",17,[[["self"],["ebb"]],[R[50]]]],[11,"pre_cmp",E,"Compare two program points according to the dominator tree…",17,[[["self"],["a"],["layout"],["b"]],[R[50]]]],[11,"pre_cmp_def",E,"Compare two value defs according to the dominator tree…",17,[[["self"],["value"],[R[4928]]],[R[50]]]],[0,"flowgraph",R[4918],"A control flow graph represented as mappings of extended…",N,N],[3,R[5546],R[5103],"A basic block denoted by its enclosing Ebb and last…",N,N],[12,"ebb",E,"Enclosing Ebb key.",18,N],[12,"inst",E,"Last instruction in the basic block.",18,N],[3,R[5371],E,"The Control Flow Graph maintains a mapping of ebbs to…",N,N],[3,"PredIter",E,"An iterator over EBB predecessors. The iterator type is…",N,N],[6,"SuccIter",E,"An iterator over EBB successors. The iterator type is `Ebb`.",N,N],[11,"new",E,"Convenient method to construct new BasicBlock.",18,[[["inst"],["ebb"]],["self"]]],[11,"new",E,"Allocate a new blank control flow graph.",19,[[],["self"]]],[11,"clear",E,"Clear all data structures in this control flow graph.",19,[[["self"]]]],[11,R[4933],E,"Allocate and compute the control flow graph for `func`.",19,[[[R[4928]]],["self"]]],[11,"compute",E,"Compute the control flow graph of `func`.",19,[[["self"],[R[4928]]]]],[11,"recompute_ebb",E,"Recompute the control flow graph of `ebb`.",19,[[["self"],[R[4928]],["ebb"]]]],[11,"pred_iter",E,"Get an iterator over the CFG predecessors to `ebb`.",19,[[["self"],["ebb"]],["prediter"]]],[11,"succ_iter",E,"Get an iterator over the CFG successors to `ebb`.",19,[[["self"],["ebb"]],["succiter"]]],[11,R[27],E,"Check if the CFG is in a valid state.",19,[[["self"]],["bool"]]],[0,"ir",R[4918],"Representation of Cranelift IR functions.",N,N],[3,R[5381],R[4934],"Builder that inserts an instruction at the current position.",N,N],[3,"AbiParam",E,"Function parameter or return value descriptor.",N,N],[12,"value_type",E,"Type of the argument value.",20,N],[12,"purpose",E,"Special purpose of argument, or `Normal`.",20,N],[12,"extension",E,"Method for extending argument to a full register.",20,N],[12,"location",E,"ABI-specific location of this argument, or `Unassigned`…",20,N],[3,R[5372],E,R[4947],N,N],[12,"name",E,"Name of the external function.",21,N],[12,R[3279],E,"Call signature of function.",21,N],[12,"colocated",E,"Will this function be defined nearby, such that it will…",21,N],[3,R[5434],E,"Function signature.",N,N],[12,"params",E,"The arguments passed to the function.",22,N],[12,"returns",E,"Values returned from the function.",22,N],[12,"call_conv",E,"Calling convention.",22,N],[3,"HeapData",E,"Information about a heap declaration.",N,N],[12,"base",E,"The address of the start of the heap's storage.",23,N],[12,"min_size",E,"Guaranteed minimum heap size in bytes. Heap accesses…",23,N],[12,"offset_guard_size",E,"Size in bytes of the offset-guard pages following the heap.",23,N],[12,"style",E,"Heap style, with additional style-specific info.",23,N],[12,"index_type",E,"The index type for the heap.",23,N],[3,"MemFlags",E,"Flags for memory operations like load/store.",N,N],[3,R[5412],E,"A `ProgramPoint` represents a position in a function where…",N,N],[3,"SourceLoc",E,"A source location.",N,N],[3,"TableData",E,"Information about a table declaration.",N,N],[12,"base_gv",E,"Global value giving the address of the start of the table.",24,N],[12,"min_size",E,"Guaranteed minimum table size in elements. Table accesses…",24,N],[12,"bound_gv",E,"Global value giving the current bound of the table, in…",24,N],[12,"element_size",E,"The size of a table element, in bytes.",24,N],[12,"index_type",E,"The index type for the table.",24,N],[3,"ValueLabel",E,"Marked with a label value.",N,N],[3,R[5373],E,"A label of a Value.",N,N],[12,"from",E,R[4940],25,N],[12,"label",E,R[4941],25,N],[4,R[5374],E,"Function argument extension options.",N,N],[13,"None",E,"No extension, high bits are indeterminate.",26,N],[13,"Uext",E,"Unsigned extension: high bits in register are 0.",26,N],[13,"Sext",E,"Signed extension: high bits in register replicate sign bit.",26,N],[4,R[5375],E,"The special purpose of a function argument.",N,N],[13,"Normal",E,"A normal user program value passed to or from a function.",27,N],[13,"StructReturn",E,"Struct return pointer.",27,N],[13,"Link",E,"The link register.",27,N],[13,"FramePointer",E,"The frame pointer.",27,N],[13,"CalleeSaved",E,"A callee-saved register.",27,N],[13,"VMContext",E,"A VM context pointer.",27,N],[13,"SignatureId",E,"A signature identifier.",27,N],[13,"StackLimit",E,"A stack limit pointer.",27,N],[4,R[5376],E,"The name of an external is either a reference to a…",N,N],[13,"User",E,"A name in a user-defined symbol table. Cranelift does not…",28,N],[12,R[4724],R[4935],"Arbitrary.",28,N],[12,"index",E,"Arbitrary.",28,N],[13,"TestCase",R[4934],"A test case function name of up to 10 ascii characters.…",28,N],[12,"length",R[4935],"How many of the bytes in `ascii` are valid?",28,N],[12,"ascii",E,"Ascii bytes of the name.",28,N],[13,"LibCall",R[4934],"A well-known runtime library function.",28,N],[4,R[5377],E,"Information about a global value declaration.",N,N],[13,"VMContext",E,"Value is the address of the VM context struct.",29,N],[13,"Load",E,"Value is pointed to by another global value.",29,N],[12,"base",R[4936],R[4937],29,N],[12,"offset",E,"Offset added to the base pointer before doing the load.",29,N],[12,R[4938],E,"Type of the loaded value.",29,N],[12,"readonly",E,"Specifies whether the memory that this refers to is…",29,N],[13,"IAddImm",R[4934],"Value is an offset from another global value.",29,N],[12,"base",R[4936],R[4937],29,N],[12,"offset",E,"Byte offset to be added to the value.",29,N],[12,R[4938],E,"Type of the iadd.",29,N],[13,"Symbol",R[4934],"Value is symbolic, meaning it's a name which will be…",29,N],[12,"name",R[4936],"The symbolic name.",29,N],[12,"offset",E,"Offset from the symbol. This can be used instead of…",29,N],[12,"colocated",E,"Will this symbol be defined nearby, such that it will…",29,N],[4,"HeapStyle",R[4934],"Style of heap including style-specific information.",N,N],[13,"Dynamic",E,"A dynamic heap can be relocated to a different base…",30,N],[12,"bound_gv",R[4939],"Global value providing the current bound of the heap in…",30,N],[13,"Static",R[4934],"A static heap has a fixed base address and a number of…",30,N],[12,"bound",R[4939],"Heap bound in bytes. The offset-guard pages are allocated…",30,N],[4,"LibCall",R[4934],"The name of a runtime library routine.",N,N],[13,"Probestack",E,"probe for stack overflow. These are emitted for functions…",31,N],[13,"CeilF32",E,"ceil.f32",31,N],[13,"CeilF64",E,"ceil.f64",31,N],[13,"FloorF32",E,"floor.f32",31,N],[13,"FloorF64",E,"floor.f64",31,N],[13,"TruncF32",E,"trunc.f32",31,N],[13,"TruncF64",E,"frunc.f64",31,N],[13,"NearestF32",E,"nearest.f32",31,N],[13,"NearestF64",E,"nearest.f64",31,N],[13,"Memcpy",E,"libc.memcpy",31,N],[13,"Memset",E,"libc.memset",31,N],[13,"Memmove",E,"libc.memmove",31,N],[4,R[5378],E,"An expanded program point directly exposes the variants,…",N,N],[13,"Inst",E,"An instruction in the function.",32,N],[13,"Ebb",E,"An EBB header.",32,N],[4,"TrapCode",E,"A trap code describing the reason for a trap.",N,N],[13,"StackOverflow",E,"The current stack space was exhausted.",33,N],[13,"HeapOutOfBounds",E,"A `heap_addr` instruction detected an out-of-bounds error.",33,N],[13,"TableOutOfBounds",E,"A `table_addr` instruction detected an out-of-bounds error.",33,N],[13,"OutOfBounds",E,"Other bounds checking error.",33,N],[13,"IndirectCallToNull",E,"Indirect call to a null table entry.",33,N],[13,"BadSignature",E,"Signature mismatch on indirect call.",33,N],[13,"IntegerOverflow",E,"An integer arithmetic operation caused an overflow.",33,N],[13,"IntegerDivisionByZero",E,"An integer division by zero.",33,N],[13,"BadConversionToInteger",E,"Failed float-to-int conversion.",33,N],[13,"UnreachableCodeReached",E,"Code that was supposed to have been unreachable was reached.",33,N],[13,"Interrupt",E,"Execution has potentially run too long and may be…",33,N],[13,"User",E,"A user-defined trap code.",33,N],[4,R[5379],E,"Function argument location.",N,N],[13,"Unassigned",E,"This argument has not been assigned to a location yet.",34,N],[13,"Reg",E,"Argument is passed in a register.",34,N],[13,"Stack",E,"Argument is passed on the stack, at the given byte offset…",34,N],[4,"ValueLoc",E,"Value location.",N,N],[13,"Unassigned",E,"This value has not been assigned to a location yet.",35,N],[13,"Reg",E,"Value is assigned to a register.",35,N],[13,"Stack",E,"Value is assigned to a stack slot.",35,N],[4,R[5380],E,"Value label assignements: label starts or value aliases.",N,N],[13,"Starts",E,"Original value labels assigned at transform.",36,N],[13,"Alias",E,"A value alias to original value.",36,N],[12,"from","cranelift_codegen::ir::ValueLabelAssignments",R[4940],36,N],[12,"value",E,R[4941],36,N],[5,"get_libcall_funcref",R[4934],"Get a function reference for `libcall` in `func`,…",N,[[[R[4928]],["inst"],["libcall"],[R[4929]]],["funcref"]]],[5,"get_probestack_funcref",E,"Get a function reference for the probestack function in…",N,[[["regunit"],[R[4928]],["type"],[R[4929]]],["funcref"]]],[11,"new",E,"Create a new builder which inserts instructions at `pos`.…",37,[[["iib"]],["self"]]],[11,"with_results",E,"Reuse result values in `reuse`.",37,[[["array"]],[R[4942]]]],[11,"with_result",E,"Reuse a single result value.",37,[[["value"]],[R[4942]]]],[0,"condcodes",E,"Condition codes for the Cranelift code generator.",N,N],[4,"IntCC",R[5104],"Condition code for comparing integers.",N,N],[13,"Equal",E,"`==`.",38,N],[13,"NotEqual",E,"`!=`.",38,N],[13,"SignedLessThan",E,"Signed `<`.",38,N],[13,"SignedGreaterThanOrEqual",E,"Signed `>=`.",38,N],[13,"SignedGreaterThan",E,"Signed `>`.",38,N],[13,"SignedLessThanOrEqual",E,"Signed `<=`.",38,N],[13,"UnsignedLessThan",E,"Unsigned `<`.",38,N],[13,"UnsignedGreaterThanOrEqual",E,"Unsigned `>=`.",38,N],[13,"UnsignedGreaterThan",E,"Unsigned `>`.",38,N],[13,"UnsignedLessThanOrEqual",E,"Unsigned `<=`.",38,N],[4,"FloatCC",E,"Condition code for comparing floating point numbers.",N,N],[13,"Ordered",E,"EQ | LT | GT",39,N],[13,"Unordered",E,"UN",39,N],[13,"Equal",E,"EQ",39,N],[13,"NotEqual",E,"The C '!=' operator is the inverse of '==': `NotEqual`. UN…",39,N],[13,"OrderedNotEqual",E,"LT | GT",39,N],[13,"UnorderedOrEqual",E,"UN | EQ",39,N],[13,"LessThan",E,"LT",39,N],[13,"LessThanOrEqual",E,"LT | EQ",39,N],[13,"GreaterThan",E,"GT",39,N],[13,"GreaterThanOrEqual",E,"GT | EQ",39,N],[13,"UnorderedOrLessThan",E,"UN | LT",39,N],[13,"UnorderedOrLessThanOrEqual",E,"UN | LT | EQ",39,N],[13,"UnorderedOrGreaterThan",E,"UN | GT",39,N],[13,"UnorderedOrGreaterThanOrEqual",E,"UN | GT | EQ",39,N],[8,"CondCode",E,"Common traits of condition codes.",N,N],[10,"inverse",E,"Get the inverse condition code of `self`.",40,[[],["self"]]],[10,"reverse",E,"Get the reversed condition code for `self`.",40,[[],["self"]]],[0,"dfg",R[4934],"Data flow graph tracking Instructions, Values, and EBBs.",N,N],[3,R[5382],R[5105],"A data flow graph defines all instructions and extended…",N,N],[12,"value_lists",E,"Memory pool of value lists.",41,N],[12,"signatures",E,"Function signature table. These signatures are referenced…",41,N],[12,"ext_funcs",E,"External function references. These are functions that can…",41,N],[12,"values_labels",E,"Saves Value labels.",41,N],[3,"Values",E,"Iterator over all Values in a DFG",N,N],[3,R[5413],E,"Object that can display an instruction.",N,N],[4,"ValueDef",E,"Where did a value come from?",N,N],[13,"Result",E,"Value is the n'th result of an instruction.",42,N],[13,"Param",E,"Value is the n'th parameter to an EBB.",42,N],[11,"new",E,"Create a new empty `DataFlowGraph`.",41,[[],["self"]]],[11,"clear",E,"Clear everything.",41,[[["self"]]]],[11,"num_insts",E,"Get the total number of instructions created in this…",41,[[["self"]],["usize"]]],[11,"inst_is_valid",E,"Returns `true` if the given instruction reference is valid.",41,[[["self"],["inst"]],["bool"]]],[11,"num_ebbs",E,"Get the total number of extended basic blocks created in…",41,[[["self"]],["usize"]]],[11,"ebb_is_valid",E,"Returns `true` if the given ebb reference is valid.",41,[[["self"],["ebb"]],["bool"]]],[11,"num_values",E,"Get the total number of values.",41,[[["self"]],["usize"]]],[11,R[4955],E,R[4956],41,[[["self"]]]],[11,"values",E,"Get an iterator over all values.",41,[[["self"]],["values"]]],[11,"value_is_valid",E,"Check if a value reference is valid.",41,[[["self"],["value"]],["bool"]]],[11,"value_type",E,"Get the type of a value.",41,[[["self"],["value"]],["type"]]],[11,"value_def",E,"Get the definition of a value.",41,[[["self"],["value"]],["valuedef"]]],[11,"value_is_attached",E,"Determine if `v` is an attached instruction result / EBB…",41,[[["self"],["value"]],["bool"]]],[11,"resolve_aliases",E,"Resolve value aliases.",41,[[["self"],["value"]],["value"]]],[11,"resolve_aliases_in_arguments",E,"Resolve all aliases among inst's arguments.",41,[[["self"],["inst"]]]],[11,"change_to_alias",E,"Turn a value into an alias of another.",41,[[["self"],["value"]]]],[11,"replace_with_aliases",E,"Replace the results of one instruction with aliases to the…",41,[[["self"],["inst"]]]],[11,R[4989],E,"Unwrap the instruction where the value was defined, or…",42,[[["self"]],["inst"]]],[11,"unwrap_ebb",E,"Unwrap the EBB there the parameter is defined, or panic.",42,[[["self"]],["ebb"]]],[11,"pp",E,"Get the program point where the value was defined.",42,[[],[R[5133]]]],[11,"num",E,"Get the number component of this definition.",42,[[],["usize"]]],[11,"make_inst",E,"Create a new instruction.",41,[[["self"],[R[5055]]],["inst"]]],[11,R[4943],E,"Returns an object that displays `inst`.",41,[[["inst"],["into",[R[23]]],["self"],[R[23],[R[4929]]]],[R[4944]]]],[11,"inst_args",E,"Get all value arguments on `inst` as a slice.",41,[[["self"],["inst"]]]],[11,"inst_args_mut",E,"Get all value arguments on `inst` as a mutable slice.",41,[[["self"],["inst"]]]],[11,"inst_fixed_args",E,"Get the fixed value arguments on `inst` as a slice.",41,[[["self"],["inst"]]]],[11,"inst_fixed_args_mut",E,"Get the fixed value arguments on `inst` as a mutable slice.",41,[[["self"],["inst"]]]],[11,"inst_variable_args",E,"Get the variable value arguments on `inst` as a slice.",41,[[["self"],["inst"]]]],[11,"inst_variable_args_mut",E,"Get the variable value arguments on `inst` as a mutable…",41,[[["self"],["inst"]]]],[11,"make_inst_results",E,"Create result values for an instruction that produces…",41,[[["self"],["type"],["inst"]],["usize"]]],[11,"make_inst_results_reusing",E,R[4945],41,[[["self"],["type"],["inst"],["i"]],["usize"]]],[11,"replace",E,"Create a `ReplaceBuilder` that will replace `inst` with a…",41,[[["self"],["inst"]],["replacebuilder"]]],[11,"detach_results",E,"Detach the list of result values from `inst` and return it.",41,[[["self"],["inst"]],[R[4983]]]],[11,"clear_results",E,"Clear the list of result values from `inst`.",41,[[["self"],["inst"]]]],[11,"attach_result",E,"Attach an existing value to the result value list for…",41,[[["self"],["value"],["inst"]]]],[11,"replace_result",E,"Replace an instruction result with a new value of type…",41,[[["self"],["value"],["type"]],["value"]]],[11,"append_result",E,"Append a new instruction result value to `inst`.",41,[[["self"],["type"],["inst"]],["value"]]],[11,"append_inst_arg",E,"Append a new value argument to an instruction.",41,[[["self"],["value"],["inst"]]]],[11,"first_result",E,"Get the first result of an instruction.",41,[[["self"],["inst"]],["value"]]],[11,"has_results",E,"Test if `inst` has any result values currently.",41,[[["self"],["inst"]],["bool"]]],[11,R[5539],E,"Return all the results of an instruction.",41,[[["self"],["inst"]]]],[11,"call_signature",E,"Get the call signature of a direct or indirect call…",41,[[["self"],["inst"]],[[R[23],["sigref"]],["sigref"]]]],[11,R[4984],E,"Check if `inst` is a branch.",41,[[["self"],["inst"]],["branchinfo"]]],[11,"compute_result_type",E,"Compute the type of an instruction result from opcode…",41,[[["self"],["usize"],["inst"],["type"]],[[R[23],["type"]],["type"]]]],[11,"ctrl_typevar",E,"Get the controlling type variable, or `INVALID` if `inst`…",41,[[["self"],["inst"]],["type"]]],[11,"make_ebb",E,"Create a new basic block.",41,[[["self"]],["ebb"]]],[11,"num_ebb_params",E,"Get the number of parameters on `ebb`.",41,[[["self"],["ebb"]],["usize"]]],[11,"ebb_params",E,"Get the parameters on `ebb`.",41,[[["self"],["ebb"]]]],[11,R[5538],E,"Append a parameter with type `ty` to `ebb`.",41,[[["self"],["type"],["ebb"]],["value"]]],[11,"swap_remove_ebb_param",E,"Removes `val` from `ebb`'s parameters by swapping it with…",41,[[["self"],["value"]],["usize"]]],[11,"remove_ebb_param",E,"Removes `val` from `ebb`'s parameters by a standard linear…",41,[[["self"],["value"]]]],[11,"attach_ebb_param",E,"Append an existing value to `ebb`'s parameters.",41,[[["self"],["value"],["ebb"]]]],[11,"replace_ebb_param",E,"Replace an EBB parameter with a new value of type `ty`.",41,[[["self"],["value"],["type"]],["value"]]],[11,"detach_ebb_params",E,"Detach all the parameters from `ebb` and return them as a…",41,[[["self"],["ebb"]],[R[4983]]]],[11,"make_inst_results_for_parser",E,R[4945],41,[[["self"],["type"],["inst"]],["usize"]]],[11,"append_ebb_param_for_parser",E,"Similar to `append_ebb_param`, append a parameter with…",41,[[["self"],["value"],["type"],["ebb"]]]],[11,"make_value_alias_for_serialization",E,"Create a new value alias. This is only for use by the…",41,[[["self"],["value"]]]],[11,"value_alias_dest_for_serialization",E,"If `v` is already defined as an alias, return its…",41,[[["self"],["value"]],[["value"],[R[23],["value"]]]]],[11,"set_alias_type_for_parser",E,"Compute the type of an alias. This is only for use in the…",41,[[["self"],["value"]],["bool"]]],[11,"make_invalid_value_for_parser",E,"Create an invalid value, to pad the index space. This is…",41,[[["self"]]]],[11,"value_is_valid_for_parser",E,"Check if a value reference is valid, while being aware of…",41,[[["self"],["value"]],["bool"]]],[0,"entities",R[4934],"Cranelift IR entity references.",N,N],[3,"Ebb",R[5106],"An opaque reference to an extended basic block in a…",N,N],[3,"Value",E,"An opaque reference to an SSA value.",N,N],[3,"Inst",E,"An opaque reference to an instruction in a function.",N,N],[3,"StackSlot",E,"An opaque reference to a stack slot.",N,N],[3,R[4946],E,"An opaque reference to a global value.",N,N],[3,"JumpTable",E,"An opaque reference to a jump table.",N,N],[3,"FuncRef",E,"A reference to an external function.",N,N],[3,"SigRef",E,"A reference to a function signature.",N,N],[3,"Heap",E,"A reference to a heap.",N,N],[3,"Table",E,"A reference to a table.",N,N],[4,"AnyEntity",E,"A reference to any of the entities defined in this module.",N,N],[13,R[196],E,"The whole function.",43,N],[13,"Ebb",E,"An extended basic block.",43,N],[13,"Inst",E,"An instruction.",43,N],[13,"Value",E,"An SSA value.",43,N],[13,"StackSlot",E,"A stack slot.",43,N],[13,R[4946],E,"A Global value.",43,N],[13,"JumpTable",E,"A jump table.",43,N],[13,"FuncRef",E,R[4947],43,N],[13,"SigRef",E,"A function call signature.",43,N],[13,"Heap",E,"A heap.",43,N],[13,"Table",E,"A table.",43,N],[11,R[4950],E,R[4948],44,[[["u32"]],["self"]]],[11,"as_u32",E,R[4948],44,[[],["u32"]]],[11,R[4949],E,"Create a new EBB reference from its number. This…",44,[[["u32"]],[R[23]]]],[11,R[4950],E,R[4948],45,[[["u32"]],["self"]]],[11,"as_u32",E,R[4948],45,[[],["u32"]]],[11,R[4949],E,"Create a value from its number representation. This is the…",45,[[["u32"]],[R[23]]]],[11,R[4950],E,R[4948],46,[[["u32"]],["self"]]],[11,"as_u32",E,R[4948],46,[[],["u32"]]],[11,R[4950],E,R[4948],47,[[["u32"]],["self"]]],[11,"as_u32",E,R[4948],47,[[],["u32"]]],[11,R[4949],E,"Create a new stack slot reference from its number.",47,[[["u32"]],[R[23]]]],[11,R[4950],E,R[4948],48,[[["u32"]],["self"]]],[11,"as_u32",E,R[4948],48,[[],["u32"]]],[11,R[4949],E,"Create a new global value reference from its number.",48,[[["u32"]],[R[23]]]],[11,R[4950],E,R[4948],49,[[["u32"]],["self"]]],[11,"as_u32",E,R[4948],49,[[],["u32"]]],[11,R[4949],E,"Create a new jump table reference from its number.",49,[[["u32"]],[R[23]]]],[11,R[4950],E,R[4948],50,[[["u32"]],["self"]]],[11,"as_u32",E,R[4948],50,[[],["u32"]]],[11,R[4949],E,"Create a new external function reference from its number.",50,[[["u32"]],[R[23]]]],[11,R[4950],E,R[4948],51,[[["u32"]],["self"]]],[11,"as_u32",E,R[4948],51,[[],["u32"]]],[11,R[4949],E,"Create a new function signature reference from its number.",51,[[["u32"]],[R[23]]]],[11,R[4950],E,R[4948],52,[[["u32"]],["self"]]],[11,"as_u32",E,R[4948],52,[[],["u32"]]],[11,R[4949],E,"Create a new heap reference from its number.",52,[[["u32"]],[R[23]]]],[11,R[4950],E,R[4948],53,[[["u32"]],["self"]]],[11,"as_u32",E,R[4948],53,[[],["u32"]]],[11,R[4949],E,"Create a new table reference from its number.",53,[[["u32"]],[R[23]]]],[11,"new",R[4934],"Create a new blank signature.",22,[[["callconv"]],["self"]]],[11,"clear",E,"Clear the signature so it is identical to a fresh one…",22,[[["self"],["callconv"]]]],[11,"display",E,R[4952],22,[[["into",[R[23]]],["self"],[R[23],["reginfo"]]],["displaysignature"]]],[11,"special_param_index",E,"Find the index of a presumed unique special-purpose…",22,[[["self"],[R[4951]]],[[R[23],["usize"]],["usize"]]]],[11,"new",E,"Create a parameter with default flags.",20,[[["type"]],["self"]]],[11,"special",E,"Create a special-purpose parameter that is not (yet) bound…",20,[[["type"],[R[4951]]],["self"]]],[11,"special_reg",E,"Create a parameter for a special-purpose register.",20,[[["regunit"],["type"],[R[4951]]],["self"]]],[11,"uext",E,"Convert `self` to a parameter with the `uext` flag set.",20,[[],["self"]]],[11,"sext",E,"Convert `self` to a parameter type with the `sext` flag set.",20,[[],["self"]]],[11,"display",E,R[4952],20,[[["into",[R[23]]],["self"],[R[23],["reginfo"]]],["displayabiparam"]]],[11,"testcase",E,"Creates a new external name from a sequence of bytes.…",28,[[["asref"]],["self"]]],[11,"user",E,"Create a new external name from user-provided integer…",28,[[["u32"]],["self"]]],[0,R[4928],E,"Intermediate representation of a function.",N,N],[3,R[196],R[5107],R[5839],N,N],[12,"name",E,"Name of this function. Mostly used by `.clif` files.",54,N],[12,R[3279],E,"Signature of this function.",54,N],[12,"stack_slots",E,"Stack slots allocated in this function.",54,N],[12,"global_values",E,"Global values referenced.",54,N],[12,"heaps",E,"Heaps referenced.",54,N],[12,"tables",E,"Tables referenced.",54,N],[12,"jump_tables",E,"Jump tables used in this function.",54,N],[12,"dfg",E,"Data flow graph containing the primary definition of all…",54,N],[12,"layout",E,"Layout of EBBs and instructions in the function body.",54,N],[12,"encodings",E,"Encoding recipe and bits for the legal instructions.…",54,N],[12,"locations",E,"Location assigned to every value.",54,N],[12,"offsets",E,"Code offsets of the EBB headers.",54,N],[12,"jt_offsets",E,"Code offsets of Jump Table headers.",54,N],[12,"srclocs",E,"Source locations.",54,N],[3,R[5383],E,"Additional annotations for function display.",N,N],[12,"isa",E,"Enable ISA annotations.",55,N],[12,"value_ranges",E,"Enable value labels annotations.",55,N],[3,R[5414],E,"Wrapper type capable of displaying a `Function` with…",N,N],[3,R[5415],E,"Iterator returning instruction offsets and sizes:…",N,N],[11,"with_name_signature",E,"Create a function with the given name and signature.",54,[[[R[4922]],[R[3279]]],["self"]]],[11,"clear",E,"Clear all data structures in this function.",54,[[["self"]]]],[11,"new",E,"Create a new empty, anonymous function with a Fast calling…",54,[[],["self"]]],[11,R[5524],E,R[5525],54,[[["self"],[R[5145]]],[R[4986]]]],[11,R[5526],E,R[5527],54,[[["self"],[R[4990]]],[R[4991]]]],[11,R[5528],E,R[5529],54,[[["self"],[R[3279]]],["sigref"]]],[11,R[5530],E,R[5531],54,[[["self"],[R[5142]]],["funcref"]]],[11,R[5532],E,R[5533],54,[[["self"],[R[5143]]],[R[5001]]]],[11,R[5534],E,R[5535],54,[[["self"],["heapdata"]],["heap"]]],[11,"create_table",E,"Declares a table accessible to the function.",54,[[["self"],["tabledata"]],["table"]]],[11,"display",E,R[4953],54,[[["self"],[R[23],[R[4929]]],["into",[R[23]]]],[R[4954]]]],[11,"display_with",E,R[4953],54,[[["self"],[R[5089]]],[R[4954]]]],[11,"special_param",E,"Find a presumed unique special-purpose function parameter…",54,[[["self"],[R[4951]]],[[R[23],["value"]],["value"]]]],[11,"inst_offsets",E,"Get an iterator over the instructions in `ebb`, including…",54,[[["self"],["encinfo"],["ebb"]],["instoffsetiter"]]],[11,"update_encoding",E,"Wrapper around `encode` which assigns `inst` the resulting…",54,[[["self"],["inst"],[R[4929]]],[[R[5079]],[R[3],[R[5079]]]]]],[11,"encode",E,"Wrapper around `TargetIsa::encode` for encoding an…",54,[[["self"],["inst"],[R[4929]]],[[R[5079]],[R[3],[R[5067],R[5079]]],[R[5067]]]]],[11,R[4955],E,R[4956],54,[[["self"]]]],[11,R[83],E,"Create a DisplayFunctionAnnotations with all fields set to…",55,[[],["self"]]],[11,"symbol_name",R[4934],"Assume that `self` is an `GlobalValueData::Symbol` and…",29,[[["self"]],[R[4922]]]],[11,R[4938],E,"Return the type of this global.",29,[[["self"],[R[4929]]],["type"]]],[0,"immediates",E,"Immediate operands for Cranelift instructions",N,N],[3,"Imm64",R[5108],"64-bit immediate signed integer operand.",N,N],[3,"Uimm64",E,"64-bit immediate unsigned integer operand.",N,N],[3,"Uimm32",E,"A 32-bit unsigned integer immediate operand.",N,N],[3,"Offset32",E,"32-bit signed immediate offset.",N,N],[3,"Ieee32",E,R[5438],N,N],[3,"Ieee64",E,R[5439],N,N],[6,"Uimm8",E,"8-bit unsigned integer immediate operand.",N,N],[11,"new",E,"Create a new `Imm64` representing the signed number `x`.",56,[[["i64"]],["self"]]],[11,R[4957],E,R[4958],56,[[],["self"]]],[11,"new",E,"Create a new `Uimm64` representing the unsigned number `x`.",57,[[["u64"]],["self"]]],[11,R[4957],E,R[4958],57,[[],["self"]]],[11,"new",E,"Create a new `Offset32` representing the signed number `x`.",58,[[["i32"]],["self"]]],[11,"try_from_i64",E,"Create a new `Offset32` representing the signed number `x`…",58,[[["i64"]],[R[23]]]],[11,"try_add_i64",E,"Add in the signed number `x` if possible.",58,[[["i64"]],[R[23]]]],[11,"with_bits",E,"Create a new `Ieee32` containing the bits of `x`.",59,[[["u32"]],["self"]]],[11,"pow2",E,"Create an `Ieee32` number representing `2.0^n`.",59,[[["into",["i32"]],["i32"]],["self"]]],[11,R[4959],E,"Create an `Ieee32` number representing the greatest…",59,[[["into",["i32"]],["i32"]],["self"]]],[11,"neg",E,R[4958],59,[[],["self"]]],[11,"with_float",E,"Create a new `Ieee32` representing the number `x`.",59,[[["f32"]],["self"]]],[11,"bits",E,R[4960],59,[[],["u32"]]],[11,"with_bits",E,"Create a new `Ieee64` containing the bits of `x`.",60,[[["u64"]],["self"]]],[11,"pow2",E,"Create an `Ieee64` number representing `2.0^n`.",60,[[["i64"],["into",["i64"]]],["self"]]],[11,R[4959],E,"Create an `Ieee64` number representing the greatest…",60,[[["i64"],["into",["i64"]]],["self"]]],[11,"neg",E,R[4958],60,[[],["self"]]],[11,"with_float",E,"Create a new `Ieee64` representing the number `x`.",60,[[["f64"]],["self"]]],[11,"bits",E,R[4960],60,[[],["u64"]]],[0,"instructions",R[4934],"Instruction formats and opcodes.",N,N],[3,R[5388],R[4961],"A variable list of `Value` operands used for function call…",N,N],[3,R[5389],E,"Value type constraints for a given opcode.",N,N],[3,R[5384],E,"A value type set describes the permitted set of types for…",N,N],[12,"lanes",E,"Allowed lane sizes",61,N],[12,"ints",E,"Allowed int widths",61,N],[12,"floats",E,"Allowed float widths",61,N],[12,"bools",E,"Allowed bool widths",61,N],[4,R[5385],E,"An instruction format",N,N],[13,"Unary",E,R[5002],62,N],[13,"UnaryImm",E,R[5003],62,N],[13,R[4963],E,R[5004],62,N],[13,R[4964],E,R[5005],62,N],[13,R[5359],E,R[5006],62,N],[13,R[4965],E,R[5007],62,N],[13,"Binary",E,R[5008],62,N],[13,R[5360],E,R[5009],62,N],[13,"Ternary",E,R[5010],62,N],[13,"MultiAry",E,R[5011],62,N],[13,"NullAry",E,R[5012],62,N],[13,R[5013],E,R[5014],62,N],[13,R[4966],E,R[5015],62,N],[13,R[5016],E,R[5017],62,N],[13,R[4967],E,R[5018],62,N],[13,"IntCond",E,R[5019],62,N],[13,R[4968],E,R[5020],62,N],[13,R[5361],E,R[5021],62,N],[13,R[5362],E,R[5022],62,N],[13,"Jump",E,R[5023],62,N],[13,"Branch",E,R[5024],62,N],[13,R[5363],E,R[5025],62,N],[13,R[4970],E,R[5026],62,N],[13,R[5027],E,R[5028],62,N],[13,R[4971],E,R[5029],62,N],[13,R[4972],E,R[5030],62,N],[13,R[4973],E,R[5031],62,N],[13,R[4974],E,R[5032],62,N],[13,"Call",E,R[5033],62,N],[13,R[4975],E,R[5034],62,N],[13,"FuncAddr",E,R[5035],62,N],[13,"Load",E,R[5036],62,N],[13,R[4976],E,R[5037],62,N],[13,"Store",E,R[5038],62,N],[13,R[4977],E,R[5039],62,N],[13,R[5040],E,R[5041],62,N],[13,R[4981],E,R[5042],62,N],[13,"HeapAddr",E,R[5043],62,N],[13,R[5044],E,R[5045],62,N],[13,"RegMove",E,R[5046],62,N],[13,R[4978],E,R[5047],62,N],[13,"RegSpill",E,R[5048],62,N],[13,"RegFill",E,R[5049],62,N],[13,"Trap",E,R[5050],62,N],[13,"CondTrap",E,R[5051],62,N],[13,R[4979],E,R[5052],62,N],[13,R[4980],E,R[5053],62,N],[4,R[5386],E,E,N,N],[13,"Unary",E,E,63,N],[12,"opcode",R[4962],E,63,N],[12,"arg",E,E,63,N],[13,"UnaryImm",R[4961],E,63,N],[12,"opcode",R[4962],E,63,N],[12,"imm",E,E,63,N],[13,R[4963],R[4961],E,63,N],[12,"opcode",R[4962],E,63,N],[12,"imm",E,E,63,N],[13,R[4964],R[4961],E,63,N],[12,"opcode",R[4962],E,63,N],[12,"imm",E,E,63,N],[13,R[5359],R[4961],E,63,N],[12,"opcode",R[4962],E,63,N],[12,"imm",E,E,63,N],[13,R[4965],R[4961],E,63,N],[12,"opcode",R[4962],E,63,N],[12,R[5000],E,E,63,N],[13,"Binary",R[4961],E,63,N],[12,"opcode",R[4962],E,63,N],[12,"args",E,E,63,N],[13,R[5360],R[4961],E,63,N],[12,"opcode",R[4962],E,63,N],[12,"arg",E,E,63,N],[12,"imm",E,E,63,N],[13,"Ternary",R[4961],E,63,N],[12,"opcode",R[4962],E,63,N],[12,"args",E,E,63,N],[13,"MultiAry",R[4961],E,63,N],[12,"opcode",R[4962],E,63,N],[12,"args",E,E,63,N],[13,"NullAry",R[4961],E,63,N],[12,"opcode",R[4962],E,63,N],[13,R[5013],R[4961],E,63,N],[12,"opcode",R[4962],E,63,N],[12,"args",E,E,63,N],[12,"lane",E,E,63,N],[13,R[4966],R[4961],E,63,N],[12,"opcode",R[4962],E,63,N],[12,"arg",E,E,63,N],[12,"lane",E,E,63,N],[13,R[5016],R[4961],E,63,N],[12,"opcode",R[4962],E,63,N],[12,"args",E,E,63,N],[12,"cond",E,E,63,N],[13,R[4967],R[4961],E,63,N],[12,"opcode",R[4962],E,63,N],[12,"arg",E,E,63,N],[12,"cond",E,E,63,N],[12,"imm",E,E,63,N],[13,"IntCond",R[4961],E,63,N],[12,"opcode",R[4962],E,63,N],[12,"arg",E,E,63,N],[12,"cond",E,E,63,N],[13,R[4968],R[4961],E,63,N],[12,"opcode",R[4962],E,63,N],[12,"args",E,E,63,N],[12,"cond",E,E,63,N],[13,R[5361],R[4961],E,63,N],[12,"opcode",R[4962],E,63,N],[12,"arg",E,E,63,N],[12,"cond",E,E,63,N],[13,R[5362],R[4961],E,63,N],[12,"opcode",R[4962],E,63,N],[12,"args",E,E,63,N],[12,"cond",E,E,63,N],[13,"Jump",R[4961],E,63,N],[12,"opcode",R[4962],E,63,N],[12,"args",E,E,63,N],[12,R[4969],E,E,63,N],[13,"Branch",R[4961],E,63,N],[12,"opcode",R[4962],E,63,N],[12,"args",E,E,63,N],[12,R[4969],E,E,63,N],[13,R[5363],R[4961],E,63,N],[12,"opcode",R[4962],E,63,N],[12,"args",E,E,63,N],[12,"cond",E,E,63,N],[12,R[4969],E,E,63,N],[13,R[4970],R[4961],E,63,N],[12,"opcode",R[4962],E,63,N],[12,"args",E,E,63,N],[12,"cond",E,E,63,N],[12,R[4969],E,E,63,N],[13,R[5027],R[4961],E,63,N],[12,"opcode",R[4962],E,63,N],[12,"args",E,E,63,N],[12,"cond",E,E,63,N],[12,R[4969],E,E,63,N],[13,R[4971],R[4961],E,63,N],[12,"opcode",R[4962],E,63,N],[12,"arg",E,E,63,N],[12,R[4969],E,E,63,N],[12,"table",E,E,63,N],[13,R[4972],R[4961],E,63,N],[12,"opcode",R[4962],E,63,N],[12,"args",E,E,63,N],[12,"imm",E,E,63,N],[12,"table",E,E,63,N],[13,R[4973],R[4961],E,63,N],[12,"opcode",R[4962],E,63,N],[12,"table",E,E,63,N],[13,R[4974],R[4961],E,63,N],[12,"opcode",R[4962],E,63,N],[12,"arg",E,E,63,N],[12,"table",E,E,63,N],[13,"Call",R[4961],E,63,N],[12,"opcode",R[4962],E,63,N],[12,"args",E,E,63,N],[12,"func_ref",E,E,63,N],[13,R[4975],R[4961],E,63,N],[12,"opcode",R[4962],E,63,N],[12,"args",E,E,63,N],[12,"sig_ref",E,E,63,N],[13,"FuncAddr",R[4961],E,63,N],[12,"opcode",R[4962],E,63,N],[12,"func_ref",E,E,63,N],[13,"Load",R[4961],E,63,N],[12,"opcode",R[4962],E,63,N],[12,"arg",E,E,63,N],[12,"flags",E,E,63,N],[12,"offset",E,E,63,N],[13,R[4976],R[4961],E,63,N],[12,"opcode",R[4962],E,63,N],[12,"args",E,E,63,N],[12,"flags",E,E,63,N],[12,"offset",E,E,63,N],[13,"Store",R[4961],E,63,N],[12,"opcode",R[4962],E,63,N],[12,"args",E,E,63,N],[12,"flags",E,E,63,N],[12,"offset",E,E,63,N],[13,R[4977],R[4961],E,63,N],[12,"opcode",R[4962],E,63,N],[12,"args",E,E,63,N],[12,"flags",E,E,63,N],[12,"offset",E,E,63,N],[13,R[5040],R[4961],E,63,N],[12,"opcode",R[4962],E,63,N],[12,"stack_slot",E,E,63,N],[12,"offset",E,E,63,N],[13,R[4981],R[4961],E,63,N],[12,"opcode",R[4962],E,63,N],[12,"arg",E,E,63,N],[12,"stack_slot",E,E,63,N],[12,"offset",E,E,63,N],[13,"HeapAddr",R[4961],E,63,N],[12,"opcode",R[4962],E,63,N],[12,"arg",E,E,63,N],[12,"heap",E,E,63,N],[12,"imm",E,E,63,N],[13,R[5044],R[4961],E,63,N],[12,"opcode",R[4962],E,63,N],[12,"arg",E,E,63,N],[12,"table",E,E,63,N],[12,"offset",E,E,63,N],[13,"RegMove",R[4961],E,63,N],[12,"opcode",R[4962],E,63,N],[12,"arg",E,E,63,N],[12,"src",E,E,63,N],[12,"dst",E,E,63,N],[13,R[4978],R[4961],E,63,N],[12,"opcode",R[4962],E,63,N],[12,"src",E,E,63,N],[12,"dst",E,E,63,N],[13,"RegSpill",R[4961],E,63,N],[12,"opcode",R[4962],E,63,N],[12,"arg",E,E,63,N],[12,"src",E,E,63,N],[12,"dst",E,E,63,N],[13,"RegFill",R[4961],E,63,N],[12,"opcode",R[4962],E,63,N],[12,"arg",E,E,63,N],[12,"src",E,E,63,N],[12,"dst",E,E,63,N],[13,"Trap",R[4961],E,63,N],[12,"opcode",R[4962],E,63,N],[12,"code",E,E,63,N],[13,"CondTrap",R[4961],E,63,N],[12,"opcode",R[4962],E,63,N],[12,"arg",E,E,63,N],[12,"code",E,E,63,N],[13,R[4979],R[4961],E,63,N],[12,"opcode",R[4962],E,63,N],[12,"arg",E,E,63,N],[12,"cond",E,E,63,N],[12,"code",E,E,63,N],[13,R[4980],R[4961],E,63,N],[12,"opcode",R[4962],E,63,N],[12,"arg",E,E,63,N],[12,"cond",E,E,63,N],[12,"code",E,E,63,N],[4,"Opcode",R[4961],"An instruction opcode.",N,N],[13,"Jump",E,"`jump EBB, args`. (Jump)",64,N],[13,"Fallthrough",E,"`fallthrough EBB, args`. (Jump)",64,N],[13,"Brz",E,"`brz c, EBB, args`. (Branch) Type inferred from `c`.",64,N],[13,"Brnz",E,"`brnz c, EBB, args`. (Branch) Type inferred from `c`.",64,N],[13,"BrIcmp",E,"`br_icmp Cond, x, y, EBB, args`. (BranchIcmp) Type…",64,N],[13,"Brif",E,"`brif Cond, f, EBB, args`. (BranchInt)",64,N],[13,"Brff",E,"`brff Cond, f, EBB, args`. (BranchFloat)",64,N],[13,"BrTable",E,"`br_table x, EBB, JT`. (BranchTable) Type inferred from `x`.",64,N],[13,"JumpTableEntry",E,"`entry = jump_table_entry x, addr, Size, JT`.…",64,N],[13,"JumpTableBase",E,"`addr = jump_table_base JT`. (BranchTableBase)",64,N],[13,"IndirectJumpTableBr",E,"`indirect_jump_table_br addr, JT`. (IndirectJump) Type…",64,N],[13,"Debugtrap",E,"`debugtrap`. (NullAry)",64,N],[13,"Trap",E,"`trap code`. (Trap)",64,N],[13,"Trapz",E,"`trapz c, code`. (CondTrap) Type inferred from `c`.",64,N],[13,"Trapnz",E,"`trapnz c, code`. (CondTrap) Type inferred from `c`.",64,N],[13,"Trapif",E,"`trapif Cond, f, code`. (IntCondTrap)",64,N],[13,"Trapff",E,"`trapff Cond, f, code`. (FloatCondTrap)",64,N],[13,"Return",E,"`return rvals`. (MultiAry)",64,N],[13,R[5835],E,"`fallthrough_return rvals`. (MultiAry)",64,N],[13,"Call",E,"`rvals = call FN, args`. (Call)",64,N],[13,R[4975],E,"`rvals = call_indirect SIG, callee, args`. (CallIndirect)…",64,N],[13,"FuncAddr",E,"`addr = func_addr FN`. (FuncAddr)",64,N],[13,"Load",E,"`a = load MemFlags, p, Offset`. (Load)",64,N],[13,R[4976],E,"`a = load_complex MemFlags, args, Offset`. (LoadComplex)",64,N],[13,"Store",E,"`store MemFlags, x, p, Offset`. (Store) Type inferred from…",64,N],[13,R[4977],E,"`store_complex MemFlags, x, args, Offset`. (StoreComplex)…",64,N],[13,"Uload8",E,"`a = uload8 MemFlags, p, Offset`. (Load)",64,N],[13,"Uload8Complex",E,"`a = uload8_complex MemFlags, args, Offset`. (LoadComplex)",64,N],[13,"Sload8",E,"`a = sload8 MemFlags, p, Offset`. (Load)",64,N],[13,"Sload8Complex",E,"`a = sload8_complex MemFlags, args, Offset`. (LoadComplex)",64,N],[13,"Istore8",E,"`istore8 MemFlags, x, p, Offset`. (Store) Type inferred…",64,N],[13,"Istore8Complex",E,"`istore8_complex MemFlags, x, args, Offset`.…",64,N],[13,"Uload16",E,"`a = uload16 MemFlags, p, Offset`. (Load)",64,N],[13,"Uload16Complex",E,"`a = uload16_complex MemFlags, args, Offset`. (LoadComplex)",64,N],[13,"Sload16",E,"`a = sload16 MemFlags, p, Offset`. (Load)",64,N],[13,"Sload16Complex",E,"`a = sload16_complex MemFlags, args, Offset`. (LoadComplex)",64,N],[13,"Istore16",E,"`istore16 MemFlags, x, p, Offset`. (Store) Type inferred…",64,N],[13,"Istore16Complex",E,"`istore16_complex MemFlags, x, args, Offset`.…",64,N],[13,"Uload32",E,"`a = uload32 MemFlags, p, Offset`. (Load) Type inferred…",64,N],[13,"Uload32Complex",E,"`a = uload32_complex MemFlags, args, Offset`. (LoadComplex)",64,N],[13,"Sload32",E,"`a = sload32 MemFlags, p, Offset`. (Load) Type inferred…",64,N],[13,"Sload32Complex",E,"`a = sload32_complex MemFlags, args, Offset`. (LoadComplex)",64,N],[13,"Istore32",E,"`istore32 MemFlags, x, p, Offset`. (Store) Type inferred…",64,N],[13,"Istore32Complex",E,"`istore32_complex MemFlags, x, args, Offset`. (StoreComplex)",64,N],[13,R[5040],E,"`a = stack_load SS, Offset`. (StackLoad)",64,N],[13,R[4981],E,"`stack_store x, SS, Offset`. (StackStore) Type inferred…",64,N],[13,"StackAddr",E,"`addr = stack_addr SS, Offset`. (StackLoad)",64,N],[13,R[4946],E,"`a = global_value GV`. (UnaryGlobalValue)",64,N],[13,"SymbolValue",E,"`a = symbol_value GV`. (UnaryGlobalValue)",64,N],[13,"HeapAddr",E,"`addr = heap_addr H, p, Size`. (HeapAddr)",64,N],[13,R[5044],E,"`addr = table_addr T, p, Offset`. (TableAddr)",64,N],[13,"Iconst",E,"`a = iconst N`. (UnaryImm)",64,N],[13,"F32const",E,"`a = f32const N`. (UnaryIeee32)",64,N],[13,"F64const",E,"`a = f64const N`. (UnaryIeee64)",64,N],[13,"Bconst",E,"`a = bconst N`. (UnaryBool)",64,N],[13,"Nop",E,"`nop`. (NullAry)",64,N],[13,"Select",E,"`a = select c, x, y`. (Ternary) Type inferred from `x`.",64,N],[13,"Selectif",E,"`a = selectif cc, flags, x, y`. (IntSelect)",64,N],[13,"Copy",E,"`a = copy x`. (Unary) Type inferred from `x`.",64,N],[13,"Spill",E,"`a = spill x`. (Unary) Type inferred from `x`.",64,N],[13,"Fill",E,"`a = fill x`. (Unary) Type inferred from `x`.",64,N],[13,"Regmove",E,"`regmove x, src, dst`. (RegMove) Type inferred from `x`.",64,N],[13,R[4978],E,"`copy_special src, dst`. (CopySpecial)",64,N],[13,"CopyNop",E,"`a = copy_nop x`. (Unary) Type inferred from `x`.",64,N],[13,"AdjustSpDown",E,"`adjust_sp_down delta`. (Unary) Type inferred from `delta`.",64,N],[13,"AdjustSpUpImm",E,"`adjust_sp_up_imm Offset`. (UnaryImm)",64,N],[13,"AdjustSpDownImm",E,"`adjust_sp_down_imm Offset`. (UnaryImm)",64,N],[13,"IfcmpSp",E,"`f = ifcmp_sp addr`. (Unary) Type inferred from `addr`.",64,N],[13,"Regspill",E,"`regspill x, src, SS`. (RegSpill) Type inferred from `x`.",64,N],[13,"Regfill",E,"`regfill x, SS, dst`. (RegFill) Type inferred from `x`.",64,N],[13,"Vsplit",E,"`lo, hi = vsplit x`. (Unary) Type inferred from `x`.",64,N],[13,"Vconcat",E,"`a = vconcat x, y`. (Binary) Type inferred from `x`.",64,N],[13,"Vselect",E,"`a = vselect c, x, y`. (Ternary) Type inferred from `x`.",64,N],[13,"Splat",E,"`a = splat x`. (Unary)",64,N],[13,"Insertlane",E,"`a = insertlane x, Idx, y`. (InsertLane) Type inferred…",64,N],[13,"Extractlane",E,"`a = extractlane x, Idx`. (ExtractLane) Type inferred from…",64,N],[13,"Icmp",E,"`a = icmp Cond, x, y`. (IntCompare) Type inferred from `x`.",64,N],[13,"IcmpImm",E,"`a = icmp_imm Cond, x, Y`. (IntCompareImm) Type inferred…",64,N],[13,"Ifcmp",E,"`f = ifcmp x, y`. (Binary) Type inferred from `x`.",64,N],[13,"IfcmpImm",E,"`f = ifcmp_imm x, Y`. (BinaryImm) Type inferred from `x`.",64,N],[13,"Iadd",E,"`a = iadd x, y`. (Binary) Type inferred from `x`.",64,N],[13,"Isub",E,"`a = isub x, y`. (Binary) Type inferred from `x`.",64,N],[13,"Imul",E,"`a = imul x, y`. (Binary) Type inferred from `x`.",64,N],[13,"Umulhi",E,"`a = umulhi x, y`. (Binary) Type inferred from `x`.",64,N],[13,"Smulhi",E,"`a = smulhi x, y`. (Binary) Type inferred from `x`.",64,N],[13,"Udiv",E,"`a = udiv x, y`. (Binary) Type inferred from `x`.",64,N],[13,"Sdiv",E,"`a = sdiv x, y`. (Binary) Type inferred from `x`.",64,N],[13,"Urem",E,"`a = urem x, y`. (Binary) Type inferred from `x`.",64,N],[13,"Srem",E,"`a = srem x, y`. (Binary) Type inferred from `x`.",64,N],[13,"IaddImm",E,"`a = iadd_imm x, Y`. (BinaryImm) Type inferred from `x`.",64,N],[13,"ImulImm",E,"`a = imul_imm x, Y`. (BinaryImm) Type inferred from `x`.",64,N],[13,"UdivImm",E,"`a = udiv_imm x, Y`. (BinaryImm) Type inferred from `x`.",64,N],[13,"SdivImm",E,"`a = sdiv_imm x, Y`. (BinaryImm) Type inferred from `x`.",64,N],[13,"UremImm",E,"`a = urem_imm x, Y`. (BinaryImm) Type inferred from `x`.",64,N],[13,"SremImm",E,"`a = srem_imm x, Y`. (BinaryImm) Type inferred from `x`.",64,N],[13,"IrsubImm",E,"`a = irsub_imm x, Y`. (BinaryImm) Type inferred from `x`.",64,N],[13,"IaddCin",E,"`a = iadd_cin x, y, c_in`. (Ternary) Type inferred from `y`.",64,N],[13,"IaddCout",E,"`a, c_out = iadd_cout x, y`. (Binary) Type inferred from…",64,N],[13,"IaddCarry",E,"`a, c_out = iadd_carry x, y, c_in`. (Ternary) Type…",64,N],[13,"IsubBin",E,"`a = isub_bin x, y, b_in`. (Ternary) Type inferred from `y`.",64,N],[13,"IsubBout",E,"`a, b_out = isub_bout x, y`. (Binary) Type inferred from…",64,N],[13,"IsubBorrow",E,"`a, b_out = isub_borrow x, y, b_in`. (Ternary) Type…",64,N],[13,"Band",E,"`a = band x, y`. (Binary) Type inferred from `x`.",64,N],[13,"Bor",E,"`a = bor x, y`. (Binary) Type inferred from `x`.",64,N],[13,"Bxor",E,"`a = bxor x, y`. (Binary) Type inferred from `x`.",64,N],[13,"Bnot",E,"`a = bnot x`. (Unary) Type inferred from `x`.",64,N],[13,"BandNot",E,"`a = band_not x, y`. (Binary) Type inferred from `x`.",64,N],[13,"BorNot",E,"`a = bor_not x, y`. (Binary) Type inferred from `x`.",64,N],[13,"BxorNot",E,"`a = bxor_not x, y`. (Binary) Type inferred from `x`.",64,N],[13,"BandImm",E,"`a = band_imm x, Y`. (BinaryImm) Type inferred from `x`.",64,N],[13,"BorImm",E,"`a = bor_imm x, Y`. (BinaryImm) Type inferred from `x`.",64,N],[13,"BxorImm",E,"`a = bxor_imm x, Y`. (BinaryImm) Type inferred from `x`.",64,N],[13,"Rotl",E,"`a = rotl x, y`. (Binary) Type inferred from `x`.",64,N],[13,"Rotr",E,"`a = rotr x, y`. (Binary) Type inferred from `x`.",64,N],[13,"RotlImm",E,"`a = rotl_imm x, Y`. (BinaryImm) Type inferred from `x`.",64,N],[13,"RotrImm",E,"`a = rotr_imm x, Y`. (BinaryImm) Type inferred from `x`.",64,N],[13,"Ishl",E,"`a = ishl x, y`. (Binary) Type inferred from `x`.",64,N],[13,"Ushr",E,"`a = ushr x, y`. (Binary) Type inferred from `x`.",64,N],[13,"Sshr",E,"`a = sshr x, y`. (Binary) Type inferred from `x`.",64,N],[13,"IshlImm",E,"`a = ishl_imm x, Y`. (BinaryImm) Type inferred from `x`.",64,N],[13,"UshrImm",E,"`a = ushr_imm x, Y`. (BinaryImm) Type inferred from `x`.",64,N],[13,"SshrImm",E,"`a = sshr_imm x, Y`. (BinaryImm) Type inferred from `x`.",64,N],[13,"Bitrev",E,"`a = bitrev x`. (Unary) Type inferred from `x`.",64,N],[13,"Clz",E,"`a = clz x`. (Unary) Type inferred from `x`.",64,N],[13,"Cls",E,"`a = cls x`. (Unary) Type inferred from `x`.",64,N],[13,"Ctz",E,"`a = ctz x`. (Unary) Type inferred from `x`.",64,N],[13,"Popcnt",E,"`a = popcnt x`. (Unary) Type inferred from `x`.",64,N],[13,"Fcmp",E,"`a = fcmp Cond, x, y`. (FloatCompare) Type inferred from…",64,N],[13,"Ffcmp",E,"`f = ffcmp x, y`. (Binary) Type inferred from `x`.",64,N],[13,"Fadd",E,"`a = fadd x, y`. (Binary) Type inferred from `x`.",64,N],[13,"Fsub",E,"`a = fsub x, y`. (Binary) Type inferred from `x`.",64,N],[13,"Fmul",E,"`a = fmul x, y`. (Binary) Type inferred from `x`.",64,N],[13,"Fdiv",E,"`a = fdiv x, y`. (Binary) Type inferred from `x`.",64,N],[13,"Sqrt",E,"`a = sqrt x`. (Unary) Type inferred from `x`.",64,N],[13,"Fma",E,"`a = fma x, y, z`. (Ternary) Type inferred from `y`.",64,N],[13,"Fneg",E,"`a = fneg x`. (Unary) Type inferred from `x`.",64,N],[13,"Fabs",E,"`a = fabs x`. (Unary) Type inferred from `x`.",64,N],[13,"Fcopysign",E,"`a = fcopysign x, y`. (Binary) Type inferred from `x`.",64,N],[13,"Fmin",E,"`a = fmin x, y`. (Binary) Type inferred from `x`.",64,N],[13,"Fmax",E,"`a = fmax x, y`. (Binary) Type inferred from `x`.",64,N],[13,"Ceil",E,"`a = ceil x`. (Unary) Type inferred from `x`.",64,N],[13,"Floor",E,"`a = floor x`. (Unary) Type inferred from `x`.",64,N],[13,"Trunc",E,"`a = trunc x`. (Unary) Type inferred from `x`.",64,N],[13,"Nearest",E,"`a = nearest x`. (Unary) Type inferred from `x`.",64,N],[13,"Trueif",E,"`a = trueif Cond, f`. (IntCond)",64,N],[13,"Trueff",E,"`a = trueff Cond, f`. (FloatCond)",64,N],[13,"Bitcast",E,"`a = bitcast x`. (Unary)",64,N],[13,"Breduce",E,"`a = breduce x`. (Unary)",64,N],[13,"Bextend",E,"`a = bextend x`. (Unary)",64,N],[13,"Bint",E,"`a = bint x`. (Unary)",64,N],[13,"Bmask",E,"`a = bmask x`. (Unary)",64,N],[13,"Ireduce",E,"`a = ireduce x`. (Unary)",64,N],[13,"Uextend",E,"`a = uextend x`. (Unary)",64,N],[13,"Sextend",E,"`a = sextend x`. (Unary)",64,N],[13,"Fpromote",E,"`a = fpromote x`. (Unary)",64,N],[13,"Fdemote",E,"`a = fdemote x`. (Unary)",64,N],[13,"FcvtToUint",E,"`a = fcvt_to_uint x`. (Unary)",64,N],[13,"FcvtToUintSat",E,"`a = fcvt_to_uint_sat x`. (Unary)",64,N],[13,"FcvtToSint",E,"`a = fcvt_to_sint x`. (Unary)",64,N],[13,"FcvtToSintSat",E,"`a = fcvt_to_sint_sat x`. (Unary)",64,N],[13,"FcvtFromUint",E,"`a = fcvt_from_uint x`. (Unary)",64,N],[13,"FcvtFromSint",E,"`a = fcvt_from_sint x`. (Unary)",64,N],[13,"Isplit",E,"`lo, hi = isplit x`. (Unary) Type inferred from `x`.",64,N],[13,"Iconcat",E,"`a = iconcat lo, hi`. (Binary) Type inferred from `lo`.",64,N],[13,"X86Udivmodx",E,"`q, r = x86_udivmodx nlo, nhi, d`. (Ternary) Type inferred…",64,N],[13,"X86Sdivmodx",E,"`q, r = x86_sdivmodx nlo, nhi, d`. (Ternary) Type inferred…",64,N],[13,"X86Umulx",E,"`resLo, resHi = x86_umulx argL, argR`. (Binary) Type…",64,N],[13,"X86Smulx",E,"`resLo, resHi = x86_smulx argL, argR`. (Binary) Type…",64,N],[13,"X86Cvtt2si",E,"`a = x86_cvtt2si x`. (Unary)",64,N],[13,"X86Fmin",E,"`a = x86_fmin x, y`. (Binary) Type inferred from `x`.",64,N],[13,"X86Fmax",E,"`a = x86_fmax x, y`. (Binary) Type inferred from `x`.",64,N],[13,"X86Push",E,"`x86_push x`. (Unary) Type inferred from `x`.",64,N],[13,"X86Pop",E,"`x = x86_pop`. (NullAry)",64,N],[13,"X86Bsr",E,"`y, rflags = x86_bsr x`. (Unary) Type inferred from `x`.",64,N],[13,"X86Bsf",E,"`y, rflags = x86_bsf x`. (Unary) Type inferred from `x`.",64,N],[4,"BranchInfo",E,"Information about branch and jump instructions.",N,N],[13,"NotABranch",E,"This is not a branch or jump instruction. This instruction…",65,N],[13,"SingleDest",E,"This is a branch or jump to a single destination EBB,…",65,N],[13,"Table",E,"This is a jump table branch which can have many…",65,N],[4,"CallInfo",E,"Information about call instructions.",N,N],[13,"NotACall",E,"This is not a call instruction.",66,N],[13,"Direct",E,"This is a direct call to an external function declared in…",66,N],[13,"Indirect",E,"This is an indirect call with the specified signature. See…",66,N],[4,R[5387],E,"The type constraint on a value argument once the…",N,N],[13,"Bound",E,"The operand is bound to a known type.",67,N],[13,"Free",E,"The operand type can vary freely within the given set.",67,N],[6,"ValueList",E,"Some instructions use an external list of argument values…",N,N],[6,"ValueListPool",E,"Memory pool for holding value lists. See `ValueList`.",N,N],[11,"opcode",E,"Get the opcode of this instruction.",63,[[["self"]],["opcode"]]],[11,"typevar_operand",E,"Get the controlling type variable operand.",63,[[["self"],[R[4982]]],[["value"],[R[23],["value"]]]]],[11,R[734],E,"Get the value arguments to this instruction.",63,[[["self"],[R[4982]]]]],[11,"arguments_mut",E,"Get mutable references to the value arguments to this…",63,[[[R[4982]],["self"]]]],[11,"take_value_list",E,"Take out the value list with all the value arguments and…",63,[[["self"]],[[R[4983]],[R[23],[R[4983]]]]]],[11,"put_value_list",E,"Put back a value list.",63,[[["self"],[R[4983]]]]],[11,"eq",E,"Compare two `InstructionData` for equality.",63,[[["self"],[R[4982]]],["bool"]]],[11,"hash",E,"Hash an `InstructionData`.",63,[[["self"],["h"],[R[4982]]]]],[11,"is_terminator",E,"True for instructions that terminate the EBB",64,[[],["bool"]]],[11,"is_branch",E,"True for all branch or jump instructions.",64,[[],["bool"]]],[11,"is_indirect_branch",E,"True for all indirect branch or jump instructions.",64,[[],["bool"]]],[11,"is_call",E,"Is this a call instruction?",64,[[],["bool"]]],[11,"is_return",E,"Is this a return instruction?",64,[[],["bool"]]],[11,"is_ghost",E,"Is this a ghost instruction?",64,[[],["bool"]]],[11,"can_load",E,"Can this instruction read from memory?",64,[[],["bool"]]],[11,"can_store",E,"Can this instruction write to memory?",64,[[],["bool"]]],[11,"can_trap",E,"Can this instruction cause a trap?",64,[[],["bool"]]],[11,"other_side_effects",E,"Does this instruction have other side effects besides…",64,[[],["bool"]]],[11,"writes_cpu_flags",E,"Does this instruction write to CPU flags?",64,[[],["bool"]]],[11,"format",E,"Get the instruction format for this opcode.",64,[[],[R[5130]]]],[11,R[5058],E,"Get the constraint descriptor for this opcode. Panic if…",64,[[],[R[5144]]]],[11,"new",E,"Create an empty argument list.",68,[[],["self"]]],[11,"push",E,"Add an argument to the end.",68,[[["self"],["value"]]]],[11,R[25],E,"Check if the list is empty.",68,[[["self"]],["bool"]]],[11,"into_value_list",E,"Convert this to a value list in `pool` with `fixed`…",68,[[[R[4982]]],[R[4983]]]],[11,R[4984],E,"Return information about the destination of a branch or…",63,[[["self"],[R[4982]]],["branchinfo"]]],[11,"branch_destination",E,"Get the single destination of this branch instruction, if…",63,[[["self"]],[[R[23],["ebb"]],["ebb"]]]],[11,"branch_destination_mut",E,"Get a mutable reference to the single destination of this…",63,[[["self"]],[["ebb"],[R[23],["ebb"]]]]],[11,"analyze_call",E,"Return information about a call instruction.",63,[[["self"],[R[4982]]],["callinfo"]]],[11,"use_typevar_operand",E,"Can the controlling type variable for this opcode be…",69,[[],["bool"]]],[11,"requires_typevar_operand",E,"Is it necessary to look at the designated value input…",69,[[],["bool"]]],[11,"num_fixed_results",E,"Get the number of fixed result values produced by this…",69,[[],["usize"]]],[11,"num_fixed_value_arguments",E,"Get the number of fixed input values required by this…",69,[[],["usize"]]],[11,"result_type",E,"Get the value type of result number `n`, having resolved…",69,[[["usize"],["type"]],["type"]]],[11,"value_argument_constraint",E,"Get the value type of input value number `n`, having…",69,[[["usize"],["type"]],[R[5131]]]],[11,"ctrl_typeset",E,"Get the typeset of allowed types for the controlling type…",69,[[],[[R[23],[R[4985]]],[R[4985]]]]],[11,"is_polymorphic",E,"Is this instruction polymorphic?",69,[[],["bool"]]],[11,R[1285],E,"Does `typ` belong to this set?",61,[[["type"]],["bool"]]],[11,"example",E,"Get an example member of this type set.",61,[[],["type"]]],[0,R[4986],R[4934],"Jump table representation.",N,N],[3,R[5390],R[5109],"Contents of a jump table.",N,N],[11,"new",E,"Create a new empty jump table.",70,[[],["self"]]],[11,R[115],E,"Create a new empty jump table with the specified capacity.",70,[[["usize"]],["self"]]],[11,"len",E,"Get the number of table entries.",70,[[["self"]],["usize"]]],[11,"push_entry",E,"Append a table entry.",70,[[["self"],["ebb"]]]],[11,"branches_to",E,"Checks if any of the entries branch to `ebb`.",70,[[["self"],["ebb"]],["bool"]]],[11,R[44],E,"Access the whole table as a slice.",70,[[["self"]]]],[11,R[74],E,"Access the whole table as a mutable slice.",70,[[["self"]]]],[11,"iter",E,"Returns an iterator over the table.",70,[[["self"]],[["ebb"],["iter",["ebb"]]]]],[11,R[31],E,"Returns an iterator that allows modifying each value.",70,[[["self"]],[["ebb"],[R[24],["ebb"]]]]],[0,"layout",R[4934],"Function layout.",N,N],[3,"Layout",R[5110],"The `Layout` struct determines the layout of EBBs and…",N,N],[3,"Ebbs",E,"Iterate over EBBs in layout order. See `Layout::ebbs()`.",N,N],[3,"Insts",E,"Iterate over instructions in an EBB in layout order. See…",N,N],[11,"new",E,"Create a new empty `Layout`.",71,[[],["self"]]],[11,"clear",E,"Clear the layout.",71,[[["self"]]]],[11,"is_ebb_inserted",E,"Is `ebb` currently part of the layout?",71,[[["self"],["ebb"]],["bool"]]],[11,"append_ebb",E,"Insert `ebb` as the last EBB in the layout.",71,[[["self"],["ebb"]]]],[11,"insert_ebb",E,"Insert `ebb` in the layout before the existing EBB `before`.",71,[[["self"],["ebb"]]]],[11,"insert_ebb_after",E,"Insert `ebb` in the layout after the existing EBB `after`.",71,[[["self"],["ebb"]]]],[11,"remove_ebb",E,"Remove `ebb` from the layout.",71,[[["self"],["ebb"]]]],[11,"ebbs",E,"Return an iterator over all EBBs in layout order.",71,[[["self"]],["ebbs"]]],[11,"entry_block",E,"Get the function's entry block. This is simply the first…",71,[[["self"]],[[R[23],["ebb"]],["ebb"]]]],[11,"last_ebb",E,"Get the last EBB in the layout.",71,[[["self"]],[[R[23],["ebb"]],["ebb"]]]],[11,"prev_ebb",E,"Get the block preceding `ebb` in the layout order.",71,[[["self"],["ebb"]],[[R[23],["ebb"]],["ebb"]]]],[11,"next_ebb",E,"Get the block following `ebb` in the layout order.",71,[[["self"],["ebb"]],[[R[23],["ebb"]],["ebb"]]]],[11,"inst_ebb",E,"Get the EBB containing `inst`, or `None` if `inst` is not…",71,[[["self"],["inst"]],[[R[23],["ebb"]],["ebb"]]]],[11,"pp_ebb",E,"Get the EBB containing the program point `pp`. Panic if…",71,[[["self"],["pp"]],["ebb"]]],[11,"append_inst",E,"Append `inst` to the end of `ebb`.",71,[[["self"],["ebb"],["inst"]]]],[11,"first_inst",E,"Fetch an ebb's first instruction.",71,[[["self"],["ebb"]],[[R[23],["inst"]],["inst"]]]],[11,"last_inst",E,"Fetch an ebb's last instruction.",71,[[["self"],["ebb"]],[[R[23],["inst"]],["inst"]]]],[11,"next_inst",E,"Fetch the instruction following `inst`.",71,[[["self"],["inst"]],[[R[23],["inst"]],["inst"]]]],[11,"prev_inst",E,"Fetch the instruction preceding `inst`.",71,[[["self"],["inst"]],[[R[23],["inst"]],["inst"]]]],[11,R[4987],E,"Insert `inst` before the instruction `before` in the same…",71,[[["self"],["inst"]]]],[11,R[4988],E,"Remove `inst` from the layout.",71,[[["self"],["inst"]]]],[11,"ebb_insts",E,"Iterate over the instructions in `ebb` in layout order.",71,[[["self"],["ebb"]],["insts"]]],[11,"split_ebb",E,"Split the EBB containing `before` in two.",71,[[["self"],["inst"],["ebb"]]]],[11,"for_inst",R[4934],"Get the well-known library call name to use as a…",31,[[["opcode"],["type"]],[R[23]]]],[11,"new",E,"Create a new empty set of flags.",72,[[],["self"]]],[11,"trusted",E,"Create a set of flags representing an access from a…",72,[[],["self"]]],[11,"set_by_name",E,"Set a flag bit by name.",72,[[["self"],["str"]],["bool"]]],[11,"notrap",E,"Test if the `notrap` flag is set.",72,[[],["bool"]]],[11,"set_notrap",E,"Set the `notrap` flag.",72,[[["self"]]]],[11,"aligned",E,"Test if the `aligned` flag is set.",72,[[],["bool"]]],[11,"set_aligned",E,"Set the `aligned` flag.",72,[[["self"]]]],[11,"readonly",E,"Test if the `readonly` flag is set.",72,[[],["bool"]]],[11,"set_readonly",E,"Set the `readonly` flag.",72,[[["self"]]]],[11,R[4989],E,"Get the instruction we know is inside.",32,[[],["inst"]]],[11,"new",E,"Create a new source location with the given bits.",73,[[["u32"]],["self"]]],[11,"is_default",E,"Is this the default source location?",73,[[],["bool"]]],[11,"bits",E,"Read the bits of this source location.",73,[[],["u32"]]],[0,R[4991],E,"Stack slots.",N,N],[3,R[5391],R[5111],"Contents of a stack slot.",N,N],[12,"kind",E,"The kind of stack slot.",74,N],[12,"size",E,"Size of stack slot in bytes.",74,N],[12,"offset",E,"Offset of stack slot relative to the stack pointer in the…",74,N],[3,"StackSlots",E,"Stack frame manager.",N,N],[12,"frame_size",E,"The total size of the stack frame.",75,N],[4,R[5392],E,"The kind of a stack slot.",N,N],[13,"SpillSlot",E,"A spill slot. This is a stack slot created by the register…",76,N],[13,"ExplicitSlot",E,"An explicit stack slot. This is a chunk of stack memory…",76,N],[13,"IncomingArg",E,"An incoming function argument.",76,N],[13,"OutgoingArg",E,"An outgoing function argument.",76,N],[13,"EmergencySlot",E,"An emergency spill slot.",76,N],[6,"StackSize",E,"The size of an object on the stack, or the size of a stack…",N,N],[6,"StackOffset",E,"A stack offset.",N,N],[11,"new",E,"Create a stack slot with the specified byte size.",74,[[[R[5134]],[R[5433]]],["self"]]],[11,"alignment",E,"Get the alignment in bytes of this stack slot given the…",74,[[["self"],[R[5433]]],[R[5433]]]],[11,"new",E,"Create an empty stack slot manager.",75,[[],["self"]]],[11,"clear",E,"Clear out everything.",75,[[["self"]]]],[11,"push",E,"Allocate a new stack slot.",75,[[["self"],[R[4990]]],[R[4991]]]],[11,R[27],E,"Check if `ss` is a valid stack slot reference.",75,[[["self"],[R[4991]]],["bool"]]],[11,"set_offset",E,"Set the offset of a stack slot.",75,[[["self"],[R[4991]],[R[4993]]]]],[11,"iter",E,R[4992],75,[[["self"]],[["iter",[R[4991],R[4990]]],[R[4991]],[R[4990]]]]],[11,R[31],E,"Get an iterator over all the stack slot keys, mutable…",75,[[["self"]],[[R[24],[R[4991],R[4990]]],[R[4991]],[R[4990]]]]],[11,"values",E,"Get an iterator over all the stack slot records.",75,[[["self"]],[["iter",[R[4990]]],[R[4990]]]]],[11,R[35],E,"Get an iterator over all the stack slot records, mutable…",75,[[["self"]],[[R[4990]],[R[24],[R[4990]]]]]],[11,"keys",E,R[4992],75,[[["self"]],[["keys",[R[4991]]],[R[4991]]]]],[11,"next_key",E,"Get a reference to the next stack slot that would be…",75,[[["self"]],[R[4991]]]],[11,"make_spill_slot",E,"Create a new spill slot for spilling values of type `ty`.",75,[[["self"],["type"]],[R[4991]]]],[11,"make_incoming_arg",E,"Create a stack slot representing an incoming function…",75,[[["self"],["type"],[R[4993]]],[R[4991]]]],[11,"get_outgoing_arg",E,"Get a stack slot representing an outgoing argument.",75,[[["self"],["type"],[R[4993]]],[R[4991]]]],[11,"get_emergency_slot",E,"Get an emergency spill slot that can be used to store a…",75,[[["self"],["type"]],[R[4991]]]],[0,"types",R[4934],"Common types for the Cranelift code generator.",N,N],[3,"Type",R[5112],"The type of an SSA value.",N,N],[17,"INVALID",E,"Not a valid type. Can't be loaded or stored. Can't be part…",N,N],[17,"IFLAGS",E,"CPU flags representing the result of an integer…",N,N],[17,"FFLAGS",E,"CPU flags representing the result of a floating point…",N,N],[17,"B1",E,"A boolean type with 1 bits.",N,N],[17,"B8",E,"A boolean type with 8 bits.",N,N],[17,"B16",E,"A boolean type with 16 bits.",N,N],[17,"B32",E,"A boolean type with 32 bits.",N,N],[17,"B64",E,"A boolean type with 64 bits.",N,N],[17,"I8",E,"An integer type with 8 bits. WARNING: arithmetic on 8bit…",N,N],[17,"I16",E,"An integer type with 16 bits. WARNING: arithmetic on 16bit…",N,N],[17,"I32",E,"An integer type with 32 bits.",N,N],[17,"I64",E,"An integer type with 64 bits.",N,N],[17,"F32",E,"A 32-bit floating point type represented in the IEEE…",N,N],[17,"F64",E,"A 64-bit floating point type represented in the IEEE…",N,N],[17,"B8X8",E,"A SIMD vector with 8 lanes containing a `b8` each.",N,N],[17,"B16X4",E,"A SIMD vector with 4 lanes containing a `b16` each.",N,N],[17,"B32X2",E,"A SIMD vector with 2 lanes containing a `b32` each.",N,N],[17,"I8X8",E,"A SIMD vector with 8 lanes containing a `i8` each.",N,N],[17,"I16X4",E,"A SIMD vector with 4 lanes containing a `i16` each.",N,N],[17,"I32X2",E,"A SIMD vector with 2 lanes containing a `i32` each.",N,N],[17,"F32X2",E,"A SIMD vector with 2 lanes containing a `f32` each.",N,N],[17,"B8X16",E,"A SIMD vector with 16 lanes containing a `b8` each.",N,N],[17,"B16X8",E,"A SIMD vector with 8 lanes containing a `b16` each.",N,N],[17,"B32X4",E,"A SIMD vector with 4 lanes containing a `b32` each.",N,N],[17,"B64X2",E,"A SIMD vector with 2 lanes containing a `b64` each.",N,N],[17,"I8X16",E,"A SIMD vector with 16 lanes containing a `i8` each.",N,N],[17,"I16X8",E,"A SIMD vector with 8 lanes containing a `i16` each.",N,N],[17,"I32X4",E,"A SIMD vector with 4 lanes containing a `i32` each.",N,N],[17,"I64X2",E,"A SIMD vector with 2 lanes containing a `i64` each.",N,N],[17,"F32X4",E,"A SIMD vector with 4 lanes containing a `f32` each.",N,N],[17,"F64X2",E,"A SIMD vector with 2 lanes containing a `f64` each.",N,N],[17,"B8X32",E,"A SIMD vector with 32 lanes containing a `b8` each.",N,N],[17,"B16X16",E,"A SIMD vector with 16 lanes containing a `b16` each.",N,N],[17,"B32X8",E,"A SIMD vector with 8 lanes containing a `b32` each.",N,N],[17,"B64X4",E,"A SIMD vector with 4 lanes containing a `b64` each.",N,N],[17,"I8X32",E,"A SIMD vector with 32 lanes containing a `i8` each.",N,N],[17,"I16X16",E,"A SIMD vector with 16 lanes containing a `i16` each.",N,N],[17,"I32X8",E,"A SIMD vector with 8 lanes containing a `i32` each.",N,N],[17,"I64X4",E,"A SIMD vector with 4 lanes containing a `i64` each.",N,N],[17,"F32X8",E,"A SIMD vector with 8 lanes containing a `f32` each.",N,N],[17,"F64X4",E,"A SIMD vector with 4 lanes containing a `f64` each.",N,N],[17,"B8X64",E,"A SIMD vector with 64 lanes containing a `b8` each.",N,N],[17,"B16X32",E,"A SIMD vector with 32 lanes containing a `b16` each.",N,N],[17,"B32X16",E,"A SIMD vector with 16 lanes containing a `b32` each.",N,N],[17,"B64X8",E,"A SIMD vector with 8 lanes containing a `b64` each.",N,N],[17,"I8X64",E,"A SIMD vector with 64 lanes containing a `i8` each.",N,N],[17,"I16X32",E,"A SIMD vector with 32 lanes containing a `i16` each.",N,N],[17,"I32X16",E,"A SIMD vector with 16 lanes containing a `i32` each.",N,N],[17,"I64X8",E,"A SIMD vector with 8 lanes containing a `i64` each.",N,N],[17,"F32X16",E,"A SIMD vector with 16 lanes containing a `f32` each.",N,N],[17,"F64X8",E,"A SIMD vector with 8 lanes containing a `f64` each.",N,N],[11,"lane_type",E,"Get the lane type of this SIMD vector type.",77,[[],["self"]]],[11,"log2_lane_bits",E,"Get log_2 of the number of bits in a lane.",77,[[],["u8"]]],[11,"lane_bits",E,"Get the number of bits in a lane.",77,[[],["u8"]]],[11,"int",E,"Get an integer type with the requested number of bits.",77,[[["u16"]],[R[23]]]],[11,"as_bool_pedantic",E,R[4994],77,[[],["self"]]],[11,"as_bool",E,R[4994],77,[[],["self"]]],[11,"half_width",E,R[4994],77,[[],[R[23]]]],[11,"double_width",E,R[4994],77,[[],[R[23]]]],[11,"is_invalid",E,"Is this the INVALID type?",77,[[],["bool"]]],[11,"is_special",E,"Is this a special type?",77,[[],["bool"]]],[11,"is_lane",E,"Is this a lane type?",77,[[],["bool"]]],[11,"is_vector",E,"Is this a SIMD vector type?",77,[[],["bool"]]],[11,"is_bool",E,"Is this a scalar boolean type?",77,[[],["bool"]]],[11,"is_int",E,"Is this a scalar integer type?",77,[[],["bool"]]],[11,"is_float",E,"Is this a scalar floating point type?",77,[[],["bool"]]],[11,"is_flags",E,"Is this a CPU flags type?",77,[[],["bool"]]],[11,"log2_lane_count",E,"Get log_2 of the number of lanes in this SIMD vector type.",77,[[],["u8"]]],[11,"lane_count",E,"Get the number of lanes in this SIMD vector type.",77,[[],["u16"]]],[11,"bits",E,"Get the total number of bits used to represent this type.",77,[[],["u16"]]],[11,"bytes",E,"Get the number of bytes used to store this type in memory.",77,[[],["u32"]]],[11,"by",E,"Get a SIMD vector type with `n` times more lanes than this…",77,[[["u16"]],[R[23]]]],[11,"half_vector",E,"Get a SIMD vector with half the number of lanes.",77,[[],[R[23]]]],[11,"index",E,"Index of this type, for use with hash tables etc.",77,[[],["usize"]]],[11,"wider_or_equal",E,"True iff:",77,[[],["bool"]]],[11,"triple_pointer_type",E,"Return the pointer type for the given target triple.",77,[[["triple"]],["self"]]],[11,R[4995],R[4934],R[4996],35,[[],["bool"]]],[11,"unwrap_reg",E,"Get the register unit of this location, or panic.",35,[[],["regunit"]]],[11,"unwrap_stack",E,"Get the stack slot of this location, or panic.",35,[[],[R[4991]]]],[11,"display",E,"Return an object that can display this value location,…",35,[[["into",[R[23]]],[R[23],["reginfo"]]],["displayvalueloc"]]],[11,R[4995],E,R[4996],34,[[],["bool"]]],[11,"is_reg",E,"Is this a register location?",34,[[],["bool"]]],[11,"is_stack",E,"Is this a stack location?",34,[[],["bool"]]],[11,"display",E,"Return an object that can display this argument location,…",34,[[["into",[R[23]]],[R[23],["reginfo"]]],["displayargumentloc"]]],[6,"ValueLocations",E,"Map of value locations.",N,N],[6,"JumpTables",E,"Map of jump tables.",N,N],[6,"InstEncodings",E,"Map of instruction encodings.",N,N],[6,"EbbOffsets",E,"Code offsets for EBBs.",N,N],[6,"JumpTableOffsets",E,"Code offsets for Jump Tables.",N,N],[6,"SourceLocs",E,"Source locations for instructions.",N,N],[8,R[5393],E,"Convenience methods for building instructions.",N,N],[11,"jump",E,R[5151],78,[[["ebb"]],["inst"]]],[11,R[5152],E,R[5153],78,[[["ebb"]],["inst"]]],[11,"brz",E,R[5154],78,[[["ebb"],["value"]],["inst"]]],[11,"brnz",E,R[5155],78,[[["ebb"],["value"]],["inst"]]],[11,"br_icmp",E,R[5156],78,[[["intcc"],["ebb"],["into",["intcc"]],["value"]],["inst"]]],[11,"brif",E,R[5157],78,[[["intcc"],["ebb"],["into",["intcc"]],["value"]],["inst"]]],[11,"brff",E,R[5158],78,[[["ebb"],["floatcc"],["into",["floatcc"]],["value"]],["inst"]]],[11,"br_table",E,R[5159],78,[[["ebb"],[R[4986]],["value"]],["inst"]]],[11,R[5160],E,R[5161],78,[[["into",["uimm8"]],["uimm8"],[R[4986]],["type"],["value"]],["value"]]],[11,R[5162],E,R[5163],78,[[["type"],[R[4986]]],["value"]]],[11,R[5164],E,R[5165],78,[[[R[4986]],["value"]],["inst"]]],[11,"debugtrap",E,R[5166],78,[[],["inst"]]],[11,"trap",E,R[5167],78,[[["into",[R[4997]]],[R[4997]]],["inst"]]],[11,"trapz",E,R[5168],78,[[["into",[R[4997]]],[R[4997]],["value"]],["inst"]]],[11,"trapnz",E,R[5169],78,[[["into",[R[4997]]],[R[4997]],["value"]],["inst"]]],[11,"trapif",E,R[5170],78,[[["intcc"],["into",[R[4997]]],[R[4997]],["into",["intcc"]],["value"]],["inst"]]],[11,"trapff",E,R[5171],78,[[["into",[R[4997]]],["floatcc"],["into",["floatcc"]],[R[4997]],["value"]],["inst"]]],[11,"return_",E,R[5172],78,[[],["inst"]]],[11,R[5173],E,R[5174],78,[[],["inst"]]],[11,"call",E,R[5175],78,[[["funcref"]],["inst"]]],[11,R[5176],E,R[5177],78,[[["sigref"],["value"]],["inst"]]],[11,"func_addr",E,R[5178],78,[[["type"],["funcref"]],["value"]]],[11,"load",E,R[5179],78,[[[R[4998]],["into",[R[4999]]],["into",[R[4998]]],["type"],[R[4999]],["value"]],["value"]]],[11,R[5180],E,R[5181],78,[[[R[4998]],["into",[R[4999]]],["into",[R[4998]]],["type"],[R[4999]]],["value"]]],[11,"store",E,R[5182],78,[[[R[4998]],["into",[R[4999]]],["into",[R[4998]]],[R[4999]],["value"]],["inst"]]],[11,R[5183],E,R[5184],78,[[[R[4998]],["into",[R[4999]]],["into",[R[4998]]],[R[4999]],["value"]],["inst"]]],[11,"uload8",E,R[5185],78,[[[R[4998]],["into",[R[4999]]],["into",[R[4998]]],["type"],[R[4999]],["value"]],["value"]]],[11,R[5186],E,R[5187],78,[[[R[4998]],["into",[R[4999]]],["into",[R[4998]]],["type"],[R[4999]]],["value"]]],[11,"sload8",E,R[5188],78,[[[R[4998]],["into",[R[4999]]],["into",[R[4998]]],["type"],[R[4999]],["value"]],["value"]]],[11,R[5189],E,R[5190],78,[[[R[4998]],["into",[R[4999]]],["into",[R[4998]]],["type"],[R[4999]]],["value"]]],[11,"istore8",E,R[5191],78,[[[R[4998]],["into",[R[4999]]],["into",[R[4998]]],[R[4999]],["value"]],["inst"]]],[11,R[5192],E,R[5193],78,[[[R[4998]],["into",[R[4999]]],["into",[R[4998]]],[R[4999]],["value"]],["inst"]]],[11,"uload16",E,R[5194],78,[[[R[4998]],["into",[R[4999]]],["into",[R[4998]]],["type"],[R[4999]],["value"]],["value"]]],[11,R[5195],E,R[5196],78,[[[R[4998]],["into",[R[4999]]],["into",[R[4998]]],["type"],[R[4999]]],["value"]]],[11,"sload16",E,R[5197],78,[[[R[4998]],["into",[R[4999]]],["into",[R[4998]]],["type"],[R[4999]],["value"]],["value"]]],[11,R[5198],E,R[5199],78,[[[R[4998]],["into",[R[4999]]],["into",[R[4998]]],["type"],[R[4999]]],["value"]]],[11,"istore16",E,R[5200],78,[[[R[4998]],["into",[R[4999]]],["into",[R[4998]]],[R[4999]],["value"]],["inst"]]],[11,R[5201],E,R[5202],78,[[[R[4998]],["into",[R[4999]]],["into",[R[4998]]],[R[4999]],["value"]],["inst"]]],[11,"uload32",E,R[5203],78,[[[R[4998]],["into",[R[4999]]],["into",[R[4998]]],[R[4999]],["value"]],["value"]]],[11,R[5204],E,R[5205],78,[[[R[4998]],["into",[R[4999]]],["into",[R[4998]]],[R[4999]]],["value"]]],[11,"sload32",E,R[5206],78,[[[R[4998]],["into",[R[4999]]],["into",[R[4998]]],[R[4999]],["value"]],["value"]]],[11,R[5207],E,R[5208],78,[[[R[4998]],["into",[R[4999]]],["into",[R[4998]]],[R[4999]]],["value"]]],[11,"istore32",E,R[5209],78,[[[R[4998]],["into",[R[4999]]],["into",[R[4998]]],[R[4999]],["value"]],["inst"]]],[11,R[5210],E,R[5211],78,[[[R[4998]],["into",[R[4999]]],["into",[R[4998]]],[R[4999]],["value"]],["inst"]]],[11,"stack_load",E,R[5212],78,[[[R[4998]],["into",[R[4998]]],["type"],[R[4991]]],["value"]]],[11,R[5213],E,R[5214],78,[[[R[4998]],["into",[R[4998]]],[R[4991]],["value"]],["inst"]]],[11,"stack_addr",E,R[5215],78,[[[R[4998]],["into",[R[4998]]],["type"],[R[4991]]],["value"]]],[11,R[5000],E,R[5216],78,[[["type"],[R[5001]]],["value"]]],[11,R[5217],E,R[5218],78,[[["type"],[R[5001]]],["value"]]],[11,"heap_addr",E,R[5219],78,[[["uimm32"],["type"],["heap"],["into",["uimm32"]],["value"]],["value"]]],[11,"table_addr",E,R[5220],78,[[[R[4998]],["into",[R[4998]]],["type"],["table"],["value"]],["value"]]],[11,"iconst",E,R[5221],78,[[["type"],["into",["imm64"]],["imm64"]],["value"]]],[11,"f32const",E,R[5222],78,[[["ieee32"],["into",["ieee32"]]],["value"]]],[11,"f64const",E,R[5223],78,[[["ieee64"],["into",["ieee64"]]],["value"]]],[11,"bconst",E,R[5224],78,[[["type"],["into",["bool"]],["bool"]],["value"]]],[11,"nop",E,"`nop`",78,[[],["inst"]]],[11,"select",E,R[5225],78,[[["value"]],["value"]]],[11,"selectif",E,R[5226],78,[[["value"],["type"],["into",["intcc"]],["intcc"]],["value"]]],[11,"copy",E,R[5227],78,[[["value"]],["value"]]],[11,"spill",E,R[5228],78,[[["value"]],["value"]]],[11,"fill",E,R[5229],78,[[["value"]],["value"]]],[11,"regmove",E,R[5230],78,[[["regunit"],["into",["regunit"]],["value"]],["inst"]]],[11,R[5231],E,R[5232],78,[[["regunit"],["into",["regunit"]]],["inst"]]],[11,"copy_nop",E,R[5233],78,[[["value"]],["value"]]],[11,R[5234],E,R[5235],78,[[["value"]],["inst"]]],[11,R[5236],E,R[5237],78,[[["into",["imm64"]],["imm64"]],["inst"]]],[11,R[5238],E,R[5239],78,[[["into",["imm64"]],["imm64"]],["inst"]]],[11,"ifcmp_sp",E,R[5240],78,[[["value"]],["value"]]],[11,"regspill",E,R[5241],78,[[["regunit"],[R[4991]],["into",["regunit"]],["value"]],["inst"]]],[11,"regfill",E,R[5242],78,[[["regunit"],[R[4991]],["into",["regunit"]],["value"]],["inst"]]],[11,"vsplit",E,R[5243],78,[[["value"]]]],[11,"vconcat",E,R[5244],78,[[["value"]],["value"]]],[11,"vselect",E,R[5245],78,[[["value"]],["value"]]],[11,"splat",E,R[5246],78,[[["type"],["value"]],["value"]]],[11,"insertlane",E,R[5247],78,[[["into",["uimm8"]],["uimm8"],["value"]],["value"]]],[11,R[5248],E,R[5249],78,[[["into",["uimm8"]],["uimm8"],["value"]],["value"]]],[11,"icmp",E,R[5250],78,[[["intcc"],["into",["intcc"]],["value"]],["value"]]],[11,"icmp_imm",E,R[5251],78,[[["intcc"],["imm64"],["into",["intcc"]],["into",["imm64"]],["value"]],["value"]]],[11,"ifcmp",E,R[5252],78,[[["value"]],["value"]]],[11,"ifcmp_imm",E,R[5253],78,[[["into",["imm64"]],["imm64"],["value"]],["value"]]],[11,"iadd",E,R[5254],78,[[["value"]],["value"]]],[11,"isub",E,R[5255],78,[[["value"]],["value"]]],[11,"imul",E,R[5256],78,[[["value"]],["value"]]],[11,"umulhi",E,R[5257],78,[[["value"]],["value"]]],[11,"smulhi",E,R[5258],78,[[["value"]],["value"]]],[11,"udiv",E,R[5259],78,[[["value"]],["value"]]],[11,"sdiv",E,R[5260],78,[[["value"]],["value"]]],[11,"urem",E,R[5261],78,[[["value"]],["value"]]],[11,"srem",E,R[5262],78,[[["value"]],["value"]]],[11,"iadd_imm",E,R[5263],78,[[["into",["imm64"]],["imm64"],["value"]],["value"]]],[11,"imul_imm",E,R[5264],78,[[["into",["imm64"]],["imm64"],["value"]],["value"]]],[11,"udiv_imm",E,R[5265],78,[[["into",["imm64"]],["imm64"],["value"]],["value"]]],[11,"sdiv_imm",E,R[5266],78,[[["into",["imm64"]],["imm64"],["value"]],["value"]]],[11,"urem_imm",E,R[5267],78,[[["into",["imm64"]],["imm64"],["value"]],["value"]]],[11,"srem_imm",E,R[5268],78,[[["into",["imm64"]],["imm64"],["value"]],["value"]]],[11,"irsub_imm",E,R[5269],78,[[["into",["imm64"]],["imm64"],["value"]],["value"]]],[11,"iadd_cin",E,R[5270],78,[[["value"]],["value"]]],[11,"iadd_cout",E,R[5271],78,[[["value"]]]],[11,"iadd_carry",E,R[5272],78,[[["value"]]]],[11,"isub_bin",E,R[5273],78,[[["value"]],["value"]]],[11,"isub_bout",E,R[5274],78,[[["value"]]]],[11,R[5275],E,R[5276],78,[[["value"]]]],[11,"band",E,R[5277],78,[[["value"]],["value"]]],[11,"bor",E,R[5278],78,[[["value"]],["value"]]],[11,"bxor",E,R[5279],78,[[["value"]],["value"]]],[11,"bnot",E,R[5280],78,[[["value"]],["value"]]],[11,"band_not",E,R[5281],78,[[["value"]],["value"]]],[11,"bor_not",E,R[5282],78,[[["value"]],["value"]]],[11,"bxor_not",E,R[5283],78,[[["value"]],["value"]]],[11,"band_imm",E,R[5284],78,[[["into",["imm64"]],["imm64"],["value"]],["value"]]],[11,"bor_imm",E,R[5285],78,[[["into",["imm64"]],["imm64"],["value"]],["value"]]],[11,"bxor_imm",E,R[5286],78,[[["into",["imm64"]],["imm64"],["value"]],["value"]]],[11,"rotl",E,R[5287],78,[[["value"]],["value"]]],[11,"rotr",E,R[5288],78,[[["value"]],["value"]]],[11,"rotl_imm",E,R[5289],78,[[["into",["imm64"]],["imm64"],["value"]],["value"]]],[11,"rotr_imm",E,R[5290],78,[[["into",["imm64"]],["imm64"],["value"]],["value"]]],[11,"ishl",E,R[5291],78,[[["value"]],["value"]]],[11,"ushr",E,R[5292],78,[[["value"]],["value"]]],[11,"sshr",E,R[5293],78,[[["value"]],["value"]]],[11,"ishl_imm",E,R[5294],78,[[["into",["imm64"]],["imm64"],["value"]],["value"]]],[11,"ushr_imm",E,R[5295],78,[[["into",["imm64"]],["imm64"],["value"]],["value"]]],[11,"sshr_imm",E,R[5296],78,[[["into",["imm64"]],["imm64"],["value"]],["value"]]],[11,"bitrev",E,R[5297],78,[[["value"]],["value"]]],[11,"clz",E,R[5298],78,[[["value"]],["value"]]],[11,"cls",E,R[5299],78,[[["value"]],["value"]]],[11,"ctz",E,R[5300],78,[[["value"]],["value"]]],[11,"popcnt",E,R[5301],78,[[["value"]],["value"]]],[11,"fcmp",E,R[5302],78,[[["floatcc"],["into",["floatcc"]],["value"]],["value"]]],[11,"ffcmp",E,R[5303],78,[[["value"]],["value"]]],[11,"fadd",E,R[5304],78,[[["value"]],["value"]]],[11,"fsub",E,R[5305],78,[[["value"]],["value"]]],[11,"fmul",E,R[5306],78,[[["value"]],["value"]]],[11,"fdiv",E,R[5307],78,[[["value"]],["value"]]],[11,"sqrt",E,R[5308],78,[[["value"]],["value"]]],[11,"fma",E,R[5309],78,[[["value"]],["value"]]],[11,"fneg",E,R[5310],78,[[["value"]],["value"]]],[11,"fabs",E,R[5311],78,[[["value"]],["value"]]],[11,"fcopysign",E,R[5312],78,[[["value"]],["value"]]],[11,"fmin",E,R[5313],78,[[["value"]],["value"]]],[11,"fmax",E,R[5314],78,[[["value"]],["value"]]],[11,"ceil",E,R[5315],78,[[["value"]],["value"]]],[11,"floor",E,R[5316],78,[[["value"]],["value"]]],[11,"trunc",E,R[5317],78,[[["value"]],["value"]]],[11,"nearest",E,R[5318],78,[[["value"]],["value"]]],[11,"trueif",E,R[5319],78,[[["value"],["into",["intcc"]],["intcc"]],["value"]]],[11,"trueff",E,R[5320],78,[[["value"],["floatcc"],["into",["floatcc"]]],["value"]]],[11,"bitcast",E,R[5321],78,[[["type"],["value"]],["value"]]],[11,"breduce",E,R[5322],78,[[["type"],["value"]],["value"]]],[11,"bextend",E,R[5323],78,[[["type"],["value"]],["value"]]],[11,"bint",E,R[5324],78,[[["type"],["value"]],["value"]]],[11,"bmask",E,R[5325],78,[[["type"],["value"]],["value"]]],[11,"ireduce",E,R[5326],78,[[["type"],["value"]],["value"]]],[11,"uextend",E,R[5327],78,[[["type"],["value"]],["value"]]],[11,"sextend",E,R[5328],78,[[["type"],["value"]],["value"]]],[11,"fpromote",E,R[5329],78,[[["type"],["value"]],["value"]]],[11,"fdemote",E,R[5330],78,[[["type"],["value"]],["value"]]],[11,R[5331],E,R[5332],78,[[["type"],["value"]],["value"]]],[11,R[5333],E,R[5334],78,[[["type"],["value"]],["value"]]],[11,R[5335],E,R[5336],78,[[["type"],["value"]],["value"]]],[11,R[5337],E,R[5338],78,[[["type"],["value"]],["value"]]],[11,R[5339],E,R[5340],78,[[["type"],["value"]],["value"]]],[11,R[5341],E,R[5342],78,[[["type"],["value"]],["value"]]],[11,"isplit",E,R[5343],78,[[["value"]]]],[11,"iconcat",E,R[5344],78,[[["value"]],["value"]]],[11,R[5345],E,R[5346],78,[[["value"]]]],[11,R[5347],E,R[5348],78,[[["value"]]]],[11,"x86_umulx",E,R[5349],78,[[["value"]]]],[11,"x86_smulx",E,R[5350],78,[[["value"]]]],[11,R[5351],E,R[5352],78,[[["type"],["value"]],["value"]]],[11,"x86_fmin",E,R[5353],78,[[["value"]],["value"]]],[11,"x86_fmax",E,R[5354],78,[[["value"]],["value"]]],[11,"x86_push",E,R[5355],78,[[["value"]],["inst"]]],[11,"x86_pop",E,R[5356],78,[[["type"]],["value"]]],[11,"x86_bsr",E,R[5357],78,[[["value"]]]],[11,"x86_bsf",E,R[5358],78,[[["value"]]]],[11,"Unary",E,R[5002],78,[[["value"],["opcode"],["type"]]]],[11,"UnaryImm",E,R[5003],78,[[["opcode"],["type"],["imm64"]]]],[11,R[4963],E,R[5004],78,[[["opcode"],["type"],["ieee32"]]]],[11,R[4964],E,R[5005],78,[[["opcode"],["type"],["ieee64"]]]],[11,R[5359],E,R[5006],78,[[["opcode"],["type"],["bool"]]]],[11,R[4965],E,R[5007],78,[[[R[5001]],["opcode"],["type"]]]],[11,"Binary",E,R[5008],78,[[["value"],["type"],["opcode"]]]],[11,R[5360],E,R[5009],78,[[["value"],["type"],["opcode"],["imm64"]]]],[11,"Ternary",E,R[5010],78,[[["value"],["type"],["opcode"]]]],[11,"MultiAry",E,R[5011],78,[[["opcode"],["type"],[R[4983]]]]],[11,"NullAry",E,R[5012],78,[[["opcode"],["type"]]]],[11,R[5013],E,R[5014],78,[[["value"],["uimm8"],["type"],["opcode"]]]],[11,R[4966],E,R[5015],78,[[["value"],["uimm8"],["type"],["opcode"]]]],[11,R[5016],E,R[5017],78,[[["value"],["type"],["opcode"],["intcc"]]]],[11,R[4967],E,R[5018],78,[[["value"],["type"],["opcode"],["imm64"],["intcc"]]]],[11,"IntCond",E,R[5019],78,[[["value"],["type"],["opcode"],["intcc"]]]],[11,R[4968],E,R[5020],78,[[["value"],["type"],["floatcc"],["opcode"]]]],[11,R[5361],E,R[5021],78,[[["value"],["type"],["floatcc"],["opcode"]]]],[11,R[5362],E,R[5022],78,[[["value"],["type"],["opcode"],["intcc"]]]],[11,"Jump",E,R[5023],78,[[[R[4983]],["type"],["opcode"],["ebb"]]]],[11,"Branch",E,R[5024],78,[[[R[4983]],["type"],["opcode"],["ebb"]]]],[11,R[5363],E,R[5025],78,[[["ebb"],[R[4983]],["type"],["opcode"],["intcc"]]]],[11,R[4970],E,R[5026],78,[[[R[4983]],["type"],["floatcc"],["opcode"],["ebb"]]]],[11,R[5027],E,R[5028],78,[[["ebb"],[R[4983]],["type"],["opcode"],["intcc"]]]],[11,R[4971],E,R[5029],78,[[["value"],["type"],[R[4986]],["opcode"],["ebb"]]]],[11,R[4972],E,R[5030],78,[[["value"],["uimm8"],["type"],[R[4986]],["opcode"]]]],[11,R[4973],E,R[5031],78,[[["opcode"],["type"],[R[4986]]]]],[11,R[4974],E,R[5032],78,[[["value"],["type"],[R[4986]],["opcode"]]]],[11,"Call",E,R[5033],78,[[["type"],["opcode"],["funcref"],[R[4983]]]]],[11,R[4975],E,R[5034],78,[[["type"],["opcode"],["sigref"],[R[4983]]]]],[11,"FuncAddr",E,R[5035],78,[[["opcode"],["type"],["funcref"]]]],[11,"Load",E,R[5036],78,[[[R[4998]],["value"],["type"],["opcode"],[R[4999]]]]],[11,R[4976],E,R[5037],78,[[[R[4998]],["type"],["opcode"],[R[4999]],[R[4983]]]]],[11,"Store",E,R[5038],78,[[[R[4998]],["value"],["type"],["opcode"],[R[4999]]]]],[11,R[4977],E,R[5039],78,[[[R[4998]],["type"],["opcode"],[R[4999]],[R[4983]]]]],[11,R[5040],E,R[5041],78,[[[R[4998]],["type"],["opcode"],[R[4991]]]]],[11,R[4981],E,R[5042],78,[[[R[4998]],["value"],["type"],["opcode"],[R[4991]]]]],[11,"HeapAddr",E,R[5043],78,[[["uimm32"],["value"],["type"],["opcode"],["heap"]]]],[11,R[5044],E,R[5045],78,[[[R[4998]],["value"],["type"],["table"],["opcode"]]]],[11,"RegMove",E,R[5046],78,[[["value"],["type"],["regunit"],["opcode"]]]],[11,R[4978],E,R[5047],78,[[["type"],["regunit"],["opcode"]]]],[11,"RegSpill",E,R[5048],78,[[["value"],["type"],["regunit"],["opcode"],[R[4991]]]]],[11,"RegFill",E,R[5049],78,[[["value"],["type"],["regunit"],["opcode"],[R[4991]]]]],[11,"Trap",E,R[5050],78,[[["opcode"],["type"],[R[4997]]]]],[11,"CondTrap",E,R[5051],78,[[["value"],["type"],[R[4997]],["opcode"]]]],[11,R[4979],E,R[5052],78,[[["value"],["type"],[R[4997]],["opcode"],["intcc"]]]],[11,R[4980],E,R[5053],78,[[["value"],["type"],["floatcc"],[R[4997]],["opcode"]]]],[8,R[5394],E,"Base trait for instruction builders.",N,N],[10,R[5056],E,"Get an immutable reference to the data flow graph that…",79,[[["self"]],[R[5054]]]],[10,R[5057],E,"Get a mutable reference to the data flow graph that will…",79,[[["self"]],[R[5054]]]],[10,"build",E,"Insert an instruction and return a reference to it,…",79,[[[R[5055]],["type"]]]],[8,R[5395],E,"Base trait for instruction inserters.",N,N],[10,R[5056],E,"Get an immutable reference to the data flow graph.",80,[[["self"]],[R[5054]]]],[10,R[5057],E,"Get a mutable reference to the data flow graph.",80,[[["self"]],[R[5054]]]],[10,"insert_built_inst",E,"Insert a new instruction which belongs to the DFG.",80,[[["type"],["inst"]],[R[5054]]]],[8,R[5396],E,"Context for ordering program points.",N,N],[10,"cmp",E,"Compare the program points `a` and `b` relative to this…",81,[[["self"],["a"],["b"]],[R[50]]]],[10,"is_ebb_gap",E,"Is the range from `inst` to `ebb` just the gap between…",81,[[["self"],["ebb"],["inst"]],["bool"]]],[11,R[4950],E,R[4948],82,[[["u32"]],["self"]]],[11,"as_u32",E,R[4948],82,[[],["u32"]]],[0,"isa",R[4918],"Instruction Set Architectures.",N,N],[3,R[5397],R[5065],"Constraints on the range of a branch instruction.",N,N],[12,"origin",E,"Offset in bytes from the address of the branch instruction…",83,N],[12,"bits",E,"Number of bits in the signed byte displacement encoded in…",83,N],[3,R[5398],E,"Register constraint for a single value operand or…",N,N],[12,"kind",E,"The kind of constraint.",84,N],[12,R[5064],E,"The register class of the operand.",84,N],[3,R[5399],E,"Value operand constraints for an encoding recipe.",N,N],[12,"ins",E,"Constraints for the instruction's fixed value operands.",85,N],[12,"outs",E,"Constraints for the instruction's fixed results.",85,N],[12,"fixed_ins",E,"Are any of the input constraints `FixedReg` or `FixedTied`?",85,N],[12,"fixed_outs",E,"Are any of the output constraints `FixedReg` or `FixedTied`?",85,N],[12,"tied_ops",E,"Are any of the input/output constraints `Tied` (but not…",85,N],[12,"clobbers_flags",E,"Does this instruction clobber the CPU flags?",85,N],[3,"EncInfo",E,"Information about all the encodings in this ISA.",N,N],[12,R[5058],E,"Constraints on value operands per recipe.",86,N],[12,"sizing",E,"Code size information per recipe.",86,N],[12,"names",E,"Names of encoding recipes.",86,N],[3,"Encoding",E,"Bits needed to encode an instruction as binary machine code.",N,N],[3,R[5400],E,"Bit mask of supported stack bases.",N,N],[12,"0",E,E,87,N],[3,"StackRef",E,"A method for referencing a stack slot in the current stack…",N,N],[12,"base",E,"The base register to use for addressing.",88,N],[12,"offset",E,"Immediate offset from the base register to the first byte…",88,N],[3,"Builder",E,"Builder for a `TargetIsa`. Modify the ISA-specific…",N,N],[3,R[5401],E,"This struct provides information that a frontend may need…",N,N],[12,R[5066],E,"The default calling convention of the target.",89,N],[12,R[4681],E,"The pointer width of the target.",89,N],[4,"CallConv",E,"Calling convention identifiers.",N,N],[13,"Fast",E,"Best performance, not ABI-stable",90,N],[13,"Cold",E,"Smallest caller code size, not ABI-stable",90,N],[13,"SystemV",E,"System V-style convention used on many platforms",90,N],[13,R[5435],E,"Windows \"fastcall\" convention, also used for x64 and ARM",90,N],[13,"Baldrdash",E,"SpiderMonkey WebAssembly convention",90,N],[13,"Probestack",E,"Specialized convention for the probestack function",90,N],[4,R[5402],E,"The different kinds of operand constraints.",N,N],[13,"Reg",E,"This operand or result must be a register from the given…",91,N],[13,"FixedReg",E,"This operand or result must be a fixed register.",91,N],[13,"Tied",E,"This result value must use the same register as an input…",91,N],[13,"FixedTied",E,"This operand must be a fixed register, and it has a tied…",91,N],[13,"Stack",E,"This operand must be a value in a stack slot.",91,N],[4,"StackBase",E,"Generic base register for referencing stack slots.",N,N],[13,"SP",E,"Use the stack pointer.",92,N],[13,"FP",E,"Use the frame pointer (if one is present).",92,N],[13,"Zone",E,"Use an explicit zone pointer in a general-purpose register.",92,N],[4,R[5403],E,"Describes reason for target lookup failure",N,N],[13,"SupportDisabled",E,"Support for this target was disabled in the current build.",93,N],[13,R[5836],E,"Support for this target has not yet been implemented.",93,N],[5,"base_size",E,"Returns the base size of the Recipe, assuming it's fixed.…",N,[[[R[4928]],["inst"],[R[5060]],["recipesizing"]],["u8"]]],[5,"lookup",E,"Look for a supported ISA with the given `name`. Return a…",N,[[["triple"]],[[R[3],["builder",R[5059]]],["builder"],[R[5059]]]]],[11,"triple_default",E,R[5436],90,[[["triple"]],["self"]]],[11,"satisfied",E,"Check if this operand constraint is satisfied by the given…",84,[[["self"],[R[5135]]],["bool"]]],[11,"satisfied",E,"Check that these constraints are satisfied by the operands…",85,[[["self"],[R[4928]],[R[5060]],["inst"]],["bool"]]],[11,R[1285],E,"Determine if this branch range can represent the range…",83,[[[R[4919]]],["bool"]]],[11,"new",E,"Create a new `Encoding` containing `(recipe, bits)`.",94,[[["u16"]],["self"]]],[11,"recipe",E,"Get the recipe number in this encoding.",94,[[],["usize"]]],[11,"bits",E,"Get the recipe-specific encoding bits.",94,[[],["u16"]]],[11,"is_legal",E,"Is this a legal encoding, or the default placeholder?",94,[[],["bool"]]],[11,"operand_constraints",E,"Get the value operand constraints for `enc` if it is a…",86,[[["self"],[R[5067]]],[[R[23],[R[5061]]],[R[5061]]]]],[11,"display",E,"Create an object that can display an ISA-dependent…",86,[[["self"],[R[5067]]],["displayencoding"]]],[11,"byte_size",E,"Get the precise size in bytes of instructions encoded with…",86,[[["self"],[R[4928]],["inst"],[R[5060]],[R[5067]]],[R[4919]]]],[11,"branch_range",E,"Get the branch range that is supported by `enc`, if any.",86,[[["self"],[R[5067]]],[[R[23],[R[5062]]],[R[5062]]]]],[0,"registers",E,"Data structures describing the registers in an ISA.",N,N],[3,"RegBank",R[5113],"The register units in a target ISA are divided into…",N,N],[12,"name",E,"The name of this register bank as defined in the ISA's…",95,N],[12,"first_unit",E,"The first register unit in this bank.",95,N],[12,"units",E,"The total number of register units in this bank.",95,N],[12,"names",E,"Array of specially named register units. This array can be…",95,N],[12,"prefix",E,"Name prefix to use for those register units in the bank…",95,N],[12,"first_toprc",E,"Index of the first top-level register class in this bank.",95,N],[12,"num_toprcs",E,"Number of top-level register classes in this bank.",95,N],[12,"pressure_tracking",E,"Is register pressure tracking enabled for this bank?",95,N],[3,R[5404],E,"Data about a register class.",N,N],[12,"name",E,"The name of the register class.",96,N],[12,"index",E,"The index of this class in the ISA's RegInfo description.",96,N],[12,"width",E,"How many register units to allocate per register.",96,N],[12,"bank",E,"Index of the register bank this class belongs to.",96,N],[12,"toprc",E,"Index of the top-level register class contains this one.",96,N],[12,"first",E,"The first register unit in this class.",96,N],[12,"subclasses",E,"Bit-mask of sub-classes of this register class, including…",96,N],[12,"mask",E,"Mask of register units in the class. If `width > 1`, the…",96,N],[12,"info",E,"The global `RegInfo` instance containing this register…",96,N],[3,R[5416],E,"A small reference to a register class.",N,N],[3,"RegInfo",E,"Information about the registers in an ISA.",N,N],[12,"banks",E,"All register banks, ordered by their `first_unit`. The…",97,N],[12,"classes",E,"All register classes ordered topologically so a sub-class…",97,N],[3,R[5417],E,"Temporary object that holds enough information to print a…",N,N],[5,"regs_overlap",E,"Test of two registers overlap.",N,[[[R[5064]],["regunit"]],["bool"]]],[6,"RegUnit",E,"Register units are the smallest units of register…",N,N],[6,"RegUnitMask",E,"A bit mask indexed by register units.",N,N],[6,"RegClassMask",E,"A bit mask indexed by register classes.",N,N],[6,"RegClass",E,"A register class reference.",N,N],[17,"MAX_TRACKED_TOPRCS",E,"Guaranteed maximum number of top-level register classes…",N,N],[11,"intersect_index",E,"Get the register class index corresponding to the…",96,[[["self"],[R[5064]]],[[R[23],[R[5063]]],[R[5063]]]]],[11,R[419],E,"Get the intersection of `self` and `other`.",96,[[["self"],[R[5064]]],[[R[23],[R[5064]]],[R[5064]]]]],[11,"has_subclass",E,"Returns true if `other` is a subclass of this register…",96,[[["self"],["into",[R[5063]]],[R[5063]]],["bool"]]],[11,"toprc",E,"Get the top-level register class containing this class.",96,[[["self"]],[R[5064]]]],[11,"unit",E,"Get a specific register unit in this class.",96,[[["self"],["usize"]],["regunit"]]],[11,R[1285],E,"Does this register class contain `regunit`?",96,[[["self"],["regunit"]],["bool"]]],[11,"bank_containing_regunit",E,"Get the register bank holding `regunit`.",97,[[["self"],["regunit"]],[["regbank"],[R[23],["regbank"]]]]],[11,"parse_regunit",E,"Try to parse a regunit name. The name is not expected to…",97,[[["self"],["str"]],[["regunit"],[R[23],["regunit"]]]]],[11,"display_regunit",E,"Make a temporary object that can display a register unit.",97,[[["self"],["regunit"]],["displayregunit"]]],[11,"rc",E,"Get the register class corresponding to `idx`.",97,[[["self"],[R[5063]]],[R[5064]]]],[11,"toprc",E,"Get the top-level register class containing the `idx` class.",97,[[["self"],[R[5063]]],[R[5064]]]],[11,"masked",R[5065],"Get a reference to the stack slot `ss` using one of the…",88,[[[R[5139]],[R[4991]],[R[5146]]],[R[23]]]],[11,"sp",E,"Get a reference to `ss` using the stack pointer as a base.",88,[[[R[4991]],[R[5146]]],["self"]]],[11,R[1285],E,"Check if this mask contains the `base` variant.",87,[[["stackbase"]],["bool"]]],[6,"Legalize",E,"After determining that an instruction doesn't have an…",N,N],[8,"TargetIsa",E,"Methods that are specialized to a target ISA. Implies a…",N,N],[10,"name",E,"Get the name of this ISA.",98,[[["self"]],["str"]]],[10,"triple",E,"Get the target triple that was used to make this trait…",98,[[["self"]],["triple"]]],[10,"flags",E,"Get the ISA-independent flags that were used to make this…",98,[[["self"]],["flags"]]],[11,R[5066],E,"Get the default calling convention of this target.",98,[[["self"]],["callconv"]]],[11,R[5069],E,"Get the pointer type of this ISA.",98,[[["self"]],["type"]]],[11,R[4681],E,"Get the width of pointers on this ISA.",98,[[["self"]],[R[4680]]]],[11,R[5070],E,"Get the width of pointers on this ISA, in units of bits.",98,[[["self"]],["u8"]]],[11,R[5071],E,"Get the width of pointers on this ISA, in units of bytes.",98,[[["self"]],["u8"]]],[11,"frontend_config",E,"Get the information needed by frontends producing…",98,[[["self"]],[R[5148]]]],[11,"uses_cpu_flags",E,"Does the CPU implement scalar comparisons using a CPU…",98,[[["self"]],["bool"]]],[11,"uses_complex_addresses",E,"Does the CPU implement multi-register addressing?",98,[[["self"]],["bool"]]],[10,"register_info",E,"Get a data structure describing the registers in this ISA.",98,[[["self"]],["reginfo"]]],[10,"legal_encodings",E,"Returns an iterator over legal encodings for the…",98,[[[R[4928]],[R[5055]],["self"],["type"]],["encodings"]]],[11,"encode",E,"Encode an instruction after determining it is legal.",98,[[["self"],[R[5055]],["type"],[R[4928]]],[[R[5079]],[R[3],[R[5067],R[5079]]],[R[5067]]]]],[10,"encoding_info",E,"Get a data structure describing the instruction encodings…",98,[[["self"]],["encinfo"]]],[10,"legalize_signature",E,"Legalize a function signature.",98,[[["self"],[R[3279]],["bool"]]]],[10,"regclass_for_abi_type",E,"Get the register class that should be used to represent an…",98,[[["self"],["type"]],[R[5064]]]],[10,"allocatable_registers",E,"Get the set of allocatable registers that can be used when…",98,[[["self"],[R[4928]]],["registerset"]]],[11,R[5080],E,"Compute the stack layout and insert prologue and epilogue…",98,[[["self"],[R[4928]]],[R[5068]]]],[10,"emit_function_to_memory",E,"Emit a whole function into memory.",98,[[["self"],["memorycodesink"],[R[4928]]]]],[11,"finish",E,"Combine the ISA-specific settings with the provided…",99,[[["flags"]],[["box",[R[4929]]],[R[4929]]]]],[11,R[5069],E,"Get the pointer type of this target.",89,[[],["type"]]],[11,R[5070],E,"Get the width of pointers on this target, in units of bits.",89,[[],["u8"]]],[11,R[5071],E,"Get the width of pointers on this target, in units of bytes.",89,[[],["u8"]]],[0,R[5072],R[4918],"A loop analysis represented as mappings of loops to their…",N,N],[3,"Loop",R[5114],"A opaque reference to a code loop.",N,N],[3,R[5405],E,"Loop tree information for a single function.",N,N],[11,R[4950],E,R[4948],100,[[["u32"]],["self"]]],[11,"as_u32",E,R[4948],100,[[],["u32"]]],[11,"new",E,"Allocate a new blank loop analysis struct. Use `compute`…",101,[[],["self"]]],[11,"loops",E,"Returns all the loops contained in a function.",101,[[["self"]],[["keys",["loop"]],["loop"]]]],[11,"loop_header",E,"Returns the header EBB of a particular loop.",101,[[["self"],["loop"]],["ebb"]]],[11,"loop_parent",E,"Return the eventual parent of a loop in the loop tree.",101,[[["self"],["loop"]],[["loop"],[R[23],["loop"]]]]],[11,"is_in_loop",E,"Determine if an Ebb belongs to a loop by running a finger…",101,[[["self"],["loop"],["ebb"]],["bool"]]],[11,"is_child_loop",E,"Determines if a loop is contained in another loop.",101,[[["self"],["loop"]],["bool"]]],[11,"compute",E,"Detects the loops in a function. Needs the control flow…",101,[[["self"],[R[4928]],[R[5073]],[R[4932]]]]],[11,R[27],E,"Check if the loop analysis is in a valid state.",101,[[["self"]],["bool"]]],[11,"clear",E,"Clear all the data structures contained in the loop…",101,[[["self"]]]],[0,"print_errors",R[4918],"Utility routines for pretty-printing error messages.",N,N],[5,"pretty_verifier_error","cranelift_codegen::print_errors","Pretty-print a verifier error.",N,[[[R[23],["box"]],["box",["funcwriter"]],[R[5084]],[R[23],[R[4929]]],[R[4929]],[R[4928]]],["string"]]],[5,"pretty_error",E,"Pretty-print a Cranelift error.",N,[[[R[5140]],[R[23],[R[4929]]],[R[4929]],[R[4928]]],["string"]]],[0,"settings",R[4918],"Shared settings module.",N,N],[3,"Builder",R[5077],"Collect settings values based on a template.",N,N],[3,R[5407],E,"A reference to just the boolean predicates of a settings…",N,N],[3,"Flags",E,"Flags group `shared`.",N,N],[3,"FlagsOrIsa",E,"Wrapper containing flags and optionally a `TargetIsa`…",N,N],[12,"flags",E,"Flags are always present.",102,N],[12,"isa",E,"The ISA may not be present.",102,N],[4,"SetError",E,"An error produced when changing a setting.",N,N],[13,"BadName",E,"No setting by this name exists.",103,N],[13,"BadType",E,"Type mismatch for setting (e.g., setting an enum setting…",103,N],[13,"BadValue",E,"This is not a valid value for this setting.",103,N],[4,"OptLevel",E,"Values for `shared.opt_level`.",N,N],[13,"Default",E,"`default`.",104,N],[13,"Best",E,"`best`.",104,N],[13,"Fastest",E,"`fastest`.",104,N],[5,"builder",E,"Create a `settings::Builder` for the shared settings group.",N,[[],["builder"]]],[0,"detail",E,"Implementation details for generated code.",N,N],[3,"Template",R[5074],"An instruction group template.",N,N],[12,"name",E,"Name of the instruction group.",105,N],[12,"descriptors",E,"List of setting descriptors.",105,N],[12,R[5076],E,"Union of all enumerators.",105,N],[12,"hash_table",E,"Hash table of settings.",105,N],[12,"defaults",E,"Default values.",105,N],[12,"presets",E,"Pairs of (mask, value) for presets.",105,N],[3,"Descriptor",E,"A setting descriptor holds the information needed to…",N,N],[12,"name",E,"Lower snake-case name of setting as defined in meta.",106,N],[12,"offset",E,"Offset of byte containing this setting.",106,N],[12,"detail",E,"Additional details, depending on the kind of setting.",106,N],[4,"Detail",E,"The different kind of settings along with descriptor bits…",N,N],[13,"Bool",E,"A boolean setting only uses one bit, numbered from LSB.",107,N],[12,"bit",R[5075],"0-7.",107,N],[13,"Num",R[5074],"A numerical setting uses the whole byte.",107,N],[13,"Enum",E,"An Enum setting uses a range of enumerators.",107,N],[12,"last",R[5075],"Numerical value of last enumerator, allowing for 1-256…",107,N],[12,R[5076],E,"First enumerator in the ENUMERATORS table.",107,N],[13,"Preset",R[5074],"A preset is not an individual setting, it is a collection…",107,N],[11,"enums",E,"Get enumerators corresponding to a `Details::Enum`.",105,[[["self"],["u16"],["u8"]]]],[11,"format_toml_value",E,"Format a setting value as a TOML string. This is mostly…",105,[[["self"],["detail"],[R[10]],["u8"]],[R[3]]]],[11,"is_preset",E,"Check if a detail is a Detail::Preset. Useful because the…",107,[[],["bool"]]],[6,"SetResult",R[5077],"A result returned when changing a setting.",N,N],[8,R[5406],E,"A string-based configurator for settings groups.",N,N],[10,"set",E,"Set the string value of any setting by name.",108,[[["self"],["str"]],[R[5124]]]],[10,"enable",E,"Enable a boolean setting or apply a preset.",108,[[["self"],["str"]],[R[5124]]]],[11,"new",E,"Create a new builder with defaults and names from the…",109,[[["template"]],["self"]]],[11,"state_for",E,"Extract contents of builder once everything is configured.",109,[[["str"]],["box"]]],[11,"new",E,"Create a new view of a precomputed predicate vector.",110,[[],["self"]]],[11,"test",E,"Check a numbered predicate.",110,[[["usize"]],["bool"]]],[11,"new",E,"Create flags shared settings group.",111,[[["builder"]],["self"]]],[11,"predicate_view",E,"Get a view of the boolean predicates.",111,[[["self"]],[R[5149]]]],[11,"opt_level",E,"Optimization level:",111,[[["self"]],["optlevel"]]],[11,"baldrdash_prologue_words",E,"Number of pointer-sized words pushed by the baldrdash…",111,[[["self"]],["u8"]]],[11,"probestack_size_log2",E,"The log2 of the size of the stack guard region.",111,[[["self"]],["u8"]]],[11,"enable_verifier",E,"Run the Cranelift IR verifier at strategic times during…",111,[[["self"]],["bool"]]],[11,"is_pic",E,"Enable Position-Independent Code generation",111,[[["self"]],["bool"]]],[11,"colocated_libcalls",E,"Use colocated libcalls.",111,[[["self"]],["bool"]]],[11,"avoid_div_traps",E,"Generate explicit checks around native division…",111,[[["self"]],["bool"]]],[11,"enable_float",E,"Enable the use of floating-point instructions",111,[[["self"]],["bool"]]],[11,"enable_nan_canonicalization",E,"Enable NaN canonicalization",111,[[["self"]],["bool"]]],[11,R[4710],E,"Enable the use of SIMD instructions.",111,[[["self"]],["bool"]]],[11,"enable_atomics",E,"Enable the use of atomic instructions",111,[[["self"]],["bool"]]],[11,"allones_funcaddrs",E,"Emit not-yet-relocated function addresses as all-ones bit…",111,[[["self"]],["bool"]]],[11,"probestack_enabled",E,"Enable the use of stack probes, for calling conventions…",111,[[["self"]],["bool"]]],[11,"probestack_func_adjusts_sp",E,"Set this to true of the stack probe function modifies the…",111,[[["self"]],["bool"]]],[11,"jump_tables_enabled",E,"Enable the use of jump tables in generated machine code.",111,[[["self"]],["bool"]]],[0,"timing",R[4918],"Pass timing.",N,N],[3,"PassTimes",R[5115],"Accumulated timing for all passes.",N,N],[3,R[5418],E,"A timing token is responsible for timing the currently…",N,N],[5,"add_to_current",E,"Add `timings` to the accumulated timings for the current…",N,[[["passtimes"]]]],[5,"take_current",E,"Take the current accumulated pass timings and reset the…",N,[[],["passtimes"]]],[5,"process_file",E,"Processing test file",N,[[],[R[5078]]]],[5,"parse_text",E,"Parsing textual Cranelift IR",N,[[],[R[5078]]]],[5,"wasm_translate_module",E,"Translate WASM module",N,[[],[R[5078]]]],[5,"wasm_translate_function",E,"Translate WASM function",N,[[],[R[5078]]]],[5,"verifier",E,"Verify Cranelift IR",N,[[],[R[5078]]]],[5,R[5083],E,"Verify CSSA",N,[[],[R[5078]]]],[5,R[5085],E,"Verify live ranges",N,[[],[R[5078]]]],[5,R[5087],E,"Verify value locations",N,[[],[R[5078]]]],[5,"verify_flags",E,"Verify CPU flags",N,[[],[R[5078]]]],[5,"compile",E,"Compilation passes",N,[[],[R[5078]]]],[5,"flowgraph",E,"Control flow graph",N,[[],[R[5078]]]],[5,"domtree",E,"Dominator tree",N,[[],[R[5078]]]],[5,R[5072],E,"Loop analysis",N,[[],[R[5078]]]],[5,"postopt",E,"Post-legalization rewriting",N,[[],[R[5078]]]],[5,"preopt",E,"Pre-legalization rewriting",N,[[],[R[5078]]]],[5,"dce",E,"Dead code elimination",N,[[],[R[5078]]]],[5,R[5079],E,"Legalization",N,[[],[R[5078]]]],[5,"gvn",E,"Global value numbering",N,[[],[R[5078]]]],[5,"licm",E,"Loop invariant code motion",N,[[],[R[5078]]]],[5,"unreachable_code",E,"Remove unreachable blocks",N,[[],[R[5078]]]],[5,"regalloc",E,"Register allocation",N,[[],[R[5078]]]],[5,"ra_liveness",E,"RA liveness analysis",N,[[],[R[5078]]]],[5,"ra_cssa",E,"RA coalescing CSSA",N,[[],[R[5078]]]],[5,"ra_spilling",E,"RA spilling",N,[[],[R[5078]]]],[5,"ra_reload",E,"RA reloading",N,[[],[R[5078]]]],[5,"ra_coloring",E,"RA coloring",N,[[],[R[5078]]]],[5,R[5080],E,"Prologue/epilogue insertion",N,[[],[R[5078]]]],[5,R[5081],E,"Instruction encoding shrinking",N,[[],[R[5078]]]],[5,R[5082],E,"Branch relaxation",N,[[],[R[5078]]]],[5,"binemit",E,"Binary machine code emission",N,[[],[R[5078]]]],[5,"layout_renumber",E,"Layout full renumbering",N,[[],[R[5078]]]],[5,R[5093],E,"Canonicalization of NaNs",N,[[],[R[5078]]]],[0,"verifier",R[4918],"A verifier for ensuring that functions are well formed. It…",N,N],[3,R[5408],R[5116],"A verifier error.",N,N],[12,"location",E,"The entity causing the verifier error.",112,N],[12,"message",E,"The error message.",112,N],[3,R[5409],E,"List of verifier errors.",N,N],[12,"0",E,E,113,N],[5,R[5083],E,"Verify conventional SSA form for `func`.",N,[[[R[5084]],[R[4928]],[R[5073]],[R[4932]],["liveness"],["virtregs"]],[R[5086]]]],[5,R[5085],E,"Verify liveness information for `func`.",N,[[[R[5084]],[R[4928]],[R[4929]],[R[4932]],["liveness"]],[R[5086]]]],[5,R[5087],E,"Verify value locations for `func`.",N,[[[R[5084]],[R[23],["liveness"]],[R[4929]],["liveness"],[R[4928]]],[R[5086]]]],[5,"verify_function",E,"Verify `func`.",N,[[[R[5088]],[R[4928]],["into",[R[5088]]]],[R[5092]]]],[5,"verify_context",E,"Verify `func` after checking the integrity of associated…",N,[[[R[5088]],[R[4928]],["into",[R[5088]]],[R[5073]],[R[4932]],[R[5084]]],[R[5086]]]],[6,"VerifierStepResult",E,"Result of a step in the verification process.",N,N],[6,"VerifierResult",E,"Result of a verification operation.",N,N],[11,"new",E,"Return a new `VerifierErrors` struct.",113,[[],["self"]]],[11,R[25],E,"Return whether no errors were reported.",113,[[["self"]],["bool"]]],[11,"has_error",E,"Return whether one or more errors were reported.",113,[[["self"]],["bool"]]],[11,"as_result",E,"Return a `VerifierStepResult` that is fatal if at least…",113,[[["self"]],[R[5086]]]],[0,"write",R[4918],"Converting Cranelift IR to text.",N,N],[3,R[5419],R[5117],"A `PlainWriter` that doesn't decorate the function.",N,N],[5,"write_function",E,"Write `func` to `w` as equivalent text. Use `isa` to emit…",N,[[["write"],[R[4928]],[R[5089]]],[R[3]]]],[5,"decorate_function",E,"Writes `func` to `w` as text. write_function_plain is…",N,[[["fw"],[R[4928]],["write"],[R[5089]]],[R[3]]]],[5,R[5090],E,"Write out the basic block header, outdented:",N,[[[R[4928]],["usize"],[R[23],[R[4929]]],["write"],[R[4929]],["ebb"]],[R[3]]]],[5,"write_operands",E,"Write the operands of `inst` to `w` with a prepended space.",N,[[[R[23],[R[4929]]],["write"],[R[4929]],["inst"],[R[5054]]],[R[3]]]],[8,"FuncWriter",E,"A `FuncWriter` used to decorate functions during printing.",N,N],[10,R[5090],E,"Write the extended basic block header for the current…",114,[[["self"],[R[4928]],["usize"],[R[23],[R[4929]]],["write"],[R[4929]],["ebb"]],[R[3]]]],[10,R[5125],E,"Write the given `inst` to `w`.",114,[[["self"],[R[4928]],[R[23],[R[4929]]],["write"],[R[4929]],["usize"],["inst"],[R[5126]]],[R[3]]]],[11,"write_preamble",E,"Write the preamble to `w`. By default, this uses…",114,[[["self"],[R[4928]],["reginfo"],[R[23],["reginfo"]],["write"]],[["error"],[R[3],["bool","error"]],["bool"]]]],[11,"super_preamble",E,"Default impl of `write_preamble`",114,[[["self"],[R[4928]],["reginfo"],[R[23],["reginfo"]],["write"]],[["error"],[R[3],["bool","error"]],["bool"]]]],[11,"write_entity_definition",E,"Write an entity definition defined in the preamble to `w`.",114,[[["self"],[R[4928]],[R[5129]],["display"],["write"]],[R[3]]]],[11,"super_entity_definition",E,"Default impl of `write_entity_definition`",114,[[["self"],[R[4928]],[R[5129]],["display"],["write"]],[R[3]]]],[11,"new",R[4918],"Allocate a new compilation context.",1,[[],["self"]]],[11,"for_function",E,"Allocate a new compilation context with an existing…",1,[[[R[4928]]],["self"]]],[11,"clear",E,"Clear all data structures in this context.",1,[[["self"]]]],[11,"compile_and_emit",E,"Compile the function, and emit machine code into a…",1,[[["self"],["vec"],["relocsink"],[R[4929]],["trapsink"]],[[R[5068],[R[5091]]],[R[5091]]]]],[11,"compile",E,"Compile the function.",1,[[["self"],[R[4929]]],[[R[5068],[R[5091]]],[R[5091]]]]],[11,"emit_to_memory",E,"Emit machine code directly into raw memory.",1,[[["self"],["relocsink"],[R[4929]],["trapsink"]],[R[5091]]]],[11,"verify",E,"Run the verifier on the function.",1,[[["self"],[R[5088]],["into",[R[5088]]]],[R[5092]]]],[11,"verify_if",E,"Run the verifier only if the `enable_verifier` setting is…",1,[[["self"],[R[5088]],["into",[R[5088]]]],[R[5068]]]],[11,R[5087],E,"Run the locations verifier on the function.",1,[[["self"],[R[4929]]],[R[5092]]]],[11,"verify_locations_if",E,"Run the locations verifier only if the `enable_verifier`…",1,[[["self"],[R[4929]]],[R[5068]]]],[11,"dce",E,"Perform dead-code elimination on the function.",1,[[["self"],[R[5088]],["into",[R[5088]]]],[R[5068]]]],[11,"preopt",E,"Perform pre-legalization rewrites on the function.",1,[[["self"],[R[4929]]],[R[5068]]]],[11,R[5093],E,"Perform NaN canonicalizing rewrites on the function.",1,[[["self"],[R[4929]]],[R[5068]]]],[11,R[5079],E,"Run the legalizer for `isa` on the function.",1,[[["self"],[R[4929]]],[R[5068]]]],[11,"postopt",E,"Perform post-legalization rewrites on the function.",1,[[["self"],[R[4929]]],[R[5068]]]],[11,"compute_cfg",E,"Compute the control flow graph.",1,[[["self"]]]],[11,"compute_domtree",E,"Compute dominator tree.",1,[[["self"]]]],[11,"compute_loop_analysis",E,"Compute the loop analysis.",1,[[["self"]]]],[11,"flowgraph",E,"Compute the control flow graph and dominator tree.",1,[[["self"]]]],[11,"simple_gvn",E,"Perform simple GVN on the function.",1,[[["self"],[R[5088]],["into",[R[5088]]]],[R[5068]]]],[11,"licm",E,"Perform LICM on the function.",1,[[["self"],[R[4929]]],[R[5068]]]],[11,"eliminate_unreachable_code",E,"Perform unreachable code elimination.",1,[[["self"],["foi"]],[R[5068]]]],[11,"regalloc",E,"Run the register allocator.",1,[[["self"],[R[4929]]],[R[5068]]]],[11,R[5080],E,"Insert prologue and epilogues after computing the stack…",1,[[["self"],[R[4929]]],[R[5068]]]],[11,R[5081],E,"Run the instruction shrinking pass.",1,[[["self"],[R[4929]]],[R[5068]]]],[11,R[5082],E,"Run the branch relaxation pass and return information…",1,[[["self"],[R[4929]]],[[R[5068],[R[5091]]],[R[5091]]]]],[11,"build_value_labels_ranges",E,"Builds ranges and location for specified value labels.",1,[[["self"],[R[4929]]],[[R[5094]],[R[5068],[R[5094]]]]]],[11,"new",R[5095],"Create a new empty diversion tracker.",115,[[],["self"]]],[11,"clear",E,"Clear the tracker, preparing for a new EBB.",115,[[["self"]]]],[11,R[25],E,"Are there any diversions?",115,[[["self"]],["bool"]]],[11,R[5096],E,"Get the current diversion of `value`, if any.",115,[[["self"],["value"]],[[R[5096]],[R[23],[R[5096]]]]]],[11,"iter",E,"Get all current diversions.",115,[[["self"]],[["value"],[R[5096]],["iter",["value",R[5096]]]]]],[11,"get",E,"Get the current location for `value`. Fall back to the…",115,[[["self"],["value"],[R[5097]]],[R[5135]]]],[11,"reg",E,"Get the current register location for `value`, or panic if…",115,[[["self"],["value"],[R[5097]]],["regunit"]]],[11,"stack",E,"Get the current stack location for `value`, or panic if…",115,[[["self"],["value"],[R[5097]]],[R[4991]]]],[11,"divert",E,"Record any kind of move.",115,[[["self"],["value"],[R[5135]]]]],[11,"regmove",E,"Record a register -> register move.",115,[[["self"],["value"],["regunit"]]]],[11,"regspill",E,"Record a register -> stack move.",115,[[["self"],["value"],["regunit"],[R[4991]]]]],[11,"regfill",E,"Record a stack -> register move.",115,[[["self"],["value"],[R[4991]],["regunit"]]]],[11,"apply",E,"Apply the effect of `inst`.",115,[[["self"],[R[5055]]]]],[11,"remove",E,"Drop any recorded move for `value`.",115,[[["self"],["value"]],[[R[5135]],[R[23],[R[5135]]]]]],[11,"display",E,"Return an object that can display the diversions.",115,[[["into",[R[23]]],["self"],[R[23],["reginfo"]]],["displaydiversions"]]],[6,"ValueLabelsRanges",R[4918],"Resulting map of Value labels and their ranges/locations.",N,N],[6,"CodegenResult",E,"A convenient alias for a `Result` that uses `CodegenError`…",N,N],[17,"VERSION",E,R[5523],N,N],[11,"from",R[5098],E,116,[[[T]],[T]]],[11,R[4],E,E,116,[[[U]],[R[3]]]],[11,"into",E,E,116,[[],[U]]],[11,R[5],E,E,116,[[],[R[3]]]],[11,R[6],E,E,116,[[["self"]],[T]]],[11,R[7],E,E,116,[[["self"]],[T]]],[11,R[8],E,E,116,[[["self"]],[R[9]]]],[11,R[46],E,E,116,[[["self"]],[T]]],[11,R[47],E,E,116,[[["self"],[T]]]],[11,"from",R[4918],E,1,[[[T]],[T]]],[11,R[4],E,E,1,[[[U]],[R[3]]]],[11,"into",E,E,1,[[],[U]]],[11,R[5],E,E,1,[[],[R[3]]]],[11,R[6],E,E,1,[[["self"]],[T]]],[11,R[7],E,E,1,[[["self"]],[T]]],[11,R[8],E,E,1,[[["self"]],[R[9]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[4],E,E,2,[[[U]],[R[3]]]],[11,"into",E,E,2,[[],[U]]],[11,R[5],E,E,2,[[],[R[3]]]],[11,R[6],E,E,2,[[["self"]],[T]]],[11,R[7],E,E,2,[[["self"]],[T]]],[11,R[8],E,E,2,[[["self"]],[R[9]]]],[11,R[46],E,E,2,[[["self"]],[T]]],[11,R[47],E,E,2,[[["self"],[T]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[4],E,E,3,[[[U]],[R[3]]]],[11,"into",E,E,3,[[],[U]]],[11,R[5],E,E,3,[[],[R[3]]]],[11,R[6],E,E,3,[[["self"]],[T]]],[11,R[7],E,E,3,[[["self"]],[T]]],[11,R[8],E,E,3,[[["self"]],[R[9]]]],[11,R[113],E,E,3,[[["self"]],["string"]]],[11,"as_fail",E,E,3,[[["self"]],["fail"]]],[11,"from",R[5095],E,4,[[[T]],[T]]],[11,R[4],E,E,4,[[[U]],[R[3]]]],[11,"into",E,E,4,[[],[U]]],[11,R[5],E,E,4,[[],[R[3]]]],[11,R[6],E,E,4,[[["self"]],[T]]],[11,R[7],E,E,4,[[["self"]],[T]]],[11,R[8],E,E,4,[[["self"]],[R[9]]]],[11,"from",E,E,117,[[[T]],[T]]],[11,R[4],E,E,117,[[[U]],[R[3]]]],[11,"into",E,E,117,[[],[U]]],[11,R[5],E,E,117,[[],[R[3]]]],[11,R[6],E,E,117,[[["self"]],[T]]],[11,R[7],E,E,117,[[["self"]],[T]]],[11,R[8],E,E,117,[[["self"]],[R[9]]]],[11,"from",E,E,115,[[[T]],[T]]],[11,R[4],E,E,115,[[[U]],[R[3]]]],[11,"into",E,E,115,[[],[U]]],[11,R[5],E,E,115,[[],[R[3]]]],[11,R[6],E,E,115,[[["self"]],[T]]],[11,R[7],E,E,115,[[["self"]],[T]]],[11,R[8],E,E,115,[[["self"]],[R[9]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[4],E,E,5,[[[U]],[R[3]]]],[11,"into",E,E,5,[[],[U]]],[11,R[5],E,E,5,[[],[R[3]]]],[11,R[6],E,E,5,[[["self"]],[T]]],[11,R[7],E,E,5,[[["self"]],[T]]],[11,R[8],E,E,5,[[["self"]],[R[9]]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[4],E,E,6,[[[U]],[R[3]]]],[11,"into",E,E,6,[[],[U]]],[11,R[5],E,E,6,[[],[R[3]]]],[11,R[6],E,E,6,[[["self"]],[T]]],[11,R[7],E,E,6,[[["self"]],[T]]],[11,R[8],E,E,6,[[["self"]],[R[9]]]],[11,R[113],E,E,6,[[["self"]],["string"]]],[11,R[46],E,E,6,[[["self"]],[T]]],[11,R[47],E,E,6,[[["self"],[T]]]],[11,"from",R[5099],E,10,[[[T]],[T]]],[11,R[4],E,E,10,[[[U]],[R[3]]]],[11,"into",E,E,10,[[],[U]]],[11,R[5],E,E,10,[[],[R[3]]]],[11,R[6],E,E,10,[[["self"]],[T]]],[11,R[7],E,E,10,[[["self"]],[T]]],[11,R[8],E,E,10,[[["self"]],[R[9]]]],[11,R[113],E,E,10,[[["self"]],["string"]]],[11,"from",R[5100],E,11,[[[T]],[T]]],[11,R[4],E,E,11,[[[U]],[R[3]]]],[11,"into",E,E,11,[[],[U]]],[11,R[5],E,E,11,[[],[R[3]]]],[11,R[6],E,E,11,[[["self"]],[T]]],[11,R[7],E,E,11,[[["self"]],[T]]],[11,R[8],E,E,11,[[["self"]],[R[9]]]],[11,"from",E,E,12,[[[T]],[T]]],[11,R[4],E,E,12,[[[U]],[R[3]]]],[11,"into",E,E,12,[[],[U]]],[11,R[5],E,E,12,[[],[R[3]]]],[11,R[6],E,E,12,[[["self"]],[T]]],[11,R[7],E,E,12,[[["self"]],[T]]],[11,R[8],E,E,12,[[["self"]],[R[9]]]],[11,"from",E,E,13,[[[T]],[T]]],[11,R[4],E,E,13,[[[U]],[R[3]]]],[11,"into",E,E,13,[[],[U]]],[11,R[5],E,E,13,[[],[R[3]]]],[11,R[6],E,E,13,[[["self"]],[T]]],[11,R[7],E,E,13,[[["self"]],[T]]],[11,R[8],E,E,13,[[["self"]],[R[9]]]],[11,R[46],E,E,13,[[["self"]],[T]]],[11,R[47],E,E,13,[[["self"],[T]]]],[11,"from",R[5101],E,15,[[[T]],[T]]],[11,R[4],E,E,15,[[[U]],[R[3]]]],[11,"into",E,E,15,[[],[U]]],[11,R[5],E,E,15,[[],[R[3]]]],[11,R[6],E,E,15,[[["self"]],[T]]],[11,R[7],E,E,15,[[["self"]],[T]]],[11,R[8],E,E,15,[[["self"]],[R[9]]]],[11,R[113],E,E,15,[[["self"]],["string"]]],[11,"from",R[5102],E,16,[[[T]],[T]]],[11,R[4],E,E,16,[[[U]],[R[3]]]],[11,"into",E,E,16,[[],[U]]],[11,R[5],E,E,16,[[],[R[3]]]],[11,R[6],E,E,16,[[["self"]],[T]]],[11,R[7],E,E,16,[[["self"]],[T]]],[11,R[8],E,E,16,[[["self"]],[R[9]]]],[11,"from",E,E,17,[[[T]],[T]]],[11,R[4],E,E,17,[[[U]],[R[3]]]],[11,"into",E,E,17,[[],[U]]],[11,R[5],E,E,17,[[],[R[3]]]],[11,R[6],E,E,17,[[["self"]],[T]]],[11,R[7],E,E,17,[[["self"]],[T]]],[11,R[8],E,E,17,[[["self"]],[R[9]]]],[11,"from",E,E,118,[[[T]],[T]]],[11,R[4],E,E,118,[[[U]],[R[3]]]],[11,R[45],E,E,118,[[],["i"]]],[11,"into",E,E,118,[[],[U]]],[11,R[5],E,E,118,[[],[R[3]]]],[11,R[6],E,E,118,[[["self"]],[T]]],[11,R[7],E,E,118,[[["self"]],[T]]],[11,R[8],E,E,118,[[["self"]],[R[9]]]],[11,"from",R[5103],E,18,[[[T]],[T]]],[11,R[4],E,E,18,[[[U]],[R[3]]]],[11,"into",E,E,18,[[],[U]]],[11,R[5],E,E,18,[[],[R[3]]]],[11,R[6],E,E,18,[[["self"]],[T]]],[11,R[7],E,E,18,[[["self"]],[T]]],[11,R[8],E,E,18,[[["self"]],[R[9]]]],[11,"from",E,E,19,[[[T]],[T]]],[11,R[4],E,E,19,[[[U]],[R[3]]]],[11,"into",E,E,19,[[],[U]]],[11,R[5],E,E,19,[[],[R[3]]]],[11,R[6],E,E,19,[[["self"]],[T]]],[11,R[7],E,E,19,[[["self"]],[T]]],[11,R[8],E,E,19,[[["self"]],[R[9]]]],[11,"from",E,E,119,[[[T]],[T]]],[11,R[4],E,E,119,[[[U]],[R[3]]]],[11,R[45],E,E,119,[[],["i"]]],[11,"into",E,E,119,[[],[U]]],[11,R[5],E,E,119,[[],[R[3]]]],[11,R[6],E,E,119,[[["self"]],[T]]],[11,R[7],E,E,119,[[["self"]],[T]]],[11,R[8],E,E,119,[[["self"]],[R[9]]]],[11,"from",R[4934],E,37,[[[T]],[T]]],[11,R[4],E,E,37,[[[U]],[R[3]]]],[11,"into",E,E,37,[[],[U]]],[11,R[5],E,E,37,[[],[R[3]]]],[11,R[6],E,E,37,[[["self"]],[T]]],[11,R[7],E,E,37,[[["self"]],[T]]],[11,R[8],E,E,37,[[["self"]],[R[9]]]],[11,"from",E,E,20,[[[T]],[T]]],[11,R[4],E,E,20,[[[U]],[R[3]]]],[11,"into",E,E,20,[[],[U]]],[11,R[5],E,E,20,[[],[R[3]]]],[11,R[6],E,E,20,[[["self"]],[T]]],[11,R[7],E,E,20,[[["self"]],[T]]],[11,R[8],E,E,20,[[["self"]],[R[9]]]],[11,R[113],E,E,20,[[["self"]],["string"]]],[11,R[46],E,E,20,[[["self"]],[T]]],[11,R[47],E,E,20,[[["self"],[T]]]],[11,"from",E,E,21,[[[T]],[T]]],[11,R[4],E,E,21,[[[U]],[R[3]]]],[11,"into",E,E,21,[[],[U]]],[11,R[5],E,E,21,[[],[R[3]]]],[11,R[6],E,E,21,[[["self"]],[T]]],[11,R[7],E,E,21,[[["self"]],[T]]],[11,R[8],E,E,21,[[["self"]],[R[9]]]],[11,R[113],E,E,21,[[["self"]],["string"]]],[11,R[46],E,E,21,[[["self"]],[T]]],[11,R[47],E,E,21,[[["self"],[T]]]],[11,"from",E,E,22,[[[T]],[T]]],[11,R[4],E,E,22,[[[U]],[R[3]]]],[11,"into",E,E,22,[[],[U]]],[11,R[5],E,E,22,[[],[R[3]]]],[11,R[6],E,E,22,[[["self"]],[T]]],[11,R[7],E,E,22,[[["self"]],[T]]],[11,R[8],E,E,22,[[["self"]],[R[9]]]],[11,R[113],E,E,22,[[["self"]],["string"]]],[11,R[46],E,E,22,[[["self"]],[T]]],[11,R[47],E,E,22,[[["self"],[T]]]],[11,"from",E,E,23,[[[T]],[T]]],[11,R[4],E,E,23,[[[U]],[R[3]]]],[11,"into",E,E,23,[[],[U]]],[11,R[5],E,E,23,[[],[R[3]]]],[11,R[6],E,E,23,[[["self"]],[T]]],[11,R[7],E,E,23,[[["self"]],[T]]],[11,R[8],E,E,23,[[["self"]],[R[9]]]],[11,R[113],E,E,23,[[["self"]],["string"]]],[11,R[46],E,E,23,[[["self"]],[T]]],[11,R[47],E,E,23,[[["self"],[T]]]],[11,"from",E,E,72,[[[T]],[T]]],[11,R[4],E,E,72,[[[U]],[R[3]]]],[11,"into",E,E,72,[[],[U]]],[11,R[5],E,E,72,[[],[R[3]]]],[11,R[6],E,E,72,[[["self"]],[T]]],[11,R[7],E,E,72,[[["self"]],[T]]],[11,R[8],E,E,72,[[["self"]],[R[9]]]],[11,R[113],E,E,72,[[["self"]],["string"]]],[11,R[46],E,E,72,[[["self"]],[T]]],[11,R[47],E,E,72,[[["self"],[T]]]],[11,"from",E,E,120,[[[T]],[T]]],[11,R[4],E,E,120,[[[U]],[R[3]]]],[11,"into",E,E,120,[[],[U]]],[11,R[5],E,E,120,[[],[R[3]]]],[11,R[6],E,E,120,[[["self"]],[T]]],[11,R[7],E,E,120,[[["self"]],[T]]],[11,R[8],E,E,120,[[["self"]],[R[9]]]],[11,R[113],E,E,120,[[["self"]],["string"]]],[11,R[46],E,E,120,[[["self"]],[T]]],[11,R[47],E,E,120,[[["self"],[T]]]],[11,"from",E,E,73,[[[T]],[T]]],[11,R[4],E,E,73,[[[U]],[R[3]]]],[11,"into",E,E,73,[[],[U]]],[11,R[5],E,E,73,[[],[R[3]]]],[11,R[6],E,E,73,[[["self"]],[T]]],[11,R[7],E,E,73,[[["self"]],[T]]],[11,R[8],E,E,73,[[["self"]],[R[9]]]],[11,R[113],E,E,73,[[["self"]],["string"]]],[11,R[46],E,E,73,[[["self"]],[T]]],[11,R[47],E,E,73,[[["self"],[T]]]],[11,"from",E,E,24,[[[T]],[T]]],[11,R[4],E,E,24,[[[U]],[R[3]]]],[11,"into",E,E,24,[[],[U]]],[11,R[5],E,E,24,[[],[R[3]]]],[11,R[6],E,E,24,[[["self"]],[T]]],[11,R[7],E,E,24,[[["self"]],[T]]],[11,R[8],E,E,24,[[["self"]],[R[9]]]],[11,R[113],E,E,24,[[["self"]],["string"]]],[11,R[46],E,E,24,[[["self"]],[T]]],[11,R[47],E,E,24,[[["self"],[T]]]],[11,"from",E,E,82,[[[T]],[T]]],[11,R[4],E,E,82,[[[U]],[R[3]]]],[11,"into",E,E,82,[[],[U]]],[11,R[5],E,E,82,[[],[R[3]]]],[11,R[6],E,E,82,[[["self"]],[T]]],[11,R[7],E,E,82,[[["self"]],[T]]],[11,R[8],E,E,82,[[["self"]],[R[9]]]],[11,R[113],E,E,82,[[["self"]],["string"]]],[11,R[46],E,E,82,[[["self"]],[T]]],[11,R[47],E,E,82,[[["self"],[T]]]],[11,"key",E,E,82,[[["self"]],[T]]],[11,"from",E,E,25,[[[T]],[T]]],[11,R[4],E,E,25,[[[U]],[R[3]]]],[11,"into",E,E,25,[[],[U]]],[11,R[5],E,E,25,[[],[R[3]]]],[11,R[6],E,E,25,[[["self"]],[T]]],[11,R[7],E,E,25,[[["self"]],[T]]],[11,R[8],E,E,25,[[["self"]],[R[9]]]],[11,R[46],E,E,25,[[["self"]],[T]]],[11,R[47],E,E,25,[[["self"],[T]]]],[11,"from",E,E,26,[[[T]],[T]]],[11,R[4],E,E,26,[[[U]],[R[3]]]],[11,"into",E,E,26,[[],[U]]],[11,R[5],E,E,26,[[],[R[3]]]],[11,R[6],E,E,26,[[["self"]],[T]]],[11,R[7],E,E,26,[[["self"]],[T]]],[11,R[8],E,E,26,[[["self"]],[R[9]]]],[11,R[46],E,E,26,[[["self"]],[T]]],[11,R[47],E,E,26,[[["self"],[T]]]],[11,"from",E,E,27,[[[T]],[T]]],[11,R[4],E,E,27,[[[U]],[R[3]]]],[11,"into",E,E,27,[[],[U]]],[11,R[5],E,E,27,[[],[R[3]]]],[11,R[6],E,E,27,[[["self"]],[T]]],[11,R[7],E,E,27,[[["self"]],[T]]],[11,R[8],E,E,27,[[["self"]],[R[9]]]],[11,R[113],E,E,27,[[["self"]],["string"]]],[11,R[46],E,E,27,[[["self"]],[T]]],[11,R[47],E,E,27,[[["self"],[T]]]],[11,"from",E,E,28,[[[T]],[T]]],[11,R[4],E,E,28,[[[U]],[R[3]]]],[11,"into",E,E,28,[[],[U]]],[11,R[5],E,E,28,[[],[R[3]]]],[11,R[6],E,E,28,[[["self"]],[T]]],[11,R[7],E,E,28,[[["self"]],[T]]],[11,R[8],E,E,28,[[["self"]],[R[9]]]],[11,R[113],E,E,28,[[["self"]],["string"]]],[11,R[46],E,E,28,[[["self"]],[T]]],[11,R[47],E,E,28,[[["self"],[T]]]],[11,"from",E,E,29,[[[T]],[T]]],[11,R[4],E,E,29,[[[U]],[R[3]]]],[11,"into",E,E,29,[[],[U]]],[11,R[5],E,E,29,[[],[R[3]]]],[11,R[6],E,E,29,[[["self"]],[T]]],[11,R[7],E,E,29,[[["self"]],[T]]],[11,R[8],E,E,29,[[["self"]],[R[9]]]],[11,R[113],E,E,29,[[["self"]],["string"]]],[11,R[46],E,E,29,[[["self"]],[T]]],[11,R[47],E,E,29,[[["self"],[T]]]],[11,"from",E,E,30,[[[T]],[T]]],[11,R[4],E,E,30,[[[U]],[R[3]]]],[11,"into",E,E,30,[[],[U]]],[11,R[5],E,E,30,[[],[R[3]]]],[11,R[6],E,E,30,[[["self"]],[T]]],[11,R[7],E,E,30,[[["self"]],[T]]],[11,R[8],E,E,30,[[["self"]],[R[9]]]],[11,R[46],E,E,30,[[["self"]],[T]]],[11,R[47],E,E,30,[[["self"],[T]]]],[11,"from",E,E,31,[[[T]],[T]]],[11,R[4],E,E,31,[[[U]],[R[3]]]],[11,"into",E,E,31,[[],[U]]],[11,R[5],E,E,31,[[],[R[3]]]],[11,R[6],E,E,31,[[["self"]],[T]]],[11,R[7],E,E,31,[[["self"]],[T]]],[11,R[8],E,E,31,[[["self"]],[R[9]]]],[11,R[113],E,E,31,[[["self"]],["string"]]],[11,R[46],E,E,31,[[["self"]],[T]]],[11,R[47],E,E,31,[[["self"],[T]]]],[11,"from",E,E,32,[[[T]],[T]]],[11,R[4],E,E,32,[[[U]],[R[3]]]],[11,"into",E,E,32,[[],[U]]],[11,R[5],E,E,32,[[],[R[3]]]],[11,R[6],E,E,32,[[["self"]],[T]]],[11,R[7],E,E,32,[[["self"]],[T]]],[11,R[8],E,E,32,[[["self"]],[R[9]]]],[11,R[113],E,E,32,[[["self"]],["string"]]],[11,R[46],E,E,32,[[["self"]],[T]]],[11,R[47],E,E,32,[[["self"],[T]]]],[11,"from",E,E,33,[[[T]],[T]]],[11,R[4],E,E,33,[[[U]],[R[3]]]],[11,"into",E,E,33,[[],[U]]],[11,R[5],E,E,33,[[],[R[3]]]],[11,R[6],E,E,33,[[["self"]],[T]]],[11,R[7],E,E,33,[[["self"]],[T]]],[11,R[8],E,E,33,[[["self"]],[R[9]]]],[11,R[113],E,E,33,[[["self"]],["string"]]],[11,R[46],E,E,33,[[["self"]],[T]]],[11,R[47],E,E,33,[[["self"],[T]]]],[11,"from",E,E,34,[[[T]],[T]]],[11,R[4],E,E,34,[[[U]],[R[3]]]],[11,"into",E,E,34,[[],[U]]],[11,R[5],E,E,34,[[],[R[3]]]],[11,R[6],E,E,34,[[["self"]],[T]]],[11,R[7],E,E,34,[[["self"]],[T]]],[11,R[8],E,E,34,[[["self"]],[R[9]]]],[11,R[46],E,E,34,[[["self"]],[T]]],[11,R[47],E,E,34,[[["self"],[T]]]],[11,"from",E,E,35,[[[T]],[T]]],[11,R[4],E,E,35,[[[U]],[R[3]]]],[11,"into",E,E,35,[[],[U]]],[11,R[5],E,E,35,[[],[R[3]]]],[11,R[6],E,E,35,[[["self"]],[T]]],[11,R[7],E,E,35,[[["self"]],[T]]],[11,R[8],E,E,35,[[["self"]],[R[9]]]],[11,R[46],E,E,35,[[["self"]],[T]]],[11,R[47],E,E,35,[[["self"],[T]]]],[11,"from",E,E,36,[[[T]],[T]]],[11,R[4],E,E,36,[[[U]],[R[3]]]],[11,"into",E,E,36,[[],[U]]],[11,R[5],E,E,36,[[],[R[3]]]],[11,R[6],E,E,36,[[["self"]],[T]]],[11,R[7],E,E,36,[[["self"]],[T]]],[11,R[8],E,E,36,[[["self"]],[R[9]]]],[11,R[46],E,E,36,[[["self"]],[T]]],[11,R[47],E,E,36,[[["self"],[T]]]],[11,"from",R[5104],E,38,[[[T]],[T]]],[11,R[4],E,E,38,[[[U]],[R[3]]]],[11,"into",E,E,38,[[],[U]]],[11,R[5],E,E,38,[[],[R[3]]]],[11,R[6],E,E,38,[[["self"]],[T]]],[11,R[7],E,E,38,[[["self"]],[T]]],[11,R[8],E,E,38,[[["self"]],[R[9]]]],[11,R[113],E,E,38,[[["self"]],["string"]]],[11,R[46],E,E,38,[[["self"]],[T]]],[11,R[47],E,E,38,[[["self"],[T]]]],[11,"from",E,E,39,[[[T]],[T]]],[11,R[4],E,E,39,[[[U]],[R[3]]]],[11,"into",E,E,39,[[],[U]]],[11,R[5],E,E,39,[[],[R[3]]]],[11,R[6],E,E,39,[[["self"]],[T]]],[11,R[7],E,E,39,[[["self"]],[T]]],[11,R[8],E,E,39,[[["self"]],[R[9]]]],[11,R[113],E,E,39,[[["self"]],["string"]]],[11,R[46],E,E,39,[[["self"]],[T]]],[11,R[47],E,E,39,[[["self"],[T]]]],[11,"from",R[5105],E,41,[[[T]],[T]]],[11,R[4],E,E,41,[[[U]],[R[3]]]],[11,"into",E,E,41,[[],[U]]],[11,R[5],E,E,41,[[],[R[3]]]],[11,R[6],E,E,41,[[["self"]],[T]]],[11,R[7],E,E,41,[[["self"]],[T]]],[11,R[8],E,E,41,[[["self"]],[R[9]]]],[11,R[46],E,E,41,[[["self"]],[T]]],[11,R[47],E,E,41,[[["self"],[T]]]],[11,"from",E,E,121,[[[T]],[T]]],[11,R[4],E,E,121,[[[U]],[R[3]]]],[11,R[45],E,E,121,[[],["i"]]],[11,"into",E,E,121,[[],[U]]],[11,R[5],E,E,121,[[],[R[3]]]],[11,R[6],E,E,121,[[["self"]],[T]]],[11,R[7],E,E,121,[[["self"]],[T]]],[11,R[8],E,E,121,[[["self"]],[R[9]]]],[11,"from",E,E,122,[[[T]],[T]]],[11,R[4],E,E,122,[[[U]],[R[3]]]],[11,"into",E,E,122,[[],[U]]],[11,R[5],E,E,122,[[],[R[3]]]],[11,R[6],E,E,122,[[["self"]],[T]]],[11,R[7],E,E,122,[[["self"]],[T]]],[11,R[8],E,E,122,[[["self"]],[R[9]]]],[11,R[113],E,E,122,[[["self"]],["string"]]],[11,"from",E,E,42,[[[T]],[T]]],[11,R[4],E,E,42,[[[U]],[R[3]]]],[11,"into",E,E,42,[[],[U]]],[11,R[5],E,E,42,[[],[R[3]]]],[11,R[6],E,E,42,[[["self"]],[T]]],[11,R[7],E,E,42,[[["self"]],[T]]],[11,R[8],E,E,42,[[["self"]],[R[9]]]],[11,R[46],E,E,42,[[["self"]],[T]]],[11,R[47],E,E,42,[[["self"],[T]]]],[11,"from",R[5106],E,44,[[[T]],[T]]],[11,R[4],E,E,44,[[[U]],[R[3]]]],[11,"into",E,E,44,[[],[U]]],[11,R[5],E,E,44,[[],[R[3]]]],[11,R[6],E,E,44,[[["self"]],[T]]],[11,R[7],E,E,44,[[["self"]],[T]]],[11,R[8],E,E,44,[[["self"]],[R[9]]]],[11,R[113],E,E,44,[[["self"]],["string"]]],[11,R[46],E,E,44,[[["self"]],[T]]],[11,R[47],E,E,44,[[["self"],[T]]]],[11,"key",E,E,44,[[["self"]],[T]]],[11,"from",E,E,45,[[[T]],[T]]],[11,R[4],E,E,45,[[[U]],[R[3]]]],[11,"into",E,E,45,[[],[U]]],[11,R[5],E,E,45,[[],[R[3]]]],[11,R[6],E,E,45,[[["self"]],[T]]],[11,R[7],E,E,45,[[["self"]],[T]]],[11,R[8],E,E,45,[[["self"]],[R[9]]]],[11,R[113],E,E,45,[[["self"]],["string"]]],[11,R[46],E,E,45,[[["self"]],[T]]],[11,R[47],E,E,45,[[["self"],[T]]]],[11,"key",E,E,45,[[["self"]],[T]]],[11,"from",E,E,46,[[[T]],[T]]],[11,R[4],E,E,46,[[[U]],[R[3]]]],[11,"into",E,E,46,[[],[U]]],[11,R[5],E,E,46,[[],[R[3]]]],[11,R[6],E,E,46,[[["self"]],[T]]],[11,R[7],E,E,46,[[["self"]],[T]]],[11,R[8],E,E,46,[[["self"]],[R[9]]]],[11,R[113],E,E,46,[[["self"]],["string"]]],[11,R[46],E,E,46,[[["self"]],[T]]],[11,R[47],E,E,46,[[["self"],[T]]]],[11,"key",E,E,46,[[["self"]],[T]]],[11,"from",E,E,47,[[[T]],[T]]],[11,R[4],E,E,47,[[[U]],[R[3]]]],[11,"into",E,E,47,[[],[U]]],[11,R[5],E,E,47,[[],[R[3]]]],[11,R[6],E,E,47,[[["self"]],[T]]],[11,R[7],E,E,47,[[["self"]],[T]]],[11,R[8],E,E,47,[[["self"]],[R[9]]]],[11,R[113],E,E,47,[[["self"]],["string"]]],[11,R[46],E,E,47,[[["self"]],[T]]],[11,R[47],E,E,47,[[["self"],[T]]]],[11,"key",E,E,47,[[["self"]],[T]]],[11,"from",E,E,48,[[[T]],[T]]],[11,R[4],E,E,48,[[[U]],[R[3]]]],[11,"into",E,E,48,[[],[U]]],[11,R[5],E,E,48,[[],[R[3]]]],[11,R[6],E,E,48,[[["self"]],[T]]],[11,R[7],E,E,48,[[["self"]],[T]]],[11,R[8],E,E,48,[[["self"]],[R[9]]]],[11,R[113],E,E,48,[[["self"]],["string"]]],[11,R[46],E,E,48,[[["self"]],[T]]],[11,R[47],E,E,48,[[["self"],[T]]]],[11,"key",E,E,48,[[["self"]],[T]]],[11,"from",E,E,49,[[[T]],[T]]],[11,R[4],E,E,49,[[[U]],[R[3]]]],[11,"into",E,E,49,[[],[U]]],[11,R[5],E,E,49,[[],[R[3]]]],[11,R[6],E,E,49,[[["self"]],[T]]],[11,R[7],E,E,49,[[["self"]],[T]]],[11,R[8],E,E,49,[[["self"]],[R[9]]]],[11,R[113],E,E,49,[[["self"]],["string"]]],[11,R[46],E,E,49,[[["self"]],[T]]],[11,R[47],E,E,49,[[["self"],[T]]]],[11,"key",E,E,49,[[["self"]],[T]]],[11,"from",E,E,50,[[[T]],[T]]],[11,R[4],E,E,50,[[[U]],[R[3]]]],[11,"into",E,E,50,[[],[U]]],[11,R[5],E,E,50,[[],[R[3]]]],[11,R[6],E,E,50,[[["self"]],[T]]],[11,R[7],E,E,50,[[["self"]],[T]]],[11,R[8],E,E,50,[[["self"]],[R[9]]]],[11,R[113],E,E,50,[[["self"]],["string"]]],[11,R[46],E,E,50,[[["self"]],[T]]],[11,R[47],E,E,50,[[["self"],[T]]]],[11,"key",E,E,50,[[["self"]],[T]]],[11,"from",E,E,51,[[[T]],[T]]],[11,R[4],E,E,51,[[[U]],[R[3]]]],[11,"into",E,E,51,[[],[U]]],[11,R[5],E,E,51,[[],[R[3]]]],[11,R[6],E,E,51,[[["self"]],[T]]],[11,R[7],E,E,51,[[["self"]],[T]]],[11,R[8],E,E,51,[[["self"]],[R[9]]]],[11,R[113],E,E,51,[[["self"]],["string"]]],[11,R[46],E,E,51,[[["self"]],[T]]],[11,R[47],E,E,51,[[["self"],[T]]]],[11,"key",E,E,51,[[["self"]],[T]]],[11,"from",E,E,52,[[[T]],[T]]],[11,R[4],E,E,52,[[[U]],[R[3]]]],[11,"into",E,E,52,[[],[U]]],[11,R[5],E,E,52,[[],[R[3]]]],[11,R[6],E,E,52,[[["self"]],[T]]],[11,R[7],E,E,52,[[["self"]],[T]]],[11,R[8],E,E,52,[[["self"]],[R[9]]]],[11,R[113],E,E,52,[[["self"]],["string"]]],[11,R[46],E,E,52,[[["self"]],[T]]],[11,R[47],E,E,52,[[["self"],[T]]]],[11,"key",E,E,52,[[["self"]],[T]]],[11,"from",E,E,53,[[[T]],[T]]],[11,R[4],E,E,53,[[[U]],[R[3]]]],[11,"into",E,E,53,[[],[U]]],[11,R[5],E,E,53,[[],[R[3]]]],[11,R[6],E,E,53,[[["self"]],[T]]],[11,R[7],E,E,53,[[["self"]],[T]]],[11,R[8],E,E,53,[[["self"]],[R[9]]]],[11,R[113],E,E,53,[[["self"]],["string"]]],[11,R[46],E,E,53,[[["self"]],[T]]],[11,R[47],E,E,53,[[["self"],[T]]]],[11,"key",E,E,53,[[["self"]],[T]]],[11,"from",E,E,43,[[[T]],[T]]],[11,R[4],E,E,43,[[[U]],[R[3]]]],[11,"into",E,E,43,[[],[U]]],[11,R[5],E,E,43,[[],[R[3]]]],[11,R[6],E,E,43,[[["self"]],[T]]],[11,R[7],E,E,43,[[["self"]],[T]]],[11,R[8],E,E,43,[[["self"]],[R[9]]]],[11,R[113],E,E,43,[[["self"]],["string"]]],[11,R[46],E,E,43,[[["self"]],[T]]],[11,R[47],E,E,43,[[["self"],[T]]]],[11,"from",R[5107],E,54,[[[T]],[T]]],[11,R[4],E,E,54,[[[U]],[R[3]]]],[11,"into",E,E,54,[[],[U]]],[11,R[5],E,E,54,[[],[R[3]]]],[11,R[6],E,E,54,[[["self"]],[T]]],[11,R[7],E,E,54,[[["self"]],[T]]],[11,R[8],E,E,54,[[["self"]],[R[9]]]],[11,R[113],E,E,54,[[["self"]],["string"]]],[11,R[46],E,E,54,[[["self"]],[T]]],[11,R[47],E,E,54,[[["self"],[T]]]],[11,"from",E,E,55,[[[T]],[T]]],[11,R[4],E,E,55,[[[U]],[R[3]]]],[11,"into",E,E,55,[[],[U]]],[11,R[5],E,E,55,[[],[R[3]]]],[11,R[6],E,E,55,[[["self"]],[T]]],[11,R[7],E,E,55,[[["self"]],[T]]],[11,R[8],E,E,55,[[["self"]],[R[9]]]],[11,"from",E,E,123,[[[T]],[T]]],[11,R[4],E,E,123,[[[U]],[R[3]]]],[11,"into",E,E,123,[[],[U]]],[11,R[5],E,E,123,[[],[R[3]]]],[11,R[6],E,E,123,[[["self"]],[T]]],[11,R[7],E,E,123,[[["self"]],[T]]],[11,R[8],E,E,123,[[["self"]],[R[9]]]],[11,R[113],E,E,123,[[["self"]],["string"]]],[11,"from",E,E,124,[[[T]],[T]]],[11,R[4],E,E,124,[[[U]],[R[3]]]],[11,R[45],E,E,124,[[],["i"]]],[11,"into",E,E,124,[[],[U]]],[11,R[5],E,E,124,[[],[R[3]]]],[11,R[6],E,E,124,[[["self"]],[T]]],[11,R[7],E,E,124,[[["self"]],[T]]],[11,R[8],E,E,124,[[["self"]],[R[9]]]],[11,"from",R[5108],E,56,[[[T]],[T]]],[11,R[4],E,E,56,[[[U]],[R[3]]]],[11,"into",E,E,56,[[],[U]]],[11,R[5],E,E,56,[[],[R[3]]]],[11,R[6],E,E,56,[[["self"]],[T]]],[11,R[7],E,E,56,[[["self"]],[T]]],[11,R[8],E,E,56,[[["self"]],[R[9]]]],[11,R[113],E,E,56,[[["self"]],["string"]]],[11,R[46],E,E,56,[[["self"]],[T]]],[11,R[47],E,E,56,[[["self"],[T]]]],[11,"from",E,E,57,[[[T]],[T]]],[11,R[4],E,E,57,[[[U]],[R[3]]]],[11,"into",E,E,57,[[],[U]]],[11,R[5],E,E,57,[[],[R[3]]]],[11,R[6],E,E,57,[[["self"]],[T]]],[11,R[7],E,E,57,[[["self"]],[T]]],[11,R[8],E,E,57,[[["self"]],[R[9]]]],[11,R[113],E,E,57,[[["self"]],["string"]]],[11,R[46],E,E,57,[[["self"]],[T]]],[11,R[47],E,E,57,[[["self"],[T]]]],[11,"from",E,E,125,[[[T]],[T]]],[11,R[4],E,E,125,[[[U]],[R[3]]]],[11,"into",E,E,125,[[],[U]]],[11,R[5],E,E,125,[[],[R[3]]]],[11,R[6],E,E,125,[[["self"]],[T]]],[11,R[7],E,E,125,[[["self"]],[T]]],[11,R[8],E,E,125,[[["self"]],[R[9]]]],[11,R[113],E,E,125,[[["self"]],["string"]]],[11,R[46],E,E,125,[[["self"]],[T]]],[11,R[47],E,E,125,[[["self"],[T]]]],[11,"from",E,E,58,[[[T]],[T]]],[11,R[4],E,E,58,[[[U]],[R[3]]]],[11,"into",E,E,58,[[],[U]]],[11,R[5],E,E,58,[[],[R[3]]]],[11,R[6],E,E,58,[[["self"]],[T]]],[11,R[7],E,E,58,[[["self"]],[T]]],[11,R[8],E,E,58,[[["self"]],[R[9]]]],[11,R[113],E,E,58,[[["self"]],["string"]]],[11,R[46],E,E,58,[[["self"]],[T]]],[11,R[47],E,E,58,[[["self"],[T]]]],[11,"from",E,E,59,[[[T]],[T]]],[11,R[4],E,E,59,[[[U]],[R[3]]]],[11,"into",E,E,59,[[],[U]]],[11,R[5],E,E,59,[[],[R[3]]]],[11,R[6],E,E,59,[[["self"]],[T]]],[11,R[7],E,E,59,[[["self"]],[T]]],[11,R[8],E,E,59,[[["self"]],[R[9]]]],[11,R[113],E,E,59,[[["self"]],["string"]]],[11,R[46],E,E,59,[[["self"]],[T]]],[11,R[47],E,E,59,[[["self"],[T]]]],[11,"from",E,E,60,[[[T]],[T]]],[11,R[4],E,E,60,[[[U]],[R[3]]]],[11,"into",E,E,60,[[],[U]]],[11,R[5],E,E,60,[[],[R[3]]]],[11,R[6],E,E,60,[[["self"]],[T]]],[11,R[7],E,E,60,[[["self"]],[T]]],[11,R[8],E,E,60,[[["self"]],[R[9]]]],[11,R[113],E,E,60,[[["self"]],["string"]]],[11,R[46],E,E,60,[[["self"]],[T]]],[11,R[47],E,E,60,[[["self"],[T]]]],[11,"from",R[4961],E,68,[[[T]],[T]]],[11,R[4],E,E,68,[[[U]],[R[3]]]],[11,"into",E,E,68,[[],[U]]],[11,R[5],E,E,68,[[],[R[3]]]],[11,R[6],E,E,68,[[["self"]],[T]]],[11,R[7],E,E,68,[[["self"]],[T]]],[11,R[8],E,E,68,[[["self"]],[R[9]]]],[11,R[113],E,E,68,[[["self"]],["string"]]],[11,R[46],E,E,68,[[["self"]],[T]]],[11,R[47],E,E,68,[[["self"],[T]]]],[11,"from",E,E,69,[[[T]],[T]]],[11,R[4],E,E,69,[[[U]],[R[3]]]],[11,"into",E,E,69,[[],[U]]],[11,R[5],E,E,69,[[],[R[3]]]],[11,R[6],E,E,69,[[["self"]],[T]]],[11,R[7],E,E,69,[[["self"]],[T]]],[11,R[8],E,E,69,[[["self"]],[R[9]]]],[11,R[46],E,E,69,[[["self"]],[T]]],[11,R[47],E,E,69,[[["self"],[T]]]],[11,"from",E,E,61,[[[T]],[T]]],[11,R[4],E,E,61,[[[U]],[R[3]]]],[11,"into",E,E,61,[[],[U]]],[11,R[5],E,E,61,[[],[R[3]]]],[11,R[6],E,E,61,[[["self"]],[T]]],[11,R[7],E,E,61,[[["self"]],[T]]],[11,R[8],E,E,61,[[["self"]],[R[9]]]],[11,R[46],E,E,61,[[["self"]],[T]]],[11,R[47],E,E,61,[[["self"],[T]]]],[11,"from",E,E,62,[[[T]],[T]]],[11,R[4],E,E,62,[[[U]],[R[3]]]],[11,"into",E,E,62,[[],[U]]],[11,R[5],E,E,62,[[],[R[3]]]],[11,R[6],E,E,62,[[["self"]],[T]]],[11,R[7],E,E,62,[[["self"]],[T]]],[11,R[8],E,E,62,[[["self"]],[R[9]]]],[11,R[46],E,E,62,[[["self"]],[T]]],[11,R[47],E,E,62,[[["self"],[T]]]],[11,"from",E,E,63,[[[T]],[T]]],[11,R[4],E,E,63,[[[U]],[R[3]]]],[11,"into",E,E,63,[[],[U]]],[11,R[5],E,E,63,[[],[R[3]]]],[11,R[6],E,E,63,[[["self"]],[T]]],[11,R[7],E,E,63,[[["self"]],[T]]],[11,R[8],E,E,63,[[["self"]],[R[9]]]],[11,R[46],E,E,63,[[["self"]],[T]]],[11,R[47],E,E,63,[[["self"],[T]]]],[11,"from",E,E,64,[[[T]],[T]]],[11,R[4],E,E,64,[[[U]],[R[3]]]],[11,"into",E,E,64,[[],[U]]],[11,R[5],E,E,64,[[],[R[3]]]],[11,R[6],E,E,64,[[["self"]],[T]]],[11,R[7],E,E,64,[[["self"]],[T]]],[11,R[8],E,E,64,[[["self"]],[R[9]]]],[11,R[113],E,E,64,[[["self"]],["string"]]],[11,R[46],E,E,64,[[["self"]],[T]]],[11,R[47],E,E,64,[[["self"],[T]]]],[11,"from",E,E,65,[[[T]],[T]]],[11,R[4],E,E,65,[[[U]],[R[3]]]],[11,"into",E,E,65,[[],[U]]],[11,R[5],E,E,65,[[],[R[3]]]],[11,R[6],E,E,65,[[["self"]],[T]]],[11,R[7],E,E,65,[[["self"]],[T]]],[11,R[8],E,E,65,[[["self"]],[R[9]]]],[11,"from",E,E,66,[[[T]],[T]]],[11,R[4],E,E,66,[[[U]],[R[3]]]],[11,"into",E,E,66,[[],[U]]],[11,R[5],E,E,66,[[],[R[3]]]],[11,R[6],E,E,66,[[["self"]],[T]]],[11,R[7],E,E,66,[[["self"]],[T]]],[11,R[8],E,E,66,[[["self"]],[R[9]]]],[11,"from",E,E,67,[[[T]],[T]]],[11,R[4],E,E,67,[[[U]],[R[3]]]],[11,"into",E,E,67,[[],[U]]],[11,R[5],E,E,67,[[],[R[3]]]],[11,R[6],E,E,67,[[["self"]],[T]]],[11,R[7],E,E,67,[[["self"]],[T]]],[11,R[8],E,E,67,[[["self"]],[R[9]]]],[11,R[46],E,E,67,[[["self"]],[T]]],[11,R[47],E,E,67,[[["self"],[T]]]],[11,"from",R[5109],E,70,[[[T]],[T]]],[11,R[4],E,E,70,[[[U]],[R[3]]]],[11,"into",E,E,70,[[],[U]]],[11,R[5],E,E,70,[[],[R[3]]]],[11,R[6],E,E,70,[[["self"]],[T]]],[11,R[7],E,E,70,[[["self"]],[T]]],[11,R[8],E,E,70,[[["self"]],[R[9]]]],[11,R[113],E,E,70,[[["self"]],["string"]]],[11,R[46],E,E,70,[[["self"]],[T]]],[11,R[47],E,E,70,[[["self"],[T]]]],[11,"from",R[5110],E,71,[[[T]],[T]]],[11,R[4],E,E,71,[[[U]],[R[3]]]],[11,"into",E,E,71,[[],[U]]],[11,R[5],E,E,71,[[],[R[3]]]],[11,R[6],E,E,71,[[["self"]],[T]]],[11,R[7],E,E,71,[[["self"]],[T]]],[11,R[8],E,E,71,[[["self"]],[R[9]]]],[11,R[46],E,E,71,[[["self"]],[T]]],[11,R[47],E,E,71,[[["self"],[T]]]],[11,"from",E,E,126,[[[T]],[T]]],[11,R[4],E,E,126,[[[U]],[R[3]]]],[11,R[45],E,E,126,[[],["i"]]],[11,"into",E,E,126,[[],[U]]],[11,R[5],E,E,126,[[],[R[3]]]],[11,R[6],E,E,126,[[["self"]],[T]]],[11,R[7],E,E,126,[[["self"]],[T]]],[11,R[8],E,E,126,[[["self"]],[R[9]]]],[11,"from",E,E,127,[[[T]],[T]]],[11,R[4],E,E,127,[[[U]],[R[3]]]],[11,R[45],E,E,127,[[],["i"]]],[11,"into",E,E,127,[[],[U]]],[11,R[5],E,E,127,[[],[R[3]]]],[11,R[6],E,E,127,[[["self"]],[T]]],[11,R[7],E,E,127,[[["self"]],[T]]],[11,R[8],E,E,127,[[["self"]],[R[9]]]],[11,"from",R[5111],E,74,[[[T]],[T]]],[11,R[4],E,E,74,[[[U]],[R[3]]]],[11,"into",E,E,74,[[],[U]]],[11,R[5],E,E,74,[[],[R[3]]]],[11,R[6],E,E,74,[[["self"]],[T]]],[11,R[7],E,E,74,[[["self"]],[T]]],[11,R[8],E,E,74,[[["self"]],[R[9]]]],[11,R[113],E,E,74,[[["self"]],["string"]]],[11,R[46],E,E,74,[[["self"]],[T]]],[11,R[47],E,E,74,[[["self"],[T]]]],[11,"from",E,E,75,[[[T]],[T]]],[11,R[4],E,E,75,[[[U]],[R[3]]]],[11,"into",E,E,75,[[],[U]]],[11,R[5],E,E,75,[[],[R[3]]]],[11,R[6],E,E,75,[[["self"]],[T]]],[11,R[7],E,E,75,[[["self"]],[T]]],[11,R[8],E,E,75,[[["self"]],[R[9]]]],[11,R[46],E,E,75,[[["self"]],[T]]],[11,R[47],E,E,75,[[["self"],[T]]]],[11,"from",E,E,76,[[[T]],[T]]],[11,R[4],E,E,76,[[[U]],[R[3]]]],[11,"into",E,E,76,[[],[U]]],[11,R[5],E,E,76,[[],[R[3]]]],[11,R[6],E,E,76,[[["self"]],[T]]],[11,R[7],E,E,76,[[["self"]],[T]]],[11,R[8],E,E,76,[[["self"]],[R[9]]]],[11,R[113],E,E,76,[[["self"]],["string"]]],[11,R[46],E,E,76,[[["self"]],[T]]],[11,R[47],E,E,76,[[["self"],[T]]]],[11,"from",R[5112],E,77,[[[T]],[T]]],[11,R[4],E,E,77,[[[U]],[R[3]]]],[11,"into",E,E,77,[[],[U]]],[11,R[5],E,E,77,[[],[R[3]]]],[11,R[6],E,E,77,[[["self"]],[T]]],[11,R[7],E,E,77,[[["self"]],[T]]],[11,R[8],E,E,77,[[["self"]],[R[9]]]],[11,R[113],E,E,77,[[["self"]],["string"]]],[11,R[46],E,E,77,[[["self"]],[T]]],[11,R[47],E,E,77,[[["self"],[T]]]],[11,"from",R[5065],E,83,[[[T]],[T]]],[11,R[4],E,E,83,[[[U]],[R[3]]]],[11,"into",E,E,83,[[],[U]]],[11,R[5],E,E,83,[[],[R[3]]]],[11,R[6],E,E,83,[[["self"]],[T]]],[11,R[7],E,E,83,[[["self"]],[T]]],[11,R[8],E,E,83,[[["self"]],[R[9]]]],[11,R[46],E,E,83,[[["self"]],[T]]],[11,R[47],E,E,83,[[["self"],[T]]]],[11,"from",E,E,84,[[[T]],[T]]],[11,R[4],E,E,84,[[[U]],[R[3]]]],[11,"into",E,E,84,[[],[U]]],[11,R[5],E,E,84,[[],[R[3]]]],[11,R[6],E,E,84,[[["self"]],[T]]],[11,R[7],E,E,84,[[["self"]],[T]]],[11,R[8],E,E,84,[[["self"]],[R[9]]]],[11,"from",E,E,85,[[[T]],[T]]],[11,R[4],E,E,85,[[[U]],[R[3]]]],[11,"into",E,E,85,[[],[U]]],[11,R[5],E,E,85,[[],[R[3]]]],[11,R[6],E,E,85,[[["self"]],[T]]],[11,R[7],E,E,85,[[["self"]],[T]]],[11,R[8],E,E,85,[[["self"]],[R[9]]]],[11,R[46],E,E,85,[[["self"]],[T]]],[11,R[47],E,E,85,[[["self"],[T]]]],[11,"from",E,E,86,[[[T]],[T]]],[11,R[4],E,E,86,[[[U]],[R[3]]]],[11,"into",E,E,86,[[],[U]]],[11,R[5],E,E,86,[[],[R[3]]]],[11,R[6],E,E,86,[[["self"]],[T]]],[11,R[7],E,E,86,[[["self"]],[T]]],[11,R[8],E,E,86,[[["self"]],[R[9]]]],[11,R[46],E,E,86,[[["self"]],[T]]],[11,R[47],E,E,86,[[["self"],[T]]]],[11,"from",E,E,94,[[[T]],[T]]],[11,R[4],E,E,94,[[[U]],[R[3]]]],[11,"into",E,E,94,[[],[U]]],[11,R[5],E,E,94,[[],[R[3]]]],[11,R[6],E,E,94,[[["self"]],[T]]],[11,R[7],E,E,94,[[["self"]],[T]]],[11,R[8],E,E,94,[[["self"]],[R[9]]]],[11,R[113],E,E,94,[[["self"]],["string"]]],[11,R[46],E,E,94,[[["self"]],[T]]],[11,R[47],E,E,94,[[["self"],[T]]]],[11,"from",E,E,87,[[[T]],[T]]],[11,R[4],E,E,87,[[[U]],[R[3]]]],[11,"into",E,E,87,[[],[U]]],[11,R[5],E,E,87,[[],[R[3]]]],[11,R[6],E,E,87,[[["self"]],[T]]],[11,R[7],E,E,87,[[["self"]],[T]]],[11,R[8],E,E,87,[[["self"]],[R[9]]]],[11,R[46],E,E,87,[[["self"]],[T]]],[11,R[47],E,E,87,[[["self"],[T]]]],[11,"from",E,E,88,[[[T]],[T]]],[11,R[4],E,E,88,[[[U]],[R[3]]]],[11,"into",E,E,88,[[],[U]]],[11,R[5],E,E,88,[[],[R[3]]]],[11,R[6],E,E,88,[[["self"]],[T]]],[11,R[7],E,E,88,[[["self"]],[T]]],[11,R[8],E,E,88,[[["self"]],[R[9]]]],[11,R[46],E,E,88,[[["self"]],[T]]],[11,R[47],E,E,88,[[["self"],[T]]]],[11,"from",E,E,99,[[[T]],[T]]],[11,R[4],E,E,99,[[[U]],[R[3]]]],[11,"into",E,E,99,[[],[U]]],[11,R[5],E,E,99,[[],[R[3]]]],[11,R[6],E,E,99,[[["self"]],[T]]],[11,R[7],E,E,99,[[["self"]],[T]]],[11,R[8],E,E,99,[[["self"]],[R[9]]]],[11,"from",E,E,89,[[[T]],[T]]],[11,R[4],E,E,89,[[[U]],[R[3]]]],[11,"into",E,E,89,[[],[U]]],[11,R[5],E,E,89,[[],[R[3]]]],[11,R[6],E,E,89,[[["self"]],[T]]],[11,R[7],E,E,89,[[["self"]],[T]]],[11,R[8],E,E,89,[[["self"]],[R[9]]]],[11,R[46],E,E,89,[[["self"]],[T]]],[11,R[47],E,E,89,[[["self"],[T]]]],[11,"from",E,E,90,[[[T]],[T]]],[11,R[4],E,E,90,[[[U]],[R[3]]]],[11,"into",E,E,90,[[],[U]]],[11,R[5],E,E,90,[[],[R[3]]]],[11,R[6],E,E,90,[[["self"]],[T]]],[11,R[7],E,E,90,[[["self"]],[T]]],[11,R[8],E,E,90,[[["self"]],[R[9]]]],[11,R[113],E,E,90,[[["self"]],["string"]]],[11,R[46],E,E,90,[[["self"]],[T]]],[11,R[47],E,E,90,[[["self"],[T]]]],[11,"from",E,E,91,[[[T]],[T]]],[11,R[4],E,E,91,[[[U]],[R[3]]]],[11,"into",E,E,91,[[],[U]]],[11,R[5],E,E,91,[[],[R[3]]]],[11,R[6],E,E,91,[[["self"]],[T]]],[11,R[7],E,E,91,[[["self"]],[T]]],[11,R[8],E,E,91,[[["self"]],[R[9]]]],[11,R[46],E,E,91,[[["self"]],[T]]],[11,R[47],E,E,91,[[["self"],[T]]]],[11,"from",E,E,92,[[[T]],[T]]],[11,R[4],E,E,92,[[[U]],[R[3]]]],[11,"into",E,E,92,[[],[U]]],[11,R[5],E,E,92,[[],[R[3]]]],[11,R[6],E,E,92,[[["self"]],[T]]],[11,R[7],E,E,92,[[["self"]],[T]]],[11,R[8],E,E,92,[[["self"]],[R[9]]]],[11,R[46],E,E,92,[[["self"]],[T]]],[11,R[47],E,E,92,[[["self"],[T]]]],[11,"from",E,E,93,[[[T]],[T]]],[11,R[4],E,E,93,[[[U]],[R[3]]]],[11,"into",E,E,93,[[],[U]]],[11,R[5],E,E,93,[[],[R[3]]]],[11,R[6],E,E,93,[[["self"]],[T]]],[11,R[7],E,E,93,[[["self"]],[T]]],[11,R[8],E,E,93,[[["self"]],[R[9]]]],[11,R[113],E,E,93,[[["self"]],["string"]]],[11,R[46],E,E,93,[[["self"]],[T]]],[11,R[47],E,E,93,[[["self"],[T]]]],[11,"as_fail",E,E,93,[[["self"]],["fail"]]],[11,"from",R[5113],E,95,[[[T]],[T]]],[11,R[4],E,E,95,[[[U]],[R[3]]]],[11,"into",E,E,95,[[],[U]]],[11,R[5],E,E,95,[[],[R[3]]]],[11,R[6],E,E,95,[[["self"]],[T]]],[11,R[7],E,E,95,[[["self"]],[T]]],[11,R[8],E,E,95,[[["self"]],[R[9]]]],[11,"from",E,E,96,[[[T]],[T]]],[11,R[4],E,E,96,[[[U]],[R[3]]]],[11,"into",E,E,96,[[],[U]]],[11,R[5],E,E,96,[[],[R[3]]]],[11,R[6],E,E,96,[[["self"]],[T]]],[11,R[7],E,E,96,[[["self"]],[T]]],[11,R[8],E,E,96,[[["self"]],[R[9]]]],[11,R[113],E,E,96,[[["self"]],["string"]]],[11,"from",E,E,128,[[[T]],[T]]],[11,R[4],E,E,128,[[[U]],[R[3]]]],[11,"into",E,E,128,[[],[U]]],[11,R[5],E,E,128,[[],[R[3]]]],[11,R[6],E,E,128,[[["self"]],[T]]],[11,R[7],E,E,128,[[["self"]],[T]]],[11,R[8],E,E,128,[[["self"]],[R[9]]]],[11,R[113],E,E,128,[[["self"]],["string"]]],[11,R[46],E,E,128,[[["self"]],[T]]],[11,R[47],E,E,128,[[["self"],[T]]]],[11,"key",E,E,128,[[["self"]],[T]]],[11,"from",E,E,97,[[[T]],[T]]],[11,R[4],E,E,97,[[[U]],[R[3]]]],[11,"into",E,E,97,[[],[U]]],[11,R[5],E,E,97,[[],[R[3]]]],[11,R[6],E,E,97,[[["self"]],[T]]],[11,R[7],E,E,97,[[["self"]],[T]]],[11,R[8],E,E,97,[[["self"]],[R[9]]]],[11,R[46],E,E,97,[[["self"]],[T]]],[11,R[47],E,E,97,[[["self"],[T]]]],[11,"from",E,E,129,[[[T]],[T]]],[11,R[4],E,E,129,[[[U]],[R[3]]]],[11,"into",E,E,129,[[],[U]]],[11,R[5],E,E,129,[[],[R[3]]]],[11,R[6],E,E,129,[[["self"]],[T]]],[11,R[7],E,E,129,[[["self"]],[T]]],[11,R[8],E,E,129,[[["self"]],[R[9]]]],[11,R[113],E,E,129,[[["self"]],["string"]]],[11,"from",R[5114],E,100,[[[T]],[T]]],[11,R[4],E,E,100,[[[U]],[R[3]]]],[11,"into",E,E,100,[[],[U]]],[11,R[5],E,E,100,[[],[R[3]]]],[11,R[6],E,E,100,[[["self"]],[T]]],[11,R[7],E,E,100,[[["self"]],[T]]],[11,R[8],E,E,100,[[["self"]],[R[9]]]],[11,R[113],E,E,100,[[["self"]],["string"]]],[11,R[46],E,E,100,[[["self"]],[T]]],[11,R[47],E,E,100,[[["self"],[T]]]],[11,"key",E,E,100,[[["self"]],[T]]],[11,"from",E,E,101,[[[T]],[T]]],[11,R[4],E,E,101,[[[U]],[R[3]]]],[11,"into",E,E,101,[[],[U]]],[11,R[5],E,E,101,[[],[R[3]]]],[11,R[6],E,E,101,[[["self"]],[T]]],[11,R[7],E,E,101,[[["self"]],[T]]],[11,R[8],E,E,101,[[["self"]],[R[9]]]],[11,"from",R[5077],E,109,[[[T]],[T]]],[11,R[4],E,E,109,[[[U]],[R[3]]]],[11,"into",E,E,109,[[],[U]]],[11,R[5],E,E,109,[[],[R[3]]]],[11,R[6],E,E,109,[[["self"]],[T]]],[11,R[7],E,E,109,[[["self"]],[T]]],[11,R[8],E,E,109,[[["self"]],[R[9]]]],[11,R[46],E,E,109,[[["self"]],[T]]],[11,R[47],E,E,109,[[["self"],[T]]]],[11,"from",E,E,110,[[[T]],[T]]],[11,R[4],E,E,110,[[[U]],[R[3]]]],[11,"into",E,E,110,[[],[U]]],[11,R[5],E,E,110,[[],[R[3]]]],[11,R[6],E,E,110,[[["self"]],[T]]],[11,R[7],E,E,110,[[["self"]],[T]]],[11,R[8],E,E,110,[[["self"]],[R[9]]]],[11,R[46],E,E,110,[[["self"]],[T]]],[11,R[47],E,E,110,[[["self"],[T]]]],[11,"from",E,E,111,[[[T]],[T]]],[11,R[4],E,E,111,[[[U]],[R[3]]]],[11,"into",E,E,111,[[],[U]]],[11,R[5],E,E,111,[[],[R[3]]]],[11,R[6],E,E,111,[[["self"]],[T]]],[11,R[7],E,E,111,[[["self"]],[T]]],[11,R[8],E,E,111,[[["self"]],[R[9]]]],[11,R[113],E,E,111,[[["self"]],["string"]]],[11,R[46],E,E,111,[[["self"]],[T]]],[11,R[47],E,E,111,[[["self"],[T]]]],[11,"from",E,E,102,[[[T]],[T]]],[11,R[4],E,E,102,[[[U]],[R[3]]]],[11,"into",E,E,102,[[],[U]]],[11,R[5],E,E,102,[[],[R[3]]]],[11,R[6],E,E,102,[[["self"]],[T]]],[11,R[7],E,E,102,[[["self"]],[T]]],[11,R[8],E,E,102,[[["self"]],[R[9]]]],[11,R[46],E,E,102,[[["self"]],[T]]],[11,R[47],E,E,102,[[["self"],[T]]]],[11,"from",E,E,103,[[[T]],[T]]],[11,R[4],E,E,103,[[[U]],[R[3]]]],[11,"into",E,E,103,[[],[U]]],[11,R[5],E,E,103,[[],[R[3]]]],[11,R[6],E,E,103,[[["self"]],[T]]],[11,R[7],E,E,103,[[["self"]],[T]]],[11,R[8],E,E,103,[[["self"]],[R[9]]]],[11,R[113],E,E,103,[[["self"]],["string"]]],[11,"as_fail",E,E,103,[[["self"]],["fail"]]],[11,"from",E,E,104,[[[T]],[T]]],[11,R[4],E,E,104,[[[U]],[R[3]]]],[11,"into",E,E,104,[[],[U]]],[11,R[5],E,E,104,[[],[R[3]]]],[11,R[6],E,E,104,[[["self"]],[T]]],[11,R[7],E,E,104,[[["self"]],[T]]],[11,R[8],E,E,104,[[["self"]],[R[9]]]],[11,R[113],E,E,104,[[["self"]],["string"]]],[11,R[46],E,E,104,[[["self"]],[T]]],[11,R[47],E,E,104,[[["self"],[T]]]],[11,"from",R[5074],E,105,[[[T]],[T]]],[11,R[4],E,E,105,[[[U]],[R[3]]]],[11,"into",E,E,105,[[],[U]]],[11,R[5],E,E,105,[[],[R[3]]]],[11,R[6],E,E,105,[[["self"]],[T]]],[11,R[7],E,E,105,[[["self"]],[T]]],[11,R[8],E,E,105,[[["self"]],[R[9]]]],[11,"from",E,E,106,[[[T]],[T]]],[11,R[4],E,E,106,[[[U]],[R[3]]]],[11,"into",E,E,106,[[],[U]]],[11,R[5],E,E,106,[[],[R[3]]]],[11,R[6],E,E,106,[[["self"]],[T]]],[11,R[7],E,E,106,[[["self"]],[T]]],[11,R[8],E,E,106,[[["self"]],[R[9]]]],[11,"from",E,E,107,[[[T]],[T]]],[11,R[4],E,E,107,[[[U]],[R[3]]]],[11,"into",E,E,107,[[],[U]]],[11,R[5],E,E,107,[[],[R[3]]]],[11,R[6],E,E,107,[[["self"]],[T]]],[11,R[7],E,E,107,[[["self"]],[T]]],[11,R[8],E,E,107,[[["self"]],[R[9]]]],[11,R[46],E,E,107,[[["self"]],[T]]],[11,R[47],E,E,107,[[["self"],[T]]]],[11,"from",R[5115],E,130,[[[T]],[T]]],[11,R[4],E,E,130,[[[U]],[R[3]]]],[11,"into",E,E,130,[[],[U]]],[11,R[5],E,E,130,[[],[R[3]]]],[11,R[6],E,E,130,[[["self"]],[T]]],[11,R[7],E,E,130,[[["self"]],[T]]],[11,R[8],E,E,130,[[["self"]],[R[9]]]],[11,R[113],E,E,130,[[["self"]],["string"]]],[11,"from",E,E,131,[[[T]],[T]]],[11,R[4],E,E,131,[[[U]],[R[3]]]],[11,"into",E,E,131,[[],[U]]],[11,R[5],E,E,131,[[],[R[3]]]],[11,R[6],E,E,131,[[["self"]],[T]]],[11,R[7],E,E,131,[[["self"]],[T]]],[11,R[8],E,E,131,[[["self"]],[R[9]]]],[11,"from",R[5116],E,112,[[[T]],[T]]],[11,R[4],E,E,112,[[[U]],[R[3]]]],[11,"into",E,E,112,[[],[U]]],[11,R[5],E,E,112,[[],[R[3]]]],[11,R[6],E,E,112,[[["self"]],[T]]],[11,R[7],E,E,112,[[["self"]],[T]]],[11,R[8],E,E,112,[[["self"]],[R[9]]]],[11,R[113],E,E,112,[[["self"]],["string"]]],[11,"as_fail",E,E,112,[[["self"]],["fail"]]],[11,"from",E,E,113,[[[T]],[T]]],[11,R[4],E,E,113,[[[U]],[R[3]]]],[11,"into",E,E,113,[[],[U]]],[11,R[5],E,E,113,[[],[R[3]]]],[11,R[6],E,E,113,[[["self"]],[T]]],[11,R[7],E,E,113,[[["self"]],[T]]],[11,R[8],E,E,113,[[["self"]],[R[9]]]],[11,R[113],E,E,113,[[["self"]],["string"]]],[11,"as_fail",E,E,113,[[["self"]],["fail"]]],[11,"from",R[5117],E,132,[[[T]],[T]]],[11,R[4],E,E,132,[[[U]],[R[3]]]],[11,"into",E,E,132,[[],[U]]],[11,R[5],E,E,132,[[],[R[3]]]],[11,R[6],E,E,132,[[["self"]],[T]]],[11,R[7],E,E,132,[[["self"]],[T]]],[11,R[8],E,E,132,[[["self"]],[R[9]]]],[11,"eq",R[5098],E,116,[[["self"],[R[49]]],["bool"]]],[11,"ne",E,E,116,[[["self"],[R[49]]],["bool"]]],[11,"from",E,R[5430],116,[[[T]],[R[49]]]],[11,"from",E,R[5431],116,[[[R[23]]],[R[49]]]],[11,"fmt",E,E,116,[[["self"],[R[10]]],[["error"],[R[3],["error"]]]]],[11,"clone",E,E,116,[[["self"]],[R[49]]]],[11,R[77],E,E,116,[[["self"],[R[49]]],[[R[23],[R[50]]],[R[50]]]]],[11,"lt",E,E,116,[[["self"],[R[49]]],["bool"]]],[11,"le",E,E,116,[[["self"],[R[49]]],["bool"]]],[11,"gt",E,E,116,[[["self"],[R[49]]],["bool"]]],[11,"ge",E,E,116,[[["self"],[R[49]]],["bool"]]],[11,"into",E,E,116,[[],[R[23]]]],[11,"cmp",E,E,116,[[["self"],[R[49]]],[R[50]]]],[11,"hash",E,E,116,[[["self"],["__h"]]]],[11,R[83],E,R[5432],116,[[],[R[49]]]],[11,"trap",R[5095],E,117,[[["self"],[R[4926]],[R[4919]],[R[4997]]]]],[11,"offset",E,E,4,[[["self"]],[R[4919]]]],[11,"put1",E,E,4,[[["self"],["u8"]]]],[11,"put2",E,E,4,[[["self"],["u16"]]]],[11,"put4",E,E,4,[[["self"],["u32"]]]],[11,"put8",E,E,4,[[["self"],["u64"]]]],[11,"reloc_ebb",E,E,4,[[["self"],["reloc"],[R[4919]]]]],[11,R[4921],E,E,4,[[["self"],["addend"],["reloc"],[R[4922]]]]],[11,"reloc_jt",E,E,4,[[["self"],["reloc"],[R[4986]]]]],[11,"trap",E,E,4,[[["self"],[R[4997]],[R[4926]]]]],[11,R[5118],E,E,4,[[["self"]]]],[11,R[5119],E,E,4,[[["self"]]]],[11,R[5120],E,E,4,[[["self"]]]],[11,R[368],R[5100],E,11,[[["self"]],[R[4925]]]],[11,R[5121],E,E,11,[[["self"],[R[4925]]]]],[11,"srcloc",E,E,11,[[["self"]],[R[4926]]]],[11,R[5122],E,E,11,[[["self"],[R[4926]]]]],[11,"layout",E,E,11,[[["self"]],["layout"]]],[11,R[5123],E,E,11,[[["self"]],["layout"]]],[11,R[368],E,E,12,[[["self"]],[R[4925]]]],[11,R[5121],E,E,12,[[["self"],[R[4925]]]]],[11,"srcloc",E,E,12,[[["self"]],[R[4926]]]],[11,R[5122],E,E,12,[[["self"],[R[4926]]]]],[11,"layout",E,E,12,[[["self"]],["layout"]]],[11,R[5123],E,E,12,[[["self"]],["layout"]]],[11,R[5056],R[4934],E,37,[[["self"]],[R[5054]]]],[11,R[5057],E,E,37,[[["self"]],[R[5054]]]],[11,"build",E,E,37,[[[R[5055]],["type"]]]],[11,"inverse",R[5104],E,38,[[],["self"]]],[11,"reverse",E,E,38,[[],["self"]]],[11,"inverse",E,E,39,[[],["self"]]],[11,"reverse",E,E,39,[[],["self"]]],[11,"cmp",R[5110],E,71,[[["self"],["a"],["b"]],[R[50]]]],[11,"is_ebb_gap",E,E,71,[[["self"],["ebb"],["inst"]],["bool"]]],[11,"set",R[5065],E,99,[[["self"],["str"]],[R[5124]]]],[11,"enable",E,E,99,[[["self"],["str"]],[R[5124]]]],[11,"enable",R[5077],E,109,[[["self"],["str"]],[R[5124]]]],[11,"set",E,E,109,[[["self"],["str"]],[R[5124]]]],[11,R[5125],R[5117],E,132,[[["self"],[R[4928]],[R[23],[R[4929]]],["write"],[R[4929]],["usize"],["inst"],[R[5126]]],[R[3]]]],[11,R[5090],E,E,132,[[["self"],[R[4928]],["usize"],[R[23],[R[4929]]],["write"],[R[4929]],["ebb"]],[R[3]]]],[11,"deref",R[4961],E,68,[[["self"]]]],[11,R[17],E,E,68,[[["self"]]]],[11,"from",R[5106],E,43,[[["ebb"]],["self"]]],[11,"from",E,E,43,[[["inst"]],["self"]]],[11,"from",E,E,43,[[["value"]],["self"]]],[11,"from",E,E,43,[[[R[4991]]],["self"]]],[11,"from",E,E,43,[[[R[5001]]],["self"]]],[11,"from",E,E,43,[[[R[4986]]],["self"]]],[11,"from",E,E,43,[[["funcref"]],["self"]]],[11,"from",E,E,43,[[["sigref"]],["self"]]],[11,"from",E,E,43,[[["heap"]],["self"]]],[11,"from",E,E,43,[[["table"]],["self"]]],[11,"from",R[5107],E,55,[[[R[4929]],[R[23],[R[4929]]]],[R[5089]]]],[11,"from",R[5108],E,56,[[["i64"]],["self"]]],[11,"from",E,E,57,[[["u64"]],["self"]]],[11,"from",E,E,125,[[["u32"]],["self"]]],[11,"from",E,E,58,[[["i32"]],["self"]]],[11,"from",E,E,59,[[["f32"]],["self"]]],[11,"from",E,E,60,[[["f64"]],["self"]]],[11,"from",R[4961],E,62,[[[R[5055]]],["self"]]],[11,"from",R[4934],E,120,[[["inst"]],["self"]]],[11,"from",E,E,120,[[["ebb"]],["self"]]],[11,"from",E,E,120,[[["valuedef"]],["self"]]],[11,"from",E,E,32,[[["inst"]],["self"]]],[11,"from",E,E,32,[[["ebb"]],["self"]]],[11,"from",E,E,32,[[["valuedef"]],["self"]]],[11,"from",E,E,32,[[[R[5132]]],["self"]]],[11,"from",R[5113],E,128,[[[R[5064]]],["self"]]],[11,"from",R[5077],E,102,[[["flags"]],[R[5088]]]],[11,"from",E,E,102,[[[R[4929]]],[R[5088]]]],[11,"from",R[5116],E,113,[[[R[5127]],["vec",[R[5127]]]],["self"]]],[11,"from",R[4918],E,3,[[[R[5084]]],["self"]]],[11,"eq",R[5095],E,5,[[["self"],[R[5091]]],["bool"]]],[11,"ne",E,E,5,[[["self"],[R[5091]]],["bool"]]],[11,"eq",R[5100],E,13,[[["self"],[R[4925]]],["bool"]]],[11,"ne",E,E,13,[[["self"],[R[4925]]],["bool"]]],[11,"eq",R[5103],E,18,[[["self"],[R[5128]]],["bool"]]],[11,"ne",E,E,18,[[["self"],[R[5128]]],["bool"]]],[11,"eq",R[5104],E,38,[[["self"],["intcc"]],["bool"]]],[11,"eq",E,E,39,[[["self"],["floatcc"]],["bool"]]],[11,"eq",R[5105],E,42,[[["self"],["valuedef"]],["bool"]]],[11,"ne",E,E,42,[[["self"],["valuedef"]],["bool"]]],[11,"eq",R[5106],E,44,[[["self"],["ebb"]],["bool"]]],[11,"ne",E,E,44,[[["self"],["ebb"]],["bool"]]],[11,"eq",E,E,45,[[["self"],["value"]],["bool"]]],[11,"ne",E,E,45,[[["self"],["value"]],["bool"]]],[11,"eq",E,E,46,[[["self"],["inst"]],["bool"]]],[11,"ne",E,E,46,[[["self"],["inst"]],["bool"]]],[11,"eq",E,E,47,[[["self"],[R[4991]]],["bool"]]],[11,"ne",E,E,47,[[["self"],[R[4991]]],["bool"]]],[11,"eq",E,E,48,[[["self"],[R[5001]]],["bool"]]],[11,"ne",E,E,48,[[["self"],[R[5001]]],["bool"]]],[11,"eq",E,E,49,[[["self"],[R[4986]]],["bool"]]],[11,"ne",E,E,49,[[["self"],[R[4986]]],["bool"]]],[11,"eq",E,E,50,[[["self"],["funcref"]],["bool"]]],[11,"ne",E,E,50,[[["self"],["funcref"]],["bool"]]],[11,"eq",E,E,51,[[["self"],["sigref"]],["bool"]]],[11,"ne",E,E,51,[[["self"],["sigref"]],["bool"]]],[11,"eq",E,E,52,[[["self"],["heap"]],["bool"]]],[11,"ne",E,E,52,[[["self"],["heap"]],["bool"]]],[11,"eq",E,E,53,[[["self"],["table"]],["bool"]]],[11,"ne",E,E,53,[[["self"],["table"]],["bool"]]],[11,"eq",E,E,43,[[["self"],[R[5129]]],["bool"]]],[11,"ne",E,E,43,[[["self"],[R[5129]]],["bool"]]],[11,"eq",R[4934],E,22,[[["self"],[R[3279]]],["bool"]]],[11,"ne",E,E,22,[[["self"],[R[3279]]],["bool"]]],[11,"eq",E,E,20,[[["self"],["abiparam"]],["bool"]]],[11,"ne",E,E,20,[[["self"],["abiparam"]],["bool"]]],[11,"eq",E,E,26,[[["self"],[R[5141]]],["bool"]]],[11,"eq",E,E,27,[[["self"],[R[4951]]],["bool"]]],[11,"eq",E,E,28,[[["self"],[R[4922]]],["bool"]]],[11,"ne",E,E,28,[[["self"],[R[4922]]],["bool"]]],[11,"eq",R[5108],E,56,[[["self"],["imm64"]],["bool"]]],[11,"ne",E,E,56,[[["self"],["imm64"]],["bool"]]],[11,"eq",E,E,57,[[["self"],["uimm64"]],["bool"]]],[11,"ne",E,E,57,[[["self"],["uimm64"]],["bool"]]],[11,"eq",E,E,125,[[["self"],["uimm32"]],["bool"]]],[11,"ne",E,E,125,[[["self"],["uimm32"]],["bool"]]],[11,"eq",E,E,58,[[["self"],[R[4998]]],["bool"]]],[11,"ne",E,E,58,[[["self"],[R[4998]]],["bool"]]],[11,"eq",E,E,59,[[["self"],["ieee32"]],["bool"]]],[11,"ne",E,E,59,[[["self"],["ieee32"]],["bool"]]],[11,"eq",E,E,60,[[["self"],["ieee64"]],["bool"]]],[11,"ne",E,E,60,[[["self"],["ieee64"]],["bool"]]],[11,"eq",R[4961],E,62,[[["self"],[R[5130]]],["bool"]]],[11,"eq",E,E,64,[[["self"],["opcode"]],["bool"]]],[11,"eq",E,E,61,[[["self"],[R[4985]]],["bool"]]],[11,"ne",E,E,61,[[["self"],[R[4985]]],["bool"]]],[11,"eq",E,E,67,[[["self"],[R[5131]]],["bool"]]],[11,"ne",E,E,67,[[["self"],[R[5131]]],["bool"]]],[11,"eq",R[4934],E,31,[[["self"],["libcall"]],["bool"]]],[11,"eq",E,E,72,[[["self"],[R[4999]]],["bool"]]],[11,"ne",E,E,72,[[["self"],[R[4999]]],["bool"]]],[11,"eq",E,E,120,[[["self"],[R[5132]]],["bool"]]],[11,"ne",E,E,120,[[["self"],[R[5132]]],["bool"]]],[11,"eq",E,E,32,[[["self"],[R[5133]]],["bool"]]],[11,"ne",E,E,32,[[["self"],[R[5133]]],["bool"]]],[11,"eq",E,E,73,[[["self"],[R[4926]]],["bool"]]],[11,"ne",E,E,73,[[["self"],[R[4926]]],["bool"]]],[11,"eq",R[5111],E,76,[[["self"],[R[5134]]],["bool"]]],[11,"eq",R[4934],E,33,[[["self"],[R[4997]]],["bool"]]],[11,"ne",E,E,33,[[["self"],[R[4997]]],["bool"]]],[11,"eq",R[5112],E,77,[[["self"],["type"]],["bool"]]],[11,"ne",E,E,77,[[["self"],["type"]],["bool"]]],[11,"eq",R[4934],E,35,[[["self"],[R[5135]]],["bool"]]],[11,"ne",E,E,35,[[["self"],[R[5135]]],["bool"]]],[11,"eq",E,E,34,[[["self"],[R[5136]]],["bool"]]],[11,"ne",E,E,34,[[["self"],[R[5136]]],["bool"]]],[11,"eq",E,E,82,[[["self"],[R[5147]]],["bool"]]],[11,"ne",E,E,82,[[["self"],[R[5147]]],["bool"]]],[11,"eq",R[5065],E,90,[[["self"],["callconv"]],["bool"]]],[11,"eq",E,E,84,[[["self"],[R[5137]]],["bool"]]],[11,"ne",E,E,84,[[["self"],[R[5137]]],["bool"]]],[11,"eq",E,E,91,[[["self"],[R[5138]]],["bool"]]],[11,"ne",E,E,91,[[["self"],[R[5138]]],["bool"]]],[11,"eq",E,E,85,[[["self"],[R[5061]]],["bool"]]],[11,"ne",E,E,85,[[["self"],[R[5061]]],["bool"]]],[11,"eq",E,E,94,[[["self"],[R[5067]]],["bool"]]],[11,"ne",E,E,94,[[["self"],[R[5067]]],["bool"]]],[11,"eq",R[5113],E,96,[[["self"]],["bool"]]],[11,"eq",E,E,128,[[["self"],[R[5063]]],["bool"]]],[11,"ne",E,E,128,[[["self"],[R[5063]]],["bool"]]],[11,"eq",R[5065],E,92,[[["self"],["stackbase"]],["bool"]]],[11,"eq",E,E,87,[[["self"],[R[5139]]],["bool"]]],[11,"ne",E,E,87,[[["self"],[R[5139]]],["bool"]]],[11,"eq",E,E,93,[[["self"],[R[5059]]],["bool"]]],[11,"eq",R[5114],E,100,[[["self"],["loop"]],["bool"]]],[11,"ne",E,E,100,[[["self"],["loop"]],["bool"]]],[11,"eq",R[5077],E,103,[[["self"],["seterror"]],["bool"]]],[11,"ne",E,E,103,[[["self"],["seterror"]],["bool"]]],[11,"eq",E,E,104,[[["self"],["optlevel"]],["bool"]]],[11,"eq",R[5116],E,112,[[["self"],[R[5127]]],["bool"]]],[11,"ne",E,E,112,[[["self"],[R[5127]]],["bool"]]],[11,"eq",E,E,113,[[["self"],[R[5084]]],["bool"]]],[11,"ne",E,E,113,[[["self"],[R[5084]]],["bool"]]],[11,"eq",R[4918],E,3,[[["self"],[R[5140]]],["bool"]]],[11,"ne",E,E,3,[[["self"],[R[5140]]],["bool"]]],[11,"cmp",R[5106],E,44,[[["self"],["ebb"]],[R[50]]]],[11,"cmp",E,E,45,[[["self"],["value"]],[R[50]]]],[11,"cmp",E,E,46,[[["self"],["inst"]],[R[50]]]],[11,R[77],E,E,44,[[["self"],["ebb"]],[[R[23],[R[50]]],[R[50]]]]],[11,"lt",E,E,44,[[["self"],["ebb"]],["bool"]]],[11,"le",E,E,44,[[["self"],["ebb"]],["bool"]]],[11,"gt",E,E,44,[[["self"],["ebb"]],["bool"]]],[11,"ge",E,E,44,[[["self"],["ebb"]],["bool"]]],[11,R[77],E,E,45,[[["self"],["value"]],[[R[23],[R[50]]],[R[50]]]]],[11,"lt",E,E,45,[[["self"],["value"]],["bool"]]],[11,"le",E,E,45,[[["self"],["value"]],["bool"]]],[11,"gt",E,E,45,[[["self"],["value"]],["bool"]]],[11,"ge",E,E,45,[[["self"],["value"]],["bool"]]],[11,R[77],E,E,46,[[["self"],["inst"]],[[R[23],[R[50]]],[R[50]]]]],[11,"lt",E,E,46,[[["self"],["inst"]],["bool"]]],[11,"le",E,E,46,[[["self"],["inst"]],["bool"]]],[11,"gt",E,E,46,[[["self"],["inst"]],["bool"]]],[11,"ge",E,E,46,[[["self"],["inst"]],["bool"]]],[11,"hash",R[5104],E,38,[[["self"],["__h"]]]],[11,"hash",E,E,39,[[["self"],["__h"]]]],[11,"hash",R[5106],E,44,[[["self"],["__h"]]]],[11,"hash",E,E,45,[[["self"],["__h"]]]],[11,"hash",E,E,46,[[["self"],["__h"]]]],[11,"hash",E,E,47,[[["self"],["__h"]]]],[11,"hash",E,E,48,[[["self"],["__h"]]]],[11,"hash",E,E,49,[[["self"],["__h"]]]],[11,"hash",E,E,50,[[["self"],["__h"]]]],[11,"hash",E,E,51,[[["self"],["__h"]]]],[11,"hash",E,E,52,[[["self"],["__h"]]]],[11,"hash",E,E,53,[[["self"],["__h"]]]],[11,"hash",E,E,43,[[["self"],["__h"]]]],[11,"hash",R[4934],E,22,[[["self"],["__h"]]]],[11,"hash",E,E,20,[[["self"],["__h"]]]],[11,"hash",E,E,26,[[["self"],["__h"]]]],[11,"hash",E,E,27,[[["self"],["__h"]]]],[11,"hash",R[5108],E,56,[[["self"],["__h"]]]],[11,"hash",E,E,57,[[["self"],["__h"]]]],[11,"hash",E,E,125,[[["self"],["__h"]]]],[11,"hash",E,E,58,[[["self"],["__h"]]]],[11,"hash",E,E,59,[[["self"],["__h"]]]],[11,"hash",E,E,60,[[["self"],["__h"]]]],[11,"hash",R[4961],E,64,[[["self"],["__h"]]]],[11,"hash",R[4934],E,72,[[["self"],["__h"]]]],[11,"hash",E,E,33,[[["self"],["__h"]]]],[11,"hash",R[5112],E,77,[[["self"],["__h"]]]],[11,"hash",R[4934],E,34,[[["self"],["__h"]]]],[11,"hash",E,E,82,[[["self"],["__h"]]]],[11,"hash",R[5065],E,90,[[["self"],["__h"]]]],[11,"hash",R[5114],E,100,[[["self"],["__h"]]]],[11,"hash",R[5077],E,104,[[["self"],["__h"]]]],[11,"fmt",R[5095],E,6,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[5100],E,13,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[5104],E,38,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,39,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[5105],E,42,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[5106],E,44,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,45,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,46,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,47,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,48,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,49,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,50,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,51,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,52,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,53,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,43,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[4934],E,22,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,20,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,26,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,27,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,21,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,28,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[5107],E,54,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[5108],E,56,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,57,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,125,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,58,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,59,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,60,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[4961],E,62,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,63,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,64,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,68,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,61,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,67,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[4934],E,31,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,72,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,32,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,120,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,73,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[5111],E,76,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,74,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,75,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[4934],E,33,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[5112],E,77,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[4934],E,35,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,34,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,82,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,25,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,36,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[5065],E,90,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,84,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,91,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,83,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,94,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[5113],E,96,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,128,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[5065],E,88,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,92,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,87,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,93,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[5114],E,100,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[5077],E,103,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,104,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[5116],E,112,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,113,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[4918],E,3,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,2,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[5095],"Display trait implementation drops the arch, since its…",6,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[5099],E,10,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[5101],E,15,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[5104],E,38,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,39,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[5105],E,122,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[5106],E,44,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,45,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,46,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,47,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,48,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,49,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,50,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,51,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,52,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,53,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,43,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[4934],E,22,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,20,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,27,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,21,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,28,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[5107],E,123,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,54,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[4934],E,29,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,23,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[5108],E,56,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,57,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,125,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,58,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,59,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,60,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[4961],E,64,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,68,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[5109],E,70,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[4934],E,31,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,72,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,32,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,120,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,73,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[5111],E,76,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,74,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[4934],E,24,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,33,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[5112],E,77,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[4934],E,82,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[5065],E,90,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,94,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[5113],E,96,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,128,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,129,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[5065],E,93,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[5114],E,100,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[5077],E,103,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,104,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,111,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[5115],E,130,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[5116],E,112,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,113,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[4918],E,3,[[["self"],[R[10]]],[R[3]]]],[11,R[775],R[5104],E,38,[[["str"]],[R[3]]]],[11,R[775],E,E,39,[[["str"]],[R[3]]]],[11,R[775],R[4934],E,27,[[["str"]],[R[3]]]],[11,R[775],E,E,28,[[["str"]],[R[3]]]],[11,R[775],R[5108],E,56,[[["str"]],[[R[3],["str"]],["str"]]]],[11,R[775],E,E,57,[[["str"]],[[R[3],["str"]],["str"]]]],[11,R[775],E,E,125,[[["str"]],[[R[3],["str"]],["str"]]]],[11,R[775],E,E,58,[[["str"]],[[R[3],["str"]],["str"]]]],[11,R[775],E,E,59,[[["str"]],[[R[3],["str"]],["str"]]]],[11,R[775],E,E,60,[[["str"]],[[R[3],["str"]],["str"]]]],[11,R[775],R[4961],"Parse an Opcode name from a string.",64,[[["str"]],[[R[3],["str"]],["str"]]]],[11,R[775],R[4934],E,31,[[["str"]],[R[3]]]],[11,R[775],R[5111],E,76,[[["str"]],[R[3]]]],[11,R[775],R[4934],E,33,[[["str"]],[R[3]]]],[11,R[775],R[5065],E,90,[[["str"]],[R[3]]]],[11,R[775],R[5077],E,104,[[["str"]],[R[3]]]],[11,"drop",R[5115],E,131,[[["self"]]]],[11,"index",R[5105],E,41,[[["self"],["inst"]],[R[5055]]]],[11,"index",R[5111],E,75,[[["self"],[R[4991]]],[R[4990]]]],[11,R[51],R[5105],E,41,[[["self"],["inst"]],[R[5055]]]],[11,R[51],R[5111],E,75,[[["self"],[R[4991]]],[R[4990]]]],[11,R[52],R[5110],E,127,[[["self"]],[[R[23],["inst"]],["inst"]]]],[11,"next",R[5102],E,118,[[["self"]],[[R[23],["ebb"]],["ebb"]]]],[11,"next",R[5103],E,119,[[["self"]],[[R[23],[R[5128]]],[R[5128]]]]],[11,"next",R[5105],E,121,[[["self"]],[R[23]]]],[11,"next",R[5107],E,124,[[["self"]],[R[23]]]],[11,"next",R[5110],E,126,[[["self"]],[[R[23],["ebb"]],["ebb"]]]],[11,"next",E,E,127,[[["self"]],[[R[23],["inst"]],["inst"]]]],[11,"into",R[5108],E,56,[[],["i64"]]],[11,"into",E,E,57,[[],["u64"]]],[11,"into",E,E,125,[[],["u32"]]],[11,"into",E,E,125,[[],["i64"]]],[11,"into",E,E,58,[[],["i32"]]],[11,"into",E,E,58,[[],["i64"]]],[11,"into",R[5116],E,113,[[],[[R[5127]],["vec",[R[5127]]]]]],[11,"into",E,E,113,[[],[R[5092]]]],[11,"clone",R[5095],E,6,[[["self"]],["reloc"]]],[11,"clone",R[5100],E,13,[[["self"]],[R[4925]]]],[11,"clone",R[5104],E,38,[[["self"]],["intcc"]]],[11,"clone",E,E,39,[[["self"]],["floatcc"]]],[11,"clone",R[5105],E,41,[[["self"]],[R[5054]]]],[11,"clone",E,E,42,[[["self"]],["valuedef"]]],[11,"clone",R[5106],E,44,[[["self"]],["ebb"]]],[11,"clone",E,E,45,[[["self"]],["value"]]],[11,"clone",E,E,46,[[["self"]],["inst"]]],[11,"clone",E,E,47,[[["self"]],[R[4991]]]],[11,"clone",E,E,48,[[["self"]],[R[5001]]]],[11,"clone",E,E,49,[[["self"]],[R[4986]]]],[11,"clone",E,E,50,[[["self"]],["funcref"]]],[11,"clone",E,E,51,[[["self"]],["sigref"]]],[11,"clone",E,E,52,[[["self"]],["heap"]]],[11,"clone",E,E,53,[[["self"]],["table"]]],[11,"clone",E,E,43,[[["self"]],[R[5129]]]],[11,"clone",R[4934],E,22,[[["self"]],[R[3279]]]],[11,"clone",E,E,20,[[["self"]],["abiparam"]]],[11,"clone",E,E,26,[[["self"]],[R[5141]]]],[11,"clone",E,E,27,[[["self"]],[R[4951]]]],[11,"clone",E,E,21,[[["self"]],[R[5142]]]],[11,"clone",E,E,28,[[["self"]],[R[4922]]]],[11,"clone",R[5107],E,54,[[["self"]],[R[4928]]]],[11,"clone",R[4934],E,29,[[["self"]],[R[5143]]]],[11,"clone",E,E,23,[[["self"]],["heapdata"]]],[11,"clone",E,E,30,[[["self"]],["heapstyle"]]],[11,"clone",R[5108],E,56,[[["self"]],["imm64"]]],[11,"clone",E,E,57,[[["self"]],["uimm64"]]],[11,"clone",E,E,125,[[["self"]],["uimm32"]]],[11,"clone",E,E,58,[[["self"]],[R[4998]]]],[11,"clone",E,E,59,[[["self"]],["ieee32"]]],[11,"clone",E,E,60,[[["self"]],["ieee64"]]],[11,"clone",R[4961],E,62,[[["self"]],[R[5130]]]],[11,"clone",E,E,63,[[["self"]],[R[5055]]]],[11,"clone",E,E,64,[[["self"]],["opcode"]]],[11,"clone",E,E,68,[[["self"]],["variableargs"]]],[11,"clone",E,E,69,[[["self"]],[R[5144]]]],[11,"clone",E,E,61,[[["self"]],[R[4985]]]],[11,"clone",E,E,67,[[["self"]],[R[5131]]]],[11,"clone",R[5109],E,70,[[["self"]],[R[5145]]]],[11,"clone",R[5110],E,71,[[["self"]],["layout"]]],[11,"clone",R[4934],E,31,[[["self"]],["libcall"]]],[11,"clone",E,E,72,[[["self"]],[R[4999]]]],[11,"clone",E,E,120,[[["self"]],[R[5132]]]],[11,"clone",E,E,32,[[["self"]],[R[5133]]]],[11,"clone",E,E,73,[[["self"]],[R[4926]]]],[11,"clone",R[5111],E,76,[[["self"]],[R[5134]]]],[11,"clone",E,E,74,[[["self"]],[R[4990]]]],[11,"clone",E,E,75,[[["self"]],[R[5146]]]],[11,"clone",R[4934],E,24,[[["self"]],["tabledata"]]],[11,"clone",E,E,33,[[["self"]],[R[4997]]]],[11,"clone",R[5112],E,77,[[["self"]],["type"]]],[11,"clone",R[4934],E,35,[[["self"]],[R[5135]]]],[11,"clone",E,E,34,[[["self"]],[R[5136]]]],[11,"clone",E,E,82,[[["self"]],[R[5147]]]],[11,"clone",E,E,25,[[["self"]],["valuelabelstart"]]],[11,"clone",E,E,36,[[["self"]],["valuelabelassignments"]]],[11,"clone",R[5065],E,90,[[["self"]],["callconv"]]],[11,"clone",E,E,91,[[["self"]],[R[5138]]]],[11,"clone",E,E,85,[[["self"]],[R[5061]]]],[11,"clone",E,E,83,[[["self"]],[R[5062]]]],[11,"clone",E,E,94,[[["self"]],[R[5067]]]],[11,"clone",E,E,86,[[["self"]],["encinfo"]]],[11,"clone",R[5113],E,128,[[["self"]],[R[5063]]]],[11,"clone",E,E,97,[[["self"]],["reginfo"]]],[11,"clone",R[5065],E,88,[[["self"]],["stackref"]]],[11,"clone",E,E,92,[[["self"]],["stackbase"]]],[11,"clone",E,E,87,[[["self"]],[R[5139]]]],[11,"clone",E,E,93,[[["self"]],[R[5059]]]],[11,"clone",E,E,89,[[["self"]],[R[5148]]]],[11,"clone",R[5114],E,100,[[["self"]],["loop"]]],[11,"clone",R[5077],E,109,[[["self"]],["builder"]]],[11,"clone",E,E,110,[[["self"]],[R[5149]]]],[11,"clone",R[5074],E,107,[[["self"]],["detail"]]],[11,"clone",R[5077],E,111,[[["self"]],["flags"]]],[11,"clone",E,E,104,[[["self"]],["optlevel"]]],[11,"clone",E,E,102,[[["self"]],[R[5088]]]],[11,"clone",R[4918],E,2,[[["self"]],["valuelocrange"]]],[11,R[83],R[4934],E,28,[[],["self"]]],[11,R[83],R[4961],E,68,[[],["self"]]],[11,R[83],R[4934],E,73,[[],["self"]]],[11,R[83],R[5112],E,77,[[],["self"]]],[11,R[83],R[4934],E,35,[[],["self"]]],[11,R[83],E,E,34,[[],["self"]]],[11,R[83],R[5065],E,94,[[],["self"]]],[11,R[83],R[5115],E,130,[[],["self"]]],[11,R[83],R[5116],E,113,[[],[R[5084]]]],[11,R[5150],R[5106],E,44,[[],["ebb"]]],[11,R[5150],E,E,45,[[],["value"]]],[11,R[5150],E,E,46,[[],["inst"]]],[11,R[5150],E,E,47,[[],[R[4991]]]],[11,R[5150],E,E,48,[[],[R[5001]]]],[11,R[5150],E,E,49,[[],[R[4986]]]],[11,R[5150],E,E,50,[[],["funcref"]]],[11,R[5150],E,E,51,[[],["sigref"]]],[11,R[5150],E,E,52,[[],["heap"]]],[11,R[5150],E,E,53,[[],["table"]]],[11,R[5150],R[4934],E,82,[[],[R[5147]]]],[11,R[5150],R[5114],E,100,[[],["loop"]]],[11,"new",R[5106],E,44,[[["usize"]],["self"]]],[11,"index",E,E,44,[[],["usize"]]],[11,"new",E,E,45,[[["usize"]],["self"]]],[11,"index",E,E,45,[[],["usize"]]],[11,"new",E,E,46,[[["usize"]],["self"]]],[11,"index",E,E,46,[[],["usize"]]],[11,"new",E,E,47,[[["usize"]],["self"]]],[11,"index",E,E,47,[[],["usize"]]],[11,"new",E,E,48,[[["usize"]],["self"]]],[11,"index",E,E,48,[[],["usize"]]],[11,"new",E,E,49,[[["usize"]],["self"]]],[11,"index",E,E,49,[[],["usize"]]],[11,"new",E,E,50,[[["usize"]],["self"]]],[11,"index",E,E,50,[[],["usize"]]],[11,"new",E,E,51,[[["usize"]],["self"]]],[11,"index",E,E,51,[[],["usize"]]],[11,"new",E,E,52,[[["usize"]],["self"]]],[11,"index",E,E,52,[[],["usize"]]],[11,"new",E,E,53,[[["usize"]],["self"]]],[11,"index",E,E,53,[[],["usize"]]],[11,"new",R[4934],E,82,[[["usize"]],["self"]]],[11,"index",E,E,82,[[],["usize"]]],[11,"new",R[5113],E,128,[[["usize"]],["self"]]],[11,"index",E,E,128,[[],["usize"]]],[11,"new",R[5114],E,100,[[["usize"]],["self"]]],[11,"index",E,E,100,[[],["usize"]]],[11,"name",R[5065],E,93,[[["self"]],[[R[23],["str"]],["str"]]]],[11,"cause",E,E,93,[[["self"]],[["fail"],[R[23],["fail"]]]]],[11,R[1705],E,E,93,[[["self"]],[[R[23],[R[1705]]],[R[1705]]]]],[11,"name",R[5077],E,103,[[["self"]],[[R[23],["str"]],["str"]]]],[11,"cause",E,E,103,[[["self"]],[["fail"],[R[23],["fail"]]]]],[11,R[1705],E,E,103,[[["self"]],[[R[23],[R[1705]]],[R[1705]]]]],[11,"name",R[5116],E,112,[[["self"]],[[R[23],["str"]],["str"]]]],[11,"cause",E,E,112,[[["self"]],[["fail"],[R[23],["fail"]]]]],[11,R[1705],E,E,112,[[["self"]],[[R[23],[R[1705]]],[R[1705]]]]],[11,"name",E,E,113,[[["self"]],[[R[23],["str"]],["str"]]]],[11,"cause",E,E,113,[[["self"]],[["fail"],[R[23],["fail"]]]]],[11,R[1705],E,E,113,[[["self"]],[[R[23],[R[1705]]],[R[1705]]]]],[11,"name",R[4918],E,3,[[["self"]],[[R[23],["str"]],["str"]]]],[11,"cause",E,E,3,[[["self"]],[["fail"],[R[23],["fail"]]]]],[11,R[1705],E,E,3,[[["self"]],[[R[23],[R[1705]]],[R[1705]]]]],[11,"is_none",R[5098],R[5425],116,[[["self"]],["bool"]]],[11,"is_some",E,R[5426],116,[[["self"]],["bool"]]],[11,"expand",E,R[5427],116,[[],[R[23]]]],[11,"map",E,R[5428],116,[[["f"]],[R[23]]]],[11,"unwrap",E,R[21],116,[[],[T]]],[11,"expect",E,R[21],116,[[["str"]],[T]]],[11,"take",E,R[5429],116,[[["self"]],[R[23]]]],[11,"jump",R[4934],R[5151],78,[[["ebb"]],["inst"]]],[11,R[5152],E,R[5153],78,[[["ebb"]],["inst"]]],[11,"brz",E,R[5154],78,[[["ebb"],["value"]],["inst"]]],[11,"brnz",E,R[5155],78,[[["ebb"],["value"]],["inst"]]],[11,"br_icmp",E,R[5156],78,[[["intcc"],["ebb"],["into",["intcc"]],["value"]],["inst"]]],[11,"brif",E,R[5157],78,[[["intcc"],["ebb"],["into",["intcc"]],["value"]],["inst"]]],[11,"brff",E,R[5158],78,[[["ebb"],["floatcc"],["into",["floatcc"]],["value"]],["inst"]]],[11,"br_table",E,R[5159],78,[[["ebb"],[R[4986]],["value"]],["inst"]]],[11,R[5160],E,R[5161],78,[[["into",["uimm8"]],["uimm8"],[R[4986]],["type"],["value"]],["value"]]],[11,R[5162],E,R[5163],78,[[["type"],[R[4986]]],["value"]]],[11,R[5164],E,R[5165],78,[[[R[4986]],["value"]],["inst"]]],[11,"debugtrap",E,R[5166],78,[[],["inst"]]],[11,"trap",E,R[5167],78,[[["into",[R[4997]]],[R[4997]]],["inst"]]],[11,"trapz",E,R[5168],78,[[["into",[R[4997]]],[R[4997]],["value"]],["inst"]]],[11,"trapnz",E,R[5169],78,[[["into",[R[4997]]],[R[4997]],["value"]],["inst"]]],[11,"trapif",E,R[5170],78,[[["intcc"],["into",[R[4997]]],[R[4997]],["into",["intcc"]],["value"]],["inst"]]],[11,"trapff",E,R[5171],78,[[["into",[R[4997]]],["floatcc"],["into",["floatcc"]],[R[4997]],["value"]],["inst"]]],[11,"return_",E,R[5172],78,[[],["inst"]]],[11,R[5173],E,R[5174],78,[[],["inst"]]],[11,"call",E,R[5175],78,[[["funcref"]],["inst"]]],[11,R[5176],E,R[5177],78,[[["sigref"],["value"]],["inst"]]],[11,"func_addr",E,R[5178],78,[[["type"],["funcref"]],["value"]]],[11,"load",E,R[5179],78,[[[R[4998]],["into",[R[4999]]],["into",[R[4998]]],["type"],[R[4999]],["value"]],["value"]]],[11,R[5180],E,R[5181],78,[[[R[4998]],["into",[R[4999]]],["into",[R[4998]]],["type"],[R[4999]]],["value"]]],[11,"store",E,R[5182],78,[[[R[4998]],["into",[R[4999]]],["into",[R[4998]]],[R[4999]],["value"]],["inst"]]],[11,R[5183],E,R[5184],78,[[[R[4998]],["into",[R[4999]]],["into",[R[4998]]],[R[4999]],["value"]],["inst"]]],[11,"uload8",E,R[5185],78,[[[R[4998]],["into",[R[4999]]],["into",[R[4998]]],["type"],[R[4999]],["value"]],["value"]]],[11,R[5186],E,R[5187],78,[[[R[4998]],["into",[R[4999]]],["into",[R[4998]]],["type"],[R[4999]]],["value"]]],[11,"sload8",E,R[5188],78,[[[R[4998]],["into",[R[4999]]],["into",[R[4998]]],["type"],[R[4999]],["value"]],["value"]]],[11,R[5189],E,R[5190],78,[[[R[4998]],["into",[R[4999]]],["into",[R[4998]]],["type"],[R[4999]]],["value"]]],[11,"istore8",E,R[5191],78,[[[R[4998]],["into",[R[4999]]],["into",[R[4998]]],[R[4999]],["value"]],["inst"]]],[11,R[5192],E,R[5193],78,[[[R[4998]],["into",[R[4999]]],["into",[R[4998]]],[R[4999]],["value"]],["inst"]]],[11,"uload16",E,R[5194],78,[[[R[4998]],["into",[R[4999]]],["into",[R[4998]]],["type"],[R[4999]],["value"]],["value"]]],[11,R[5195],E,R[5196],78,[[[R[4998]],["into",[R[4999]]],["into",[R[4998]]],["type"],[R[4999]]],["value"]]],[11,"sload16",E,R[5197],78,[[[R[4998]],["into",[R[4999]]],["into",[R[4998]]],["type"],[R[4999]],["value"]],["value"]]],[11,R[5198],E,R[5199],78,[[[R[4998]],["into",[R[4999]]],["into",[R[4998]]],["type"],[R[4999]]],["value"]]],[11,"istore16",E,R[5200],78,[[[R[4998]],["into",[R[4999]]],["into",[R[4998]]],[R[4999]],["value"]],["inst"]]],[11,R[5201],E,R[5202],78,[[[R[4998]],["into",[R[4999]]],["into",[R[4998]]],[R[4999]],["value"]],["inst"]]],[11,"uload32",E,R[5203],78,[[[R[4998]],["into",[R[4999]]],["into",[R[4998]]],[R[4999]],["value"]],["value"]]],[11,R[5204],E,R[5205],78,[[[R[4998]],["into",[R[4999]]],["into",[R[4998]]],[R[4999]]],["value"]]],[11,"sload32",E,R[5206],78,[[[R[4998]],["into",[R[4999]]],["into",[R[4998]]],[R[4999]],["value"]],["value"]]],[11,R[5207],E,R[5208],78,[[[R[4998]],["into",[R[4999]]],["into",[R[4998]]],[R[4999]]],["value"]]],[11,"istore32",E,R[5209],78,[[[R[4998]],["into",[R[4999]]],["into",[R[4998]]],[R[4999]],["value"]],["inst"]]],[11,R[5210],E,R[5211],78,[[[R[4998]],["into",[R[4999]]],["into",[R[4998]]],[R[4999]],["value"]],["inst"]]],[11,"stack_load",E,R[5212],78,[[[R[4998]],["into",[R[4998]]],["type"],[R[4991]]],["value"]]],[11,R[5213],E,R[5214],78,[[[R[4998]],["into",[R[4998]]],[R[4991]],["value"]],["inst"]]],[11,"stack_addr",E,R[5215],78,[[[R[4998]],["into",[R[4998]]],["type"],[R[4991]]],["value"]]],[11,R[5000],E,R[5216],78,[[["type"],[R[5001]]],["value"]]],[11,R[5217],E,R[5218],78,[[["type"],[R[5001]]],["value"]]],[11,"heap_addr",E,R[5219],78,[[["uimm32"],["type"],["heap"],["into",["uimm32"]],["value"]],["value"]]],[11,"table_addr",E,R[5220],78,[[[R[4998]],["into",[R[4998]]],["type"],["table"],["value"]],["value"]]],[11,"iconst",E,R[5221],78,[[["type"],["into",["imm64"]],["imm64"]],["value"]]],[11,"f32const",E,R[5222],78,[[["ieee32"],["into",["ieee32"]]],["value"]]],[11,"f64const",E,R[5223],78,[[["ieee64"],["into",["ieee64"]]],["value"]]],[11,"bconst",E,R[5224],78,[[["type"],["into",["bool"]],["bool"]],["value"]]],[11,"nop",E,"`nop`",78,[[],["inst"]]],[11,"select",E,R[5225],78,[[["value"]],["value"]]],[11,"selectif",E,R[5226],78,[[["value"],["type"],["into",["intcc"]],["intcc"]],["value"]]],[11,"copy",E,R[5227],78,[[["value"]],["value"]]],[11,"spill",E,R[5228],78,[[["value"]],["value"]]],[11,"fill",E,R[5229],78,[[["value"]],["value"]]],[11,"regmove",E,R[5230],78,[[["regunit"],["into",["regunit"]],["value"]],["inst"]]],[11,R[5231],E,R[5232],78,[[["regunit"],["into",["regunit"]]],["inst"]]],[11,"copy_nop",E,R[5233],78,[[["value"]],["value"]]],[11,R[5234],E,R[5235],78,[[["value"]],["inst"]]],[11,R[5236],E,R[5237],78,[[["into",["imm64"]],["imm64"]],["inst"]]],[11,R[5238],E,R[5239],78,[[["into",["imm64"]],["imm64"]],["inst"]]],[11,"ifcmp_sp",E,R[5240],78,[[["value"]],["value"]]],[11,"regspill",E,R[5241],78,[[["regunit"],[R[4991]],["into",["regunit"]],["value"]],["inst"]]],[11,"regfill",E,R[5242],78,[[["regunit"],[R[4991]],["into",["regunit"]],["value"]],["inst"]]],[11,"vsplit",E,R[5243],78,[[["value"]]]],[11,"vconcat",E,R[5244],78,[[["value"]],["value"]]],[11,"vselect",E,R[5245],78,[[["value"]],["value"]]],[11,"splat",E,R[5246],78,[[["type"],["value"]],["value"]]],[11,"insertlane",E,R[5247],78,[[["into",["uimm8"]],["uimm8"],["value"]],["value"]]],[11,R[5248],E,R[5249],78,[[["into",["uimm8"]],["uimm8"],["value"]],["value"]]],[11,"icmp",E,R[5250],78,[[["intcc"],["into",["intcc"]],["value"]],["value"]]],[11,"icmp_imm",E,R[5251],78,[[["intcc"],["imm64"],["into",["intcc"]],["into",["imm64"]],["value"]],["value"]]],[11,"ifcmp",E,R[5252],78,[[["value"]],["value"]]],[11,"ifcmp_imm",E,R[5253],78,[[["into",["imm64"]],["imm64"],["value"]],["value"]]],[11,"iadd",E,R[5254],78,[[["value"]],["value"]]],[11,"isub",E,R[5255],78,[[["value"]],["value"]]],[11,"imul",E,R[5256],78,[[["value"]],["value"]]],[11,"umulhi",E,R[5257],78,[[["value"]],["value"]]],[11,"smulhi",E,R[5258],78,[[["value"]],["value"]]],[11,"udiv",E,R[5259],78,[[["value"]],["value"]]],[11,"sdiv",E,R[5260],78,[[["value"]],["value"]]],[11,"urem",E,R[5261],78,[[["value"]],["value"]]],[11,"srem",E,R[5262],78,[[["value"]],["value"]]],[11,"iadd_imm",E,R[5263],78,[[["into",["imm64"]],["imm64"],["value"]],["value"]]],[11,"imul_imm",E,R[5264],78,[[["into",["imm64"]],["imm64"],["value"]],["value"]]],[11,"udiv_imm",E,R[5265],78,[[["into",["imm64"]],["imm64"],["value"]],["value"]]],[11,"sdiv_imm",E,R[5266],78,[[["into",["imm64"]],["imm64"],["value"]],["value"]]],[11,"urem_imm",E,R[5267],78,[[["into",["imm64"]],["imm64"],["value"]],["value"]]],[11,"srem_imm",E,R[5268],78,[[["into",["imm64"]],["imm64"],["value"]],["value"]]],[11,"irsub_imm",E,R[5269],78,[[["into",["imm64"]],["imm64"],["value"]],["value"]]],[11,"iadd_cin",E,R[5270],78,[[["value"]],["value"]]],[11,"iadd_cout",E,R[5271],78,[[["value"]]]],[11,"iadd_carry",E,R[5272],78,[[["value"]]]],[11,"isub_bin",E,R[5273],78,[[["value"]],["value"]]],[11,"isub_bout",E,R[5274],78,[[["value"]]]],[11,R[5275],E,R[5276],78,[[["value"]]]],[11,"band",E,R[5277],78,[[["value"]],["value"]]],[11,"bor",E,R[5278],78,[[["value"]],["value"]]],[11,"bxor",E,R[5279],78,[[["value"]],["value"]]],[11,"bnot",E,R[5280],78,[[["value"]],["value"]]],[11,"band_not",E,R[5281],78,[[["value"]],["value"]]],[11,"bor_not",E,R[5282],78,[[["value"]],["value"]]],[11,"bxor_not",E,R[5283],78,[[["value"]],["value"]]],[11,"band_imm",E,R[5284],78,[[["into",["imm64"]],["imm64"],["value"]],["value"]]],[11,"bor_imm",E,R[5285],78,[[["into",["imm64"]],["imm64"],["value"]],["value"]]],[11,"bxor_imm",E,R[5286],78,[[["into",["imm64"]],["imm64"],["value"]],["value"]]],[11,"rotl",E,R[5287],78,[[["value"]],["value"]]],[11,"rotr",E,R[5288],78,[[["value"]],["value"]]],[11,"rotl_imm",E,R[5289],78,[[["into",["imm64"]],["imm64"],["value"]],["value"]]],[11,"rotr_imm",E,R[5290],78,[[["into",["imm64"]],["imm64"],["value"]],["value"]]],[11,"ishl",E,R[5291],78,[[["value"]],["value"]]],[11,"ushr",E,R[5292],78,[[["value"]],["value"]]],[11,"sshr",E,R[5293],78,[[["value"]],["value"]]],[11,"ishl_imm",E,R[5294],78,[[["into",["imm64"]],["imm64"],["value"]],["value"]]],[11,"ushr_imm",E,R[5295],78,[[["into",["imm64"]],["imm64"],["value"]],["value"]]],[11,"sshr_imm",E,R[5296],78,[[["into",["imm64"]],["imm64"],["value"]],["value"]]],[11,"bitrev",E,R[5297],78,[[["value"]],["value"]]],[11,"clz",E,R[5298],78,[[["value"]],["value"]]],[11,"cls",E,R[5299],78,[[["value"]],["value"]]],[11,"ctz",E,R[5300],78,[[["value"]],["value"]]],[11,"popcnt",E,R[5301],78,[[["value"]],["value"]]],[11,"fcmp",E,R[5302],78,[[["floatcc"],["into",["floatcc"]],["value"]],["value"]]],[11,"ffcmp",E,R[5303],78,[[["value"]],["value"]]],[11,"fadd",E,R[5304],78,[[["value"]],["value"]]],[11,"fsub",E,R[5305],78,[[["value"]],["value"]]],[11,"fmul",E,R[5306],78,[[["value"]],["value"]]],[11,"fdiv",E,R[5307],78,[[["value"]],["value"]]],[11,"sqrt",E,R[5308],78,[[["value"]],["value"]]],[11,"fma",E,R[5309],78,[[["value"]],["value"]]],[11,"fneg",E,R[5310],78,[[["value"]],["value"]]],[11,"fabs",E,R[5311],78,[[["value"]],["value"]]],[11,"fcopysign",E,R[5312],78,[[["value"]],["value"]]],[11,"fmin",E,R[5313],78,[[["value"]],["value"]]],[11,"fmax",E,R[5314],78,[[["value"]],["value"]]],[11,"ceil",E,R[5315],78,[[["value"]],["value"]]],[11,"floor",E,R[5316],78,[[["value"]],["value"]]],[11,"trunc",E,R[5317],78,[[["value"]],["value"]]],[11,"nearest",E,R[5318],78,[[["value"]],["value"]]],[11,"trueif",E,R[5319],78,[[["value"],["into",["intcc"]],["intcc"]],["value"]]],[11,"trueff",E,R[5320],78,[[["value"],["floatcc"],["into",["floatcc"]]],["value"]]],[11,"bitcast",E,R[5321],78,[[["type"],["value"]],["value"]]],[11,"breduce",E,R[5322],78,[[["type"],["value"]],["value"]]],[11,"bextend",E,R[5323],78,[[["type"],["value"]],["value"]]],[11,"bint",E,R[5324],78,[[["type"],["value"]],["value"]]],[11,"bmask",E,R[5325],78,[[["type"],["value"]],["value"]]],[11,"ireduce",E,R[5326],78,[[["type"],["value"]],["value"]]],[11,"uextend",E,R[5327],78,[[["type"],["value"]],["value"]]],[11,"sextend",E,R[5328],78,[[["type"],["value"]],["value"]]],[11,"fpromote",E,R[5329],78,[[["type"],["value"]],["value"]]],[11,"fdemote",E,R[5330],78,[[["type"],["value"]],["value"]]],[11,R[5331],E,R[5332],78,[[["type"],["value"]],["value"]]],[11,R[5333],E,R[5334],78,[[["type"],["value"]],["value"]]],[11,R[5335],E,R[5336],78,[[["type"],["value"]],["value"]]],[11,R[5337],E,R[5338],78,[[["type"],["value"]],["value"]]],[11,R[5339],E,R[5340],78,[[["type"],["value"]],["value"]]],[11,R[5341],E,R[5342],78,[[["type"],["value"]],["value"]]],[11,"isplit",E,R[5343],78,[[["value"]]]],[11,"iconcat",E,R[5344],78,[[["value"]],["value"]]],[11,R[5345],E,R[5346],78,[[["value"]]]],[11,R[5347],E,R[5348],78,[[["value"]]]],[11,"x86_umulx",E,R[5349],78,[[["value"]]]],[11,"x86_smulx",E,R[5350],78,[[["value"]]]],[11,R[5351],E,R[5352],78,[[["type"],["value"]],["value"]]],[11,"x86_fmin",E,R[5353],78,[[["value"]],["value"]]],[11,"x86_fmax",E,R[5354],78,[[["value"]],["value"]]],[11,"x86_push",E,R[5355],78,[[["value"]],["inst"]]],[11,"x86_pop",E,R[5356],78,[[["type"]],["value"]]],[11,"x86_bsr",E,R[5357],78,[[["value"]]]],[11,"x86_bsf",E,R[5358],78,[[["value"]]]],[11,"Unary",E,R[5002],78,[[["value"],["opcode"],["type"]]]],[11,"UnaryImm",E,R[5003],78,[[["opcode"],["type"],["imm64"]]]],[11,R[4963],E,R[5004],78,[[["opcode"],["type"],["ieee32"]]]],[11,R[4964],E,R[5005],78,[[["opcode"],["type"],["ieee64"]]]],[11,R[5359],E,R[5006],78,[[["opcode"],["type"],["bool"]]]],[11,R[4965],E,R[5007],78,[[[R[5001]],["opcode"],["type"]]]],[11,"Binary",E,R[5008],78,[[["value"],["type"],["opcode"]]]],[11,R[5360],E,R[5009],78,[[["value"],["type"],["opcode"],["imm64"]]]],[11,"Ternary",E,R[5010],78,[[["value"],["type"],["opcode"]]]],[11,"MultiAry",E,R[5011],78,[[["opcode"],["type"],[R[4983]]]]],[11,"NullAry",E,R[5012],78,[[["opcode"],["type"]]]],[11,R[5013],E,R[5014],78,[[["value"],["uimm8"],["type"],["opcode"]]]],[11,R[4966],E,R[5015],78,[[["value"],["uimm8"],["type"],["opcode"]]]],[11,R[5016],E,R[5017],78,[[["value"],["type"],["opcode"],["intcc"]]]],[11,R[4967],E,R[5018],78,[[["value"],["type"],["opcode"],["imm64"],["intcc"]]]],[11,"IntCond",E,R[5019],78,[[["value"],["type"],["opcode"],["intcc"]]]],[11,R[4968],E,R[5020],78,[[["value"],["type"],["floatcc"],["opcode"]]]],[11,R[5361],E,R[5021],78,[[["value"],["type"],["floatcc"],["opcode"]]]],[11,R[5362],E,R[5022],78,[[["value"],["type"],["opcode"],["intcc"]]]],[11,"Jump",E,R[5023],78,[[[R[4983]],["type"],["opcode"],["ebb"]]]],[11,"Branch",E,R[5024],78,[[[R[4983]],["type"],["opcode"],["ebb"]]]],[11,R[5363],E,R[5025],78,[[["ebb"],[R[4983]],["type"],["opcode"],["intcc"]]]],[11,R[4970],E,R[5026],78,[[[R[4983]],["type"],["floatcc"],["opcode"],["ebb"]]]],[11,R[5027],E,R[5028],78,[[["ebb"],[R[4983]],["type"],["opcode"],["intcc"]]]],[11,R[4971],E,R[5029],78,[[["value"],["type"],[R[4986]],["opcode"],["ebb"]]]],[11,R[4972],E,R[5030],78,[[["value"],["uimm8"],["type"],[R[4986]],["opcode"]]]],[11,R[4973],E,R[5031],78,[[["opcode"],["type"],[R[4986]]]]],[11,R[4974],E,R[5032],78,[[["value"],["type"],[R[4986]],["opcode"]]]],[11,"Call",E,R[5033],78,[[["type"],["opcode"],["funcref"],[R[4983]]]]],[11,R[4975],E,R[5034],78,[[["type"],["opcode"],["sigref"],[R[4983]]]]],[11,"FuncAddr",E,R[5035],78,[[["opcode"],["type"],["funcref"]]]],[11,"Load",E,R[5036],78,[[[R[4998]],["value"],["type"],["opcode"],[R[4999]]]]],[11,R[4976],E,R[5037],78,[[[R[4998]],["type"],["opcode"],[R[4999]],[R[4983]]]]],[11,"Store",E,R[5038],78,[[[R[4998]],["value"],["type"],["opcode"],[R[4999]]]]],[11,R[4977],E,R[5039],78,[[[R[4998]],["type"],["opcode"],[R[4999]],[R[4983]]]]],[11,R[5040],E,R[5041],78,[[[R[4998]],["type"],["opcode"],[R[4991]]]]],[11,R[4981],E,R[5042],78,[[[R[4998]],["value"],["type"],["opcode"],[R[4991]]]]],[11,"HeapAddr",E,R[5043],78,[[["uimm32"],["value"],["type"],["opcode"],["heap"]]]],[11,R[5044],E,R[5045],78,[[[R[4998]],["value"],["type"],["table"],["opcode"]]]],[11,"RegMove",E,R[5046],78,[[["value"],["type"],["regunit"],["opcode"]]]],[11,R[4978],E,R[5047],78,[[["type"],["regunit"],["opcode"]]]],[11,"RegSpill",E,R[5048],78,[[["value"],["type"],["regunit"],["opcode"],[R[4991]]]]],[11,"RegFill",E,R[5049],78,[[["value"],["type"],["regunit"],["opcode"],[R[4991]]]]],[11,"Trap",E,R[5050],78,[[["opcode"],["type"],[R[4997]]]]],[11,"CondTrap",E,R[5051],78,[[["value"],["type"],[R[4997]],["opcode"]]]],[11,R[4979],E,R[5052],78,[[["value"],["type"],[R[4997]],["opcode"],["intcc"]]]],[11,R[4980],E,R[5053],78,[[["value"],["type"],["floatcc"],[R[4997]],["opcode"]]]]],"p":[[8,R[55]],[3,"Context"],[3,R[5364]],[4,R[5365]],[3,R[5366]],[3,"CodeInfo"],[4,"Reloc"],[8,"RelocSink"],[8,"TrapSink"],[8,"CodeSink"],[3,"CFGPrinter"],[3,"FuncCursor"],[3,"EncCursor"],[4,R[5367]],[8,"Cursor"],[3,R[5368]],[3,R[5369]],[3,R[5370]],[3,R[5546]],[3,R[5371]],[3,"AbiParam"],[3,R[5372]],[3,R[5434]],[3,"HeapData"],[3,"TableData"],[3,R[5373]],[4,R[5374]],[4,R[5375]],[4,R[5376]],[4,R[5377]],[4,"HeapStyle"],[4,"LibCall"],[4,R[5378]],[4,"TrapCode"],[4,R[5379]],[4,"ValueLoc"],[4,R[5380]],[3,R[5381]],[4,"IntCC"],[4,"FloatCC"],[8,"CondCode"],[3,R[5382]],[4,"ValueDef"],[4,"AnyEntity"],[3,"Ebb"],[3,"Value"],[3,"Inst"],[3,"StackSlot"],[3,R[4946]],[3,"JumpTable"],[3,"FuncRef"],[3,"SigRef"],[3,"Heap"],[3,"Table"],[3,R[196]],[3,R[5383]],[3,"Imm64"],[3,"Uimm64"],[3,"Offset32"],[3,"Ieee32"],[3,"Ieee64"],[3,R[5384]],[4,R[5385]],[4,R[5386]],[4,"Opcode"],[4,"BranchInfo"],[4,"CallInfo"],[4,R[5387]],[3,R[5388]],[3,R[5389]],[3,R[5390]],[3,"Layout"],[3,"MemFlags"],[3,"SourceLoc"],[3,R[5391]],[3,"StackSlots"],[4,R[5392]],[3,"Type"],[8,R[5393]],[8,R[5394]],[8,R[5395]],[8,R[5396]],[3,"ValueLabel"],[3,R[5397]],[3,R[5398]],[3,R[5399]],[3,"EncInfo"],[3,R[5400]],[3,"StackRef"],[3,R[5401]],[4,"CallConv"],[4,R[5402]],[4,"StackBase"],[4,R[5403]],[3,"Encoding"],[3,"RegBank"],[3,R[5404]],[3,"RegInfo"],[8,"TargetIsa"],[3,"Builder"],[3,"Loop"],[3,R[5405]],[3,"FlagsOrIsa"],[4,"SetError"],[4,"OptLevel"],[3,"Template"],[3,"Descriptor"],[4,"Detail"],[8,R[5406]],[3,"Builder"],[3,R[5407]],[3,"Flags"],[3,R[5408]],[3,R[5409]],[8,"FuncWriter"],[3,R[5410]],[3,R[56]],[3,R[5411]],[3,"ChildIter"],[3,"PredIter"],[3,R[5412]],[3,"Values"],[3,R[5413]],[3,R[5414]],[3,R[5415]],[3,"Uimm32"],[3,"Ebbs"],[3,"Insts"],[3,R[5416]],[3,R[5417]],[3,"PassTimes"],[3,R[5418]],[3,R[5419]]]};
searchIndex["cranelift_entity"]={"doc":"Array-based data structures using densely numbered entity…","i":[[3,R[57],R[22],"A slice mapping `K -> V` allocating dense entity references.",N,N],[3,"Iter",E,R[20],N,N],[3,R[631],E,R[20],N,N],[3,"Keys",E,R[20],N,N],[3,R[59],E,"A small list of entity references allocated from a pool.",N,N],[3,R[58],E,"A memory pool for storing lists of `T`.",N,N],[3,R[60],E,"A mapping `K -> V` for densely indexed entity references.",N,N],[3,R[61],E,"A primary mapping `K -> V` allocating dense entity…",N,N],[3,R[62],E,"A set of `K` for densely indexed entity references.",N,N],[3,R[63],E,"A sparse mapping of entity references.",N,N],[0,R[5420],E,R[5421],N,N],[3,R[56],R[48],R[5422],N,N],[8,R[55],E,R[5423],N,N],[10,R[5150],E,R[5424],0,[[],["self"]]],[11,"is_none",E,R[5425],1,[[["self"]],["bool"]]],[11,"is_some",E,R[5426],1,[[["self"]],["bool"]]],[11,"expand",E,R[5427],1,[[],[R[23]]]],[11,"map",E,R[5428],1,[[["f"]],[R[23]]]],[11,"unwrap",E,R[21],1,[[],[T]]],[11,"expect",E,R[21],1,[[["str"]],[T]]],[11,"take",E,R[5429],1,[[["self"]],[R[23]]]],[11,R[3982],R[22],"Create a new slice from a raw pointer. A safer way to…",2,[[],["self"]]],[11,R[27],E,R[38],2,[[["self"],["k"]],["bool"]]],[11,"get",E,R[28],2,[[["self"],["k"]],[[R[23]],["v"]]]],[11,R[39],E,R[40],2,[[["self"],["k"]],[[R[23]],["v"]]]],[11,R[25],E,R[29],2,[[["self"]],["bool"]]],[11,"len",E,R[41],2,[[["self"]],["usize"]]],[11,"keys",E,R[33],2,[[["self"]],["keys"]]],[11,"values",E,R[34],2,[[["self"]],["iter"]]],[11,R[35],E,R[36],2,[[["self"]],[R[24]]]],[11,"iter",E,R[30],2,[[["self"]],["iter"]]],[11,R[31],E,R[32],2,[[["self"]],[R[24]]]],[11,"last",E,R[43],2,[[["self"]],[[R[23]],["v"]]]],[11,"new",E,"Create an `Iter` iterator that visits the `PrimaryMap`…",3,[[["iter"]],["self"]]],[11,"new",E,"Create an `IterMut` iterator that visits the `PrimaryMap`…",4,[[[R[24]]],["self"]]],[11,"with_len",E,"Create a `Keys` iterator that visits `len` entities…",5,[[["usize"]],["self"]]],[11,"new",E,"Create a new list pool.",6,[[],["self"]]],[11,"clear",E,"Clear the pool, forgetting about all lists that use it.",6,[[["self"]]]],[11,"new",E,"Create a new empty list.",7,[[],["self"]]],[11,R[121],E,"Create a new list with the contents initialized from a…",7,[[[R[26]]],["self"]]],[11,R[25],E,"Returns `true` if the list has a length of 0.",7,[[["self"]],["bool"]]],[11,"len",E,"Get the number of elements in the list.",7,[[["self"],[R[26]]],["usize"]]],[11,R[27],E,"Returns `true` if the list is valid",7,[[["self"],[R[26]]],["bool"]]],[11,R[44],E,"Get the list as a slice.",7,[[[R[26]],["self"]]]],[11,"get",E,"Get a single element from the list.",7,[[["self"],[R[26]],["usize"]],[R[23]]]],[11,"first",E,"Get the first element from the list.",7,[[["self"],[R[26]]],[R[23]]]],[11,R[74],E,"Get the list as a mutable slice.",7,[[[R[26]],["self"]]]],[11,R[39],E,"Get a mutable reference to a single element from the list.",7,[[[R[26]],["self"],["usize"]],[[T],[R[23]]]]],[11,"clear",E,"Removes all elements from the list.",7,[[["self"],[R[26]]]]],[11,"take",E,"Take all elements from this list and return them as a new…",7,[[["self"]],["self"]]],[11,"push",E,"Appends an element to the back of the list. Returns the…",7,[[["self"],[T],[R[26]]],["usize"]]],[11,"extend",E,"Appends multiple elements to the back of the list.",7,[[["self"],["i"],[R[26]]]]],[11,"insert",E,"Inserts an element as position `index` in the list,…",7,[[["self"],["usize"],[T],[R[26]]]]],[11,"remove",E,"Removes the element at position `index` from the list.…",7,[[["self"],["usize"],[R[26]]]]],[11,R[120],E,"Removes the element at `index` in constant time by…",7,[[["self"],["usize"],[R[26]]]]],[11,"grow_at",E,"Grow the list by inserting `count` elements at `index`.",7,[[["self"],["usize"],[R[26]]]]],[11,"new",E,R[37],8,[[],["self"]]],[11,"with_default",E,"Create a new empty map with a specified default value.",8,[[["v"]],["self"]]],[11,"get",E,R[28],8,[[["self"],["k"]],[[R[23]],["v"]]]],[11,R[25],E,R[29],8,[[["self"]],["bool"]]],[11,"clear",E,R[42],8,[[["self"]]]],[11,"iter",E,R[30],8,[[["self"]],["iter"]]],[11,R[31],E,R[32],8,[[["self"]],[R[24]]]],[11,"keys",E,R[33],8,[[["self"]],["keys"]]],[11,"values",E,R[34],8,[[["self"]],["iter"]]],[11,R[35],E,R[36],8,[[["self"]],[R[24]]]],[11,"resize",E,"Resize the map to have `n` entries by adding default…",8,[[["self"],["usize"]]]],[11,"new",E,R[37],9,[[],["self"]]],[11,R[115],E,"Create a new empty map with the given capacity.",9,[[["usize"]],["self"]]],[11,R[27],E,R[38],9,[[["self"],["k"]],["bool"]]],[11,"get",E,R[28],9,[[["self"],["k"]],[[R[23]],["v"]]]],[11,R[39],E,R[40],9,[[["self"],["k"]],[[R[23]],["v"]]]],[11,R[25],E,R[29],9,[[["self"]],["bool"]]],[11,"len",E,R[41],9,[[["self"]],["usize"]]],[11,"keys",E,R[33],9,[[["self"]],["keys"]]],[11,"values",E,R[34],9,[[["self"]],["iter"]]],[11,R[35],E,R[36],9,[[["self"]],[R[24]]]],[11,"iter",E,R[30],9,[[["self"]],["iter"]]],[11,R[31],E,R[32],9,[[["self"]],[R[24]]]],[11,"clear",E,R[42],9,[[["self"]]]],[11,"next_key",E,"Get the key that will be assigned to the next pushed value.",9,[[["self"]],["k"]]],[11,"push",E,"Append `v` to the mapping, assigning a new key which is…",9,[[["self"],["v"]],["k"]]],[11,"last",E,R[43],9,[[["self"]],[[R[23]],["v"]]]],[11,"reserve",E,"Reserves capacity for at least `additional` more elements…",9,[[["self"],["usize"]]]],[11,R[118],E,"Reserves the minimum capacity for exactly `additional`…",9,[[["self"],["usize"]]]],[11,R[119],E,"Shrinks the capacity of the `PrimaryMap` as much as…",9,[[["self"]]]],[11,"into_boxed_slice",E,"Consumes this `PrimaryMap` and produces a `BoxedSlice`.",9,[[],[R[54]]]],[11,"new",E,"Create a new empty set.",10,[[],["self"]]],[11,R[1285],E,R[28],10,[[["self"],["k"]],["bool"]]],[11,R[25],E,"Is this set completely empty?",10,[[["self"]],["bool"]]],[11,"clear",E,"Remove all entries from this set.",10,[[["self"]]]],[11,"keys",E,"Iterate over all the keys in this set.",10,[[["self"]],["keys"]]],[11,"resize",E,"Resize the set to have `n` entries by adding default…",10,[[["self"],["usize"]]]],[11,"insert",E,"Insert the element at `k`.",10,[[["self"],["k"]],["bool"]]],[11,"new",E,"Create a new empty mapping.",11,[[],["self"]]],[11,"len",E,R[309],11,[[["self"]],["usize"]]],[11,R[25],E,"Returns true is the map contains no elements.",11,[[["self"]],["bool"]]],[11,"clear",E,"Remove all elements from the mapping.",11,[[["self"]]]],[11,"get",E,R[310],11,[[["self"],["k"]],[[R[23]],["v"]]]],[11,R[39],E,R[312],11,[[["self"],["k"]],[[R[23]],["v"]]]],[11,R[311],E,"Return `true` if the map contains a value corresponding to…",11,[[["self"],["k"]],["bool"]]],[11,"insert",E,"Insert a value into the map.",11,[[["self"],["v"]],[R[23]]]],[11,"remove",E,"Remove a value from the map and return it.",11,[[["self"],["k"]],[R[23]]]],[11,"pop",E,"Remove the last value from the map.",11,[[["self"]],[R[23]]]],[11,"values",E,"Get an iterator over the values in the map.",11,[[["self"]],["iter"]]],[11,R[44],E,"Get the values as a slice.",11,[[["self"]]]],[6,"SparseSet",E,"A sparse set of entity references.",N,N],[8,R[64],E,"A type wrapping a small integer index should implement…",N,N],[10,"new",E,"Create a new entity reference from a small integer. This…",12,[[["usize"]],["self"]]],[10,"index",E,"Get the index that was used to create this entity reference.",12,[[],["usize"]]],[8,R[65],E,"Trait for extracting keys from values stored in a…",N,N],[10,"key",E,"Get the key of this sparse map value. This key is not…",13,[[["self"]],["k"]]],[14,"entity_impl",E,"Macro which provides the common implementation of a 32-bit…",N,N],[11,"from",E,E,2,[[[T]],[T]]],[11,R[4],E,E,2,[[[U]],[R[3]]]],[11,"into",E,E,2,[[],[U]]],[11,R[5],E,E,2,[[],[R[3]]]],[11,R[6],E,E,2,[[["self"]],[T]]],[11,R[7],E,E,2,[[["self"]],[T]]],[11,R[8],E,E,2,[[["self"]],[R[9]]]],[11,R[46],E,E,2,[[["self"]],[T]]],[11,R[47],E,E,2,[[["self"],[T]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[4],E,E,3,[[[U]],[R[3]]]],[11,R[45],E,E,3,[[],["i"]]],[11,"into",E,E,3,[[],[U]]],[11,R[5],E,E,3,[[],[R[3]]]],[11,R[6],E,E,3,[[["self"]],[T]]],[11,R[7],E,E,3,[[["self"]],[T]]],[11,R[8],E,E,3,[[["self"]],[R[9]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[4],E,E,4,[[[U]],[R[3]]]],[11,R[45],E,E,4,[[],["i"]]],[11,"into",E,E,4,[[],[U]]],[11,R[5],E,E,4,[[],[R[3]]]],[11,R[6],E,E,4,[[["self"]],[T]]],[11,R[7],E,E,4,[[["self"]],[T]]],[11,R[8],E,E,4,[[["self"]],[R[9]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[4],E,E,5,[[[U]],[R[3]]]],[11,R[45],E,E,5,[[],["i"]]],[11,"into",E,E,5,[[],[U]]],[11,R[5],E,E,5,[[],[R[3]]]],[11,R[6],E,E,5,[[["self"]],[T]]],[11,R[7],E,E,5,[[["self"]],[T]]],[11,R[8],E,E,5,[[["self"]],[R[9]]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[4],E,E,7,[[[U]],[R[3]]]],[11,"into",E,E,7,[[],[U]]],[11,R[5],E,E,7,[[],[R[3]]]],[11,R[6],E,E,7,[[["self"]],[T]]],[11,R[7],E,E,7,[[["self"]],[T]]],[11,R[8],E,E,7,[[["self"]],[R[9]]]],[11,R[46],E,E,7,[[["self"]],[T]]],[11,R[47],E,E,7,[[["self"],[T]]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[4],E,E,6,[[[U]],[R[3]]]],[11,"into",E,E,6,[[],[U]]],[11,R[5],E,E,6,[[],[R[3]]]],[11,R[6],E,E,6,[[["self"]],[T]]],[11,R[7],E,E,6,[[["self"]],[T]]],[11,R[8],E,E,6,[[["self"]],[R[9]]]],[11,R[46],E,E,6,[[["self"]],[T]]],[11,R[47],E,E,6,[[["self"],[T]]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[4],E,E,8,[[[U]],[R[3]]]],[11,"into",E,E,8,[[],[U]]],[11,R[5],E,E,8,[[],[R[3]]]],[11,R[6],E,E,8,[[["self"]],[T]]],[11,R[7],E,E,8,[[["self"]],[T]]],[11,R[8],E,E,8,[[["self"]],[R[9]]]],[11,R[46],E,E,8,[[["self"]],[T]]],[11,R[47],E,E,8,[[["self"],[T]]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[4],E,E,9,[[[U]],[R[3]]]],[11,"into",E,E,9,[[],[U]]],[11,R[5],E,E,9,[[],[R[3]]]],[11,R[6],E,E,9,[[["self"]],[T]]],[11,R[7],E,E,9,[[["self"]],[T]]],[11,R[8],E,E,9,[[["self"]],[R[9]]]],[11,R[46],E,E,9,[[["self"]],[T]]],[11,R[47],E,E,9,[[["self"],[T]]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[4],E,E,10,[[[U]],[R[3]]]],[11,"into",E,E,10,[[],[U]]],[11,R[5],E,E,10,[[],[R[3]]]],[11,R[6],E,E,10,[[["self"]],[T]]],[11,R[7],E,E,10,[[["self"]],[T]]],[11,R[8],E,E,10,[[["self"]],[R[9]]]],[11,R[46],E,E,10,[[["self"]],[T]]],[11,R[47],E,E,10,[[["self"],[T]]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[4],E,E,11,[[[U]],[R[3]]]],[11,"into",E,E,11,[[],[U]]],[11,R[5],E,E,11,[[],[R[3]]]],[11,R[6],E,E,11,[[["self"]],[T]]],[11,R[7],E,E,11,[[["self"]],[T]]],[11,R[8],E,E,11,[[["self"]],[R[9]]]],[11,"from",R[48],E,1,[[[T]],[T]]],[11,R[4],E,E,1,[[[U]],[R[3]]]],[11,"into",E,E,1,[[],[U]]],[11,R[5],E,E,1,[[],[R[3]]]],[11,R[6],E,E,1,[[["self"]],[T]]],[11,R[7],E,E,1,[[["self"]],[T]]],[11,R[8],E,E,1,[[["self"]],[R[9]]]],[11,R[46],E,E,1,[[["self"]],[T]]],[11,R[47],E,E,1,[[["self"],[T]]]],[11,"from",E,R[5430],1,[[[T]],["self"]]],[11,"from",E,R[5431],1,[[[R[23]]],["self"]]],[11,"eq",E,E,1,[[["self"],[R[49]]],["bool"]]],[11,"ne",E,E,1,[[["self"],[R[49]]],["bool"]]],[11,"cmp",E,E,1,[[["self"],[R[49]]],[R[50]]]],[11,R[77],E,E,1,[[["self"],[R[49]]],[[R[23],[R[50]]],[R[50]]]]],[11,"lt",E,E,1,[[["self"],[R[49]]],["bool"]]],[11,"le",E,E,1,[[["self"],[R[49]]],["bool"]]],[11,"gt",E,E,1,[[["self"],[R[49]]],["bool"]]],[11,"ge",E,E,1,[[["self"],[R[49]]],["bool"]]],[11,"hash",E,E,1,[[["self"],["__h"]]]],[11,"fmt",E,E,1,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[22],E,2,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,7,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,6,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,8,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,9,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,10,[[["self"],[R[10]]],[R[3]]]],[11,"index",E,E,2,[[["self"],["k"]],["v"]]],[11,"index",E,E,8,[[["self"],["k"]],["v"]]],[11,"index",E,E,9,[[["self"],["k"]],["v"]]],[11,R[51],E,E,2,[[["self"],["k"]],["v"]]],[11,R[51],E,E,8,[[["self"],["k"]],["v"]]],[11,R[51],E,E,9,[[["self"],["k"]],["v"]]],[11,R[81],E,E,9,[[[T]],["self"]]],[11,R[52],E,E,3,[[["self"]],[R[23]]]],[11,R[52],E,E,4,[[["self"]],[R[23]]]],[11,R[52],E,E,5,[[["self"]],[R[23]]]],[11,"next",E,E,3,[[["self"]],[R[23]]]],[11,R[53],E,E,3,[[["self"]]]],[11,"next",E,E,4,[[["self"]],[R[23]]]],[11,R[53],E,E,4,[[["self"]]]],[11,"next",E,E,5,[[["self"]],[R[23]]]],[11,R[53],E,E,5,[[["self"]]]],[11,"into",R[48],E,1,[[],[R[23]]]],[11,"clone",E,E,1,[[["self"]],[R[49]]]],[11,"clone",R[22],E,2,[[["self"]],[R[54]]]],[11,"clone",E,E,7,[[["self"]],["entitylist"]]],[11,"clone",E,E,6,[[["self"]],[R[26]]]],[11,"clone",E,E,8,[[["self"]],[R[5126]]]],[11,"clone",E,E,9,[[["self"]],["primarymap"]]],[11,"clone",E,E,10,[[["self"]],["entityset"]]],[11,R[83],R[48],R[5432],1,[[],["self"]]],[11,R[83],R[22],E,7,[[],["self"]]]],"p":[[8,R[55]],[3,R[56]],[3,R[57]],[3,"Iter"],[3,R[631]],[3,"Keys"],[3,R[58]],[3,R[59]],[3,R[60]],[3,R[61]],[3,R[62]],[3,R[63]],[8,R[64]],[8,R[65]]]};
searchIndex["cranelift_native"]={"doc":"Performs autodetection of the host for the purposes of…","i":[[5,"builder","cranelift_native","Return an `isa` builder configured for the current host…",N,[[],[[R[3],["builder","str"]],["builder"],["str"]]]],[17,"VERSION",E,R[5523],N,N]],"p":[]};
searchIndex["crossbeam_deque"]={"doc":"A concurrent work-stealing deque.","i":[[3,"Worker","crossbeam_deque","The worker side of a deque.",N,N],[3,"Stealer",E,"The stealer side of a deque.",N,N],[4,"Pop",E,"Possible outcomes of a pop operation.",N,N],[13,"Empty",E,"The deque was empty at the time of popping.",0,N],[13,"Data",E,"Some data has been successfully popped.",0,N],[13,"Retry",E,"Lost the race for popping data to another concurrent steal…",0,N],[4,"Steal",E,"Possible outcomes of a steal operation.",N,N],[13,"Empty",E,"The deque was empty at the time of stealing.",1,N],[13,"Data",E,"Some data has been successfully stolen.",1,N],[13,"Retry",E,"Lost the race for stealing data to another concurrent…",1,N],[5,"fifo",E,"Creates a work-stealing deque with the first-in first-out…",N,[[]]],[5,"lifo",E,"Creates a work-stealing deque with the last-in first-out…",N,[[]]],[11,R[25],E,R[2067],2,[[["self"]],["bool"]]],[11,"push",E,"Pushes an element into the back of the deque.",2,[[["self"],[T]]]],[11,"pop",E,"Pops an element from the deque.",2,[[["self"]],["pop"]]],[11,R[25],E,R[2067],3,[[["self"]],["bool"]]],[11,"steal",E,"Steals an element from the front of the deque.",3,[[["self"]],["steal"]]],[11,"steal_many",E,"Steals elements from the front of the deque.",3,[[["self"],["worker"]],["steal"]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[4],E,E,2,[[[U]],[R[3]]]],[11,R[5],E,E,2,[[],[R[3]]]],[11,R[7],E,E,2,[[["self"]],[T]]],[11,R[6],E,E,2,[[["self"]],[T]]],[11,R[8],E,E,2,[[["self"]],[R[9]]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[46],E,E,3,[[["self"]],[T]]],[11,R[47],E,E,3,[[["self"],[T]]]],[11,R[4],E,E,3,[[[U]],[R[3]]]],[11,R[5],E,E,3,[[],[R[3]]]],[11,R[7],E,E,3,[[["self"]],[T]]],[11,R[6],E,E,3,[[["self"]],[T]]],[11,R[8],E,E,3,[[["self"]],[R[9]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[46],E,E,0,[[["self"]],[T]]],[11,R[47],E,E,0,[[["self"],[T]]]],[11,R[4],E,E,0,[[[U]],[R[3]]]],[11,R[5],E,E,0,[[],[R[3]]]],[11,R[7],E,E,0,[[["self"]],[T]]],[11,R[6],E,E,0,[[["self"]],[T]]],[11,R[8],E,E,0,[[["self"]],[R[9]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[46],E,E,1,[[["self"]],[T]]],[11,R[47],E,E,1,[[["self"],[T]]]],[11,R[4],E,E,1,[[[U]],[R[3]]]],[11,R[5],E,E,1,[[],[R[3]]]],[11,R[7],E,E,1,[[["self"]],[T]]],[11,R[6],E,E,1,[[["self"]],[T]]],[11,R[8],E,E,1,[[["self"]],[R[9]]]],[11,"clone",E,E,0,[[["self"]],["pop"]]],[11,"clone",E,E,1,[[["self"]],["steal"]]],[11,"clone",E,E,3,[[["self"]],["stealer"]]],[11,R[77],E,E,0,[[["self"],["pop"]],[[R[50]],[R[23],[R[50]]]]]],[11,"lt",E,E,0,[[["self"],["pop"]],["bool"]]],[11,"le",E,E,0,[[["self"],["pop"]],["bool"]]],[11,"gt",E,E,0,[[["self"],["pop"]],["bool"]]],[11,"ge",E,E,0,[[["self"],["pop"]],["bool"]]],[11,R[77],E,E,1,[[["self"],["steal"]],[[R[50]],[R[23],[R[50]]]]]],[11,"lt",E,E,1,[[["self"],["steal"]],["bool"]]],[11,"le",E,E,1,[[["self"],["steal"]],["bool"]]],[11,"gt",E,E,1,[[["self"],["steal"]],["bool"]]],[11,"ge",E,E,1,[[["self"],["steal"]],["bool"]]],[11,"cmp",E,E,0,[[["self"],["pop"]],[R[50]]]],[11,"cmp",E,E,1,[[["self"],["steal"]],[R[50]]]],[11,"eq",E,E,0,[[["self"],["pop"]],["bool"]]],[11,"ne",E,E,0,[[["self"],["pop"]],["bool"]]],[11,"eq",E,E,1,[[["self"],["steal"]],["bool"]]],[11,"ne",E,E,1,[[["self"],["steal"]],["bool"]]],[11,"fmt",E,E,0,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,1,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,2,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,3,[[["self"],[R[10]]],[R[3]]]]],"p":[[4,"Pop"],[4,"Steal"],[3,"Worker"],[3,"Stealer"]]};
searchIndex["crossbeam_epoch"]={"doc":"Epoch-based memory reclamation.","i":[[3,"Atomic","crossbeam_epoch","An atomic pointer that can be safely shared between threads.",N,N],[3,R[2004],E,"The error returned on failed compare-and-set operation.",N,N],[12,"current",E,"The value in the atomic pointer at the time of the failed…",0,N],[12,"new",E,"The new value, which the operation failed to store.",0,N],[3,"Owned",E,"An owned heap-allocated object.",N,N],[3,"Shared",E,"A pointer to an object protected by the epoch GC.",N,N],[3,"Collector",E,"An epoch-based garbage collector.",N,N],[3,R[2005],E,"A handle to a garbage collector.",N,N],[3,"Guard",E,"A guard that keeps the current thread pinned.",N,N],[5,"unprotected",E,"Returns a reference to a dummy guard that allows…",N,[[],["guard"]]],[5,"default_collector",E,"Returns the default global collector.",N,[[],[R[2001]]]],[5,"is_pinned",E,"Returns `true` if the current thread is pinned.",N,[[],["bool"]]],[5,"pin",E,"Pins the current thread.",N,[[],["guard"]]],[11,"null",E,"Returns a new null atomic pointer.",1,[[],["atomic"]]],[11,"new",E,"Allocates `value` on the heap and returns a new atomic…",1,[[[T]],["atomic"]]],[11,"load",E,"Loads a `Shared` from the atomic pointer.",1,[[["self"],[R[50]],["guard"]],["shared"]]],[11,R[2007],E,"Loads a `Shared` from the atomic pointer using a \"consume\"…",1,[[["self"],["guard"]],["shared"]]],[11,"store",E,R[1993],1,[[["self"],["pointer"],[R[50]]]]],[11,"swap",E,R[1993],1,[[["self"],["pointer"],[R[50]],["guard"]],["shared"]]],[11,"compare_and_set",E,R[1995],1,[[["self"],["shared"],["o"],["p"],["guard"]],[[R[1994]],[R[3],["shared",R[1994]]],["shared"]]]],[11,"compare_and_set_weak",E,R[1995],1,[[["self"],["shared"],["o"],["p"],["guard"]],[[R[1994]],[R[3],["shared",R[1994]]],["shared"]]]],[11,R[637],E,"Bitwise \"and\" with the current tag.",1,[[["self"],["usize"],[R[50]],["guard"]],["shared"]]],[11,R[642],E,"Bitwise \"or\" with the current tag.",1,[[["self"],["usize"],[R[50]],["guard"]],["shared"]]],[11,R[640],E,"Bitwise \"xor\" with the current tag.",1,[[["self"],["usize"],[R[50]],["guard"]],["shared"]]],[11,"into_owned",E,R[1997],1,[[],["owned"]]],[11,"new",E,"Allocates `value` on the heap and returns a new owned…",2,[[[T]],["owned"]]],[11,R[3982],E,"Returns a new owned pointer pointing to `raw`.",2,[[],["owned"]]],[11,"into_shared",E,"Converts the owned pointer into a [`Shared`].",2,[[["guard"]],["shared"]]],[11,"into_box",E,"Converts the owned pointer into a `Box`.",2,[[],["box"]]],[11,"tag",E,R[1998],2,[[["self"]],["usize"]]],[11,"with_tag",E,R[1999],2,[[["usize"]],["owned"]]],[11,"null",E,"Returns a new null pointer.",3,[[],["shared"]]],[11,"is_null",E,"Returns `true` if the pointer is null.",3,[[["self"]],["bool"]]],[11,"as_raw",E,"Converts the pointer to a raw pointer (without the tag).",3,[[["self"]]]],[11,"deref",E,R[1996],3,[[["self"]],[T]]],[11,R[17],E,R[1996],3,[[["self"]],[T]]],[11,"as_ref",E,"Converts the pointer to a reference.",3,[[["self"]],[[R[23]],[T]]]],[11,"into_owned",E,R[1997],3,[[],["owned"]]],[11,"tag",E,R[1998],3,[[["self"]],["usize"]]],[11,"with_tag",E,R[1999],3,[[["self"],["usize"]],["shared"]]],[11,"new",E,"Creates a new collector.",4,[[],["self"]]],[11,R[4249],E,"Registers a new handle for the collector.",4,[[["self"]],["localhandle"]]],[11,"pin",E,"Pins the handle.",5,[[["self"]],["guard"]]],[11,"is_pinned",E,"Returns `true` if the handle is pinned.",5,[[["self"]],["bool"]]],[11,R[2001],E,"Returns the `Collector` associated with this handle.",5,[[["self"]],[R[2001]]]],[11,"defer",E,R[2000],6,[[["self"],["f"]]]],[11,"defer_unchecked",E,R[2000],6,[[["self"],["f"]]]],[11,"defer_destroy",E,"Stores a destructor for an object so that it can be…",6,[[["self"],["shared"]]]],[11,"flush",E,"Clears up the thread-local cache of deferred functions by…",6,[[["self"]]]],[11,"repin",E,"Unpins and then immediately re-pins the thread.",6,[[["self"]]]],[11,"repin_after",E,"Temporarily unpins the thread, executes the given function…",6,[[["self"],["f"]],["r"]]],[11,R[2001],E,"Returns the `Collector` associated with this guard.",6,[[["self"]],[[R[2001]],[R[23],[R[2001]]]]]],[8,R[2006],E,"Memory orderings for compare-and-set operations.",N,N],[10,"success",E,"The ordering of the operation when it succeeds.",7,[[["self"]],[R[50]]]],[10,"failure",E,"The ordering of the operation when it fails.",7,[[["self"]],[R[50]]]],[8,"Pointer",E,"A trait for either `Owned` or `Shared` pointers.",N,N],[10,R[2003],E,"Returns the machine representation of the pointer.",8,[[],["usize"]]],[10,R[1645],E,R[2002],8,[[["usize"]],["self"]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[46],E,E,1,[[["self"]],[T]]],[11,R[47],E,E,1,[[["self"],[T]]]],[11,R[4],E,E,1,[[[U]],[R[3]]]],[11,R[5],E,E,1,[[],[R[3]]]],[11,R[7],E,E,1,[[["self"]],[T]]],[11,R[6],E,E,1,[[["self"]],[T]]],[11,R[8],E,E,1,[[["self"]],[R[9]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[4],E,E,0,[[[U]],[R[3]]]],[11,R[5],E,E,0,[[],[R[3]]]],[11,R[7],E,E,0,[[["self"]],[T]]],[11,R[6],E,E,0,[[["self"]],[T]]],[11,R[8],E,E,0,[[["self"]],[R[9]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[46],E,E,2,[[["self"]],[T]]],[11,R[47],E,E,2,[[["self"],[T]]]],[11,R[4],E,E,2,[[[U]],[R[3]]]],[11,R[5],E,E,2,[[],[R[3]]]],[11,R[7],E,E,2,[[["self"]],[T]]],[11,R[6],E,E,2,[[["self"]],[T]]],[11,R[8],E,E,2,[[["self"]],[R[9]]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[46],E,E,3,[[["self"]],[T]]],[11,R[47],E,E,3,[[["self"],[T]]]],[11,R[4],E,E,3,[[[U]],[R[3]]]],[11,R[5],E,E,3,[[],[R[3]]]],[11,R[7],E,E,3,[[["self"]],[T]]],[11,R[6],E,E,3,[[["self"]],[T]]],[11,R[8],E,E,3,[[["self"]],[R[9]]]],[11,"into",E,E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[46],E,E,4,[[["self"]],[T]]],[11,R[47],E,E,4,[[["self"],[T]]]],[11,R[4],E,E,4,[[[U]],[R[3]]]],[11,R[5],E,E,4,[[],[R[3]]]],[11,R[7],E,E,4,[[["self"]],[T]]],[11,R[6],E,E,4,[[["self"]],[T]]],[11,R[8],E,E,4,[[["self"]],[R[9]]]],[11,"into",E,E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[4],E,E,5,[[[U]],[R[3]]]],[11,R[5],E,E,5,[[],[R[3]]]],[11,R[7],E,E,5,[[["self"]],[T]]],[11,R[6],E,E,5,[[["self"]],[T]]],[11,R[8],E,E,5,[[["self"]],[R[9]]]],[11,"into",E,E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[4],E,E,6,[[[U]],[R[3]]]],[11,R[5],E,E,6,[[],[R[3]]]],[11,R[7],E,E,6,[[["self"]],[T]]],[11,R[6],E,E,6,[[["self"]],[T]]],[11,R[8],E,E,6,[[["self"]],[R[9]]]],[11,R[2003],E,E,2,[[],["usize"]]],[11,R[1645],E,R[2002],2,[[["usize"]],["self"]]],[11,R[2003],E,E,3,[[],["usize"]]],[11,R[1645],E,E,3,[[["usize"]],["self"]]],[11,"as_ref",E,E,2,[[["self"]],[T]]],[11,R[83],E,E,1,[[],["self"]]],[11,R[83],E,E,3,[[],["self"]]],[11,"clone",E,"Returns a copy of the atomic value.",1,[[["self"]],["self"]]],[11,"clone",E,E,2,[[["self"]],["self"]]],[11,"clone",E,E,3,[[["self"]],["self"]]],[11,"clone",E,"Creates another reference to the same garbage collector.",4,[[["self"]],["self"]]],[11,R[77],E,E,3,[[["self"]],[[R[50]],[R[23],[R[50]]]]]],[11,"as_mut",E,E,2,[[["self"]],[T]]],[11,"cmp",E,E,3,[[["self"]],[R[50]]]],[11,"eq",E,E,3,[[["self"]],["bool"]]],[11,"eq",E,"Checks if both handles point to the same collector.",4,[[["self"],[R[2001]]],["bool"]]],[11,"drop",E,E,2,[[["self"]]]],[11,"drop",E,E,5,[[["self"]]]],[11,"drop",E,E,6,[[["self"]]]],[11,"from",E,"Returns a new atomic pointer pointing to `owned`.",1,[[["owned"]],["self"]]],[11,"from",E,E,1,[[["box"]],["self"]]],[11,"from",E,E,1,[[[T]],["self"]]],[11,"from",E,"Returns a new atomic pointer pointing to `ptr`.",1,[[["shared"]],["self"]]],[11,"from",E,"Returns a new atomic pointer pointing to `raw`.",1,[[],["self"]]],[11,"from",E,E,2,[[[T]],["self"]]],[11,"from",E,"Returns a new owned pointer pointing to `b`.",2,[[["box"]],["self"]]],[11,"from",E,"Returns a new pointer pointing to `raw`.",3,[[],["self"]]],[11,"deref",E,E,2,[[["self"]],[T]]],[11,R[17],E,E,2,[[["self"]],[T]]],[11,"fmt",E,E,0,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,1,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,2,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,3,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,4,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,5,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,6,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,1,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,3,[[["self"],[R[10]]],[R[3]]]],[11,R[7],E,E,2,[[["self"]],[T]]],[11,R[6],E,E,2,[[["self"]],[T]]]],"p":[[3,R[2004]],[3,"Atomic"],[3,"Owned"],[3,"Shared"],[3,"Collector"],[3,R[2005]],[3,"Guard"],[8,R[2006]],[8,"Pointer"]]};
searchIndex["crossbeam_queue"]={"doc":"Concurrent queues.","i":[[3,R[987],"crossbeam_queue","A bounded multi-producer multi-consumer queue.",N,N],[3,"SegQueue",E,"An unbounded multi-producer multi-consumer queue.",N,N],[3,"PopError",E,"Error which occurs when popping from an empty queue.",N,N],[3,R[986],E,"Error which occurs when pushing into a full queue.",N,N],[12,"0",E,E,0,N],[11,"new",E,"Creates a new bounded queue with the given capacity.",1,[[["usize"]],["arrayqueue"]]],[11,"push",E,"Attempts to push an element into the queue.",1,[[["self"],[T]],[[R[3],[R[982]]],[R[982]]]]],[11,"pop",E,"Attempts to pop an element from the queue.",1,[[["self"]],[[R[983]],[R[3],[R[983]]]]]],[11,R[764],E,"Returns the capacity of the queue.",1,[[["self"]],["usize"]]],[11,R[25],E,R[984],1,[[["self"]],["bool"]]],[11,"is_full",E,"Returns `true` if the queue is full.",1,[[["self"]],["bool"]]],[11,"len",E,R[985],1,[[["self"]],["usize"]]],[11,"new",E,"Creates a new unbounded queue.",2,[[],["segqueue"]]],[11,"push",E,"Pushes an element into the queue.",2,[[["self"],[T]]]],[11,"pop",E,"Pops an element from the queue.",2,[[["self"]],[[R[983]],[R[3],[R[983]]]]]],[11,R[25],E,R[984],2,[[["self"]],["bool"]]],[11,"len",E,R[985],2,[[["self"]],["usize"]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[4],E,E,1,[[[U]],[R[3]]]],[11,R[5],E,E,1,[[],[R[3]]]],[11,R[7],E,E,1,[[["self"]],[T]]],[11,R[6],E,E,1,[[["self"]],[T]]],[11,R[8],E,E,1,[[["self"]],[R[9]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[4],E,E,2,[[[U]],[R[3]]]],[11,R[5],E,E,2,[[],[R[3]]]],[11,R[7],E,E,2,[[["self"]],[T]]],[11,R[6],E,E,2,[[["self"]],[T]]],[11,R[8],E,E,2,[[["self"]],[R[9]]]],[11,"into",E,E,3,[[],[U]]],[11,R[113],E,E,3,[[["self"]],["string"]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[46],E,E,3,[[["self"]],[T]]],[11,R[47],E,E,3,[[["self"],[T]]]],[11,R[4],E,E,3,[[[U]],[R[3]]]],[11,R[5],E,E,3,[[],[R[3]]]],[11,R[7],E,E,3,[[["self"]],[T]]],[11,R[6],E,E,3,[[["self"]],[T]]],[11,R[8],E,E,3,[[["self"]],[R[9]]]],[11,"into",E,E,0,[[],[U]]],[11,R[113],E,E,0,[[["self"]],["string"]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[46],E,E,0,[[["self"]],[T]]],[11,R[47],E,E,0,[[["self"],[T]]]],[11,R[4],E,E,0,[[[U]],[R[3]]]],[11,R[5],E,E,0,[[],[R[3]]]],[11,R[7],E,E,0,[[["self"]],[T]]],[11,R[6],E,E,0,[[["self"]],[T]]],[11,R[8],E,E,0,[[["self"]],[R[9]]]],[11,R[83],E,E,2,[[],["segqueue"]]],[11,"clone",E,E,3,[[["self"]],[R[983]]]],[11,"clone",E,E,0,[[["self"]],[R[982]]]],[11,"eq",E,E,3,[[["self"],[R[983]]],["bool"]]],[11,"eq",E,E,0,[[["self"],[R[982]]],["bool"]]],[11,"ne",E,E,0,[[["self"],[R[982]]],["bool"]]],[11,"drop",E,E,1,[[["self"]]]],[11,"drop",E,E,2,[[["self"]]]],[11,"fmt",E,E,1,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,3,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,0,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,2,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,3,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,0,[[["self"],[R[10]]],[R[3]]]],[11,R[157],E,E,3,[[["self"]],["str"]]],[11,R[157],E,E,0,[[["self"]],["str"]]]],"p":[[3,R[986]],[3,R[987]],[3,"SegQueue"],[3,"PopError"]]};
searchIndex["crossbeam_utils"]={"doc":"Miscellaneous tools for concurrent programming.","i":[[3,R[661],R[643],R[644],N,N],[3,"Backoff",E,"Performs exponential backoff in spin loops.",N,N],[0,"atomic",E,"Atomic types.",N,N],[3,R[659],R[651],"A thread-safe mutable memory location.",N,N],[11,"new",E,"Creates a new atomic cell initialized with `val`.",0,[[[T]],[R[654]]]],[11,R[15],E,"Unwraps the atomic cell and returns its inner value.",0,[[],[T]]],[11,"is_lock_free",E,"Returns `true` if operations on values of this type are…",0,[[],["bool"]]],[11,"store",E,"Stores `val` into the atomic cell.",0,[[["self"],[T]]]],[11,"swap",E,"Stores `val` into the atomic cell and returns the previous…",0,[[["self"],[T]],[T]]],[11,"as_ptr",E,"Returns a raw pointer to the underlying data in this…",0,[[["self"]]]],[11,"take",E,"Takes the value of the atomic cell, leaving…",0,[[["self"]],[T]]],[11,"load",E,"Loads a value.",0,[[["self"]],[T]]],[11,"compare_and_swap",E,R[632],0,[[["self"],[T]],[T]]],[11,"compare_exchange",E,R[632],0,[[["self"],[T]],[R[3]]]],[11,R[633],E,R[634],0,[[["self"],["u8"]],["u8"]]],[11,R[635],E,R[636],0,[[["self"],["u8"]],["u8"]]],[11,R[637],E,R[638],0,[[["self"],["u8"]],["u8"]]],[11,R[642],E,R[639],0,[[["self"],["u8"]],["u8"]]],[11,R[640],E,R[641],0,[[["self"],["u8"]],["u8"]]],[11,R[633],E,R[634],0,[[["self"],["i8"]],["i8"]]],[11,R[635],E,R[636],0,[[["self"],["i8"]],["i8"]]],[11,R[637],E,R[638],0,[[["self"],["i8"]],["i8"]]],[11,R[642],E,R[639],0,[[["self"],["i8"]],["i8"]]],[11,R[640],E,R[641],0,[[["self"],["i8"]],["i8"]]],[11,R[633],E,R[634],0,[[["self"],["u16"]],["u16"]]],[11,R[635],E,R[636],0,[[["self"],["u16"]],["u16"]]],[11,R[637],E,R[638],0,[[["self"],["u16"]],["u16"]]],[11,R[642],E,R[639],0,[[["self"],["u16"]],["u16"]]],[11,R[640],E,R[641],0,[[["self"],["u16"]],["u16"]]],[11,R[633],E,R[634],0,[[["self"],["i16"]],["i16"]]],[11,R[635],E,R[636],0,[[["self"],["i16"]],["i16"]]],[11,R[637],E,R[638],0,[[["self"],["i16"]],["i16"]]],[11,R[642],E,R[639],0,[[["self"],["i16"]],["i16"]]],[11,R[640],E,R[641],0,[[["self"],["i16"]],["i16"]]],[11,R[633],E,R[634],0,[[["self"],["u32"]],["u32"]]],[11,R[635],E,R[636],0,[[["self"],["u32"]],["u32"]]],[11,R[637],E,R[638],0,[[["self"],["u32"]],["u32"]]],[11,R[642],E,R[639],0,[[["self"],["u32"]],["u32"]]],[11,R[640],E,R[641],0,[[["self"],["u32"]],["u32"]]],[11,R[633],E,R[634],0,[[["self"],["i32"]],["i32"]]],[11,R[635],E,R[636],0,[[["self"],["i32"]],["i32"]]],[11,R[637],E,R[638],0,[[["self"],["i32"]],["i32"]]],[11,R[642],E,R[639],0,[[["self"],["i32"]],["i32"]]],[11,R[640],E,R[641],0,[[["self"],["i32"]],["i32"]]],[11,R[633],E,R[634],0,[[["self"],["u64"]],["u64"]]],[11,R[635],E,R[636],0,[[["self"],["u64"]],["u64"]]],[11,R[637],E,R[638],0,[[["self"],["u64"]],["u64"]]],[11,R[642],E,R[639],0,[[["self"],["u64"]],["u64"]]],[11,R[640],E,R[641],0,[[["self"],["u64"]],["u64"]]],[11,R[633],E,R[634],0,[[["self"],["i64"]],["i64"]]],[11,R[635],E,R[636],0,[[["self"],["i64"]],["i64"]]],[11,R[637],E,R[638],0,[[["self"],["i64"]],["i64"]]],[11,R[642],E,R[639],0,[[["self"],["i64"]],["i64"]]],[11,R[640],E,R[641],0,[[["self"],["i64"]],["i64"]]],[11,R[633],E,R[634],0,[[["self"],["u128"]],["u128"]]],[11,R[635],E,R[636],0,[[["self"],["u128"]],["u128"]]],[11,R[637],E,R[638],0,[[["self"],["u128"]],["u128"]]],[11,R[642],E,R[639],0,[[["self"],["u128"]],["u128"]]],[11,R[640],E,R[641],0,[[["self"],["u128"]],["u128"]]],[11,R[633],E,R[634],0,[[["self"],["i128"]],["i128"]]],[11,R[635],E,R[636],0,[[["self"],["i128"]],["i128"]]],[11,R[637],E,R[638],0,[[["self"],["i128"]],["i128"]]],[11,R[642],E,R[639],0,[[["self"],["i128"]],["i128"]]],[11,R[640],E,R[641],0,[[["self"],["i128"]],["i128"]]],[11,R[633],E,R[634],0,[[["self"],["usize"]],["usize"]]],[11,R[635],E,R[636],0,[[["self"],["usize"]],["usize"]]],[11,R[637],E,R[638],0,[[["self"],["usize"]],["usize"]]],[11,R[642],E,R[639],0,[[["self"],["usize"]],["usize"]]],[11,R[640],E,R[641],0,[[["self"],["usize"]],["usize"]]],[11,R[633],E,R[634],0,[[["self"],["isize"]],["isize"]]],[11,R[635],E,R[636],0,[[["self"],["isize"]],["isize"]]],[11,R[637],E,R[638],0,[[["self"],["isize"]],["isize"]]],[11,R[642],E,R[639],0,[[["self"],["isize"]],["isize"]]],[11,R[640],E,R[641],0,[[["self"],["isize"]],["isize"]]],[11,R[637],E,"Applies logical \"and\" to the current value and returns the…",0,[[["self"],["bool"]],["bool"]]],[11,R[642],E,"Applies logical \"or\" to the current value and returns the…",0,[[["self"],["bool"]],["bool"]]],[11,R[640],E,"Applies logical \"xor\" to the current value and returns the…",0,[[["self"],["bool"]],["bool"]]],[8,R[660],E,"Trait which allows reading from primitive atomic types…",N,N],[16,"Val",E,"Type returned by `load_consume`.",1,N],[10,R[2007],E,"Loads a value from the atomic using a \"consume\" memory…",1,[[["self"]]]],[11,"new",R[643],R[644],2,[[[T]],[R[655]]]],[11,R[15],E,"Returns the inner value.",2,[[],[T]]],[11,"new",E,"Creates a new `Backoff`.",3,[[],["self"]]],[11,"reset",E,"Resets the `Backoff`.",3,[[["self"]]]],[11,"spin",E,"Backs off in a lock-free loop.",3,[[["self"]]]],[11,"snooze",E,"Backs off in a blocking loop.",3,[[["self"]]]],[11,"is_completed",E,"Returns `true` if exponential backoff has completed and…",3,[[["self"]],["bool"]]],[0,"sync",E,"Thread synchronization primitives.",N,N],[3,R[662],R[652],"A sharded reader-writer lock.",N,N],[3,R[666],E,"A guard used to release the shared read access of a…",N,N],[3,R[667],E,"A guard used to release the exclusive write access of a…",N,N],[3,"Parker",E,"A thread parking primitive.",N,N],[3,"Unparker",E,"Unparks a thread parked by the associated [`Parker`].",N,N],[3,R[663],E,"Enables threads to synchronize the beginning or end of…",N,N],[11,"new",E,"Creates a new `Parker`.",4,[[],["parker"]]],[11,"park",E,"Blocks the current thread until the token is made available.",4,[[["self"]]]],[11,"park_timeout",E,"Blocks the current thread until the token is made…",4,[[["self"],[R[1205]]]]],[11,R[657],E,"Returns a reference to an associated [`Unparker`].",4,[[["self"]],[R[657]]]],[11,"unpark",E,"Atomically makes the token available if it is not already.",5,[[["self"]]]],[11,"new",E,"Creates a new sharded reader-writer lock.",6,[[[T]],[R[656]]]],[11,R[15],E,"Consumes this lock, returning the underlying data.",6,[[],[R[645]]]],[11,"is_poisoned",E,"Returns `true` if the lock is poisoned.",6,[[["self"]],["bool"]]],[11,R[39],E,R[534],6,[[["self"]],[[T],[R[645]]]]],[11,"try_read",E,"Attempts to acquire this lock with shared read access.",6,[[["self"]],[[R[647],[R[646]]],[R[646]]]]],[11,"read",E,"Locks with shared read access, blocking the current thread…",6,[[["self"]],[[R[646]],[R[645],[R[646]]]]]],[11,R[668],E,"Attempts to acquire this lock with exclusive write access.",6,[[["self"]],[[R[647],[R[648]]],[R[648]]]]],[11,"write",E,"Locks with exclusive write access, blocking the current…",6,[[["self"]],[[R[645],[R[648]]],[R[648]]]]],[11,"new",E,"Creates a new wait group and returns the single reference…",7,[[],[R[658]]]],[11,"wait",E,"Drops this reference and waits until all other references…",7,[[]]],[0,"thread",R[643],"Threads that can borrow variables from the stack.",N,N],[3,"Scope",R[653],"A scope for spawning threads.",N,N],[3,R[664],E,"Configures the properties of a new thread.",N,N],[3,R[665],E,"A handle that can be used to join its scoped thread.",N,N],[5,"scope",E,"Creates a new scope for spawning threads.",N,[[["f"]],[R[3]]]],[11,"spawn",E,"Spawns a scoped thread.",8,[[["self"],["f"]],[R[650]]]],[11,"builder",E,"Creates a builder that can configure a thread before…",8,[[["self"]],[R[649]]]],[11,"name",E,"Sets the name for the new thread.",9,[[["string"]],[R[649]]]],[11,R[3121],E,"Sets the size of the stack for the new thread.",9,[[["usize"]],[R[649]]]],[11,"spawn",E,"Spawns a scoped thread with this configuration.",9,[[["f"]],[[R[3],[R[650]]],[R[650]]]]],[11,"join",E,"Waits for the thread to finish and returns its result.",10,[[],[R[3]]]],[11,"thread",E,"Returns a handle to the underlying thread.",10,[[["self"]],["thread"]]],[11,"into",R[643],E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[46],E,E,2,[[["self"]],[T]]],[11,R[47],E,E,2,[[["self"],[T]]]],[11,R[4],E,E,2,[[[U]],[R[3]]]],[11,R[5],E,E,2,[[],[R[3]]]],[11,R[7],E,E,2,[[["self"]],[T]]],[11,R[6],E,E,2,[[["self"]],[T]]],[11,R[8],E,E,2,[[["self"]],[R[9]]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[4],E,E,3,[[[U]],[R[3]]]],[11,R[5],E,E,3,[[],[R[3]]]],[11,R[7],E,E,3,[[["self"]],[T]]],[11,R[6],E,E,3,[[["self"]],[T]]],[11,R[8],E,E,3,[[["self"]],[R[9]]]],[11,"into",R[651],E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[4],E,E,0,[[[U]],[R[3]]]],[11,R[5],E,E,0,[[],[R[3]]]],[11,R[7],E,E,0,[[["self"]],[T]]],[11,R[6],E,E,0,[[["self"]],[T]]],[11,R[8],E,E,0,[[["self"]],[R[9]]]],[11,"into",R[652],E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[4],E,E,6,[[[U]],[R[3]]]],[11,R[5],E,E,6,[[],[R[3]]]],[11,R[7],E,E,6,[[["self"]],[T]]],[11,R[6],E,E,6,[[["self"]],[T]]],[11,R[8],E,E,6,[[["self"]],[R[9]]]],[11,"into",E,E,11,[[],[U]]],[11,R[113],E,E,11,[[["self"]],["string"]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[4],E,E,11,[[[U]],[R[3]]]],[11,R[5],E,E,11,[[],[R[3]]]],[11,R[7],E,E,11,[[["self"]],[T]]],[11,R[6],E,E,11,[[["self"]],[T]]],[11,R[8],E,E,11,[[["self"]],[R[9]]]],[11,"into",E,E,12,[[],[U]]],[11,R[113],E,E,12,[[["self"]],["string"]]],[11,"from",E,E,12,[[[T]],[T]]],[11,R[4],E,E,12,[[[U]],[R[3]]]],[11,R[5],E,E,12,[[],[R[3]]]],[11,R[7],E,E,12,[[["self"]],[T]]],[11,R[6],E,E,12,[[["self"]],[T]]],[11,R[8],E,E,12,[[["self"]],[R[9]]]],[11,"into",E,E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[4],E,E,4,[[[U]],[R[3]]]],[11,R[5],E,E,4,[[],[R[3]]]],[11,R[7],E,E,4,[[["self"]],[T]]],[11,R[6],E,E,4,[[["self"]],[T]]],[11,R[8],E,E,4,[[["self"]],[R[9]]]],[11,"into",E,E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[46],E,E,5,[[["self"]],[T]]],[11,R[47],E,E,5,[[["self"],[T]]]],[11,R[4],E,E,5,[[[U]],[R[3]]]],[11,R[5],E,E,5,[[],[R[3]]]],[11,R[7],E,E,5,[[["self"]],[T]]],[11,R[6],E,E,5,[[["self"]],[T]]],[11,R[8],E,E,5,[[["self"]],[R[9]]]],[11,"into",E,E,7,[[],[U]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[46],E,E,7,[[["self"]],[T]]],[11,R[47],E,E,7,[[["self"],[T]]]],[11,R[4],E,E,7,[[[U]],[R[3]]]],[11,R[5],E,E,7,[[],[R[3]]]],[11,R[7],E,E,7,[[["self"]],[T]]],[11,R[6],E,E,7,[[["self"]],[T]]],[11,R[8],E,E,7,[[["self"]],[R[9]]]],[11,"into",R[653],E,8,[[],[U]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[4],E,E,8,[[[U]],[R[3]]]],[11,R[5],E,E,8,[[],[R[3]]]],[11,R[7],E,E,8,[[["self"]],[T]]],[11,R[6],E,E,8,[[["self"]],[T]]],[11,R[8],E,E,8,[[["self"]],[R[9]]]],[11,"into",E,E,9,[[],[U]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[4],E,E,9,[[[U]],[R[3]]]],[11,R[5],E,E,9,[[],[R[3]]]],[11,R[7],E,E,9,[[["self"]],[T]]],[11,R[6],E,E,9,[[["self"]],[T]]],[11,R[8],E,E,9,[[["self"]],[R[9]]]],[11,"into",E,E,10,[[],[U]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[4],E,E,10,[[[U]],[R[3]]]],[11,R[5],E,E,10,[[],[R[3]]]],[11,R[7],E,E,10,[[["self"]],[T]]],[11,R[6],E,E,10,[[["self"]],[T]]],[11,R[8],E,E,10,[[["self"]],[R[9]]]],[11,R[83],R[651],E,0,[[],[R[654]]]],[11,R[83],R[643],E,2,[[],[R[655]]]],[11,R[83],E,E,3,[[],["backoff"]]],[11,R[83],R[652],E,6,[[],[R[656]]]],[11,"clone",R[643],E,2,[[["self"]],[R[655]]]],[11,"clone",R[652],E,5,[[["self"]],[R[657]]]],[11,"clone",E,E,7,[[["self"]],[R[658]]]],[11,"eq",R[643],E,2,[[["self"],[R[655]]],["bool"]]],[11,"ne",E,E,2,[[["self"],[R[655]]],["bool"]]],[11,"drop",R[652],E,12,[[["self"]]]],[11,"drop",E,E,7,[[["self"]]]],[11,"from",R[643],E,2,[[[T]],["self"]]],[11,"from",R[652],E,6,[[[T]],["self"]]],[11,"deref",R[643],E,2,[[["self"]],[T]]],[11,"deref",R[652],E,11,[[["self"]],[T]]],[11,"deref",E,E,12,[[["self"]],[T]]],[11,R[17],R[643],E,2,[[["self"]],[T]]],[11,R[17],R[652],E,12,[[["self"]],[T]]],[11,"hash",R[643],E,2,[[["self"],["__h"]]]],[11,"fmt",R[651],E,0,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[643],E,2,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,3,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[652],E,4,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,5,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,6,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,11,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,12,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,7,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[653],E,8,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,9,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,10,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[652],E,11,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,12,[[["self"],[R[10]]],[R[3]]]]],"p":[[3,R[659]],[8,R[660]],[3,R[661]],[3,"Backoff"],[3,"Parker"],[3,"Unparker"],[3,R[662]],[3,R[663]],[3,"Scope"],[3,R[664]],[3,R[665]],[3,R[666]],[3,R[667]]]};
searchIndex["ctor"]={"doc":"Procedural macro for defining global…","i":[[23,"ctor","ctor","Marks a function or static variable as a…",N,N],[23,"dtor",E,"Marks a function as a library/executable destructor. This…",N,N]],"p":[]};
searchIndex["digest"]={"doc":"This crate provides traits which describe functionality of…","i":[[3,R[1962],"digest","The error type for variable hasher initialization",N,N],[8,"Digest",E,"The `Digest` trait specifies an interface common for…",N,N],[16,"OutputSize",E,E,0,N],[10,"new",E,"Create new hasher instance",0,[[],["self"]]],[10,"input",E,R[1954],0,[[["self"],["asref"]]]],[10,"chain",E,R[1955],0,[[["asref"]],["self"]]],[10,R[3],E,R[1956],0,[[],[[R[1219],["u8"]],["u8"]]]],[10,"result_reset",E,"Retrieve result and reset hasher instance.",0,[[["self"]],[[R[1219],["u8"]],["u8"]]]],[10,"reset",E,"Reset hasher instance to its initial state.",0,[[["self"]]]],[10,R[1958],E,"Get output size of the hasher",0,[[],["usize"]]],[10,"digest",E,"Convenience function to compute hash of the `data`. It…",0,[[],[[R[1219],["u8"]],["u8"]]]],[8,"Input",E,"Trait for processing input data",N,N],[10,"input",E,R[1954],1,[[["self"],["asref"]]]],[11,"chain",E,R[1955],1,[[["asref"]],["self"]]],[8,"BlockInput",E,"Trait to indicate that digest function processes data in…",N,N],[16,"BlockSize",E,E,2,N],[8,R[1959],E,"Trait for returning digest result with the fixed size",N,N],[16,"OutputSize",E,E,3,N],[10,"fixed_result",E,R[1956],3,[[],[[R[1219],["u8"]],["u8"]]]],[8,R[1960],E,"Trait for returning digest result with the variable size",N,N],[10,"new",E,"Create new hasher instance with the given output size.",4,[[["usize"]],[[R[3],[R[1957]]],[R[1957]]]]],[10,R[1958],E,"Get output size of the hasher instance provided to the…",4,[[["self"]],["usize"]]],[10,"variable_result",E,"Retrieve result via closure and consume hasher.",4,[[["fnonce"]]]],[8,"XofReader",E,"Trait for describing readers which are used to extract…",N,N],[10,"read",E,"Read output into the `buffer`. Can be called unlimited…",5,[[["self"]]]],[8,R[1961],E,"Trait which describes extendable-output functions (XOF).",N,N],[16,"Reader",E,E,6,N],[10,"xof_result",E,"Retrieve XOF reader and consume hasher instance.",6,[[]]],[8,"Reset",E,"Trait for resetting hash instances",N,N],[10,"reset",E,"Reset hasher instance to its initial state and return…",7,[[["self"]]]],[14,"impl_write",E,"Implements `std::io::Write` trait for implementer of `Input`",N,N],[11,"from",E,E,8,[[[T]],[T]]],[11,R[4],E,E,8,[[[U]],[R[3]]]],[11,"into",E,E,8,[[],[U]]],[11,R[5],E,E,8,[[],[R[3]]]],[11,R[6],E,E,8,[[["self"]],[T]]],[11,R[7],E,E,8,[[["self"]],[T]]],[11,R[8],E,E,8,[[["self"]],[R[9]]]],[11,"fmt",E,E,8,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,8,[[["self"],[R[10]]],[R[3]]]],[11,"clone",E,E,8,[[["self"]],[R[1957]]]],[11,R[83],E,E,8,[[],[R[1957]]]]],"p":[[8,"Digest"],[8,"Input"],[8,"BlockInput"],[8,R[1959]],[8,R[1960]],[8,"XofReader"],[8,R[1961]],[8,"Reset"],[3,R[1962]]]};
searchIndex["dynasm"]={"doc":E,"i":[[14,"dynasm","dynasm","The whole point",N,N]],"p":[]};
searchIndex["dynasmrt"]={"doc":E,"i":[[3,R[1947],"dynasmrt","A struct representing an offset into the assembling buffer…",N,N],[12,"0",E,E,0,N],[3,R[1953],E,"A dynamic label",N,N],[3,R[1952],E,"A structure holding a buffer of executable memory",N,N],[3,"Executor",E,"A read-only shared reference to the executable buffer…",N,N],[4,R[1948],E,"An error type that is returned from various check and…",N,N],[13,"CheckFailed",E,E,1,N],[0,"common",E,E,N,N],[3,R[1949],R[1936],R[1914],N,N],[11,"new",E,"create a new uncommittedmodifier",2,[[["vec"],[R[1912]]],[R[1916]]]],[11,"goto",E,R[1919],2,[[["self"],[R[1912]]]]],[11,"check",E,R[1920],2,[[["self"],[R[1912]]],[[R[3],[R[1913]]],[R[1913]]]]],[11,R[1921],E,R[1922],2,[[["self"],[R[1912]]],[[R[3],[R[1913]]],[R[1913]]]]],[0,"x64","dynasmrt",E,N,N],[3,R[1950],R[1937],R[1923],N,N],[3,R[1924],E,R[1914],N,N],[11,"new",E,R[1925],3,[[],[[R[3],[R[1918]]],[R[1918]]]]],[11,R[1926],E,R[1927],3,[[["self"]],[R[1915]]]],[11,R[1928],E,R[1929],3,[[["self"],[R[1915]]],[[R[23],[R[1912]]],[R[1912]]]]],[11,"alter",E,R[1930],3,[[["self"],["f"]],["o"]]],[11,R[1931],E,R[1932],3,[[["self"]],[R[1916]]]],[11,"commit",E,R[1933],3,[[["self"]]]],[11,R[5543],E,R[1934],3,[[],[[R[1917]],[R[3],[R[1917],R[1918]]],[R[1918]]]]],[11,"reader",E,R[1935],3,[[["self"]],["executor"]]],[11,"goto",E,R[1919],4,[[["self"],[R[1912]]]]],[11,"check",E,R[1920],4,[[["self"],[R[1912]]],[[R[3],[R[1913]]],[R[1913]]]]],[11,R[1921],E,R[1922],4,[[["self"],[R[1912]]],[[R[3],[R[1913]]],[R[1913]]]]],[0,"x86","dynasmrt",E,N,N],[3,R[1950],R[1938],R[1923],N,N],[3,R[1924],E,R[1914],N,N],[11,"new",E,R[1925],5,[[],[[R[1918]],[R[3],[R[1918]]]]]],[11,R[1926],E,R[1927],5,[[["self"]],[R[1915]]]],[11,R[1928],E,R[1929],5,[[["self"],[R[1915]]],[[R[23],[R[1912]]],[R[1912]]]]],[11,"alter",E,R[1930],5,[[["self"],["f"]],["o"]]],[11,R[1931],E,R[1932],5,[[["self"]],[R[1916]]]],[11,"commit",E,R[1933],5,[[["self"]]]],[11,R[5543],E,R[1934],5,[[],[[R[1917]],[R[3],[R[1917],R[1918]]],[R[1918]]]]],[11,"reader",E,R[1935],5,[[["self"]],["executor"]]],[11,"goto",E,R[1919],6,[[["self"],[R[1912]]]]],[11,"check",E,R[1920],6,[[["self"],[R[1912]]],[[R[3],[R[1913]]],[R[1913]]]]],[11,R[1921],E,R[1922],6,[[["self"],[R[1912]]],[[R[3],[R[1913]]],[R[1913]]]]],[8,"DynasmApi","dynasmrt","This trait represents the interface that must be…",N,N],[10,"offset",E,"Report the current offset into the assembling target",7,[[["self"]],[R[1912]]]],[10,"push",E,"Push a byte into the assembling target",7,[[["self"],["u8"]]]],[11,"push_i8",E,"Push a signed byte into the assembling target",7,[[["self"],["i8"]]]],[11,"push_i16",E,"Push a signed word into the assembling target",7,[[["self"],["i16"]]]],[11,"push_i32",E,"Push a signed doubleword into the assembling target",7,[[["self"],["i32"]]]],[11,"push_i64",E,"Push a signed quadword into the assembling target",7,[[["self"],["i64"]]]],[11,"push_u16",E,"Push an usigned word into the assembling target",7,[[["self"],["u16"]]]],[11,"push_u32",E,"Push an usigned doubleword into the assembling target",7,[[["self"],["u32"]]]],[11,"push_u64",E,"Push an usigned quadword into the assembling target",7,[[["self"],["u64"]]]],[11,"runtime_error",E,"This function is called in when a runtime error has to be…",7,[[["self"],["str"]]]],[8,R[1951],E,"This trait extends DynasmApi to not only allow assembling,…",N,N],[16,R[4339],E,E,8,N],[10,"align",E,"Push nops until the assembling target end is aligned to…",8,[[["self"],["usize"]]]],[10,R[1943],E,"Record the definition of a local label",8,[[["self"],["str"]]]],[10,R[1939],E,"Record the definition of a global label",8,[[["self"],["str"]]]],[10,R[1941],E,"Record the definition of a dynamic label",8,[[["self"],[R[1915]]]]],[10,R[1944],E,"Record a relocation spot for a forward reference to a…",8,[[["self"],["str"]]]],[10,R[1945],E,"Record a relocation spot for a backward reference to a…",8,[[["self"],["str"]]]],[10,R[1940],E,"Record a relocation spot for a reference to a global label",8,[[["self"],["str"]]]],[10,R[1942],E,"Record a relocation spot for a reference to a dynamic label",8,[[["self"],[R[1915]]]]],[10,R[1946],E,"Record a relocation spot to an arbitrary target",8,[[["self"],["usize"]]]],[11,"ptr",E,"Obtain a pointer into the executable memory from an offset…",9,[[["self"],[R[1912]]]]],[11,"lock",E,"Gain read-access to the internal `ExecutableBuffer`. While…",10,[[["self"]],[[R[1917]],[R[547],[R[1917]]]]]],[14,"Pointer",E,"This macro takes a *const pointer from the source operand,…",N,N],[14,"MutPointer",E,"Preforms the same action as the `Pointer!` macro, but…",N,N],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[46],E,E,0,[[["self"]],[T]]],[11,R[47],E,E,0,[[["self"],[T]]]],[11,R[4],E,E,0,[[[U]],[R[3]]]],[11,R[5],E,E,0,[[],[R[3]]]],[11,R[7],E,E,0,[[["self"]],[T]]],[11,R[6],E,E,0,[[["self"]],[T]]],[11,R[8],E,E,0,[[["self"]],[R[9]]]],[11,"into",E,E,11,[[],[U]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[46],E,E,11,[[["self"]],[T]]],[11,R[47],E,E,11,[[["self"],[T]]]],[11,R[4],E,E,11,[[[U]],[R[3]]]],[11,R[5],E,E,11,[[],[R[3]]]],[11,R[7],E,E,11,[[["self"]],[T]]],[11,R[6],E,E,11,[[["self"]],[T]]],[11,R[8],E,E,11,[[["self"]],[R[9]]]],[11,"into",E,E,9,[[],[U]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[4],E,E,9,[[[U]],[R[3]]]],[11,R[5],E,E,9,[[],[R[3]]]],[11,R[7],E,E,9,[[["self"]],[T]]],[11,R[6],E,E,9,[[["self"]],[T]]],[11,R[8],E,E,9,[[["self"]],[R[9]]]],[11,"into",E,E,10,[[],[U]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[46],E,E,10,[[["self"]],[T]]],[11,R[47],E,E,10,[[["self"],[T]]]],[11,R[4],E,E,10,[[[U]],[R[3]]]],[11,R[5],E,E,10,[[],[R[3]]]],[11,R[7],E,E,10,[[["self"]],[T]]],[11,R[6],E,E,10,[[["self"]],[T]]],[11,R[8],E,E,10,[[["self"]],[R[9]]]],[11,"into",E,E,1,[[],[U]]],[11,R[113],E,E,1,[[["self"]],["string"]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[46],E,E,1,[[["self"]],[T]]],[11,R[47],E,E,1,[[["self"],[T]]]],[11,R[4],E,E,1,[[[U]],[R[3]]]],[11,R[5],E,E,1,[[],[R[3]]]],[11,R[7],E,E,1,[[["self"]],[T]]],[11,R[6],E,E,1,[[["self"]],[T]]],[11,R[8],E,E,1,[[["self"]],[R[9]]]],[11,"into",R[1936],E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[4],E,E,2,[[[U]],[R[3]]]],[11,R[5],E,E,2,[[],[R[3]]]],[11,R[7],E,E,2,[[["self"]],[T]]],[11,R[6],E,E,2,[[["self"]],[T]]],[11,R[8],E,E,2,[[["self"]],[R[9]]]],[11,"into",R[1937],E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[4],E,E,3,[[[U]],[R[3]]]],[11,R[5],E,E,3,[[],[R[3]]]],[11,R[7],E,E,3,[[["self"]],[T]]],[11,R[6],E,E,3,[[["self"]],[T]]],[11,R[8],E,E,3,[[["self"]],[R[9]]]],[11,"into",E,E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[4],E,E,4,[[[U]],[R[3]]]],[11,R[5],E,E,4,[[],[R[3]]]],[11,R[7],E,E,4,[[["self"]],[T]]],[11,R[6],E,E,4,[[["self"]],[T]]],[11,R[8],E,E,4,[[["self"]],[R[9]]]],[11,"into",R[1938],E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[4],E,E,5,[[[U]],[R[3]]]],[11,R[5],E,E,5,[[],[R[3]]]],[11,R[7],E,E,5,[[["self"]],[T]]],[11,R[6],E,E,5,[[["self"]],[T]]],[11,R[8],E,E,5,[[["self"]],[R[9]]]],[11,"into",E,E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[4],E,E,6,[[[U]],[R[3]]]],[11,R[5],E,E,6,[[],[R[3]]]],[11,R[7],E,E,6,[[["self"]],[T]]],[11,R[6],E,E,6,[[["self"]],[T]]],[11,R[8],E,E,6,[[["self"]],[R[9]]]],[11,"offset",R[1936],E,2,[[["self"]],[R[1912]]]],[11,"push",E,E,2,[[["self"],["u8"]]]],[11,"offset",R[1937],E,3,[[["self"]],[R[1912]]]],[11,"push",E,E,3,[[["self"],["u8"]]]],[11,"offset",E,E,4,[[["self"]],[R[1912]]]],[11,"push",E,E,4,[[["self"],["u8"]]]],[11,"offset",R[1938],E,5,[[["self"]],[R[1912]]]],[11,"push",E,E,5,[[["self"],["u8"]]]],[11,"offset",E,E,6,[[["self"]],[R[1912]]]],[11,"push",E,E,6,[[["self"],["u8"]]]],[11,"align",R[1937],E,3,[[["self"],["usize"]]]],[11,R[1939],E,E,3,[[["self"],["str"]]]],[11,R[1940],E,E,3,[[["self"],["str"]]]],[11,R[1941],E,E,3,[[["self"],[R[1915]]]]],[11,R[1942],E,E,3,[[["self"],[R[1915]]]]],[11,R[1943],E,E,3,[[["self"],["str"]]]],[11,R[1944],E,E,3,[[["self"],["str"]]]],[11,R[1945],E,E,3,[[["self"],["str"]]]],[11,R[1946],E,E,3,[[["self"],["usize"]]]],[11,"align",E,E,4,[[["self"],["usize"]]]],[11,R[1939],E,E,4,[[["self"],["str"]]]],[11,R[1940],E,E,4,[[["self"],["str"]]]],[11,R[1941],E,E,4,[[["self"],[R[1915]]]]],[11,R[1942],E,E,4,[[["self"],[R[1915]]]]],[11,R[1943],E,E,4,[[["self"],["str"]]]],[11,R[1944],E,E,4,[[["self"],["str"]]]],[11,R[1945],E,E,4,[[["self"],["str"]]]],[11,R[1946],E,E,4,[[["self"],["usize"]]]],[11,"align",R[1938],E,5,[[["self"],["usize"]]]],[11,R[1939],E,E,5,[[["self"],["str"]]]],[11,R[1940],E,E,5,[[["self"],["str"]]]],[11,R[1941],E,E,5,[[["self"],[R[1915]]]]],[11,R[1942],E,E,5,[[["self"],[R[1915]]]]],[11,R[1943],E,E,5,[[["self"],["str"]]]],[11,R[1944],E,E,5,[[["self"],["str"]]]],[11,R[1945],E,E,5,[[["self"],["str"]]]],[11,R[1946],E,E,5,[[["self"],["usize"]]]],[11,"align",E,E,6,[[["self"],["usize"]]]],[11,R[1939],E,E,6,[[["self"],["str"]]]],[11,R[1940],E,E,6,[[["self"],["str"]]]],[11,R[1941],E,E,6,[[["self"],[R[1915]]]]],[11,R[1942],E,E,6,[[["self"],[R[1915]]]]],[11,R[1943],E,E,6,[[["self"],["str"]]]],[11,R[1944],E,E,6,[[["self"],["str"]]]],[11,R[1945],E,E,6,[[["self"],["str"]]]],[11,R[1946],E,E,6,[[["self"],["usize"]]]],[11,"extend",R[1936],E,2,[[["self"],[T]]]],[11,"extend",E,E,2,[[["self"],[T]]]],[11,"extend",R[1937],E,3,[[["self"],[T]]]],[11,"extend",E,E,3,[[["self"],[T]]]],[11,"extend",E,E,4,[[["self"],[T]]]],[11,"extend",E,E,4,[[["self"],[T]]]],[11,"extend",R[1938],E,5,[[["self"],[T]]]],[11,"extend",E,E,5,[[["self"],[T]]]],[11,"extend",E,E,6,[[["self"],[T]]]],[11,"extend",E,E,6,[[["self"],[T]]]],[11,"clone","dynasmrt",E,0,[[["self"]],[R[1912]]]],[11,"clone",E,E,11,[[["self"]],[R[1915]]]],[11,"clone",E,E,10,[[["self"]],["executor"]]],[11,"clone",E,E,1,[[["self"]],[R[1913]]]],[11,R[77],E,E,0,[[["self"],[R[1912]]],[[R[50]],[R[23],[R[50]]]]]],[11,"lt",E,E,0,[[["self"],[R[1912]]],["bool"]]],[11,"le",E,E,0,[[["self"],[R[1912]]],["bool"]]],[11,"gt",E,E,0,[[["self"],[R[1912]]],["bool"]]],[11,"ge",E,E,0,[[["self"],[R[1912]]],["bool"]]],[11,"cmp",E,E,0,[[["self"],[R[1912]]],[R[50]]]],[11,"eq",E,E,0,[[["self"],[R[1912]]],["bool"]]],[11,"ne",E,E,0,[[["self"],[R[1912]]],["bool"]]],[11,"eq",E,E,11,[[["self"],[R[1915]]],["bool"]]],[11,"ne",E,E,11,[[["self"],[R[1915]]],["bool"]]],[11,"deref",E,E,9,[[["self"]]]],[11,"hash",E,E,0,[[["self"],["__h"]]]],[11,"hash",E,E,11,[[["self"],["__h"]]]],[11,"fmt",R[1937],E,3,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[1938],E,5,[[["self"],[R[10]]],[R[3]]]],[11,"fmt","dynasmrt",E,0,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,11,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,9,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,10,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,1,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,1,[[["self"],[R[10]]],[R[3]]]],[11,R[157],E,E,1,[[["self"]],["str"]]]],"p":[[3,R[1947]],[4,R[1948]],[3,R[1949]],[3,R[1950]],[3,R[1924]],[3,R[1950]],[3,R[1924]],[8,"DynasmApi"],[8,R[1951]],[3,R[1952]],[3,"Executor"],[3,R[1953]]]};
searchIndex["either"]={"doc":"The enum [`Either`] with variants `Left` and `Right` is a…","i":[[4,"Either","either",R[3336],N,N],[13,"Left",E,R[3337],0,N],[13,"Right",E,R[3338],0,N],[11,"is_left",E,R[3388],0,[[["self"]],["bool"]]],[11,"is_right",E,R[3389],0,[[["self"]],["bool"]]],[11,"left",E,R[3390],0,[[],[R[23]]]],[11,"right",E,R[3391],0,[[],[R[23]]]],[11,"as_ref",E,R[3392],0,[[["self"]],[["r"],["either"],["l"]]]],[11,"as_mut",E,R[3393],0,[[["self"]],[["r"],["l"],["either"]]]],[11,"flip",E,R[3394],0,[[],["either"]]],[11,"map_left",E,R[164],0,[[["f"]],["either"]]],[11,"map_right",E,R[165],0,[[["f"]],["either"]]],[11,"either",E,R[3395],0,[[["f"],["g"]],[T]]],[11,R[3396],E,R[3397],0,[[["ctx"],["f"],["g"]],[T]]],[11,R[3398],E,R[164],0,[[["f"]],["either"]]],[11,R[3399],E,R[165],0,[[["f"]],["either"]]],[11,R[45],E,R[3400],0,[[],["either"]]],[11,"left_or",E,R[3401],0,[[["l"]],["l"]]],[11,R[3402],E,R[3403],0,[[],["l"]]],[11,R[3404],E,R[166],0,[[["f"]],["l"]]],[11,"right_or",E,R[3405],0,[[["r"]],["r"]]],[11,R[3406],E,R[3407],0,[[],["r"]]],[11,R[3408],E,R[166],0,[[["f"]],["r"]]],[11,R[3409],E,R[167],0,[[]]],[11,R[3410],E,R[167],0,[[]]],[11,R[15],E,R[3411],0,[[],[T]]],[14,"try_left",E,"Macro for unwrapping the left side of an `Either`, which…",N,N],[14,"try_right",E,"Dual to `try_left!`, see its documentation for more…",N,N],[11,"from",E,E,0,[[[T]],[T]]],[11,R[4],E,E,0,[[[U]],[R[3]]]],[11,R[45],E,E,0,[[],["i"]]],[11,"into",E,E,0,[[],[U]]],[11,R[5],E,E,0,[[],[R[3]]]],[11,R[6],E,E,0,[[["self"]],[T]]],[11,R[7],E,E,0,[[["self"]],[T]]],[11,R[8],E,E,0,[[["self"]],[R[9]]]],[11,"deref",E,E,0,[[["self"]]]],[11,R[17],E,E,0,[[["self"]]]],[11,"from",E,E,0,[[[R[3]]],["self"]]],[11,"eq",E,E,0,[[["self"],["either"]],["bool"]]],[11,"ne",E,E,0,[[["self"],["either"]],["bool"]]],[11,"cmp",E,E,0,[[["self"],["either"]],[R[50]]]],[11,R[77],E,E,0,[[["self"],["either"]],[[R[23],[R[50]]],[R[50]]]]],[11,"lt",E,E,0,[[["self"],["either"]],["bool"]]],[11,"le",E,E,0,[[["self"],["either"]],["bool"]]],[11,"gt",E,E,0,[[["self"],["either"]],["bool"]]],[11,"ge",E,E,0,[[["self"],["either"]],["bool"]]],[11,"hash",E,E,0,[[["self"],["__h"]]]],[11,"fmt",E,E,0,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,0,[[["self"],[R[10]]],[R[3]]]],[11,"extend",E,E,0,[[["self"],[T]]]],[11,R[52],E,E,0,[[["self"]],[R[23]]]],[11,"next",E,E,0,[[["self"]],[R[23]]]],[11,R[53],E,E,0,[[["self"]]]],[11,"fold",E,E,0,[[["acc"],["g"]],["acc"]]],[11,"count",E,E,0,[[],["usize"]]],[11,"last",E,E,0,[[],[R[23]]]],[11,"nth",E,E,0,[[["self"],["usize"]],[R[23]]]],[11,"collect",E,E,0,[[],["b"]]],[11,"all",E,E,0,[[["self"],["f"]],["bool"]]],[11,"as_ref",E,E,0,[[["self"]],["target"]]],[11,"as_ref",E,E,0,[[["self"]],["str"]]],[11,"as_ref",E,E,0,[[["self"]]]],[11,"as_mut",E,E,0,[[["self"]],["str"]]],[11,"as_mut",E,E,0,[[["self"]],["target"]]],[11,"as_mut",E,E,0,[[["self"]]]],[11,"into",E,E,0,[[],[R[3]]]],[11,"clone",E,E,0,[[["self"]],["either"]]]],"p":[[4,"Either"]]};
searchIndex["enum_methods"]={"doc":"enum-methods","i":[],"p":[]};
searchIndex["erased_serde"]={"doc":"This crate provides type-erased versions of Serde's…","i":[[3,"Error","erased_serde","Error when a `Serializer` or `Deserializer` trait object…",N,N],[5,R[4354],E,"Deserialize a value of type `T` from the given trait object.",N,[[[R[4569]]],[[R[3],["error"]],["error"]]]],[5,R[4563],E,"Serialize the given type-erased serializable value.",N,[[["s"],[T]],[R[3]]]],[6,"Result",E,"Result type alias where the error is `erased_serde::Error`.",N,N],[8,R[4365],E,"An object-safe equivalent of Serde's `Deserializer` trait.",N,N],[10,"erased_deserialize_any",E,E,0,[[["self"],["visitor"]],[[R[3],["out","error"]],["out"],["error"]]]],[10,"erased_deserialize_bool",E,E,0,[[["self"],["visitor"]],[[R[3],["out","error"]],["out"],["error"]]]],[10,"erased_deserialize_u8",E,E,0,[[["self"],["visitor"]],[[R[3],["out","error"]],["out"],["error"]]]],[10,"erased_deserialize_u16",E,E,0,[[["self"],["visitor"]],[[R[3],["out","error"]],["out"],["error"]]]],[10,"erased_deserialize_u32",E,E,0,[[["self"],["visitor"]],[[R[3],["out","error"]],["out"],["error"]]]],[10,"erased_deserialize_u64",E,E,0,[[["self"],["visitor"]],[[R[3],["out","error"]],["out"],["error"]]]],[10,"erased_deserialize_i8",E,E,0,[[["self"],["visitor"]],[[R[3],["out","error"]],["out"],["error"]]]],[10,"erased_deserialize_i16",E,E,0,[[["self"],["visitor"]],[[R[3],["out","error"]],["out"],["error"]]]],[10,"erased_deserialize_i32",E,E,0,[[["self"],["visitor"]],[[R[3],["out","error"]],["out"],["error"]]]],[10,"erased_deserialize_i64",E,E,0,[[["self"],["visitor"]],[[R[3],["out","error"]],["out"],["error"]]]],[10,"erased_deserialize_i128",E,E,0,[[["self"],["visitor"]],[[R[3],["out","error"]],["out"],["error"]]]],[10,"erased_deserialize_u128",E,E,0,[[["self"],["visitor"]],[[R[3],["out","error"]],["out"],["error"]]]],[10,"erased_deserialize_f32",E,E,0,[[["self"],["visitor"]],[[R[3],["out","error"]],["out"],["error"]]]],[10,"erased_deserialize_f64",E,E,0,[[["self"],["visitor"]],[[R[3],["out","error"]],["out"],["error"]]]],[10,"erased_deserialize_char",E,E,0,[[["self"],["visitor"]],[[R[3],["out","error"]],["out"],["error"]]]],[10,"erased_deserialize_str",E,E,0,[[["self"],["visitor"]],[[R[3],["out","error"]],["out"],["error"]]]],[10,"erased_deserialize_string",E,E,0,[[["self"],["visitor"]],[[R[3],["out","error"]],["out"],["error"]]]],[10,"erased_deserialize_bytes",E,E,0,[[["self"],["visitor"]],[[R[3],["out","error"]],["out"],["error"]]]],[10,"erased_deserialize_byte_buf",E,E,0,[[["self"],["visitor"]],[[R[3],["out","error"]],["out"],["error"]]]],[10,"erased_deserialize_option",E,E,0,[[["self"],["visitor"]],[[R[3],["out","error"]],["out"],["error"]]]],[10,"erased_deserialize_unit",E,E,0,[[["self"],["visitor"]],[[R[3],["out","error"]],["out"],["error"]]]],[10,"erased_deserialize_unit_struct",E,E,0,[[["self"],["visitor"],["str"]],[[R[3],["out","error"]],["out"],["error"]]]],[10,"erased_deserialize_newtype_struct",E,E,0,[[["self"],["visitor"],["str"]],[[R[3],["out","error"]],["out"],["error"]]]],[10,"erased_deserialize_seq",E,E,0,[[["self"],["visitor"]],[[R[3],["out","error"]],["out"],["error"]]]],[10,"erased_deserialize_tuple",E,E,0,[[["self"],["usize"],["visitor"]],[[R[3],["out","error"]],["out"],["error"]]]],[10,"erased_deserialize_tuple_struct",E,E,0,[[["self"],["usize"],["visitor"],["str"]],[[R[3],["out","error"]],["out"],["error"]]]],[10,"erased_deserialize_map",E,E,0,[[["self"],["visitor"]],[[R[3],["out","error"]],["out"],["error"]]]],[10,"erased_deserialize_struct",E,E,0,[[["self"],["visitor"],["str"]],[[R[3],["out","error"]],["out"],["error"]]]],[10,"erased_deserialize_identifier",E,E,0,[[["self"],["visitor"]],[[R[3],["out","error"]],["out"],["error"]]]],[10,"erased_deserialize_enum",E,E,0,[[["self"],["visitor"],["str"]],[[R[3],["out","error"]],["out"],["error"]]]],[10,"erased_deserialize_ignored_any",E,E,0,[[["self"],["visitor"]],[[R[3],["out","error"]],["out"],["error"]]]],[10,R[4568],E,E,0,[[["self"]],["bool"]]],[8,R[4562],E,"An object-safe equivalent of Serde's `Serialize` trait.",N,N],[10,R[5474],E,E,1,[[["self"],[R[5475]]],[["ok"],["error"],[R[3],["ok","error"]]]]],[8,R[4541],E,"An object-safe equivalent of Serde's `Serializer` trait.",N,N],[10,"erased_serialize_bool",E,E,2,[[["self"],["bool"]],[["ok"],["error"],[R[3],["ok","error"]]]]],[10,"erased_serialize_i8",E,E,2,[[["self"],["i8"]],[["ok"],["error"],[R[3],["ok","error"]]]]],[10,"erased_serialize_i16",E,E,2,[[["self"],["i16"]],[["ok"],["error"],[R[3],["ok","error"]]]]],[10,"erased_serialize_i32",E,E,2,[[["self"],["i32"]],[["ok"],["error"],[R[3],["ok","error"]]]]],[10,"erased_serialize_i64",E,E,2,[[["self"],["i64"]],[["ok"],["error"],[R[3],["ok","error"]]]]],[10,"erased_serialize_u8",E,E,2,[[["self"],["u8"]],[["ok"],["error"],[R[3],["ok","error"]]]]],[10,"erased_serialize_u16",E,E,2,[[["self"],["u16"]],[["ok"],["error"],[R[3],["ok","error"]]]]],[10,"erased_serialize_u32",E,E,2,[[["self"],["u32"]],[["ok"],["error"],[R[3],["ok","error"]]]]],[10,"erased_serialize_u64",E,E,2,[[["self"],["u64"]],[["ok"],["error"],[R[3],["ok","error"]]]]],[10,"erased_serialize_i128",E,E,2,[[["self"],["i128"]],[["ok"],["error"],[R[3],["ok","error"]]]]],[10,"erased_serialize_u128",E,E,2,[[["self"],["u128"]],[["ok"],["error"],[R[3],["ok","error"]]]]],[10,"erased_serialize_f32",E,E,2,[[["self"],["f32"]],[["ok"],["error"],[R[3],["ok","error"]]]]],[10,"erased_serialize_f64",E,E,2,[[["self"],["f64"]],[["ok"],["error"],[R[3],["ok","error"]]]]],[10,"erased_serialize_char",E,E,2,[[["self"],["char"]],[["ok"],["error"],[R[3],["ok","error"]]]]],[10,"erased_serialize_str",E,E,2,[[["self"],["str"]],[["ok"],["error"],[R[3],["ok","error"]]]]],[10,"erased_serialize_bytes",E,E,2,[[["self"]],[["ok"],["error"],[R[3],["ok","error"]]]]],[10,"erased_serialize_none",E,E,2,[[["self"]],[["ok"],["error"],[R[3],["ok","error"]]]]],[10,"erased_serialize_some",E,E,2,[[["self"],[R[4563]]],[["ok"],["error"],[R[3],["ok","error"]]]]],[10,"erased_serialize_unit",E,E,2,[[["self"]],[["ok"],["error"],[R[3],["ok","error"]]]]],[10,"erased_serialize_unit_struct",E,E,2,[[["self"],["str"]],[["ok"],["error"],[R[3],["ok","error"]]]]],[10,"erased_serialize_unit_variant",E,E,2,[[["self"],["u32"],["str"]],[["ok"],["error"],[R[3],["ok","error"]]]]],[10,"erased_serialize_newtype_struct",E,E,2,[[["self"],[R[4563]],["str"]],[["ok"],["error"],[R[3],["ok","error"]]]]],[10,"erased_serialize_newtype_variant",E,E,2,[[["self"],["u32"],[R[4563]],["str"]],[["ok"],["error"],[R[3],["ok","error"]]]]],[10,"erased_serialize_seq",E,E,2,[[["self"],[R[23],["usize"]],["usize"]],[[R[3],["seq","error"]],["error"],["seq"]]]],[10,"erased_serialize_tuple",E,E,2,[[["self"],["usize"]],[[R[3],["tuple","error"]],["error"],["tuple"]]]],[10,"erased_serialize_tuple_struct",E,E,2,[[["self"],["usize"],["str"]],[[R[3],[R[4565],"error"]],["error"],[R[4565]]]]],[10,"erased_serialize_tuple_variant",E,E,2,[[["self"],["u32"],["usize"],["str"]],[[R[3],[R[4566],"error"]],[R[4566]],["error"]]]],[10,"erased_serialize_map",E,E,2,[[["self"],[R[23],["usize"]],["usize"]],[[R[3],["map","error"]],["map"],["error"]]]],[10,"erased_serialize_struct",E,E,2,[[["self"],["usize"],["str"]],[["struct"],["error"],[R[3],["struct","error"]]]]],[10,"erased_serialize_struct_variant",E,E,2,[[["self"],["u32"],["usize"],["str"]],[[R[3],[R[4567],"error"]],["error"],[R[4567]]]]],[10,R[4568],E,E,2,[[["self"]],["bool"]]],[14,"serialize_trait_object",E,"Implement `serde::Serialize` for a trait object that has…",N,N],[11,"into",E,E,3,[[],[U]]],[11,R[113],E,E,3,[[["self"]],["string"]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[4],E,E,3,[[[U]],[R[3]]]],[11,R[5],E,E,3,[[],[R[3]]]],[11,R[7],E,E,3,[[["self"]],[T]]],[11,R[6],E,E,3,[[["self"]],[T]]],[11,R[8],E,E,3,[[["self"]],[R[9]]]],[11,"fmt",E,E,3,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,3,[[["self"],[R[10]]],[R[3]]]],[11,R[157],E,E,3,[[["self"]],["str"]]],[11,R[4563],E,E,1,[[["self"],["s"]],[R[3]]]],[11,R[4563],E,E,1,[[["self"],["s"]],[R[3]]]],[11,R[4563],E,E,1,[[["self"],["s"]],[R[3]]]],[11,R[4563],E,E,1,[[["self"],["s"]],[R[3]]]],[11,"custom",E,E,3,[[["display"]],["self"]]],[11,"custom",E,E,3,[[["display"]],["self"]]],[11,"erase",E,"Convert any Serde `Deserializer` to a trait object.",0,[[["d"]],[R[4569]]]],[11,"erase",E,"Convert any Serde `Serializer` to a trait object.",2,[[["s"]],[R[5475]]]]],"p":[[8,R[4365]],[8,R[4562]],[8,R[4541]],[3,"Error"]]};
searchIndex["errno"]={"doc":"Cross-platform interface to the `errno` variable.","i":[[3,"Errno","errno","Wraps a platform-specific error code.",N,N],[12,"0",E,E,0,N],[5,"errno",E,"Returns the platform-specific value of `errno`.",N,[[],["errno"]]],[5,"set_errno",E,"Sets the platform-specific value of `errno`.",N,[[["errno"]]]],[11,"into",E,E,0,[[],[U]]],[11,R[113],E,E,0,[[["self"]],["string"]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[46],E,E,0,[[["self"]],[T]]],[11,R[47],E,E,0,[[["self"],[T]]]],[11,R[4],E,E,0,[[[U]],[R[3]]]],[11,R[5],E,E,0,[[],[R[3]]]],[11,R[7],E,E,0,[[["self"]],[T]]],[11,R[6],E,E,0,[[["self"]],[T]]],[11,R[8],E,E,0,[[["self"]],[R[9]]]],[11,"clone",E,E,0,[[["self"]],["errno"]]],[11,"into",E,E,0,[[],["i32"]]],[11,R[77],E,E,0,[[["self"],["errno"]],[[R[50]],[R[23],[R[50]]]]]],[11,"lt",E,E,0,[[["self"],["errno"]],["bool"]]],[11,"le",E,E,0,[[["self"],["errno"]],["bool"]]],[11,"gt",E,E,0,[[["self"],["errno"]],["bool"]]],[11,"ge",E,E,0,[[["self"],["errno"]],["bool"]]],[11,"cmp",E,E,0,[[["self"],["errno"]],[R[50]]]],[11,"eq",E,E,0,[[["self"],["errno"]],["bool"]]],[11,"ne",E,E,0,[[["self"],["errno"]],["bool"]]],[11,"hash",E,E,0,[[["self"],["__h"]]]],[11,"fmt",E,E,0,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,0,[[["self"],[R[10]]],[R[3]]]]],"p":[[3,"Errno"]]};
searchIndex["failure"]={"doc":"An experimental new error-handling library. Guide-style…","i":[[3,R[3512],"failure","A `Backtrace`.",N,N],[3,"Compat",E,"A compatibility wrapper around an error type from this…",N,N],[3,"Context",E,"An error with context around it.",N,N],[3,R[3513],E,"Wrapper for `std` errors to make them `Sync`.",N,N],[3,"Error",E,"The `Error` type, which can contain any failure.",N,N],[3,"Causes",E,"A iterator over the causes of a `Fail`",N,N],[5,"err_msg",E,"Constructs a `Fail` type from a string.",N,[[["display"],["send"],["debug"],["sync"]],["error"]]],[11,"new",E,"Constructs a new backtrace. This will only create a real…",0,[[],[R[1705]]]],[11,R[15],E,"Unwraps this into the inner error.",1,[[],["e"]]],[11,"get_ref",E,"Gets a reference to the inner error.",1,[[["self"]],["e"]]],[11,"new",E,"Creates a new context without an underlying error message.",2,[[["d"]],["context"]]],[11,R[4752],E,"Returns a reference to the context provided with this error.",2,[[["self"]],["d"]]],[11,"map",E,"Maps `Context<D>` to `Context<T>` by applying a function…",2,[[["f"]],["context"]]],[11,"new",E,"Wraps a non-`Sync` `Error` in order to make it implement…",3,[[["e"]],["self"]]],[11,"from_boxed_compat",E,"Creates an `Error` from `Box<std::error::Error>`.",4,[[["box",["stderror"]],["stderror"]],["error"]]],[11,"as_fail",E,"Return a reference to the underlying failure that this…",4,[[["self"]],["fail"]]],[11,"name",E,"Returns the name of the underlying fail.",4,[[["self"]],[["str"],[R[23],["str"]]]]],[11,"cause",E,R[3504],4,[[["self"]],["fail"]]],[11,R[1705],E,"Gets a reference to the `Backtrace` for this `Error`.",4,[[["self"]],[R[1705]]]],[11,"context",E,"Provides context for this `Error`.",4,[[["display"],["sync"],["send"]],[["context"],["display"],["send"],["sync"]]]],[11,"compat",E,"Wraps `Error` in a compatibility type.",4,[[],[["compat",["error"]],["error"]]]],[11,"downcast",E,R[3503],4,[[],[[R[3],["error"]],["fail"],["error"]]]],[11,R[3508],E,"Returns the \"root cause\" of this error - the last value in…",4,[[["self"]],["fail"]]],[11,R[3509],E,"Returns a iterator over the causes of this error with the…",4,[[["self"]],["causes"]]],[11,"iter_chain",E,R[3510],4,[[["self"]],["causes"]]],[11,R[3505],E,R[3503],4,[[["self"]],[[T],[R[23]]]]],[11,R[3506],E,R[3503],4,[[["self"]],[[R[23]],[T]]]],[11,"root_cause",E,R[3511],4,[[["self"]],["fail"]]],[11,"causes",E,"Deprecated alias to `iter_causes`.",4,[[["self"]],["causes"]]],[6,"Fallible",E,"A common result with an `Error`.",N,N],[8,"AsFail",E,"The `AsFail` trait",N,N],[10,"as_fail",E,"Converts a reference to `Self` into a dynamic trait object…",5,[[["self"]],["fail"]]],[8,"ResultExt",E,"Extension methods for `Result`.",N,N],[10,"compat",E,"Wraps the error in `Compat` to make it compatible with…",6,[[],[[R[3],["compat"]],["compat"]]]],[10,"context",E,"Wraps the error type in a context type.",6,[[["d"]],[["context"],[R[3],["context"]]]]],[10,"with_context",E,"Wraps the error type in a context type generated by…",6,[[["f"]],[["context"],[R[3],["context"]]]]],[8,"Fail",E,"The `Fail` trait.",N,N],[11,"name",E,"Returns the \"name\" of the error.",7,[[["self"]],[["str"],[R[23],["str"]]]]],[11,"cause",E,R[3504],7,[[["self"]],[[R[23],["fail"]],["fail"]]]],[11,R[1705],E,"Returns a reference to the `Backtrace` carried by this…",7,[[["self"]],[[R[23],[R[1705]]],[R[1705]]]]],[11,"context",E,"Provides context for this failure.",7,[[["d"]],["context"]]],[11,"compat",E,"Wraps this failure in a compatibility wrapper that…",7,[[],["compat"]]],[11,R[3505],E,R[3507],7,[[["self"]],[[T],[R[23]]]]],[11,R[3506],E,R[3507],7,[[["self"]],[[R[23]],[T]]]],[11,R[3508],E,"Returns the \"root cause\" of this `Fail` - the last value…",7,[[["self"]],["fail"]]],[11,R[3509],E,"Returns a iterator over the causes of this `Fail` with the…",7,[[["self"]],["causes"]]],[11,"iter_chain",E,R[3510],7,[[["self"]],["causes"]]],[11,"root_cause",E,R[3511],7,[[["self"]],["fail"]]],[11,"causes",E,"Deprecated alias to `iter_chain`.",7,[[["self"]],["causes"]]],[14,"bail",E,"Exits a function early with an `Error`.",N,N],[14,"ensure",E,"Exits a function early with an `Error` if the condition is…",N,N],[14,"format_err",E,"Constructs an `Error` using the standard string…",N,N],[11,"into",E,E,0,[[],[U]]],[11,R[113],E,E,0,[[["self"]],["string"]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[4],E,E,0,[[[U]],[R[3]]]],[11,R[5],E,E,0,[[],[R[3]]]],[11,R[7],E,E,0,[[["self"]],[T]]],[11,R[6],E,E,0,[[["self"]],[T]]],[11,R[8],E,E,0,[[["self"]],[R[9]]]],[11,"into",E,E,1,[[],[U]]],[11,R[113],E,E,1,[[["self"]],["string"]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[46],E,E,1,[[["self"]],[T]]],[11,R[47],E,E,1,[[["self"],[T]]]],[11,R[4],E,E,1,[[[U]],[R[3]]]],[11,R[5],E,E,1,[[],[R[3]]]],[11,R[7],E,E,1,[[["self"]],[T]]],[11,R[6],E,E,1,[[["self"]],[T]]],[11,R[8],E,E,1,[[["self"]],[R[9]]]],[11,"into",E,E,2,[[],[U]]],[11,R[113],E,E,2,[[["self"]],["string"]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[4],E,E,2,[[[U]],[R[3]]]],[11,R[5],E,E,2,[[],[R[3]]]],[11,R[7],E,E,2,[[["self"]],[T]]],[11,R[6],E,E,2,[[["self"]],[T]]],[11,R[8],E,E,2,[[["self"]],[R[9]]]],[11,"into",E,E,3,[[],[U]]],[11,R[113],E,E,3,[[["self"]],["string"]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[4],E,E,3,[[[U]],[R[3]]]],[11,R[5],E,E,3,[[],[R[3]]]],[11,R[7],E,E,3,[[["self"]],[T]]],[11,R[6],E,E,3,[[["self"]],[T]]],[11,R[8],E,E,3,[[["self"]],[R[9]]]],[11,"into",E,E,4,[[],[U]]],[11,R[113],E,E,4,[[["self"]],["string"]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[4],E,E,4,[[[U]],[R[3]]]],[11,R[5],E,E,4,[[],[R[3]]]],[11,R[7],E,E,4,[[["self"]],[T]]],[11,R[6],E,E,4,[[["self"]],[T]]],[11,R[8],E,E,4,[[["self"]],[R[9]]]],[11,"into",E,E,8,[[],[U]]],[11,R[45],E,E,8,[[],["i"]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[4],E,E,8,[[[U]],[R[3]]]],[11,R[5],E,E,8,[[],[R[3]]]],[11,R[7],E,E,8,[[["self"]],[T]]],[11,R[6],E,E,8,[[["self"]],[T]]],[11,R[8],E,E,8,[[["self"]],[R[9]]]],[11,"as_fail",E,E,7,[[["self"]],["fail"]]],[11,"as_fail",E,E,4,[[["self"]],["fail"]]],[11,"name",E,E,2,[[["self"]],[["str"],[R[23],["str"]]]]],[11,"cause",E,E,2,[[["self"]],[[R[23],["fail"]],["fail"]]]],[11,R[1705],E,E,2,[[["self"]],[[R[23],[R[1705]]],[R[1705]]]]],[11,"as_ref",E,E,4,[[["self"]],["fail"]]],[11,R[83],E,E,0,[[],[R[1705]]]],[11,R[83],E,E,1,[[],["compat"]]],[11,"clone",E,E,1,[[["self"]],["compat"]]],[11,"eq",E,E,1,[[["self"],["compat"]],["bool"]]],[11,"ne",E,E,1,[[["self"],["compat"]],["bool"]]],[11,"from",E,E,2,[[["d"]],["context"]]],[11,"from",E,E,4,[[["f"]],["error"]]],[11,"next",E,E,8,[[["self"]],[[R[23],["fail"]],["fail"]]]],[11,"hash",E,E,1,[[["self"],["__h"]]]],[11,"fmt",E,E,0,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,1,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,2,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,3,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,4,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,0,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,1,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,2,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,3,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,4,[[["self"],[R[10]]],[R[3]]]],[11,R[157],E,E,1,[[["self"]],["str"]]]],"p":[[3,R[3512]],[3,"Compat"],[3,"Context"],[3,R[3513]],[3,"Error"],[8,"AsFail"],[8,"ResultExt"],[8,"Fail"],[3,"Causes"]]};
searchIndex["failure_derive"]={"doc":E,"i":[[24,"Fail","failure_derive",E,N,N]],"p":[]};
searchIndex["generational_arena"]={"doc":"   Travis CI Build Status","i":[[3,"Arena","generational_arena","The `Arena` allows inserting and removing elements that…",N,N],[3,"Index",E,R[5452],N,N],[3,R[306],E,"An iterator over the elements in an arena.",N,N],[3,"Iter",E,"An iterator over shared references to the elements in an…",N,N],[3,R[631],E,"An iterator over exclusive references to elements in this…",N,N],[3,"Drain",E,"An iterator that removes elements from the arena.",N,N],[11,"new",E,"Constructs a new, empty `Arena`.",0,[[],["arena"]]],[11,R[115],E,"Constructs a new, empty `Arena<T>` with the specified…",0,[[["usize"]],["arena"]]],[11,"clear",E,"Clear all the items inside the arena, but keep its…",0,[[["self"]]]],[11,"try_insert",E,"Attempts to insert `value` into the arena using existing…",0,[[["self"],[T]],[["index"],[R[3],["index"]]]]],[11,"insert",E,"Insert `value` into the arena, allocating more capacity if…",0,[[["self"],[T]],["index"]]],[11,"remove",E,"Remove the element at index `i` from the arena.",0,[[["self"],["index"]],[R[23]]]],[11,"retain",E,R[313],0,[[["self"]]]],[11,R[1285],E,"Is the element at index `i` in the arena?",0,[[["self"],["index"]],["bool"]]],[11,"get",E,"Get a shared reference to the element at index `i` if it…",0,[[["self"],["index"]],[[R[23]],[T]]]],[11,R[39],E,"Get an exclusive reference to the element at index `i` if…",0,[[["self"],["index"]],[[R[23]],[T]]]],[11,"get2_mut",E,"Get a pair of exclusive references to the elements at…",0,[[["self"],["index"]]]],[11,"len",E,"Get the length of this arena.",0,[[["self"]],["usize"]]],[11,R[25],E,"Returns true if the arena contains no elements",0,[[["self"]],["bool"]]],[11,R[764],E,"Get the capacity of this arena.",0,[[["self"]],["usize"]]],[11,"reserve",E,"Allocate space for `additional_capacity` more elements in…",0,[[["self"],["usize"]]]],[11,"iter",E,"Iterate over shared references to the elements in this…",0,[[["self"]],["iter"]]],[11,R[31],E,"Iterate over exclusive references to the elements in this…",0,[[["self"]],[R[24]]]],[11,"drain",E,"Iterate over elements of the arena and remove them.",0,[[["self"]],["drain"]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[4],E,E,0,[[[U]],[R[3]]]],[11,R[45],E,E,0,[[],["i"]]],[11,"into",E,E,0,[[],[U]]],[11,R[5],E,E,0,[[],[R[3]]]],[11,R[6],E,E,0,[[["self"]],[T]]],[11,R[7],E,E,0,[[["self"]],[T]]],[11,R[8],E,E,0,[[["self"]],[R[9]]]],[11,R[46],E,E,0,[[["self"]],[T]]],[11,R[47],E,E,0,[[["self"],[T]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[4],E,E,1,[[[U]],[R[3]]]],[11,"into",E,E,1,[[],[U]]],[11,R[5],E,E,1,[[],[R[3]]]],[11,R[6],E,E,1,[[["self"]],[T]]],[11,R[7],E,E,1,[[["self"]],[T]]],[11,R[8],E,E,1,[[["self"]],[R[9]]]],[11,R[46],E,E,1,[[["self"]],[T]]],[11,R[47],E,E,1,[[["self"],[T]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[4],E,E,2,[[[U]],[R[3]]]],[11,R[45],E,E,2,[[],["i"]]],[11,"into",E,E,2,[[],[U]]],[11,R[5],E,E,2,[[],[R[3]]]],[11,R[6],E,E,2,[[["self"]],[T]]],[11,R[7],E,E,2,[[["self"]],[T]]],[11,R[8],E,E,2,[[["self"]],[R[9]]]],[11,R[46],E,E,2,[[["self"]],[T]]],[11,R[47],E,E,2,[[["self"],[T]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[4],E,E,3,[[[U]],[R[3]]]],[11,R[45],E,E,3,[[],["i"]]],[11,"into",E,E,3,[[],[U]]],[11,R[5],E,E,3,[[],[R[3]]]],[11,R[6],E,E,3,[[["self"]],[T]]],[11,R[7],E,E,3,[[["self"]],[T]]],[11,R[8],E,E,3,[[["self"]],[R[9]]]],[11,R[46],E,E,3,[[["self"]],[T]]],[11,R[47],E,E,3,[[["self"],[T]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[4],E,E,4,[[[U]],[R[3]]]],[11,R[45],E,E,4,[[],["i"]]],[11,"into",E,E,4,[[],[U]]],[11,R[5],E,E,4,[[],[R[3]]]],[11,R[6],E,E,4,[[["self"]],[T]]],[11,R[7],E,E,4,[[["self"]],[T]]],[11,R[8],E,E,4,[[["self"]],[R[9]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[4],E,E,5,[[[U]],[R[3]]]],[11,R[45],E,E,5,[[],["i"]]],[11,"into",E,E,5,[[],[U]]],[11,R[5],E,E,5,[[],[R[3]]]],[11,R[6],E,E,5,[[["self"]],[T]]],[11,R[7],E,E,5,[[["self"]],[T]]],[11,R[8],E,E,5,[[["self"]],[R[9]]]],[11,"eq",E,E,1,[[["self"],["index"]],["bool"]]],[11,"ne",E,E,1,[[["self"],["index"]],["bool"]]],[11,"cmp",E,E,1,[[["self"],["index"]],[R[50]]]],[11,R[77],E,E,1,[[["self"],["index"]],[[R[23],[R[50]]],[R[50]]]]],[11,"lt",E,E,1,[[["self"],["index"]],["bool"]]],[11,"le",E,E,1,[[["self"],["index"]],["bool"]]],[11,"gt",E,E,1,[[["self"],["index"]],["bool"]]],[11,"ge",E,E,1,[[["self"],["index"]],["bool"]]],[11,"hash",E,E,1,[[["self"],["__h"]]]],[11,"fmt",E,E,0,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,1,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,2,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,3,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,4,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,5,[[["self"],[R[10]]],[R[3]]]],[11,"index",E,E,0,[[["self"],["index"]]]],[11,R[51],E,E,0,[[["self"],["index"]]]],[11,"extend",E,E,0,[[["self"],[R[82]]]]],[11,"len",E,E,2,[[["self"]],["usize"]]],[11,"len",E,E,3,[[["self"]],["usize"]]],[11,"len",E,E,4,[[["self"]],["usize"]]],[11,R[81],E,E,0,[[[R[82]]],["self"]]],[11,R[45],E,E,0,[[]]],[11,R[52],E,E,2,[[["self"]],[R[23]]]],[11,R[52],E,E,3,[[["self"]],[R[23]]]],[11,R[52],E,E,4,[[["self"]],[R[23]]]],[11,"next",E,E,2,[[["self"]],[R[23]]]],[11,R[53],E,E,2,[[["self"]]]],[11,"next",E,E,3,[[["self"]],[R[23]]]],[11,R[53],E,E,3,[[["self"]]]],[11,"next",E,E,4,[[["self"]],[R[23]]]],[11,R[53],E,E,4,[[["self"]]]],[11,"next",E,E,5,[[["self"]],[R[23]]]],[11,"clone",E,E,0,[[["self"]],["arena"]]],[11,"clone",E,E,1,[[["self"]],["index"]]],[11,"clone",E,E,2,[[["self"]],[R[766]]]],[11,"clone",E,E,3,[[["self"]],["iter"]]],[11,R[4563],E,E,1,[[["self"],["s"]],[R[3]]]],[11,R[4563],E,E,0,[[["self"],["s"]],[R[3]]]],[11,R[4354],E,E,1,[[["d"]],[R[3]]]],[11,R[4354],E,E,0,[[["d"]],[R[3]]]]],"p":[[3,"Arena"],[3,"Index"],[3,R[306]],[3,"Iter"],[3,R[631]],[3,"Drain"]]};
searchIndex["generic_array"]={"doc":"This crate implements a structure that can be used as a…","i":[[3,R[1226],R[1217],"Struct representing a generic array - `GenericArray<T, N>`…",N,N],[0,"arr",E,"Implementation for `arr!` macro.",N,N],[6,"Inc","generic_array::arr","Helper type for `arr!` macro",N,N],[8,"AddLength",E,"Helper trait for `arr!` macro",N,N],[16,"Output",E,"Resulting length",0,N],[0,"functional",R[1217],"Functional programming with generic sequences",N,N],[6,"MappedSequence","generic_array::functional","Accessor type for a mapped generic sequence",N,N],[8,R[1221],E,"Defines the relationship between one generic sequence and…",N,N],[16,"Mapped",E,"Mapped sequence type",1,N],[8,R[1222],E,"Defines functional programming methods for generic sequences",N,N],[11,"map",E,"Maps a `GenericSequence` to another `GenericSequence`.",2,[[["f"]],[R[1218]]]],[11,"zip",E,"Combines two `GenericSequence` instances and iterates…",2,[[["rhs"],["f"]],[R[1218]]]],[11,"fold",E,"Folds (or reduces) a sequence of data into a single value.",2,[[[U],["f"]],[U]]],[0,"iter",R[1217],"`GenericArray` iterator implementation.",N,N],[3,R[1223],R[1220],"An iterator that moves out of a `GenericArray`",N,N],[11,R[44],E,"Returns the remaining items of this iterator as a slice",3,[[["self"]]]],[11,R[74],E,"Returns the remaining items of this iterator as a mutable…",3,[[["self"]]]],[0,"sequence",R[1217],"Useful traits for manipulating sequences of data stored in…",N,N],[6,"SequenceItem","generic_array::sequence","Accessor for `GenericSequence` item type, which is really…",N,N],[8,R[1224],E,"Defines some sequence with an associated length and…",N,N],[16,"Length",E,"`GenericArray` associated length",4,N],[16,"Sequence",E,"Concrete sequence type used in conjuction with reference…",4,N],[10,R[4714],E,"Initializes a new sequence instance using the given…",4,[[["f"]]]],[8,"Lengthen",E,"Defines any `GenericSequence` which can be lengthened or…",N,N],[16,"Longer",E,"`GenericSequence` that has one more element than `Self`",5,N],[10,"append",E,"Returns a new array with the given element appended to the…",5,[[[T]]]],[10,"prepend",E,"Returns a new array with the given element prepended to…",5,[[[T]]]],[8,"Shorten",E,"Defines a `GenericSequence` which can be shortened by…",N,N],[16,"Shorter",E,"`GenericSequence` that has one less element than `Self`",6,N],[10,"pop_back",E,"Returns a new array without the last element, and the last…",6,[[]]],[10,"pop_front",E,"Returns a new array without the first element, and the…",6,[[]]],[8,"Split",E,"Defines a `GenericSequence` that can be split into two…",N,N],[16,"First",E,"First part of the resulting split array",7,N],[16,"Second",E,"Second part of the resulting split array",7,N],[10,"split",E,"Splits an array at the given index, returning the separate…",7,[[]]],[8,"Concat",E,"Defines `GenericSequence`s which can be joined together,…",N,N],[16,"Rest",E,"Sequence to be concatenated with `self`",8,N],[16,"Output",E,"Resulting sequence formed by the concatenation.",8,N],[10,"concat",E,"Concatenate, or join, two sequences.",8,[[]]],[8,R[1225],R[1217],"Trait making `GenericArray` work, marking types to be used…",N,N],[16,R[5605],E,"Associated type representing the array type for the number",9,N],[11,R[44],E,"Extracts a slice containing the entire array.",10,[[["self"]]]],[11,R[74],E,"Extracts a mutable slice containing the entire array.",10,[[["self"]]]],[11,R[121],E,"Converts slice to a generic array reference with inferred…",10,[[],[R[1219]]]],[11,R[1294],E,"Converts mutable slice to a mutable generic array reference",10,[[],[R[1219]]]],[11,"clone_from_slice",E,"Construct a `GenericArray` from a slice by cloning its…",10,[[],[R[1219]]]],[11,"from_exact_iter",E,"Creates a new `GenericArray` instance from an iterator…",10,[[["i"]],[R[23]]]],[14,"arr",E,"Macro allowing for easy generation of Generic Arrays.…",N,N],[11,"from",E,E,10,[[[T]],[T]]],[11,R[4],E,E,10,[[[U]],[R[3]]]],[11,R[45],E,E,10,[[],["i"]]],[11,"into",E,E,10,[[],[U]]],[11,R[5],E,E,10,[[],[R[3]]]],[11,R[6],E,E,10,[[["self"]],[T]]],[11,R[7],E,E,10,[[["self"]],[T]]],[11,R[8],E,E,10,[[["self"]],[R[9]]]],[11,"from",R[1220],E,3,[[[T]],[T]]],[11,R[4],E,E,3,[[[U]],[R[3]]]],[11,R[45],E,E,3,[[],["i"]]],[11,"into",E,E,3,[[],[U]]],[11,R[5],E,E,3,[[],[R[3]]]],[11,R[6],E,E,3,[[["self"]],[T]]],[11,R[7],E,E,3,[[["self"]],[T]]],[11,R[8],E,E,3,[[["self"]],[R[9]]]],[11,"map",R[1217],E,10,[[["f"]],[R[1218]]]],[11,"zip",E,E,10,[[["rhs"],["f"]],[R[1218]]]],[11,"fold",E,E,10,[[[U],["f"]],[U]]],[11,R[4714],E,E,10,[[["f"]],[R[1219]]]],[11,"append",E,E,10,[[[T]]]],[11,"prepend",E,E,10,[[[T]]]],[11,"pop_back",E,E,10,[[]]],[11,"pop_front",E,E,10,[[]]],[11,"split",E,E,10,[[]]],[11,"concat",E,E,10,[[]]],[11,"deref",E,E,10,[[["self"]]]],[11,R[17],E,E,10,[[["self"]]]],[11,"from",E,E,10,[[],["self"]]],[11,"from",E,E,10,[[],["self"]]],[11,"from",E,E,10,[[],["self"]]],[11,"from",E,E,10,[[],["self"]]],[11,"from",E,E,10,[[],["self"]]],[11,"from",E,E,10,[[],["self"]]],[11,"from",E,E,10,[[],["self"]]],[11,"from",E,E,10,[[],["self"]]],[11,"from",E,E,10,[[],["self"]]],[11,"from",E,E,10,[[],["self"]]],[11,"from",E,E,10,[[],["self"]]],[11,"from",E,E,10,[[],["self"]]],[11,"from",E,E,10,[[],["self"]]],[11,"from",E,E,10,[[],["self"]]],[11,"from",E,E,10,[[],["self"]]],[11,"from",E,E,10,[[],["self"]]],[11,"from",E,E,10,[[],["self"]]],[11,"from",E,E,10,[[],["self"]]],[11,"from",E,E,10,[[],["self"]]],[11,"from",E,E,10,[[],["self"]]],[11,"from",E,E,10,[[],["self"]]],[11,"from",E,E,10,[[],["self"]]],[11,"from",E,E,10,[[],["self"]]],[11,"from",E,E,10,[[],["self"]]],[11,"from",E,E,10,[[],["self"]]],[11,"from",E,E,10,[[],["self"]]],[11,"from",E,E,10,[[],["self"]]],[11,"from",E,E,10,[[],["self"]]],[11,"from",E,E,10,[[],["self"]]],[11,"from",E,E,10,[[],["self"]]],[11,"from",E,E,10,[[],["self"]]],[11,"from",E,E,10,[[],["self"]]],[11,"eq",E,E,10,[[["self"]],["bool"]]],[11,"cmp",E,E,10,[[["self"],[R[1219]]],[R[50]]]],[11,R[77],E,E,10,[[["self"],[R[1219]]],[[R[23],[R[50]]],[R[50]]]]],[11,"hash",E,E,10,[[["self"],["h"]]]],[11,"fmt",E,E,10,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[1220],E,3,[[["self"],[R[10]]],[R[3]]]],[11,"drop",E,E,3,[[["self"]]]],[11,"len",E,E,3,[[["self"]],["usize"]]],[11,R[81],R[1217],E,10,[[["i"]],[R[1219]]]],[11,R[45],E,E,10,[[]]],[11,R[52],R[1220],E,3,[[["self"]],[R[23]]]],[11,"next",E,E,3,[[["self"]],[R[23]]]],[11,R[53],E,E,3,[[["self"]]]],[11,"count",E,E,3,[[],["usize"]]],[11,"nth",E,E,3,[[["self"],["usize"]],[R[23]]]],[11,"last",E,E,3,[[],[R[23]]]],[11,"as_ref",R[1217],E,10,[[["self"]]]],[11,"as_mut",E,E,10,[[["self"]]]],[11,"into",E,E,10,[[]]],[11,"into",E,E,10,[[]]],[11,"into",E,E,10,[[]]],[11,"into",E,E,10,[[]]],[11,"into",E,E,10,[[]]],[11,"into",E,E,10,[[]]],[11,"into",E,E,10,[[]]],[11,"into",E,E,10,[[]]],[11,"into",E,E,10,[[]]],[11,"into",E,E,10,[[]]],[11,"into",E,E,10,[[]]],[11,"into",E,E,10,[[]]],[11,"into",E,E,10,[[]]],[11,"into",E,E,10,[[]]],[11,"into",E,E,10,[[]]],[11,"into",E,E,10,[[]]],[11,"into",E,E,10,[[]]],[11,"into",E,E,10,[[]]],[11,"into",E,E,10,[[]]],[11,"into",E,E,10,[[]]],[11,"into",E,E,10,[[]]],[11,"into",E,E,10,[[]]],[11,"into",E,E,10,[[]]],[11,"into",E,E,10,[[]]],[11,"into",E,E,10,[[]]],[11,"into",E,E,10,[[]]],[11,"into",E,E,10,[[]]],[11,"into",E,E,10,[[]]],[11,"into",E,E,10,[[]]],[11,"into",E,E,10,[[]]],[11,"into",E,E,10,[[]]],[11,"into",E,E,10,[[]]],[11,"fmt",E,E,10,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,10,[[["self"],[R[10]]],[R[3]]]],[11,"clone",E,E,10,[[["self"]],[R[1219]]]],[11,"clone",R[1220],E,3,[[["self"]],["self"]]],[11,R[83],R[1217],E,10,[[],["self"]]],[11,R[6],E,E,10,[[["self"]]]],[11,R[7],E,E,10,[[["self"]]]]],"p":[[8,"AddLength"],[8,R[1221]],[8,R[1222]],[3,R[1223]],[8,R[1224]],[8,"Lengthen"],[8,"Shorten"],[8,"Split"],[8,"Concat"],[8,R[1225]],[3,R[1226]]]};
searchIndex["getrandom"]={"doc":"Interface to the random number generator of the operating…","i":[[3,"Error","getrandom","A small and `no_std` compatible error type.",N,N],[5,"getrandom",E,"Fill `dest` with random bytes from the system's preferred…",N,[[],[["error"],[R[3],["error"]]]]],[18,"UNKNOWN",E,"Unknown error.",0,N],[18,"UNAVAILABLE",E,"System entropy source is unavailable.",0,N],[18,"INTERNAL_START",E,"Codes below this point represent OS Errors (i.e. positive…",0,N],[18,"CUSTOM_START",E,"Codes at or above this point can be used by users to…",0,N],[11,"raw_os_error",E,"Extract the raw OS error code (if this error came from the…",0,[[],[[R[23],["i32"]],["i32"]]]],[11,"code",E,"Extract the bare error code.",0,[[],[R[1709]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[4],E,E,0,[[[U]],[R[3]]]],[11,"into",E,E,0,[[],[U]]],[11,R[5],E,E,0,[[],[R[3]]]],[11,R[6],E,E,0,[[["self"]],[T]]],[11,R[7],E,E,0,[[["self"]],[T]]],[11,R[8],E,E,0,[[["self"]],[R[9]]]],[11,R[113],E,E,0,[[["self"]],["string"]]],[11,R[46],E,E,0,[[["self"]],[T]]],[11,R[47],E,E,0,[[["self"],[T]]]],[11,"from",E,E,0,[[[R[1709]]],["self"]]],[11,"from",E,E,0,[[["error"]],["self"]]],[11,"eq",E,E,0,[[["self"],["error"]],["bool"]]],[11,"ne",E,E,0,[[["self"],["error"]],["bool"]]],[11,"fmt",E,E,0,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,0,[[["self"],[R[10]]],[R[3]]]],[11,"clone",E,E,0,[[["self"]],["error"]]]],"p":[[3,"Error"]]};
searchIndex["ghost"]={"doc":R[3474],"i":[[23,"phantom","ghost",R[3474],N,N]],"p":[]};
searchIndex["goblin"]={"doc":"libgoblin","i":[[3,"HintData","goblin","Information obtained from a peek `Hint`",N,N],[12,"is_lsb",E,E,0,N],[12,"is_64",E,E,0,N],[4,"Hint",E,"A hint at the underlying binary format for 16 bytes of…",N,N],[13,"Elf",E,E,1,N],[13,"Mach",E,E,1,N],[13,"MachFat",E,E,1,N],[13,"PE",E,E,1,N],[13,"Archive",E,E,1,N],[13,"Unknown",E,E,1,N],[4,"Object",E,"A parseable object that goblin understands",N,N],[13,"Elf",E,"An ELF32/ELF64!",2,N],[13,"PE",E,"A PE32/PE32+!",2,N],[13,"Mach",E,"A 32/64-bit Mach-o binary OR it is a multi-architecture…",2,N],[13,"Archive",E,"A Unix archive",2,N],[13,"Unknown",E,"None of the above, with the given magic value",2,N],[5,"peek_bytes",E,"Peeks at `bytes`, and returns a `Hint`",N,[[],[[R[3],["hint"]],["hint"]]]],[5,"peek",E,"Peeks at the underlying Read object. Requires the…",N,[[["r"]],[[R[3],["hint"]],["hint"]]]],[0,"error",E,R[3881],N,N],[4,"Error",R[4196],R[3881],N,N],[13,"Malformed",E,"The binary is malformed somehow",3,N],[13,"BadMagic",E,"The binary's magic is unknown or bad",3,N],[13,"Scroll",E,"An error emanating from reading and interpreting bytes",3,N],[13,"IO",E,"An IO based error",3,N],[6,"Result",E,"An impish result",N,N],[0,"strtab","goblin","A byte-offset based string table. Commonly used in ELF…",N,N],[3,"Strtab",R[4197],"A common string table format which is indexed by byte…",N,N],[11,"new",E,"Construct a new strtab with `bytes` as the backing string…",4,[[["u8"]],["self"]]],[11,R[3982],E,"Construct a strtab from a `ptr`, and a `size`, using…",4,[[["u8"],["usize"]],["strtab"]]],[11,"parse",E,"Parses a strtab from `bytes` at `offset` with `len` size…",4,[[["u8"],["usize"]],[[R[3],["strtab"]],["strtab"]]]],[11,"to_vec",E,"Converts the string table to a vector, with the original…",4,[[["self"]],[["vec",["str"]],[R[3],["vec"]]]]],[11,"get",E,"Safely parses and gets a str reference from the backing…",4,[[["self"],["usize"]],[[R[3],["str"]],[R[23],[R[3]]]]]],[11,"get_unsafe",E,"Gets a str reference from the backing bytes starting at…",4,[[["self"],["usize"]],[[R[23],["str"]],["str"]]]],[0,R[3904],"goblin","Binary container size information and byte-order context",N,N],[4,"Endian",R[4198],R[4352],N,N],[13,"Little",E,E,5,N],[13,"Big",E,E,5,N],[3,"Ctx",E,"A binary parsing context, including the container size and…",N,N],[12,R[3904],E,E,6,N],[12,"le",E,E,6,N],[4,"Container",E,"The size of a binary container",N,N],[13,"Little",E,E,7,N],[13,"Big",E,E,7,N],[17,"CONTAINER",E,"The default binary container size - either `Big` or…",N,N],[11,"is_big",E,"Is this a 64-bit container or not?",7,[[],["bool"]]],[11,"is_big",E,"Whether this binary container context is \"big\" or not",6,[[],["bool"]]],[11,"is_little_endian",E,"Whether this binary container context is little endian or…",6,[[],["bool"]]],[11,"new",E,"Create a new binary container context",6,[[["endian"],[R[3904]]],["self"]]],[11,"size",E,"Return a dubious pointer/address byte size for the container",6,[[],["usize"]]],[0,"elf","goblin","The generic ELF module, which gives access to ELF…",N,N],[3,"Elf",R[3905],"An ELF binary. The underlying data structures are read…",N,N],[12,"header",E,"The ELF header, which provides a rudimentary index into…",8,N],[12,"program_headers",E,"The program headers; they primarily tell the kernel and…",8,N],[12,"section_headers",E,"The sections headers. These are strippable, never count on…",8,N],[12,"shdr_strtab",E,"The section header string table",8,N],[12,"dynstrtab",E,"The string table for the dynamically accessible symbols",8,N],[12,"dynsyms",E,"The dynamically accessible symbols, i.e., exports,…",8,N],[12,"syms",E,"The debugging symbol table",8,N],[12,"strtab",E,"The string table for the symbol table",8,N],[12,"dynamic",E,"Contains dynamic linking information, with the _DYNAMIC…",8,N],[12,"dynrelas",E,"The dynamic relocation entries (strings, copy-data, etc.)…",8,N],[12,"dynrels",E,"The dynamic relocation entries without an addend",8,N],[12,"pltrelocs",E,"The plt relocation entries (procedure linkage table). For…",8,N],[12,"shdr_relocs",E,"Section relocations by section index (only present if this…",8,N],[12,"soname",E,"The binary's soname, if it has one",8,N],[12,"interpreter",E,"The binary's program interpreter (e.g., dynamic linker),…",8,N],[12,"libraries",E,"A list of this binary's dynamic libraries it uses, if…",8,N],[12,"is_64",E,E,8,N],[12,"is_lib",E,"Whether this is a shared object or not",8,N],[12,"entry",E,"The binaries entry point address, if it has one",8,N],[12,R[4043],E,"Whether the binary is little endian or not",8,N],[0,"header",E,E,N,N],[3,"Header",R[3884],"An ELF header",N,N],[12,"e_ident",E,E,9,N],[12,"e_type",E,E,9,N],[12,"e_machine",E,E,9,N],[12,"e_version",E,E,9,N],[12,"e_entry",E,E,9,N],[12,"e_phoff",E,E,9,N],[12,"e_shoff",E,E,9,N],[12,"e_flags",E,E,9,N],[12,"e_ehsize",E,E,9,N],[12,R[3882],E,E,9,N],[12,"e_phnum",E,E,9,N],[12,R[3883],E,E,9,N],[12,"e_shnum",E,E,9,N],[12,R[3898],E,E,9,N],[5,"machine_to_str",E,"Convert machine to str representation",N,[[["u16"]],["str"]]],[5,"class_to_str",E,"Convert a ELF class byte to the associated string.",N,[[["u8"]],["str"]]],[5,"et_to_str",E,"Convert an ET value to their associated string.",N,[[["u16"]],["str"]]],[0,"header32",E,E,N,N],[3,"Header",R[4199],E,N,N],[12,"e_ident",E,R[3885],10,N],[12,"e_type",E,R[3886],10,N],[12,"e_machine",E,R[3887],10,N],[12,"e_version",E,R[3888],10,N],[12,"e_entry",E,R[3889],10,N],[12,"e_phoff",E,R[3890],10,N],[12,"e_shoff",E,R[3891],10,N],[12,"e_flags",E,R[3892],10,N],[12,"e_ehsize",E,R[3893],10,N],[12,R[3882],E,R[3894],10,N],[12,"e_phnum",E,R[3895],10,N],[12,R[3883],E,R[3896],10,N],[12,"e_shnum",E,R[3897],10,N],[12,R[3898],E,R[3899],10,N],[17,R[3900],E,E,N,N],[17,"ELFCLASS",E,E,N,N],[11,R[130],E,R[3901],10,[[],["header"]]],[11,"from_fd",E,R[3902],10,[[["file"]],[[R[3],["header"]],["header"]]]],[11,"parse",E,R[3903],10,[[],[[R[3],["header"]],["header"]]]],[0,"header64",R[3884],E,N,N],[3,"Header",R[4200],E,N,N],[12,"e_ident",E,R[3885],11,N],[12,"e_type",E,R[3886],11,N],[12,"e_machine",E,R[3887],11,N],[12,"e_version",E,R[3888],11,N],[12,"e_entry",E,R[3889],11,N],[12,"e_phoff",E,R[3890],11,N],[12,"e_shoff",E,R[3891],11,N],[12,"e_flags",E,R[3892],11,N],[12,"e_ehsize",E,R[3893],11,N],[12,R[3882],E,R[3894],11,N],[12,"e_phnum",E,R[3895],11,N],[12,R[3883],E,R[3896],11,N],[12,"e_shnum",E,R[3897],11,N],[12,R[3898],E,R[3899],11,N],[17,R[3900],E,E,N,N],[17,"ELFCLASS",E,E,N,N],[11,R[130],E,R[3901],11,[[],["header"]]],[11,"from_fd",E,R[3902],11,[[["file"]],[[R[3],["header"]],["header"]]]],[11,"parse",E,R[3903],11,[[],[[R[3],["header"]],["header"]]]],[17,"EM_NONE",R[3884],"TODO: use Enum with explicit discriminant and get debug…",N,N],[17,"EM_M32",E,"AT&T WE 32100",N,N],[17,"EM_SPARC",E,"SUN SPARC",N,N],[17,"EM_386",E,"Intel 80386",N,N],[17,"EM_68K",E,"Motorola m68k family",N,N],[17,"EM_88K",E,"Motorola m88k family",N,N],[17,"EM_IAMCU",E,"Intel MCU",N,N],[17,"EM_860",E,"Intel 80860",N,N],[17,"EM_MIPS",E,"MIPS R3000 big-endian",N,N],[17,"EM_S370",E,"IBM System/370",N,N],[17,"EM_MIPS_RS3_LE",E,"MIPS R3000 little-endian",N,N],[17,"EM_PARISC",E,"HPPA",N,N],[17,"EM_VPP500",E,"Fujitsu VPP500",N,N],[17,"EM_SPARC32PLUS",E,"Sun's \"v8plus\"",N,N],[17,"EM_960",E,"Intel 80960",N,N],[17,"EM_PPC",E,"PowerPC",N,N],[17,"EM_PPC64",E,"PowerPC 64-bit",N,N],[17,"EM_S390",E,"IBM S390",N,N],[17,"EM_SPU",E,"IBM SPU/SPC",N,N],[17,"EM_V800",E,"NEC V800 series",N,N],[17,"EM_FR20",E,"Fujitsu FR20",N,N],[17,"EM_RH32",E,"TRW RH-32",N,N],[17,"EM_RCE",E,"Motorola RCE",N,N],[17,"EM_ARM",E,"ARM",N,N],[17,"EM_FAKE_ALPHA",E,"Digital Alpha",N,N],[17,"EM_SH",E,"Hitachi SH",N,N],[17,"EM_SPARCV9",E,"SPARC v9 64-bit",N,N],[17,"EM_TRICORE",E,"Siemens Tricore",N,N],[17,"EM_ARC",E,"Argonaut RISC Core",N,N],[17,"EM_H8_300",E,"Hitachi H8/300",N,N],[17,"EM_H8_300H",E,"Hitachi H8/300H",N,N],[17,"EM_H8S",E,"Hitachi H8S",N,N],[17,"EM_H8_500",E,"Hitachi H8/500",N,N],[17,"EM_IA_64",E,"Intel Merced",N,N],[17,"EM_MIPS_X",E,"Stanford MIPS-X",N,N],[17,"EM_COLDFIRE",E,"Motorola Coldfire",N,N],[17,"EM_68HC12",E,"Motorola M68HC12",N,N],[17,"EM_MMA",E,"Fujitsu MMA Multimedia Accelerator",N,N],[17,"EM_PCP",E,"Siemens PCP",N,N],[17,"EM_NCPU",E,"Sony nCPU embeeded RISC",N,N],[17,"EM_NDR1",E,"Denso NDR1 microprocessor",N,N],[17,"EM_STARCORE",E,"Motorola Start*Core processor",N,N],[17,"EM_ME16",E,"Toyota ME16 processor",N,N],[17,"EM_ST100",E,"STMicroelectronic ST100 processor",N,N],[17,"EM_TINYJ",E,"Advanced Logic Corp. Tinyj emb.fam",N,N],[17,"EM_X86_64",E,"AMD x86-64 architecture",N,N],[17,"EM_PDSP",E,"Sony DSP Processor",N,N],[17,"EM_PDP10",E,"Digital PDP-10",N,N],[17,"EM_PDP11",E,"Digital PDP-11",N,N],[17,"EM_FX66",E,"Siemens FX66 microcontroller",N,N],[17,"EM_ST9PLUS",E,"STMicroelectronics ST9+ 8/16 mc",N,N],[17,"EM_ST7",E,"STmicroelectronics ST7 8 bit mc",N,N],[17,"EM_68HC16",E,"Motorola MC68HC16 microcontroller",N,N],[17,"EM_68HC11",E,"Motorola MC68HC11 microcontroller",N,N],[17,"EM_68HC08",E,"Motorola MC68HC08 microcontroller",N,N],[17,"EM_68HC05",E,"Motorola MC68HC05 microcontroller",N,N],[17,"EM_SVX",E,"Silicon Graphics SVx",N,N],[17,"EM_ST19",E,"STMicroelectronics ST19 8 bit mc",N,N],[17,"EM_VAX",E,"Digital VAX",N,N],[17,"EM_CRIS",E,"Axis Communications 32-bit emb.proc",N,N],[17,"EM_JAVELIN",E,"Infineon Technologies 32-bit emb.proc",N,N],[17,"EM_FIREPATH",E,"Element 14 64-bit DSP Processor",N,N],[17,"EM_ZSP",E,"LSI Logic 16-bit DSP Processor",N,N],[17,"EM_MMIX",E,"Donald Knuth's educational 64-bit proc",N,N],[17,"EM_HUANY",E,"Harvard University machine-independent object files",N,N],[17,"EM_PRISM",E,"SiTera Prism",N,N],[17,"EM_AVR",E,"Atmel AVR 8-bit microcontroller",N,N],[17,"EM_FR30",E,"Fujitsu FR30",N,N],[17,"EM_D10V",E,"Mitsubishi D10V",N,N],[17,"EM_D30V",E,"Mitsubishi D30V",N,N],[17,"EM_V850",E,"NEC v850",N,N],[17,"EM_M32R",E,"Mitsubishi M32R",N,N],[17,"EM_MN10300",E,"Matsushita MN10300",N,N],[17,"EM_MN10200",E,"Matsushita MN10200",N,N],[17,"EM_PJ",E,"picoJava",N,N],[17,"EM_OPENRISC",E,"OpenRISC 32-bit embedded processor",N,N],[17,"EM_ARC_COMPACT",E,"ARC International ARCompact",N,N],[17,"EM_XTENSA",E,"Tensilica Xtensa Architecture",N,N],[17,"EM_VIDEOCORE",E,"Alphamosaic VideoCore",N,N],[17,"EM_TMM_GPP",E,"Thompson Multimedia General Purpose Proc",N,N],[17,"EM_NS32K",E,"National Semi. 32000",N,N],[17,"EM_TPC",E,"Tenor Network TPC",N,N],[17,"EM_SNP1K",E,"Trebia SNP 1000",N,N],[17,"EM_ST200",E,"STMicroelectronics ST200",N,N],[17,"EM_IP2K",E,"Ubicom IP2xxx",N,N],[17,"EM_MAX",E,"MAX processor",N,N],[17,"EM_CR",E,"National Semi. CompactRISC",N,N],[17,"EM_F2MC16",E,"Fujitsu F2MC16",N,N],[17,"EM_MSP430",E,"Texas Instruments msp430",N,N],[17,"EM_BLACKFIN",E,"Analog Devices Blackfin DSP",N,N],[17,"EM_SE_C33",E,"Seiko Epson S1C33 family",N,N],[17,"EM_SEP",E,"Sharp embedded microprocessor",N,N],[17,"EM_ARCA",E,"Arca RISC",N,N],[17,"EM_UNICORE",E,"PKU-Unity & MPRC Peking Uni. mc series",N,N],[17,"EM_EXCESS",E,"eXcess configurable cpu",N,N],[17,"EM_DXP",E,"Icera Semi. Deep Execution Processor",N,N],[17,"EM_ALTERA_NIOS2",E,"Altera Nios II",N,N],[17,"EM_CRX",E,"National Semi. CompactRISC CRX",N,N],[17,"EM_XGATE",E,"Motorola XGATE",N,N],[17,"EM_C166",E,"Infineon C16x/XC16x",N,N],[17,"EM_M16C",E,"Renesas M16C",N,N],[17,"EM_DSPIC30F",E,"Microchip Technology dsPIC30F",N,N],[17,"EM_CE",E,"Freescale Communication Engine RISC",N,N],[17,"EM_M32C",E,"Renesas M32C",N,N],[17,"EM_TSK3000",E,"Altium TSK3000",N,N],[17,"EM_RS08",E,"Freescale RS08",N,N],[17,"EM_SHARC",E,"Analog Devices SHARC family",N,N],[17,"EM_ECOG2",E,"Cyan Technology eCOG2",N,N],[17,"EM_SCORE7",E,"Sunplus S+core7 RISC",N,N],[17,"EM_DSP24",E,"New Japan Radio (NJR) 24-bit DSP",N,N],[17,"EM_VIDEOCORE3",E,"Broadcom VideoCore III",N,N],[17,"EM_LATTICEMICO32",E,"RISC for Lattice FPGA",N,N],[17,"EM_SE_C17",E,"Seiko Epson C17",N,N],[17,"EM_TI_C6000",E,"Texas Instruments TMS320C6000 DSP",N,N],[17,"EM_TI_C2000",E,"Texas Instruments TMS320C2000 DSP",N,N],[17,"EM_TI_C5500",E,"Texas Instruments TMS320C55x DSP",N,N],[17,"EM_TI_ARP32",E,"Texas Instruments App. Specific RISC",N,N],[17,"EM_TI_PRU",E,"Texas Instruments Prog. Realtime Unit",N,N],[17,"EM_MMDSP_PLUS",E,"STMicroelectronics 64bit VLIW DSP",N,N],[17,"EM_CYPRESS_M8C",E,"Cypress M8C",N,N],[17,"EM_R32C",E,"Renesas R32C",N,N],[17,"EM_TRIMEDIA",E,"NXP Semi. TriMedia",N,N],[17,"EM_QDSP6",E,"QUALCOMM DSP6",N,N],[17,"EM_8051",E,"Intel 8051 and variants",N,N],[17,"EM_STXP7X",E,"STMicroelectronics STxP7x",N,N],[17,"EM_NDS32",E,"Andes Tech. compact code emb. RISC",N,N],[17,"EM_ECOG1X",E,"Cyan Technology eCOG1X",N,N],[17,"EM_MAXQ30",E,"Dallas Semi. MAXQ30 mc",N,N],[17,"EM_XIMO16",E,"New Japan Radio (NJR) 16-bit DSP",N,N],[17,"EM_MANIK",E,"M2000 Reconfigurable RISC",N,N],[17,"EM_CRAYNV2",E,"Cray NV2 vector architecture",N,N],[17,"EM_RX",E,"Renesas RX",N,N],[17,"EM_METAG",E,"Imagination Tech. META",N,N],[17,"EM_MCST_ELBRUS",E,"MCST Elbrus",N,N],[17,"EM_ECOG16",E,"Cyan Technology eCOG16",N,N],[17,"EM_CR16",E,"National Semi. CompactRISC CR16",N,N],[17,"EM_ETPU",E,"Freescale Extended Time Processing Unit",N,N],[17,"EM_SLE9X",E,"Infineon Tech. SLE9X",N,N],[17,"EM_L10M",E,"Intel L10M",N,N],[17,"EM_K10M",E,"Intel K10M",N,N],[17,"EM_AARCH64",E,"ARM AARCH64",N,N],[17,"EM_AVR32",E,"Amtel 32-bit microprocessor",N,N],[17,"EM_STM8",E,"STMicroelectronics STM8",N,N],[17,"EM_TILE64",E,"Tileta TILE64",N,N],[17,"EM_TILEPRO",E,"Tilera TILEPro",N,N],[17,"EM_MICROBLAZE",E,"Xilinx MicroBlaze",N,N],[17,"EM_CUDA",E,"NVIDIA CUDA",N,N],[17,"EM_TILEGX",E,"Tilera TILE-Gx",N,N],[17,"EM_CLOUDSHIELD",E,"CloudShield",N,N],[17,"EM_COREA_1ST",E,"KIPO-KAIST Core-A 1st gen.",N,N],[17,"EM_COREA_2ND",E,"KIPO-KAIST Core-A 2nd gen.",N,N],[17,"EM_ARC_COMPACT2",E,"Synopsys ARCompact V2",N,N],[17,"EM_OPEN8",E,"Open8 RISC",N,N],[17,"EM_RL78",E,"Renesas RL78",N,N],[17,"EM_VIDEOCORE5",E,"Broadcom VideoCore V",N,N],[17,"EM_78KOR",E,"Renesas 78KOR",N,N],[17,"EM_56800EX",E,"Freescale 56800EX DSC",N,N],[17,"EM_BA1",E,"Beyond BA1",N,N],[17,"EM_BA2",E,"Beyond BA2",N,N],[17,"EM_XCORE",E,"XMOS xCORE",N,N],[17,"EM_MCHP_PIC",E,"Microchip 8-bit PIC(r)",N,N],[17,"EM_KM32",E,"KM211 KM32",N,N],[17,"EM_KMX32",E,"KM211 KMX32",N,N],[17,"EM_EMX16",E,"KM211 KMX16",N,N],[17,"EM_EMX8",E,"KM211 KMX8",N,N],[17,"EM_KVARC",E,"KM211 KVARC",N,N],[17,"EM_CDP",E,"Paneve CDP",N,N],[17,"EM_COGE",E,"Cognitive Smart Memory Processor",N,N],[17,"EM_COOL",E,"Bluechip CoolEngine",N,N],[17,"EM_NORC",E,"Nanoradio Optimized RISC",N,N],[17,"EM_CSR_KALIMBA",E,"CSR Kalimba",N,N],[17,"EM_Z80",E,"Zilog Z80",N,N],[17,"EM_VISIUM",E,"Controls and Data Services VISIUMcore",N,N],[17,"EM_FT32",E,"FTDI Chip FT32",N,N],[17,"EM_MOXIE",E,"Moxie processor",N,N],[17,"EM_AMDGPU",E,"AMD GPU",N,N],[17,"EM_RISCV",E,"RISC-V",N,N],[17,"EM_BPF",E,"Linux BPF -- in-kernel virtual machine",N,N],[17,"EM_NUM",E,E,N,N],[17,"ET_NONE",E,"No file type.",N,N],[17,"ET_REL",E,"Relocatable file.",N,N],[17,"ET_EXEC",E,"Executable file.",N,N],[17,"ET_DYN",E,"Shared object file.",N,N],[17,"ET_CORE",E,"Core file.",N,N],[17,"ET_NUM",E,R[3939],N,N],[17,"ELFMAG",E,"The ELF magic number.",N,N],[17,"SELFMAG",E,"Sizeof ELF magic number.",N,N],[17,"EI_CLASS",E,"File class byte index.",N,N],[17,"ELFCLASSNONE",E,"Invalid class.",N,N],[17,"ELFCLASS32",E,"32-bit objects.",N,N],[17,"ELFCLASS64",E,"64-bit objects.",N,N],[17,"ELFCLASSNUM",E,"ELF class number.",N,N],[17,"EI_DATA",E,"Data encoding byte index.",N,N],[17,"ELFDATANONE",E,"Invalid data encoding.",N,N],[17,"ELFDATA2LSB",E,"2's complement, little endian.",N,N],[17,"ELFDATA2MSB",E,"2's complement, big endian.",N,N],[17,"EI_VERSION",E,"File version byte index.",N,N],[17,"EV_CURRENT",E,"Current ELF version.",N,N],[17,"EI_OSABI",E,"OS ABI byte index.",N,N],[17,"ELFOSABI_NONE",E,"UNIX System V ABI.",N,N],[17,"EI_ABIVERSION",E,"ABI version byte index.",N,N],[17,"SIZEOF_IDENT",E,"Number of bytes in an identifier.",N,N],[11,"size",E,R[3921],9,[[["ctx"]],["usize"]]],[11,R[3904],E,"Returns the container type this header specifies",9,[[["self"]],[[R[3],[R[3904]]],[R[3904]]]]],[11,R[4679],E,"Returns the byte order this header specifies",9,[[["self"]],[["endian"],[R[3],["endian"]]]]],[11,"new",E,E,9,[[["ctx"]],["self"]]],[0,"program_header",R[3905],E,N,N],[3,R[3906],R[3908],"A unified ProgramHeader - convertable to and from 32-bit…",N,N],[12,"p_type",E,E,12,N],[12,"p_flags",E,E,12,N],[12,"p_offset",E,E,12,N],[12,"p_vaddr",E,E,12,N],[12,"p_paddr",E,E,12,N],[12,"p_filesz",E,E,12,N],[12,"p_memsz",E,E,12,N],[12,"p_align",E,E,12,N],[5,"pt_to_str",E,E,N,[[["u32"]],["str"]]],[0,"program_header32",E,E,N,N],[3,R[3906],R[4201],"A 64-bit ProgramHeader typically specifies how to map…",N,N],[12,"p_type",E,R[3909],13,N],[12,"p_offset",E,R[3911],13,N],[12,"p_vaddr",E,R[3912],13,N],[12,"p_paddr",E,R[3913],13,N],[12,"p_filesz",E,R[3914],13,N],[12,"p_memsz",E,R[3915],13,N],[12,"p_flags",E,R[3910],13,N],[12,"p_align",E,R[3916],13,N],[17,R[3917],E,E,N,N],[11,"parse",E,E,13,[[["endian"],["usize"]],[[R[3],["vec"]],["vec",[R[3907]]]]]],[11,R[130],E,E,13,[[["usize"]],[["vec",[R[3907]]],[R[3907]]]]],[11,R[3918],E,E,13,[[["usize"]]]],[11,"from_fd",E,E,13,[[["file"],["u64"],["usize"]],[[R[3],["vec"]],["vec",[R[3907]]]]]],[0,"program_header64",R[3908],E,N,N],[3,R[3906],R[4202],"A 32-bit ProgramHeader typically specifies how to map…",N,N],[12,"p_type",E,R[3909],14,N],[12,"p_flags",E,R[3910],14,N],[12,"p_offset",E,R[3911],14,N],[12,"p_vaddr",E,R[3912],14,N],[12,"p_paddr",E,R[3913],14,N],[12,"p_filesz",E,R[3914],14,N],[12,"p_memsz",E,R[3915],14,N],[12,"p_align",E,R[3916],14,N],[17,R[3917],E,E,N,N],[11,"parse",E,E,14,[[["endian"],["usize"]],[[R[3],["vec"]],["vec",[R[3907]]]]]],[11,R[130],E,E,14,[[["usize"]],[[R[3907]],["vec",[R[3907]]]]]],[11,R[3918],E,E,14,[[["usize"]]]],[11,"from_fd",E,E,14,[[["file"],["u64"],["usize"]],[[R[3],["vec"]],["vec",[R[3907]]]]]],[17,"PT_NULL",R[3908],"Program header table entry unused",N,N],[17,"PT_LOAD",E,"Loadable program segment",N,N],[17,"PT_DYNAMIC",E,"Dynamic linking information",N,N],[17,"PT_INTERP",E,"Program interpreter",N,N],[17,"PT_NOTE",E,"Auxiliary information",N,N],[17,"PT_SHLIB",E,"Reserved",N,N],[17,"PT_PHDR",E,"Entry for header table itself",N,N],[17,"PT_TLS",E,"Thread-local storage segment",N,N],[17,"PT_NUM",E,"Number of defined types",N,N],[17,"PT_LOOS",E,R[3987],N,N],[17,"PT_GNU_EH_FRAME",E,"GCC .eh_frame_hdr segment",N,N],[17,"PT_GNU_STACK",E,"Indicates stack executability",N,N],[17,"PT_GNU_RELRO",E,"Read-only after relocation",N,N],[17,"PT_LOSUNW",E,R[3919],N,N],[17,"PT_SUNWBSS",E,R[3919],N,N],[17,"PT_SUNWSTACK",E,"Stack segment",N,N],[17,"PT_HISUNW",E,R[3920],N,N],[17,"PT_HIOS",E,R[3920],N,N],[17,"PT_LOPROC",E,R[3988],N,N],[17,"PT_ARM_EXIDX",E,"ARM unwind segment",N,N],[17,"PT_HIPROC",E,R[3989],N,N],[17,"PF_X",E,"Segment is executable",N,N],[17,"PF_W",E,"Segment is writable",N,N],[17,"PF_R",E,"Segment is readable",N,N],[11,"size",E,R[3921],12,[[["ctx"]],["usize"]]],[11,"new",E,"Create a new `PT_LOAD` ELF program header",12,[[],["self"]]],[11,"file_range",E,"Returns this program header's file offset range",12,[[["self"]],[["range",["usize"]],["usize"]]]],[11,"vm_range",E,"Returns this program header's virtual memory range",12,[[["self"]],[["range",["usize"]],["usize"]]]],[11,"executable",E,"Sets the executable flag",12,[[["self"]]]],[11,"write",E,"Sets the write flag",12,[[["self"]]]],[11,"read",E,"Sets the read flag",12,[[["self"]]]],[11,R[3942],E,"Whether this program header is executable",12,[[["self"]],["bool"]]],[11,"is_read",E,"Whether this program header is readable",12,[[["self"]],["bool"]]],[11,"is_write",E,"Whether this program header is writable",12,[[["self"]],["bool"]]],[11,"parse",E,E,12,[[["ctx"],["usize"]],[[R[3],["vec"]],["vec",[R[3907]]]]]],[0,"section_header",R[3905],E,N,N],[3,R[3922],R[3935],"A unified SectionHeader - convertable to and from 32-bit…",N,N],[12,"sh_name",E,R[3923],15,N],[12,"sh_type",E,R[3924],15,N],[12,"sh_flags",E,R[3925],15,N],[12,"sh_addr",E,R[3926],15,N],[12,"sh_offset",E,R[3927],15,N],[12,"sh_size",E,R[3928],15,N],[12,"sh_link",E,R[3929],15,N],[12,"sh_info",E,R[3930],15,N],[12,R[3931],E,R[3932],15,N],[12,R[3937],E,R[3933],15,N],[5,"sht_to_str",E,E,N,[[["u32"]],["str"]]],[5,"shf_to_str",E,E,N,[[["u32"]],["str"]]],[0,"section_header32",E,E,N,N],[3,R[3922],R[4203],R[3936],N,N],[12,"sh_name",E,R[3923],16,N],[12,"sh_type",E,R[3924],16,N],[12,"sh_flags",E,R[3925],16,N],[12,"sh_addr",E,R[3926],16,N],[12,"sh_offset",E,R[3927],16,N],[12,"sh_size",E,R[3928],16,N],[12,"sh_link",E,R[3929],16,N],[12,"sh_info",E,R[3930],16,N],[12,R[3931],E,R[3932],16,N],[12,R[3937],E,R[3933],16,N],[17,R[3938],E,E,N,N],[11,R[130],E,E,16,[[["usize"]],[["vec",[R[3934]]],[R[3934]]]]],[11,"from_fd",E,E,16,[[["file"],["u64"],["usize"]],[["vec",[R[3934]]],[R[3],["vec"]]]]],[0,"section_header64",R[3935],E,N,N],[3,R[3922],R[4204],R[3936],N,N],[12,"sh_name",E,R[3923],17,N],[12,"sh_type",E,R[3924],17,N],[12,"sh_flags",E,R[3925],17,N],[12,"sh_addr",E,R[3926],17,N],[12,"sh_offset",E,R[3927],17,N],[12,"sh_size",E,R[3928],17,N],[12,"sh_link",E,R[3929],17,N],[12,"sh_info",E,R[3930],17,N],[12,R[3931],E,R[3932],17,N],[12,R[3937],E,R[3933],17,N],[17,R[3938],E,E,N,N],[11,R[130],E,E,17,[[["usize"]],[[R[3934]],["vec",[R[3934]]]]]],[11,"from_fd",E,E,17,[[["file"],["u64"],["usize"]],[["vec",[R[3934]]],[R[3],["vec"]]]]],[17,"SHN_UNDEF",R[3935],"Undefined section.",N,N],[17,"SHN_LORESERVE",E,"Start of reserved indices.",N,N],[17,"SHN_LOPROC",E,R[3940],N,N],[17,"SHN_BEFORE",E,"Order section before all others (Solaris).",N,N],[17,"SHN_AFTER",E,"Order section after all others (Solaris).",N,N],[17,"SHN_HIPROC",E,R[3941],N,N],[17,"SHN_LOOS",E,R[3952],N,N],[17,"SHN_HIOS",E,R[3953],N,N],[17,"SHN_ABS",E,"Associated symbol is absolute.",N,N],[17,"SHN_COMMON",E,"Associated symbol is common.",N,N],[17,"SHN_XINDEX",E,"Index is in extra table.",N,N],[17,"SHN_HIRESERVE",E,"End of reserved indices.",N,N],[17,"SHT_NULL",E,"Section header table entry unused.",N,N],[17,"SHT_PROGBITS",E,"Program data.",N,N],[17,"SHT_SYMTAB",E,"Symbol table.",N,N],[17,"SHT_STRTAB",E,"String table.",N,N],[17,"SHT_RELA",E,"Relocation entries with addends.",N,N],[17,"SHT_HASH",E,"Symbol hash table.",N,N],[17,"SHT_DYNAMIC",E,"Dynamic linking information.",N,N],[17,"SHT_NOTE",E,"Notes.",N,N],[17,"SHT_NOBITS",E,"Program space with no data (bss).",N,N],[17,"SHT_REL",E,"Relocation entries, no addends.",N,N],[17,"SHT_SHLIB",E,"Reserved.",N,N],[17,"SHT_DYNSYM",E,"Dynamic linker symbol table.",N,N],[17,"SHT_INIT_ARRAY",E,"Array of constructors.",N,N],[17,"SHT_FINI_ARRAY",E,"Array of destructors.",N,N],[17,"SHT_PREINIT_ARRAY",E,"Array of pre-constructors.",N,N],[17,"SHT_GROUP",E,"Section group.",N,N],[17,"SHT_SYMTAB_SHNDX",E,"Extended section indeces.",N,N],[17,"SHT_NUM",E,R[3939],N,N],[17,"SHT_LOOS",E,"Start OS-specific.",N,N],[17,"SHT_GNU_ATTRIBUTES",E,"Object attributes.",N,N],[17,"SHT_GNU_HASH",E,"GNU-style hash table.",N,N],[17,"SHT_GNU_LIBLIST",E,"Prelink library list.",N,N],[17,"SHT_CHECKSUM",E,"Checksum for DSO content.",N,N],[17,"SHT_LOSUNW",E,"Sun-specific low bound.",N,N],[17,"SHT_SUNW_MOVE",E,E,N,N],[17,"SHT_SUNW_COMDAT",E,E,N,N],[17,"SHT_SUNW_SYMINFO",E,E,N,N],[17,"SHT_GNU_VERDEF",E,"Version definition section.",N,N],[17,"SHT_GNU_VERNEED",E,"Version needs section.",N,N],[17,"SHT_GNU_VERSYM",E,"Version symbol table.",N,N],[17,"SHT_HISUNW",E,"Sun-specific high bound.",N,N],[17,"SHT_HIOS",E,"End OS-specific type.",N,N],[17,"SHT_LOPROC",E,R[3940],N,N],[17,"SHT_HIPROC",E,R[3941],N,N],[17,"SHT_LOUSER",E,"Start of application-specific.",N,N],[17,"SHT_HIUSER",E,"End of application-specific.",N,N],[17,"SHF_WRITE",E,"Writable.",N,N],[17,"SHF_ALLOC",E,"Occupies memory during execution.",N,N],[17,"SHF_EXECINSTR",E,"Executable.",N,N],[17,"SHF_MERGE",E,"Might be merged.",N,N],[17,"SHF_STRINGS",E,"Contains nul-terminated strings.",N,N],[17,"SHF_INFO_LINK",E,"`sh_info' contains SHT index.",N,N],[17,"SHF_LINK_ORDER",E,"Preserve order after combining.",N,N],[17,"SHF_OS_NONCONFORMING",E,"Non-standard OS specific handling required.",N,N],[17,"SHF_GROUP",E,"Section is member of a group.",N,N],[17,"SHF_TLS",E,"Section hold thread-local data.",N,N],[17,"SHF_COMPRESSED",E,"Section with compressed data.",N,N],[17,"SHF_MASKOS",E,"OS-specific..",N,N],[17,"SHF_MASKPROC",E,"Processor-specific.",N,N],[17,"SHF_ORDERED",E,"Special ordering requirement (Solaris).",N,N],[17,"SHF_NUM_REGULAR_FLAGS",E,"Number of \"regular\" section header flags",N,N],[17,"SHF_FLAGS",E,E,N,N],[11,"size",E,R[3921],15,[[["ctx"]],["usize"]]],[11,"new",E,E,15,[[],["self"]]],[11,"file_range",E,"Returns this section header's file offset range",15,[[["self"]],[["range",["usize"]],["usize"]]]],[11,"vm_range",E,"Returns this section header's virtual memory range",15,[[["self"]],[["range",["usize"]],["usize"]]]],[11,"parse",E,"Parse `count` section headers from `bytes` at `offset`,…",15,[[["ctx"],["usize"]],[["vec",[R[3934]]],[R[3],["vec"]]]]],[11,"check_size",E,E,15,[[["self"],["usize"]],[R[3]]]],[11,"is_relocation",E,E,15,[[["self"]],["bool"]]],[11,R[3942],E,E,15,[[["self"]],["bool"]]],[11,"is_writable",E,E,15,[[["self"]],["bool"]]],[11,"is_alloc",E,E,15,[[["self"]],["bool"]]],[0,"compression_header",R[3905],E,N,N],[3,R[3943],R[3949],"A unified CompressionHeader - convertable to and from…",N,N],[12,"ch_type",E,R[3944],18,N],[12,"ch_size",E,R[3945],18,N],[12,R[3946],E,R[3947],18,N],[0,"compression_header32",E,E,N,N],[3,R[3943],R[4205],R[3950],N,N],[12,"ch_type",E,R[3944],19,N],[12,"ch_size",E,R[3945],19,N],[12,R[3946],E,R[3947],19,N],[17,R[3951],E,E,N,N],[11,R[130],E,E,19,[[],[R[3948]]]],[11,"from_fd",E,E,19,[[["file"],["u64"]],[[R[3948]],[R[3],[R[3948]]]]]],[0,"compression_header64",R[3949],E,N,N],[3,R[3943],R[4206],R[3950],N,N],[12,"ch_type",E,R[3944],20,N],[12,"ch_reserved",E,E,20,N],[12,"ch_size",E,R[3945],20,N],[12,R[3946],E,R[3947],20,N],[17,R[3951],E,E,N,N],[11,R[130],E,E,20,[[],[R[3948]]]],[11,"from_fd",E,E,20,[[["file"],["u64"]],[[R[3],[R[3948]]],[R[3948]]]]],[17,"ELFCOMPRESS_ZLIB",R[3949],"ZLIB/DEFLATE algorithm.",N,N],[17,"ELFCOMPRESS_LOOS",E,R[3952],N,N],[17,"ELFCOMPRESS_HIOS",E,R[3953],N,N],[17,"ELFCOMPRESS_LOPROC",E,R[3940],N,N],[17,"ELFCOMPRESS_HIPROC",E,R[3941],N,N],[11,"size",E,"Return the size of the underlying compression header,…",18,[[["ctx"]],["usize"]]],[11,"new",E,E,18,[[],["self"]]],[11,"parse",E,"Parse a compression header from `bytes` at `offset`, using…",18,[[["ctx"],["usize"]],[[R[3948]],[R[3],[R[3948]]]]]],[0,"sym",R[3905],E,N,N],[3,"Sym",R[3954],"A unified Sym definition - convertable to and from 32-bit…",N,N],[12,"st_name",E,E,21,N],[12,"st_info",E,E,21,N],[12,"st_other",E,E,21,N],[12,"st_shndx",E,E,21,N],[12,"st_value",E,E,21,N],[12,"st_size",E,E,21,N],[3,"Symtab",E,"An ELF symbol table, allowing lazy iteration over symbols",N,N],[3,R[4342],E,"An iterator over symbols in an ELF symbol table",N,N],[5,"st_bind",E,R[3965],N,[[["u8"]],["u8"]]],[5,"st_type",E,R[3966],N,[[["u8"]],["u8"]]],[5,R[3967],E,R[3968],N,[[["u8"]],["u8"]]],[5,R[3964],E,"Is this information defining an import?",N,[[["u64"],["u8"]],["bool"]]],[5,R[5698],E,"Convenience function to get the &'static str type from the…",N,[[["u8"]],["str"]]],[5,"bind_to_str",E,"Get the string for some bind.",N,[[["u8"]],["str"]]],[5,R[4038],E,"Get the string for some type.",N,[[["u8"]],["str"]]],[5,"visibility_to_str",E,"Get the string for some visibility",N,[[["u8"]],["str"]]],[0,"sym32",E,E,N,N],[3,"Sym",R[4207],"32-bit Sym - used for both static and dynamic symbol…",N,N],[12,"st_name",E,R[3955],22,N],[12,"st_value",E,R[3959],22,N],[12,"st_size",E,R[3960],22,N],[12,"st_info",E,R[3956],22,N],[12,"st_other",E,R[3957],22,N],[12,"st_shndx",E,R[3958],22,N],[5,R[3982],E,E,N,[[["usize"]]]],[5,"from_fd",E,E,N,[[["file"],["usize"]],[[R[3],["vec"]],["vec",["sym"]]]]],[17,"SIZEOF_SYM",E,E,N,N],[11,R[3964],E,R[3961],22,[[["self"]],["bool"]]],[11,R[3962],E,R[3963],22,[[["self"]],["bool"]]],[0,"sym64",R[3954],E,N,N],[3,"Sym",R[4208],"64-bit Sym - used for both static and dynamic symbol…",N,N],[12,"st_name",E,R[3955],23,N],[12,"st_info",E,R[3956],23,N],[12,"st_other",E,R[3957],23,N],[12,"st_shndx",E,R[3958],23,N],[12,"st_value",E,R[3959],23,N],[12,"st_size",E,R[3960],23,N],[5,R[3982],E,E,N,[[["usize"]]]],[5,"from_fd",E,E,N,[[["file"],["usize"]],[["vec",["sym"]],[R[3],["vec"]]]]],[17,"SIZEOF_SYM",E,E,N,N],[11,R[3964],E,R[3961],23,[[["self"]],["bool"]]],[11,R[3962],E,R[3963],23,[[["self"]],["bool"]]],[17,"STB_LOCAL",R[3954],"=== Sym bindings === Local symbol.",N,N],[17,"STB_GLOBAL",E,"Global symbol.",N,N],[17,"STB_WEAK",E,"Weak symbol.",N,N],[17,"STB_NUM",E,"Number of defined types..",N,N],[17,"STB_LOOS",E,R[3952],N,N],[17,"STB_GNU_UNIQUE",E,"Unique symbol..",N,N],[17,"STB_HIOS",E,R[3953],N,N],[17,"STB_LOPROC",E,R[3940],N,N],[17,"STB_HIPROC",E,R[3941],N,N],[17,"STT_NOTYPE",E,"=== Sym types === Symbol type is unspecified.",N,N],[17,"STT_OBJECT",E,"Symbol is a data object.",N,N],[17,"STT_FUNC",E,"Symbol is a code object.",N,N],[17,"STT_SECTION",E,"Symbol associated with a section.",N,N],[17,"STT_FILE",E,"Symbol's name is file name.",N,N],[17,"STT_COMMON",E,"Symbol is a common data object.",N,N],[17,"STT_TLS",E,"Symbol is thread-local data object.",N,N],[17,"STT_NUM",E,R[3939],N,N],[17,"STT_LOOS",E,R[3952],N,N],[17,"STT_GNU_IFUNC",E,"Symbol is indirect code object.",N,N],[17,"STT_HIOS",E,R[3953],N,N],[17,"STT_LOPROC",E,R[3940],N,N],[17,"STT_HIPROC",E,R[3941],N,N],[17,"STV_DEFAULT",E,"=== Sym visibility === Default: Visibility is specified by…",N,N],[17,"STV_INTERNAL",E,"Internal: use of this attribute is currently reserved.",N,N],[17,"STV_HIDDEN",E,"Hidden: Not visible to other components, necessarily…",N,N],[17,"STV_PROTECTED",E,"Protected: Symbol defined in current component is visible…",N,N],[17,"STV_EXPORTED",E,"Exported: ensures a symbol remains global, cannot be…",N,N],[17,"STV_SINGLETON",E,"Singleton: ensures a symbol remains global, and that a…",N,N],[17,"STV_ELIMINATE",E,"Eliminate: extends the hidden attribute. Not written in…",N,N],[11,"size",E,E,21,[[[R[3904]]],["usize"]]],[11,R[3964],E,R[3961],21,[[["self"]],["bool"]]],[11,R[3962],E,R[3963],21,[[["self"]],["bool"]]],[11,"st_bind",E,R[3965],21,[[["self"]],["u8"]]],[11,"st_type",E,R[3966],21,[[["self"]],["u8"]]],[11,R[3967],E,R[3968],21,[[["self"]],["u8"]]],[11,"parse",E,"Parse `count` vector of ELF symbols from `offset`",21,[[["ctx"],["usize"]],[["vec",["sym"]],[R[3],["vec"]]]]],[11,"parse",E,"Parse a table of `count` ELF symbols from `offset`.",24,[[["ctx"],["usize"]],[[R[3],["symtab"]],["symtab"]]]],[11,"get",E,"Try to parse a single symbol from the binary, at `index`.",24,[[["self"],["usize"]],[[R[23],["sym"]],["sym"]]]],[11,"len",E,"The number of symbols in the table.",24,[[["self"]],["usize"]]],[11,R[25],E,"Returns true if table has no symbols.",24,[[["self"]],["bool"]]],[11,"iter",E,"Iterate over all symbols.",24,[[["self"]],["symiterator"]]],[11,"to_vec",E,"Parse all symbols into a vector.",24,[[["self"]],[["vec",["sym"]],["sym"]]]],[0,"dynamic",R[3905],E,N,N],[3,"Dyn",R[3974],E,N,N],[12,"d_tag",E,E,25,N],[12,"d_val",E,E,25,N],[3,"Dynamic",E,E,N,N],[12,"dyns",E,E,26,N],[12,"info",E,E,26,N],[3,R[3969],E,R[3970],N,N],[12,"rela",E,E,27,N],[12,"relasz",E,E,27,N],[12,"relaent",E,E,27,N],[12,"relacount",E,E,27,N],[12,"rel",E,E,27,N],[12,"relsz",E,E,27,N],[12,"relent",E,E,27,N],[12,"relcount",E,E,27,N],[12,"gnu_hash",E,E,27,N],[12,"hash",E,E,27,N],[12,"strtab",E,E,27,N],[12,"strsz",E,E,27,N],[12,"symtab",E,E,27,N],[12,"syment",E,E,27,N],[12,"pltgot",E,E,27,N],[12,"pltrelsz",E,E,27,N],[12,"pltrel",E,E,27,N],[12,"jmprel",E,E,27,N],[12,"verneed",E,E,27,N],[12,R[3978],E,E,27,N],[12,"versym",E,E,27,N],[12,"init",E,E,27,N],[12,"fini",E,E,27,N],[12,R[3979],E,E,27,N],[12,R[3971],E,E,27,N],[12,R[3980],E,E,27,N],[12,R[3972],E,E,27,N],[12,R[3973],E,E,27,N],[12,"flags",E,E,27,N],[12,"flags_1",E,E,27,N],[12,"soname",E,E,27,N],[12,"textrel",E,E,27,N],[5,"tag_to_str",E,"Converts a tag to its string representation.",N,[[["u64"]],["str"]]],[0,"dyn32",E,E,N,N],[3,"Dyn",R[4209],R[3975],N,N],[12,"d_tag",E,R[3976],28,N],[12,"d_val",E,R[3977],28,N],[3,R[3969],E,R[3970],N,N],[12,"rela",E,E,29,N],[12,"relasz",E,E,29,N],[12,"relaent",E,E,29,N],[12,"relacount",E,E,29,N],[12,"rel",E,E,29,N],[12,"relsz",E,E,29,N],[12,"relent",E,E,29,N],[12,"relcount",E,E,29,N],[12,"gnu_hash",E,E,29,N],[12,"hash",E,E,29,N],[12,"strtab",E,E,29,N],[12,"strsz",E,E,29,N],[12,"symtab",E,E,29,N],[12,"syment",E,E,29,N],[12,"pltgot",E,E,29,N],[12,"pltrelsz",E,E,29,N],[12,"pltrel",E,E,29,N],[12,"jmprel",E,E,29,N],[12,"verneed",E,E,29,N],[12,R[3978],E,E,29,N],[12,"versym",E,E,29,N],[12,"init",E,E,29,N],[12,"fini",E,E,29,N],[12,R[3979],E,E,29,N],[12,R[3971],E,E,29,N],[12,R[3980],E,E,29,N],[12,R[3972],E,E,29,N],[12,R[3973],E,E,29,N],[12,"flags",E,E,29,N],[12,"flags_1",E,E,29,N],[12,"soname",E,E,29,N],[12,"textrel",E,E,29,N],[5,"from_fd",E,R[3981],N,[[["file"]],[[R[3],[R[23]]],[R[23],["vec"]]]]],[5,R[3982],E,R[3983],N,[[["usize"]]]],[5,"from_phdrs",E,R[3984],N,[[["usize"]],[R[23]]]],[5,"get_needed",E,R[3985],N,[[["usize"]],[["vec",["str"]],["str"]]]],[17,"SIZEOF_DYN",E,E,N,N],[11,"update",E,E,29,[[["self"],["dyn"]]]],[11,"new",E,E,29,[[],[R[3986]]]],[0,"dyn64",R[3974],E,N,N],[3,"Dyn",R[4210],R[3975],N,N],[12,"d_tag",E,R[3976],30,N],[12,"d_val",E,R[3977],30,N],[3,R[3969],E,R[3970],N,N],[12,"rela",E,E,31,N],[12,"relasz",E,E,31,N],[12,"relaent",E,E,31,N],[12,"relacount",E,E,31,N],[12,"rel",E,E,31,N],[12,"relsz",E,E,31,N],[12,"relent",E,E,31,N],[12,"relcount",E,E,31,N],[12,"gnu_hash",E,E,31,N],[12,"hash",E,E,31,N],[12,"strtab",E,E,31,N],[12,"strsz",E,E,31,N],[12,"symtab",E,E,31,N],[12,"syment",E,E,31,N],[12,"pltgot",E,E,31,N],[12,"pltrelsz",E,E,31,N],[12,"pltrel",E,E,31,N],[12,"jmprel",E,E,31,N],[12,"verneed",E,E,31,N],[12,R[3978],E,E,31,N],[12,"versym",E,E,31,N],[12,"init",E,E,31,N],[12,"fini",E,E,31,N],[12,R[3979],E,E,31,N],[12,R[3971],E,E,31,N],[12,R[3980],E,E,31,N],[12,R[3972],E,E,31,N],[12,R[3973],E,E,31,N],[12,"flags",E,E,31,N],[12,"flags_1",E,E,31,N],[12,"soname",E,E,31,N],[12,"textrel",E,E,31,N],[5,"from_fd",E,R[3981],N,[[["file"]],[[R[3],[R[23]]],[R[23],["vec"]]]]],[5,R[3982],E,R[3983],N,[[["usize"]]]],[5,"from_phdrs",E,R[3984],N,[[["usize"]],[R[23]]]],[5,"get_needed",E,R[3985],N,[[["usize"]],[["vec",["str"]],["str"]]]],[17,"SIZEOF_DYN",E,E,N,N],[11,"update",E,E,31,[[["self"],["dyn"]]]],[11,"new",E,E,31,[[],[R[3986]]]],[17,"DT_NULL",R[3974],"Marks end of dynamic section",N,N],[17,"DT_NEEDED",E,"Name of needed library",N,N],[17,"DT_PLTRELSZ",E,"Size in bytes of PLT relocs",N,N],[17,"DT_PLTGOT",E,"Processor defined value",N,N],[17,"DT_HASH",E,"Address of symbol hash table",N,N],[17,"DT_STRTAB",E,"Address of string table",N,N],[17,"DT_SYMTAB",E,"Address of symbol table",N,N],[17,"DT_RELA",E,"Address of Rela relocs",N,N],[17,"DT_RELASZ",E,"Total size of Rela relocs",N,N],[17,"DT_RELAENT",E,"Size of one Rela reloc",N,N],[17,"DT_STRSZ",E,"Size of string table",N,N],[17,"DT_SYMENT",E,"Size of one symbol table entry",N,N],[17,"DT_INIT",E,"Address of init function",N,N],[17,"DT_FINI",E,"Address of termination function",N,N],[17,"DT_SONAME",E,"Name of shared object",N,N],[17,"DT_RPATH",E,"Library search path (deprecated)",N,N],[17,"DT_SYMBOLIC",E,"Start symbol search here",N,N],[17,"DT_REL",E,"Address of Rel relocs",N,N],[17,"DT_RELSZ",E,"Total size of Rel relocs",N,N],[17,"DT_RELENT",E,"Size of one Rel reloc",N,N],[17,"DT_PLTREL",E,"Type of reloc in PLT",N,N],[17,"DT_DEBUG",E,"For debugging; unspecified",N,N],[17,"DT_TEXTREL",E,"Reloc might modify .text",N,N],[17,"DT_JMPREL",E,"Address of PLT relocs",N,N],[17,"DT_BIND_NOW",E,"Process relocations of object",N,N],[17,"DT_INIT_ARRAY",E,"Array with addresses of init fct",N,N],[17,"DT_FINI_ARRAY",E,"Array with addresses of fini fct",N,N],[17,"DT_INIT_ARRAYSZ",E,"Size in bytes of DT_INIT_ARRAY",N,N],[17,"DT_FINI_ARRAYSZ",E,"Size in bytes of DT_FINI_ARRAY",N,N],[17,"DT_RUNPATH",E,"Library search path",N,N],[17,"DT_FLAGS",E,"Flags for the object being loaded",N,N],[17,"DT_ENCODING",E,"Start of encoded range",N,N],[17,"DT_PREINIT_ARRAY",E,"Array with addresses of preinit fct",N,N],[17,"DT_PREINIT_ARRAYSZ",E,"size in bytes of DT_PREINIT_ARRAY",N,N],[17,"DT_NUM",E,"Number used",N,N],[17,"DT_LOOS",E,R[3987],N,N],[17,"DT_HIOS",E,R[3920],N,N],[17,"DT_LOPROC",E,R[3988],N,N],[17,"DT_HIPROC",E,R[3989],N,N],[17,"DT_ADDRRNGLO",E,"DT_* entries which fall between DT_ADDRRNGHI &…",N,N],[17,"DT_GNU_HASH",E,"GNU-style hash table",N,N],[17,"DT_TLSDESC_PLT",E,E,N,N],[17,"DT_TLSDESC_GOT",E,E,N,N],[17,"DT_GNU_CONFLICT",E,"Start of conflict section",N,N],[17,"DT_GNU_LIBLIST",E,"Library list",N,N],[17,"DT_CONFIG",E,"Configuration information",N,N],[17,"DT_DEPAUDIT",E,"Dependency auditing",N,N],[17,"DT_AUDIT",E,"Object auditing",N,N],[17,"DT_PLTPAD",E,"PLT padding",N,N],[17,"DT_MOVETAB",E,"Move table",N,N],[17,"DT_SYMINFO",E,"Syminfo table",N,N],[17,"DT_ADDRRNGHI",E,E,N,N],[17,"DT_ADDRNUM",E,E,N,N],[17,"DT_VERSYM",E,"The versioning entry types. The next are defined as part…",N,N],[17,"DT_RELACOUNT",E,E,N,N],[17,"DT_RELCOUNT",E,E,N,N],[17,"DT_FLAGS_1",E,"State flags, see DF_1_* below",N,N],[17,"DT_VERDEF",E,"Address of version definition table",N,N],[17,"DT_VERDEFNUM",E,"Number of version definitions",N,N],[17,"DT_VERNEED",E,"Address of table with needed versions",N,N],[17,"DT_VERNEEDNUM",E,"Number of needed versions",N,N],[17,"DF_ORIGIN",E,"Object may use DF_ORIGIN.",N,N],[17,"DF_SYMBOLIC",E,"Symbol resolutions starts here.",N,N],[17,"DF_TEXTREL",E,"Object contains text relocations.",N,N],[17,"DF_BIND_NOW",E,"No lazy binding for this object.",N,N],[17,"DF_STATIC_TLS",E,"Module uses the static TLS model.",N,N],[17,"DF_1_NOW",E,"=== State flags === selectable in the `d_un.d_val` element…",N,N],[17,"DF_1_GLOBAL",E,"Set RTLD_GLOBAL for this object.",N,N],[17,"DF_1_GROUP",E,"Set RTLD_GROUP for this object.",N,N],[17,"DF_1_NODELETE",E,"Set RTLD_NODELETE for this object.",N,N],[17,"DF_1_LOADFLTR",E,"Trigger filtee loading at runtime.",N,N],[17,"DF_1_INITFIRST",E,"Set RTLD_INITFIRST for this object.",N,N],[17,"DF_1_NOOPEN",E,"Set RTLD_NOOPEN for this object.",N,N],[17,"DF_1_ORIGIN",E,"$ORIGIN must be handled.",N,N],[17,"DF_1_DIRECT",E,"Direct binding enabled.",N,N],[17,"DF_1_TRANS",E,E,N,N],[17,"DF_1_INTERPOSE",E,"Object is used to interpose.",N,N],[17,"DF_1_NODEFLIB",E,"Ignore default lib search path.",N,N],[17,"DF_1_NODUMP",E,"Object can't be dldump'ed.",N,N],[17,"DF_1_CONFALT",E,"Configuration alternative created.",N,N],[17,"DF_1_ENDFILTEE",E,"Filtee terminates filters search.",N,N],[17,"DF_1_DISPRELDNE",E,"Disp reloc applied at build time.",N,N],[17,"DF_1_DISPRELPND",E,"Disp reloc applied at run-time.",N,N],[17,"DF_1_NODIRECT",E,"Object has no-direct binding.",N,N],[17,"DF_1_IGNMULDEF",E,E,N,N],[17,"DF_1_NOKSYMS",E,E,N,N],[17,"DF_1_NOHDR",E,E,N,N],[17,"DF_1_EDITED",E,"Object is modified after built.",N,N],[17,"DF_1_NORELOC",E,E,N,N],[17,"DF_1_SYMINTPOSE",E,"Object has individual interposers.",N,N],[17,"DF_1_GLOBAUDIT",E,"Global auditing required.",N,N],[17,"DF_1_SINGLETON",E,"Singleton dyn are used.",N,N],[11,"size",E,E,25,[[[R[3904]]],["usize"]]],[11,"parse",E,"Returns a vector of dynamic entries from the underlying…",26,[[["ctx"]],[[R[23]],[R[3],[R[23]]]]]],[11,"get_libraries",E,E,26,[[["self"],["strtab"]],[["vec",["str"]],["str"]]]],[11,"update",E,E,27,[[["self"],["dyn"]]]],[11,"new",E,E,27,[[],[R[3986]]]],[0,"reloc",R[3905],"Relocation computations",N,N],[3,"Reloc",R[3990],"A unified ELF relocation structure",N,N],[12,"r_offset",E,"Address",32,N],[12,"r_addend",E,"Addend",32,N],[12,"r_sym",E,"The index into the corresponding symbol table - either…",32,N],[12,"r_type",E,"The relocation type",32,N],[3,R[4039],E,"An ELF section containing relocations, allowing lazy…",N,N],[3,R[4343],E,E,N,N],[5,"r_to_str",E,E,N,[[["u16"],["u32"]],["str"]]],[0,"reloc32",E,E,N,N],[3,"Rela",R[4211],R[3991],N,N],[12,"r_offset",E,"Address",33,N],[12,"r_info",E,R[3992],33,N],[12,"r_addend",E,"Addend",33,N],[3,"Rel",E,R[3993],N,N],[12,"r_offset",E,"address",34,N],[12,"r_info",E,R[3994],34,N],[5,"r_sym",E,E,N,[[["u32"]],["u32"]]],[5,"r_type",E,E,N,[[["u32"]],["u32"]]],[5,"r_info",E,E,N,[[["u32"]],["u32"]]],[5,R[3995],E,R[3996],N,[[["usize"]]]],[5,R[3997],E,R[3998],N,[[["usize"]]]],[5,"from_fd",E,E,N,[[["file"],["usize"]],[[R[3],["vec"]],["vec",["rela"]]]]],[17,R[3999],E,E,N,N],[17,"SIZEOF_REL",E,E,N,N],[0,"reloc64",R[3990],E,N,N],[3,"Rela",R[4212],R[3991],N,N],[12,"r_offset",E,"Address",35,N],[12,"r_info",E,R[3992],35,N],[12,"r_addend",E,"Addend",35,N],[3,"Rel",E,R[3993],N,N],[12,"r_offset",E,"address",36,N],[12,"r_info",E,R[3994],36,N],[5,"r_sym",E,E,N,[[["u64"]],["u32"]]],[5,"r_type",E,E,N,[[["u64"]],["u32"]]],[5,"r_info",E,E,N,[[["u64"]],["u64"]]],[5,R[3995],E,R[3996],N,[[["usize"]]]],[5,R[3997],E,R[3998],N,[[["usize"]]]],[5,"from_fd",E,E,N,[[["file"],["usize"]],[[R[3],["vec"]],["vec",["rela"]]]]],[17,R[3999],E,E,N,N],[17,"SIZEOF_REL",E,E,N,N],[17,"R_X86_64_NONE",R[3990],"No reloc.",N,N],[17,"R_X86_64_64",E,"Direct 64 bit.",N,N],[17,"R_X86_64_PC32",E,"PC relative 32 bit signed.",N,N],[17,"R_X86_64_GOT32",E,"32 bit GOT entry.",N,N],[17,"R_X86_64_PLT32",E,"32 bit PLT address.",N,N],[17,"R_X86_64_COPY",E,"Copy symbol at runtime.",N,N],[17,"R_X86_64_GLOB_DAT",E,"Create GOT entry.",N,N],[17,"R_X86_64_JUMP_SLOT",E,"Create PLT entry.",N,N],[17,"R_X86_64_RELATIVE",E,"Adjust by program base.",N,N],[17,"R_X86_64_GOTPCREL",E,"32 bit signed PC relative offset to GOT.",N,N],[17,"R_X86_64_32",E,"Direct 32 bit zero extended.",N,N],[17,"R_X86_64_32S",E,"Direct 32 bit sign extended.",N,N],[17,"R_X86_64_16",E,"Direct 16 bit zero extended.",N,N],[17,"R_X86_64_PC16",E,"16 bit sign extended pc relative.",N,N],[17,"R_X86_64_8",E,"Direct 8 bit sign extended.",N,N],[17,"R_X86_64_PC8",E,"8 bit sign extended pc relative.",N,N],[17,"R_X86_64_DTPMOD64",E,"ID of module containing symbol.",N,N],[17,"R_X86_64_DTPOFF64",E,"Offset in module's TLS block.",N,N],[17,"R_X86_64_TPOFF64",E,R[4000],N,N],[17,"R_X86_64_TLSGD",E,"32 bit signed PC relative offset to two GOT entries for GD…",N,N],[17,"R_X86_64_TLSLD",E,"32 bit signed PC relative offset to two GOT entries for LD…",N,N],[17,"R_X86_64_DTPOFF32",E,"Offset in TLS block.",N,N],[17,"R_X86_64_GOTTPOFF",E,"32 bit signed PC relative offset to GOT entry for IE symbol.",N,N],[17,"R_X86_64_TPOFF32",E,R[4000],N,N],[17,"R_X86_64_PC64",E,"PC relative 64 bit.",N,N],[17,"R_X86_64_GOTOFF64",E,"64 bit offset to GOT.",N,N],[17,"R_X86_64_GOTPC32",E,"32 bit signed pc relative offset to GOT.",N,N],[17,"R_X86_64_GOT64",E,"64-bit GOT entry offset.",N,N],[17,"R_X86_64_GOTPCREL64",E,"64-bit PC relative offset to GOT entry.",N,N],[17,"R_X86_64_GOTPC64",E,"64-bit PC relative offset to GOT.",N,N],[17,"R_X86_64_GOTPLT64",E,"like GOT64, says PLT entry needed.",N,N],[17,"R_X86_64_PLTOFF64",E,"64-bit GOT relative offset to PLT entry.",N,N],[17,"R_X86_64_SIZE32",E,"Size of symbol plus 32-bit addend.",N,N],[17,"R_X86_64_SIZE64",E,"Size of symbol plus 64-bit addend.",N,N],[17,"R_X86_64_GOTPC32_TLSDESC",E,"GOT offset for TLS descriptor..",N,N],[17,"R_X86_64_TLSDESC_CALL",E,"Marker for call through TLS descriptor..",N,N],[17,"R_X86_64_TLSDESC",E,"TLS descriptor..",N,N],[17,"R_X86_64_IRELATIVE",E,"Adjust indirectly by program base.",N,N],[17,"R_X86_64_RELATIVE64",E,"64-bit adjust by program base.",N,N],[17,"R_X86_64_GOTPCRELX",E,R[4001],N,N],[17,"R_X86_64_REX_GOTPCRELX",E,R[4001],N,N],[17,"R_X86_64_NUM",E,E,N,N],[17,"R_386_NONE",E,"No reloc",N,N],[17,"R_386_32",E,R[4002],N,N],[17,"R_386_PC32",E,R[4014],N,N],[17,"R_386_GOT32",E,R[4020],N,N],[17,"R_386_PLT32",E,"32 bit PLT address",N,N],[17,"R_386_COPY",E,R[4003],N,N],[17,"R_386_GLOB_DAT",E,R[4004],N,N],[17,"R_386_JMP_SLOT",E,R[4005],N,N],[17,"R_386_RELATIVE",E,R[4006],N,N],[17,"R_386_GOTOFF",E,R[4018],N,N],[17,"R_386_GOTPC",E,R[4019],N,N],[17,"R_386_32PLT",E,E,N,N],[17,"R_386_TLS_TPOFF",E,R[4017],N,N],[17,"R_386_TLS_IE",E,"Address of GOT entry for static TLS block offset",N,N],[17,"R_386_TLS_GOTIE",E,"GOT entry for static TLS block offset",N,N],[17,"R_386_TLS_LE",E,"Offset relative to static TLS block",N,N],[17,"R_386_TLS_GD",E,"Direct 32 bit for GNU version of general dynamic thread…",N,N],[17,"R_386_TLS_LDM",E,"Direct 32 bit for GNU version of local dynamic thread…",N,N],[17,"R_386_16",E,E,N,N],[17,"R_386_PC16",E,E,N,N],[17,"R_386_8",E,E,N,N],[17,"R_386_PC8",E,E,N,N],[17,"R_386_TLS_GD_32",E,"Direct 32 bit for general dynamic thread local data",N,N],[17,"R_386_TLS_GD_PUSH",E,"Tag for pushl in GD TLS code",N,N],[17,"R_386_TLS_GD_CALL",E,"Relocation for call to __tls_get_addr()",N,N],[17,"R_386_TLS_GD_POP",E,"Tag for popl in GD TLS code",N,N],[17,"R_386_TLS_LDM_32",E,"Direct 32 bit for local dynamic thread local data in LE code",N,N],[17,"R_386_TLS_LDM_PUSH",E,"Tag for pushl in LDM TLS code",N,N],[17,"R_386_TLS_LDM_CALL",E,"Relocation for call to __tls_get_addr() in LDM code",N,N],[17,"R_386_TLS_LDM_POP",E,"Tag for popl in LDM TLS code",N,N],[17,"R_386_TLS_LDO_32",E,"Offset relative to TLS block",N,N],[17,"R_386_TLS_IE_32",E,"GOT entry for negated static TLS block offset",N,N],[17,"R_386_TLS_LE_32",E,"Negated offset relative to static TLS block",N,N],[17,"R_386_TLS_DTPMOD32",E,R[4015],N,N],[17,"R_386_TLS_DTPOFF32",E,R[4016],N,N],[17,"R_386_TLS_TPOFF32",E,"Negated offset in static TLS block",N,N],[17,"R_386_SIZE32",E,"32-bit symbol size",N,N],[17,"R_386_TLS_GOTDESC",E,"GOT offset for TLS descriptor.",N,N],[17,"R_386_TLS_DESC_CALL",E,"Marker of call through TLS descriptor for relaxation",N,N],[17,"R_386_TLS_DESC",E,"TLS descriptor containing pointer to code and to argument,…",N,N],[17,"R_386_IRELATIVE",E,"Adjust indirectly by program base",N,N],[17,"R_386_GOT32X",E,"Load from 32 bit GOT entry, relaxable",N,N],[17,"R_386_NUM",E,R[4031],N,N],[17,"R_AARCH64_NONE",E,"No relocation",N,N],[17,"R_AARCH64_P32_ABS32",E,R[4002],N,N],[17,"R_AARCH64_P32_COPY",E,R[4003],N,N],[17,"R_AARCH64_P32_GLOB_DAT",E,R[4004],N,N],[17,"R_AARCH64_P32_JUMP_SLOT",E,R[4005],N,N],[17,"R_AARCH64_P32_RELATIVE",E,R[4006],N,N],[17,"R_AARCH64_P32_TLS_DTPMOD",E,"Module number, 32 bit",N,N],[17,"R_AARCH64_P32_TLS_DTPREL",E,"Module-relative offset, 32 bit",N,N],[17,"R_AARCH64_P32_TLS_TPREL",E,"TP-relative offset, 32 bit",N,N],[17,"R_AARCH64_P32_TLSDESC",E,R[4012],N,N],[17,"R_AARCH64_P32_IRELATIVE",E,R[4013],N,N],[17,"R_AARCH64_ABS64",E,"Direct 64 bit",N,N],[17,"R_AARCH64_ABS32",E,R[4002],N,N],[17,"R_AARCH64_ABS16",E,"Direct 16-bit",N,N],[17,"R_AARCH64_PREL64",E,"PC-relative 64-bit",N,N],[17,"R_AARCH64_PREL32",E,"PC-relative 32-bit",N,N],[17,"R_AARCH64_PREL16",E,"PC-relative 16-bit",N,N],[17,"R_AARCH64_MOVW_UABS_G0",E,"Dir. MOVZ imm. from bits 15:0",N,N],[17,"R_AARCH64_MOVW_UABS_G0_NC",E,R[4007],N,N],[17,"R_AARCH64_MOVW_UABS_G1",E,"Dir. MOVZ imm. from bits 31:16",N,N],[17,"R_AARCH64_MOVW_UABS_G1_NC",E,R[4007],N,N],[17,"R_AARCH64_MOVW_UABS_G2",E,"Dir. MOVZ imm. from bits 47:32",N,N],[17,"R_AARCH64_MOVW_UABS_G2_NC",E,R[4007],N,N],[17,"R_AARCH64_MOVW_UABS_G3",E,"Dir. MOV{K,Z} imm. from 63:48",N,N],[17,"R_AARCH64_MOVW_SABS_G0",E,"Dir. MOV{N,Z} imm. from 15:0",N,N],[17,"R_AARCH64_MOVW_SABS_G1",E,"Dir. MOV{N,Z} imm. from 31:16",N,N],[17,"R_AARCH64_MOVW_SABS_G2",E,"Dir. MOV{N,Z} imm. from 47:32",N,N],[17,"R_AARCH64_LD_PREL_LO19",E,"PC-rel. LD imm. from bits 20:2",N,N],[17,"R_AARCH64_ADR_PREL_LO21",E,"PC-rel. ADR imm. from bits 20:0",N,N],[17,"R_AARCH64_ADR_PREL_PG_HI21",E,"Page-rel. ADRP imm. from 32:12",N,N],[17,"R_AARCH64_ADR_PREL_PG_HI21_NC",E,"Likewise; no overflow check",N,N],[17,"R_AARCH64_ADD_ABS_LO12_NC",E,"Dir. ADD imm. from bits 11:0",N,N],[17,"R_AARCH64_LDST8_ABS_LO12_NC",E,"Likewise for LD/ST; no check.",N,N],[17,"R_AARCH64_TSTBR14",E,"PC-rel. TBZ/TBNZ imm. from 15:2",N,N],[17,"R_AARCH64_CONDBR19",E,"PC-rel. cond. br. imm. from 20:2.",N,N],[17,"R_AARCH64_JUMP26",E,"PC-rel. B imm. from bits 27:2",N,N],[17,"R_AARCH64_CALL26",E,"Likewise for CALL",N,N],[17,"R_AARCH64_LDST16_ABS_LO12_NC",E,"Dir. ADD imm. from bits 11:1",N,N],[17,"R_AARCH64_LDST32_ABS_LO12_NC",E,"Likewise for bits 11:2",N,N],[17,"R_AARCH64_LDST64_ABS_LO12_NC",E,"Likewise for bits 11:3",N,N],[17,"R_AARCH64_MOVW_PREL_G0",E,"PC-rel. MOV{N,Z} imm. from 15:0",N,N],[17,"R_AARCH64_MOVW_PREL_G0_NC",E,R[4007],N,N],[17,"R_AARCH64_MOVW_PREL_G1",E,"PC-rel. MOV{N,Z} imm. from 31:16.",N,N],[17,"R_AARCH64_MOVW_PREL_G1_NC",E,R[4007],N,N],[17,"R_AARCH64_MOVW_PREL_G2",E,"PC-rel. MOV{N,Z} imm. from 47:32.",N,N],[17,"R_AARCH64_MOVW_PREL_G2_NC",E,R[4007],N,N],[17,"R_AARCH64_MOVW_PREL_G3",E,"PC-rel. MOV{N,Z} imm. from 63:48.",N,N],[17,"R_AARCH64_LDST128_ABS_LO12_NC",E,"Dir. ADD imm. from bits 11:4",N,N],[17,"R_AARCH64_MOVW_GOTOFF_G0",E,"GOT-rel. off. MOV{N,Z} imm. 15:0.",N,N],[17,"R_AARCH64_MOVW_GOTOFF_G0_NC",E,R[4007],N,N],[17,"R_AARCH64_MOVW_GOTOFF_G1",E,"GOT-rel. o. MOV{N,Z} imm. 31:16",N,N],[17,"R_AARCH64_MOVW_GOTOFF_G1_NC",E,R[4007],N,N],[17,"R_AARCH64_MOVW_GOTOFF_G2",E,"GOT-rel. o. MOV{N,Z} imm. 47:32",N,N],[17,"R_AARCH64_MOVW_GOTOFF_G2_NC",E,R[4007],N,N],[17,"R_AARCH64_MOVW_GOTOFF_G3",E,"GOT-rel. o. MOV{N,Z} imm. 63:48",N,N],[17,"R_AARCH64_GOTREL64",E,"GOT-relative 64-bit",N,N],[17,"R_AARCH64_GOTREL32",E,"GOT-relative 32-bit",N,N],[17,"R_AARCH64_GOT_LD_PREL19",E,"PC-rel. GOT off. load imm. 20:2",N,N],[17,"R_AARCH64_LD64_GOTOFF_LO15",E,"GOT-rel. off. LD/ST imm. 14:3",N,N],[17,"R_AARCH64_ADR_GOT_PAGE",E,"P-page-rel. GOT off. ADRP 32:12",N,N],[17,"R_AARCH64_LD64_GOT_LO12_NC",E,"Dir. GOT off. LD/ST imm. 11:3",N,N],[17,"R_AARCH64_LD64_GOTPAGE_LO15",E,"GOT-page-rel. GOT off. LD/ST 14:3",N,N],[17,"R_AARCH64_TLSGD_ADR_PREL21",E,"PC-relative ADR imm. 20:0",N,N],[17,"R_AARCH64_TLSGD_ADR_PAGE21",E,"page-rel. ADRP imm. 32:12",N,N],[17,"R_AARCH64_TLSGD_ADD_LO12_NC",E,"direct ADD imm. from 11:0",N,N],[17,"R_AARCH64_TLSGD_MOVW_G1",E,R[4010],N,N],[17,"R_AARCH64_TLSGD_MOVW_G0_NC",E,"GOT-rel. MOVK imm. 15:0",N,N],[17,"R_AARCH64_TLSLD_ADR_PREL21",E,"Like 512; local dynamic model",N,N],[17,"R_AARCH64_TLSLD_ADR_PAGE21",E,"Like 513; local dynamic model",N,N],[17,"R_AARCH64_TLSLD_ADD_LO12_NC",E,"Like 514; local dynamic model",N,N],[17,"R_AARCH64_TLSLD_MOVW_G1",E,"Like 515; local dynamic model",N,N],[17,"R_AARCH64_TLSLD_MOVW_G0_NC",E,"Like 516; local dynamic model",N,N],[17,"R_AARCH64_TLSLD_LD_PREL19",E,"TLS PC-rel. load imm. 20:2",N,N],[17,"R_AARCH64_TLSLD_MOVW_DTPREL_G2",E,"TLS DTP-rel. MOV{N,Z} 47:32",N,N],[17,"R_AARCH64_TLSLD_MOVW_DTPREL_G1",E,"TLS DTP-rel. MOV{N,Z} 31:16",N,N],[17,"R_AARCH64_TLSLD_MOVW_DTPREL_G1_NC",E,R[4008],N,N],[17,"R_AARCH64_TLSLD_MOVW_DTPREL_G0",E,"TLS DTP-rel. MOV{N,Z} 15:0",N,N],[17,"R_AARCH64_TLSLD_MOVW_DTPREL_G0_NC",E,R[4008],N,N],[17,"R_AARCH64_TLSLD_ADD_DTPREL_HI12",E,"DTP-rel. ADD imm. from 23:12.",N,N],[17,"R_AARCH64_TLSLD_ADD_DTPREL_LO12",E,"DTP-rel. ADD imm. from 11:0",N,N],[17,"R_AARCH64_TLSLD_ADD_DTPREL_LO12_NC",E,R[4011],N,N],[17,"R_AARCH64_TLSLD_LDST8_DTPREL_LO12",E,"DTP-rel. LD/ST imm. 11:0",N,N],[17,"R_AARCH64_TLSLD_LDST8_DTPREL_LO12_NC",E,R[4009],N,N],[17,"R_AARCH64_TLSLD_LDST16_DTPREL_LO12",E,"DTP-rel. LD/ST imm. 11:1",N,N],[17,"R_AARCH64_TLSLD_LDST16_DTPREL_LO12_NC",E,R[4009],N,N],[17,"R_AARCH64_TLSLD_LDST32_DTPREL_LO12",E,"DTP-rel. LD/ST imm. 11:2",N,N],[17,"R_AARCH64_TLSLD_LDST32_DTPREL_LO12_NC",E,R[4009],N,N],[17,"R_AARCH64_TLSLD_LDST64_DTPREL_LO12",E,"DTP-rel. LD/ST imm. 11:3",N,N],[17,"R_AARCH64_TLSLD_LDST64_DTPREL_LO12_NC",E,R[4009],N,N],[17,"R_AARCH64_TLSIE_MOVW_GOTTPREL_G1",E,R[4010],N,N],[17,"R_AARCH64_TLSIE_MOVW_GOTTPREL_G0_NC",E,"GOT-rel. MOVK 15:0",N,N],[17,"R_AARCH64_TLSIE_ADR_GOTTPREL_PAGE21",E,"Page-rel. ADRP 32:12",N,N],[17,"R_AARCH64_TLSIE_LD64_GOTTPREL_LO12_NC",E,"Direct LD off. 11:3",N,N],[17,"R_AARCH64_TLSIE_LD_GOTTPREL_PREL19",E,"PC-rel. load imm. 20:2",N,N],[17,"R_AARCH64_TLSLE_MOVW_TPREL_G2",E,"TLS TP-rel. MOV{N,Z} 47:32",N,N],[17,"R_AARCH64_TLSLE_MOVW_TPREL_G1",E,"TLS TP-rel. MOV{N,Z} 31:16",N,N],[17,"R_AARCH64_TLSLE_MOVW_TPREL_G1_NC",E,R[4008],N,N],[17,"R_AARCH64_TLSLE_MOVW_TPREL_G0",E,"TLS TP-rel. MOV{N,Z} 15:0",N,N],[17,"R_AARCH64_TLSLE_MOVW_TPREL_G0_NC",E,R[4008],N,N],[17,"R_AARCH64_TLSLE_ADD_TPREL_HI12",E,"TP-rel. ADD imm. 23:12",N,N],[17,"R_AARCH64_TLSLE_ADD_TPREL_LO12",E,"TP-rel. ADD imm. 11:0",N,N],[17,"R_AARCH64_TLSLE_ADD_TPREL_LO12_NC",E,R[4011],N,N],[17,"R_AARCH64_TLSLE_LDST8_TPREL_LO12",E,"TP-rel. LD/ST off. 11:0",N,N],[17,"R_AARCH64_TLSLE_LDST8_TPREL_LO12_NC",E,"Likewise; no ovfl. check.",N,N],[17,"R_AARCH64_TLSLE_LDST16_TPREL_LO12",E,"TP-rel. LD/ST off. 11:1",N,N],[17,"R_AARCH64_TLSLE_LDST16_TPREL_LO12_NC",E,R[4009],N,N],[17,"R_AARCH64_TLSLE_LDST32_TPREL_LO12",E,"TP-rel. LD/ST off. 11:2",N,N],[17,"R_AARCH64_TLSLE_LDST32_TPREL_LO12_NC",E,R[4009],N,N],[17,"R_AARCH64_TLSLE_LDST64_TPREL_LO12",E,"TP-rel. LD/ST off. 11:3",N,N],[17,"R_AARCH64_TLSLE_LDST64_TPREL_LO12_NC",E,R[4009],N,N],[17,"R_AARCH64_TLSDESC_LD_PREL19",E,"PC-rel. load immediate 20:2",N,N],[17,"R_AARCH64_TLSDESC_ADR_PREL21",E,"PC-rel. ADR immediate 20:0",N,N],[17,"R_AARCH64_TLSDESC_ADR_PAGE21",E,"Page-rel. ADRP imm. 32:12",N,N],[17,"R_AARCH64_TLSDESC_LD64_LO12",E,"Direct LD off. from 11:3",N,N],[17,"R_AARCH64_TLSDESC_ADD_LO12",E,"Direct ADD imm. from 11:0",N,N],[17,"R_AARCH64_TLSDESC_OFF_G1",E,"GOT-rel. MOV{N,Z} imm. 31:16",N,N],[17,"R_AARCH64_TLSDESC_OFF_G0_NC",E,"GOT-rel. MOVK imm. 15:0; no ck",N,N],[17,"R_AARCH64_TLSDESC_LDR",E,"Relax LDR",N,N],[17,"R_AARCH64_TLSDESC_ADD",E,"Relax ADD",N,N],[17,"R_AARCH64_TLSDESC_CALL",E,"Relax BLR",N,N],[17,"R_AARCH64_TLSLE_LDST128_TPREL_LO12",E,"TP-rel. LD/ST off. 11:4",N,N],[17,"R_AARCH64_TLSLE_LDST128_TPREL_LO12_NC",E,R[4009],N,N],[17,"R_AARCH64_TLSLD_LDST128_DTPREL_LO12",E,"DTP-rel. LD/ST imm. 11:4.",N,N],[17,"R_AARCH64_TLSLD_LDST128_DTPREL_LO12_NC",E,R[4009],N,N],[17,"R_AARCH64_COPY",E,R[4003],N,N],[17,"R_AARCH64_GLOB_DAT",E,R[4004],N,N],[17,"R_AARCH64_JUMP_SLOT",E,R[4005],N,N],[17,"R_AARCH64_RELATIVE",E,R[4006],N,N],[17,"R_AARCH64_TLS_DTPMOD",E,"Module number, 64 bit",N,N],[17,"R_AARCH64_TLS_DTPREL",E,"Module-relative offset, 64 bit",N,N],[17,"R_AARCH64_TLS_TPREL",E,R[4033],N,N],[17,"R_AARCH64_TLSDESC",E,R[4012],N,N],[17,"R_AARCH64_IRELATIVE",E,R[4013],N,N],[17,"R_ARM_NONE",E,"No reloc",N,N],[17,"R_ARM_PC24",E,"Deprecated PC relative 26 bit branch",N,N],[17,"R_ARM_ABS32",E,R[4002],N,N],[17,"R_ARM_REL32",E,R[4014],N,N],[17,"R_ARM_PC13",E,E,N,N],[17,"R_ARM_ABS16",E,R[4032],N,N],[17,"R_ARM_ABS12",E,"Direct 12 bit",N,N],[17,"R_ARM_THM_ABS5",E,"Direct & 0x7C (LDR, STR)",N,N],[17,"R_ARM_ABS8",E,"Direct 8 bit",N,N],[17,"R_ARM_SBREL32",E,E,N,N],[17,"R_ARM_THM_PC22",E,"PC relative 24 bit (Thumb32 BL)",N,N],[17,"R_ARM_THM_PC8",E,"PC relative & 0x3FC(Thumb16 LDR, ADD, ADR).",N,N],[17,"R_ARM_AMP_VCALL9",E,E,N,N],[17,"R_ARM_SWI24",E,"Obsolete static relocation",N,N],[17,"R_ARM_TLS_DESC",E,"Dynamic relocation",N,N],[17,"R_ARM_THM_SWI8",E,"Reserved",N,N],[17,"R_ARM_XPC25",E,"Reserved",N,N],[17,"R_ARM_THM_XPC22",E,"Reserved",N,N],[17,"R_ARM_TLS_DTPMOD32",E,R[4015],N,N],[17,"R_ARM_TLS_DTPOFF32",E,R[4016],N,N],[17,"R_ARM_TLS_TPOFF32",E,R[4017],N,N],[17,"R_ARM_COPY",E,R[4003],N,N],[17,"R_ARM_GLOB_DAT",E,R[4004],N,N],[17,"R_ARM_JUMP_SLOT",E,R[4005],N,N],[17,"R_ARM_RELATIVE",E,R[4006],N,N],[17,"R_ARM_GOTOFF",E,R[4018],N,N],[17,"R_ARM_GOTPC",E,R[4019],N,N],[17,"R_ARM_GOT32",E,R[4020],N,N],[17,"R_ARM_PLT32",E,"Deprecated, 32 bit PLT address",N,N],[17,"R_ARM_CALL",E,"PC relative 24 bit (BL, BLX)",N,N],[17,"R_ARM_JUMP24",E,"PC relative 24 bit (B, BL)",N,N],[17,"R_ARM_THM_JUMP24",E,"PC relative 24 bit (Thumb32 B.W)",N,N],[17,"R_ARM_BASE_ABS",E,R[4006],N,N],[17,"R_ARM_ALU_PCREL_7_0",E,"Obsolete",N,N],[17,"R_ARM_ALU_PCREL_15_8",E,"Obsolete",N,N],[17,"R_ARM_ALU_PCREL_23_15",E,"Obsolete",N,N],[17,"R_ARM_LDR_SBREL_11_0",E,R[4021],N,N],[17,"R_ARM_ALU_SBREL_19_12",E,R[4021],N,N],[17,"R_ARM_ALU_SBREL_27_20",E,R[4021],N,N],[17,"R_ARM_TARGET1",E,E,N,N],[17,"R_ARM_SBREL31",E,"Program base relative",N,N],[17,"R_ARM_V4BX",E,E,N,N],[17,"R_ARM_TARGET2",E,E,N,N],[17,"R_ARM_PREL31",E,"32 bit PC relative",N,N],[17,"R_ARM_MOVW_ABS_NC",E,"Direct 16-bit (MOVW)",N,N],[17,"R_ARM_MOVT_ABS",E,"Direct high 16-bit (MOVT)",N,N],[17,"R_ARM_MOVW_PREL_NC",E,"PC relative 16-bit (MOVW)",N,N],[17,"R_ARM_MOVT_PREL",E,"PC relative (MOVT)",N,N],[17,"R_ARM_THM_MOVW_ABS_NC",E,"Direct 16 bit (Thumb32 MOVW)",N,N],[17,"R_ARM_THM_MOVT_ABS",E,"Direct high 16 bit (Thumb32 MOVT)",N,N],[17,"R_ARM_THM_MOVW_PREL_NC",E,"PC relative 16 bit (Thumb32 MOVW)",N,N],[17,"R_ARM_THM_MOVT_PREL",E,"PC relative high 16 bit (Thumb32 MOVT)",N,N],[17,"R_ARM_THM_JUMP19",E,"PC relative 20 bit (Thumb32 B.W)",N,N],[17,"R_ARM_THM_JUMP6",E,"PC relative X & 0x7E (Thumb16 CBZ, CBNZ)",N,N],[17,"R_ARM_THM_ALU_PREL_11_0",E,"PC relative 12 bit (Thumb32 ADR.W)",N,N],[17,"R_ARM_THM_PC12",E,"PC relative 12 bit (Thumb32 LDR{D,SB,H,SH})",N,N],[17,"R_ARM_ABS32_NOI",E,"Direct 32-bit",N,N],[17,"R_ARM_REL32_NOI",E,"PC relative 32-bit",N,N],[17,"R_ARM_ALU_PC_G0_NC",E,R[4022],N,N],[17,"R_ARM_ALU_PC_G0",E,R[4022],N,N],[17,"R_ARM_ALU_PC_G1_NC",E,R[4022],N,N],[17,"R_ARM_ALU_PC_G1",E,R[4022],N,N],[17,"R_ARM_ALU_PC_G2",E,R[4022],N,N],[17,"R_ARM_LDR_PC_G1",E,R[4023],N,N],[17,"R_ARM_LDR_PC_G2",E,R[4023],N,N],[17,"R_ARM_LDRS_PC_G0",E,R[4024],N,N],[17,"R_ARM_LDRS_PC_G1",E,R[4024],N,N],[17,"R_ARM_LDRS_PC_G2",E,R[4024],N,N],[17,"R_ARM_LDC_PC_G0",E,R[4025],N,N],[17,"R_ARM_LDC_PC_G1",E,R[4025],N,N],[17,"R_ARM_LDC_PC_G2",E,R[4025],N,N],[17,"R_ARM_ALU_SB_G0_NC",E,R[4026],N,N],[17,"R_ARM_ALU_SB_G0",E,R[4026],N,N],[17,"R_ARM_ALU_SB_G1_NC",E,R[4026],N,N],[17,"R_ARM_ALU_SB_G1",E,R[4026],N,N],[17,"R_ARM_ALU_SB_G2",E,R[4026],N,N],[17,"R_ARM_LDR_SB_G0",E,"Program base relative (LDR,STR, LDRB, STRB)",N,N],[17,"R_ARM_LDR_SB_G1",E,R[4027],N,N],[17,"R_ARM_LDR_SB_G2",E,R[4027],N,N],[17,"R_ARM_LDRS_SB_G0",E,R[4027],N,N],[17,"R_ARM_LDRS_SB_G1",E,R[4027],N,N],[17,"R_ARM_LDRS_SB_G2",E,R[4027],N,N],[17,"R_ARM_LDC_SB_G0",E,R[4028],N,N],[17,"R_ARM_LDC_SB_G1",E,R[4028],N,N],[17,"R_ARM_LDC_SB_G2",E,R[4028],N,N],[17,"R_ARM_MOVW_BREL_NC",E,R[4029],N,N],[17,"R_ARM_MOVT_BREL",E,"Program base relative high 16 bit (MOVT)",N,N],[17,"R_ARM_MOVW_BREL",E,R[4029],N,N],[17,"R_ARM_THM_MOVW_BREL_NC",E,R[4030],N,N],[17,"R_ARM_THM_MOVT_BREL",E,"Program base relative high 16 bit (Thumb32 MOVT)",N,N],[17,"R_ARM_THM_MOVW_BREL",E,R[4030],N,N],[17,"R_ARM_TLS_GOTDESC",E,E,N,N],[17,"R_ARM_TLS_CALL",E,E,N,N],[17,"R_ARM_TLS_DESCSEQ",E,"TLS relaxation",N,N],[17,"R_ARM_THM_TLS_CALL",E,E,N,N],[17,"R_ARM_PLT32_ABS",E,E,N,N],[17,"R_ARM_GOT_ABS",E,"GOT entry",N,N],[17,"R_ARM_GOT_PREL",E,"PC relative GOT entry",N,N],[17,"R_ARM_GOT_BREL12",E,"GOT entry relative to GOT origin (LDR)",N,N],[17,"R_ARM_GOTOFF12",E,"12 bit, GOT entry relative to GOT origin (LDR, STR)",N,N],[17,"R_ARM_GOTRELAX",E,E,N,N],[17,"R_ARM_GNU_VTENTRY",E,E,N,N],[17,"R_ARM_GNU_VTINHERIT",E,E,N,N],[17,"R_ARM_THM_PC11",E,"PC relative & 0xFFE (Thumb16 B)",N,N],[17,"R_ARM_THM_PC9",E,"PC relative & 0x1FE (Thumb16 B/B)",N,N],[17,"R_ARM_TLS_GD32",E,"PC-rel 32 bit for global dynamic thread local data",N,N],[17,"R_ARM_TLS_LDM32",E,"PC-rel 32 bit for local dynamic thread local data",N,N],[17,"R_ARM_TLS_LDO32",E,"32 bit offset relative to TLS block",N,N],[17,"R_ARM_TLS_IE32",E,"PC-rel 32 bit for GOT entry of static TLS block offset",N,N],[17,"R_ARM_TLS_LE32",E,"32 bit offset relative to static TLS block",N,N],[17,"R_ARM_TLS_LDO12",E,"12 bit relative to TLS block (LDR, STR)",N,N],[17,"R_ARM_TLS_LE12",E,"12 bit relative to static TLS block (LDR, STR)",N,N],[17,"R_ARM_TLS_IE12GP",E,"12 bit GOT entry relative to GOT origin (LDR)",N,N],[17,"R_ARM_ME_TOO",E,"Obsolete",N,N],[17,"R_ARM_THM_TLS_DESCSEQ",E,E,N,N],[17,"R_ARM_THM_TLS_DESCSEQ16",E,E,N,N],[17,"R_ARM_THM_TLS_DESCSEQ32",E,E,N,N],[17,"R_ARM_THM_GOT_BREL12",E,"GOT entry relative to GOT origin, 12 bit (Thumb32 LDR)",N,N],[17,"R_ARM_IRELATIVE",E,E,N,N],[17,"R_ARM_RXPC25",E,E,N,N],[17,"R_ARM_RSBREL32",E,E,N,N],[17,"R_ARM_THM_RPC22",E,E,N,N],[17,"R_ARM_RREL32",E,E,N,N],[17,"R_ARM_RABS22",E,E,N,N],[17,"R_ARM_RPC24",E,E,N,N],[17,"R_ARM_RBASE",E,E,N,N],[17,"R_ARM_NUM",E,R[4031],N,N],[17,"R_OR1K_NONE",E,E,N,N],[17,"R_OR1K_32",E,E,N,N],[17,"R_OR1K_16",E,E,N,N],[17,"R_OR1K_8",E,E,N,N],[17,"R_OR1K_LO_16_IN_INSN",E,E,N,N],[17,"R_OR1K_HI_16_IN_INSN",E,E,N,N],[17,"R_OR1K_INSN_REL_26",E,E,N,N],[17,"R_OR1K_GNU_VTENTRY",E,E,N,N],[17,"R_OR1K_GNU_VTINHERIT",E,E,N,N],[17,"R_OR1K_32_PCREL",E,E,N,N],[17,"R_OR1K_16_PCREL",E,E,N,N],[17,"R_OR1K_8_PCREL",E,E,N,N],[17,"R_OR1K_GOTPC_HI16",E,E,N,N],[17,"R_OR1K_GOTPC_LO16",E,E,N,N],[17,"R_OR1K_GOT16",E,E,N,N],[17,"R_OR1K_PLT26",E,E,N,N],[17,"R_OR1K_GOTOFF_HI16",E,E,N,N],[17,"R_OR1K_GOTOFF_LO16",E,E,N,N],[17,"R_OR1K_COPY",E,E,N,N],[17,"R_OR1K_GLOB_DAT",E,E,N,N],[17,"R_OR1K_JMP_SLOT",E,E,N,N],[17,"R_OR1K_RELATIVE",E,E,N,N],[17,"R_OR1K_TLS_GD_HI16",E,E,N,N],[17,"R_OR1K_TLS_GD_LO16",E,E,N,N],[17,"R_OR1K_TLS_LDM_HI16",E,E,N,N],[17,"R_OR1K_TLS_LDM_LO16",E,E,N,N],[17,"R_OR1K_TLS_LDO_HI16",E,E,N,N],[17,"R_OR1K_TLS_LDO_LO16",E,E,N,N],[17,"R_OR1K_TLS_IE_HI16",E,E,N,N],[17,"R_OR1K_TLS_IE_LO16",E,E,N,N],[17,"R_OR1K_TLS_LE_HI16",E,E,N,N],[17,"R_OR1K_TLS_LE_LO16",E,E,N,N],[17,"R_OR1K_TLS_TPOFF",E,E,N,N],[17,"R_OR1K_TLS_DTPOFF",E,E,N,N],[17,"R_OR1K_TLS_DTPMOD",E,E,N,N],[17,"R_OR1K_NUM",E,E,N,N],[17,"R_MIPS_NONE",E,"No reloc",N,N],[17,"R_MIPS_16",E,R[4032],N,N],[17,"R_MIPS_32",E,R[4002],N,N],[17,"R_MIPS_REL32",E,R[4014],N,N],[17,"R_MIPS_26",E,"Direct 26 bit shifted",N,N],[17,"R_MIPS_HI16",E,"High 16 bit",N,N],[17,"R_MIPS_LO16",E,"Low 16 bit",N,N],[17,"R_MIPS_GPREL16",E,"GP relative 16 bit",N,N],[17,"R_MIPS_LITERAL",E,"16 bit literal entry",N,N],[17,"R_MIPS_GOT16",E,"16 bit GOT entry",N,N],[17,"R_MIPS_PC16",E,"PC relative 16 bit",N,N],[17,"R_MIPS_CALL16",E,"16 bit GOT entry for function",N,N],[17,"R_MIPS_GPREL32",E,"GP relative 32 bit",N,N],[17,"R_MIPS_SHIFT5",E,E,N,N],[17,"R_MIPS_SHIFT6",E,E,N,N],[17,"R_MIPS_64",E,E,N,N],[17,"R_MIPS_GOT_DISP",E,E,N,N],[17,"R_MIPS_GOT_PAGE",E,E,N,N],[17,"R_MIPS_GOT_OFST",E,E,N,N],[17,"R_MIPS_GOT_HI16",E,E,N,N],[17,"R_MIPS_GOT_LO16",E,E,N,N],[17,"R_MIPS_SUB",E,E,N,N],[17,"R_MIPS_INSERT_A",E,E,N,N],[17,"R_MIPS_INSERT_B",E,E,N,N],[17,"R_MIPS_DELETE",E,E,N,N],[17,"R_MIPS_HIGHER",E,E,N,N],[17,"R_MIPS_HIGHEST",E,E,N,N],[17,"R_MIPS_CALL_HI16",E,E,N,N],[17,"R_MIPS_CALL_LO16",E,E,N,N],[17,"R_MIPS_SCN_DISP",E,E,N,N],[17,"R_MIPS_REL16",E,E,N,N],[17,"R_MIPS_ADD_IMMEDIATE",E,E,N,N],[17,"R_MIPS_PJUMP",E,E,N,N],[17,"R_MIPS_RELGOT",E,E,N,N],[17,"R_MIPS_JALR",E,E,N,N],[17,"R_MIPS_TLS_DTPMOD32",E,"Module number 32 bit",N,N],[17,"R_MIPS_TLS_DTPREL32",E,"Module-relative offset 32 bit",N,N],[17,"R_MIPS_TLS_DTPMOD64",E,"Module number 64 bit",N,N],[17,"R_MIPS_TLS_DTPREL64",E,"Module-relative offset 64 bit",N,N],[17,"R_MIPS_TLS_GD",E,"16 bit GOT offset for GD",N,N],[17,"R_MIPS_TLS_LDM",E,"16 bit GOT offset for LDM",N,N],[17,"R_MIPS_TLS_DTPREL_HI16",E,"Module-relative offset, high 16 bits",N,N],[17,"R_MIPS_TLS_DTPREL_LO16",E,"Module-relative offset, low 16 bits",N,N],[17,"R_MIPS_TLS_GOTTPREL",E,"16 bit GOT offset for IE",N,N],[17,"R_MIPS_TLS_TPREL32",E,"TP-relative offset, 32 bit6",N,N],[17,"R_MIPS_TLS_TPREL64",E,R[4033],N,N],[17,"R_MIPS_TLS_TPREL_HI16",E,"TP-relative offset, high 16 bits",N,N],[17,"R_MIPS_TLS_TPREL_LO16",E,"TP-relative offset, low 16 bits",N,N],[17,"R_MIPS_GLOB_DAT",E,E,N,N],[17,"R_MIPS_COPY",E,E,N,N],[17,"R_MIPS_JUMP_SLOT",E,E,N,N],[17,"R_MIPS_NUM",E,E,N,N],[17,"R_RISCV_NONE",E,"None",N,N],[17,"R_RISCV_32",E,"Runtime relocation: word32 = S + A",N,N],[17,"R_RISCV_64",E,"Runtime relocation: word64 = S + A",N,N],[17,"R_RISCV_RELATIVE",E,"Runtime relocation: word32,64 = B + A",N,N],[17,"R_RISCV_COPY",E,"Runtime relocation: must be in executable, not allowed in…",N,N],[17,"R_RISCV_JUMP_SLOT",E,"Runtime relocation: word32,64 = S; handled by PLT unless…",N,N],[17,"R_RISCV_TLS_DTPMOD32",E,"TLS relocation: word32 = S->TLSINDEX",N,N],[17,"R_RISCV_TLS_DTPMOD64",E,"TLS relocation: word64 = S->TLSINDEX",N,N],[17,"R_RISCV_TLS_DTPREL32",E,"TLS relocation: word32 = TLS + S + A - TLS_TP_OFFSET",N,N],[17,"R_RISCV_TLS_DTPREL64",E,"TLS relocation: word64 = TLS + S + A - TLS_TP_OFFSET",N,N],[17,"R_RISCV_TLS_TPREL32",E,"TLS relocation: word32 = TLS + S + A + S_TLS_OFFSET -…",N,N],[17,"R_RISCV_TLS_TPREL64",E,"TLS relocation: word64 = TLS + S + A + S_TLS_OFFSET -…",N,N],[17,"R_RISCV_BRANCH",E,"PC-relative branch (SB-Type)",N,N],[17,"R_RISCV_JAL",E,"PC-relative jump (UJ-Type)",N,N],[17,"R_RISCV_CALL",E,"PC-relative call: MACRO call,tail (auipc+jalr pair)",N,N],[17,"R_RISCV_CALL_PLT",E,"PC-relative call (PLT): MACRO call,tail (auipc+jalr pair)…",N,N],[17,"R_RISCV_GOT_HI20",E,"PC-relative GOT reference: MACRO la",N,N],[17,"R_RISCV_TLS_GOT_HI20",E,"PC-relative TLS IE GOT offset: MACRO la.tls.ie",N,N],[17,"R_RISCV_TLS_GD_HI20",E,"PC-relative TLS GD reference: MACRO la.tls.gd",N,N],[17,"R_RISCV_PCREL_HI20",E,"PC-relative reference: %pcrel_hi(symbol) (U-Type)",N,N],[17,"R_RISCV_PCREL_LO12_I",E,"PC-relative reference: %pcrel_lo(symbol) (I-Type)",N,N],[17,"R_RISCV_PCREL_LO12_S",E,"PC-relative reference: %pcrel_lo(symbol) (S-Type)",N,N],[17,"R_RISCV_HI20",E,"Absolute address: %hi(symbol) (U-Type)",N,N],[17,"R_RISCV_LO12_I",E,"Absolute address: %lo(symbol) (I-Type)",N,N],[17,"R_RISCV_LO12_S",E,"Absolute address: %lo(symbol) (S-Type)",N,N],[17,"R_RISCV_TPREL_HI20",E,"TLS LE thread offset: %tprel_hi(symbol) (U-Type)",N,N],[17,"R_RISCV_TPREL_LO12_I",E,"TLS LE thread offset: %tprel_lo(symbol) (I-Type)",N,N],[17,"R_RISCV_TPREL_LO12_S",E,"TLS LE thread offset: %tprel_lo(symbol) (S-Type)",N,N],[17,"R_RISCV_TPREL_ADD",E,"TLS LE thread usage: %tprel_add(symbol)",N,N],[17,"R_RISCV_ADD8",E,"8-bit label addition: word8 = S + A",N,N],[17,"R_RISCV_ADD16",E,"16-bit label addition: word16 = S + A",N,N],[17,"R_RISCV_ADD32",E,"32-bit label addition: word32 = S + A",N,N],[17,"R_RISCV_ADD64",E,"64-bit label addition: word64 = S + A",N,N],[17,"R_RISCV_SUB8",E,"8-bit label subtraction: word8 = S - A",N,N],[17,"R_RISCV_SUB16",E,"16-bit label subtraction: word16 = S - A",N,N],[17,"R_RISCV_SUB32",E,"32-bit label subtraction: word32 = S - A",N,N],[17,"R_RISCV_SUB64",E,"64-bit label subtraction: word64 = S - A",N,N],[17,"R_RISCV_GNU_VTINHERIT",E,"GNU C++ vtable hierarchy",N,N],[17,"R_RISCV_GNU_VTENTRY",E,"GNU C++ vtable member usage",N,N],[17,"R_RISCV_ALIGN",E,"Alignment statement",N,N],[17,"R_RISCV_RVC_BRANCH",E,"PC-relative branch offset (CB-Type)",N,N],[17,"R_RISCV_RVC_JUMP",E,"PC-relative jump offset (CJ-Type)",N,N],[17,"R_RISCV_RVC_LUI",E,"Absolute address (CI-Type)",N,N],[17,"R_RISCV_GPREL_I",E,"GP-relative reference (I-Type)",N,N],[17,"R_RISCV_GPREL_S",E,"GP-relative reference (S-Type)",N,N],[17,"R_RISCV_TPREL_I",E,"TP-relative TLS LE load (I-Type)",N,N],[17,"R_RISCV_TPREL_S",E,"TP-relative TLS LE store (S-Type)",N,N],[17,"R_RISCV_RELAX",E,"Instruction pair can be relaxed",N,N],[17,"R_RISCV_SUB6",E,R[4034],N,N],[17,"R_RISCV_SET6",E,R[4034],N,N],[17,"R_RISCV_SET8",E,R[4034],N,N],[17,"R_RISCV_SET16",E,R[4034],N,N],[17,"R_RISCV_SET32",E,R[4034],N,N],[11,"size",E,E,32,[[["ctx"],["bool"]],["usize"]]],[11,"parse",E,"Parse a REL or RELA section of size `filesz` from `offset`.",37,[[["usize"],["ctx"],["bool"]],[[R[3],[R[4035]]],[R[4035]]]]],[11,"get",E,"Try to parse a single relocation from the binary, at…",37,[[["self"],["usize"]],[[R[23],["reloc"]],["reloc"]]]],[11,"len",E,"The number of relocations in the section.",37,[[["self"]],["usize"]]],[11,R[25],E,"Returns true if section has no relocations.",37,[[["self"]],["bool"]]],[11,"iter",E,"Iterate over all relocations.",37,[[["self"]],["relociterator"]]],[11,"to_vec",E,"Parse all relocations into a vector.",37,[[["self"]],[["vec",["reloc"]],["reloc"]]]],[0,"note",R[3905],E,N,N],[3,"Nhdr32",R[4213],R[4036],N,N],[12,"n_namesz",E,R[4037],38,N],[12,"n_descsz",E,"Length of the note's descriptor",38,N],[12,"n_type",E,"Type of the note",38,N],[3,"Nhdr64",E,R[4036],N,N],[12,"n_namesz",E,R[4037],39,N],[12,"n_descsz",E,"Length of the note's descriptor.",39,N],[12,"n_type",E,"Type of the note.",39,N],[3,R[4269],E,"An iterator over ELF binary notes in a note section or…",N,N],[12,"data",E,E,40,N],[12,"size",E,E,40,N],[12,"offset",E,E,40,N],[12,"ctx",E,E,40,N],[3,R[4270],E,"An iterator over ELF binary notes",N,N],[12,"iters",E,E,41,N],[12,"index",E,E,41,N],[3,"Note",E,"A 32/64 bit Note struct, with the name and desc pre-parsed",N,N],[12,"n_type",E,"The type of this note",42,N],[12,"name",E,"NUL terminated string, where `namesz` includes the…",42,N],[12,"desc",E,"arbitrary data of length `descsz`",42,N],[17,"NT_GNU_ABI_TAG",E,"ABI information.",N,N],[17,"ELF_NOTE_ABI",E,"Old name",N,N],[17,"ELF_NOTE_OS_LINUX",E,E,N,N],[17,"ELF_NOTE_OS_GNU",E,E,N,N],[17,"ELF_NOTE_OS_SOLARIS2",E,E,N,N],[17,"ELF_NOTE_OS_FREEBSD",E,E,N,N],[17,"NT_GNU_HWCAP",E,"Synthetic `hwcap` information.",N,N],[17,"NT_GNU_BUILD_ID",E,"Build ID bits as generated by ld --build-id.",N,N],[17,"NT_GNU_GOLD_VERSION",E,"Version note generated by GNU gold containing a version…",N,N],[11,R[4038],E,E,42,[[["self"]],["str"]]],[6,"Header",R[3905],E,N,N],[6,R[3906],E,E,N,N],[6,R[3922],E,E,N,N],[6,"Symtab",E,E,N,N],[6,"Sym",E,E,N,N],[6,"Dyn",E,E,N,N],[6,"Dynamic",E,E,N,N],[6,"Reloc",E,E,N,N],[6,R[4039],E,E,N,N],[6,"ProgramHeaders",E,E,N,N],[6,"SectionHeaders",E,E,N,N],[6,"ShdrIdx",E,E,N,N],[11,"iter_note_headers",E,"Try to iterate notes in PT_NOTE program headers; returns…",8,[[["self"]],[[R[23],[R[4040]]],[R[4040]]]]],[11,"iter_note_sections",E,"Try to iterate notes in SHT_NOTE sections; returns `None`…",8,[[["self"],["str"],[R[23],["str"]]],[[R[23],[R[4040]]],[R[4040]]]]],[11,R[4130],E,E,8,[[["self"]],["bool"]]],[11,"parse",E,"Parses the contents of the byte stream in `bytes`, and…",8,[[],[R[3]]]],[0,"elf32","goblin","The ELF 32-bit struct definitions and associated values,…",N,N],[0,"gnu_hash","goblin::elf32",E,N,N],[3,"GnuHash",R[4214],E,N,N],[5,"hash",E,R[4041],N,[[["str"]],["u32"]]],[11,"new",E,E,43,[[["usize"]],["gnuhash"]]],[11,"find",E,R[4042],43,[[["self"],["u32"],["strtab"],["str"]],[[R[23],["sym"]],["sym"]]]],[0,"elf64","goblin","The ELF 64-bit struct definitions and associated values,…",N,N],[0,"gnu_hash","goblin::elf64",E,N,N],[3,"GnuHash",R[4215],E,N,N],[5,"hash",E,R[4041],N,[[["str"]],["u32"]]],[11,"new",E,E,44,[[["usize"]],["gnuhash"]]],[11,"find",E,R[4042],44,[[["self"],["u32"],["strtab"],["str"]],[["sym"],[R[23],["sym"]]]]],[0,"mach","goblin","The Mach-o, mostly zero-copy, binary format parser and raw…",N,N],[3,"MachO",R[4052],"A cross-platform, zero-copy, endian-aware, 32/64 bit…",N,N],[12,"header",E,"The mach-o header",45,N],[12,"load_commands",E,"The load commands tell the kernel and dynamic linker how…",45,N],[12,"segments",E,"The load command \"segments\" - typically the pieces of the…",45,N],[12,"symbols",E,"The \"Nlist\" style symbols in this binary - strippable",45,N],[12,"libs",E,"The dylibs this library depends on",45,N],[12,"entry",E,"The entry point (as a virtual memory address), 0 if none",45,N],[12,"old_style_entry",E,"Whether `entry` refers to an older `LC_UNIXTHREAD` instead…",45,N],[12,"name",E,"The name of the dylib, if any",45,N],[12,R[4043],E,"Are we a little-endian binary?",45,N],[12,"is_64",E,"Are we a 64-bit binary",45,N],[3,"MultiArch",E,"A Mach-o multi architecture (Fat) binary container",N,N],[12,"narches",E,E,46,N],[3,R[4344],E,"Iterator over the fat architecture headers in a…",N,N],[3,R[4345],E,"Iterator over every `MachO` binary contained in this…",N,N],[4,"Mach",E,"Either a collection of multiple architectures, or a single…",N,N],[13,"Fat",E,"A \"fat\" multi-architecture binary container",47,N],[13,"Binary",E,"A regular Mach-o binary",47,N],[5,"peek",E,"Returns a big endian magical number",N,[[["usize"]],[[R[3],["u32"]],["u32"]]]],[5,"parse_magic_and_ctx",E,"Parses a magic number, and an accompanying mach-o binary…",N,[[["usize"]],[R[3]]]],[0,"header",E,"A header contains minimal architecture information, the…",N,N],[3,"Header32",R[4216],"A 32-bit Mach-o header",N,N],[12,"magic",E,R[4044],48,N],[12,"cputype",E,R[4045],48,N],[12,R[779],E,R[4046],48,N],[12,R[5817],E,R[4047],48,N],[12,"ncmds",E,R[4048],48,N],[12,R[780],E,R[4049],48,N],[12,"flags",E,"flags",48,N],[3,"Header64",E,"A 64-bit Mach-o header",N,N],[12,"magic",E,R[4044],49,N],[12,"cputype",E,R[4045],49,N],[12,R[779],E,R[4046],49,N],[12,R[5817],E,R[4047],49,N],[12,"ncmds",E,R[4048],49,N],[12,R[780],E,R[4049],49,N],[12,"flags",E,"flags",49,N],[12,R[830],E,E,49,N],[3,"Header",E,"Generic sized header",N,N],[12,"magic",E,E,50,N],[12,"cputype",E,E,50,N],[12,R[779],E,E,50,N],[12,R[5817],E,R[4047],50,N],[12,"ncmds",E,R[4048],50,N],[12,R[780],E,R[4049],50,N],[12,"flags",E,"flags",50,N],[12,R[830],E,E,50,N],[5,"flag_to_str",E,E,N,[[["u32"]],["str"]]],[5,"filetype_to_str",E,E,N,[[["u32"]],["str"]]],[17,"MH_NOUNDEFS",E,"the object file has no undefined references",N,N],[17,"MH_INCRLINK",E,"the object file is the output of an incremental link…",N,N],[17,"MH_DYLDLINK",E,"the object file is input for the dynamic linker and can't…",N,N],[17,"MH_BINDATLOAD",E,"the object file's undefined references are bound by the…",N,N],[17,"MH_PREBOUND",E,"the file has its dynamic undefined references prebound.",N,N],[17,"MH_SPLIT_SEGS",E,"the file has its read-only and read-write segments split",N,N],[17,"MH_LAZY_INIT",E,"the shared library init routine is to be run lazily via…",N,N],[17,"MH_TWOLEVEL",E,"the image is using two-level name space bindings",N,N],[17,"MH_FORCE_FLAT",E,"the executable is forcing all images to use flat name…",N,N],[17,"MH_NOMULTIDEFS",E,"this umbrella guarantees no multiple defintions of symbols…",N,N],[17,"MH_NOFIXPREBINDING",E,"do not have dyld notify the prebinding agent about this…",N,N],[17,"MH_PREBINDABLE",E,"the binary is not prebound but can have its prebinding…",N,N],[17,"MH_ALLMODSBOUND",E,"indicates that this binary binds to all two-level…",N,N],[17,"MH_SUBSECTIONS_VIA_SYMBOLS",E,"safe to divide up the sections into sub-sections via…",N,N],[17,"MH_CANONICAL",E,"the binary has been canonicalized via the unprebind…",N,N],[17,"MH_WEAK_DEFINES",E,"the final linked image contains external weak symbols",N,N],[17,"MH_BINDS_TO_WEAK",E,"the final linked image uses weak symbols",N,N],[17,"MH_ALLOW_STACK_EXECUTION",E,"When this bit is set, all stacks in the task will be given…",N,N],[17,"MH_ROOT_SAFE",E,R[4050],N,N],[17,"MH_SETUID_SAFE",E,R[4050],N,N],[17,"MH_NO_REEXPORTED_DYLIBS",E,"When this bit is set on a dylib, the static linker does…",N,N],[17,"MH_PIE",E,"When this bit is set, the OS will load the main executable…",N,N],[17,"MH_DEAD_STRIPPABLE_DYLIB",E,"Only for use on dylibs. When linking against a dylib that…",N,N],[17,"MH_HAS_TLV_DESCRIPTORS",E,"Contains a section of type S_THREAD_LOCAL_VARIABLES",N,N],[17,"MH_NO_HEAP_EXECUTION",E,"When this bit is set, the OS will run the main executable…",N,N],[17,"MH_APP_EXTENSION_SAFE",E,"The code was linked for use in an application extension.",N,N],[17,"MH_MAGIC",E,"Mach Header magic constant",N,N],[17,"MH_CIGAM",E,E,N,N],[17,R[4351],E,"Mach Header magic constant for 64-bit",N,N],[17,"MH_CIGAM_64",E,E,N,N],[17,"MH_OBJECT",E,"relocatable object file",N,N],[17,"MH_EXECUTE",E,"demand paged executable file",N,N],[17,"MH_FVMLIB",E,"fixed VM shared library file",N,N],[17,"MH_CORE",E,"core file",N,N],[17,"MH_PRELOAD",E,"preloaded executable file",N,N],[17,"MH_DYLIB",E,"dynamically bound shared library",N,N],[17,"MH_DYLINKER",E,"dynamic link editor",N,N],[17,"MH_BUNDLE",E,"dynamically bound bundle file",N,N],[17,"MH_DYLIB_STUB",E,"shared library stub for static linking only, no section…",N,N],[17,"MH_DSYM",E,"companion file with only debug sections",N,N],[17,"MH_KEXT_BUNDLE",E,"x86_64 kexts",N,N],[17,"SIZEOF_HEADER_32",E,E,N,N],[17,"SIZEOF_HEADER_64",E,E,N,N],[11,R[130],E,R[4051],48,[[],["self"]]],[11,"size",E,E,48,[[["self"]],["usize"]]],[11,R[130],E,R[4051],49,[[],["self"]]],[11,"size",E,E,49,[[["self"]],["usize"]]],[11,"new",E,E,50,[[["ctx"]],["self"]]],[11,"cputype",E,R[4058],50,[[["self"]],["cputype"]]],[11,R[779],E,R[4059],50,[[["self"]],[R[779]]]],[11,"cpu_caps",E,R[4060],50,[[["self"]],["u32"]]],[0,"constants",R[4052],"Miscellaneous constants used inside of and when…",N,N],[0,"cputype",R[4054],E,N,N],[5,"get_arch_from_flag","goblin::mach::constants::cputype","Get the cputype and cpusubtype from a name",N,[[["str"]],[R[23]]]],[5,"get_arch_name_from_types",E,"Get the architecture name from cputype and cpusubtype",N,[[[R[779]],["cputype"]],[[R[23],["str"]],["str"]]]],[6,"CpuType",E,R[4053],N,N],[6,"CpuSubType",E,R[4053],N,N],[17,"CPU_SUBTYPE_MASK",E,"the mask for CPU feature flags",N,N],[17,"CPU_ARCH_MASK",E,"mask for architecture bits",N,N],[17,"CPU_ARCH_ABI64",E,"the mask for 64 bit ABI",N,N],[17,"CPU_ARCH_ABI64_32",E,"the mask for ILP32 ABI on 64 bit hardware",N,N],[17,"CPU_TYPE_ANY",E,E,N,N],[17,"CPU_TYPE_VAX",E,E,N,N],[17,"CPU_TYPE_MC680X0",E,E,N,N],[17,"CPU_TYPE_X86",E,E,N,N],[17,"CPU_TYPE_I386",E,E,N,N],[17,"CPU_TYPE_X86_64",E,E,N,N],[17,"CPU_TYPE_MIPS",E,E,N,N],[17,"CPU_TYPE_MC98000",E,E,N,N],[17,"CPU_TYPE_HPPA",E,E,N,N],[17,"CPU_TYPE_ARM",E,E,N,N],[17,"CPU_TYPE_ARM64",E,E,N,N],[17,"CPU_TYPE_ARM64_32",E,E,N,N],[17,"CPU_TYPE_MC88000",E,E,N,N],[17,"CPU_TYPE_SPARC",E,E,N,N],[17,"CPU_TYPE_I860",E,E,N,N],[17,"CPU_TYPE_ALPHA",E,E,N,N],[17,"CPU_TYPE_POWERPC",E,E,N,N],[17,"CPU_TYPE_POWERPC64",E,E,N,N],[17,"CPU_SUBTYPE_MULTIPLE",E,E,N,N],[17,"CPU_SUBTYPE_LITTLE_ENDIAN",E,E,N,N],[17,"CPU_SUBTYPE_BIG_ENDIAN",E,E,N,N],[17,"CPU_SUBTYPE_VAX_ALL",E,E,N,N],[17,"CPU_SUBTYPE_VAX780",E,E,N,N],[17,"CPU_SUBTYPE_VAX785",E,E,N,N],[17,"CPU_SUBTYPE_VAX750",E,E,N,N],[17,"CPU_SUBTYPE_VAX730",E,E,N,N],[17,"CPU_SUBTYPE_UVAXI",E,E,N,N],[17,"CPU_SUBTYPE_UVAXII",E,E,N,N],[17,"CPU_SUBTYPE_VAX8200",E,E,N,N],[17,"CPU_SUBTYPE_VAX8500",E,E,N,N],[17,"CPU_SUBTYPE_VAX8600",E,E,N,N],[17,"CPU_SUBTYPE_VAX8650",E,E,N,N],[17,"CPU_SUBTYPE_VAX8800",E,E,N,N],[17,"CPU_SUBTYPE_UVAXIII",E,E,N,N],[17,"CPU_SUBTYPE_MC680X0_ALL",E,E,N,N],[17,"CPU_SUBTYPE_MC68030",E,E,N,N],[17,"CPU_SUBTYPE_MC68040",E,E,N,N],[17,"CPU_SUBTYPE_MC68030_ONLY",E,E,N,N],[17,"CPU_SUBTYPE_I386_ALL",E,E,N,N],[17,"CPU_SUBTYPE_386",E,E,N,N],[17,"CPU_SUBTYPE_486",E,E,N,N],[17,"CPU_SUBTYPE_486SX",E,E,N,N],[17,"CPU_SUBTYPE_586",E,E,N,N],[17,"CPU_SUBTYPE_PENT",E,E,N,N],[17,"CPU_SUBTYPE_PENTPRO",E,E,N,N],[17,"CPU_SUBTYPE_PENTII_M3",E,E,N,N],[17,"CPU_SUBTYPE_PENTII_M5",E,E,N,N],[17,"CPU_SUBTYPE_CELERON",E,E,N,N],[17,"CPU_SUBTYPE_CELERON_MOBILE",E,E,N,N],[17,"CPU_SUBTYPE_PENTIUM_3",E,E,N,N],[17,"CPU_SUBTYPE_PENTIUM_3_M",E,E,N,N],[17,"CPU_SUBTYPE_PENTIUM_3_XEON",E,E,N,N],[17,"CPU_SUBTYPE_PENTIUM_M",E,E,N,N],[17,"CPU_SUBTYPE_PENTIUM_4",E,E,N,N],[17,"CPU_SUBTYPE_PENTIUM_4_M",E,E,N,N],[17,"CPU_SUBTYPE_ITANIUM",E,E,N,N],[17,"CPU_SUBTYPE_ITANIUM_2",E,E,N,N],[17,"CPU_SUBTYPE_XEON",E,E,N,N],[17,"CPU_SUBTYPE_XEON_MP",E,E,N,N],[17,"CPU_SUBTYPE_INTEL_FAMILY_MAX",E,E,N,N],[17,"CPU_SUBTYPE_INTEL_MODEL_ALL",E,E,N,N],[17,"CPU_SUBTYPE_X86_ALL",E,E,N,N],[17,"CPU_SUBTYPE_X86_64_ALL",E,E,N,N],[17,"CPU_SUBTYPE_X86_ARCH1",E,E,N,N],[17,"CPU_SUBTYPE_X86_64_H",E,E,N,N],[17,"CPU_SUBTYPE_MIPS_ALL",E,E,N,N],[17,"CPU_SUBTYPE_MIPS_R2300",E,E,N,N],[17,"CPU_SUBTYPE_MIPS_R2600",E,E,N,N],[17,"CPU_SUBTYPE_MIPS_R2800",E,E,N,N],[17,"CPU_SUBTYPE_MIPS_R2000A",E,E,N,N],[17,"CPU_SUBTYPE_MIPS_R2000",E,E,N,N],[17,"CPU_SUBTYPE_MIPS_R3000A",E,E,N,N],[17,"CPU_SUBTYPE_MIPS_R3000",E,E,N,N],[17,"CPU_SUBTYPE_MC98000_ALL",E,E,N,N],[17,"CPU_SUBTYPE_MC98601",E,E,N,N],[17,"CPU_SUBTYPE_HPPA_ALL",E,E,N,N],[17,"CPU_SUBTYPE_HPPA_7100",E,E,N,N],[17,"CPU_SUBTYPE_HPPA_7100LC",E,E,N,N],[17,"CPU_SUBTYPE_MC88000_ALL",E,E,N,N],[17,"CPU_SUBTYPE_MC88100",E,E,N,N],[17,"CPU_SUBTYPE_MC88110",E,E,N,N],[17,"CPU_SUBTYPE_SPARC_ALL",E,E,N,N],[17,"CPU_SUBTYPE_I860_ALL",E,E,N,N],[17,"CPU_SUBTYPE_I860_860",E,E,N,N],[17,"CPU_SUBTYPE_POWERPC_ALL",E,E,N,N],[17,"CPU_SUBTYPE_POWERPC_601",E,E,N,N],[17,"CPU_SUBTYPE_POWERPC_602",E,E,N,N],[17,"CPU_SUBTYPE_POWERPC_603",E,E,N,N],[17,"CPU_SUBTYPE_POWERPC_603E",E,E,N,N],[17,"CPU_SUBTYPE_POWERPC_603EV",E,E,N,N],[17,"CPU_SUBTYPE_POWERPC_604",E,E,N,N],[17,"CPU_SUBTYPE_POWERPC_604E",E,E,N,N],[17,"CPU_SUBTYPE_POWERPC_620",E,E,N,N],[17,"CPU_SUBTYPE_POWERPC_750",E,E,N,N],[17,"CPU_SUBTYPE_POWERPC_7400",E,E,N,N],[17,"CPU_SUBTYPE_POWERPC_7450",E,E,N,N],[17,"CPU_SUBTYPE_POWERPC_970",E,E,N,N],[17,"CPU_SUBTYPE_ARM_ALL",E,E,N,N],[17,"CPU_SUBTYPE_ARM_V4T",E,E,N,N],[17,"CPU_SUBTYPE_ARM_V6",E,E,N,N],[17,"CPU_SUBTYPE_ARM_V5TEJ",E,E,N,N],[17,"CPU_SUBTYPE_ARM_XSCALE",E,E,N,N],[17,"CPU_SUBTYPE_ARM_V7",E,E,N,N],[17,"CPU_SUBTYPE_ARM_V7F",E,E,N,N],[17,"CPU_SUBTYPE_ARM_V7S",E,E,N,N],[17,"CPU_SUBTYPE_ARM_V7K",E,E,N,N],[17,"CPU_SUBTYPE_ARM_V6M",E,E,N,N],[17,"CPU_SUBTYPE_ARM_V7M",E,E,N,N],[17,"CPU_SUBTYPE_ARM_V7EM",E,E,N,N],[17,"CPU_SUBTYPE_ARM_V8",E,E,N,N],[17,"CPU_SUBTYPE_ARM64_ALL",E,E,N,N],[17,"CPU_SUBTYPE_ARM64_V8",E,E,N,N],[17,"CPU_SUBTYPE_ARM64_E",E,E,N,N],[17,"CPU_SUBTYPE_ARM64_32_ALL",E,E,N,N],[17,"CPU_SUBTYPE_ARM64_32_V8",E,E,N,N],[17,"DYLD_MACOSX_VERSION_10_4",R[4054],E,N,N],[17,"DYLD_MACOSX_VERSION_10_5",E,E,N,N],[17,"DYLD_MACOSX_VERSION_10_6",E,E,N,N],[17,"DYLD_MACOSX_VERSION_10_7",E,E,N,N],[17,"DYLD_MACOSX_VERSION_10_8",E,E,N,N],[17,"DYLD_MACOSX_VERSION_10_9",E,E,N,N],[17,"DYLD_MACOSX_VERSION_10_10",E,E,N,N],[17,"DYLD_MACOSX_VERSION_10_11",E,E,N,N],[17,"DYLD_MACOSX_VERSION_10_12",E,E,N,N],[17,"DYLD_MACOSX_VERSION_10_13",E,E,N,N],[17,"DYLD_IOS_VERSION_2_0",E,E,N,N],[17,"DYLD_IOS_VERSION_2_1",E,E,N,N],[17,"DYLD_IOS_VERSION_2_2",E,E,N,N],[17,"DYLD_IOS_VERSION_3_0",E,E,N,N],[17,"DYLD_IOS_VERSION_3_1",E,E,N,N],[17,"DYLD_IOS_VERSION_3_2",E,E,N,N],[17,"DYLD_IOS_VERSION_4_0",E,E,N,N],[17,"DYLD_IOS_VERSION_4_1",E,E,N,N],[17,"DYLD_IOS_VERSION_4_2",E,E,N,N],[17,"DYLD_IOS_VERSION_4_3",E,E,N,N],[17,"DYLD_IOS_VERSION_5_0",E,E,N,N],[17,"DYLD_IOS_VERSION_5_1",E,E,N,N],[17,"DYLD_IOS_VERSION_6_0",E,E,N,N],[17,"DYLD_IOS_VERSION_6_1",E,E,N,N],[17,"DYLD_IOS_VERSION_7_0",E,E,N,N],[17,"DYLD_IOS_VERSION_7_1",E,E,N,N],[17,"DYLD_IOS_VERSION_8_0",E,E,N,N],[17,"DYLD_IOS_VERSION_9_0",E,E,N,N],[17,"DYLD_IOS_VERSION_10_0",E,E,N,N],[17,"DYLD_IOS_VERSION_11_0",E,E,N,N],[17,"SECTION_TYPE",E,"256 section types",N,N],[17,"SECTION_ATTRIBUTES",E,"24 section attributes",N,N],[17,"S_REGULAR",E,"regular section",N,N],[17,"S_ZEROFILL",E,"zero fill on demand section",N,N],[17,"S_CSTRING_LITERALS",E,"section with only literal C strings",N,N],[17,"S_4BYTE_LITERALS",E,"section with only 4 byte literals",N,N],[17,"S_8BYTE_LITERALS",E,"section with only 8 byte literals",N,N],[17,"S_LITERAL_POINTERS",E,"section with only pointers to",N,N],[17,"S_NON_LAZY_SYMBOL_POINTERS",E,"section with only non-lazy symbol pointers",N,N],[17,"S_LAZY_SYMBOL_POINTERS",E,"section with only lazy symbol pointers",N,N],[17,"S_SYMBOL_STUBS",E,"section with only symbol stubs, byte size of stub in the…",N,N],[17,"S_MOD_INIT_FUNC_POINTERS",E,"section with only function pointers for initialization",N,N],[17,"S_MOD_TERM_FUNC_POINTERS",E,"section with only function pointers for termination",N,N],[17,"S_COALESCED",E,"section contains symbols that are to be coalesced",N,N],[17,"S_GB_ZEROFILL",E,"zero fill on demand section that can be larger than 4…",N,N],[17,"S_INTERPOSING",E,"section with only pairs of function pointers for interposing",N,N],[17,"S_16BYTE_LITERALS",E,"section with only 16 byte literals",N,N],[17,"S_DTRACE_DOF",E,"section contains DTrace Object Format",N,N],[17,"S_LAZY_DYLIB_SYMBOL_POINTERS",E,"section with only lazy symbol pointers to lazy loaded dylibs",N,N],[17,"S_THREAD_LOCAL_REGULAR",E,R[4055],N,N],[17,"S_THREAD_LOCAL_ZEROFILL",E,R[4055],N,N],[17,"S_THREAD_LOCAL_VARIABLES",E,"TLV descriptors",N,N],[17,"S_THREAD_LOCAL_VARIABLE_POINTERS",E,"pointers to TLV  descriptors",N,N],[17,"S_THREAD_LOCAL_INIT_FUNCTION_POINTERS",E,"functions to call to initialize TLV values",N,N],[17,"SECTION_ATTRIBUTES_USR",E,"User setable attributes",N,N],[17,"S_ATTR_PURE_INSTRUCTIONS",E,"section contains only true machine instructions",N,N],[17,"S_ATTR_NO_TOC",E,"section contains coalesced symbols that are not to be in a…",N,N],[17,"S_ATTR_STRIP_STATIC_SYMS",E,"ok to strip static symbols in this section in files with…",N,N],[17,"S_ATTR_NO_DEAD_STRIP",E,"no dead stripping",N,N],[17,"S_ATTR_LIVE_SUPPORT",E,"blocks are live if they reference live blocks",N,N],[17,"S_ATTR_SELF_MODIFYING_CODE",E,"Used with i386 code stubs written on by dyld",N,N],[17,"S_ATTR_DEBUG",E,"debug section",N,N],[17,"SECTION_ATTRIBUTES_SYS",E,"system setable attributes",N,N],[17,"S_ATTR_SOME_INSTRUCTIONS",E,"section contains some machine instructions",N,N],[17,"S_ATTR_EXT_RELOC",E,"section has external relocation entries",N,N],[17,"S_ATTR_LOC_RELOC",E,"section has local relocation entries",N,N],[17,"SEG_PAGEZERO",E,"the pagezero segment which has no protections and catches…",N,N],[17,"SEG_TEXT",E,"the tradition UNIX text segment",N,N],[17,"SECT_TEXT",E,"the real text part of the text section no headers, and no…",N,N],[17,"SECT_FVMLIB_INIT0",E,"the fvmlib initialization section",N,N],[17,"SECT_FVMLIB_INIT1",E,"the section following the fvmlib initialization section",N,N],[17,"SEG_DATA",E,"the tradition UNIX data segment",N,N],[17,"SECT_DATA",E,"the real initialized data section no padding, no bss overlap",N,N],[17,"SECT_BSS",E,"the real uninitialized data sectionno padding",N,N],[17,"SECT_COMMON",E,"the section common symbols are allocated in by the link…",N,N],[17,"SEG_OBJC",E,"objective-C runtime segment",N,N],[17,"SECT_OBJC_SYMBOLS",E,"symbol table",N,N],[17,"SECT_OBJC_MODULES",E,"module information",N,N],[17,"SECT_OBJC_STRINGS",E,R[4056],N,N],[17,"SECT_OBJC_REFS",E,R[4056],N,N],[17,"SEG_ICON",E,"the icon segment",N,N],[17,"SECT_ICON_HEADER",E,"the icon headers",N,N],[17,"SECT_ICON_TIFF",E,"the icons in tiff format",N,N],[17,"SEG_LINKEDIT",E,"the segment containing all structs created and maintained…",N,N],[17,"SEG_UNIXSTACK",E,"the unix stack segment",N,N],[17,"SEG_IMPORT",E,"the segment for the self (dyld) modifing code stubs that…",N,N],[17,"VM_PROT_READ",E,"Segment is readable.",N,N],[17,"VM_PROT_WRITE",E,"Segment is writable.",N,N],[17,"VM_PROT_EXECUTE",E,"Segment is executable.",N,N],[0,"fat",R[4052],"A Mach-o fat binary is a multi-architecture binary container",N,N],[3,"FatHeader",R[4217],"The Mach-o `FatHeader` always has its data bigendian",N,N],[12,"magic",E,"The magic number, `cafebabe`",51,N],[12,"nfat_arch",E,"How many fat architecture headers there are",51,N],[3,"FatArch",E,"The Mach-o `FatArch` always has its data bigendian",N,N],[12,"cputype",E,"What kind of CPU this binary is",52,N],[12,R[779],E,E,52,N],[12,"offset",E,"Where in the fat binary it starts",52,N],[12,"size",E,"How big the binary is",52,N],[12,"align",E,E,52,N],[17,"FAT_MAGIC",E,E,N,N],[17,"FAT_CIGAM",E,E,N,N],[17,"SIZEOF_FAT_HEADER",E,E,N,N],[17,"SIZEOF_FAT_ARCH",E,E,N,N],[11,R[130],E,"Reinterpret a `FatHeader` from `bytes`",51,[[],[R[4057]]]],[11,"from_fd",E,"Reads a `FatHeader` from a `File` on disk",51,[[["file"]],[[R[4057]],[R[3],[R[4057]]]]]],[11,"parse",E,"Parse a mach-o fat header from the `bytes`",51,[[],[[R[3],[R[4057]]],[R[4057]]]]],[11,"slice",E,"Get the slice of bytes this header describes from `bytes`",52,[[["self"]]]],[11,"cputype",E,R[4058],52,[[["self"]],["cputype"]]],[11,R[779],E,R[4059],52,[[["self"]],[R[779]]]],[11,"cpu_caps",E,R[4060],52,[[["self"]],["u32"]]],[11,"is_64",E,"Whether this fat architecture header describes a 64-bit…",52,[[["self"]],["bool"]]],[11,"parse",E,"Parse a `FatArch` header from `bytes` at `offset`",52,[[["usize"]],[R[3]]]],[0,R[810],R[4052],"Load commands tell the kernel and dynamic linker anything…",N,N],[3,R[4271],R[4218],"Occurs at the beginning of every load command to serve as…",N,N],[12,"cmd",E,E,53,N],[12,"cmdsize",E,E,53,N],[3,"Section32",E,E,N,N],[12,"sectname",E,R[4061],54,N],[12,"segname",E,R[4062],54,N],[12,"addr",E,R[4063],54,N],[12,"size",E,R[4064],54,N],[12,"offset",E,R[4065],54,N],[12,"align",E,R[4066],54,N],[12,"reloff",E,R[4067],54,N],[12,"nreloc",E,R[4068],54,N],[12,"flags",E,"flags (section type and attributes)",54,N],[12,R[4079],E,R[4069],54,N],[12,R[4080],E,R[4070],54,N],[3,"Section64",E,"for 64-bit architectures",N,N],[12,"sectname",E,R[4061],55,N],[12,"segname",E,R[4062],55,N],[12,"addr",E,R[4063],55,N],[12,"size",E,R[4064],55,N],[12,"offset",E,R[4065],55,N],[12,"align",E,R[4066],55,N],[12,"reloff",E,R[4067],55,N],[12,"nreloc",E,R[4068],55,N],[12,"flags",E,R[4129],55,N],[12,R[4079],E,R[4069],55,N],[12,R[4080],E,R[4070],55,N],[12,"reserved3",E,R[830],55,N],[3,R[4272],E,E,N,N],[12,"cmd",E,E,56,N],[12,"cmdsize",E,E,56,N],[12,"segname",E,E,56,N],[12,"vmaddr",E,E,56,N],[12,"vmsize",E,E,56,N],[12,"fileoff",E,E,56,N],[12,"filesize",E,E,56,N],[12,"maxprot",E,E,56,N],[12,"initprot",E,E,56,N],[12,"nsects",E,E,56,N],[12,"flags",E,E,56,N],[3,R[4273],E,E,N,N],[12,"cmd",E,E,57,N],[12,"cmdsize",E,E,57,N],[12,"segname",E,E,57,N],[12,"vmaddr",E,E,57,N],[12,"vmsize",E,E,57,N],[12,"fileoff",E,E,57,N],[12,"filesize",E,E,57,N],[12,"maxprot",E,E,57,N],[12,"initprot",E,E,57,N],[12,"nsects",E,E,57,N],[12,"flags",E,E,57,N],[3,"Fvmlib",E,"Fixed virtual memory shared libraries are identified by…",N,N],[12,"name",E,"library's target pathname",58,N],[12,R[4168],E,"library's minor version number",58,N],[12,R[4106],E,"library's header address",58,N],[3,R[4274],E,"A fixed virtual shared library (fipub constype ==…",N,N],[12,"cmd",E,"LC_IDFVMLIB or LC_LOADFVMLIB",59,N],[12,"cmdsize",E,R[4071],59,N],[12,"fvmlib",E,R[4072],59,N],[3,"Dylib",E,"A dynamically linked shared library (fipub constype ==…",N,N],[12,"name",E,R[4073],60,N],[12,"timestamp",E,"library's build time stamp",60,N],[12,"current_version",E,"library's current version number",60,N],[12,"compatibility_version",E,"library's compatibility vers number",60,N],[3,R[4275],E,E,N,N],[12,"cmd",E,"LC_ID_DYLIB, LC_LOAD_DYLIB, LC_LOAD_WEAK_DYLIB,…",61,N],[12,"cmdsize",E,R[4071],61,N],[12,"dylib",E,R[4072],61,N],[3,R[4276],E,"A dynamically linked shared library may be a subframework…",N,N],[12,"cmd",E,R[4109],62,N],[12,"cmdsize",E,"includes umbrella string",62,N],[12,"umbrella",E,"the umbrella framework name",62,N],[3,R[4277],E,"For dynamically linked shared libraries that are…",N,N],[12,"cmd",E,R[4111],63,N],[12,"cmdsize",E,"includes client string",63,N],[12,"client",E,"the client name",63,N],[3,R[4278],E,"A dynamically linked shared library may be a sub_umbrella…",N,N],[12,"cmd",E,R[4110],64,N],[12,"cmdsize",E,"includes sub_umbrella string",64,N],[12,"sub_umbrella",E,"the sub_umbrella framework name",64,N],[3,R[4279],E,"A dynamically linked shared library may be a sub_library…",N,N],[12,"cmd",E,R[4112],65,N],[12,"cmdsize",E,"includes sub_library string",65,N],[12,"sub_library",E,"the sub_library name",65,N],[3,R[4280],E,"A program (type == MH_EXECUTE) that is prebound to its…",N,N],[12,"cmd",E,R[4107],66,N],[12,"cmdsize",E,"includes strings",66,N],[12,"name",E,R[4073],66,N],[12,"nmodules",E,"number of modules in library",66,N],[12,"linked_modules",E,"bit vector of linked modules",66,N],[3,R[4281],E,"The name of the dynamic linker",N,N],[12,"cmd",E,E,67,N],[12,"cmdsize",E,E,67,N],[12,"name",E,E,67,N],[3,R[4282],E,"Thread commands contain machine-specific data structures…",N,N],[12,"cmd",E,"LC_THREAD or  LC_UNIXTHREAD",68,N],[12,"cmdsize",E,R[4074],68,N],[12,"flavor",E,"flavor of thread state (but you also need to know the…",68,N],[12,"count",E,"number of elements in `thread_state` that are valid",68,N],[12,"thread_state",E,"The raw thread state, details of which varies by CPU",68,N],[3,R[4283],E,"The routines command contains the address of the dynamic…",N,N],[12,"cmd",E,R[4108],69,N],[12,"cmdsize",E,R[4074],69,N],[12,R[4075],E,R[4076],69,N],[12,R[4077],E,R[4078],69,N],[12,R[4079],E,E,69,N],[12,R[4080],E,E,69,N],[12,"reserved3",E,E,69,N],[12,"reserved4",E,E,69,N],[12,"reserved5",E,E,69,N],[12,"reserved6",E,E,69,N],[3,R[4284],E,"The 64-bit routines command.  Same use as above.",N,N],[12,"cmd",E,R[4115],70,N],[12,"cmdsize",E,R[4074],70,N],[12,R[4075],E,R[4076],70,N],[12,R[4077],E,R[4078],70,N],[12,R[4079],E,E,70,N],[12,R[4080],E,E,70,N],[12,"reserved3",E,E,70,N],[12,"reserved4",E,E,70,N],[12,"reserved5",E,E,70,N],[12,"reserved6",E,E,70,N],[3,R[4285],E,E,N,N],[12,"cmd",E,E,71,N],[12,"cmdsize",E,E,71,N],[12,"symoff",E,E,71,N],[12,"nsyms",E,E,71,N],[12,"stroff",E,E,71,N],[12,"strsize",E,E,71,N],[3,R[4286],E,"This is the second set of the symbolic information which…",N,N],[12,"cmd",E,E,72,N],[12,"cmdsize",E,E,72,N],[12,"ilocalsym",E,"index to local symbols",72,N],[12,"nlocalsym",E,R[4082],72,N],[12,R[4086],E,"index to externally defined symbols",72,N],[12,R[4088],E,R[4081],72,N],[12,"iundefsym",E,"index to undefined symbols",72,N],[12,"nundefsym",E,"number of undefined symbols",72,N],[12,"tocoff",E,"file offset to table of contents",72,N],[12,"ntoc",E,"number of entries in table of contents",72,N],[12,"modtaboff",E,"file offset to module table",72,N],[12,"nmodtab",E,"number of module table entries",72,N],[12,"extrefsymoff",E,"offset to referenced symbol table",72,N],[12,"nextrefsyms",E,"number of referenced symbol table entries",72,N],[12,"indirectsymoff",E,"file offset to the indirect symbol table",72,N],[12,"nindirectsyms",E,"number of indirect symbol table entries",72,N],[12,"extreloff",E,"offset to external relocation entries",72,N],[12,"nextrel",E,R[4083],72,N],[12,"locreloff",E,"offset to local relocation entries",72,N],[12,"nlocrel",E,"number of local relocation entries",72,N],[3,R[4287],E,"a table of contents entry",N,N],[12,"symbol_index",E,"the defined external symbol (index into the symbol table)",73,N],[12,"module_index",E,"index into the module table this symbol is defined in",73,N],[3,R[4288],E,"a module table entry",N,N],[12,R[4084],E,R[4085],74,N],[12,R[4086],E,R[4087],74,N],[12,R[4088],E,R[4081],74,N],[12,"irefsym",E,R[4089],74,N],[12,"nrefsym",E,R[4090],74,N],[12,"ilocalsym",E,R[4091],74,N],[12,"nlocalsym",E,R[4082],74,N],[12,"iextrel",E,R[4092],74,N],[12,"nextrel",E,R[4083],74,N],[12,R[4093],E,R[4094],74,N],[12,R[4095],E,R[4096],74,N],[12,R[4099],E,"the (__OBJC,_module_info) section",74,N],[12,R[4097],E,R[4098],74,N],[3,R[4289],E,"a 64-bit module table entry",N,N],[12,R[4084],E,R[4085],75,N],[12,R[4086],E,R[4087],75,N],[12,R[4088],E,R[4081],75,N],[12,"irefsym",E,R[4089],75,N],[12,"nrefsym",E,R[4090],75,N],[12,"ilocalsym",E,R[4091],75,N],[12,"nlocalsym",E,R[4082],75,N],[12,"iextrel",E,R[4092],75,N],[12,"nextrel",E,R[4083],75,N],[12,R[4093],E,R[4094],75,N],[12,R[4095],E,R[4096],75,N],[12,R[4097],E,R[4098],75,N],[12,R[4099],E,R[4098],75,N],[3,R[4290],E,"The entries in the reference symbol table are used when…",N,N],[12,"isym",E,"24 bits bit-field index into the symbol table",76,N],[12,"flags",E,"flags to indicate the type of reference",76,N],[3,R[4291],E,"The twolevel_hints_command contains the offset and number…",N,N],[12,"cmd",E,R[4113],77,N],[12,"cmdsize",E,"sizeof(struct twolevel_hints_command)",77,N],[12,"offset",E,"offset to the hint table",77,N],[12,"nhints",E,"number of hints in the hint table",77,N],[3,R[4292],E,"The entries in the two-level namespace lookup hints table…",N,N],[12,"isub_image",E,"index into the sub images",78,N],[12,"itoc",E,"24 bit field index into the table of contents",78,N],[3,R[4293],E,"The prebind_cksum_command contains the value of the…",N,N],[12,"cmd",E,R[4114],79,N],[12,"cmdsize",E,"sizeof(struct prebind_cksum_command)",79,N],[12,"cksum",E,"the check sum or zero",79,N],[3,R[4294],E,"The uuid load command contains a single 128-bit unique…",N,N],[12,"cmd",E,"LC_UUID",80,N],[12,"cmdsize",E,"sizeof(struct uuid_command)",80,N],[12,"uuid",E,"16 bytes the 128-bit uuid",80,N],[3,R[4295],E,"The rpath_command contains a path which at runtime should…",N,N],[12,"cmd",E,"LC_RPATH",81,N],[12,"cmdsize",E,"includes string",81,N],[12,"path",E,"path to add to run path",81,N],[3,R[4296],E,"The linkedit_data_command contains the offsets and sizes…",N,N],[12,"cmd",E,"LC_CODE_SIGNATURE, LC_SEGMENT_SPLIT_INFO,…",82,N],[12,"cmdsize",E,"sizeof(struct linkedit_data_command)",82,N],[12,"dataoff",E,"file offset of data in __LINKEDIT segment",82,N],[12,"datasize",E,"file size of data in __LINKEDIT segment",82,N],[3,R[4297],E,"The encryption_info_command contains the file offset and…",N,N],[12,"cmd",E,R[4116],83,N],[12,"cmdsize",E,"sizeof(struct encryption_info_command)",83,N],[12,"cryptoff",E,R[4100],83,N],[12,"cryptsize",E,R[4101],83,N],[12,"cryptid",E,R[4102],83,N],[3,R[4298],E,"The encryption_info_command_64 contains the file offset…",N,N],[12,"cmd",E,R[4118],84,N],[12,"cmdsize",E,"sizeof(struct encryption_info_command_64)",84,N],[12,"cryptoff",E,R[4100],84,N],[12,"cryptsize",E,R[4101],84,N],[12,"cryptid",E,R[4102],84,N],[12,"pad",E,"padding to make this struct's size a multiple of 8 bytes",84,N],[3,R[4299],E,"The version_min_command contains the min OS version on…",N,N],[12,"cmd",E,E,85,N],[12,"cmdsize",E,E,85,N],[12,"version",E,R[4103],85,N],[12,"sdk",E,R[4103],85,N],[3,R[4300],E,E,N,N],[12,"cmd",E,"LC_DYLD_INFO or LC_DYLD_INFO_ONLY",86,N],[12,"cmdsize",E,"sizeof(struct dyld_info_command)",86,N],[12,"rebase_off",E,"file offset to rebase info",86,N],[12,"rebase_size",E,"size of rebase info",86,N],[12,"bind_off",E,"file offset to binding info",86,N],[12,"bind_size",E,"size of binding info",86,N],[12,"weak_bind_off",E,"file offset to weak binding info",86,N],[12,"weak_bind_size",E,"size of weak binding info",86,N],[12,"lazy_bind_off",E,R[4104],86,N],[12,"lazy_bind_size",E,R[4105],86,N],[12,"export_off",E,R[4104],86,N],[12,"export_size",E,R[4105],86,N],[3,R[4301],E,"The linker_option_command contains linker options embedded…",N,N],[12,"cmd",E,"LC_LINKER_OPTION only used in MH_OBJECT fipub constypes",87,N],[12,"cmdsize",E,E,87,N],[12,"count",E,"number of strings concatenation of zero terminated UTF8…",87,N],[3,R[4302],E,"The symseg_command contains the offset and size of the GNU…",N,N],[12,"cmd",E,"LC_SYMSEG",88,N],[12,"cmdsize",E,"sizeof(struct symseg_command)",88,N],[12,"offset",E,"symbol segment offset",88,N],[12,"size",E,"symbol segment size in bytes",88,N],[3,R[4303],E,"The ident_command contains a free format string table…",N,N],[12,"cmd",E,"LC_IDENT",89,N],[12,"cmdsize",E,"strings that follow this command",89,N],[3,R[4304],E,"The fvmfile_command contains a reference to a file to be…",N,N],[12,"cmd",E,"LC_FVMFILE",90,N],[12,"cmdsize",E,R[4071],90,N],[12,"name",E,"files pathname",90,N],[12,R[4106],E,"files virtual address",90,N],[3,R[4305],E,"The entry_point_command is a replacement for…",N,N],[12,"cmd",E,E,91,N],[12,"cmdsize",E,E,91,N],[12,"entryoff",E,"uint64_t file __TEXT offset of main",91,N],[12,R[5433],E,"uint64_t if not zero, initial stack size",91,N],[3,R[4306],E,"The source_version_command is an optional load command…",N,N],[12,"cmd",E,R[4117],92,N],[12,"cmdsize",E,E,92,N],[12,"version",E,"A.B.C.D.E packed as a24.b10.c10.d10.e10",92,N],[3,R[4307],E,"The LC_DATA_IN_CODE load commands uses a…",N,N],[12,"offset",E,"from mach_header to start of data range",93,N],[12,"length",E,"number of bytes in data range",93,N],[12,"kind",E,"a DICE_KIND_* value",93,N],[3,R[4308],E,"A tagged LoadCommand union",N,N],[12,"offset",E,"The offset this load command occurs at",94,N],[12,"command",E,"Which load command this is inside a variant",94,N],[4,R[4309],E,"The various load commands as a cast-free variant/enum",N,N],[13,"Segment32",E,E,95,N],[13,"Segment64",E,E,95,N],[13,"Uuid",E,E,95,N],[13,"Symtab",E,E,95,N],[13,"Symseg",E,E,95,N],[13,"Thread",E,E,95,N],[13,"Unixthread",E,E,95,N],[13,"LoadFvmlib",E,E,95,N],[13,"IdFvmlib",E,E,95,N],[13,"Ident",E,E,95,N],[13,"Fvmfile",E,E,95,N],[13,"Prepage",E,E,95,N],[13,"Dysymtab",E,E,95,N],[13,"LoadDylib",E,E,95,N],[13,"IdDylib",E,E,95,N],[13,"LoadDylinker",E,E,95,N],[13,"IdDylinker",E,E,95,N],[13,"PreboundDylib",E,E,95,N],[13,"Routines32",E,E,95,N],[13,"Routines64",E,E,95,N],[13,"SubFramework",E,E,95,N],[13,"SubUmbrella",E,E,95,N],[13,"SubClient",E,E,95,N],[13,"SubLibrary",E,E,95,N],[13,"TwolevelHints",E,E,95,N],[13,"PrebindCksum",E,E,95,N],[13,"LoadWeakDylib",E,E,95,N],[13,"Rpath",E,E,95,N],[13,"CodeSignature",E,E,95,N],[13,"SegmentSplitInfo",E,E,95,N],[13,"ReexportDylib",E,E,95,N],[13,"LazyLoadDylib",E,E,95,N],[13,"EncryptionInfo32",E,E,95,N],[13,"EncryptionInfo64",E,E,95,N],[13,"DyldInfo",E,E,95,N],[13,"DyldInfoOnly",E,E,95,N],[13,"LoadUpwardDylib",E,E,95,N],[13,"VersionMinMacosx",E,E,95,N],[13,"VersionMinIphoneos",E,E,95,N],[13,"FunctionStarts",E,E,95,N],[13,"DyldEnvironment",E,E,95,N],[13,"Main",E,E,95,N],[13,"DataInCode",E,E,95,N],[13,"SourceVersion",E,E,95,N],[13,"DylibCodeSignDrs",E,E,95,N],[13,"LinkerOption",E,E,95,N],[13,"LinkerOptimizationHint",E,E,95,N],[13,"Unimplemented",E,E,95,N],[5,"cmd_to_str",E,E,N,[[["u32"]],["str"]]],[6,"LcStr",E,E,N,N],[17,"SIZEOF_LOAD_COMMAND",E,E,N,N],[17,"SIZEOF_LC_STR",E,E,N,N],[17,"SIZEOF_SECTION_32",E,E,N,N],[17,"SIZEOF_SECTION_64",E,E,N,N],[17,"SIZEOF_SEGMENT_COMMAND_32",E,E,N,N],[17,"SIZEOF_SEGMENT_COMMAND_64",E,E,N,N],[17,"SIZEOF_FVMLIB",E,E,N,N],[17,"SIZEOF_FVMLIB_COMMAND",E,E,N,N],[17,"SIZEOF_DYLIB",E,E,N,N],[17,"SIZEOF_DYLIB_COMMAND",E,E,N,N],[17,"SIZEOF_SUB_FRAMEWORK_COMMAND",E,E,N,N],[17,"SIZEOF_SUB_CLIENT_COMMAND",E,E,N,N],[17,"SIZEOF_SUB_UMBRELLA_COMMAND",E,E,N,N],[17,"SIZEOF_SUB_LIBRARY_COMMAND",E,E,N,N],[17,"SIZEOF_PREBOUND_DYLIB_COMMAND",E,E,N,N],[17,"SIZEOF_DYLINKER_COMMAND",E,E,N,N],[17,"SIZEOF_SYMTAB_COMMAND",E,E,N,N],[17,"SIZEOF_DYSYMTAB_COMMAND",E,E,N,N],[17,"SIZEOF_UUID_COMMAND",E,E,N,N],[17,"SIZEOF_RPATH_COMMAND",E,E,N,N],[17,"SIZEOF_LINKEDIT_DATA_COMMAND",E,E,N,N],[17,"SIZEOF_ENCRYPTION_INFO_COMMAND_32",E,E,N,N],[17,"SIZEOF_ENCRYPTION_INFO_COMMAND_64",E,E,N,N],[17,"SIZEOF_VERSION_MIN_COMMAND",E,E,N,N],[17,"SIZEOF_DYLIB_INFO_COMMAND",E,E,N,N],[17,"SIZEOF_LINKER_OPTION_COMMAND",E,E,N,N],[17,"SIZEOF_SYMSEG_COMMAND",E,E,N,N],[17,"SIZEOF_IDENT_COMMAND",E,E,N,N],[17,"SIZEOF_FVMFILE_COMMAND",E,E,N,N],[17,"SIZEOF_ENTRY_POINT_COMMAND",E,E,N,N],[17,"LC_REQ_DYLD",E,E,N,N],[17,"LC_LOAD_WEAK_DYLIB",E,E,N,N],[17,"LC_RPATH",E,E,N,N],[17,"LC_REEXPORT_DYLIB",E,E,N,N],[17,"LC_DYLD_INFO_ONLY",E,E,N,N],[17,"LC_LOAD_UPWARD_DYLIB",E,E,N,N],[17,"LC_MAIN",E,E,N,N],[17,"LC_SEGMENT",E,E,N,N],[17,"LC_SYMTAB",E,E,N,N],[17,"LC_SYMSEG",E,E,N,N],[17,"LC_THREAD",E,E,N,N],[17,"LC_UNIXTHREAD",E,E,N,N],[17,"LC_LOADFVMLIB",E,E,N,N],[17,"LC_IDFVMLIB",E,E,N,N],[17,"LC_IDENT",E,E,N,N],[17,"LC_FVMFILE",E,E,N,N],[17,"LC_PREPAGE",E,E,N,N],[17,"LC_DYSYMTAB",E,E,N,N],[17,"LC_LOAD_DYLIB",E,E,N,N],[17,"LC_ID_DYLIB",E,E,N,N],[17,"LC_LOAD_DYLINKER",E,E,N,N],[17,"LC_ID_DYLINKER",E,E,N,N],[17,R[4107],E,E,N,N],[17,R[4108],E,E,N,N],[17,R[4109],E,E,N,N],[17,R[4110],E,E,N,N],[17,R[4111],E,E,N,N],[17,R[4112],E,E,N,N],[17,R[4113],E,E,N,N],[17,R[4114],E,E,N,N],[17,R[4350],E,E,N,N],[17,R[4115],E,E,N,N],[17,"LC_UUID",E,E,N,N],[17,"LC_CODE_SIGNATURE",E,E,N,N],[17,"LC_SEGMENT_SPLIT_INFO",E,E,N,N],[17,"LC_LAZY_LOAD_DYLIB",E,E,N,N],[17,R[4116],E,E,N,N],[17,"LC_DYLD_INFO",E,E,N,N],[17,"LC_VERSION_MIN_MACOSX",E,E,N,N],[17,"LC_VERSION_MIN_IPHONEOS",E,E,N,N],[17,"LC_FUNCTION_STARTS",E,E,N,N],[17,"LC_DYLD_ENVIRONMENT",E,E,N,N],[17,"LC_DATA_IN_CODE",E,E,N,N],[17,R[4117],E,E,N,N],[17,"LC_DYLIB_CODE_SIGN_DRS",E,E,N,N],[17,R[4118],E,E,N,N],[17,"LC_LINKER_OPTION",E,E,N,N],[17,"LC_LINKER_OPTIMIZATION_HINT",E,E,N,N],[11,"name",E,E,56,[[["self"]],[[R[3],["str"]],["str"]]]],[11,"name",E,E,57,[[["self"]],[[R[3],["str"]],["str"]]]],[11,"instruction_pointer",E,E,68,[[["self"],["cputype"]],[["u64"],[R[3],["u64"]]]]],[11,"new",E,E,71,[[],["self"]]],[11,"new",E,E,72,[[],["self"]]],[11,"new",E,E,85,[[["bool"]],["self"]]],[11,"cmdsize",E,E,95,[[["self"]],["usize"]]],[11,"cmd",E,E,95,[[["self"]],["u32"]]],[11,"parse",E,"Parse a load command from `bytes` at `offset` with the…",94,[[["endian"],["usize"]],[R[3]]]],[0,"symbols",R[4052],"\"Nlist\" style symbols in this binary - beware, like most…",N,N],[3,"Nlist32",R[4219],E,N,N],[12,"n_strx",E,R[4119],96,N],[12,"n_type",E,R[4120],96,N],[12,"n_sect",E,R[4121],96,N],[12,"n_desc",E,R[4122],96,N],[12,"n_value",E,R[4123],96,N],[3,"Nlist64",E,E,N,N],[12,"n_strx",E,R[4119],97,N],[12,"n_type",E,R[4120],97,N],[12,"n_sect",E,R[4121],97,N],[12,"n_desc",E,R[4122],97,N],[12,"n_value",E,R[4123],97,N],[3,"Nlist",E,E,N,N],[12,"n_strx",E,R[4119],98,N],[12,"n_type",E,R[4120],98,N],[12,"n_sect",E,R[4121],98,N],[12,"n_desc",E,R[4122],98,N],[12,"n_value",E,R[4123],98,N],[3,"SymbolsCtx",E,E,N,N],[12,"nsyms",E,E,99,N],[12,"strtab",E,E,99,N],[12,"ctx",E,E,99,N],[3,R[4183],E,E,N,N],[3,"Symbols",E,"A zero-copy \"nlist\" style symbol table (\"stab\"), including…",N,N],[5,"n_type_to_str",E,E,N,[[["u8"]],["str"]]],[17,"N_STAB",E,"if any of these bits set, a symbolic debugging entry",N,N],[17,"N_PEXT",E,"private external symbol bit",N,N],[17,"N_TYPE",E,"mask for the type bits",N,N],[17,"N_EXT",E,"external symbol bit, set for external symbols",N,N],[17,"NO_SECT",E,"symbol is not in any section",N,N],[17,"MAX_SECT",E,"1 thru 255 inclusive",N,N],[17,"N_UNDF",E,"undefined, n_sect == NO_SECT",N,N],[17,"N_ABS",E,"absolute, n_sect == NO_SECT",N,N],[17,"N_SECT",E,"defined in section number n_sect",N,N],[17,"N_PBUD",E,"prebound undefined (defined in a dylib)",N,N],[17,"N_INDR",E,"indirect",N,N],[17,"N_GSYM",E,E,N,N],[17,"N_FNAME",E,E,N,N],[17,"N_FUN",E,E,N,N],[17,"N_STSYM",E,E,N,N],[17,"N_LCSYM",E,E,N,N],[17,"N_BNSYM",E,E,N,N],[17,"N_PC",E,E,N,N],[17,"N_AST",E,E,N,N],[17,"N_OPT",E,E,N,N],[17,"N_RSYM",E,E,N,N],[17,"N_SLINE",E,E,N,N],[17,"N_ENSYM",E,E,N,N],[17,"N_SSYM",E,E,N,N],[17,"N_SO",E,E,N,N],[17,"N_OSO",E,E,N,N],[17,"N_LSYM",E,E,N,N],[17,"N_BINCL",E,E,N,N],[17,"N_SOL",E,E,N,N],[17,"N_PARAMS",E,E,N,N],[17,"N_VERSION",E,E,N,N],[17,"N_OLEVEL",E,E,N,N],[17,"N_PSYM",E,E,N,N],[17,"N_EINCL",E,E,N,N],[17,"N_ENTRY",E,E,N,N],[17,"N_LBRAC",E,E,N,N],[17,"N_EXCL",E,E,N,N],[17,"N_RBRAC",E,E,N,N],[17,"N_BCOMM",E,E,N,N],[17,"N_ECOMM",E,E,N,N],[17,"N_ECOML",E,E,N,N],[17,"N_LENG",E,E,N,N],[17,"NLIST_TYPE_MASK",E,E,N,N],[17,"NLIST_TYPE_GLOBAL",E,E,N,N],[17,"NLIST_TYPE_LOCAL",E,E,N,N],[17,"REFERENCE_TYPE",E,"Mask for reference flags of `n_desc` field.",N,N],[17,"REFERENCE_FLAG_UNDEFINED_NON_LAZY",E,"This symbol is a reference to an external non-lazy (data)…",N,N],[17,"REFERENCE_FLAG_UNDEFINED_LAZY",E,"This symbol is a reference to an external lazy symbol—that…",N,N],[17,"REFERENCE_FLAG_DEFINED",E,"This symbol is defined in this module.",N,N],[17,"REFERENCE_FLAG_PRIVATE_DEFINED",E,"This symbol is defined in this module and is visible only…",N,N],[17,"REFERENCE_FLAG_PRIVATE_UNDEFINED_NON_LAZY",E,R[4124],N,N],[17,"REFERENCE_FLAG_PRIVATE_UNDEFINED_LAZY",E,R[4124],N,N],[17,"REFERENCED_DYNAMICALLY",E,"Must be set for any defined symbol that is referenced by…",N,N],[17,"N_DESC_DISCARDED",E,"Sometimes used by the dynamic linker at runtime in a fully…",N,N],[17,"N_NO_DEAD_STRIP",E,"When set in a relocatable object file (file type…",N,N],[17,"N_WEAK_REF",E,"Indicates that this undefined symbol is a weak reference.…",N,N],[17,"N_WEAK_DEF",E,"Indicates that this symbol is a weak definition. If the…",N,N],[17,"SIZEOF_NLIST_32",E,E,N,N],[17,"SIZEOF_NLIST_64",E,E,N,N],[11,R[5698],E,"Gets this symbol's type in bits 0xe",98,[[["self"]],["u8"]]],[11,"type_str",E,"Gets the str representation of the type of this symbol",98,[[["self"]],["str"]]],[11,"is_global",E,"Whether this symbol is global or not",98,[[["self"]],["bool"]]],[11,"is_weak",E,"Whether this symbol is weak or not",98,[[["self"]],["bool"]]],[11,"is_undefined",E,"Whether this symbol is undefined or not",98,[[["self"]],["bool"]]],[11,"is_stab",E,"Whether this symbol is a symbolic debugging entry",98,[[["self"]],["bool"]]],[11,"new",E,"Creates a new symbol table with `count` elements, from the…",100,[[["usize"]],[["symbols"],[R[3],["symbols"]]]]],[11,"parse",E,E,100,[[["ctx"],[R[4238]]],[["symbols"],[R[3],["symbols"]]]]],[11,"iter",E,E,100,[[["self"]],[R[4131]]]],[11,"get",E,"Parses a single Nlist symbol from the binary, with its…",100,[[["self"],["usize"]],[R[3]]]],[0,"exports",R[4052],"Symbols exported by this binary and available for dynamic…",N,N],[3,"Export",R[4125],"A finalized symbolic export reconstructed from the export…",N,N],[12,"name",E,"The reconsituted export name which dyld matches against",101,N],[12,"info",E,"The export info in the node data",101,N],[12,"size",E,"How large this export is",101,N],[12,"offset",E,"The offset this symbol export is found in the binary",101,N],[3,"ExportTrie",E,"An export trie efficiently encodes all of the symbols…",N,N],[4,"SymbolKind",E,E,N,N],[13,"Regular",E,E,102,N],[13,"Absolute",E,E,102,N],[13,R[629],E,E,102,N],[13,"UnknownSymbolKind",E,E,102,N],[4,"ExportInfo",E,"An export can be a regular export, a re-export, or a stub",N,N],[13,"Regular",E,"A regular exported symbol, which is an address where it is…",103,N],[12,"address",R[4126],E,103,N],[12,"flags",E,E,103,N],[13,"Reexport",R[4125],"if lib_symbol_name None then same symbol name, otherwise…",103,N],[12,"lib",R[4126],E,103,N],[12,"lib_symbol_name",E,E,103,N],[12,"flags",E,E,103,N],[13,"Stub",R[4125],"If the flags is `EXPORT_SYMBOL_FLAGS_STUB_AND_RESOLVER`,…",103,N],[12,"stub_offset",R[4126],E,103,N],[12,"resolver_offset",E,E,103,N],[12,"flags",E,E,103,N],[17,"EXPORT_SYMBOL_FLAGS_KIND_MASK",R[4125],E,N,N],[17,"EXPORT_SYMBOL_FLAGS_KIND_REGULAR",E,E,N,N],[17,"EXPORT_SYMBOL_FLAGS_KIND_ABSOLUTE",E,E,N,N],[17,"EXPORT_SYMBOL_FLAGS_KIND_THREAD_LOCAL",E,E,N,N],[17,"EXPORT_SYMBOL_FLAGS_WEAK_DEFINITION",E,E,N,N],[17,"EXPORT_SYMBOL_FLAGS_REEXPORT",E,E,N,N],[17,"EXPORT_SYMBOL_FLAGS_STUB_AND_RESOLVER",E,E,N,N],[11,"new",E,E,102,[[["u64"]],["symbolkind"]]],[11,"to_str",E,E,102,[[["self"]],["str"]]],[11,"parse",E,"Parse out the export info from `bytes`, at `offset`",103,[[["usize"],["u64"]],[[R[4127]],[R[3],[R[4127]]]]]],[11,"new",E,"Create a new export from `name` and `info`",101,[[[R[4127]],["string"]],["export"]]],[11,"exports",E,"Walk the export trie for symbols exported by this binary,…",104,[[["self"]],[[R[3],["vec"]],["vec",["export"]]]]],[11,"new",E,"Create a new, lazy, zero-copy export trie from the…",104,[[[R[4128]]],["self"]]],[0,"imports",R[4052],"Dynamically linked symbolic imports",N,N],[3,"Import",R[4220],"An dynamically linked symbolic import",N,N],[12,"name",E,"The symbol name dyld uses to resolve this import",105,N],[12,"dylib",E,"The library this symbol belongs to (thanks to two-level…",105,N],[12,"is_lazy",E,"Whether the symbol is lazily resolved or not",105,N],[12,"offset",E,"The offset in the binary this import is found",105,N],[12,"size",E,"The size of this import",105,N],[12,"address",E,"The virtual memory address at which this import is found",105,N],[12,"addend",E,"The addend of this import",105,N],[12,"is_weak",E,"Whether this import is weak",105,N],[12,"start_of_sequence_offset",E,"The offset in the stream of bind opcodes that caused this…",105,N],[3,R[4310],E,"An interpreter for mach BIND opcodes. Runs on prebound…",N,N],[11,"new",E,"Construct a new import binding interpreter from `bytes`…",106,[[[R[4128]]],["self"]]],[11,"imports",E,"Return the imports in this binary",106,[[["self"],["ctx"]],[[R[3],["vec"]],["vec",["import"]]]]],[0,"bind_opcodes",R[4052],"Bind opcodes are interpreted by the dynamic linker to…",N,N],[5,"opcode_to_str","goblin::mach::bind_opcodes",E,N,[[["opcode"]],["str"]]],[6,"Opcode",E,E,N,N],[17,"BIND_TYPE_POINTER",E,E,N,N],[17,"BIND_TYPE_TEXT_ABSOLUTE32",E,E,N,N],[17,"BIND_TYPE_TEXT_PCREL32",E,E,N,N],[17,"BIND_SPECIAL_DYLIB_SELF",E,E,N,N],[17,"BIND_SPECIAL_DYLIB_MAIN_EXECUTABLE",E,E,N,N],[17,"BIND_SPECIAL_DYLIB_FLAT_LOOKUP",E,E,N,N],[17,"BIND_SYMBOL_FLAGS_WEAK_IMPORT",E,E,N,N],[17,"BIND_SYMBOL_FLAGS_NON_WEAK_DEFINITION",E,E,N,N],[17,"BIND_OPCODE_MASK",E,E,N,N],[17,"BIND_IMMEDIATE_MASK",E,E,N,N],[17,"BIND_OPCODE_DONE",E,E,N,N],[17,"BIND_OPCODE_SET_DYLIB_ORDINAL_IMM",E,E,N,N],[17,"BIND_OPCODE_SET_DYLIB_ORDINAL_ULEB",E,E,N,N],[17,"BIND_OPCODE_SET_DYLIB_SPECIAL_IMM",E,E,N,N],[17,"BIND_OPCODE_SET_SYMBOL_TRAILING_FLAGS_IMM",E,E,N,N],[17,"BIND_OPCODE_SET_TYPE_IMM",E,E,N,N],[17,"BIND_OPCODE_SET_ADDEND_SLEB",E,E,N,N],[17,"BIND_OPCODE_SET_SEGMENT_AND_OFFSET_ULEB",E,E,N,N],[17,"BIND_OPCODE_ADD_ADDR_ULEB",E,E,N,N],[17,"BIND_OPCODE_DO_BIND",E,E,N,N],[17,"BIND_OPCODE_DO_BIND_ADD_ADDR_ULEB",E,E,N,N],[17,"BIND_OPCODE_DO_BIND_ADD_ADDR_IMM_SCALED",E,E,N,N],[17,"BIND_OPCODE_DO_BIND_ULEB_TIMES_SKIPPING_ULEB",E,E,N,N],[0,R[4235],R[4052],E,N,N],[3,R[4311],R[4221],E,N,N],[12,"r_address",E,"Offset in the section to what is being relocated",107,N],[12,"r_info",E,"Contains all of the relocation info as a bitfield.…",107,N],[5,"reloc_to_str",E,E,N,[[["reloctype"],["cputype"]],["str"]]],[6,R[271],E,E,N,N],[17,"SIZEOF_RELOCATION_INFO",E,E,N,N],[17,"R_ABS",E,"Absolute relocation type for Mach-O files",N,N],[17,"X86_64_RELOC_UNSIGNED",E,"Absolute address",N,N],[17,"X86_64_RELOC_SIGNED",E,"Signed 32-bit displacement",N,N],[17,"X86_64_RELOC_BRANCH",E,"A CALL/JMP instruction with 32-bit displacement",N,N],[17,"X86_64_RELOC_GOT_LOAD",E,"A MOVQ load of a GOT entry",N,N],[17,"X86_64_RELOC_GOT",E,"Other GOT references",N,N],[17,"X86_64_RELOC_SUBTRACTOR",E,"Must be followed by a X86_64_RELOC_UNSIGNED relocation",N,N],[17,"X86_64_RELOC_SIGNED_1",E,"for signed 32-bit displacement with a -1 addend",N,N],[17,"X86_64_RELOC_SIGNED_2",E,"for signed 32-bit displacement with a -2 addend",N,N],[17,"X86_64_RELOC_SIGNED_4",E,"for signed 32-bit displacement with a -4 addend",N,N],[17,"X86_64_RELOC_TLV",E,"for thread local variables",N,N],[17,"GENERIC_RELOC_VANILLA",E,E,N,N],[17,"GENERIC_RELOC_PAIR",E,E,N,N],[17,"GENERIC_RELOC_SECTDIFF",E,E,N,N],[17,"GENERIC_RELOC_LOCAL_SECTDIFF",E,E,N,N],[17,"GENERIC_RELOC_PB_LA_P",E,E,N,N],[17,"ARM_RELOC_VANILLA",E,E,N,N],[17,"ARM_RELOC_PAIR",E,E,N,N],[17,"ARM_RELOC_SECTDIFF",E,E,N,N],[17,"ARM_RELOC_LOCAL_SECTDIFF",E,E,N,N],[17,"ARM_RELOC_PB_LA_PTR",E,E,N,N],[17,"ARM_RELOC_BR24",E,E,N,N],[17,"ARM_THUMB_RELOC_BR22",E,E,N,N],[17,"ARM_THUMB_32BIT_BRANCH",E,"Obsolete",N,N],[17,"ARM_RELOC_HALF",E,E,N,N],[17,"ARM_RELOC_HALF_SECTDIFF",E,E,N,N],[17,"ARM64_RELOC_UNSIGNED",E,"For pointers.",N,N],[17,"ARM64_RELOC_SUBTRACTOR",E,"Must be followed by an ARM64_RELOC_UNSIGNED",N,N],[17,"ARM64_RELOC_BRANCH26",E,"A B/BL instruction with 26-bit displacement.",N,N],[17,"ARM64_RELOC_PAGE21",E,"PC-rel distance to page of target.",N,N],[17,"ARM64_RELOC_PAGEOFF12",E,"Offset within page, scaled by r_length.",N,N],[17,"ARM64_RELOC_GOT_LOAD_PAGE21",E,"PC-rel distance to page of GOT slot.",N,N],[17,"ARM64_RELOC_GOT_LOAD_PAGEOFF12",E,"Offset within page of GOT slot, scaled by r_length.",N,N],[17,"ARM64_RELOC_POINTER_TO_GOT",E,"For pointers to GOT slots.",N,N],[17,"ARM64_RELOC_TLVP_LOAD_PAGE21",E,"PC-rel distance to page of TLVP slot.",N,N],[17,"ARM64_RELOC_TLVP_LOAD_PAGEOFF12",E,"Offset within page of TLVP slot, scaled by r_length.",N,N],[17,"ARM64_RELOC_ADDEND",E,"Must be followed by ARM64_RELOC_PAGE21 or…",N,N],[11,"r_symbolnum",E,"Symbol index if `r_extern` == 1 or section ordinal if…",107,[[],["usize"]]],[11,"r_pcrel",E,"Was relocated pc relative already, 1 bit",107,[[],["u8"]]],[11,"r_length",E,"The length of the relocation, 0=byte, 1=word, 2=long,…",107,[[],["u8"]]],[11,"r_extern",E,"Does not include value of sym referenced, 1 bit",107,[[],["u8"]]],[11,"r_type",E,"Ff not 0, machine specific relocation type, in bits :4",107,[[],["u8"]]],[11,"is_extern",E,"If true, this relocation is for a symbol; if false, or a…",107,[[],["bool"]]],[11,"is_pic",E,"If true, this is a PIC relocation",107,[[],["bool"]]],[11,"to_str",E,"Returns a string representation of this relocation, given…",107,[[["cputype"]],["str"]]],[0,"segment",R[4052],E,N,N],[3,R[4346],R[4222],E,N,N],[3,"Section",E,"Generalized 32/64 bit Section",N,N],[12,"sectname",E,R[4061],108,N],[12,"segname",E,R[4062],108,N],[12,"addr",E,R[4063],108,N],[12,"size",E,R[4064],108,N],[12,"offset",E,R[4065],108,N],[12,"align",E,R[4066],108,N],[12,"reloff",E,R[4067],108,N],[12,"nreloc",E,R[4068],108,N],[12,"flags",E,R[4129],108,N],[3,R[295],E,E,N,N],[3,"Segment",E,"Generalized 32/64 bit Segment Command",N,N],[12,"cmd",E,E,109,N],[12,"cmdsize",E,E,109,N],[12,"segname",E,E,109,N],[12,"vmaddr",E,E,109,N],[12,"vmsize",E,E,109,N],[12,"fileoff",E,E,109,N],[12,"filesize",E,E,109,N],[12,"maxprot",E,E,109,N],[12,"initprot",E,E,109,N],[12,"nsects",E,E,109,N],[12,"flags",E,E,109,N],[12,"data",E,E,109,N],[3,"Segments",E,"An opaque 32/64-bit container for Mach-o segments",N,N],[6,"SectionData",E,E,N,N],[11,"name",E,"The name of this section",108,[[["self"]],[[R[3],["str"]],["str"]]]],[11,"segname",E,"The containing segment's name",108,[[["self"]],[[R[3],["str"]],["str"]]]],[11,"iter_relocations",E,"Iterate this sections relocations given `data`; `data`…",108,[[["self"],["ctx"]],[R[5585]]]],[11,"new",E,"Create a new, blank segment, with cmd either…",109,[[["ctx"]],["self"]]],[11,"name",E,"Get the name of this segment",109,[[["self"]],[[R[3],["str"]],["str"]]]],[11,"sections",E,"Get the sections from this segment, erroring if any…",109,[[["self"]],[[R[3],["vec"]],["vec"]]]],[11,"from_32",E,"Convert the raw C 32-bit segment command to a generalized…",109,[[["usize"],["ctx"],[R[4236]]],[[R[3],["error"]],["error"]]]],[11,"from_64",E,"Convert the raw C 64-bit segment command to a generalized…",109,[[["usize"],["ctx"],[R[4237]]],[[R[3],["error"]],["error"]]]],[11,"new",E,"Construct a new generalized segment container from this…",110,[[["ctx"]],["self"]]],[11,"sections",E,"Get every section from every segment",110,[[["self"]],[[R[3100]],["box",[R[3100]]]]]],[11,R[4130],R[4052],"Is this a relocatable object file?",45,[[["self"]],["bool"]]],[11,"symbols",E,"Return an iterator over all the symbols in this binary",45,[[["self"]],[R[4131]]]],[11,R[4164],E,"Return a vector of the relocations in this binary",45,[[["self"]],[["vec"],[R[3],["vec"]]]]],[11,"exports",E,"Return the exported symbols in this binary (if any)",45,[[["self"]],[["vec",["export"]],[R[3],["vec"]]]]],[11,"imports",E,"Return the imported symbols in this binary that dyld knows…",45,[[["self"]],[["vec",["import"]],[R[3],["vec"]]]]],[11,"parse",E,"Parses the Mach-o binary from `bytes` at `offset`",45,[[["usize"]],[[R[3],["macho"]],["macho"]]]],[11,"new",E,"Lazily construct `Self`",46,[[],[R[3]]]],[11,"iter_arches",E,"Iterate every fat arch header",46,[[["self"]],["fatarchiterator"]]],[11,"arches",E,"Return all the architectures in this binary",46,[[["self"]],[["vec",["fatarch"]],[R[3],["vec"]]]]],[11,"get",E,"Try to get the Mach-o binary at `index`",46,[[["self"],["usize"]],[[R[3],["macho"]],["macho"]]]],[11,"find",E,E,46,[[["fn"],["self"]],[[R[3],["macho"]],[R[23],[R[3]]]]]],[11,"find_cputype",E,"Try and find the `cputype` in `Self`, if there is one",46,[[["self"],["u32"]],[[R[23],["fatarch"]],[R[3],[R[23]]]]]],[11,"parse",E,"Parse from `bytes` either a multi-arch binary or a regular…",47,[[],[R[3]]]],[0,"pe","goblin","A PE32 and PE32+ parser",N,N],[3,"PE",R[4162],"An analyzed PE32/PE32+ binary",N,N],[12,"header",E,"The PE header",111,N],[12,"sections",E,"A list of the sections in this PE binary",111,N],[12,"size",E,"The size of the binary",111,N],[12,"name",E,"The name of this `dll`, if it has one",111,N],[12,"is_lib",E,"Whether this is a `dll` or not",111,N],[12,"is_64",E,"Whether the binary is 64-bit (PE32+)",111,N],[12,"entry",E,"the entry point of the binary",111,N],[12,R[4143],E,"The binary's RVA, or image base - useful for computing…",111,N],[12,"export_data",E,"Data about any exported symbols in this binary (e.g., if…",111,N],[12,R[4172],E,"Data for any imported symbols, and from which `dll`, etc.,…",111,N],[12,"exports",E,"The list of exported symbols in this binary, contains…",111,N],[12,"imports",E,"The list symbols imported by this binary from other `dll`s",111,N],[12,"libraries",E,"The list of libraries which this binary imports symbols from",111,N],[12,"debug_data",E,"Debug information, if any, contained in the PE header",111,N],[12,"exception_data",E,"Exception handling and stack unwind information, if any,…",111,N],[3,"Coff",E,"An analyzed COFF object",N,N],[12,"header",E,"The COFF header",112,N],[12,"sections",E,"A list of the sections in this COFF binary",112,N],[12,"symbols",E,"The COFF symbol table.",112,N],[12,"strings",E,"The string table.",112,N],[0,"header",E,E,N,N],[3,"DosHeader",R[4223],"DOS header present in all PE binaries",N,N],[12,R[3279],E,"Magic number: 5a4d",113,N],[12,"pe_pointer",E,"Pointer to PE header, always at offset 0x3c",113,N],[3,"CoffHeader",E,"COFF Header",N,N],[12,"machine",E,"The machine type",114,N],[12,"number_of_sections",E,E,114,N],[12,R[4167],E,E,114,N],[12,"pointer_to_symbol_table",E,E,114,N],[12,"number_of_symbol_table",E,E,114,N],[12,"size_of_optional_header",E,E,114,N],[12,R[4163],E,E,114,N],[3,"Header",E,E,N,N],[12,"dos_header",E,E,115,N],[12,R[3279],E,"PE Magic: PE\\0\\0, little endian",115,N],[12,"coff_header",E,E,115,N],[12,R[4133],E,E,115,N],[17,"DOS_MAGIC",E,E,N,N],[17,"PE_POINTER_OFFSET",E,E,N,N],[17,"SIZEOF_COFF_HEADER",E,E,N,N],[17,"PE_MAGIC",E,"PE\\0\\0, little endian",N,N],[17,"SIZEOF_PE_MAGIC",E,E,N,N],[17,"COFF_MACHINE_X86",E,E,N,N],[17,"COFF_MACHINE_X86_64",E,E,N,N],[11,"parse",E,E,113,[[],[R[3]]]],[11,"parse",E,E,114,[[["usize"]],[R[3]]]],[11,"sections",E,"Parse the COFF section headers.",114,[[["self"],["usize"]],[[R[3],["vec"]],["vec",[R[4233]]]]]],[11,"symbols",E,"Return the COFF symbol table.",114,[[["self"]],[[R[4132]],[R[3],[R[4132]]]]]],[11,"strings",E,"Return the COFF string table.",114,[[["self"]],[[R[3],["strtab"]],["strtab"]]]],[11,"parse",E,E,115,[[],[R[3]]]],[0,R[4133],R[4162],E,N,N],[3,R[4312],R[4224],"standard COFF fields",N,N],[12,"magic",E,E,116,N],[12,R[4134],E,E,116,N],[12,R[4135],E,E,116,N],[12,R[4136],E,E,116,N],[12,R[4137],E,E,116,N],[12,R[4138],E,E,116,N],[12,R[4139],E,E,116,N],[12,R[4140],E,E,116,N],[12,R[4141],E,R[4142],116,N],[3,R[4313],E,"standard 64-bit COFF fields",N,N],[12,"magic",E,E,117,N],[12,R[4134],E,E,117,N],[12,R[4135],E,E,117,N],[12,R[4136],E,E,117,N],[12,R[4137],E,E,117,N],[12,R[4138],E,E,117,N],[12,R[4139],E,E,117,N],[12,R[4140],E,E,117,N],[3,R[4314],E,"Unified 32/64-bit COFF fields",N,N],[12,"magic",E,E,118,N],[12,R[4134],E,E,118,N],[12,R[4135],E,E,118,N],[12,R[4136],E,E,118,N],[12,R[4137],E,E,118,N],[12,R[4138],E,E,118,N],[12,R[4139],E,E,118,N],[12,R[4140],E,E,118,N],[12,R[4141],E,R[4142],118,N],[3,R[4315],E,"Windows specific fields",N,N],[12,R[4143],E,E,119,N],[12,R[4144],E,E,119,N],[12,R[4145],E,E,119,N],[12,R[4146],E,E,119,N],[12,R[4147],E,E,119,N],[12,R[4148],E,E,119,N],[12,R[4149],E,E,119,N],[12,R[4150],E,E,119,N],[12,R[4151],E,E,119,N],[12,R[4152],E,E,119,N],[12,R[4153],E,E,119,N],[12,R[4154],E,E,119,N],[12,"check_sum",E,E,119,N],[12,"subsystem",E,E,119,N],[12,R[4155],E,E,119,N],[12,R[4156],E,E,119,N],[12,R[4157],E,E,119,N],[12,R[4158],E,E,119,N],[12,R[4159],E,E,119,N],[12,R[4160],E,E,119,N],[12,R[4161],E,E,119,N],[3,R[4316],E,"64-bit Windows specific fields",N,N],[12,R[4143],E,E,120,N],[12,R[4144],E,E,120,N],[12,R[4145],E,E,120,N],[12,R[4146],E,E,120,N],[12,R[4147],E,E,120,N],[12,R[4148],E,E,120,N],[12,R[4149],E,E,120,N],[12,R[4150],E,E,120,N],[12,R[4151],E,E,120,N],[12,R[4152],E,E,120,N],[12,R[4153],E,E,120,N],[12,R[4154],E,E,120,N],[12,"check_sum",E,E,120,N],[12,"subsystem",E,E,120,N],[12,R[4155],E,E,120,N],[12,R[4156],E,E,120,N],[12,R[4157],E,E,120,N],[12,R[4158],E,E,120,N],[12,R[4159],E,E,120,N],[12,R[4160],E,E,120,N],[12,R[4161],E,E,120,N],[3,R[4317],E,E,N,N],[12,"standard_fields",E,E,121,N],[12,"windows_fields",E,E,121,N],[12,R[4165],E,E,121,N],[6,R[4349],E,E,N,N],[17,"SIZEOF_STANDARD_FIELDS_32",E,E,N,N],[17,"SIZEOF_STANDARD_FIELDS_64",E,E,N,N],[17,"MAGIC_32",E,"Standard fields magic number for 32-bit binary",N,N],[17,"MAGIC_64",E,"Standard fields magic number for 64-bit binary",N,N],[17,"SIZEOF_WINDOWS_FIELDS_32",E,E,N,N],[17,"SIZEOF_WINDOWS_FIELDS_64",E,E,N,N],[11,R[3904],E,E,121,[[["self"]],[[R[3904]],[R[3],[R[3904]]]]]],[0,"characteristic",R[4162],E,N,N],[5,"is_dll","goblin::pe::characteristic",E,N,[[["u16"]],["bool"]]],[5,"is_exe",E,E,N,[[["u16"]],["bool"]]],[17,"IMAGE_FILE_RELOCS_STRIPPED",E,E,N,N],[17,"IMAGE_FILE_EXECUTABLE_IMAGE",E,E,N,N],[17,"IMAGE_FILE_LINE_NUMS_STRIPPED",E,E,N,N],[17,"IMAGE_FILE_LOCAL_SYMS_STRIPPED",E,E,N,N],[17,"IMAGE_FILE_AGGRESSIVE_WS_TRIM",E,E,N,N],[17,"IMAGE_FILE_LARGE_ADDRESS_AWARE",E,E,N,N],[17,"RESERVED",E,E,N,N],[17,"IMAGE_FILE_BYTES_REVERSED_LO",E,E,N,N],[17,"IMAGE_FILE_32BIT_MACHINE",E,E,N,N],[17,"IMAGE_FILE_DEBUG_STRIPPED",E,E,N,N],[17,"IMAGE_FILE_REMOVABLE_RUN_FROM_SWAP",E,E,N,N],[17,"IMAGE_FILE_NET_RUN_FROM_SWAP",E,E,N,N],[17,"IMAGE_FILE_SYSTEM",E,E,N,N],[17,"IMAGE_FILE_DLL",E,E,N,N],[17,"IMAGE_FILE_UP_SYSTEM_ONLY",E,E,N,N],[17,"IMAGE_FILE_BYTES_REVERSED_HI",E,E,N,N],[0,"section_table",R[4162],E,N,N],[3,R[4318],R[4225],E,N,N],[12,"name",E,E,122,N],[12,"real_name",E,E,122,N],[12,"virtual_size",E,E,122,N],[12,R[4166],E,E,122,N],[12,"size_of_raw_data",E,E,122,N],[12,R[4178],E,E,122,N],[12,"pointer_to_relocations",E,E,122,N],[12,"pointer_to_linenumbers",E,E,122,N],[12,R[4182],E,E,122,N],[12,"number_of_linenumbers",E,E,122,N],[12,R[4163],E,E,122,N],[17,"SIZEOF_SECTION_TABLE",E,E,N,N],[17,"IMAGE_SCN_TYPE_NO_PAD",E,"The section should not be padded to the next boundary.…",N,N],[17,"IMAGE_SCN_CNT_CODE",E,"The section contains executable code.",N,N],[17,"IMAGE_SCN_CNT_INITIALIZED_DATA",E,"The section contains initialized data.",N,N],[17,"IMAGE_SCN_CNT_UNINITIALIZED_DATA",E,"The section contains uninitialized data.",N,N],[17,"IMAGE_SCN_LNK_OTHER",E,E,N,N],[17,"IMAGE_SCN_LNK_INFO",E,"The section contains comments or other information. The…",N,N],[17,"IMAGE_SCN_LNK_REMOVE",E,"The section will not become part of the image. This is…",N,N],[17,"IMAGE_SCN_LNK_COMDAT",E,"The section contains COMDAT data. This is valid only for…",N,N],[17,"IMAGE_SCN_GPREL",E,"The section contains data referenced through the global…",N,N],[17,"IMAGE_SCN_MEM_PURGEABLE",E,E,N,N],[17,"IMAGE_SCN_MEM_16BIT",E,E,N,N],[17,"IMAGE_SCN_MEM_LOCKED",E,E,N,N],[17,"IMAGE_SCN_MEM_PRELOAD",E,E,N,N],[17,"IMAGE_SCN_ALIGN_1BYTES",E,E,N,N],[17,"IMAGE_SCN_ALIGN_2BYTES",E,E,N,N],[17,"IMAGE_SCN_ALIGN_4BYTES",E,E,N,N],[17,"IMAGE_SCN_ALIGN_8BYTES",E,E,N,N],[17,"IMAGE_SCN_ALIGN_16BYTES",E,E,N,N],[17,"IMAGE_SCN_ALIGN_32BYTES",E,E,N,N],[17,"IMAGE_SCN_ALIGN_64BYTES",E,E,N,N],[17,"IMAGE_SCN_ALIGN_128BYTES",E,E,N,N],[17,"IMAGE_SCN_ALIGN_256BYTES",E,E,N,N],[17,"IMAGE_SCN_ALIGN_512BYTES",E,E,N,N],[17,"IMAGE_SCN_ALIGN_1024BYTES",E,E,N,N],[17,"IMAGE_SCN_ALIGN_2048BYTES",E,E,N,N],[17,"IMAGE_SCN_ALIGN_4096BYTES",E,E,N,N],[17,"IMAGE_SCN_ALIGN_8192BYTES",E,E,N,N],[17,"IMAGE_SCN_ALIGN_MASK",E,E,N,N],[17,"IMAGE_SCN_LNK_NRELOC_OVFL",E,"The section contains extended relocations.",N,N],[17,"IMAGE_SCN_MEM_DISCARDABLE",E,"The section can be discarded as needed.",N,N],[17,"IMAGE_SCN_MEM_NOT_CACHED",E,"The section cannot be cached.",N,N],[17,"IMAGE_SCN_MEM_NOT_PAGED",E,"The section is not pageable.",N,N],[17,"IMAGE_SCN_MEM_SHARED",E,"The section can be shared in memory.",N,N],[17,"IMAGE_SCN_MEM_EXECUTE",E,"The section can be executed as code.",N,N],[17,"IMAGE_SCN_MEM_READ",E,"The section can be read.",N,N],[17,"IMAGE_SCN_MEM_WRITE",E,"The section can be written to.",N,N],[11,"parse",E,E,122,[[["usize"],["usize"]],[R[3]]]],[11,R[4185],E,E,122,[[["self"]],[[R[3],[R[23]]],[R[23],["usize"]]]]],[11,R[4186],E,E,122,[[["self"],["usize"]],[R[3]]]],[11,"name",E,E,122,[[["self"]],[[R[3],["str"]],["str"]]]],[11,R[4164],E,E,122,[[["self"]],[[R[3],[R[4164]]],[R[4164]]]]],[0,R[4165],R[4162],E,N,N],[3,R[4319],R[4226],E,N,N],[12,R[4166],E,E,123,N],[12,"size",E,E,123,N],[3,R[4320],E,E,N,N],[12,R[4165],E,E,124,N],[17,"SIZEOF_DATA_DIRECTORY",E,E,N,N],[11,"parse",E,E,123,[[["usize"]],[R[3]]]],[11,"parse",E,E,124,[[["usize"],["usize"]],[R[3]]]],[11,"get_export_table",E,E,124,[[["self"]],[R[23]]]],[11,"get_import_table",E,E,124,[[["self"]],[R[23]]]],[11,"get_resource_table",E,E,124,[[["self"]],[R[23]]]],[11,"get_exception_table",E,E,124,[[["self"]],[R[23]]]],[11,"get_certificate_table",E,E,124,[[["self"]],[R[23]]]],[11,"get_base_relocation_table",E,E,124,[[["self"]],[R[23]]]],[11,"get_debug_table",E,E,124,[[["self"]],[R[23]]]],[11,"get_architecture",E,E,124,[[["self"]],[R[23]]]],[11,"get_global_ptr",E,E,124,[[["self"]],[R[23]]]],[11,"get_tls_table",E,E,124,[[["self"]],[R[23]]]],[11,"get_load_config_table",E,E,124,[[["self"]],[R[23]]]],[11,"get_bound_import_table",E,E,124,[[["self"]],[R[23]]]],[11,"get_import_address_table",E,E,124,[[["self"]],[R[23]]]],[11,"get_delay_import_descriptor",E,E,124,[[["self"]],[R[23]]]],[11,"get_clr_runtime_header",E,E,124,[[["self"]],[R[23]]]],[0,"export",R[4162],E,N,N],[3,R[4321],R[4169],E,N,N],[12,"export_flags",E,E,125,N],[12,R[4167],E,E,125,N],[12,R[4177],E,E,125,N],[12,R[4168],E,E,125,N],[12,"name_rva",E,E,125,N],[12,"ordinal_base",E,E,125,N],[12,"address_table_entries",E,E,125,N],[12,"number_of_name_pointers",E,E,125,N],[12,"export_address_table_rva",E,E,125,N],[12,"name_pointer_rva",E,E,125,N],[12,"ordinal_table_rva",E,E,125,N],[3,"ExportData",E,"Export data contains the `dll` name which other libraries…",N,N],[12,"name",E,E,126,N],[12,"export_directory_table",E,E,126,N],[12,"export_name_pointer_table",E,E,126,N],[12,"export_ordinal_table",E,E,126,N],[12,"export_address_table",E,E,126,N],[3,"Export",E,"An exported symbol in this binary, contains synthetic data…",N,N],[12,"name",E,E,127,N],[12,"offset",E,E,127,N],[12,"rva",E,E,127,N],[12,"size",E,E,127,N],[12,"reexport",E,E,127,N],[4,R[4322],E,E,N,N],[13,"ExportRVA",E,E,128,N],[13,"ForwarderRVA",E,E,128,N],[4,"Reexport",E,"PE binaries have two kinds of reexports, either specifying…",N,N],[13,"DLLName",E,E,129,N],[12,"export",R[4170],E,129,N],[12,"lib",E,E,129,N],[13,"DLLOrdinal",R[4169],E,129,N],[12,"export",R[4170],E,129,N],[12,"ordinal",E,E,129,N],[6,"ExportAddressTable",R[4169],E,N,N],[6,"ExportNamePointerTable",E,"Array of rvas into the export name table",N,N],[6,"ExportOrdinalTable",E,"Array of indexes into the export address table.",N,N],[17,"SIZEOF_EXPORT_DIRECTORY_TABLE",E,E,N,N],[17,"SIZEOF_EXPORT_ADDRESS_TABLE_ENTRY",E,E,N,N],[11,"parse",E,E,125,[[["usize"]],[R[3]]]],[11,"parse",E,E,126,[[[R[4175]],["u32"]],[[R[4171]],[R[3],[R[4171]]]]]],[11,"parse",E,E,129,[[["usize"]],[[R[3],["reexport"]],["reexport"]]]],[11,"parse",E,E,127,[[["u32"],[R[4171]]],[[R[3],["vec"]],["vec",["export"]]]]],[0,"import",R[4162],E,N,N],[3,R[4323],R[4227],E,N,N],[12,"hint",E,E,130,N],[12,"name",E,E,130,N],[3,R[4324],E,E,N,N],[12,"import_lookup_table_rva",E,E,131,N],[12,R[4167],E,E,131,N],[12,"forwarder_chain",E,E,131,N],[12,"name_rva",E,E,131,N],[12,"import_address_table_rva",E,E,131,N],[3,R[4325],E,E,N,N],[12,"import_directory_entry",E,E,132,N],[12,"name",E,"Computed",132,N],[12,"import_lookup_table",E,"The import lookup table is a vector of either ordinals, or…",132,N],[12,"import_address_table",E,"Computed",132,N],[3,"ImportData",E,"Contains a list of synthesized import data for this…",N,N],[12,R[4172],E,E,133,N],[3,"Import",E,"A synthesized symbol import, the name is pre-indexed, and…",N,N],[12,"name",E,E,134,N],[12,"dll",E,E,134,N],[12,"ordinal",E,E,134,N],[12,"offset",E,E,134,N],[12,"rva",E,E,134,N],[12,"size",E,E,134,N],[4,R[4326],E,E,N,N],[13,"OrdinalNumber",E,E,135,N],[13,"HintNameTableRVA",E,E,135,N],[6,"ImportLookupTable",E,E,N,N],[6,"ImportAddressTable",E,E,N,N],[17,"IMPORT_BY_ORDINAL_32",E,E,N,N],[17,"IMPORT_BY_ORDINAL_64",E,E,N,N],[17,"IMPORT_RVA_MASK_32",E,E,N,N],[17,"IMPORT_RVA_MASK_64",E,E,N,N],[17,"SIZEOF_IMPORT_DIRECTORY_ENTRY",E,E,N,N],[8,"Bitfield",E,E,N,N],[10,"is_ordinal",E,E,136,[[["self"]],["bool"]]],[10,"to_ordinal",E,E,136,[[["self"]],["u16"]]],[10,"to_rva",E,E,136,[[["self"]],["u32"]]],[10,"size_of",E,E,136,[[],["usize"]]],[10,"is_zero",E,E,136,[[["self"]],["bool"]]],[11,"parse",E,E,135,[[["u32"],["usize"]],[[R[4173]],[R[3],[R[4173]]]]]],[11,"is_null",E,E,131,[[["self"]],["bool"]]],[11,"parse",E,E,132,[[["u32"],["importdirectoryentry"]],[[R[3],[R[4174]]],[R[4174]]]]],[11,"parse",E,E,133,[[[R[4175]],["u32"]],[[R[4176]],[R[3],[R[4176]]]]]],[11,"parse",E,E,134,[[[R[4176]]],[[R[3],["vec"]],["vec",["import"]]]]],[0,"debug",R[4162],E,N,N],[3,"DebugData",R[4228],E,N,N],[12,"image_debug_directory",E,E,137,N],[12,"codeview_pdb70_debug_info",E,E,137,N],[3,R[4327],E,E,N,N],[12,R[4163],E,E,138,N],[12,R[4167],E,E,138,N],[12,R[4177],E,E,138,N],[12,R[4168],E,E,138,N],[12,"data_type",E,E,138,N],[12,"size_of_data",E,E,138,N],[12,"address_of_raw_data",E,E,138,N],[12,R[4178],E,E,138,N],[3,R[4328],E,E,N,N],[12,"codeview_signature",E,E,139,N],[12,R[3279],E,E,139,N],[12,"age",E,E,139,N],[12,"filename",E,E,139,N],[17,"IMAGE_DEBUG_TYPE_UNKNOWN",E,E,N,N],[17,"IMAGE_DEBUG_TYPE_COFF",E,E,N,N],[17,"IMAGE_DEBUG_TYPE_CODEVIEW",E,E,N,N],[17,"IMAGE_DEBUG_TYPE_FPO",E,E,N,N],[17,"IMAGE_DEBUG_TYPE_MISC",E,E,N,N],[17,"IMAGE_DEBUG_TYPE_EXCEPTION",E,E,N,N],[17,"IMAGE_DEBUG_TYPE_FIXUP",E,E,N,N],[17,"IMAGE_DEBUG_TYPE_BORLAND",E,E,N,N],[17,"CODEVIEW_PDB70_MAGIC",E,E,N,N],[17,"CODEVIEW_PDB20_MAGIC",E,E,N,N],[17,"CODEVIEW_CV50_MAGIC",E,E,N,N],[17,"CODEVIEW_CV41_MAGIC",E,E,N,N],[11,"parse",E,E,137,[[[R[4175]],["u32"]],[R[3]]]],[11,"guid",E,"Return this executable's debugging GUID, suitable for…",137,[[["self"]],[R[23]]]],[11,"parse",E,E,139,[[[R[4234]]],[[R[23]],[R[3],[R[23]]]]]],[0,"exception",R[4162],"Exception handling and stack unwinding for x64.",N,N],[3,R[4329],R[4229],"An unwind entry for a range of a function.",N,N],[12,"begin_address",E,"Function start address.",140,N],[12,"end_address",E,"Function end address.",140,N],[12,"unwind_info_address",E,"Unwind info address.",140,N],[3,R[4347],E,"Iterator over runtime function entries in `ExceptionData`.",N,N],[3,"Register",E,"An x64 register used during unwinding.",N,N],[12,"0",E,E,141,N],[3,"UnwindCode",E,"An unwind operation that is executed at a particular place…",N,N],[12,"code_offset",E,"Offset of the corresponding instruction in the function…",142,N],[12,"operation",E,"The operation that was performed by the code in the prolog.",142,N],[3,R[4348],E,"An iterator over unwind codes for a function or part of a…",N,N],[3,"UnwindInfo",E,"Unwind information for a function or portion of a function.",N,N],[12,"version",E,"Version of this unwind info.",143,N],[12,"size_of_prolog",E,"Length of the function prolog in bytes.",143,N],[12,"frame_register",E,"The nonvolatile register used as the frame pointer of this…",143,N],[12,"frame_register_offset",E,"Offset from RSP that is applied to the FP register when it…",143,N],[12,"chained_info",E,"A record pointing to chained unwind information.",143,N],[12,"handler",E,"An exception or termination handler called as part of the…",143,N],[3,R[4333],E,"Exception handling and stack unwind information for…",N,N],[4,R[4330],E,"An unsigned offset to a value in the local stack frame.",N,N],[13,"RSP",E,"Offset from the current RSP, that is, the lowest address…",144,N],[13,"FP",E,"Offset from the value of the frame pointer register.",144,N],[4,R[4331],E,"An unwind operation corresponding to code in the function…",N,N],[13,"PushNonVolatile",E,"Push a nonvolatile integer register, decrementing `RSP` by…",145,N],[13,"Alloc",E,"Allocate a fixed-size area on the stack.",145,N],[13,"SetFPRegister",E,"Establish the frame pointer register by setting the…",145,N],[13,"SaveNonVolatile",E,"Save a nonvolatile integer register on the stack using a…",145,N],[13,"SaveXMM",E,"Save the lower 64 bits of a nonvolatile XMM register on…",145,N],[13,"Epilog",E,"Describes the function epilog.",145,N],[13,"SaveXMM128",E,"Save all 128 bits of a nonvolatile XMM register on the…",145,N],[13,"PushMachineFrame",E,"Push a machine frame. This is used to record the effect of…",145,N],[13,"Noop",E,"A reserved operation without effect.",145,N],[4,R[4332],E,"A language-specific handler that is called as part of the…",N,N],[13,"ExceptionHandler",E,"The image-relative address of an exception handler and its…",146,N],[13,"TerminationHandler",E,"The image-relative address of a termination handler and…",146,N],[11,"name",E,"Returns the x64 register name.",141,[[],["str"]]],[11,"parse",E,"Parses unwind information from the image at the given…",143,[[["usize"]],[R[3]]]],[11,"unwind_codes",E,"Returns an iterator over unwind codes in this unwind info.",143,[[["self"]],[R[4247]]]],[11,"parse",E,"Parses exception data from the image at the given offset.",147,[[[R[4175]],["u32"]],[R[3]]]],[11,"len",E,"The number of function entries described by this exception…",147,[[["self"]],["usize"]]],[11,R[25],E,"Indicating whether there are functions in this entry.",147,[[["self"]],["bool"]]],[11,"functions",E,"Iterates all function entries in order of their code offset.",147,[[["self"]],["runtimefunctioniterator"]]],[11,R[5569],E,"Returns the function at the given index.",147,[[["self"],["usize"]],[[R[4179]],[R[3],[R[4179]]]]]],[11,"find_function",E,"Performs a binary search to find a function entry covering…",147,[[["self"],["u32"]],[[R[23],[R[4179]]],[R[3],[R[23]]]]]],[11,"get_unwind_info",E,"Resolves unwind information for the given function entry.",147,[[["self"],[R[4179]]],[[R[3],[R[4248]]],[R[4248]]]]],[0,"symbol",R[4162],E,N,N],[3,"Symbol",R[4230],"A COFF symbol.",N,N],[12,"name",E,"The name of the symbol.",148,N],[12,"value",E,"The value that is associated with the symbol.",148,N],[12,"section_number",E,"A one-based index into the section table. Zero and…",148,N],[12,"typ",E,"A number that represents type.",148,N],[12,"storage_class",E,"An enumerated value that represents storage class.",148,N],[12,"number_of_aux_symbols",E,"The number of auxiliary symbol table entries that follow…",148,N],[3,R[4334],E,"Auxiliary symbol record for function definitions.",N,N],[12,"tag_index",E,"The symbol-table index of the corresponding `.bf` (begin…",149,N],[12,R[5437],E,"The size of the executable code for the function itself.",149,N],[12,"pointer_to_line_number",E,"The file offset of the first COFF line-number entry for…",149,N],[12,R[4181],E,"The symbol-table index of the record for the next function.",149,N],[12,"unused",E,R[4180],149,N],[3,R[4335],E,"Auxiliary symbol record for symbols with storage class…",N,N],[12,"unused1",E,R[4180],150,N],[12,"line_number",E,"The actual ordinal line number within the source file,…",150,N],[12,"unused2",E,R[4180],150,N],[12,R[4181],E,"The symbol-table index of the next `.bf` symbol record.",150,N],[12,"unused3",E,R[4180],150,N],[3,R[4336],E,"Auxiliary symbol record for weak external symbols.",N,N],[12,"tag_index",E,"The symbol-table index of the symbol to be linked if an…",151,N],[12,R[4163],E,"Flags that control how the symbol should be linked.",151,N],[12,"unused",E,R[4180],151,N],[3,R[4337],E,"Auxiliary symbol record for section definitions.",N,N],[12,"length",E,"The size of section data; the same as `size_of_raw_data`…",152,N],[12,R[4182],E,"The number of relocation entries for the section.",152,N],[12,"number_of_line_numbers",E,"The number of line-number entries for the section.",152,N],[12,"checksum",E,"The checksum for communal data.",152,N],[12,"number",E,"One-based index into the section table for the associated…",152,N],[12,"selection",E,"The COMDAT selection number.",152,N],[12,"unused",E,R[4180],152,N],[3,R[4338],E,"A COFF symbol table.",N,N],[3,R[4183],E,"An iterator for COFF symbols.",N,N],[17,"COFF_SYMBOL_SIZE",E,"Size of a single symbol in the COFF Symbol Table.",N,N],[17,"IMAGE_SYM_UNDEFINED",E,"The symbol record is not yet assigned a section. A `value`…",N,N],[17,"IMAGE_SYM_ABSOLUTE",E,"The symbol has an absolute (non-relocatable) `value` and…",N,N],[17,"IMAGE_SYM_DEBUG",E,"The symbol provides general type or debugging information…",N,N],[17,"IMAGE_SYM_TYPE_NULL",E,"No type information or unknown base type. Microsoft tools…",N,N],[17,"IMAGE_SYM_TYPE_VOID",E,"No valid type; used with void pointers and functions",N,N],[17,"IMAGE_SYM_TYPE_CHAR",E,"A character (signed byte)",N,N],[17,"IMAGE_SYM_TYPE_SHORT",E,"A 2-byte signed integer",N,N],[17,"IMAGE_SYM_TYPE_INT",E,"A natural integer type (normally 4 bytes in Windows)",N,N],[17,"IMAGE_SYM_TYPE_LONG",E,"A 4-byte signed integer",N,N],[17,"IMAGE_SYM_TYPE_FLOAT",E,"A 4-byte floating-point number",N,N],[17,"IMAGE_SYM_TYPE_DOUBLE",E,"An 8-byte floating-point number",N,N],[17,"IMAGE_SYM_TYPE_STRUCT",E,"A structure",N,N],[17,"IMAGE_SYM_TYPE_UNION",E,"A union",N,N],[17,"IMAGE_SYM_TYPE_ENUM",E,"An enumerated type",N,N],[17,"IMAGE_SYM_TYPE_MOE",E,"A member of enumeration (a specific value)",N,N],[17,"IMAGE_SYM_TYPE_BYTE",E,"A byte; unsigned 1-byte integer",N,N],[17,"IMAGE_SYM_TYPE_WORD",E,"A word; unsigned 2-byte integer",N,N],[17,"IMAGE_SYM_TYPE_UINT",E,"An unsigned integer of natural size (normally, 4 bytes)",N,N],[17,"IMAGE_SYM_TYPE_DWORD",E,"An unsigned 4-byte integer",N,N],[17,"IMAGE_SYM_DTYPE_NULL",E,"No derived type; the symbol is a simple scalar variable.",N,N],[17,"IMAGE_SYM_DTYPE_POINTER",E,"The symbol is a pointer to base type.",N,N],[17,"IMAGE_SYM_DTYPE_FUNCTION",E,"The symbol is a function that returns a base type.",N,N],[17,"IMAGE_SYM_DTYPE_ARRAY",E,"The symbol is an array of base type.",N,N],[17,"IMAGE_SYM_TYPE_MASK",E,E,N,N],[17,"IMAGE_SYM_DTYPE_SHIFT",E,E,N,N],[17,"IMAGE_SYM_CLASS_END_OF_FUNCTION",E,"A special symbol that represents the end of function, for…",N,N],[17,"IMAGE_SYM_CLASS_NULL",E,"No assigned storage class.",N,N],[17,"IMAGE_SYM_CLASS_AUTOMATIC",E,"The automatic (stack) variable.",N,N],[17,"IMAGE_SYM_CLASS_EXTERNAL",E,"A value that Microsoft tools use for external symbols.",N,N],[17,"IMAGE_SYM_CLASS_STATIC",E,"A static symbol.",N,N],[17,"IMAGE_SYM_CLASS_REGISTER",E,"A register variable.",N,N],[17,"IMAGE_SYM_CLASS_EXTERNAL_DEF",E,"A symbol that is defined externally.",N,N],[17,"IMAGE_SYM_CLASS_LABEL",E,"A code label that is defined within the module.",N,N],[17,"IMAGE_SYM_CLASS_UNDEFINED_LABEL",E,"A reference to a code label that is not defined.",N,N],[17,"IMAGE_SYM_CLASS_MEMBER_OF_STRUCT",E,"The structure member.",N,N],[17,"IMAGE_SYM_CLASS_ARGUMENT",E,"A formal argument (parameter) of a function.",N,N],[17,"IMAGE_SYM_CLASS_STRUCT_TAG",E,"The structure tag-name entry.",N,N],[17,"IMAGE_SYM_CLASS_MEMBER_OF_UNION",E,"A union member.",N,N],[17,"IMAGE_SYM_CLASS_UNION_TAG",E,"The Union tag-name entry.",N,N],[17,"IMAGE_SYM_CLASS_TYPE_DEFINITION",E,"A Typedef entry.",N,N],[17,"IMAGE_SYM_CLASS_UNDEFINED_STATIC",E,"A static data declaration.",N,N],[17,"IMAGE_SYM_CLASS_ENUM_TAG",E,"An enumerated type tagname entry.",N,N],[17,"IMAGE_SYM_CLASS_MEMBER_OF_ENUM",E,"A member of an enumeration.",N,N],[17,"IMAGE_SYM_CLASS_REGISTER_PARAM",E,"A register parameter.",N,N],[17,"IMAGE_SYM_CLASS_BIT_FIELD",E,"A bit-field reference.",N,N],[17,"IMAGE_SYM_CLASS_BLOCK",E,"A .bb (beginning of block) or .eb (end of block) record.",N,N],[17,"IMAGE_SYM_CLASS_FUNCTION",E,"A value that Microsoft tools use for symbol records that…",N,N],[17,"IMAGE_SYM_CLASS_END_OF_STRUCT",E,"An end-of-structure entry.",N,N],[17,"IMAGE_SYM_CLASS_FILE",E,"The source-file symbol record.",N,N],[17,"IMAGE_SYM_CLASS_SECTION",E,"A definition of a section (Microsoft tools use STATIC…",N,N],[17,"IMAGE_SYM_CLASS_WEAK_EXTERNAL",E,"A weak external.",N,N],[17,"IMAGE_SYM_CLASS_CLR_TOKEN",E,"A CLR token symbol.",N,N],[17,"IMAGE_WEAK_EXTERN_SEARCH_NOLIBRARY",E,"Indicates that no library search for the symbol should be…",N,N],[17,"IMAGE_WEAK_EXTERN_SEARCH_LIBRARY",E,"Indicates that a library search for the symbol should be…",N,N],[17,"IMAGE_WEAK_EXTERN_SEARCH_ALIAS",E,"Indicates that the symbol is an alias for the symbol given…",N,N],[17,"IMAGE_COMDAT_SELECT_NODUPLICATES",E,"If this symbol is already defined, the linker issues a…",N,N],[17,"IMAGE_COMDAT_SELECT_ANY",E,"Any section that defines the same COMDAT symbol can be…",N,N],[17,"IMAGE_COMDAT_SELECT_SAME_SIZE",E,R[4184],N,N],[17,"IMAGE_COMDAT_SELECT_EXACT_MATCH",E,R[4184],N,N],[17,"IMAGE_COMDAT_SELECT_ASSOCIATIVE",E,"The section is linked if a certain other COMDAT section is…",N,N],[17,"IMAGE_COMDAT_SELECT_LARGEST",E,"The linker chooses the largest definition from among all…",N,N],[11,"parse",E,"Parse the symbol at the given offset.",148,[[["usize"]],[R[3]]]],[11,"name",E,"Returns the symbol name.",148,[[["self"],["strtab"]],[["str"],[R[3],["str"]]]]],[11,R[4185],E,"Return the strtab offset of the symbol name.",148,[[["self"]],[[R[23],["u32"]],["u32"]]]],[11,R[4186],E,"Set the strtab offset of the symbol name.",148,[[["self"],["u32"]]]],[11,"base_type",E,"Return the base type of the symbol.",148,[[["self"]],["u16"]]],[11,"derived_type",E,"Return the derived type of the symbol.",148,[[["self"]],["u16"]]],[11,"is_function_definition",E,"Return true for function definitions.",148,[[["self"]],["bool"]]],[11,"is_weak_external",E,"Return true for weak external symbols.",148,[[["self"]],["bool"]]],[11,"is_file",E,"Return true for file symbol records.",148,[[["self"]],["bool"]]],[11,"is_section_definition",E,"Return true for section definitions.",148,[[["self"]],["bool"]]],[11,"parse",E,"Parse a COFF symbol table at the given offset.",153,[[["usize"]],[[R[3],[R[4132]]],[R[4132]]]]],[11,"size",E,"Get the size in bytes of the symbol table.",153,[[["usize"]],["usize"]]],[11,"get",E,"Get the symbol at the given index.",153,[[["self"],["usize"]],[R[23]]]],[11,"aux_function_definition",E,"Get the auxiliary symbol record for a function definition.",153,[[["self"],["usize"]],[[R[23],[R[4187]]],[R[4187]]]]],[11,"aux_begin_and_end_function",E,"Get the auxiliary symbol record for a `.bf` or `.ef`…",153,[[["self"],["usize"]],[[R[23],[R[4188]]],[R[4188]]]]],[11,"aux_weak_external",E,"Get the auxiliary symbol record for a weak external.",153,[[["self"],["usize"]],[[R[4189]],[R[23],[R[4189]]]]]],[11,"aux_file",E,"Get the file name from the auxiliary symbol record for a…",153,[[["self"],["usize"]],[[R[23],["str"]],["str"]]]],[11,"aux_section_definition",E,"Get the auxiliary symbol record for a section definition.",153,[[["self"],["usize"]],[[R[4190]],[R[23],[R[4190]]]]]],[11,"iter",E,"Return an iterator for the COFF symbols.",153,[[["self"]],[R[4131]]]],[0,R[4235],R[4162],E,N,N],[3,R[4339],R[4231],"A COFF relocation.",N,N],[12,R[4166],E,"The address of the item to which relocation is applied.",154,N],[12,"symbol_table_index",E,"A zero-based index into the symbol table.",154,N],[12,"typ",E,"A value that indicates the kind of relocation that should…",154,N],[3,R[4340],E,"An iterator for COFF relocations.",N,N],[17,"COFF_RELOCATION_SIZE",E,"Size of a single COFF relocation.",N,N],[17,"IMAGE_REL_I386_ABSOLUTE",E,R[4192],N,N],[17,"IMAGE_REL_I386_DIR16",E,R[4191],N,N],[17,"IMAGE_REL_I386_REL16",E,R[4191],N,N],[17,"IMAGE_REL_I386_DIR32",E,"The target's 32-bit VA.",N,N],[17,"IMAGE_REL_I386_DIR32NB",E,"The target's 32-bit RVA.",N,N],[17,"IMAGE_REL_I386_SEG12",E,R[4191],N,N],[17,"IMAGE_REL_I386_SECTION",E,R[4193],N,N],[17,"IMAGE_REL_I386_SECREL",E,R[4194],N,N],[17,"IMAGE_REL_I386_TOKEN",E,"The CLR token.",N,N],[17,"IMAGE_REL_I386_SECREL7",E,"A 7-bit offset from the base of the section that contains…",N,N],[17,"IMAGE_REL_I386_REL32",E,"The 32-bit relative displacement to the target.",N,N],[17,"IMAGE_REL_AMD64_ABSOLUTE",E,R[4192],N,N],[17,"IMAGE_REL_AMD64_ADDR64",E,"The 64-bit VA of the relocation target.",N,N],[17,"IMAGE_REL_AMD64_ADDR32",E,"The 32-bit VA of the relocation target.",N,N],[17,"IMAGE_REL_AMD64_ADDR32NB",E,"The 32-bit address without an image base (RVA).",N,N],[17,"IMAGE_REL_AMD64_REL32",E,"The 32-bit relative address from the byte following the…",N,N],[17,"IMAGE_REL_AMD64_REL32_1",E,"The 32-bit address relative to byte distance 1 from the…",N,N],[17,"IMAGE_REL_AMD64_REL32_2",E,"The 32-bit address relative to byte distance 2 from the…",N,N],[17,"IMAGE_REL_AMD64_REL32_3",E,"The 32-bit address relative to byte distance 3 from the…",N,N],[17,"IMAGE_REL_AMD64_REL32_4",E,"The 32-bit address relative to byte distance 4 from the…",N,N],[17,"IMAGE_REL_AMD64_REL32_5",E,"The 32-bit address relative to byte distance 5 from the…",N,N],[17,"IMAGE_REL_AMD64_SECTION",E,R[4193],N,N],[17,"IMAGE_REL_AMD64_SECREL",E,R[4194],N,N],[17,"IMAGE_REL_AMD64_SECREL7",E,"A 7-bit unsigned offset from the base of the section that…",N,N],[17,"IMAGE_REL_AMD64_TOKEN",E,"CLR tokens.",N,N],[17,"IMAGE_REL_AMD64_SREL32",E,"A 32-bit signed span-dependent value emitted into the…",N,N],[17,"IMAGE_REL_AMD64_PAIR",E,"A pair that must immediately follow every span-dependent…",N,N],[17,"IMAGE_REL_AMD64_SSPAN32",E,"A 32-bit signed span-dependent value that is applied at…",N,N],[11,"parse",E,"Parse a COFF relocation table at the given offset.",155,[[["usize"]],[[R[4164]],[R[3],[R[4164]]]]]],[0,"utils",R[4162],E,N,N],[5,"is_in_range","goblin::pe::utils",E,N,[[["usize"]],["bool"]]],[5,"find_offset",E,E,N,[[["u32"],["usize"]],[[R[23],["usize"]],["usize"]]]],[5,"find_offset_or",E,E,N,[[["u32"],["usize"],["str"]],[["usize"],[R[3],["usize"]]]]],[5,"try_name",E,E,N,[[["u32"],["usize"]],[["str"],[R[3],["str"]]]]],[5,"get_data",E,E,N,[[["u32"],[R[4175]]],[R[3]]]],[11,"parse",R[4162],"Reads a PE binary from the underlying `bytes`",111,[[],[R[3]]]],[11,"parse",E,"Reads a COFF object from the underlying `bytes`",112,[[],[R[3]]]],[0,"archive","goblin","Implements a simple parser and extractor for a Unix Archive.",N,N],[3,R[4341],R[4232],"A Unix Archive Header - meta data for the file/byte…",N,N],[12,"identifier",E,"The identifier, or name for this file/whatever.",156,N],[12,"timestamp",E,"The timestamp for when this file was last modified. Base…",156,N],[12,"owner_id",E,"The file's owner's id. Base 10 string number",156,N],[12,"group_id",E,"The file's group id. Base 10 string number",156,N],[12,"mode",E,"The file's permissions mode. Base 8 number number",156,N],[12,"file_size",E,"The size of this file. Base 10 string number",156,N],[12,"terminator",E,"The file header's terminator, always `0x60 0x0A`",156,N],[3,"Header",E,E,N,N],[12,"name",E,E,157,N],[12,"size",E,E,157,N],[3,"Member",E,"Represents a single entry in the archive",N,N],[12,"header",E,"The entry header",158,N],[12,"header_offset",E,R[4195],158,N],[12,"offset",E,R[4195],158,N],[3,"Index",E,"The special index member signified by the name `'/'`. The…",N,N],[12,"size",E,"Big Endian number of symbol_indexes and strings",159,N],[12,"symbol_indexes",E,"Big Endian u32 index into the archive for this symbol…",159,N],[12,"strtab",E,"Set of zero-terminated strings indexed by above. Number of…",159,N],[3,"Archive",E,"An in-memory representation of a parsed Unix Archive",N,N],[4,"IndexType",E,"The type of symbol index can be present in an archive. Can…",N,N],[13,"None",E,"No symbol index present.",160,N],[13,"SysV",E,"SystemV/GNU style symbol index, used on Windows as well.",160,N],[13,"Windows",E,"Windows specific extension of SysV symbol index, so called…",160,N],[13,"BSD",E,"BSD style symbol index.",160,N],[17,"SIZEOF_MAGIC",E,E,N,N],[17,"MAGIC",E,"The magic number of a Unix Archive",N,N],[17,"SIZEOF_HEADER",E,E,N,N],[11,"name",E,E,156,[[["self"]],[[R[3],["str"]],["str"]]]],[11,"size",E,E,156,[[["self"]],[[R[3],["usize"]],["usize"]]]],[11,"parse",E,"Tries to parse the header in `R`, as well as the offset in…",158,[[["usize"]],[[R[3],["member"]],["member"]]]],[11,"size",E,"The size of the Member's content, in bytes. Does not…",158,[[["self"]],["usize"]]],[11,"extended_name",E,"The member name, accounting for SysV and BSD `ar` filename…",158,[[["self"]],["str"]]],[11,"raw_name",E,"The untrimmed raw member name, i.e., includes…",158,[[["self"]],["str"]]],[11,"parse_sysv_index",E,"Parses the given byte buffer into an Index. NB: the buffer…",159,[[],[R[3]]]],[11,"parse_bsd_symdef",E,"Parses the given byte buffer into an Index, in BSD style…",159,[[],[R[3]]]],[11,"parse_windows_linker_member",E,E,159,[[],[R[3]]]],[11,"parse",E,E,161,[[],[["archive"],[R[3],["archive"]]]]],[11,"get",E,"Get the member named `member` in this archive, if any",161,[[["self"],["str"]],[["member"],[R[23],["member"]]]]],[11,"extract",E,"Returns a slice of the raw bytes for the given `member` in…",161,[[["self"],["str"]],[R[3]]]],[11,"summarize",E,"Gets a summary of this archive, returning a list of…",161,[[["self"]],["vec"]]],[11,"members",E,"Get the list of member names in this archive",161,[[["self"]],[["vec",["str"]],["str"]]]],[11,"member_of_symbol",E,"Returns the member's name which contains the given…",161,[[["self"],["str"]],[[R[23],["str"]],["str"]]]],[11,"parse","goblin","Tries to parse an `Object` from `bytes`",2,[[],[["object"],[R[3],["object"]]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[4],E,E,0,[[[U]],[R[3]]]],[11,R[5],E,E,0,[[],[R[3]]]],[11,R[7],E,E,0,[[["self"]],[T]]],[11,R[6],E,E,0,[[["self"]],[T]]],[11,R[8],E,E,0,[[["self"]],[R[9]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[4],E,E,1,[[[U]],[R[3]]]],[11,R[5],E,E,1,[[],[R[3]]]],[11,R[7],E,E,1,[[["self"]],[T]]],[11,R[6],E,E,1,[[["self"]],[T]]],[11,R[8],E,E,1,[[["self"]],[R[9]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[4],E,E,2,[[[U]],[R[3]]]],[11,R[5],E,E,2,[[],[R[3]]]],[11,R[7],E,E,2,[[["self"]],[T]]],[11,R[6],E,E,2,[[["self"]],[T]]],[11,R[8],E,E,2,[[["self"]],[R[9]]]],[11,"into",R[4196],E,3,[[],[U]]],[11,R[113],E,E,3,[[["self"]],["string"]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[4],E,E,3,[[[U]],[R[3]]]],[11,R[5],E,E,3,[[],[R[3]]]],[11,R[7],E,E,3,[[["self"]],[T]]],[11,R[6],E,E,3,[[["self"]],[T]]],[11,R[8],E,E,3,[[["self"]],[R[9]]]],[11,"into",R[4197],E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[4],E,E,4,[[[U]],[R[3]]]],[11,R[5],E,E,4,[[],[R[3]]]],[11,R[7],E,E,4,[[["self"]],[T]]],[11,R[6],E,E,4,[[["self"]],[T]]],[11,R[8],E,E,4,[[["self"]],[R[9]]]],[11,"into",R[4198],E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[46],E,E,5,[[["self"]],[T]]],[11,R[47],E,E,5,[[["self"],[T]]]],[11,R[4],E,E,5,[[[U]],[R[3]]]],[11,R[5],E,E,5,[[],[R[3]]]],[11,R[7],E,E,5,[[["self"]],[T]]],[11,R[6],E,E,5,[[["self"]],[T]]],[11,R[8],E,E,5,[[["self"]],[R[9]]]],[11,"into",E,E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[46],E,E,6,[[["self"]],[T]]],[11,R[47],E,E,6,[[["self"],[T]]]],[11,R[4],E,E,6,[[[U]],[R[3]]]],[11,R[5],E,E,6,[[],[R[3]]]],[11,R[7],E,E,6,[[["self"]],[T]]],[11,R[6],E,E,6,[[["self"]],[T]]],[11,R[8],E,E,6,[[["self"]],[R[9]]]],[11,"into",E,E,7,[[],[U]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[46],E,E,7,[[["self"]],[T]]],[11,R[47],E,E,7,[[["self"],[T]]]],[11,R[4],E,E,7,[[[U]],[R[3]]]],[11,R[5],E,E,7,[[],[R[3]]]],[11,R[7],E,E,7,[[["self"]],[T]]],[11,R[6],E,E,7,[[["self"]],[T]]],[11,R[8],E,E,7,[[["self"]],[R[9]]]],[11,"into",R[3905],E,8,[[],[U]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[4],E,E,8,[[[U]],[R[3]]]],[11,R[5],E,E,8,[[],[R[3]]]],[11,R[7],E,E,8,[[["self"]],[T]]],[11,R[6],E,E,8,[[["self"]],[T]]],[11,R[8],E,E,8,[[["self"]],[R[9]]]],[11,"into",R[3884],E,9,[[],[U]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[46],E,E,9,[[["self"]],[T]]],[11,R[47],E,E,9,[[["self"],[T]]]],[11,R[4],E,E,9,[[[U]],[R[3]]]],[11,R[5],E,E,9,[[],[R[3]]]],[11,R[7],E,E,9,[[["self"]],[T]]],[11,R[6],E,E,9,[[["self"]],[T]]],[11,R[8],E,E,9,[[["self"]],[R[9]]]],[11,"into",R[4199],E,10,[[],[U]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[46],E,E,10,[[["self"]],[T]]],[11,R[47],E,E,10,[[["self"],[T]]]],[11,R[4],E,E,10,[[[U]],[R[3]]]],[11,R[5],E,E,10,[[],[R[3]]]],[11,R[7],E,E,10,[[["self"]],[T]]],[11,R[6],E,E,10,[[["self"]],[T]]],[11,R[8],E,E,10,[[["self"]],[R[9]]]],[11,"into",R[4200],E,11,[[],[U]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[46],E,E,11,[[["self"]],[T]]],[11,R[47],E,E,11,[[["self"],[T]]]],[11,R[4],E,E,11,[[[U]],[R[3]]]],[11,R[5],E,E,11,[[],[R[3]]]],[11,R[7],E,E,11,[[["self"]],[T]]],[11,R[6],E,E,11,[[["self"]],[T]]],[11,R[8],E,E,11,[[["self"]],[R[9]]]],[11,"into",R[3908],E,12,[[],[U]]],[11,"from",E,E,12,[[[T]],[T]]],[11,R[46],E,E,12,[[["self"]],[T]]],[11,R[47],E,E,12,[[["self"],[T]]]],[11,R[4],E,E,12,[[[U]],[R[3]]]],[11,R[5],E,E,12,[[],[R[3]]]],[11,R[7],E,E,12,[[["self"]],[T]]],[11,R[6],E,E,12,[[["self"]],[T]]],[11,R[8],E,E,12,[[["self"]],[R[9]]]],[11,"into",R[4201],E,13,[[],[U]]],[11,"from",E,E,13,[[[T]],[T]]],[11,R[46],E,E,13,[[["self"]],[T]]],[11,R[47],E,E,13,[[["self"],[T]]]],[11,R[4],E,E,13,[[[U]],[R[3]]]],[11,R[5],E,E,13,[[],[R[3]]]],[11,R[7],E,E,13,[[["self"]],[T]]],[11,R[6],E,E,13,[[["self"]],[T]]],[11,R[8],E,E,13,[[["self"]],[R[9]]]],[11,"into",R[4202],E,14,[[],[U]]],[11,"from",E,E,14,[[[T]],[T]]],[11,R[46],E,E,14,[[["self"]],[T]]],[11,R[47],E,E,14,[[["self"],[T]]]],[11,R[4],E,E,14,[[[U]],[R[3]]]],[11,R[5],E,E,14,[[],[R[3]]]],[11,R[7],E,E,14,[[["self"]],[T]]],[11,R[6],E,E,14,[[["self"]],[T]]],[11,R[8],E,E,14,[[["self"]],[R[9]]]],[11,"into",R[3935],E,15,[[],[U]]],[11,"from",E,E,15,[[[T]],[T]]],[11,R[46],E,E,15,[[["self"]],[T]]],[11,R[47],E,E,15,[[["self"],[T]]]],[11,R[4],E,E,15,[[[U]],[R[3]]]],[11,R[5],E,E,15,[[],[R[3]]]],[11,R[7],E,E,15,[[["self"]],[T]]],[11,R[6],E,E,15,[[["self"]],[T]]],[11,R[8],E,E,15,[[["self"]],[R[9]]]],[11,"into",R[4203],E,16,[[],[U]]],[11,"from",E,E,16,[[[T]],[T]]],[11,R[46],E,E,16,[[["self"]],[T]]],[11,R[47],E,E,16,[[["self"],[T]]]],[11,R[4],E,E,16,[[[U]],[R[3]]]],[11,R[5],E,E,16,[[],[R[3]]]],[11,R[7],E,E,16,[[["self"]],[T]]],[11,R[6],E,E,16,[[["self"]],[T]]],[11,R[8],E,E,16,[[["self"]],[R[9]]]],[11,"into",R[4204],E,17,[[],[U]]],[11,"from",E,E,17,[[[T]],[T]]],[11,R[46],E,E,17,[[["self"]],[T]]],[11,R[47],E,E,17,[[["self"],[T]]]],[11,R[4],E,E,17,[[[U]],[R[3]]]],[11,R[5],E,E,17,[[],[R[3]]]],[11,R[7],E,E,17,[[["self"]],[T]]],[11,R[6],E,E,17,[[["self"]],[T]]],[11,R[8],E,E,17,[[["self"]],[R[9]]]],[11,"into",R[3949],E,18,[[],[U]]],[11,"from",E,E,18,[[[T]],[T]]],[11,R[46],E,E,18,[[["self"]],[T]]],[11,R[47],E,E,18,[[["self"],[T]]]],[11,R[4],E,E,18,[[[U]],[R[3]]]],[11,R[5],E,E,18,[[],[R[3]]]],[11,R[7],E,E,18,[[["self"]],[T]]],[11,R[6],E,E,18,[[["self"]],[T]]],[11,R[8],E,E,18,[[["self"]],[R[9]]]],[11,"into",R[4205],E,19,[[],[U]]],[11,"from",E,E,19,[[[T]],[T]]],[11,R[46],E,E,19,[[["self"]],[T]]],[11,R[47],E,E,19,[[["self"],[T]]]],[11,R[4],E,E,19,[[[U]],[R[3]]]],[11,R[5],E,E,19,[[],[R[3]]]],[11,R[7],E,E,19,[[["self"]],[T]]],[11,R[6],E,E,19,[[["self"]],[T]]],[11,R[8],E,E,19,[[["self"]],[R[9]]]],[11,"into",R[4206],E,20,[[],[U]]],[11,"from",E,E,20,[[[T]],[T]]],[11,R[46],E,E,20,[[["self"]],[T]]],[11,R[47],E,E,20,[[["self"],[T]]]],[11,R[4],E,E,20,[[[U]],[R[3]]]],[11,R[5],E,E,20,[[],[R[3]]]],[11,R[7],E,E,20,[[["self"]],[T]]],[11,R[6],E,E,20,[[["self"]],[T]]],[11,R[8],E,E,20,[[["self"]],[R[9]]]],[11,"into",R[3954],E,21,[[],[U]]],[11,"from",E,E,21,[[[T]],[T]]],[11,R[46],E,E,21,[[["self"]],[T]]],[11,R[47],E,E,21,[[["self"],[T]]]],[11,R[4],E,E,21,[[[U]],[R[3]]]],[11,R[5],E,E,21,[[],[R[3]]]],[11,R[7],E,E,21,[[["self"]],[T]]],[11,R[6],E,E,21,[[["self"]],[T]]],[11,R[8],E,E,21,[[["self"]],[R[9]]]],[11,"into",E,E,24,[[],[U]]],[11,"from",E,E,24,[[[T]],[T]]],[11,R[4],E,E,24,[[[U]],[R[3]]]],[11,R[5],E,E,24,[[],[R[3]]]],[11,R[7],E,E,24,[[["self"]],[T]]],[11,R[6],E,E,24,[[["self"]],[T]]],[11,R[8],E,E,24,[[["self"]],[R[9]]]],[11,"into",E,E,162,[[],[U]]],[11,R[45],E,E,162,[[],["i"]]],[11,"from",E,E,162,[[[T]],[T]]],[11,R[4],E,E,162,[[[U]],[R[3]]]],[11,R[5],E,E,162,[[],[R[3]]]],[11,R[7],E,E,162,[[["self"]],[T]]],[11,R[6],E,E,162,[[["self"]],[T]]],[11,R[8],E,E,162,[[["self"]],[R[9]]]],[11,"into",R[4207],E,22,[[],[U]]],[11,"from",E,E,22,[[[T]],[T]]],[11,R[46],E,E,22,[[["self"]],[T]]],[11,R[47],E,E,22,[[["self"],[T]]]],[11,R[4],E,E,22,[[[U]],[R[3]]]],[11,R[5],E,E,22,[[],[R[3]]]],[11,R[7],E,E,22,[[["self"]],[T]]],[11,R[6],E,E,22,[[["self"]],[T]]],[11,R[8],E,E,22,[[["self"]],[R[9]]]],[11,"into",R[4208],E,23,[[],[U]]],[11,"from",E,E,23,[[[T]],[T]]],[11,R[46],E,E,23,[[["self"]],[T]]],[11,R[47],E,E,23,[[["self"],[T]]]],[11,R[4],E,E,23,[[[U]],[R[3]]]],[11,R[5],E,E,23,[[],[R[3]]]],[11,R[7],E,E,23,[[["self"]],[T]]],[11,R[6],E,E,23,[[["self"]],[T]]],[11,R[8],E,E,23,[[["self"]],[R[9]]]],[11,"into",R[3974],E,25,[[],[U]]],[11,"from",E,E,25,[[[T]],[T]]],[11,R[46],E,E,25,[[["self"]],[T]]],[11,R[47],E,E,25,[[["self"],[T]]]],[11,R[4],E,E,25,[[[U]],[R[3]]]],[11,R[5],E,E,25,[[],[R[3]]]],[11,R[7],E,E,25,[[["self"]],[T]]],[11,R[6],E,E,25,[[["self"]],[T]]],[11,R[8],E,E,25,[[["self"]],[R[9]]]],[11,"into",E,E,26,[[],[U]]],[11,"from",E,E,26,[[[T]],[T]]],[11,R[4],E,E,26,[[[U]],[R[3]]]],[11,R[5],E,E,26,[[],[R[3]]]],[11,R[7],E,E,26,[[["self"]],[T]]],[11,R[6],E,E,26,[[["self"]],[T]]],[11,R[8],E,E,26,[[["self"]],[R[9]]]],[11,"into",E,E,27,[[],[U]]],[11,"from",E,E,27,[[[T]],[T]]],[11,R[4],E,E,27,[[[U]],[R[3]]]],[11,R[5],E,E,27,[[],[R[3]]]],[11,R[7],E,E,27,[[["self"]],[T]]],[11,R[6],E,E,27,[[["self"]],[T]]],[11,R[8],E,E,27,[[["self"]],[R[9]]]],[11,"into",R[4209],E,28,[[],[U]]],[11,"from",E,E,28,[[[T]],[T]]],[11,R[46],E,E,28,[[["self"]],[T]]],[11,R[47],E,E,28,[[["self"],[T]]]],[11,R[4],E,E,28,[[[U]],[R[3]]]],[11,R[5],E,E,28,[[],[R[3]]]],[11,R[7],E,E,28,[[["self"]],[T]]],[11,R[6],E,E,28,[[["self"]],[T]]],[11,R[8],E,E,28,[[["self"]],[R[9]]]],[11,"into",E,E,29,[[],[U]]],[11,"from",E,E,29,[[[T]],[T]]],[11,R[4],E,E,29,[[[U]],[R[3]]]],[11,R[5],E,E,29,[[],[R[3]]]],[11,R[7],E,E,29,[[["self"]],[T]]],[11,R[6],E,E,29,[[["self"]],[T]]],[11,R[8],E,E,29,[[["self"]],[R[9]]]],[11,"into",R[4210],E,30,[[],[U]]],[11,"from",E,E,30,[[[T]],[T]]],[11,R[46],E,E,30,[[["self"]],[T]]],[11,R[47],E,E,30,[[["self"],[T]]]],[11,R[4],E,E,30,[[[U]],[R[3]]]],[11,R[5],E,E,30,[[],[R[3]]]],[11,R[7],E,E,30,[[["self"]],[T]]],[11,R[6],E,E,30,[[["self"]],[T]]],[11,R[8],E,E,30,[[["self"]],[R[9]]]],[11,"into",E,E,31,[[],[U]]],[11,"from",E,E,31,[[[T]],[T]]],[11,R[4],E,E,31,[[[U]],[R[3]]]],[11,R[5],E,E,31,[[],[R[3]]]],[11,R[7],E,E,31,[[["self"]],[T]]],[11,R[6],E,E,31,[[["self"]],[T]]],[11,R[8],E,E,31,[[["self"]],[R[9]]]],[11,"into",R[3990],E,32,[[],[U]]],[11,"from",E,E,32,[[[T]],[T]]],[11,R[46],E,E,32,[[["self"]],[T]]],[11,R[47],E,E,32,[[["self"],[T]]]],[11,R[4],E,E,32,[[[U]],[R[3]]]],[11,R[5],E,E,32,[[],[R[3]]]],[11,R[7],E,E,32,[[["self"]],[T]]],[11,R[6],E,E,32,[[["self"]],[T]]],[11,R[8],E,E,32,[[["self"]],[R[9]]]],[11,"into",E,E,37,[[],[U]]],[11,"from",E,E,37,[[[T]],[T]]],[11,R[4],E,E,37,[[[U]],[R[3]]]],[11,R[5],E,E,37,[[],[R[3]]]],[11,R[7],E,E,37,[[["self"]],[T]]],[11,R[6],E,E,37,[[["self"]],[T]]],[11,R[8],E,E,37,[[["self"]],[R[9]]]],[11,"into",E,E,163,[[],[U]]],[11,R[45],E,E,163,[[],["i"]]],[11,"from",E,E,163,[[[T]],[T]]],[11,R[4],E,E,163,[[[U]],[R[3]]]],[11,R[5],E,E,163,[[],[R[3]]]],[11,R[7],E,E,163,[[["self"]],[T]]],[11,R[6],E,E,163,[[["self"]],[T]]],[11,R[8],E,E,163,[[["self"]],[R[9]]]],[11,"into",R[4211],E,33,[[],[U]]],[11,"from",E,E,33,[[[T]],[T]]],[11,R[46],E,E,33,[[["self"]],[T]]],[11,R[47],E,E,33,[[["self"],[T]]]],[11,R[4],E,E,33,[[[U]],[R[3]]]],[11,R[5],E,E,33,[[],[R[3]]]],[11,R[7],E,E,33,[[["self"]],[T]]],[11,R[6],E,E,33,[[["self"]],[T]]],[11,R[8],E,E,33,[[["self"]],[R[9]]]],[11,"into",E,E,34,[[],[U]]],[11,"from",E,E,34,[[[T]],[T]]],[11,R[46],E,E,34,[[["self"]],[T]]],[11,R[47],E,E,34,[[["self"],[T]]]],[11,R[4],E,E,34,[[[U]],[R[3]]]],[11,R[5],E,E,34,[[],[R[3]]]],[11,R[7],E,E,34,[[["self"]],[T]]],[11,R[6],E,E,34,[[["self"]],[T]]],[11,R[8],E,E,34,[[["self"]],[R[9]]]],[11,"into",R[4212],E,35,[[],[U]]],[11,"from",E,E,35,[[[T]],[T]]],[11,R[46],E,E,35,[[["self"]],[T]]],[11,R[47],E,E,35,[[["self"],[T]]]],[11,R[4],E,E,35,[[[U]],[R[3]]]],[11,R[5],E,E,35,[[],[R[3]]]],[11,R[7],E,E,35,[[["self"]],[T]]],[11,R[6],E,E,35,[[["self"]],[T]]],[11,R[8],E,E,35,[[["self"]],[R[9]]]],[11,"into",E,E,36,[[],[U]]],[11,"from",E,E,36,[[[T]],[T]]],[11,R[46],E,E,36,[[["self"]],[T]]],[11,R[47],E,E,36,[[["self"],[T]]]],[11,R[4],E,E,36,[[[U]],[R[3]]]],[11,R[5],E,E,36,[[],[R[3]]]],[11,R[7],E,E,36,[[["self"]],[T]]],[11,R[6],E,E,36,[[["self"]],[T]]],[11,R[8],E,E,36,[[["self"]],[R[9]]]],[11,"into",R[4213],E,38,[[],[U]]],[11,"from",E,E,38,[[[T]],[T]]],[11,R[46],E,E,38,[[["self"]],[T]]],[11,R[47],E,E,38,[[["self"],[T]]]],[11,R[4],E,E,38,[[[U]],[R[3]]]],[11,R[5],E,E,38,[[],[R[3]]]],[11,R[7],E,E,38,[[["self"]],[T]]],[11,R[6],E,E,38,[[["self"]],[T]]],[11,R[8],E,E,38,[[["self"]],[R[9]]]],[11,"into",E,E,39,[[],[U]]],[11,"from",E,E,39,[[[T]],[T]]],[11,R[46],E,E,39,[[["self"]],[T]]],[11,R[47],E,E,39,[[["self"],[T]]]],[11,R[4],E,E,39,[[[U]],[R[3]]]],[11,R[5],E,E,39,[[],[R[3]]]],[11,R[7],E,E,39,[[["self"]],[T]]],[11,R[6],E,E,39,[[["self"]],[T]]],[11,R[8],E,E,39,[[["self"]],[R[9]]]],[11,"into",E,E,40,[[],[U]]],[11,R[45],E,E,40,[[],["i"]]],[11,"from",E,E,40,[[[T]],[T]]],[11,R[4],E,E,40,[[[U]],[R[3]]]],[11,R[5],E,E,40,[[],[R[3]]]],[11,R[7],E,E,40,[[["self"]],[T]]],[11,R[6],E,E,40,[[["self"]],[T]]],[11,R[8],E,E,40,[[["self"]],[R[9]]]],[11,"into",E,E,41,[[],[U]]],[11,R[45],E,E,41,[[],["i"]]],[11,"from",E,E,41,[[[T]],[T]]],[11,R[4],E,E,41,[[[U]],[R[3]]]],[11,R[5],E,E,41,[[],[R[3]]]],[11,R[7],E,E,41,[[["self"]],[T]]],[11,R[6],E,E,41,[[["self"]],[T]]],[11,R[8],E,E,41,[[["self"]],[R[9]]]],[11,"into",E,E,42,[[],[U]]],[11,"from",E,E,42,[[[T]],[T]]],[11,R[4],E,E,42,[[[U]],[R[3]]]],[11,R[5],E,E,42,[[],[R[3]]]],[11,R[7],E,E,42,[[["self"]],[T]]],[11,R[6],E,E,42,[[["self"]],[T]]],[11,R[8],E,E,42,[[["self"]],[R[9]]]],[11,"into",R[4214],E,43,[[],[U]]],[11,"from",E,E,43,[[[T]],[T]]],[11,R[4],E,E,43,[[[U]],[R[3]]]],[11,R[5],E,E,43,[[],[R[3]]]],[11,R[7],E,E,43,[[["self"]],[T]]],[11,R[6],E,E,43,[[["self"]],[T]]],[11,R[8],E,E,43,[[["self"]],[R[9]]]],[11,"into",R[4215],E,44,[[],[U]]],[11,"from",E,E,44,[[[T]],[T]]],[11,R[4],E,E,44,[[[U]],[R[3]]]],[11,R[5],E,E,44,[[],[R[3]]]],[11,R[7],E,E,44,[[["self"]],[T]]],[11,R[6],E,E,44,[[["self"]],[T]]],[11,R[8],E,E,44,[[["self"]],[R[9]]]],[11,"into",R[4052],E,45,[[],[U]]],[11,"from",E,E,45,[[[T]],[T]]],[11,R[4],E,E,45,[[[U]],[R[3]]]],[11,R[5],E,E,45,[[],[R[3]]]],[11,R[7],E,E,45,[[["self"]],[T]]],[11,R[6],E,E,45,[[["self"]],[T]]],[11,R[8],E,E,45,[[["self"]],[R[9]]]],[11,"into",E,E,46,[[],[U]]],[11,"from",E,E,46,[[[T]],[T]]],[11,R[4],E,E,46,[[[U]],[R[3]]]],[11,R[5],E,E,46,[[],[R[3]]]],[11,R[7],E,E,46,[[["self"]],[T]]],[11,R[6],E,E,46,[[["self"]],[T]]],[11,R[8],E,E,46,[[["self"]],[R[9]]]],[11,"into",E,E,164,[[],[U]]],[11,R[45],E,E,164,[[],["i"]]],[11,"from",E,E,164,[[[T]],[T]]],[11,R[4],E,E,164,[[[U]],[R[3]]]],[11,R[5],E,E,164,[[],[R[3]]]],[11,R[7],E,E,164,[[["self"]],[T]]],[11,R[6],E,E,164,[[["self"]],[T]]],[11,R[8],E,E,164,[[["self"]],[R[9]]]],[11,"into",E,E,165,[[],[U]]],[11,R[45],E,E,165,[[],["i"]]],[11,"from",E,E,165,[[[T]],[T]]],[11,R[4],E,E,165,[[[U]],[R[3]]]],[11,R[5],E,E,165,[[],[R[3]]]],[11,R[7],E,E,165,[[["self"]],[T]]],[11,R[6],E,E,165,[[["self"]],[T]]],[11,R[8],E,E,165,[[["self"]],[R[9]]]],[11,"into",E,E,47,[[],[U]]],[11,"from",E,E,47,[[[T]],[T]]],[11,R[4],E,E,47,[[[U]],[R[3]]]],[11,R[5],E,E,47,[[],[R[3]]]],[11,R[7],E,E,47,[[["self"]],[T]]],[11,R[6],E,E,47,[[["self"]],[T]]],[11,R[8],E,E,47,[[["self"]],[R[9]]]],[11,"into",R[4216],E,48,[[],[U]]],[11,"from",E,E,48,[[[T]],[T]]],[11,R[46],E,E,48,[[["self"]],[T]]],[11,R[47],E,E,48,[[["self"],[T]]]],[11,R[4],E,E,48,[[[U]],[R[3]]]],[11,R[5],E,E,48,[[],[R[3]]]],[11,R[7],E,E,48,[[["self"]],[T]]],[11,R[6],E,E,48,[[["self"]],[T]]],[11,R[8],E,E,48,[[["self"]],[R[9]]]],[11,"into",E,E,49,[[],[U]]],[11,"from",E,E,49,[[[T]],[T]]],[11,R[46],E,E,49,[[["self"]],[T]]],[11,R[47],E,E,49,[[["self"],[T]]]],[11,R[4],E,E,49,[[[U]],[R[3]]]],[11,R[5],E,E,49,[[],[R[3]]]],[11,R[7],E,E,49,[[["self"]],[T]]],[11,R[6],E,E,49,[[["self"]],[T]]],[11,R[8],E,E,49,[[["self"]],[R[9]]]],[11,"into",E,E,50,[[],[U]]],[11,"from",E,E,50,[[[T]],[T]]],[11,R[46],E,E,50,[[["self"]],[T]]],[11,R[47],E,E,50,[[["self"],[T]]]],[11,R[4],E,E,50,[[[U]],[R[3]]]],[11,R[5],E,E,50,[[],[R[3]]]],[11,R[7],E,E,50,[[["self"]],[T]]],[11,R[6],E,E,50,[[["self"]],[T]]],[11,R[8],E,E,50,[[["self"]],[R[9]]]],[11,"into",R[4217],E,51,[[],[U]]],[11,"from",E,E,51,[[[T]],[T]]],[11,R[46],E,E,51,[[["self"]],[T]]],[11,R[47],E,E,51,[[["self"],[T]]]],[11,R[4],E,E,51,[[[U]],[R[3]]]],[11,R[5],E,E,51,[[],[R[3]]]],[11,R[7],E,E,51,[[["self"]],[T]]],[11,R[6],E,E,51,[[["self"]],[T]]],[11,R[8],E,E,51,[[["self"]],[R[9]]]],[11,"into",E,E,52,[[],[U]]],[11,"from",E,E,52,[[[T]],[T]]],[11,R[46],E,E,52,[[["self"]],[T]]],[11,R[47],E,E,52,[[["self"],[T]]]],[11,R[4],E,E,52,[[[U]],[R[3]]]],[11,R[5],E,E,52,[[],[R[3]]]],[11,R[7],E,E,52,[[["self"]],[T]]],[11,R[6],E,E,52,[[["self"]],[T]]],[11,R[8],E,E,52,[[["self"]],[R[9]]]],[11,"into",R[4218],E,53,[[],[U]]],[11,R[113],E,E,53,[[["self"]],["string"]]],[11,"from",E,E,53,[[[T]],[T]]],[11,R[46],E,E,53,[[["self"]],[T]]],[11,R[47],E,E,53,[[["self"],[T]]]],[11,R[4],E,E,53,[[[U]],[R[3]]]],[11,R[5],E,E,53,[[],[R[3]]]],[11,R[7],E,E,53,[[["self"]],[T]]],[11,R[6],E,E,53,[[["self"]],[T]]],[11,R[8],E,E,53,[[["self"]],[R[9]]]],[11,"into",E,E,54,[[],[U]]],[11,"from",E,E,54,[[[T]],[T]]],[11,R[46],E,E,54,[[["self"]],[T]]],[11,R[47],E,E,54,[[["self"],[T]]]],[11,R[4],E,E,54,[[[U]],[R[3]]]],[11,R[5],E,E,54,[[],[R[3]]]],[11,R[7],E,E,54,[[["self"]],[T]]],[11,R[6],E,E,54,[[["self"]],[T]]],[11,R[8],E,E,54,[[["self"]],[R[9]]]],[11,"into",E,E,55,[[],[U]]],[11,"from",E,E,55,[[[T]],[T]]],[11,R[46],E,E,55,[[["self"]],[T]]],[11,R[47],E,E,55,[[["self"],[T]]]],[11,R[4],E,E,55,[[[U]],[R[3]]]],[11,R[5],E,E,55,[[],[R[3]]]],[11,R[7],E,E,55,[[["self"]],[T]]],[11,R[6],E,E,55,[[["self"]],[T]]],[11,R[8],E,E,55,[[["self"]],[R[9]]]],[11,"into",E,E,56,[[],[U]]],[11,"from",E,E,56,[[[T]],[T]]],[11,R[46],E,E,56,[[["self"]],[T]]],[11,R[47],E,E,56,[[["self"],[T]]]],[11,R[4],E,E,56,[[[U]],[R[3]]]],[11,R[5],E,E,56,[[],[R[3]]]],[11,R[7],E,E,56,[[["self"]],[T]]],[11,R[6],E,E,56,[[["self"]],[T]]],[11,R[8],E,E,56,[[["self"]],[R[9]]]],[11,"into",E,E,57,[[],[U]]],[11,"from",E,E,57,[[[T]],[T]]],[11,R[46],E,E,57,[[["self"]],[T]]],[11,R[47],E,E,57,[[["self"],[T]]]],[11,R[4],E,E,57,[[[U]],[R[3]]]],[11,R[5],E,E,57,[[],[R[3]]]],[11,R[7],E,E,57,[[["self"]],[T]]],[11,R[6],E,E,57,[[["self"]],[T]]],[11,R[8],E,E,57,[[["self"]],[R[9]]]],[11,"into",E,E,58,[[],[U]]],[11,"from",E,E,58,[[[T]],[T]]],[11,R[46],E,E,58,[[["self"]],[T]]],[11,R[47],E,E,58,[[["self"],[T]]]],[11,R[4],E,E,58,[[[U]],[R[3]]]],[11,R[5],E,E,58,[[],[R[3]]]],[11,R[7],E,E,58,[[["self"]],[T]]],[11,R[6],E,E,58,[[["self"]],[T]]],[11,R[8],E,E,58,[[["self"]],[R[9]]]],[11,"into",E,E,59,[[],[U]]],[11,"from",E,E,59,[[[T]],[T]]],[11,R[46],E,E,59,[[["self"]],[T]]],[11,R[47],E,E,59,[[["self"],[T]]]],[11,R[4],E,E,59,[[[U]],[R[3]]]],[11,R[5],E,E,59,[[],[R[3]]]],[11,R[7],E,E,59,[[["self"]],[T]]],[11,R[6],E,E,59,[[["self"]],[T]]],[11,R[8],E,E,59,[[["self"]],[R[9]]]],[11,"into",E,E,60,[[],[U]]],[11,"from",E,E,60,[[[T]],[T]]],[11,R[46],E,E,60,[[["self"]],[T]]],[11,R[47],E,E,60,[[["self"],[T]]]],[11,R[4],E,E,60,[[[U]],[R[3]]]],[11,R[5],E,E,60,[[],[R[3]]]],[11,R[7],E,E,60,[[["self"]],[T]]],[11,R[6],E,E,60,[[["self"]],[T]]],[11,R[8],E,E,60,[[["self"]],[R[9]]]],[11,"into",E,E,61,[[],[U]]],[11,"from",E,E,61,[[[T]],[T]]],[11,R[46],E,E,61,[[["self"]],[T]]],[11,R[47],E,E,61,[[["self"],[T]]]],[11,R[4],E,E,61,[[[U]],[R[3]]]],[11,R[5],E,E,61,[[],[R[3]]]],[11,R[7],E,E,61,[[["self"]],[T]]],[11,R[6],E,E,61,[[["self"]],[T]]],[11,R[8],E,E,61,[[["self"]],[R[9]]]],[11,"into",E,E,62,[[],[U]]],[11,"from",E,E,62,[[[T]],[T]]],[11,R[46],E,E,62,[[["self"]],[T]]],[11,R[47],E,E,62,[[["self"],[T]]]],[11,R[4],E,E,62,[[[U]],[R[3]]]],[11,R[5],E,E,62,[[],[R[3]]]],[11,R[7],E,E,62,[[["self"]],[T]]],[11,R[6],E,E,62,[[["self"]],[T]]],[11,R[8],E,E,62,[[["self"]],[R[9]]]],[11,"into",E,E,63,[[],[U]]],[11,"from",E,E,63,[[[T]],[T]]],[11,R[46],E,E,63,[[["self"]],[T]]],[11,R[47],E,E,63,[[["self"],[T]]]],[11,R[4],E,E,63,[[[U]],[R[3]]]],[11,R[5],E,E,63,[[],[R[3]]]],[11,R[7],E,E,63,[[["self"]],[T]]],[11,R[6],E,E,63,[[["self"]],[T]]],[11,R[8],E,E,63,[[["self"]],[R[9]]]],[11,"into",E,E,64,[[],[U]]],[11,"from",E,E,64,[[[T]],[T]]],[11,R[46],E,E,64,[[["self"]],[T]]],[11,R[47],E,E,64,[[["self"],[T]]]],[11,R[4],E,E,64,[[[U]],[R[3]]]],[11,R[5],E,E,64,[[],[R[3]]]],[11,R[7],E,E,64,[[["self"]],[T]]],[11,R[6],E,E,64,[[["self"]],[T]]],[11,R[8],E,E,64,[[["self"]],[R[9]]]],[11,"into",E,E,65,[[],[U]]],[11,"from",E,E,65,[[[T]],[T]]],[11,R[46],E,E,65,[[["self"]],[T]]],[11,R[47],E,E,65,[[["self"],[T]]]],[11,R[4],E,E,65,[[[U]],[R[3]]]],[11,R[5],E,E,65,[[],[R[3]]]],[11,R[7],E,E,65,[[["self"]],[T]]],[11,R[6],E,E,65,[[["self"]],[T]]],[11,R[8],E,E,65,[[["self"]],[R[9]]]],[11,"into",E,E,66,[[],[U]]],[11,"from",E,E,66,[[[T]],[T]]],[11,R[46],E,E,66,[[["self"]],[T]]],[11,R[47],E,E,66,[[["self"],[T]]]],[11,R[4],E,E,66,[[[U]],[R[3]]]],[11,R[5],E,E,66,[[],[R[3]]]],[11,R[7],E,E,66,[[["self"]],[T]]],[11,R[6],E,E,66,[[["self"]],[T]]],[11,R[8],E,E,66,[[["self"]],[R[9]]]],[11,"into",E,E,67,[[],[U]]],[11,"from",E,E,67,[[[T]],[T]]],[11,R[46],E,E,67,[[["self"]],[T]]],[11,R[47],E,E,67,[[["self"],[T]]]],[11,R[4],E,E,67,[[[U]],[R[3]]]],[11,R[5],E,E,67,[[],[R[3]]]],[11,R[7],E,E,67,[[["self"]],[T]]],[11,R[6],E,E,67,[[["self"]],[T]]],[11,R[8],E,E,67,[[["self"]],[R[9]]]],[11,"into",E,E,68,[[],[U]]],[11,"from",E,E,68,[[[T]],[T]]],[11,R[46],E,E,68,[[["self"]],[T]]],[11,R[47],E,E,68,[[["self"],[T]]]],[11,R[4],E,E,68,[[[U]],[R[3]]]],[11,R[5],E,E,68,[[],[R[3]]]],[11,R[7],E,E,68,[[["self"]],[T]]],[11,R[6],E,E,68,[[["self"]],[T]]],[11,R[8],E,E,68,[[["self"]],[R[9]]]],[11,"into",E,E,69,[[],[U]]],[11,"from",E,E,69,[[[T]],[T]]],[11,R[46],E,E,69,[[["self"]],[T]]],[11,R[47],E,E,69,[[["self"],[T]]]],[11,R[4],E,E,69,[[[U]],[R[3]]]],[11,R[5],E,E,69,[[],[R[3]]]],[11,R[7],E,E,69,[[["self"]],[T]]],[11,R[6],E,E,69,[[["self"]],[T]]],[11,R[8],E,E,69,[[["self"]],[R[9]]]],[11,"into",E,E,70,[[],[U]]],[11,"from",E,E,70,[[[T]],[T]]],[11,R[46],E,E,70,[[["self"]],[T]]],[11,R[47],E,E,70,[[["self"],[T]]]],[11,R[4],E,E,70,[[[U]],[R[3]]]],[11,R[5],E,E,70,[[],[R[3]]]],[11,R[7],E,E,70,[[["self"]],[T]]],[11,R[6],E,E,70,[[["self"]],[T]]],[11,R[8],E,E,70,[[["self"]],[R[9]]]],[11,"into",E,E,71,[[],[U]]],[11,"from",E,E,71,[[[T]],[T]]],[11,R[46],E,E,71,[[["self"]],[T]]],[11,R[47],E,E,71,[[["self"],[T]]]],[11,R[4],E,E,71,[[[U]],[R[3]]]],[11,R[5],E,E,71,[[],[R[3]]]],[11,R[7],E,E,71,[[["self"]],[T]]],[11,R[6],E,E,71,[[["self"]],[T]]],[11,R[8],E,E,71,[[["self"]],[R[9]]]],[11,"into",E,E,72,[[],[U]]],[11,"from",E,E,72,[[[T]],[T]]],[11,R[46],E,E,72,[[["self"]],[T]]],[11,R[47],E,E,72,[[["self"],[T]]]],[11,R[4],E,E,72,[[[U]],[R[3]]]],[11,R[5],E,E,72,[[],[R[3]]]],[11,R[7],E,E,72,[[["self"]],[T]]],[11,R[6],E,E,72,[[["self"]],[T]]],[11,R[8],E,E,72,[[["self"]],[R[9]]]],[11,"into",E,E,73,[[],[U]]],[11,"from",E,E,73,[[[T]],[T]]],[11,R[46],E,E,73,[[["self"]],[T]]],[11,R[47],E,E,73,[[["self"],[T]]]],[11,R[4],E,E,73,[[[U]],[R[3]]]],[11,R[5],E,E,73,[[],[R[3]]]],[11,R[7],E,E,73,[[["self"]],[T]]],[11,R[6],E,E,73,[[["self"]],[T]]],[11,R[8],E,E,73,[[["self"]],[R[9]]]],[11,"into",E,E,74,[[],[U]]],[11,"from",E,E,74,[[[T]],[T]]],[11,R[46],E,E,74,[[["self"]],[T]]],[11,R[47],E,E,74,[[["self"],[T]]]],[11,R[4],E,E,74,[[[U]],[R[3]]]],[11,R[5],E,E,74,[[],[R[3]]]],[11,R[7],E,E,74,[[["self"]],[T]]],[11,R[6],E,E,74,[[["self"]],[T]]],[11,R[8],E,E,74,[[["self"]],[R[9]]]],[11,"into",E,E,75,[[],[U]]],[11,"from",E,E,75,[[[T]],[T]]],[11,R[46],E,E,75,[[["self"]],[T]]],[11,R[47],E,E,75,[[["self"],[T]]]],[11,R[4],E,E,75,[[[U]],[R[3]]]],[11,R[5],E,E,75,[[],[R[3]]]],[11,R[7],E,E,75,[[["self"]],[T]]],[11,R[6],E,E,75,[[["self"]],[T]]],[11,R[8],E,E,75,[[["self"]],[R[9]]]],[11,"into",E,E,76,[[],[U]]],[11,"from",E,E,76,[[[T]],[T]]],[11,R[46],E,E,76,[[["self"]],[T]]],[11,R[47],E,E,76,[[["self"],[T]]]],[11,R[4],E,E,76,[[[U]],[R[3]]]],[11,R[5],E,E,76,[[],[R[3]]]],[11,R[7],E,E,76,[[["self"]],[T]]],[11,R[6],E,E,76,[[["self"]],[T]]],[11,R[8],E,E,76,[[["self"]],[R[9]]]],[11,"into",E,E,77,[[],[U]]],[11,"from",E,E,77,[[[T]],[T]]],[11,R[46],E,E,77,[[["self"]],[T]]],[11,R[47],E,E,77,[[["self"],[T]]]],[11,R[4],E,E,77,[[[U]],[R[3]]]],[11,R[5],E,E,77,[[],[R[3]]]],[11,R[7],E,E,77,[[["self"]],[T]]],[11,R[6],E,E,77,[[["self"]],[T]]],[11,R[8],E,E,77,[[["self"]],[R[9]]]],[11,"into",E,E,78,[[],[U]]],[11,"from",E,E,78,[[[T]],[T]]],[11,R[46],E,E,78,[[["self"]],[T]]],[11,R[47],E,E,78,[[["self"],[T]]]],[11,R[4],E,E,78,[[[U]],[R[3]]]],[11,R[5],E,E,78,[[],[R[3]]]],[11,R[7],E,E,78,[[["self"]],[T]]],[11,R[6],E,E,78,[[["self"]],[T]]],[11,R[8],E,E,78,[[["self"]],[R[9]]]],[11,"into",E,E,79,[[],[U]]],[11,"from",E,E,79,[[[T]],[T]]],[11,R[46],E,E,79,[[["self"]],[T]]],[11,R[47],E,E,79,[[["self"],[T]]]],[11,R[4],E,E,79,[[[U]],[R[3]]]],[11,R[5],E,E,79,[[],[R[3]]]],[11,R[7],E,E,79,[[["self"]],[T]]],[11,R[6],E,E,79,[[["self"]],[T]]],[11,R[8],E,E,79,[[["self"]],[R[9]]]],[11,"into",E,E,80,[[],[U]]],[11,"from",E,E,80,[[[T]],[T]]],[11,R[46],E,E,80,[[["self"]],[T]]],[11,R[47],E,E,80,[[["self"],[T]]]],[11,R[4],E,E,80,[[[U]],[R[3]]]],[11,R[5],E,E,80,[[],[R[3]]]],[11,R[7],E,E,80,[[["self"]],[T]]],[11,R[6],E,E,80,[[["self"]],[T]]],[11,R[8],E,E,80,[[["self"]],[R[9]]]],[11,"into",E,E,81,[[],[U]]],[11,"from",E,E,81,[[[T]],[T]]],[11,R[46],E,E,81,[[["self"]],[T]]],[11,R[47],E,E,81,[[["self"],[T]]]],[11,R[4],E,E,81,[[[U]],[R[3]]]],[11,R[5],E,E,81,[[],[R[3]]]],[11,R[7],E,E,81,[[["self"]],[T]]],[11,R[6],E,E,81,[[["self"]],[T]]],[11,R[8],E,E,81,[[["self"]],[R[9]]]],[11,"into",E,E,82,[[],[U]]],[11,"from",E,E,82,[[[T]],[T]]],[11,R[46],E,E,82,[[["self"]],[T]]],[11,R[47],E,E,82,[[["self"],[T]]]],[11,R[4],E,E,82,[[[U]],[R[3]]]],[11,R[5],E,E,82,[[],[R[3]]]],[11,R[7],E,E,82,[[["self"]],[T]]],[11,R[6],E,E,82,[[["self"]],[T]]],[11,R[8],E,E,82,[[["self"]],[R[9]]]],[11,"into",E,E,83,[[],[U]]],[11,"from",E,E,83,[[[T]],[T]]],[11,R[46],E,E,83,[[["self"]],[T]]],[11,R[47],E,E,83,[[["self"],[T]]]],[11,R[4],E,E,83,[[[U]],[R[3]]]],[11,R[5],E,E,83,[[],[R[3]]]],[11,R[7],E,E,83,[[["self"]],[T]]],[11,R[6],E,E,83,[[["self"]],[T]]],[11,R[8],E,E,83,[[["self"]],[R[9]]]],[11,"into",E,E,84,[[],[U]]],[11,"from",E,E,84,[[[T]],[T]]],[11,R[46],E,E,84,[[["self"]],[T]]],[11,R[47],E,E,84,[[["self"],[T]]]],[11,R[4],E,E,84,[[[U]],[R[3]]]],[11,R[5],E,E,84,[[],[R[3]]]],[11,R[7],E,E,84,[[["self"]],[T]]],[11,R[6],E,E,84,[[["self"]],[T]]],[11,R[8],E,E,84,[[["self"]],[R[9]]]],[11,"into",E,E,85,[[],[U]]],[11,"from",E,E,85,[[[T]],[T]]],[11,R[46],E,E,85,[[["self"]],[T]]],[11,R[47],E,E,85,[[["self"],[T]]]],[11,R[4],E,E,85,[[[U]],[R[3]]]],[11,R[5],E,E,85,[[],[R[3]]]],[11,R[7],E,E,85,[[["self"]],[T]]],[11,R[6],E,E,85,[[["self"]],[T]]],[11,R[8],E,E,85,[[["self"]],[R[9]]]],[11,"into",E,E,86,[[],[U]]],[11,"from",E,E,86,[[[T]],[T]]],[11,R[46],E,E,86,[[["self"]],[T]]],[11,R[47],E,E,86,[[["self"],[T]]]],[11,R[4],E,E,86,[[[U]],[R[3]]]],[11,R[5],E,E,86,[[],[R[3]]]],[11,R[7],E,E,86,[[["self"]],[T]]],[11,R[6],E,E,86,[[["self"]],[T]]],[11,R[8],E,E,86,[[["self"]],[R[9]]]],[11,"into",E,E,87,[[],[U]]],[11,"from",E,E,87,[[[T]],[T]]],[11,R[46],E,E,87,[[["self"]],[T]]],[11,R[47],E,E,87,[[["self"],[T]]]],[11,R[4],E,E,87,[[[U]],[R[3]]]],[11,R[5],E,E,87,[[],[R[3]]]],[11,R[7],E,E,87,[[["self"]],[T]]],[11,R[6],E,E,87,[[["self"]],[T]]],[11,R[8],E,E,87,[[["self"]],[R[9]]]],[11,"into",E,E,88,[[],[U]]],[11,"from",E,E,88,[[[T]],[T]]],[11,R[46],E,E,88,[[["self"]],[T]]],[11,R[47],E,E,88,[[["self"],[T]]]],[11,R[4],E,E,88,[[[U]],[R[3]]]],[11,R[5],E,E,88,[[],[R[3]]]],[11,R[7],E,E,88,[[["self"]],[T]]],[11,R[6],E,E,88,[[["self"]],[T]]],[11,R[8],E,E,88,[[["self"]],[R[9]]]],[11,"into",E,E,89,[[],[U]]],[11,"from",E,E,89,[[[T]],[T]]],[11,R[46],E,E,89,[[["self"]],[T]]],[11,R[47],E,E,89,[[["self"],[T]]]],[11,R[4],E,E,89,[[[U]],[R[3]]]],[11,R[5],E,E,89,[[],[R[3]]]],[11,R[7],E,E,89,[[["self"]],[T]]],[11,R[6],E,E,89,[[["self"]],[T]]],[11,R[8],E,E,89,[[["self"]],[R[9]]]],[11,"into",E,E,90,[[],[U]]],[11,"from",E,E,90,[[[T]],[T]]],[11,R[46],E,E,90,[[["self"]],[T]]],[11,R[47],E,E,90,[[["self"],[T]]]],[11,R[4],E,E,90,[[[U]],[R[3]]]],[11,R[5],E,E,90,[[],[R[3]]]],[11,R[7],E,E,90,[[["self"]],[T]]],[11,R[6],E,E,90,[[["self"]],[T]]],[11,R[8],E,E,90,[[["self"]],[R[9]]]],[11,"into",E,E,91,[[],[U]]],[11,"from",E,E,91,[[[T]],[T]]],[11,R[46],E,E,91,[[["self"]],[T]]],[11,R[47],E,E,91,[[["self"],[T]]]],[11,R[4],E,E,91,[[[U]],[R[3]]]],[11,R[5],E,E,91,[[],[R[3]]]],[11,R[7],E,E,91,[[["self"]],[T]]],[11,R[6],E,E,91,[[["self"]],[T]]],[11,R[8],E,E,91,[[["self"]],[R[9]]]],[11,"into",E,E,92,[[],[U]]],[11,"from",E,E,92,[[[T]],[T]]],[11,R[46],E,E,92,[[["self"]],[T]]],[11,R[47],E,E,92,[[["self"],[T]]]],[11,R[4],E,E,92,[[[U]],[R[3]]]],[11,R[5],E,E,92,[[],[R[3]]]],[11,R[7],E,E,92,[[["self"]],[T]]],[11,R[6],E,E,92,[[["self"]],[T]]],[11,R[8],E,E,92,[[["self"]],[R[9]]]],[11,"into",E,E,93,[[],[U]]],[11,"from",E,E,93,[[[T]],[T]]],[11,R[46],E,E,93,[[["self"]],[T]]],[11,R[47],E,E,93,[[["self"],[T]]]],[11,R[4],E,E,93,[[[U]],[R[3]]]],[11,R[5],E,E,93,[[],[R[3]]]],[11,R[7],E,E,93,[[["self"]],[T]]],[11,R[6],E,E,93,[[["self"]],[T]]],[11,R[8],E,E,93,[[["self"]],[R[9]]]],[11,"into",E,E,94,[[],[U]]],[11,"from",E,E,94,[[[T]],[T]]],[11,R[4],E,E,94,[[[U]],[R[3]]]],[11,R[5],E,E,94,[[],[R[3]]]],[11,R[7],E,E,94,[[["self"]],[T]]],[11,R[6],E,E,94,[[["self"]],[T]]],[11,R[8],E,E,94,[[["self"]],[R[9]]]],[11,"into",E,E,95,[[],[U]]],[11,"from",E,E,95,[[[T]],[T]]],[11,R[4],E,E,95,[[[U]],[R[3]]]],[11,R[5],E,E,95,[[],[R[3]]]],[11,R[7],E,E,95,[[["self"]],[T]]],[11,R[6],E,E,95,[[["self"]],[T]]],[11,R[8],E,E,95,[[["self"]],[R[9]]]],[11,"into",R[4219],E,96,[[],[U]]],[11,"from",E,E,96,[[[T]],[T]]],[11,R[46],E,E,96,[[["self"]],[T]]],[11,R[47],E,E,96,[[["self"],[T]]]],[11,R[4],E,E,96,[[[U]],[R[3]]]],[11,R[5],E,E,96,[[],[R[3]]]],[11,R[7],E,E,96,[[["self"]],[T]]],[11,R[6],E,E,96,[[["self"]],[T]]],[11,R[8],E,E,96,[[["self"]],[R[9]]]],[11,"into",E,E,97,[[],[U]]],[11,"from",E,E,97,[[[T]],[T]]],[11,R[46],E,E,97,[[["self"]],[T]]],[11,R[47],E,E,97,[[["self"],[T]]]],[11,R[4],E,E,97,[[[U]],[R[3]]]],[11,R[5],E,E,97,[[],[R[3]]]],[11,R[7],E,E,97,[[["self"]],[T]]],[11,R[6],E,E,97,[[["self"]],[T]]],[11,R[8],E,E,97,[[["self"]],[R[9]]]],[11,"into",E,E,98,[[],[U]]],[11,"from",E,E,98,[[[T]],[T]]],[11,R[46],E,E,98,[[["self"]],[T]]],[11,R[47],E,E,98,[[["self"],[T]]]],[11,R[4],E,E,98,[[[U]],[R[3]]]],[11,R[5],E,E,98,[[],[R[3]]]],[11,R[7],E,E,98,[[["self"]],[T]]],[11,R[6],E,E,98,[[["self"]],[T]]],[11,R[8],E,E,98,[[["self"]],[R[9]]]],[11,"into",E,E,99,[[],[U]]],[11,"from",E,E,99,[[[T]],[T]]],[11,R[46],E,E,99,[[["self"]],[T]]],[11,R[47],E,E,99,[[["self"],[T]]]],[11,R[4],E,E,99,[[[U]],[R[3]]]],[11,R[5],E,E,99,[[],[R[3]]]],[11,R[7],E,E,99,[[["self"]],[T]]],[11,R[6],E,E,99,[[["self"]],[T]]],[11,R[8],E,E,99,[[["self"]],[R[9]]]],[11,"into",E,E,166,[[],[U]]],[11,R[45],E,E,166,[[],["i"]]],[11,"from",E,E,166,[[[T]],[T]]],[11,R[4],E,E,166,[[[U]],[R[3]]]],[11,R[5],E,E,166,[[],[R[3]]]],[11,R[7],E,E,166,[[["self"]],[T]]],[11,R[6],E,E,166,[[["self"]],[T]]],[11,R[8],E,E,166,[[["self"]],[R[9]]]],[11,"into",E,E,100,[[],[U]]],[11,"from",E,E,100,[[[T]],[T]]],[11,R[4],E,E,100,[[[U]],[R[3]]]],[11,R[5],E,E,100,[[],[R[3]]]],[11,R[7],E,E,100,[[["self"]],[T]]],[11,R[6],E,E,100,[[["self"]],[T]]],[11,R[8],E,E,100,[[["self"]],[R[9]]]],[11,"into",R[4125],E,101,[[],[U]]],[11,"from",E,E,101,[[[T]],[T]]],[11,R[4],E,E,101,[[[U]],[R[3]]]],[11,R[5],E,E,101,[[],[R[3]]]],[11,R[7],E,E,101,[[["self"]],[T]]],[11,R[6],E,E,101,[[["self"]],[T]]],[11,R[8],E,E,101,[[["self"]],[R[9]]]],[11,"into",E,E,104,[[],[U]]],[11,"from",E,E,104,[[[T]],[T]]],[11,R[4],E,E,104,[[[U]],[R[3]]]],[11,R[5],E,E,104,[[],[R[3]]]],[11,R[7],E,E,104,[[["self"]],[T]]],[11,R[6],E,E,104,[[["self"]],[T]]],[11,R[8],E,E,104,[[["self"]],[R[9]]]],[11,"into",E,E,102,[[],[U]]],[11,"from",E,E,102,[[[T]],[T]]],[11,R[4],E,E,102,[[[U]],[R[3]]]],[11,R[5],E,E,102,[[],[R[3]]]],[11,R[7],E,E,102,[[["self"]],[T]]],[11,R[6],E,E,102,[[["self"]],[T]]],[11,R[8],E,E,102,[[["self"]],[R[9]]]],[11,"into",E,E,103,[[],[U]]],[11,"from",E,E,103,[[[T]],[T]]],[11,R[4],E,E,103,[[[U]],[R[3]]]],[11,R[5],E,E,103,[[],[R[3]]]],[11,R[7],E,E,103,[[["self"]],[T]]],[11,R[6],E,E,103,[[["self"]],[T]]],[11,R[8],E,E,103,[[["self"]],[R[9]]]],[11,"into",R[4220],E,105,[[],[U]]],[11,"from",E,E,105,[[[T]],[T]]],[11,R[4],E,E,105,[[[U]],[R[3]]]],[11,R[5],E,E,105,[[],[R[3]]]],[11,R[7],E,E,105,[[["self"]],[T]]],[11,R[6],E,E,105,[[["self"]],[T]]],[11,R[8],E,E,105,[[["self"]],[R[9]]]],[11,"into",E,E,106,[[],[U]]],[11,"from",E,E,106,[[[T]],[T]]],[11,R[4],E,E,106,[[[U]],[R[3]]]],[11,R[5],E,E,106,[[],[R[3]]]],[11,R[7],E,E,106,[[["self"]],[T]]],[11,R[6],E,E,106,[[["self"]],[T]]],[11,R[8],E,E,106,[[["self"]],[R[9]]]],[11,"into",R[4221],E,107,[[],[U]]],[11,"from",E,E,107,[[[T]],[T]]],[11,R[46],E,E,107,[[["self"]],[T]]],[11,R[47],E,E,107,[[["self"],[T]]]],[11,R[4],E,E,107,[[[U]],[R[3]]]],[11,R[5],E,E,107,[[],[R[3]]]],[11,R[7],E,E,107,[[["self"]],[T]]],[11,R[6],E,E,107,[[["self"]],[T]]],[11,R[8],E,E,107,[[["self"]],[R[9]]]],[11,"into",R[4222],E,167,[[],[U]]],[11,R[45],E,E,167,[[],["i"]]],[11,"from",E,E,167,[[[T]],[T]]],[11,R[4],E,E,167,[[[U]],[R[3]]]],[11,R[5],E,E,167,[[],[R[3]]]],[11,R[7],E,E,167,[[["self"]],[T]]],[11,R[6],E,E,167,[[["self"]],[T]]],[11,R[8],E,E,167,[[["self"]],[R[9]]]],[11,"into",E,E,108,[[],[U]]],[11,"from",E,E,108,[[[T]],[T]]],[11,R[4],E,E,108,[[[U]],[R[3]]]],[11,R[5],E,E,108,[[],[R[3]]]],[11,R[7],E,E,108,[[["self"]],[T]]],[11,R[6],E,E,108,[[["self"]],[T]]],[11,R[8],E,E,108,[[["self"]],[R[9]]]],[11,"into",E,E,168,[[],[U]]],[11,R[45],E,E,168,[[],["i"]]],[11,"from",E,E,168,[[[T]],[T]]],[11,R[4],E,E,168,[[[U]],[R[3]]]],[11,R[5],E,E,168,[[],[R[3]]]],[11,R[7],E,E,168,[[["self"]],[T]]],[11,R[6],E,E,168,[[["self"]],[T]]],[11,R[8],E,E,168,[[["self"]],[R[9]]]],[11,"into",E,E,109,[[],[U]]],[11,"from",E,E,109,[[[T]],[T]]],[11,R[4],E,E,109,[[[U]],[R[3]]]],[11,R[5],E,E,109,[[],[R[3]]]],[11,R[7],E,E,109,[[["self"]],[T]]],[11,R[6],E,E,109,[[["self"]],[T]]],[11,R[8],E,E,109,[[["self"]],[R[9]]]],[11,"into",E,E,110,[[],[U]]],[11,"from",E,E,110,[[[T]],[T]]],[11,R[4],E,E,110,[[[U]],[R[3]]]],[11,R[5],E,E,110,[[],[R[3]]]],[11,R[7],E,E,110,[[["self"]],[T]]],[11,R[6],E,E,110,[[["self"]],[T]]],[11,R[8],E,E,110,[[["self"]],[R[9]]]],[11,"into",R[4162],E,111,[[],[U]]],[11,"from",E,E,111,[[[T]],[T]]],[11,R[4],E,E,111,[[[U]],[R[3]]]],[11,R[5],E,E,111,[[],[R[3]]]],[11,R[7],E,E,111,[[["self"]],[T]]],[11,R[6],E,E,111,[[["self"]],[T]]],[11,R[8],E,E,111,[[["self"]],[R[9]]]],[11,"into",E,E,112,[[],[U]]],[11,"from",E,E,112,[[[T]],[T]]],[11,R[4],E,E,112,[[[U]],[R[3]]]],[11,R[5],E,E,112,[[],[R[3]]]],[11,R[7],E,E,112,[[["self"]],[T]]],[11,R[6],E,E,112,[[["self"]],[T]]],[11,R[8],E,E,112,[[["self"]],[R[9]]]],[11,"into",R[4223],E,113,[[],[U]]],[11,"from",E,E,113,[[[T]],[T]]],[11,R[46],E,E,113,[[["self"]],[T]]],[11,R[47],E,E,113,[[["self"],[T]]]],[11,R[4],E,E,113,[[[U]],[R[3]]]],[11,R[5],E,E,113,[[],[R[3]]]],[11,R[7],E,E,113,[[["self"]],[T]]],[11,R[6],E,E,113,[[["self"]],[T]]],[11,R[8],E,E,113,[[["self"]],[R[9]]]],[11,"into",E,E,114,[[],[U]]],[11,"from",E,E,114,[[[T]],[T]]],[11,R[46],E,E,114,[[["self"]],[T]]],[11,R[47],E,E,114,[[["self"],[T]]]],[11,R[4],E,E,114,[[[U]],[R[3]]]],[11,R[5],E,E,114,[[],[R[3]]]],[11,R[7],E,E,114,[[["self"]],[T]]],[11,R[6],E,E,114,[[["self"]],[T]]],[11,R[8],E,E,114,[[["self"]],[R[9]]]],[11,"into",E,E,115,[[],[U]]],[11,"from",E,E,115,[[[T]],[T]]],[11,R[46],E,E,115,[[["self"]],[T]]],[11,R[47],E,E,115,[[["self"],[T]]]],[11,R[4],E,E,115,[[[U]],[R[3]]]],[11,R[5],E,E,115,[[],[R[3]]]],[11,R[7],E,E,115,[[["self"]],[T]]],[11,R[6],E,E,115,[[["self"]],[T]]],[11,R[8],E,E,115,[[["self"]],[R[9]]]],[11,"into",R[4224],E,116,[[],[U]]],[11,"from",E,E,116,[[[T]],[T]]],[11,R[46],E,E,116,[[["self"]],[T]]],[11,R[47],E,E,116,[[["self"],[T]]]],[11,R[4],E,E,116,[[[U]],[R[3]]]],[11,R[5],E,E,116,[[],[R[3]]]],[11,R[7],E,E,116,[[["self"]],[T]]],[11,R[6],E,E,116,[[["self"]],[T]]],[11,R[8],E,E,116,[[["self"]],[R[9]]]],[11,"into",E,E,117,[[],[U]]],[11,"from",E,E,117,[[[T]],[T]]],[11,R[46],E,E,117,[[["self"]],[T]]],[11,R[47],E,E,117,[[["self"],[T]]]],[11,R[4],E,E,117,[[[U]],[R[3]]]],[11,R[5],E,E,117,[[],[R[3]]]],[11,R[7],E,E,117,[[["self"]],[T]]],[11,R[6],E,E,117,[[["self"]],[T]]],[11,R[8],E,E,117,[[["self"]],[R[9]]]],[11,"into",E,E,118,[[],[U]]],[11,"from",E,E,118,[[[T]],[T]]],[11,R[46],E,E,118,[[["self"]],[T]]],[11,R[47],E,E,118,[[["self"],[T]]]],[11,R[4],E,E,118,[[[U]],[R[3]]]],[11,R[5],E,E,118,[[],[R[3]]]],[11,R[7],E,E,118,[[["self"]],[T]]],[11,R[6],E,E,118,[[["self"]],[T]]],[11,R[8],E,E,118,[[["self"]],[R[9]]]],[11,"into",E,E,119,[[],[U]]],[11,"from",E,E,119,[[[T]],[T]]],[11,R[46],E,E,119,[[["self"]],[T]]],[11,R[47],E,E,119,[[["self"],[T]]]],[11,R[4],E,E,119,[[[U]],[R[3]]]],[11,R[5],E,E,119,[[],[R[3]]]],[11,R[7],E,E,119,[[["self"]],[T]]],[11,R[6],E,E,119,[[["self"]],[T]]],[11,R[8],E,E,119,[[["self"]],[R[9]]]],[11,"into",E,E,120,[[],[U]]],[11,"from",E,E,120,[[[T]],[T]]],[11,R[46],E,E,120,[[["self"]],[T]]],[11,R[47],E,E,120,[[["self"],[T]]]],[11,R[4],E,E,120,[[[U]],[R[3]]]],[11,R[5],E,E,120,[[],[R[3]]]],[11,R[7],E,E,120,[[["self"]],[T]]],[11,R[6],E,E,120,[[["self"]],[T]]],[11,R[8],E,E,120,[[["self"]],[R[9]]]],[11,"into",E,E,121,[[],[U]]],[11,"from",E,E,121,[[[T]],[T]]],[11,R[46],E,E,121,[[["self"]],[T]]],[11,R[47],E,E,121,[[["self"],[T]]]],[11,R[4],E,E,121,[[[U]],[R[3]]]],[11,R[5],E,E,121,[[],[R[3]]]],[11,R[7],E,E,121,[[["self"]],[T]]],[11,R[6],E,E,121,[[["self"]],[T]]],[11,R[8],E,E,121,[[["self"]],[R[9]]]],[11,"into",R[4225],E,122,[[],[U]]],[11,"from",E,E,122,[[[T]],[T]]],[11,R[46],E,E,122,[[["self"]],[T]]],[11,R[47],E,E,122,[[["self"],[T]]]],[11,R[4],E,E,122,[[[U]],[R[3]]]],[11,R[5],E,E,122,[[],[R[3]]]],[11,R[7],E,E,122,[[["self"]],[T]]],[11,R[6],E,E,122,[[["self"]],[T]]],[11,R[8],E,E,122,[[["self"]],[R[9]]]],[11,"into",R[4226],E,123,[[],[U]]],[11,"from",E,E,123,[[[T]],[T]]],[11,R[46],E,E,123,[[["self"]],[T]]],[11,R[47],E,E,123,[[["self"],[T]]]],[11,R[4],E,E,123,[[[U]],[R[3]]]],[11,R[5],E,E,123,[[],[R[3]]]],[11,R[7],E,E,123,[[["self"]],[T]]],[11,R[6],E,E,123,[[["self"]],[T]]],[11,R[8],E,E,123,[[["self"]],[R[9]]]],[11,"into",E,E,124,[[],[U]]],[11,"from",E,E,124,[[[T]],[T]]],[11,R[46],E,E,124,[[["self"]],[T]]],[11,R[47],E,E,124,[[["self"],[T]]]],[11,R[4],E,E,124,[[[U]],[R[3]]]],[11,R[5],E,E,124,[[],[R[3]]]],[11,R[7],E,E,124,[[["self"]],[T]]],[11,R[6],E,E,124,[[["self"]],[T]]],[11,R[8],E,E,124,[[["self"]],[R[9]]]],[11,"into",R[4169],E,125,[[],[U]]],[11,"from",E,E,125,[[[T]],[T]]],[11,R[46],E,E,125,[[["self"]],[T]]],[11,R[47],E,E,125,[[["self"],[T]]]],[11,R[4],E,E,125,[[[U]],[R[3]]]],[11,R[5],E,E,125,[[],[R[3]]]],[11,R[7],E,E,125,[[["self"]],[T]]],[11,R[6],E,E,125,[[["self"]],[T]]],[11,R[8],E,E,125,[[["self"]],[R[9]]]],[11,"into",E,E,126,[[],[U]]],[11,"from",E,E,126,[[[T]],[T]]],[11,R[4],E,E,126,[[[U]],[R[3]]]],[11,R[5],E,E,126,[[],[R[3]]]],[11,R[7],E,E,126,[[["self"]],[T]]],[11,R[6],E,E,126,[[["self"]],[T]]],[11,R[8],E,E,126,[[["self"]],[R[9]]]],[11,"into",E,E,127,[[],[U]]],[11,"from",E,E,127,[[[T]],[T]]],[11,R[4],E,E,127,[[[U]],[R[3]]]],[11,R[5],E,E,127,[[],[R[3]]]],[11,R[7],E,E,127,[[["self"]],[T]]],[11,R[6],E,E,127,[[["self"]],[T]]],[11,R[8],E,E,127,[[["self"]],[R[9]]]],[11,"into",E,E,128,[[],[U]]],[11,"from",E,E,128,[[[T]],[T]]],[11,R[4],E,E,128,[[[U]],[R[3]]]],[11,R[5],E,E,128,[[],[R[3]]]],[11,R[7],E,E,128,[[["self"]],[T]]],[11,R[6],E,E,128,[[["self"]],[T]]],[11,R[8],E,E,128,[[["self"]],[R[9]]]],[11,"into",E,E,129,[[],[U]]],[11,"from",E,E,129,[[[T]],[T]]],[11,R[4],E,E,129,[[[U]],[R[3]]]],[11,R[5],E,E,129,[[],[R[3]]]],[11,R[7],E,E,129,[[["self"]],[T]]],[11,R[6],E,E,129,[[["self"]],[T]]],[11,R[8],E,E,129,[[["self"]],[R[9]]]],[11,"into",R[4227],E,130,[[],[U]]],[11,"from",E,E,130,[[[T]],[T]]],[11,R[46],E,E,130,[[["self"]],[T]]],[11,R[47],E,E,130,[[["self"],[T]]]],[11,R[4],E,E,130,[[[U]],[R[3]]]],[11,R[5],E,E,130,[[],[R[3]]]],[11,R[7],E,E,130,[[["self"]],[T]]],[11,R[6],E,E,130,[[["self"]],[T]]],[11,R[8],E,E,130,[[["self"]],[R[9]]]],[11,"into",E,E,131,[[],[U]]],[11,"from",E,E,131,[[[T]],[T]]],[11,R[4],E,E,131,[[[U]],[R[3]]]],[11,R[5],E,E,131,[[],[R[3]]]],[11,R[7],E,E,131,[[["self"]],[T]]],[11,R[6],E,E,131,[[["self"]],[T]]],[11,R[8],E,E,131,[[["self"]],[R[9]]]],[11,"into",E,E,132,[[],[U]]],[11,"from",E,E,132,[[[T]],[T]]],[11,R[4],E,E,132,[[[U]],[R[3]]]],[11,R[5],E,E,132,[[],[R[3]]]],[11,R[7],E,E,132,[[["self"]],[T]]],[11,R[6],E,E,132,[[["self"]],[T]]],[11,R[8],E,E,132,[[["self"]],[R[9]]]],[11,"into",E,E,133,[[],[U]]],[11,"from",E,E,133,[[[T]],[T]]],[11,R[4],E,E,133,[[[U]],[R[3]]]],[11,R[5],E,E,133,[[],[R[3]]]],[11,R[7],E,E,133,[[["self"]],[T]]],[11,R[6],E,E,133,[[["self"]],[T]]],[11,R[8],E,E,133,[[["self"]],[R[9]]]],[11,"into",E,E,134,[[],[U]]],[11,"from",E,E,134,[[[T]],[T]]],[11,R[4],E,E,134,[[[U]],[R[3]]]],[11,R[5],E,E,134,[[],[R[3]]]],[11,R[7],E,E,134,[[["self"]],[T]]],[11,R[6],E,E,134,[[["self"]],[T]]],[11,R[8],E,E,134,[[["self"]],[R[9]]]],[11,"into",E,E,135,[[],[U]]],[11,"from",E,E,135,[[[T]],[T]]],[11,R[46],E,E,135,[[["self"]],[T]]],[11,R[47],E,E,135,[[["self"],[T]]]],[11,R[4],E,E,135,[[[U]],[R[3]]]],[11,R[5],E,E,135,[[],[R[3]]]],[11,R[7],E,E,135,[[["self"]],[T]]],[11,R[6],E,E,135,[[["self"]],[T]]],[11,R[8],E,E,135,[[["self"]],[R[9]]]],[11,"into",R[4228],E,137,[[],[U]]],[11,"from",E,E,137,[[[T]],[T]]],[11,R[46],E,E,137,[[["self"]],[T]]],[11,R[47],E,E,137,[[["self"],[T]]]],[11,R[4],E,E,137,[[[U]],[R[3]]]],[11,R[5],E,E,137,[[],[R[3]]]],[11,R[7],E,E,137,[[["self"]],[T]]],[11,R[6],E,E,137,[[["self"]],[T]]],[11,R[8],E,E,137,[[["self"]],[R[9]]]],[11,"into",E,E,138,[[],[U]]],[11,"from",E,E,138,[[[T]],[T]]],[11,R[46],E,E,138,[[["self"]],[T]]],[11,R[47],E,E,138,[[["self"],[T]]]],[11,R[4],E,E,138,[[[U]],[R[3]]]],[11,R[5],E,E,138,[[],[R[3]]]],[11,R[7],E,E,138,[[["self"]],[T]]],[11,R[6],E,E,138,[[["self"]],[T]]],[11,R[8],E,E,138,[[["self"]],[R[9]]]],[11,"into",E,E,139,[[],[U]]],[11,"from",E,E,139,[[[T]],[T]]],[11,R[46],E,E,139,[[["self"]],[T]]],[11,R[47],E,E,139,[[["self"],[T]]]],[11,R[4],E,E,139,[[[U]],[R[3]]]],[11,R[5],E,E,139,[[],[R[3]]]],[11,R[7],E,E,139,[[["self"]],[T]]],[11,R[6],E,E,139,[[["self"]],[T]]],[11,R[8],E,E,139,[[["self"]],[R[9]]]],[11,"into",R[4229],E,140,[[],[U]]],[11,"from",E,E,140,[[[T]],[T]]],[11,R[46],E,E,140,[[["self"]],[T]]],[11,R[47],E,E,140,[[["self"],[T]]]],[11,R[4],E,E,140,[[[U]],[R[3]]]],[11,R[5],E,E,140,[[],[R[3]]]],[11,R[7],E,E,140,[[["self"]],[T]]],[11,R[6],E,E,140,[[["self"]],[T]]],[11,R[8],E,E,140,[[["self"]],[R[9]]]],[11,"into",E,E,169,[[],[U]]],[11,R[45],E,E,169,[[],["i"]]],[11,"from",E,E,169,[[[T]],[T]]],[11,R[4],E,E,169,[[[U]],[R[3]]]],[11,R[5],E,E,169,[[],[R[3]]]],[11,R[7],E,E,169,[[["self"]],[T]]],[11,R[6],E,E,169,[[["self"]],[T]]],[11,R[8],E,E,169,[[["self"]],[R[9]]]],[11,"into",E,E,141,[[],[U]]],[11,R[113],E,E,141,[[["self"]],["string"]]],[11,"from",E,E,141,[[[T]],[T]]],[11,R[46],E,E,141,[[["self"]],[T]]],[11,R[47],E,E,141,[[["self"],[T]]]],[11,R[4],E,E,141,[[[U]],[R[3]]]],[11,R[5],E,E,141,[[],[R[3]]]],[11,R[7],E,E,141,[[["self"]],[T]]],[11,R[6],E,E,141,[[["self"]],[T]]],[11,R[8],E,E,141,[[["self"]],[R[9]]]],[11,"into",E,E,142,[[],[U]]],[11,"from",E,E,142,[[[T]],[T]]],[11,R[46],E,E,142,[[["self"]],[T]]],[11,R[47],E,E,142,[[["self"],[T]]]],[11,R[4],E,E,142,[[[U]],[R[3]]]],[11,R[5],E,E,142,[[],[R[3]]]],[11,R[7],E,E,142,[[["self"]],[T]]],[11,R[6],E,E,142,[[["self"]],[T]]],[11,R[8],E,E,142,[[["self"]],[R[9]]]],[11,"into",E,E,170,[[],[U]]],[11,R[45],E,E,170,[[],["i"]]],[11,"from",E,E,170,[[[T]],[T]]],[11,R[46],E,E,170,[[["self"]],[T]]],[11,R[47],E,E,170,[[["self"],[T]]]],[11,R[4],E,E,170,[[[U]],[R[3]]]],[11,R[5],E,E,170,[[],[R[3]]]],[11,R[7],E,E,170,[[["self"]],[T]]],[11,R[6],E,E,170,[[["self"]],[T]]],[11,R[8],E,E,170,[[["self"]],[R[9]]]],[11,"into",E,E,143,[[],[U]]],[11,"from",E,E,143,[[[T]],[T]]],[11,R[46],E,E,143,[[["self"]],[T]]],[11,R[47],E,E,143,[[["self"],[T]]]],[11,R[4],E,E,143,[[[U]],[R[3]]]],[11,R[5],E,E,143,[[],[R[3]]]],[11,R[7],E,E,143,[[["self"]],[T]]],[11,R[6],E,E,143,[[["self"]],[T]]],[11,R[8],E,E,143,[[["self"]],[R[9]]]],[11,"into",E,E,147,[[],[U]]],[11,"from",E,E,147,[[[T]],[T]]],[11,R[4],E,E,147,[[[U]],[R[3]]]],[11,R[5],E,E,147,[[],[R[3]]]],[11,R[7],E,E,147,[[["self"]],[T]]],[11,R[6],E,E,147,[[["self"]],[T]]],[11,R[8],E,E,147,[[["self"]],[R[9]]]],[11,"into",E,E,144,[[],[U]]],[11,"from",E,E,144,[[[T]],[T]]],[11,R[46],E,E,144,[[["self"]],[T]]],[11,R[47],E,E,144,[[["self"],[T]]]],[11,R[4],E,E,144,[[[U]],[R[3]]]],[11,R[5],E,E,144,[[],[R[3]]]],[11,R[7],E,E,144,[[["self"]],[T]]],[11,R[6],E,E,144,[[["self"]],[T]]],[11,R[8],E,E,144,[[["self"]],[R[9]]]],[11,"into",E,E,145,[[],[U]]],[11,"from",E,E,145,[[[T]],[T]]],[11,R[46],E,E,145,[[["self"]],[T]]],[11,R[47],E,E,145,[[["self"],[T]]]],[11,R[4],E,E,145,[[[U]],[R[3]]]],[11,R[5],E,E,145,[[],[R[3]]]],[11,R[7],E,E,145,[[["self"]],[T]]],[11,R[6],E,E,145,[[["self"]],[T]]],[11,R[8],E,E,145,[[["self"]],[R[9]]]],[11,"into",E,E,146,[[],[U]]],[11,"from",E,E,146,[[[T]],[T]]],[11,R[46],E,E,146,[[["self"]],[T]]],[11,R[47],E,E,146,[[["self"],[T]]]],[11,R[4],E,E,146,[[[U]],[R[3]]]],[11,R[5],E,E,146,[[],[R[3]]]],[11,R[7],E,E,146,[[["self"]],[T]]],[11,R[6],E,E,146,[[["self"]],[T]]],[11,R[8],E,E,146,[[["self"]],[R[9]]]],[11,"into",R[4230],E,148,[[],[U]]],[11,"from",E,E,148,[[[T]],[T]]],[11,R[46],E,E,148,[[["self"]],[T]]],[11,R[47],E,E,148,[[["self"],[T]]]],[11,R[4],E,E,148,[[[U]],[R[3]]]],[11,R[5],E,E,148,[[],[R[3]]]],[11,R[7],E,E,148,[[["self"]],[T]]],[11,R[6],E,E,148,[[["self"]],[T]]],[11,R[8],E,E,148,[[["self"]],[R[9]]]],[11,"into",E,E,149,[[],[U]]],[11,"from",E,E,149,[[[T]],[T]]],[11,R[46],E,E,149,[[["self"]],[T]]],[11,R[47],E,E,149,[[["self"],[T]]]],[11,R[4],E,E,149,[[[U]],[R[3]]]],[11,R[5],E,E,149,[[],[R[3]]]],[11,R[7],E,E,149,[[["self"]],[T]]],[11,R[6],E,E,149,[[["self"]],[T]]],[11,R[8],E,E,149,[[["self"]],[R[9]]]],[11,"into",E,E,150,[[],[U]]],[11,"from",E,E,150,[[[T]],[T]]],[11,R[46],E,E,150,[[["self"]],[T]]],[11,R[47],E,E,150,[[["self"],[T]]]],[11,R[4],E,E,150,[[[U]],[R[3]]]],[11,R[5],E,E,150,[[],[R[3]]]],[11,R[7],E,E,150,[[["self"]],[T]]],[11,R[6],E,E,150,[[["self"]],[T]]],[11,R[8],E,E,150,[[["self"]],[R[9]]]],[11,"into",E,E,151,[[],[U]]],[11,"from",E,E,151,[[[T]],[T]]],[11,R[46],E,E,151,[[["self"]],[T]]],[11,R[47],E,E,151,[[["self"],[T]]]],[11,R[4],E,E,151,[[[U]],[R[3]]]],[11,R[5],E,E,151,[[],[R[3]]]],[11,R[7],E,E,151,[[["self"]],[T]]],[11,R[6],E,E,151,[[["self"]],[T]]],[11,R[8],E,E,151,[[["self"]],[R[9]]]],[11,"into",E,E,152,[[],[U]]],[11,"from",E,E,152,[[[T]],[T]]],[11,R[46],E,E,152,[[["self"]],[T]]],[11,R[47],E,E,152,[[["self"],[T]]]],[11,R[4],E,E,152,[[[U]],[R[3]]]],[11,R[5],E,E,152,[[],[R[3]]]],[11,R[7],E,E,152,[[["self"]],[T]]],[11,R[6],E,E,152,[[["self"]],[T]]],[11,R[8],E,E,152,[[["self"]],[R[9]]]],[11,"into",E,E,153,[[],[U]]],[11,"from",E,E,153,[[[T]],[T]]],[11,R[4],E,E,153,[[[U]],[R[3]]]],[11,R[5],E,E,153,[[],[R[3]]]],[11,R[7],E,E,153,[[["self"]],[T]]],[11,R[6],E,E,153,[[["self"]],[T]]],[11,R[8],E,E,153,[[["self"]],[R[9]]]],[11,"into",E,E,171,[[],[U]]],[11,R[45],E,E,171,[[],["i"]]],[11,"from",E,E,171,[[[T]],[T]]],[11,R[4],E,E,171,[[[U]],[R[3]]]],[11,R[5],E,E,171,[[],[R[3]]]],[11,R[7],E,E,171,[[["self"]],[T]]],[11,R[6],E,E,171,[[["self"]],[T]]],[11,R[8],E,E,171,[[["self"]],[R[9]]]],[11,"into",R[4231],E,154,[[],[U]]],[11,"from",E,E,154,[[[T]],[T]]],[11,R[46],E,E,154,[[["self"]],[T]]],[11,R[47],E,E,154,[[["self"],[T]]]],[11,R[4],E,E,154,[[[U]],[R[3]]]],[11,R[5],E,E,154,[[],[R[3]]]],[11,R[7],E,E,154,[[["self"]],[T]]],[11,R[6],E,E,154,[[["self"]],[T]]],[11,R[8],E,E,154,[[["self"]],[R[9]]]],[11,"into",E,E,155,[[],[U]]],[11,R[45],E,E,155,[[],["i"]]],[11,"from",E,E,155,[[[T]],[T]]],[11,R[4],E,E,155,[[[U]],[R[3]]]],[11,R[5],E,E,155,[[],[R[3]]]],[11,R[7],E,E,155,[[["self"]],[T]]],[11,R[6],E,E,155,[[["self"]],[T]]],[11,R[8],E,E,155,[[["self"]],[R[9]]]],[11,"into",R[4232],E,156,[[],[U]]],[11,"from",E,E,156,[[[T]],[T]]],[11,R[46],E,E,156,[[["self"]],[T]]],[11,R[47],E,E,156,[[["self"],[T]]]],[11,R[4],E,E,156,[[[U]],[R[3]]]],[11,R[5],E,E,156,[[],[R[3]]]],[11,R[7],E,E,156,[[["self"]],[T]]],[11,R[6],E,E,156,[[["self"]],[T]]],[11,R[8],E,E,156,[[["self"]],[R[9]]]],[11,"into",E,E,157,[[],[U]]],[11,"from",E,E,157,[[[T]],[T]]],[11,R[46],E,E,157,[[["self"]],[T]]],[11,R[47],E,E,157,[[["self"],[T]]]],[11,R[4],E,E,157,[[[U]],[R[3]]]],[11,R[5],E,E,157,[[],[R[3]]]],[11,R[7],E,E,157,[[["self"]],[T]]],[11,R[6],E,E,157,[[["self"]],[T]]],[11,R[8],E,E,157,[[["self"]],[R[9]]]],[11,"into",E,E,158,[[],[U]]],[11,"from",E,E,158,[[[T]],[T]]],[11,R[46],E,E,158,[[["self"]],[T]]],[11,R[47],E,E,158,[[["self"],[T]]]],[11,R[4],E,E,158,[[[U]],[R[3]]]],[11,R[5],E,E,158,[[],[R[3]]]],[11,R[7],E,E,158,[[["self"]],[T]]],[11,R[6],E,E,158,[[["self"]],[T]]],[11,R[8],E,E,158,[[["self"]],[R[9]]]],[11,"into",E,E,159,[[],[U]]],[11,"from",E,E,159,[[[T]],[T]]],[11,R[4],E,E,159,[[[U]],[R[3]]]],[11,R[5],E,E,159,[[],[R[3]]]],[11,R[7],E,E,159,[[["self"]],[T]]],[11,R[6],E,E,159,[[["self"]],[T]]],[11,R[8],E,E,159,[[["self"]],[R[9]]]],[11,"into",E,E,161,[[],[U]]],[11,"from",E,E,161,[[[T]],[T]]],[11,R[4],E,E,161,[[[U]],[R[3]]]],[11,R[5],E,E,161,[[],[R[3]]]],[11,R[7],E,E,161,[[["self"]],[T]]],[11,R[6],E,E,161,[[["self"]],[T]]],[11,R[8],E,E,161,[[["self"]],[R[9]]]],[11,"into",E,E,160,[[],[U]]],[11,"from",E,E,160,[[[T]],[T]]],[11,R[4],E,E,160,[[[U]],[R[3]]]],[11,R[5],E,E,160,[[],[R[3]]]],[11,R[7],E,E,160,[[["self"]],[T]]],[11,R[6],E,E,160,[[["self"]],[T]]],[11,R[8],E,E,160,[[["self"]],[R[9]]]],[11,"fmt",R[4198],E,5,[[["self"],[R[10]]],[[R[3],["error"]],["error"]]]],[11,"clone",E,E,5,[[["self"]],["endian"]]],[11,R[83],E,E,5,[[],["endian"]]],[11,"from",E,E,5,[[["bool"]],["endian"]]],[11,"eq",E,E,5,[[["self"],["endian"]],["bool"]]],[11,"len",R[3954],E,162,[[["self"]],["usize"]]],[11,"len",R[3990],E,163,[[["self"]],["usize"]]],[11,"len",R[4222],E,168,[[["self"]],["usize"]]],[11,R[83],R[4197],E,4,[[],["strtab"]]],[11,R[83],R[4198],E,7,[[],["self"]]],[11,R[83],E,E,6,[[],["self"]]],[11,R[83],"goblin",E,0,[[],["hintdata"]]],[11,R[83],R[4199],E,10,[[],["header"]]],[11,R[83],R[4200],E,11,[[],["header"]]],[11,R[83],R[3908],E,12,[[],[R[3907]]]],[11,R[83],R[4201],E,13,[[],[R[3907]]]],[11,R[83],R[4202],E,14,[[],[R[3907]]]],[11,R[83],R[4203],E,16,[[],[R[3934]]]],[11,R[83],R[4204],E,17,[[],[R[3934]]]],[11,R[83],R[3935],E,15,[[],[R[3934]]]],[11,R[83],R[4205],E,19,[[],[R[3948]]]],[11,R[83],R[4206],E,20,[[],[R[3948]]]],[11,R[83],R[3949],E,18,[[],[R[3948]]]],[11,R[83],R[4207],E,22,[[],["sym"]]],[11,R[83],R[4208],E,23,[[],["sym"]]],[11,R[83],R[3954],E,21,[[],["sym"]]],[11,R[83],E,E,24,[[],["symtab"]]],[11,R[83],R[3974],E,25,[[],["dyn"]]],[11,R[83],E,E,27,[[],[R[3986]]]],[11,R[83],R[4209],E,28,[[],["dyn"]]],[11,R[83],E,E,29,[[],[R[3986]]]],[11,R[83],R[4210],E,30,[[],["dyn"]]],[11,R[83],E,E,31,[[],[R[3986]]]],[11,R[83],R[4211],E,33,[[],["rela"]]],[11,R[83],E,E,34,[[],["rel"]]],[11,R[83],R[4212],E,35,[[],["rela"]]],[11,R[83],E,E,36,[[],["rel"]]],[11,R[83],R[3990],E,32,[[],["reloc"]]],[11,R[83],E,E,37,[[],[R[4035]]]],[11,R[83],R[4216],E,48,[[],["header32"]]],[11,R[83],E,E,49,[[],["header64"]]],[11,R[83],E,E,50,[[],["header"]]],[11,R[83],R[4217],E,51,[[],[R[4057]]]],[11,R[83],E,E,52,[[],["fatarch"]]],[11,R[83],R[4218],E,71,[[],["self"]]],[11,R[83],E,E,72,[[],["self"]]],[11,R[83],E,E,86,[[],[R[4128]]]],[11,R[83],R[4219],E,99,[[],[R[4263]]]],[11,R[83],E,E,166,[[],[R[4131]]]],[11,R[83],R[4222],E,108,[[],["section"]]],[11,R[83],E,E,110,[[],["segments"]]],[11,R[83],R[4223],E,113,[[],[R[4250]]]],[11,R[83],E,E,114,[[],[R[4251]]]],[11,R[83],E,E,115,[[],["header"]]],[11,R[83],R[4224],E,116,[[],[R[4239]]]],[11,R[83],E,E,117,[[],[R[4240]]]],[11,R[83],E,E,118,[[],[R[4241]]]],[11,R[83],E,E,119,[[],[R[4242]]]],[11,R[83],E,E,120,[[],[R[4243]]]],[11,R[83],R[4225],E,122,[[],[R[4233]]]],[11,R[83],R[4226],E,123,[[],[R[4175]]]],[11,R[83],E,E,124,[[],[R[4244]]]],[11,R[83],R[4169],E,125,[[],[R[4245]]]],[11,R[83],E,E,126,[[],[R[4171]]]],[11,R[83],E,E,127,[[],["export"]]],[11,R[83],R[4228],E,137,[[],[R[4253]]]],[11,R[83],E,E,138,[[],[R[4234]]]],[11,R[83],E,E,139,[[],[R[4246]]]],[11,R[83],R[4229],E,140,[[],[R[4179]]]],[11,R[83],R[4230],E,148,[[],["symbol"]]],[11,R[83],E,E,149,[[],[R[4187]]]],[11,R[83],E,E,150,[[],[R[4188]]]],[11,R[83],E,E,151,[[],[R[4189]]]],[11,R[83],E,E,152,[[],[R[4190]]]],[11,R[83],E,E,171,[[],[R[4131]]]],[11,R[83],R[4231],E,154,[[],[R[4235]]]],[11,R[83],E,E,155,[[],[R[4164]]]],[11,R[83],R[4232],E,159,[[],["index"]]],[11,"clone",R[4198],E,7,[[["self"]],[R[3904]]]],[11,"clone",E,E,6,[[["self"]],["ctx"]]],[11,"clone",R[3884],E,9,[[["self"]],["header"]]],[11,"clone",R[4199],E,10,[[["self"]],["header"]]],[11,"clone",R[4200],E,11,[[["self"]],["header"]]],[11,"clone",R[3908],E,12,[[["self"]],[R[3907]]]],[11,"clone",R[4201],E,13,[[["self"]],[R[3907]]]],[11,"clone",R[4202],E,14,[[["self"]],[R[3907]]]],[11,"clone",R[4203],E,16,[[["self"]],[R[3934]]]],[11,"clone",R[4204],E,17,[[["self"]],[R[3934]]]],[11,"clone",R[3935],E,15,[[["self"]],[R[3934]]]],[11,"clone",R[4205],E,19,[[["self"]],[R[3948]]]],[11,"clone",R[4206],E,20,[[["self"]],[R[3948]]]],[11,"clone",R[3949],E,18,[[["self"]],[R[3948]]]],[11,"clone",R[4207],E,22,[[["self"]],["sym"]]],[11,"clone",R[4208],E,23,[[["self"]],["sym"]]],[11,"clone",R[3954],E,21,[[["self"]],["sym"]]],[11,"clone",R[3974],E,25,[[["self"]],["dyn"]]],[11,"clone",R[4209],E,28,[[["self"]],["dyn"]]],[11,"clone",R[4210],E,30,[[["self"]],["dyn"]]],[11,"clone",R[4211],E,33,[[["self"]],["rela"]]],[11,"clone",E,E,34,[[["self"]],["rel"]]],[11,"clone",R[4212],E,35,[[["self"]],["rela"]]],[11,"clone",E,E,36,[[["self"]],["rel"]]],[11,"clone",R[3990],E,32,[[["self"]],["reloc"]]],[11,"clone",R[4213],E,38,[[["self"]],["nhdr32"]]],[11,"clone",E,E,39,[[["self"]],["nhdr64"]]],[11,"clone",R[4216],E,48,[[["self"]],["header32"]]],[11,"clone",E,E,49,[[["self"]],["header64"]]],[11,"clone",E,E,50,[[["self"]],["header"]]],[11,"clone",R[4217],E,51,[[["self"]],[R[4057]]]],[11,"clone",E,E,52,[[["self"]],["fatarch"]]],[11,"clone",R[4218],E,53,[[["self"]],["loadcommandheader"]]],[11,"clone",E,E,54,[[["self"]],["section32"]]],[11,"clone",E,E,55,[[["self"]],["section64"]]],[11,"clone",E,E,56,[[["self"]],[R[4236]]]],[11,"clone",E,E,57,[[["self"]],[R[4237]]]],[11,"clone",E,E,58,[[["self"]],["fvmlib"]]],[11,"clone",E,E,59,[[["self"]],["fvmlibcommand"]]],[11,"clone",E,E,60,[[["self"]],["dylib"]]],[11,"clone",E,E,61,[[["self"]],["dylibcommand"]]],[11,"clone",E,E,62,[[["self"]],["subframeworkcommand"]]],[11,"clone",E,E,63,[[["self"]],["subclientcommand"]]],[11,"clone",E,E,64,[[["self"]],["subumbrellacommand"]]],[11,"clone",E,E,65,[[["self"]],["sublibrarycommand"]]],[11,"clone",E,E,66,[[["self"]],["prebounddylibcommand"]]],[11,"clone",E,E,67,[[["self"]],["dylinkercommand"]]],[11,"clone",E,E,68,[[["self"]],["self"]]],[11,"clone",E,E,69,[[["self"]],["routinescommand32"]]],[11,"clone",E,E,70,[[["self"]],["routinescommand64"]]],[11,"clone",E,E,71,[[["self"]],[R[4238]]]],[11,"clone",E,E,72,[[["self"]],["dysymtabcommand"]]],[11,"clone",E,E,73,[[["self"]],["dylibtableofcontents"]]],[11,"clone",E,E,74,[[["self"]],["dylibmodule"]]],[11,"clone",E,E,75,[[["self"]],["dylibmodule64"]]],[11,"clone",E,E,76,[[["self"]],["dylibreference"]]],[11,"clone",E,E,77,[[["self"]],["twolevelhintscommand"]]],[11,"clone",E,E,78,[[["self"]],["twolevelhint"]]],[11,"clone",E,E,79,[[["self"]],["prebindcksumcommand"]]],[11,"clone",E,E,80,[[["self"]],["uuidcommand"]]],[11,"clone",E,E,81,[[["self"]],["rpathcommand"]]],[11,"clone",E,E,82,[[["self"]],["linkeditdatacommand"]]],[11,"clone",E,E,83,[[["self"]],["encryptioninfocommand32"]]],[11,"clone",E,E,84,[[["self"]],["encryptioninfocommand64"]]],[11,"clone",E,E,85,[[["self"]],["versionmincommand"]]],[11,"clone",E,E,86,[[["self"]],[R[4128]]]],[11,"clone",E,E,87,[[["self"]],["linkeroptioncommand"]]],[11,"clone",E,E,88,[[["self"]],["symsegcommand"]]],[11,"clone",E,E,89,[[["self"]],["identcommand"]]],[11,"clone",E,E,90,[[["self"]],["fvmfilecommand"]]],[11,"clone",E,E,91,[[["self"]],["entrypointcommand"]]],[11,"clone",E,E,92,[[["self"]],["sourceversioncommand"]]],[11,"clone",E,E,93,[[["self"]],["dataincodeentry"]]],[11,"clone",R[4219],E,96,[[["self"]],["nlist32"]]],[11,"clone",E,E,97,[[["self"]],["nlist64"]]],[11,"clone",E,E,98,[[["self"]],["nlist"]]],[11,"clone",E,E,99,[[["self"]],[R[4263]]]],[11,"clone",R[4221],E,107,[[["self"]],["relocationinfo"]]],[11,"clone",R[4223],E,113,[[["self"]],[R[4250]]]],[11,"clone",E,E,114,[[["self"]],[R[4251]]]],[11,"clone",E,E,115,[[["self"]],["header"]]],[11,"clone",R[4224],E,116,[[["self"]],[R[4239]]]],[11,"clone",E,E,117,[[["self"]],[R[4240]]]],[11,"clone",E,E,118,[[["self"]],[R[4241]]]],[11,"clone",E,E,119,[[["self"]],[R[4242]]]],[11,"clone",E,E,120,[[["self"]],[R[4243]]]],[11,"clone",E,E,121,[[["self"]],[R[4252]]]],[11,"clone",R[4225],E,122,[[["self"]],[R[4233]]]],[11,"clone",R[4226],E,123,[[["self"]],[R[4175]]]],[11,"clone",E,E,124,[[["self"]],[R[4244]]]],[11,"clone",R[4169],E,125,[[["self"]],[R[4245]]]],[11,"clone",R[4227],E,130,[[["self"]],["hintnametableentry"]]],[11,"clone",E,E,135,[[["self"]],["syntheticimportlookuptableentry"]]],[11,"clone",R[4228],E,137,[[["self"]],[R[4253]]]],[11,"clone",E,E,138,[[["self"]],[R[4234]]]],[11,"clone",E,E,139,[[["self"]],[R[4246]]]],[11,"clone",R[4229],E,140,[[["self"]],[R[4179]]]],[11,"clone",E,E,141,[[["self"]],[R[4249]]]],[11,"clone",E,E,144,[[["self"]],[R[4254]]]],[11,"clone",E,E,145,[[["self"]],[R[4255]]]],[11,"clone",E,E,142,[[["self"]],[R[4256]]]],[11,"clone",E,E,170,[[["self"]],[R[4247]]]],[11,"clone",E,E,146,[[["self"]],[R[4257]]]],[11,"clone",E,E,143,[[["self"]],[R[4248]]]],[11,"clone",R[4230],E,148,[[["self"]],["symbol"]]],[11,"clone",E,E,149,[[["self"]],[R[4187]]]],[11,"clone",E,E,150,[[["self"]],[R[4188]]]],[11,"clone",E,E,151,[[["self"]],[R[4189]]]],[11,"clone",E,E,152,[[["self"]],[R[4190]]]],[11,"clone",R[4231],E,154,[[["self"]],[R[4235]]]],[11,"clone",R[4232],E,156,[[["self"]],[R[4258]]]],[11,"clone",E,E,157,[[["self"]],["header"]]],[11,"clone",E,E,158,[[["self"]],["member"]]],[11,R[77],R[4229],E,141,[[["self"],[R[4249]]],[[R[50]],[R[23],[R[50]]]]]],[11,"lt",E,E,141,[[["self"],[R[4249]]],["bool"]]],[11,"le",E,E,141,[[["self"],[R[4249]]],["bool"]]],[11,"gt",E,E,141,[[["self"],[R[4249]]],["bool"]]],[11,"ge",E,E,141,[[["self"],[R[4249]]],["bool"]]],[11,"cmp",E,E,141,[[["self"],[R[4249]]],[R[50]]]],[11,"eq",R[4198],E,7,[[["self"],[R[3904]]],["bool"]]],[11,"eq",E,E,6,[[["self"],["ctx"]],["bool"]]],[11,"ne",E,E,6,[[["self"],["ctx"]],["bool"]]],[11,"eq",R[3884],E,9,[[["self"],["header"]],["bool"]]],[11,"ne",E,E,9,[[["self"],["header"]],["bool"]]],[11,"eq",R[4199],E,10,[[["self"],["header"]],["bool"]]],[11,"ne",E,E,10,[[["self"],["header"]],["bool"]]],[11,"eq",R[4200],E,11,[[["self"],["header"]],["bool"]]],[11,"ne",E,E,11,[[["self"],["header"]],["bool"]]],[11,"eq",R[3908],E,12,[[["self"],[R[3907]]],["bool"]]],[11,"ne",E,E,12,[[["self"],[R[3907]]],["bool"]]],[11,"eq",R[4201],E,13,[[["self"],[R[3907]]],["bool"]]],[11,"ne",E,E,13,[[["self"],[R[3907]]],["bool"]]],[11,"eq",R[4202],E,14,[[["self"],[R[3907]]],["bool"]]],[11,"ne",E,E,14,[[["self"],[R[3907]]],["bool"]]],[11,"eq",R[4203],E,16,[[["self"],[R[3934]]],["bool"]]],[11,"ne",E,E,16,[[["self"],[R[3934]]],["bool"]]],[11,"eq",R[4204],E,17,[[["self"],[R[3934]]],["bool"]]],[11,"ne",E,E,17,[[["self"],[R[3934]]],["bool"]]],[11,"eq",R[3935],E,15,[[["self"],[R[3934]]],["bool"]]],[11,"ne",E,E,15,[[["self"],[R[3934]]],["bool"]]],[11,"eq",R[4205],E,19,[[["self"],[R[3948]]],["bool"]]],[11,"ne",E,E,19,[[["self"],[R[3948]]],["bool"]]],[11,"eq",R[4206],E,20,[[["self"],[R[3948]]],["bool"]]],[11,"ne",E,E,20,[[["self"],[R[3948]]],["bool"]]],[11,"eq",R[3949],E,18,[[["self"],[R[3948]]],["bool"]]],[11,"ne",E,E,18,[[["self"],[R[3948]]],["bool"]]],[11,"eq",R[4207],E,22,[[["self"],["sym"]],["bool"]]],[11,"ne",E,E,22,[[["self"],["sym"]],["bool"]]],[11,"eq",R[4208],E,23,[[["self"],["sym"]],["bool"]]],[11,"ne",E,E,23,[[["self"],["sym"]],["bool"]]],[11,"eq",R[3954],E,21,[[["self"],["sym"]],["bool"]]],[11,"ne",E,E,21,[[["self"],["sym"]],["bool"]]],[11,"eq",R[3974],E,25,[[["self"],["dyn"]],["bool"]]],[11,"ne",E,E,25,[[["self"],["dyn"]],["bool"]]],[11,"eq",R[4209],E,28,[[["self"],["dyn"]],["bool"]]],[11,"ne",E,E,28,[[["self"],["dyn"]],["bool"]]],[11,"eq",R[4210],E,30,[[["self"],["dyn"]],["bool"]]],[11,"ne",E,E,30,[[["self"],["dyn"]],["bool"]]],[11,"eq",R[4211],E,33,[[["self"],["rela"]],["bool"]]],[11,"ne",E,E,33,[[["self"],["rela"]],["bool"]]],[11,"eq",E,E,34,[[["self"],["rel"]],["bool"]]],[11,"ne",E,E,34,[[["self"],["rel"]],["bool"]]],[11,"eq",R[4212],E,35,[[["self"],["rela"]],["bool"]]],[11,"ne",E,E,35,[[["self"],["rela"]],["bool"]]],[11,"eq",E,E,36,[[["self"],["rel"]],["bool"]]],[11,"ne",E,E,36,[[["self"],["rel"]],["bool"]]],[11,"eq",R[3990],E,32,[[["self"],["reloc"]],["bool"]]],[11,"ne",E,E,32,[[["self"],["reloc"]],["bool"]]],[11,"eq",R[4223],E,113,[[["self"],[R[4250]]],["bool"]]],[11,"ne",E,E,113,[[["self"],[R[4250]]],["bool"]]],[11,"eq",E,E,114,[[["self"],[R[4251]]],["bool"]]],[11,"ne",E,E,114,[[["self"],[R[4251]]],["bool"]]],[11,"eq",E,E,115,[[["self"],["header"]],["bool"]]],[11,"ne",E,E,115,[[["self"],["header"]],["bool"]]],[11,"eq",R[4224],E,116,[[["self"],[R[4239]]],["bool"]]],[11,"ne",E,E,116,[[["self"],[R[4239]]],["bool"]]],[11,"eq",E,E,117,[[["self"],[R[4240]]],["bool"]]],[11,"ne",E,E,117,[[["self"],[R[4240]]],["bool"]]],[11,"eq",E,E,118,[[["self"],[R[4241]]],["bool"]]],[11,"ne",E,E,118,[[["self"],[R[4241]]],["bool"]]],[11,"eq",E,E,119,[[["self"],[R[4242]]],["bool"]]],[11,"ne",E,E,119,[[["self"],[R[4242]]],["bool"]]],[11,"eq",E,E,120,[[["self"],[R[4243]]],["bool"]]],[11,"ne",E,E,120,[[["self"],[R[4243]]],["bool"]]],[11,"eq",E,E,121,[[["self"],[R[4252]]],["bool"]]],[11,"ne",E,E,121,[[["self"],[R[4252]]],["bool"]]],[11,"eq",R[4225],E,122,[[["self"],[R[4233]]],["bool"]]],[11,"ne",E,E,122,[[["self"],[R[4233]]],["bool"]]],[11,"eq",R[4226],E,123,[[["self"],[R[4175]]],["bool"]]],[11,"ne",E,E,123,[[["self"],[R[4175]]],["bool"]]],[11,"eq",E,E,124,[[["self"],[R[4244]]],["bool"]]],[11,"ne",E,E,124,[[["self"],[R[4244]]],["bool"]]],[11,"eq",R[4169],E,125,[[["self"],[R[4245]]],["bool"]]],[11,"ne",E,E,125,[[["self"],[R[4245]]],["bool"]]],[11,"eq",R[4228],E,137,[[["self"],[R[4253]]],["bool"]]],[11,"ne",E,E,137,[[["self"],[R[4253]]],["bool"]]],[11,"eq",E,E,138,[[["self"],[R[4234]]],["bool"]]],[11,"ne",E,E,138,[[["self"],[R[4234]]],["bool"]]],[11,"eq",E,E,139,[[["self"],[R[4246]]],["bool"]]],[11,"ne",E,E,139,[[["self"],[R[4246]]],["bool"]]],[11,"eq",R[4229],E,140,[[["self"],[R[4179]]],["bool"]]],[11,"ne",E,E,140,[[["self"],[R[4179]]],["bool"]]],[11,"eq",E,E,141,[[["self"],[R[4249]]],["bool"]]],[11,"ne",E,E,141,[[["self"],[R[4249]]],["bool"]]],[11,"eq",E,E,144,[[["self"],[R[4254]]],["bool"]]],[11,"ne",E,E,144,[[["self"],[R[4254]]],["bool"]]],[11,"eq",E,E,145,[[["self"],[R[4255]]],["bool"]]],[11,"ne",E,E,145,[[["self"],[R[4255]]],["bool"]]],[11,"eq",E,E,142,[[["self"],[R[4256]]],["bool"]]],[11,"ne",E,E,142,[[["self"],[R[4256]]],["bool"]]],[11,"eq",E,E,146,[[["self"],[R[4257]]],["bool"]]],[11,"ne",E,E,146,[[["self"],[R[4257]]],["bool"]]],[11,"eq",R[4230],E,148,[[["self"],["symbol"]],["bool"]]],[11,"ne",E,E,148,[[["self"],["symbol"]],["bool"]]],[11,"eq",E,E,149,[[["self"],[R[4187]]],["bool"]]],[11,"ne",E,E,149,[[["self"],[R[4187]]],["bool"]]],[11,"eq",E,E,150,[[["self"],[R[4188]]],["bool"]]],[11,"ne",E,E,150,[[["self"],[R[4188]]],["bool"]]],[11,"eq",E,E,151,[[["self"],[R[4189]]],["bool"]]],[11,"ne",E,E,151,[[["self"],[R[4189]]],["bool"]]],[11,"eq",E,E,152,[[["self"],[R[4190]]],["bool"]]],[11,"ne",E,E,152,[[["self"],[R[4190]]],["bool"]]],[11,"eq",R[4231],E,154,[[["self"],[R[4235]]],["bool"]]],[11,"ne",E,E,154,[[["self"],[R[4235]]],["bool"]]],[11,"eq",R[4232],E,156,[[["self"],[R[4258]]],["bool"]]],[11,"ne",E,E,156,[[["self"],[R[4258]]],["bool"]]],[11,"eq",E,E,157,[[["self"],["header"]],["bool"]]],[11,"ne",E,E,157,[[["self"],["header"]],["bool"]]],[11,"eq",E,E,158,[[["self"],["member"]],["bool"]]],[11,"ne",E,E,158,[[["self"],["member"]],["bool"]]],[11,"eq",E,E,160,[[["self"],["indextype"]],["bool"]]],[11,"from",R[4196],E,3,[[["error"]],["error"]]],[11,"from",E,E,3,[[["error"]],["error"]]],[11,"from",R[4198],E,6,[[[R[3904]]],["self"]]],[11,"from",E,E,6,[[["endian"]],["self"]]],[11,"from",R[4199],E,10,[[["elfheader"]],["self"]]],[11,"from",R[3884],E,9,[[["header"]],["self"]]],[11,"from",R[4200],E,11,[[["elfheader"]],["self"]]],[11,"from",R[3884],E,9,[[["header"]],["self"]]],[11,"from",R[3908],E,12,[[[R[3907]]],["self"]]],[11,"from",R[4201],E,13,[[[R[4259]]],["self"]]],[11,"from",R[3908],E,12,[[[R[3907]]],["self"]]],[11,"from",R[4202],E,14,[[[R[4259]]],["self"]]],[11,"from",R[3935],E,15,[[[R[3934]]],["self"]]],[11,"from",R[4203],E,16,[[[R[4260]]],["self"]]],[11,"from",R[3935],E,15,[[[R[3934]]],["self"]]],[11,"from",R[4204],E,17,[[[R[4260]]],["self"]]],[11,"from",R[3949],E,18,[[[R[3948]]],["self"]]],[11,"from",R[4205],E,19,[[[R[4261]]],["self"]]],[11,"from",R[3949],E,18,[[[R[3948]]],["self"]]],[11,"from",R[4206],E,20,[[[R[4261]]],["self"]]],[11,"from",R[3954],E,21,[[["sym"]],["self"]]],[11,"from",R[4207],E,22,[[["elfsym"]],["self"]]],[11,"from",R[3954],E,21,[[["sym"]],["self"]]],[11,"from",R[4208],E,23,[[["elfsym"]],["self"]]],[11,"from",R[4209],E,28,[[["elfdyn"]],["self"]]],[11,"from",R[3974],E,25,[[["dyn"]],["self"]]],[11,"from",R[4210],E,30,[[["elfdyn"]],["self"]]],[11,"from",R[3974],E,25,[[["dyn"]],["self"]]],[11,"from",R[3990],E,32,[[["rela"]],["self"]]],[11,"from",E,E,32,[[["rel"]],["self"]]],[11,"from",R[4211],E,33,[[["reloc"]],["self"]]],[11,"from",E,E,34,[[["reloc"]],["self"]]],[11,"from",R[3990],E,32,[[["rela"]],["self"]]],[11,"from",E,E,32,[[["rel"]],["self"]]],[11,"from",R[4212],E,35,[[["reloc"]],["self"]]],[11,"from",E,E,36,[[["reloc"]],["self"]]],[11,"from",R[4216],E,50,[[["header32"]],["self"]]],[11,"from",E,E,48,[[["header"]],["self"]]],[11,"from",E,E,50,[[["header64"]],["self"]]],[11,"from",E,E,49,[[["header"]],["self"]]],[11,"from",R[4219],E,98,[[["nlist32"]],["self"]]],[11,"from",E,E,98,[[["nlist64"]],["self"]]],[11,"from",E,E,96,[[["nlist"]],["self"]]],[11,"from",E,E,97,[[["nlist"]],["self"]]],[11,"from",R[4218],E,55,[[["section"]],["self"]]],[11,"from",E,E,54,[[["section"]],["self"]]],[11,"from",R[4222],E,108,[[["section32"]],["self"]]],[11,"from",E,E,108,[[["section64"]],["self"]]],[11,"from",R[4218],E,57,[[["segment"]],["self"]]],[11,"from",E,E,56,[[["segment"]],["self"]]],[11,"from",R[4224],E,118,[[[R[4239]]],["self"]]],[11,"from",E,E,118,[[[R[4240]]],["self"]]],[11,"from","goblin",E,172,[[[R[4242]]],["self"]]],[11,"next",R[3954],E,162,[[["self"]],[R[23]]]],[11,"next",R[3990],E,163,[[["self"]],[R[23]]]],[11,"next",R[4213],E,40,[[["self"]],[R[23]]]],[11,"next",E,E,41,[[["self"]],[R[23]]]],[11,"next",R[4219],E,166,[[["self"]],[R[23]]]],[11,"next",R[4222],E,167,[[["self"]],[R[23]]]],[11,"next",E,E,168,[[["self"]],[R[23]]]],[11,"next",R[4052],E,164,[[["self"]],[R[23]]]],[11,"next",E,E,165,[[["self"]],[R[23]]]],[11,"next",R[4229],E,169,[[["self"]],[R[23]]]],[11,R[53],E,E,169,[[["self"]]]],[11,"next",E,E,170,[[["self"]],[R[23]]]],[11,R[53],E,E,170,[[["self"]]]],[11,"next",R[4230],E,171,[[["self"]],[R[23]]]],[11,"next",R[4231],E,155,[[["self"]],[R[23]]]],[11,"deref",R[4222],E,110,[[["self"]]]],[11,R[17],E,E,110,[[["self"]]]],[11,"fmt",R[4196],E,3,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[4197],E,4,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[4198],E,7,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,6,[[["self"],[R[10]]],[R[3]]]],[11,"fmt","goblin",E,0,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,1,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,2,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[3884],E,9,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[4199],E,10,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[4200],E,11,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[3908],E,12,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[4201],E,13,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[4202],E,14,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[4203],E,16,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[4204],E,17,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[3935],E,15,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[4205],E,19,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[4206],E,20,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[3949],E,18,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[4207],E,22,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[4208],E,23,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[3954],E,21,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,24,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[3974],E,25,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,26,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,27,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[4209],E,28,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,29,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[4210],E,30,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,31,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[4211],E,33,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,34,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[4212],E,35,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,36,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[3990],E,32,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,37,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,163,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[4213],E,38,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,39,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,42,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[3905],E,8,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[4216],E,48,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,49,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,50,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[4217],E,51,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,52,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[4218],E,53,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,54,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,55,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,56,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,57,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,58,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,59,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,60,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,61,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,62,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,63,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,64,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,65,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,66,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,67,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,68,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,69,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,70,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,71,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,72,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,73,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,74,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,75,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,76,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,77,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,78,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,79,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,80,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,81,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,82,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,83,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,84,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,85,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,86,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,87,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,88,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,89,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,90,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,91,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,92,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,93,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,95,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,94,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[4219],E,96,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,97,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,98,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,99,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,100,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[4125],E,102,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,103,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,101,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,104,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[4220],E,105,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,106,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[4221],E,107,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[4222],E,108,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,109,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,110,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[4052],E,45,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,46,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,47,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[4223],E,113,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,114,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,115,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[4224],E,116,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,117,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,118,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,119,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,120,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,121,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[4225],E,122,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[4226],E,123,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,124,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[4169],E,125,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,128,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,126,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,129,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,127,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[4227],E,130,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,135,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,131,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,132,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,133,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,134,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[4228],E,137,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,138,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,139,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[4229],E,140,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,169,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,141,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,144,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,145,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,142,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,170,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,146,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,143,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,147,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[4230],E,148,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,149,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,150,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,151,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,152,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,153,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[4231],E,154,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[4162],E,111,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,112,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[4232],E,156,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,157,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,158,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,159,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,160,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,161,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[4196],E,3,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[4218],E,53,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[4229],E,141,[[["self"],[R[10]]],[R[3]]]],[11,"index",R[4197],"Gets str reference at starting at byte `offset`. NB: this…",4,[[["self"],["usize"]]]],[11,"source",R[4196],E,3,[[["self"]],[[R[23],["error"]],["error"]]]],[11,R[4262],R[4213],E,38,[[["endian"]],["self"]]],[11,R[4262],E,E,39,[[["endian"]],["self"]]],[11,R[4262],R[4218],E,54,[[["endian"]],["self"]]],[11,R[4262],E,E,55,[[["endian"]],["self"]]],[11,R[4262],E,E,56,[[["endian"]],["self"]]],[11,R[4262],E,E,57,[[["endian"]],["self"]]],[11,R[4262],E,E,58,[[["endian"]],["self"]]],[11,R[4262],E,E,59,[[["endian"]],["self"]]],[11,R[4262],E,E,60,[[["endian"]],["self"]]],[11,R[4262],E,E,61,[[["endian"]],["self"]]],[11,R[4262],E,E,62,[[["endian"]],["self"]]],[11,R[4262],E,E,63,[[["endian"]],["self"]]],[11,R[4262],E,E,64,[[["endian"]],["self"]]],[11,R[4262],E,E,65,[[["endian"]],["self"]]],[11,R[4262],E,E,66,[[["endian"]],["self"]]],[11,R[4262],E,E,67,[[["endian"]],["self"]]],[11,R[4262],E,E,69,[[["endian"]],["self"]]],[11,R[4262],E,E,70,[[["endian"]],["self"]]],[11,R[4262],E,E,71,[[["endian"]],["self"]]],[11,R[4262],E,E,72,[[["endian"]],["self"]]],[11,R[4262],E,E,73,[[["endian"]],["self"]]],[11,R[4262],E,E,74,[[["endian"]],["self"]]],[11,R[4262],E,E,75,[[["endian"]],["self"]]],[11,R[4262],E,E,76,[[["endian"]],["self"]]],[11,R[4262],E,E,77,[[["endian"]],["self"]]],[11,R[4262],E,E,78,[[["endian"]],["self"]]],[11,R[4262],E,E,79,[[["endian"]],["self"]]],[11,R[4262],E,E,80,[[["endian"]],["self"]]],[11,R[4262],E,E,81,[[["endian"]],["self"]]],[11,R[4262],E,E,82,[[["endian"]],["self"]]],[11,R[4262],E,E,83,[[["endian"]],["self"]]],[11,R[4262],E,E,84,[[["endian"]],["self"]]],[11,R[4262],E,E,85,[[["endian"]],["self"]]],[11,R[4262],E,E,87,[[["endian"]],["self"]]],[11,R[4262],E,E,88,[[["endian"]],["self"]]],[11,R[4262],E,E,89,[[["endian"]],["self"]]],[11,R[4262],E,E,90,[[["endian"]],["self"]]],[11,R[4262],E,E,91,[[["endian"]],["self"]]],[11,R[4262],E,E,92,[[["endian"]],["self"]]],[11,R[4262],E,E,93,[[["endian"]],["self"]]],[11,R[4262],R[4219],E,96,[[["endian"]],["self"]]],[11,R[4262],E,E,97,[[["endian"]],["self"]]],[11,R[4262],R[4221],E,107,[[["endian"]],["self"]]],[11,R[4262],R[4223],E,114,[[["endian"]],["self"]]],[11,R[4262],R[4230],E,148,[[["endian"]],["self"]]],[11,R[4262],E,E,149,[[["endian"]],["self"]]],[11,R[4262],E,E,150,[[["endian"]],["self"]]],[11,R[4262],E,E,151,[[["endian"]],["self"]]],[11,R[4262],E,E,152,[[["endian"]],["self"]]],[11,R[4262],R[4231],E,154,[[["endian"]],["self"]]],[11,R[3482],R[3884],E,9,[[["endian"]],[R[3]]]],[11,R[3482],R[4199],E,10,[[["endian"]],[R[3]]]],[11,R[3482],R[4200],E,11,[[["endian"]],[R[3]]]],[11,R[3482],R[3908],E,12,[[["ctx"]],[R[3]]]],[11,R[3482],R[4201],E,13,[[["endian"]],[R[3]]]],[11,R[3482],R[4202],E,14,[[["endian"]],[R[3]]]],[11,R[3482],R[4203],E,16,[[["endian"]],[R[3]]]],[11,R[3482],R[4204],E,17,[[["endian"]],[R[3]]]],[11,R[3482],R[3935],E,15,[[["ctx"]],[R[3]]]],[11,R[3482],R[4205],E,19,[[["endian"]],[R[3]]]],[11,R[3482],R[4206],E,20,[[["endian"]],[R[3]]]],[11,R[3482],R[3949],E,18,[[["ctx"]],[R[3]]]],[11,R[3482],R[4207],E,22,[[["endian"]],[R[3]]]],[11,R[3482],R[4208],E,23,[[["endian"]],[R[3]]]],[11,R[3482],R[3954],E,21,[[["ctx"]],[R[3]]]],[11,R[3482],R[3974],E,25,[[["ctx"]],[R[3]]]],[11,R[3482],R[4209],E,28,[[["endian"]],[R[3]]]],[11,R[3482],R[4210],E,30,[[["endian"]],[R[3]]]],[11,R[3482],R[4211],E,33,[[["endian"]],[R[3]]]],[11,R[3482],E,E,34,[[["endian"]],[R[3]]]],[11,R[3482],R[4212],E,35,[[["endian"]],[R[3]]]],[11,R[3482],E,E,36,[[["endian"]],[R[3]]]],[11,R[3482],R[3990],E,32,[[],[R[3]]]],[11,R[3482],R[4213],E,38,[[["endian"]],[R[3]]]],[11,R[3482],E,E,39,[[["endian"]],[R[3]]]],[11,R[3482],E,E,42,[[],[R[3]]]],[11,R[3482],R[3905],E,8,[[],[R[3]]]],[11,R[3482],R[4216],E,48,[[["endian"]],[R[3]]]],[11,R[3482],E,E,49,[[["endian"]],[R[3]]]],[11,R[3482],E,E,50,[[["ctx"]],[R[3]]]],[11,R[3482],R[4217],E,51,[[["endian"]],[R[3]]]],[11,R[3482],E,E,52,[[["endian"]],[R[3]]]],[11,R[3482],R[4218],E,53,[[["endian"]],[R[3]]]],[11,R[3482],E,E,54,[[["endian"]],[R[3]]]],[11,R[3482],E,E,55,[[["endian"]],[R[3]]]],[11,R[3482],E,E,56,[[["endian"]],[R[3]]]],[11,R[3482],E,E,57,[[["endian"]],[R[3]]]],[11,R[3482],E,E,58,[[["endian"]],[R[3]]]],[11,R[3482],E,E,59,[[["endian"]],[R[3]]]],[11,R[3482],E,E,60,[[["endian"]],[R[3]]]],[11,R[3482],E,E,61,[[["endian"]],[R[3]]]],[11,R[3482],E,E,62,[[["endian"]],[R[3]]]],[11,R[3482],E,E,63,[[["endian"]],[R[3]]]],[11,R[3482],E,E,64,[[["endian"]],[R[3]]]],[11,R[3482],E,E,65,[[["endian"]],[R[3]]]],[11,R[3482],E,E,66,[[["endian"]],[R[3]]]],[11,R[3482],E,E,67,[[["endian"]],[R[3]]]],[11,R[3482],E,E,68,[[["endian"]],[R[3]]]],[11,R[3482],E,E,69,[[["endian"]],[R[3]]]],[11,R[3482],E,E,70,[[["endian"]],[R[3]]]],[11,R[3482],E,E,71,[[["endian"]],[R[3]]]],[11,R[3482],E,E,72,[[["endian"]],[R[3]]]],[11,R[3482],E,E,73,[[["endian"]],[R[3]]]],[11,R[3482],E,E,74,[[["endian"]],[R[3]]]],[11,R[3482],E,E,75,[[["endian"]],[R[3]]]],[11,R[3482],E,E,76,[[["endian"]],[R[3]]]],[11,R[3482],E,E,77,[[["endian"]],[R[3]]]],[11,R[3482],E,E,78,[[["endian"]],[R[3]]]],[11,R[3482],E,E,79,[[["endian"]],[R[3]]]],[11,R[3482],E,E,80,[[["endian"]],[R[3]]]],[11,R[3482],E,E,81,[[["endian"]],[R[3]]]],[11,R[3482],E,E,82,[[["endian"]],[R[3]]]],[11,R[3482],E,E,83,[[["endian"]],[R[3]]]],[11,R[3482],E,E,84,[[["endian"]],[R[3]]]],[11,R[3482],E,E,85,[[["endian"]],[R[3]]]],[11,R[3482],E,E,86,[[["endian"]],[R[3]]]],[11,R[3482],E,E,87,[[["endian"]],[R[3]]]],[11,R[3482],E,E,88,[[["endian"]],[R[3]]]],[11,R[3482],E,E,89,[[["endian"]],[R[3]]]],[11,R[3482],E,E,90,[[["endian"]],[R[3]]]],[11,R[3482],E,E,91,[[["endian"]],[R[3]]]],[11,R[3482],E,E,92,[[["endian"]],[R[3]]]],[11,R[3482],E,E,93,[[["endian"]],[R[3]]]],[11,R[3482],E,E,95,[[["endian"]],[R[3]]]],[11,R[3482],R[4219],E,96,[[["endian"]],[R[3]]]],[11,R[3482],E,E,97,[[["endian"]],[R[3]]]],[11,R[3482],E,E,98,[[["ctx"]],[R[3]]]],[11,R[3482],E,E,100,[[[T],[R[4263]]],[R[3]]]],[11,R[3482],R[4221],E,107,[[["endian"]],[R[3]]]],[11,R[3482],R[4222],E,108,[[["ctx"]],[R[3]]]],[11,R[3482],R[4223],E,114,[[["endian"]],[R[3]]]],[11,R[3482],R[4224],E,116,[[["endian"]],[R[3]]]],[11,R[3482],E,E,117,[[["endian"]],[R[3]]]],[11,R[3482],E,E,119,[[["endian"]],[R[3]]]],[11,R[3482],E,E,120,[[["endian"]],[R[3]]]],[11,R[3482],E,E,121,[[["endian"]],[R[3]]]],[11,R[3482],R[4226],E,123,[[["endian"]],[R[3]]]],[11,R[3482],R[4169],E,125,[[["endian"]],[R[3]]]],[11,R[3482],E,E,129,[[["endian"]],[R[3]]]],[11,R[3482],R[4227],E,131,[[["endian"]],[R[3]]]],[11,R[3482],R[4228],E,138,[[["endian"]],[R[3]]]],[11,R[3482],R[4229],E,140,[[["endian"]],[R[3]]]],[11,R[3482],R[4230],E,148,[[["endian"]],[R[3]]]],[11,R[3482],E,E,149,[[["endian"]],[R[3]]]],[11,R[3482],E,E,150,[[["endian"]],[R[3]]]],[11,R[3482],E,E,151,[[["endian"]],[R[3]]]],[11,R[3482],E,E,152,[[["endian"]],[R[3]]]],[11,R[3482],R[4231],E,154,[[["endian"]],[R[3]]]],[11,R[3482],R[4232],E,156,[[["endian"]],[R[3]]]],[11,R[4264],R[3884],E,9,[[["ctx"]]]],[11,R[4264],R[3935],E,15,[[["ctx"]]]],[11,R[4264],R[3949],E,18,[[["ctx"]]]],[11,R[4264],R[3954],E,21,[[["ctx"]]]],[11,R[4264],R[3990],R[4267],32,[[]]],[11,R[4264],R[4213],E,38,[[["endian"]]]],[11,R[4264],E,E,39,[[["endian"]]]],[11,R[4264],R[4216],E,50,[[["ctx"]]]],[11,R[4264],R[4218],E,54,[[["endian"]]]],[11,R[4264],E,E,55,[[["endian"]]]],[11,R[4264],E,E,56,[[["endian"]]]],[11,R[4264],E,E,57,[[["endian"]]]],[11,R[4264],E,E,58,[[["endian"]]]],[11,R[4264],E,E,59,[[["endian"]]]],[11,R[4264],E,E,60,[[["endian"]]]],[11,R[4264],E,E,61,[[["endian"]]]],[11,R[4264],E,E,62,[[["endian"]]]],[11,R[4264],E,E,63,[[["endian"]]]],[11,R[4264],E,E,64,[[["endian"]]]],[11,R[4264],E,E,65,[[["endian"]]]],[11,R[4264],E,E,66,[[["endian"]]]],[11,R[4264],E,E,67,[[["endian"]]]],[11,R[4264],E,E,69,[[["endian"]]]],[11,R[4264],E,E,70,[[["endian"]]]],[11,R[4264],E,E,71,[[["endian"]]]],[11,R[4264],E,E,72,[[["endian"]]]],[11,R[4264],E,E,73,[[["endian"]]]],[11,R[4264],E,E,74,[[["endian"]]]],[11,R[4264],E,E,75,[[["endian"]]]],[11,R[4264],E,E,76,[[["endian"]]]],[11,R[4264],E,E,77,[[["endian"]]]],[11,R[4264],E,E,78,[[["endian"]]]],[11,R[4264],E,E,79,[[["endian"]]]],[11,R[4264],E,E,80,[[["endian"]]]],[11,R[4264],E,E,81,[[["endian"]]]],[11,R[4264],E,E,82,[[["endian"]]]],[11,R[4264],E,E,83,[[["endian"]]]],[11,R[4264],E,E,84,[[["endian"]]]],[11,R[4264],E,E,85,[[["endian"]]]],[11,R[4264],E,E,87,[[["endian"]]]],[11,R[4264],E,E,88,[[["endian"]]]],[11,R[4264],E,E,89,[[["endian"]]]],[11,R[4264],E,E,90,[[["endian"]]]],[11,R[4264],E,E,91,[[["endian"]]]],[11,R[4264],E,E,92,[[["endian"]]]],[11,R[4264],E,E,93,[[["endian"]]]],[11,R[4264],R[4219],E,96,[[["endian"]]]],[11,R[4264],E,E,97,[[["endian"]]]],[11,R[4264],E,E,98,[[["ctx"]]]],[11,R[4264],R[4221],E,107,[[["endian"]]]],[11,R[4264],R[4222],E,108,[[["ctx"]]]],[11,R[4264],E,E,109,[[["ctx"]]]],[11,R[4264],R[4223],E,114,[[["endian"]]]],[11,R[4264],R[4225],E,122,[[["endian"]]]],[11,R[4264],R[4230],E,148,[[["endian"]]]],[11,R[4264],E,E,149,[[["endian"]]]],[11,R[4264],E,E,150,[[["endian"]]]],[11,R[4264],E,E,151,[[["endian"]]]],[11,R[4264],E,E,152,[[["endian"]]]],[11,R[4264],R[4231],E,154,[[["endian"]]]],[11,R[4265],R[3884],E,9,[[["endian"]],[R[3]]]],[11,R[4265],R[4199],R[4266],10,[[["endian"]],[R[3]]]],[11,R[4265],R[4200],R[4266],11,[[["endian"]],[R[3]]]],[11,R[4265],R[3908],E,12,[[["ctx"]],[R[3]]]],[11,R[4265],R[4201],E,13,[[["endian"]],[R[3]]]],[11,R[4265],R[4202],E,14,[[["endian"]],[R[3]]]],[11,R[4265],R[4203],E,16,[[["endian"]],[R[3]]]],[11,R[4265],R[4204],E,17,[[["endian"]],[R[3]]]],[11,R[4265],R[3935],E,15,[[["ctx"]],[R[3]]]],[11,R[4265],R[4205],E,19,[[["endian"]],[R[3]]]],[11,R[4265],R[4206],E,20,[[["endian"]],[R[3]]]],[11,R[4265],R[3949],E,18,[[["ctx"]],[R[3]]]],[11,R[4265],R[4207],E,22,[[["endian"]],[R[3]]]],[11,R[4265],R[4208],E,23,[[["endian"]],[R[3]]]],[11,R[4265],R[3954],E,21,[[["ctx"]],[R[3]]]],[11,R[4265],R[3974],E,25,[[["ctx"]],[R[3]]]],[11,R[4265],R[4209],E,28,[[["endian"]],[R[3]]]],[11,R[4265],R[4210],E,30,[[["endian"]],[R[3]]]],[11,R[4265],R[4211],E,33,[[["endian"]],[R[3]]]],[11,R[4265],E,E,34,[[["endian"]],[R[3]]]],[11,R[4265],R[4212],E,35,[[["endian"]],[R[3]]]],[11,R[4265],E,E,36,[[["endian"]],[R[3]]]],[11,R[4265],R[3990],R[4267],32,[[],[R[3]]]],[11,R[4265],R[4213],E,38,[[["endian"]],[R[3]]]],[11,R[4265],E,E,39,[[["endian"]],[R[3]]]],[11,R[4265],R[4216],E,48,[[["endian"]],[R[3]]]],[11,R[4265],E,E,49,[[["endian"]],[R[3]]]],[11,R[4265],E,E,50,[[["ctx"]],[R[3]]]],[11,R[4265],R[4217],E,51,[[["endian"]],[R[3]]]],[11,R[4265],E,E,52,[[["endian"]],[R[3]]]],[11,R[4265],R[4218],E,53,[[["endian"]],[R[3]]]],[11,R[4265],E,E,54,[[["endian"]],[R[3]]]],[11,R[4265],E,E,55,[[["endian"]],[R[3]]]],[11,R[4265],E,E,56,[[["endian"]],[R[3]]]],[11,R[4265],E,E,57,[[["endian"]],[R[3]]]],[11,R[4265],E,E,58,[[["endian"]],[R[3]]]],[11,R[4265],E,E,59,[[["endian"]],[R[3]]]],[11,R[4265],E,E,60,[[["endian"]],[R[3]]]],[11,R[4265],E,E,61,[[["endian"]],[R[3]]]],[11,R[4265],E,E,62,[[["endian"]],[R[3]]]],[11,R[4265],E,E,63,[[["endian"]],[R[3]]]],[11,R[4265],E,E,64,[[["endian"]],[R[3]]]],[11,R[4265],E,E,65,[[["endian"]],[R[3]]]],[11,R[4265],E,E,66,[[["endian"]],[R[3]]]],[11,R[4265],E,E,67,[[["endian"]],[R[3]]]],[11,R[4265],E,E,69,[[["endian"]],[R[3]]]],[11,R[4265],E,E,70,[[["endian"]],[R[3]]]],[11,R[4265],E,E,71,[[["endian"]],[R[3]]]],[11,R[4265],E,E,72,[[["endian"]],[R[3]]]],[11,R[4265],E,E,73,[[["endian"]],[R[3]]]],[11,R[4265],E,E,74,[[["endian"]],[R[3]]]],[11,R[4265],E,E,75,[[["endian"]],[R[3]]]],[11,R[4265],E,E,76,[[["endian"]],[R[3]]]],[11,R[4265],E,E,77,[[["endian"]],[R[3]]]],[11,R[4265],E,E,78,[[["endian"]],[R[3]]]],[11,R[4265],E,E,79,[[["endian"]],[R[3]]]],[11,R[4265],E,E,80,[[["endian"]],[R[3]]]],[11,R[4265],E,E,81,[[["endian"]],[R[3]]]],[11,R[4265],E,E,82,[[["endian"]],[R[3]]]],[11,R[4265],E,E,83,[[["endian"]],[R[3]]]],[11,R[4265],E,E,84,[[["endian"]],[R[3]]]],[11,R[4265],E,E,85,[[["endian"]],[R[3]]]],[11,R[4265],E,E,86,[[["endian"]],[R[3]]]],[11,R[4265],E,E,87,[[["endian"]],[R[3]]]],[11,R[4265],E,E,88,[[["endian"]],[R[3]]]],[11,R[4265],E,E,89,[[["endian"]],[R[3]]]],[11,R[4265],E,E,90,[[["endian"]],[R[3]]]],[11,R[4265],E,E,91,[[["endian"]],[R[3]]]],[11,R[4265],E,E,92,[[["endian"]],[R[3]]]],[11,R[4265],E,E,93,[[["endian"]],[R[3]]]],[11,R[4265],R[4219],E,96,[[["endian"]],[R[3]]]],[11,R[4265],E,E,97,[[["endian"]],[R[3]]]],[11,R[4265],E,E,98,[[["ctx"]],[R[3]]]],[11,R[4265],R[4221],E,107,[[["endian"]],[R[3]]]],[11,R[4265],R[4222],E,108,[[["ctx"]],[R[3]]]],[11,R[4265],E,E,109,[[["ctx"]],[R[3]]]],[11,R[4265],R[4223],E,114,[[["endian"]],[R[3]]]],[11,R[4265],R[4224],E,116,[[["endian"]],[R[3]]]],[11,R[4265],E,E,117,[[["endian"]],[R[3]]]],[11,R[4265],E,E,119,[[["endian"]],[R[3]]]],[11,R[4265],E,E,120,[[["endian"]],[R[3]]]],[11,R[4265],R[4225],E,122,[[["endian"]],[R[3]]]],[11,R[4265],R[4226],E,123,[[["endian"]],[R[3]]]],[11,R[4265],R[4169],E,125,[[["endian"]],[R[3]]]],[11,R[4265],R[4227],E,131,[[["endian"]],[R[3]]]],[11,R[4265],R[4228],E,138,[[["endian"]],[R[3]]]],[11,R[4265],R[4229],E,140,[[["endian"]],[R[3]]]],[11,R[4265],R[4230],E,148,[[["endian"]],[R[3]]]],[11,R[4265],E,E,149,[[["endian"]],[R[3]]]],[11,R[4265],E,E,150,[[["endian"]],[R[3]]]],[11,R[4265],E,E,151,[[["endian"]],[R[3]]]],[11,R[4265],E,E,152,[[["endian"]],[R[3]]]],[11,R[4265],R[4231],E,154,[[["endian"]],[R[3]]]],[11,R[4265],R[4232],E,156,[[["endian"]],[R[3]]]],[11,R[4268],R[3884],E,9,[[["ctx"]],["usize"]]],[11,R[4268],R[3908],E,12,[[["ctx"]],["usize"]]],[11,R[4268],R[4201],E,13,[[["endian"]]]],[11,R[4268],R[4202],E,14,[[["endian"]]]],[11,R[4268],R[4203],E,16,[[["endian"]]]],[11,R[4268],R[4204],E,17,[[["endian"]]]],[11,R[4268],R[3935],E,15,[[["ctx"]]]],[11,R[4268],R[4205],E,19,[[["endian"]]]],[11,R[4268],R[4206],E,20,[[["endian"]]]],[11,R[4268],R[3949],E,18,[[["ctx"]]]],[11,R[4268],R[4207],E,22,[[["endian"]]]],[11,R[4268],R[4208],E,23,[[["endian"]]]],[11,R[4268],R[3954],E,21,[[["ctx"]],["usize"]]],[11,R[4268],R[3974],E,25,[[["ctx"]],["usize"]]],[11,R[4268],R[4209],E,28,[[["endian"]]]],[11,R[4268],R[4210],E,30,[[["endian"]]]],[11,R[4268],R[4211],E,33,[[["endian"]]]],[11,R[4268],E,E,34,[[["endian"]]]],[11,R[4268],R[4212],E,35,[[["endian"]]]],[11,R[4268],E,E,36,[[["endian"]]]],[11,R[4268],R[3990],E,32,[[]]],[11,R[4268],R[4213],E,38,[[["endian"]]]],[11,R[4268],E,E,39,[[["endian"]]]],[11,R[4268],R[4216],E,48,[[["endian"]]]],[11,R[4268],E,E,49,[[["endian"]]]],[11,R[4268],E,E,50,[[["ctx"]],["usize"]]],[11,R[4268],E,E,50,[[[R[3904]]],["usize"]]],[11,R[4268],R[4217],E,51,[[["endian"]]]],[11,R[4268],E,E,52,[[["endian"]]]],[11,R[4268],R[4218],E,53,[[["endian"]]]],[11,R[4268],E,E,54,[[["endian"]]]],[11,R[4268],E,E,55,[[["endian"]]]],[11,R[4268],E,E,56,[[["endian"]]]],[11,R[4268],E,E,57,[[["endian"]]]],[11,R[4268],E,E,58,[[["endian"]]]],[11,R[4268],E,E,59,[[["endian"]]]],[11,R[4268],E,E,60,[[["endian"]]]],[11,R[4268],E,E,61,[[["endian"]]]],[11,R[4268],E,E,62,[[["endian"]]]],[11,R[4268],E,E,63,[[["endian"]]]],[11,R[4268],E,E,64,[[["endian"]]]],[11,R[4268],E,E,65,[[["endian"]]]],[11,R[4268],E,E,66,[[["endian"]]]],[11,R[4268],E,E,67,[[["endian"]]]],[11,R[4268],E,E,69,[[["endian"]]]],[11,R[4268],E,E,70,[[["endian"]]]],[11,R[4268],E,E,71,[[["endian"]]]],[11,R[4268],E,E,72,[[["endian"]]]],[11,R[4268],E,E,73,[[["endian"]]]],[11,R[4268],E,E,74,[[["endian"]]]],[11,R[4268],E,E,75,[[["endian"]]]],[11,R[4268],E,E,76,[[["endian"]]]],[11,R[4268],E,E,77,[[["endian"]]]],[11,R[4268],E,E,78,[[["endian"]]]],[11,R[4268],E,E,79,[[["endian"]]]],[11,R[4268],E,E,80,[[["endian"]]]],[11,R[4268],E,E,81,[[["endian"]]]],[11,R[4268],E,E,82,[[["endian"]]]],[11,R[4268],E,E,83,[[["endian"]]]],[11,R[4268],E,E,84,[[["endian"]]]],[11,R[4268],E,E,85,[[["endian"]]]],[11,R[4268],E,E,86,[[["endian"]]]],[11,R[4268],E,E,87,[[["endian"]]]],[11,R[4268],E,E,88,[[["endian"]]]],[11,R[4268],E,E,89,[[["endian"]]]],[11,R[4268],E,E,90,[[["endian"]]]],[11,R[4268],E,E,91,[[["endian"]]]],[11,R[4268],E,E,92,[[["endian"]]]],[11,R[4268],E,E,93,[[["endian"]]]],[11,R[4268],R[4219],E,96,[[["endian"]]]],[11,R[4268],E,E,97,[[["endian"]]]],[11,R[4268],E,E,98,[[["ctx"]],["usize"]]],[11,R[4268],R[4221],E,107,[[["endian"]]]],[11,R[4268],R[4222],E,108,[[["ctx"]],["usize"]]],[11,R[4268],E,E,109,[[["ctx"]],["usize"]]],[11,R[4268],R[4223],E,114,[[["endian"]]]],[11,R[4268],R[4224],E,116,[[["endian"]]]],[11,R[4268],E,E,117,[[["endian"]]]],[11,R[4268],E,E,119,[[["endian"]]]],[11,R[4268],E,E,120,[[["endian"]]]],[11,R[4268],R[4225],E,122,[[["endian"]],["usize"]]],[11,R[4268],R[4226],E,123,[[["endian"]]]],[11,R[4268],R[4227],E,131,[[["endian"]]]],[11,R[4268],R[4228],E,138,[[["endian"]]]],[11,R[4268],R[4230],E,148,[[["endian"]]]],[11,R[4268],E,E,149,[[["endian"]]]],[11,R[4268],E,E,150,[[["endian"]]]],[11,R[4268],E,E,151,[[["endian"]]]],[11,R[4268],E,E,152,[[["endian"]]]],[11,R[4268],R[4231],E,154,[[["endian"]]]],[11,R[4268],R[4232],E,156,[[["endian"]]]],[11,"network",R[4198],E,5,[[],["endian"]]],[11,"is_little",E,E,5,[[["self"]],["bool"]]]],"p":[[3,"HintData"],[4,"Hint"],[4,"Object"],[4,"Error"],[3,"Strtab"],[4,"Endian"],[3,"Ctx"],[4,"Container"],[3,"Elf"],[3,"Header"],[3,"Header"],[3,"Header"],[3,R[3906]],[3,R[3906]],[3,R[3906]],[3,R[3922]],[3,R[3922]],[3,R[3922]],[3,R[3943]],[3,R[3943]],[3,R[3943]],[3,"Sym"],[3,"Sym"],[3,"Sym"],[3,"Symtab"],[3,"Dyn"],[3,"Dynamic"],[3,R[3969]],[3,"Dyn"],[3,R[3969]],[3,"Dyn"],[3,R[3969]],[3,"Reloc"],[3,"Rela"],[3,"Rel"],[3,"Rela"],[3,"Rel"],[3,R[4039]],[3,"Nhdr32"],[3,"Nhdr64"],[3,R[4269]],[3,R[4270]],[3,"Note"],[3,"GnuHash"],[3,"GnuHash"],[3,"MachO"],[3,"MultiArch"],[4,"Mach"],[3,"Header32"],[3,"Header64"],[3,"Header"],[3,"FatHeader"],[3,"FatArch"],[3,R[4271]],[3,"Section32"],[3,"Section64"],[3,R[4272]],[3,R[4273]],[3,"Fvmlib"],[3,R[4274]],[3,"Dylib"],[3,R[4275]],[3,R[4276]],[3,R[4277]],[3,R[4278]],[3,R[4279]],[3,R[4280]],[3,R[4281]],[3,R[4282]],[3,R[4283]],[3,R[4284]],[3,R[4285]],[3,R[4286]],[3,R[4287]],[3,R[4288]],[3,R[4289]],[3,R[4290]],[3,R[4291]],[3,R[4292]],[3,R[4293]],[3,R[4294]],[3,R[4295]],[3,R[4296]],[3,R[4297]],[3,R[4298]],[3,R[4299]],[3,R[4300]],[3,R[4301]],[3,R[4302]],[3,R[4303]],[3,R[4304]],[3,R[4305]],[3,R[4306]],[3,R[4307]],[3,R[4308]],[4,R[4309]],[3,"Nlist32"],[3,"Nlist64"],[3,"Nlist"],[3,"SymbolsCtx"],[3,"Symbols"],[3,"Export"],[4,"SymbolKind"],[4,"ExportInfo"],[3,"ExportTrie"],[3,"Import"],[3,R[4310]],[3,R[4311]],[3,"Section"],[3,"Segment"],[3,"Segments"],[3,"PE"],[3,"Coff"],[3,"DosHeader"],[3,"CoffHeader"],[3,"Header"],[3,R[4312]],[3,R[4313]],[3,R[4314]],[3,R[4315]],[3,R[4316]],[3,R[4317]],[3,R[4318]],[3,R[4319]],[3,R[4320]],[3,R[4321]],[3,"ExportData"],[3,"Export"],[4,R[4322]],[4,"Reexport"],[3,R[4323]],[3,R[4324]],[3,R[4325]],[3,"ImportData"],[3,"Import"],[4,R[4326]],[8,"Bitfield"],[3,"DebugData"],[3,R[4327]],[3,R[4328]],[3,R[4329]],[3,"Register"],[3,"UnwindCode"],[3,"UnwindInfo"],[4,R[4330]],[4,R[4331]],[4,R[4332]],[3,R[4333]],[3,"Symbol"],[3,R[4334]],[3,R[4335]],[3,R[4336]],[3,R[4337]],[3,R[4338]],[3,R[4339]],[3,R[4340]],[3,R[4341]],[3,"Header"],[3,"Member"],[3,"Index"],[4,"IndexType"],[3,"Archive"],[3,R[4342]],[3,R[4343]],[3,R[4344]],[3,R[4345]],[3,R[4183]],[3,R[4346]],[3,R[295]],[3,R[4347]],[3,R[4348]],[3,R[4183]],[6,R[4349]]]};
searchIndex["heck"]={"doc":"heck is a case conversion library.","i":[[8,R[720],"heck",R[719],N,N],[10,"to_camel_case",E,"Convert this type to camel case.",0,[[["self"]]]],[8,R[721],E,"This trait defines a kebab case conversion.",N,N],[10,"to_kebab_case",E,"Convert this type to kebab case.",1,[[["self"]]]],[8,R[722],E,"This trait defines a mixed case conversion.",N,N],[10,"to_mixed_case",E,"Convert this type to mixed case.",2,[[["self"]]]],[8,R[723],E,"This trait defines a shouty snake case conversion.",N,N],[10,"to_shouty_snake_case",E,"Convert this type to shouty snake case.",3,[[["self"]]]],[8,R[724],E,"Oh heck, ShoutySnekCase is an alias for ShoutySnakeCase.…",N,N],[10,"TO_SHOUTY_SNEK_CASE",E,"CONVERT THIS TYPE TO SNEK CASE.",4,[[["self"]]]],[8,R[725],E,R[719],N,N],[10,"to_snake_case",E,"Convert this type to snake case.",5,[[["self"]]]],[8,"SnekCase",E,"Oh heck, SnekCase is an alias for SnakeCase. See SnakeCase…",N,N],[10,"to_snek_case",E,"Convert this type to snek case.",6,[[["self"]]]],[8,R[726],E,"This trait defines a title case conversion.",N,N],[10,"to_title_case",E,"Convert this type to title case.",7,[[["self"]]]]],"p":[[8,R[720]],[8,R[721]],[8,R[722]],[8,R[723]],[8,R[724]],[8,R[725]],[8,"SnekCase"],[8,R[726]]]};
searchIndex["hex"]={"doc":"Encoding and decoding hex strings.","i":[[4,R[156],"hex","The error type for decoding a hex string into `Vec<u8>` or…",N,N],[13,"InvalidHexCharacter",E,"An invalid character was found. Valid ones are: `0...9`,…",0,N],[12,"c","hex::FromHexError",E,0,N],[12,"index",E,E,0,N],[13,"OddLength","hex","A hex string's length needs to be even, as two digits…",0,N],[13,"InvalidStringLength",E,"If the hex string is decoded into a fixed sized container,…",0,N],[5,"encode",E,"Encodes `data` as hex string using lowercase characters.",N,[[["asref"]],["string"]]],[5,"encode_upper",E,"Encodes `data` as hex string using uppercase characters.",N,[[["asref"]],["string"]]],[5,"decode",E,"Decodes a hex string into raw bytes.",N,[[["asref"]],[["vec",["u8"]],[R[155]],[R[3],["vec",R[155]]]]]],[8,"ToHex",E,"Encoding values as hex string.",N,N],[10,"write_hex",E,"Writes the hex string representing `self` into `w`. Lower…",1,[[["self"],["w"]],[R[3]]]],[10,"write_hex_upper",E,"Writes the hex string representing `self` into `w`. Upper…",1,[[["self"],["w"]],[R[3]]]],[8,"FromHex",E,"Types that can be decoded from a hex string.",N,N],[16,"Error",E,E,2,N],[10,"from_hex",E,"Creates an instance of type `Self` from the given hex…",2,[[["asref"]],[R[3]]]],[11,"into",E,E,0,[[],[U]]],[11,R[113],E,E,0,[[["self"]],["string"]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[46],E,E,0,[[["self"]],[T]]],[11,R[47],E,E,0,[[["self"],[T]]]],[11,R[4],E,E,0,[[[U]],[R[3]]]],[11,R[5],E,E,0,[[],[R[3]]]],[11,R[7],E,E,0,[[["self"]],[T]]],[11,R[6],E,E,0,[[["self"]],[T]]],[11,R[8],E,E,0,[[["self"]],[R[9]]]],[11,"clone",E,E,0,[[["self"]],[R[155]]]],[11,"eq",E,E,0,[[["self"],[R[155]]],["bool"]]],[11,"ne",E,E,0,[[["self"],[R[155]]],["bool"]]],[11,"fmt",E,E,0,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,0,[[["self"],[R[10]]],[R[3]]]],[11,R[157],E,E,0,[[["self"]],["str"]]]],"p":[[4,R[156]],[8,"ToHex"],[8,"FromHex"]]};
searchIndex["indexmap"]={"doc":"[`IndexMap`] is a hash table where the iteration order of…","i":[[0,"set","indexmap","A hash set implemented using `IndexMap`",N,N],[3,"IndexSet",R[4667],"A hash set where the iteration order of the values is…",N,N],[3,R[306],E,"An owning iterator over the items of a `IndexSet`.",N,N],[3,"Iter",E,"An iterator over the items of a `IndexSet`.",N,N],[3,"Drain",E,"A draining iterator over the items of a `IndexSet`.",N,N],[3,R[4678],E,"A lazy iterator producing elements in the difference of…",N,N],[3,R[4676],E,"A lazy iterator producing elements in the intersection of…",N,N],[3,R[4677],E,"A lazy iterator producing elements in the symmetric…",N,N],[3,"Union",E,"A lazy iterator producing elements in the union of…",N,N],[11,"new",E,"Create a new set. (Does not allocate.)",0,[[],["self"]]],[11,R[115],E,R[4651],0,[[["usize"]],["self"]]],[11,R[4654],E,R[4651],0,[[["s"],["usize"]],["self"]]],[11,"len",E,"Return the number of elements in the set.",0,[[["self"]],["usize"]]],[11,R[25],E,"Returns true if the set contains no elements.",0,[[["self"]],["bool"]]],[11,R[4656],E,"Create a new set with `hash_builder`",0,[[["s"]],["self"]]],[11,"hasher",E,"Return a reference to the set's `BuildHasher`.",0,[[["self"]],["s"]]],[11,R[764],E,R[4657],0,[[["self"]],["usize"]]],[11,"clear",E,"Remove all elements in the set, while preserving its…",0,[[["self"]]]],[11,"reserve",E,"FIXME Not implemented fully yet",0,[[["self"],["usize"]]]],[11,"insert",E,"Insert the value into the set.",0,[[["self"],[T]],["bool"]]],[11,R[4659],E,"Insert the value into the set, and get its index.",0,[[["self"],[T]]]],[11,"iter",E,"Return an iterator over the values of the set, in their…",0,[[["self"]],["iter"]]],[11,R[420],E,"Return an iterator over the values that are in `self` but…",0,[[["self"],[R[4653]]],[R[420]]]],[11,R[421],E,"Return an iterator over the values that are in `self` or…",0,[[["self"],[R[4653]]],["symmetricdifference"]]],[11,R[4652],E,"Return an iterator over the values that are in both `self`…",0,[[["self"],[R[4653]]],[R[4652]]]],[11,"union",E,"Return an iterator over all values that are in `self` or…",0,[[["self"],[R[4653]]],["union"]]],[11,R[1285],E,"Return `true` if an equivalent to `value` exists in the set.",0,[[["self"],["q"]],["bool"]]],[11,"get",E,"Return a reference to the value stored in the set, if it…",0,[[["self"],["q"]],[[T],[R[23]]]]],[11,"get_full",E,"Return item index and value",0,[[["self"],["q"]],[R[23]]]],[11,"replace",E,"Adds a value to the set, replacing the existing value, if…",0,[[["self"],[T]],[R[23]]]],[11,"remove",E,"FIXME Same as .swap_remove",0,[[["self"],["q"]],["bool"]]],[11,R[120],E,"Remove the value from the set, and return `true` if it was…",0,[[["self"],["q"]],["bool"]]],[11,"take",E,"FIXME Same as .swap_take",0,[[["self"],["q"]],[R[23]]]],[11,"swap_take",E,"Removes and returns the value in the set, if any, that is…",0,[[["self"],["q"]],[R[23]]]],[11,R[4661],E,"Remove the value from the set return it and the index it…",0,[[["self"],["q"]],[R[23]]]],[11,"pop",E,"Remove the last value",0,[[["self"]],[R[23]]]],[11,"retain",E,"Scan through each value in the set and keep those where…",0,[[["self"],["f"]]]],[11,"sort",E,"Sort the set’s values by their default ordering.",0,[[["self"]]]],[11,"sort_by",E,"Sort the set’s values in place using the comparison…",0,[[["self"],["f"]]]],[11,"sorted_by",E,"Sort the values of the set and return a by value iterator…",0,[[["f"]],[R[766]]]],[11,"drain",E,"Clears the `IndexSet`, returning all values as a drain…",0,[[["self"],[R[124]]],["drain"]]],[11,"get_index",E,"Get a value by index",0,[[["self"],["usize"]],[[T],[R[23]]]]],[11,R[4665],E,R[4666],0,[[["self"],["usize"]],[R[23]]]],[11,"is_disjoint",E,"Returns `true` if `self` has no elements in common with…",0,[[["self"],[R[4653]]],["bool"]]],[11,"is_subset",E,"Returns `true` if all elements of `self` are contained in…",0,[[["self"],[R[4653]]],["bool"]]],[11,"is_superset",E,"Returns `true` if all elements of `other` are contained in…",0,[[["self"],[R[4653]]],["bool"]]],[0,"map","indexmap","`IndexMap` is a hash table where the iteration order of…",N,N],[3,"IndexMap",R[4668],"A hash table where the iteration order of the key-value…",N,N],[3,R[315],E,"A view into an occupied entry in a `IndexMap`. It is part…",N,N],[3,R[314],E,"A view into a vacant entry in a `IndexMap`. It is part of…",N,N],[3,"Keys",E,"An iterator over the keys of a `IndexMap`.",N,N],[3,"Values",E,"An iterator over the values of a `IndexMap`.",N,N],[3,R[316],E,"A mutable iterator over the values of a `IndexMap`.",N,N],[3,"Iter",E,"An iterator over the entries of a `IndexMap`.",N,N],[3,R[631],E,"A mutable iterator over the entries of a `IndexMap`.",N,N],[3,R[306],E,"An owning iterator over the entries of a `IndexMap`.",N,N],[3,"Drain",E,"A draining iterator over the entries of a `IndexMap`.",N,N],[4,"Entry",E,"Entry for an existing key-value pair or a vacant location…",N,N],[13,"Occupied",E,"Existing slot with equivalent key.",1,N],[13,"Vacant",E,"Vacant slot (no equivalent key in the map).",1,N],[8,R[4675],E,"Opt-in mutable access to keys.",N,N],[16,"Key",E,E,2,N],[16,"Value",E,E,2,N],[10,R[4669],E,"Return item index, mutable reference to key and value",2,[[["self"],["q"]],[R[23]]]],[10,"retain2",E,R[4663],2,[[["self"],["f"]]]],[10,R[4670],E,"This method is not useful in itself – it is there to…",2,[[["self"]],[R[4671]]]],[11,"new",E,"Create a new map. (Does not allocate.)",3,[[],["self"]]],[11,R[115],E,R[4655],3,[[["usize"]],["self"]]],[11,R[4654],E,R[4655],3,[[["s"],["usize"]],["self"]]],[11,"len",E,"Return the number of key-value pairs in the map.",3,[[["self"]],["usize"]]],[11,R[25],E,R[4639],3,[[["self"]],["bool"]]],[11,R[4656],E,"Create a new map with `hash_builder`",3,[[["s"]],["self"]]],[11,"hasher",E,"Return a reference to the map's `BuildHasher`.",3,[[["self"]],["s"]]],[11,R[764],E,R[4657],3,[[["self"]],["usize"]]],[11,"or_insert",E,R[4658],1,[[["v"]],["v"]]],[11,R[4644],E,R[4658],1,[[["f"]],["v"]]],[11,"key",E,E,1,[[["self"]],["k"]]],[11,"index",E,"Return the index where the key-value pair exists or will…",1,[[["self"]],["usize"]]],[11,"and_modify",E,"Modifies the entry if it is occupied.",1,[[["f"]],["self"]]],[11,"or_default",E,"Inserts a default-constructed value in the entry if it is…",1,[[],["v"]]],[11,"key",E,E,4,[[["self"]],["k"]]],[11,"get",E,E,4,[[["self"]],["v"]]],[11,R[39],E,E,4,[[["self"]],["v"]]],[11,"index",E,"Return the index of the key-value pair",4,[[["self"]],["usize"]]],[11,"into_mut",E,E,4,[[],["v"]]],[11,"insert",E,"Sets the value of the entry to `value`, and returns the…",4,[[["self"],["v"]],["v"]]],[11,"remove",E,E,4,[[],["v"]]],[11,"remove_entry",E,"Remove and return the key, value pair stored in the map…",4,[[]]],[11,"key",E,E,5,[[["self"]],["k"]]],[11,"into_key",E,E,5,[[],["k"]]],[11,"index",E,"Return the index where the key-value pair will be inserted.",5,[[["self"]],["usize"]]],[11,"insert",E,E,5,[[["v"]],["v"]]],[11,"clear",E,"Remove all key-value pairs in the map, while preserving…",3,[[["self"]]]],[11,"reserve",E,"Reserve capacity for `additional` more key-value pairs.",3,[[["self"],["usize"]]]],[11,"insert",E,"Insert a key-value pair in the map.",3,[[["self"],["k"],["v"]],[R[23]]]],[11,R[4659],E,"Insert a key-value pair in the map, and get their index.",3,[[["self"],["k"],["v"]]]],[11,"entry",E,"Get the given key’s corresponding entry in the map for…",3,[[["self"],["k"]],["entry"]]],[11,"iter",E,R[4660],3,[[["self"]],["iter"]]],[11,R[31],E,R[4660],3,[[["self"]],[R[24]]]],[11,"keys",E,"Return an iterator over the keys of the map, in their order",3,[[["self"]],["keys"]]],[11,"values",E,"Return an iterator over the values of the map, in their…",3,[[["self"]],["values"]]],[11,R[35],E,"Return an iterator over mutable references to the the…",3,[[["self"]],["valuesmut"]]],[11,R[311],E,"Return `true` if an equivalent to `key` exists in the map.",3,[[["self"],["q"]],["bool"]]],[11,"get",E,"Return a reference to the value stored for `key`, if it is…",3,[[["self"],["q"]],[[R[23]],["v"]]]],[11,"get_full",E,"Return item index, key and value",3,[[["self"],["q"]],[R[23]]]],[11,R[39],E,E,3,[[["self"],["q"]],[[R[23]],["v"]]]],[11,"get_full_mut",E,E,3,[[["self"],["q"]],[R[23]]]],[11,"remove",E,"NOTE: Same as .swap_remove",3,[[["self"],["q"]],[R[23]]]],[11,R[120],E,R[4662],3,[[["self"],["q"]],[R[23]]]],[11,R[4661],E,R[4662],3,[[["self"],["q"]],[R[23]]]],[11,"pop",E,"Remove the last key-value pair",3,[[["self"]],[R[23]]]],[11,"retain",E,R[4663],3,[[["self"],["f"]]]],[11,"sort_keys",E,"Sort the map’s key-value pairs by the default ordering of…",3,[[["self"]]]],[11,"sort_by",E,"Sort the map’s key-value pairs in place using the…",3,[[["self"],["f"]]]],[11,"sorted_by",E,"Sort the key-value pairs of the map and return a by value…",3,[[["f"]],[R[766]]]],[11,"drain",E,"Clears the `IndexMap`, returning all key-value pairs as a…",3,[[["self"],[R[124]]],["drain"]]],[11,"get_index",E,R[4664],3,[[["self"],["usize"]],[R[23]]]],[11,"get_index_mut",E,R[4664],3,[[["self"],["usize"]],[R[23]]]],[11,R[4665],E,R[4666],3,[[["self"],["usize"]],[R[23]]]],[8,"Equivalent","indexmap","Key equivalence trait.",N,N],[10,R[4793],E,"Compare self to `key` and return `true` if they are equal.",6,[[["self"],["k"]],["bool"]]],[14,"indexmap",E,"Create an `IndexMap` from a list of key-value pairs",N,N],[14,R[4653],E,"Create an `IndexSet` from a list of values",N,N],[11,"into",R[4667],E,0,[[],[U]]],[11,R[45],E,E,0,[[],["i"]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[46],E,E,0,[[["self"]],[T]]],[11,R[47],E,E,0,[[["self"],[T]]]],[11,R[4],E,E,0,[[[U]],[R[3]]]],[11,R[5],E,E,0,[[],[R[3]]]],[11,R[7],E,E,0,[[["self"]],[T]]],[11,R[6],E,E,0,[[["self"]],[T]]],[11,R[8],E,E,0,[[["self"]],[R[9]]]],[11,"into",E,E,7,[[],[U]]],[11,R[45],E,E,7,[[],["i"]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[4],E,E,7,[[[U]],[R[3]]]],[11,R[5],E,E,7,[[],[R[3]]]],[11,R[7],E,E,7,[[["self"]],[T]]],[11,R[6],E,E,7,[[["self"]],[T]]],[11,R[8],E,E,7,[[["self"]],[R[9]]]],[11,"into",E,E,8,[[],[U]]],[11,R[45],E,E,8,[[],["i"]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[46],E,E,8,[[["self"]],[T]]],[11,R[47],E,E,8,[[["self"],[T]]]],[11,R[4],E,E,8,[[[U]],[R[3]]]],[11,R[5],E,E,8,[[],[R[3]]]],[11,R[7],E,E,8,[[["self"]],[T]]],[11,R[6],E,E,8,[[["self"]],[T]]],[11,R[8],E,E,8,[[["self"]],[R[9]]]],[11,"into",E,E,9,[[],[U]]],[11,R[45],E,E,9,[[],["i"]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[4],E,E,9,[[[U]],[R[3]]]],[11,R[5],E,E,9,[[],[R[3]]]],[11,R[7],E,E,9,[[["self"]],[T]]],[11,R[6],E,E,9,[[["self"]],[T]]],[11,R[8],E,E,9,[[["self"]],[R[9]]]],[11,"into",E,E,10,[[],[U]]],[11,R[45],E,E,10,[[],["i"]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[46],E,E,10,[[["self"]],[T]]],[11,R[47],E,E,10,[[["self"],[T]]]],[11,R[4],E,E,10,[[[U]],[R[3]]]],[11,R[5],E,E,10,[[],[R[3]]]],[11,R[7],E,E,10,[[["self"]],[T]]],[11,R[6],E,E,10,[[["self"]],[T]]],[11,R[8],E,E,10,[[["self"]],[R[9]]]],[11,"into",E,E,11,[[],[U]]],[11,R[45],E,E,11,[[],["i"]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[46],E,E,11,[[["self"]],[T]]],[11,R[47],E,E,11,[[["self"],[T]]]],[11,R[4],E,E,11,[[[U]],[R[3]]]],[11,R[5],E,E,11,[[],[R[3]]]],[11,R[7],E,E,11,[[["self"]],[T]]],[11,R[6],E,E,11,[[["self"]],[T]]],[11,R[8],E,E,11,[[["self"]],[R[9]]]],[11,"into",E,E,12,[[],[U]]],[11,R[45],E,E,12,[[],["i"]]],[11,"from",E,E,12,[[[T]],[T]]],[11,R[46],E,E,12,[[["self"]],[T]]],[11,R[47],E,E,12,[[["self"],[T]]]],[11,R[4],E,E,12,[[[U]],[R[3]]]],[11,R[5],E,E,12,[[],[R[3]]]],[11,R[7],E,E,12,[[["self"]],[T]]],[11,R[6],E,E,12,[[["self"]],[T]]],[11,R[8],E,E,12,[[["self"]],[R[9]]]],[11,"into",E,E,13,[[],[U]]],[11,R[45],E,E,13,[[],["i"]]],[11,"from",E,E,13,[[[T]],[T]]],[11,R[46],E,E,13,[[["self"]],[T]]],[11,R[47],E,E,13,[[["self"],[T]]]],[11,R[4],E,E,13,[[[U]],[R[3]]]],[11,R[5],E,E,13,[[],[R[3]]]],[11,R[7],E,E,13,[[["self"]],[T]]],[11,R[6],E,E,13,[[["self"]],[T]]],[11,R[8],E,E,13,[[["self"]],[R[9]]]],[11,"into",R[4668],E,3,[[],[U]]],[11,R[45],E,E,3,[[],["i"]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[46],E,E,3,[[["self"]],[T]]],[11,R[47],E,E,3,[[["self"],[T]]]],[11,R[4],E,E,3,[[[U]],[R[3]]]],[11,R[5],E,E,3,[[],[R[3]]]],[11,R[7],E,E,3,[[["self"]],[T]]],[11,R[6],E,E,3,[[["self"]],[T]]],[11,R[8],E,E,3,[[["self"]],[R[9]]]],[11,"into",E,E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[4],E,E,4,[[[U]],[R[3]]]],[11,R[5],E,E,4,[[],[R[3]]]],[11,R[7],E,E,4,[[["self"]],[T]]],[11,R[6],E,E,4,[[["self"]],[T]]],[11,R[8],E,E,4,[[["self"]],[R[9]]]],[11,"into",E,E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[4],E,E,5,[[[U]],[R[3]]]],[11,R[5],E,E,5,[[],[R[3]]]],[11,R[7],E,E,5,[[["self"]],[T]]],[11,R[6],E,E,5,[[["self"]],[T]]],[11,R[8],E,E,5,[[["self"]],[R[9]]]],[11,"into",E,E,14,[[],[U]]],[11,R[45],E,E,14,[[],["i"]]],[11,"from",E,E,14,[[[T]],[T]]],[11,R[46],E,E,14,[[["self"]],[T]]],[11,R[47],E,E,14,[[["self"],[T]]]],[11,R[4],E,E,14,[[[U]],[R[3]]]],[11,R[5],E,E,14,[[],[R[3]]]],[11,R[7],E,E,14,[[["self"]],[T]]],[11,R[6],E,E,14,[[["self"]],[T]]],[11,R[8],E,E,14,[[["self"]],[R[9]]]],[11,"into",E,E,15,[[],[U]]],[11,R[45],E,E,15,[[],["i"]]],[11,"from",E,E,15,[[[T]],[T]]],[11,R[46],E,E,15,[[["self"]],[T]]],[11,R[47],E,E,15,[[["self"],[T]]]],[11,R[4],E,E,15,[[[U]],[R[3]]]],[11,R[5],E,E,15,[[],[R[3]]]],[11,R[7],E,E,15,[[["self"]],[T]]],[11,R[6],E,E,15,[[["self"]],[T]]],[11,R[8],E,E,15,[[["self"]],[R[9]]]],[11,"into",E,E,16,[[],[U]]],[11,R[45],E,E,16,[[],["i"]]],[11,"from",E,E,16,[[[T]],[T]]],[11,R[4],E,E,16,[[[U]],[R[3]]]],[11,R[5],E,E,16,[[],[R[3]]]],[11,R[7],E,E,16,[[["self"]],[T]]],[11,R[6],E,E,16,[[["self"]],[T]]],[11,R[8],E,E,16,[[["self"]],[R[9]]]],[11,"into",E,E,17,[[],[U]]],[11,R[45],E,E,17,[[],["i"]]],[11,"from",E,E,17,[[[T]],[T]]],[11,R[46],E,E,17,[[["self"]],[T]]],[11,R[47],E,E,17,[[["self"],[T]]]],[11,R[4],E,E,17,[[[U]],[R[3]]]],[11,R[5],E,E,17,[[],[R[3]]]],[11,R[7],E,E,17,[[["self"]],[T]]],[11,R[6],E,E,17,[[["self"]],[T]]],[11,R[8],E,E,17,[[["self"]],[R[9]]]],[11,"into",E,E,18,[[],[U]]],[11,R[45],E,E,18,[[],["i"]]],[11,"from",E,E,18,[[[T]],[T]]],[11,R[4],E,E,18,[[[U]],[R[3]]]],[11,R[5],E,E,18,[[],[R[3]]]],[11,R[7],E,E,18,[[["self"]],[T]]],[11,R[6],E,E,18,[[["self"]],[T]]],[11,R[8],E,E,18,[[["self"]],[R[9]]]],[11,"into",E,E,19,[[],[U]]],[11,R[45],E,E,19,[[],["i"]]],[11,"from",E,E,19,[[[T]],[T]]],[11,R[4],E,E,19,[[[U]],[R[3]]]],[11,R[5],E,E,19,[[],[R[3]]]],[11,R[7],E,E,19,[[["self"]],[T]]],[11,R[6],E,E,19,[[["self"]],[T]]],[11,R[8],E,E,19,[[["self"]],[R[9]]]],[11,"into",E,E,20,[[],[U]]],[11,R[45],E,E,20,[[],["i"]]],[11,"from",E,E,20,[[[T]],[T]]],[11,R[4],E,E,20,[[[U]],[R[3]]]],[11,R[5],E,E,20,[[],[R[3]]]],[11,R[7],E,E,20,[[["self"]],[T]]],[11,R[6],E,E,20,[[["self"]],[T]]],[11,R[8],E,E,20,[[["self"]],[R[9]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[4],E,E,1,[[[U]],[R[3]]]],[11,R[5],E,E,1,[[],[R[3]]]],[11,R[7],E,E,1,[[["self"]],[T]]],[11,R[6],E,E,1,[[["self"]],[T]]],[11,R[8],E,E,1,[[["self"]],[R[9]]]],[11,R[4669],E,E,3,[[["self"],["q"]],[R[23]]]],[11,"retain2",E,E,3,[[["self"],["f"]]]],[11,R[4670],E,E,3,[[["self"]],[R[4671]]]],[11,"len",R[4667],E,7,[[["self"]],["usize"]]],[11,"len",E,E,8,[[["self"]],["usize"]]],[11,"len",R[4668],E,14,[[["self"]],["usize"]]],[11,"len",E,E,15,[[["self"]],["usize"]]],[11,"len",E,E,16,[[["self"]],["usize"]]],[11,"len",E,E,17,[[["self"]],["usize"]]],[11,"len",E,E,18,[[["self"]],["usize"]]],[11,"len",E,E,19,[[["self"]],["usize"]]],[11,R[83],R[4667],"Return an empty `IndexSet`",0,[[],["self"]]],[11,R[83],R[4668],"Return an empty `IndexMap`",3,[[],["self"]]],[11,"extend",R[4667],E,0,[[["self"],[R[82]]]]],[11,"extend",E,E,0,[[["self"],[R[82]]]]],[11,"extend",R[4668],R[4672],3,[[["self"],[R[82]]]]],[11,"extend",E,R[4672],3,[[["self"],[R[82]]]]],[11,"clone",R[4667],E,0,[[["self"]],[R[4653]]]],[11,"clone",E,E,8,[[["self"]],["self"]]],[11,"clone",E,E,10,[[["self"]],["self"]]],[11,"clone",E,E,11,[[["self"]],["self"]]],[11,"clone",E,E,12,[[["self"]],["self"]]],[11,"clone",E,E,13,[[["self"]],["self"]]],[11,"clone",R[4668],E,3,[[["self"]],["indexmap"]]],[11,"clone",E,E,14,[[["self"]],["keys"]]],[11,"clone",E,E,15,[[["self"]],["values"]]],[11,"clone",E,E,17,[[["self"]],["iter"]]],[11,"eq",R[4667],E,0,[[["self"],[R[4653]]],["bool"]]],[11,"eq",R[4668],E,3,[[["self"],["indexmap"]],["bool"]]],[11,R[45],R[4667],E,0,[[]]],[11,R[45],R[4668],E,3,[[]]],[11,R[52],R[4667],E,7,[[["self"]],[R[23]]]],[11,R[52],E,E,8,[[["self"]],[R[23]]]],[11,R[52],E,E,9,[[["self"]],[R[23]]]],[11,R[52],E,E,10,[[["self"]],[R[23]]]],[11,R[52],E,E,11,[[["self"]],[R[23]]]],[11,R[52],E,E,12,[[["self"]],[R[23]]]],[11,R[52],E,E,13,[[["self"]],[R[23]]]],[11,R[52],R[4668],E,14,[[["self"]],[["k"],[R[23]]]]],[11,R[52],E,E,15,[[["self"]],[R[23]]]],[11,R[52],E,E,16,[[["self"]],[R[23]]]],[11,R[52],E,E,17,[[["self"]],[R[23]]]],[11,R[52],E,E,18,[[["self"]],[R[23]]]],[11,R[52],E,E,19,[[["self"]],[R[23]]]],[11,R[52],E,E,20,[[["self"]],[R[23]]]],[11,"next",R[4667],E,7,[[["self"]],[R[23]]]],[11,R[53],E,E,7,[[["self"]]]],[11,"count",E,E,7,[[],["usize"]]],[11,"nth",E,E,7,[[["self"],["usize"]],[R[23]]]],[11,"last",E,E,7,[[],[R[23]]]],[11,"collect",E,E,7,[[],["c"]]],[11,"next",E,E,8,[[["self"]],[R[23]]]],[11,R[53],E,E,8,[[["self"]]]],[11,"count",E,E,8,[[],["usize"]]],[11,"nth",E,E,8,[[["self"],["usize"]],[R[23]]]],[11,"last",E,E,8,[[],[R[23]]]],[11,"collect",E,E,8,[[],["c"]]],[11,"next",E,E,9,[[["self"]],[R[23]]]],[11,R[53],E,E,9,[[["self"]]]],[11,"count",E,E,9,[[],["usize"]]],[11,"nth",E,E,9,[[["self"],["usize"]],[R[23]]]],[11,"last",E,E,9,[[],[R[23]]]],[11,"collect",E,E,9,[[],["c"]]],[11,"next",E,E,10,[[["self"]],[R[23]]]],[11,R[53],E,E,10,[[["self"]]]],[11,"next",E,E,11,[[["self"]],[R[23]]]],[11,R[53],E,E,11,[[["self"]]]],[11,"next",E,E,12,[[["self"]],[R[23]]]],[11,R[53],E,E,12,[[["self"]]]],[11,"fold",E,E,12,[[["b"],["f"]],["b"]]],[11,"next",E,E,13,[[["self"]],[R[23]]]],[11,R[53],E,E,13,[[["self"]]]],[11,"fold",E,E,13,[[["b"],["f"]],["b"]]],[11,"next",R[4668],E,14,[[["self"]],[R[23]]]],[11,R[53],E,E,14,[[["self"]]]],[11,"count",E,E,14,[[],["usize"]]],[11,"nth",E,E,14,[[["self"],["usize"]],[R[23]]]],[11,"last",E,E,14,[[],[R[23]]]],[11,"collect",E,E,14,[[],["c"]]],[11,"next",E,E,15,[[["self"]],[R[23]]]],[11,R[53],E,E,15,[[["self"]]]],[11,"count",E,E,15,[[],["usize"]]],[11,"nth",E,E,15,[[["self"],["usize"]],[R[23]]]],[11,"last",E,E,15,[[],[R[23]]]],[11,"collect",E,E,15,[[],["c"]]],[11,"next",E,E,16,[[["self"]],[R[23]]]],[11,R[53],E,E,16,[[["self"]]]],[11,"count",E,E,16,[[],["usize"]]],[11,"nth",E,E,16,[[["self"],["usize"]],[R[23]]]],[11,"last",E,E,16,[[],[R[23]]]],[11,"collect",E,E,16,[[],["c"]]],[11,"next",E,E,17,[[["self"]],[R[23]]]],[11,R[53],E,E,17,[[["self"]]]],[11,"count",E,E,17,[[],["usize"]]],[11,"nth",E,E,17,[[["self"],["usize"]],[R[23]]]],[11,"last",E,E,17,[[],[R[23]]]],[11,"collect",E,E,17,[[],["c"]]],[11,"next",E,E,18,[[["self"]],[R[23]]]],[11,R[53],E,E,18,[[["self"]]]],[11,"count",E,E,18,[[],["usize"]]],[11,"nth",E,E,18,[[["self"],["usize"]],[R[23]]]],[11,"last",E,E,18,[[],[R[23]]]],[11,"collect",E,E,18,[[],["c"]]],[11,"next",E,E,19,[[["self"]],[R[23]]]],[11,R[53],E,E,19,[[["self"]]]],[11,"count",E,E,19,[[],["usize"]]],[11,"nth",E,E,19,[[["self"],["usize"]],[R[23]]]],[11,"last",E,E,19,[[],[R[23]]]],[11,"collect",E,E,19,[[],["c"]]],[11,"next",E,E,20,[[["self"]],[R[23]]]],[11,R[53],E,E,20,[[["self"]]]],[11,"count",E,E,20,[[],["usize"]]],[11,"nth",E,E,20,[[["self"],["usize"]],[R[23]]]],[11,"last",E,E,20,[[],[R[23]]]],[11,"collect",E,E,20,[[],["c"]]],[11,"fmt",R[4667],E,0,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,7,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,8,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,10,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,11,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,12,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,13,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[4668],E,3,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,1,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,4,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,5,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,14,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,15,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,17,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,19,[[["self"],[R[10]]],[R[3]]]],[11,"index",E,R[4673],3,[[["self"],["q"]],["v"]]],[11,R[51],E,R[4673],3,[[["self"],["q"]],["v"]]],[11,R[81],R[4667],E,0,[[[R[82]]],["self"]]],[11,R[81],R[4668],"Create an `IndexMap` from the sequence of key-value pairs…",3,[[[R[82]]],["self"]]],[11,R[4674],E,E,3,[[]]],[11,R[4674],R[4667],E,0,[[]]],[11,R[4563],R[4668],E,3,[[["self"],[T]],[R[3]]]],[11,R[4563],R[4667],E,0,[[["self"],["se"]],[R[3]]]],[11,R[4354],R[4668],E,3,[[["d"]],[R[3]]]],[11,R[4354],R[4667],E,0,[[["d"]],[R[3]]]]],"p":[[3,"IndexSet"],[4,"Entry"],[8,R[4675]],[3,"IndexMap"],[3,R[315]],[3,R[314]],[8,"Equivalent"],[3,R[306]],[3,"Iter"],[3,"Drain"],[3,R[4678]],[3,R[4676]],[3,R[4677]],[3,"Union"],[3,"Keys"],[3,"Values"],[3,R[316]],[3,"Iter"],[3,R[631]],[3,R[306]],[3,"Drain"]]};
searchIndex["inkwell"]={"doc":"Inkwell documentation is a work in progress.","i":[[4,R[5773],"inkwell","Defines the address space in which a global will be…",N,N],[13,"Generic",E,E,0,N],[13,"Global",E,E,0,N],[13,"Shared",E,E,0,N],[13,"Const",E,E,0,N],[13,"Local",E,E,0,N],[4,R[5774],E,"This enum defines how to compare a `left` and `right`…",N,N],[13,"EQ",E,"Equal",1,N],[13,"NE",E,"Not Equal",1,N],[13,"UGT",E,"Unsigned Greater Than",1,N],[13,"UGE",E,"Unsigned Greater Than or Equal",1,N],[13,"ULT",E,"Unsigned Less Than",1,N],[13,"ULE",E,"Unsigned Less Than or Equal",1,N],[13,"SGT",E,"Signed Greater Than",1,N],[13,"SGE",E,"Signed Greater Than or Equal",1,N],[13,"SLT",E,"Signed Less Than",1,N],[13,"SLE",E,"Signed Less Than or Equal",1,N],[4,R[5775],E,"Defines how to compare a `left` and `right` `FloatValue`.",N,N],[13,"OEQ",E,"Returns true if `left` == `right` and neither are NaN",2,N],[13,"OGE",E,"Returns true if `left` >= `right` and neither are NaN",2,N],[13,"OGT",E,"Returns true if `left` > `right` and neither are NaN",2,N],[13,"OLE",E,"Returns true if `left` <= `right` and neither are NaN",2,N],[13,"OLT",E,"Returns true if `left` < `right` and neither are NaN",2,N],[13,"ONE",E,"Returns true if `left` != `right` and neither are NaN",2,N],[13,"ORD",E,"Returns true if neither value is NaN",2,N],[13,"PredicateFalse",E,"Always returns false",2,N],[13,"PredicateTrue",E,"Always returns true",2,N],[13,"UEQ",E,"Returns true if `left` == `right` or either is NaN",2,N],[13,"UGE",E,"Returns true if `left` >= `right` or either is NaN",2,N],[13,"UGT",E,"Returns true if `left` > `right` or either is NaN",2,N],[13,"ULE",E,"Returns true if `left` <= `right` or either is NaN",2,N],[13,"ULT",E,"Returns true if `left` < `right` or either is NaN",2,N],[13,"UNE",E,"Returns true if `left` != `right` or either is NaN",2,N],[13,"UNO",E,"Returns true if either value is NaN",2,N],[4,R[5776],E,E,N,N],[13,"NotAtomic",E,E,3,N],[13,"Unordered",E,E,3,N],[13,"Monotonic",E,E,3,N],[13,"Acquire",E,E,3,N],[13,"Release",E,E,3,N],[13,"AcquireRelease",E,E,3,N],[13,"SequentiallyConsistent",E,E,3,N],[4,R[5777],E,E,N,N],[13,"Xchg",E,"Stores to memory and returns the prior value.",4,N],[13,"Add",E,"Adds to the value in memory and returns the prior value.",4,N],[13,"Sub",E,"Subtract a value off the value in memory and returns the…",4,N],[13,"And",E,"Bitwise and into memory and returns the prior value.",4,N],[13,"Nand",E,"Bitwise nands into memory and returns the prior value.",4,N],[13,"Or",E,"Bitwise ors into memory and returns the prior value.",4,N],[13,"Xor",E,"Bitwise xors into memory and returns the prior value.",4,N],[13,"Max",E,"Sets memory to the signed-greater of the value provided…",4,N],[13,"Min",E,"Sets memory to the signed-lesser of the value provided and…",4,N],[13,"UMax",E,"Sets memory to the unsigned-greater of the value provided…",4,N],[13,"UMin",E,"Sets memory to the unsigned-lesser of the value provided…",4,N],[4,R[5778],E,"Defines the optimization level used to compile a `Module`.",N,N],[13,"None",E,E,5,N],[13,"Less",E,E,5,N],[13,"Default",E,E,5,N],[13,"Aggressive",E,E,5,N],[4,R[5779],E,E,N,N],[13,"Default",E,E,6,N],[13,"Hidden",E,E,6,N],[13,"Protected",E,E,6,N],[4,R[5780],E,E,N,N],[13,"GeneralDynamicTLSModel",E,E,7,N],[13,"LocalDynamicTLSModel",E,E,7,N],[13,"InitialExecTLSModel",E,E,7,N],[13,"LocalExecTLSModel",E,E,7,N],[4,R[5781],E,E,N,N],[13,"Default",E,E,8,N],[13,"Import",E,E,8,N],[13,"Export",E,E,8,N],[0,"support",E,E,N,N],[3,"LLVMString",R[5544],"An owned LLVM String. Also known as a LLVM Message",N,N],[5,"shutdown_llvm",E,"This function is very unsafe. Any reference to LLVM data…",N,[[]]],[5,"load_library_permanently",E,E,N,[[["str"]],["bool"]]],[5,"is_multithreaded",E,"Determines whether or not LLVM has been configured to run…",N,[[],["bool"]]],[5,"enable_llvm_pretty_stack_trace",E,E,N,[[]]],[0,R[5828],E,"This module contains some supplemental functions for…",N,N],[5,"install_fatal_error_handler","inkwell::support::error_handling","Installs an error handler to be called before LLVM exits.",N,[[]]],[5,"reset_fatal_error_handler",E,"Resets LLVM's fatal error handler back to the default",N,[[]]],[11,R[113],R[5544],"This is a convenience method for creating a Rust `String`,…",9,[[["self"]],["string"]]],[0,"attributes","inkwell","`Attribute`s are optional modifiers to functions, function…",N,N],[3,R[5831],R[5736],"Functions, function parameters, and return types can have…",N,N],[4,R[5782],E,"An `AttributeLoc` determines where on a function an…",N,N],[13,"Return",E,"Assign to the `FunctionValue`'s return type.",10,N],[13,"Param",E,"Assign to one of the `FunctionValue`'s params (0-indexed).",10,N],[13,R[196],E,"Assign to the `FunctionValue` itself.",10,N],[11,"is_enum",E,"Determines whether or not an `Attribute` is an enum. This…",11,[[["self"]],["bool"]]],[11,"is_string",E,"Determines whether or not an `Attribute` is a string. This…",11,[[["self"]],["bool"]]],[11,"get_named_enum_kind_id",E,"Gets the enum kind id associated with a builtin name.",11,[[["str"]],["u32"]]],[11,"get_enum_kind_id",E,"Gets the kind id associated with an enum `Attribute`.",11,[[["self"]],["u32"]]],[11,"get_last_enum_kind_id",E,"Gets the last enum kind id associated with builtin names.",11,[[],["u32"]]],[11,"get_enum_value",E,"Gets the value associated with an enum `Attribute`.",11,[[["self"]],["u64"]]],[11,"get_string_kind_id",E,"Gets the string kind id associated with a string attribute.",11,[[["self"]],["cstr"]]],[11,R[5723],E,"Gets the string value associated with a string attribute.",11,[[["self"]],["cstr"]]],[0,"comdat","inkwell","A `Comdat` helps resolve linker errors for duplicate…",N,N],[3,"Comdat",R[5737],"A `Comdat` determines how to resolve duplicate sections…",N,N],[4,R[5783],E,"Determines how linker conflicts are to be resolved.",N,N],[13,"Any",E,R[5822],12,N],[13,"ExactMatch",E,R[5823],12,N],[13,"Largest",E,R[5824],12,N],[13,"NoDuplicates",E,R[5825],12,N],[13,"SameSize",E,R[5826],12,N],[11,"get_selection_kind",E,"Gets what kind of `Comdat` this is.",13,[[["self"]],[R[5545]]]],[11,"set_selection_kind",E,"Sets what kind of `Comdat` this should be.",13,[[["self"],[R[5545]]]]],[0,"basic_block","inkwell",R[5547],N,N],[3,R[5546],R[5738],R[5547],N,N],[11,"get_parent",E,"Obtains the `FunctionValue` that this `BasicBlock` belongs…",14,[[["self"]],[[R[23],[R[5548]]],[R[5548]]]]],[11,"get_previous_basic_block",E,"Gets the `BasicBlock` preceeding the current one, in its…",14,[[["self"]],[[R[5128]],[R[23],[R[5128]]]]]],[11,"get_next_basic_block",E,"Gets the `BasicBlock` succeeding the current one, in its…",14,[[["self"]],[[R[5128]],[R[23],[R[5128]]]]]],[11,"move_before",E,"Prepends one `BasicBlock` before another.",14,[[["self"],[R[5128]]]]],[11,"move_after",E,"Appends one `BasicBlock` after another.",14,[[["self"],[R[5128]]]]],[11,R[5565],E,"Prepends a new `BasicBlock` before this one.",14,[[["self"],["str"]],[R[5128]]]],[11,"get_first_instruction",E,"Obtains the first `InstructionValue` in this `BasicBlock`,…",14,[[["self"]],[[R[23],[R[5549]]],[R[5549]]]]],[11,"get_last_instruction",E,"Obtains the last `InstructionValue` in this `BasicBlock`,…",14,[[["self"]],[[R[23],[R[5549]]],[R[5549]]]]],[11,"get_terminator",E,"Obtains the terminating `InstructionValue` in this…",14,[[["self"]],[[R[23],[R[5549]]],[R[5549]]]]],[11,"remove_from_function",E,"Removes this `BasicBlock` from its parent `FunctionValue`.…",14,[[["self"]]]],[11,"delete",E,"Removes this `BasicBlock` completely from memory. This is…",14,[[]]],[11,R[4752],E,"Obtains the `ContextRef` this `BasicBlock` belongs to.",14,[[["self"]],[R[5577]]]],[11,R[5661],E,"Gets the name of a `BasicBlock`.",14,[[["self"]],["cstr"]]],[0,"builder","inkwell","A `Builder` enables you to build instructions.",N,N],[3,"Builder",R[5739],E,N,N],[11,"create",E,"Creates a `Builder` belonging to the global `Context`.",15,[[],["self"]]],[11,"build_return",E,"Builds a function return instruction. It should be…",15,[[["self"],[R[23],[R[5552]]],[R[5552]]],[R[5549]]]],[11,"build_aggregate_return",E,"Builds a function return instruction for a return type…",15,[[["self"]],[R[5549]]]],[11,"build_call",E,"Builds a function call instruction. It can take either a…",15,[[["self"],["f"],["str"]],[R[5753]]]],[11,"build_gep",E,R[5551],15,[[["self"],["str"],[R[5550]]],[R[5550]]]],[11,"build_in_bounds_gep",E,R[5551],15,[[["self"],["str"],[R[5550]]],[R[5550]]]],[11,"build_struct_gep",E,R[5551],15,[[["self"],["u32"],["str"],[R[5550]]],[R[5550]]]],[11,"build_ptr_diff",E,"Builds an instruction which calculates the difference of…",15,[[["self"],["str"],[R[5550]]],[R[5560]]]],[11,"build_phi",E,E,15,[[["self"],[R[5553]],["str"]],[R[5757]]]],[11,"build_store",E,"Builds a store instruction. It allows you to store a value…",15,[[["self"],[R[5552]],[R[5550]]],[R[5549]]]],[11,"build_load",E,"Builds a load instruction. It allows you to retrieve a…",15,[[["self"],["str"],[R[5550]]],[R[5555]]]],[11,"build_alloca",E,E,15,[[["self"],[R[5553]],["str"]],[R[5550]]]],[11,"build_array_alloca",E,E,15,[[["self"],[R[5553]],[R[5560]],["str"]],[R[5550]]]],[11,"build_malloc",E,E,15,[[["self"],[R[5553]],["str"]],[R[5550]]]],[11,"build_array_malloc",E,E,15,[[["self"],[R[5553]],[R[5560]],["str"]],[R[5550]]]],[11,"build_free",E,E,15,[[["self"],[R[5550]]],[R[5549]]]],[11,"insert_instruction",E,E,15,[[["self"],[R[5549]],["str"],[R[23],["str"]]]]],[11,"get_insert_block",E,E,15,[[["self"]],[[R[5128]],[R[23],[R[5128]]]]]],[11,"build_int_unsigned_div",E,E,15,[[["self"],["str"],[R[5554]]],[R[5554]]]],[11,"build_int_signed_div",E,E,15,[[["self"],["str"],[R[5554]]],[R[5554]]]],[11,"build_int_exact_signed_div",E,E,15,[[["self"],["str"],[R[5554]]],[R[5554]]]],[11,"build_int_unsigned_rem",E,E,15,[[["self"],["str"],[R[5554]]],[R[5554]]]],[11,"build_int_signed_rem",E,E,15,[[["self"],["str"],[R[5554]]],[R[5554]]]],[11,"build_int_s_extend",E,E,15,[[["self"],[R[5554]],["str"]],[R[5554]]]],[11,"build_address_space_cast",E,E,15,[[["self"],[R[5550]],["str"],[R[5613]]],[R[5550]]]],[11,"build_bitcast",E,"Builds a bitcast instruction. A bitcast reinterprets the…",15,[[["self"],["str"],[T],["v"]],[R[5555]]]],[11,"build_int_s_extend_or_bit_cast",E,E,15,[[["self"],[R[5554]],["str"]],[R[5554]]]],[11,"build_int_z_extend",E,E,15,[[["self"],[R[5554]],["str"]],[R[5554]]]],[11,"build_int_z_extend_or_bit_cast",E,E,15,[[["self"],[R[5554]],["str"]],[R[5554]]]],[11,"build_int_truncate",E,E,15,[[["self"],[R[5554]],["str"]],[R[5554]]]],[11,"build_int_truncate_or_bit_cast",E,E,15,[[["self"],[R[5554]],["str"]],[R[5554]]]],[11,"build_float_rem",E,E,15,[[["self"],[R[5556]],["str"]],[R[5556]]]],[11,"build_float_to_unsigned_int",E,E,15,[[["self"],["str"],[R[5556]]]]],[11,"build_float_to_signed_int",E,E,15,[[["self"],["str"],[R[5556]]]]],[11,"build_unsigned_int_to_float",E,E,15,[[["self"],[R[5554]],["str"]]]],[11,"build_signed_int_to_float",E,E,15,[[["self"],[R[5554]],["str"]]]],[11,"build_float_trunc",E,E,15,[[["self"],[R[5556]],["str"]],[R[5556]]]],[11,"build_float_ext",E,E,15,[[["self"],[R[5556]],["str"]],[R[5556]]]],[11,"build_float_cast",E,E,15,[[["self"],[R[5556]],["str"]],[R[5556]]]],[11,"build_int_cast",E,E,15,[[["self"],[R[5554]],["str"]],[R[5554]]]],[11,"build_float_div",E,E,15,[[["self"],[R[5556]],["str"]],[R[5556]]]],[11,"build_int_add",E,E,15,[[["self"],["str"],[R[5554]]],[R[5554]]]],[11,"build_int_nsw_add",E,E,15,[[["self"],["str"],[R[5554]]],[R[5554]]]],[11,"build_int_nuw_add",E,E,15,[[["self"],["str"],[R[5554]]],[R[5554]]]],[11,"build_float_add",E,E,15,[[["self"],[R[5556]],["str"]],[R[5556]]]],[11,"build_xor",E,E,15,[[["self"],["str"],[R[5554]]],[R[5554]]]],[11,"build_and",E,E,15,[[["self"],["str"],[R[5554]]],[R[5554]]]],[11,"build_or",E,E,15,[[["self"],["str"],[R[5554]]],[R[5554]]]],[11,"build_left_shift",E,"Builds an `IntValue` containing the result of a logical…",15,[[["self"],["str"],[R[5554]]],[R[5554]]]],[11,"build_right_shift",E,"Builds an `IntValue` containing the result of a right…",15,[[["self"],[R[5554]],["str"],["bool"]],[R[5554]]]],[11,"build_int_sub",E,E,15,[[["self"],["str"],[R[5554]]],[R[5554]]]],[11,"build_int_nsw_sub",E,E,15,[[["self"],["str"],[R[5554]]],[R[5554]]]],[11,"build_int_nuw_sub",E,E,15,[[["self"],["str"],[R[5554]]],[R[5554]]]],[11,"build_float_sub",E,E,15,[[["self"],[R[5556]],["str"]],[R[5556]]]],[11,"build_int_mul",E,E,15,[[["self"],["str"],[R[5554]]],[R[5554]]]],[11,"build_int_nsw_mul",E,E,15,[[["self"],["str"],[R[5554]]],[R[5554]]]],[11,"build_int_nuw_mul",E,E,15,[[["self"],["str"],[R[5554]]],[R[5554]]]],[11,"build_float_mul",E,E,15,[[["self"],[R[5556]],["str"]],[R[5556]]]],[11,"build_cast",E,E,15,[[["self"],[R[5552]],[R[5718]],[R[5553]],["str"]],[R[5555]]]],[11,"build_pointer_cast",E,E,15,[[["self"],[R[5557]],["str"]],[R[5557]]]],[11,"build_int_compare",E,E,15,[[["self"],[R[5554]],[R[5721]],["str"]],[R[5554]]]],[11,"build_float_compare",E,E,15,[[["self"],[R[5703]],[R[5556]],["str"]]]],[11,"build_unconditional_branch",E,E,15,[[["self"],[R[5128]]],[R[5549]]]],[11,"build_conditional_branch",E,E,15,[[["self"],[R[5560]],[R[5128]]],[R[5549]]]],[11,"build_indirect_branch",E,E,15,[[["self"],[R[5552]]],[R[5549]]]],[11,"build_int_neg",E,E,15,[[["self"],["str"],[R[5554]]],[R[5554]]]],[11,"build_int_nsw_neg",E,E,15,[[["self"],["str"],[R[5554]]],[R[5554]]]],[11,"build_int_nuw_neg",E,E,15,[[["self"],["str"],[R[5554]]],[R[5554]]]],[11,"build_float_neg",E,E,15,[[["self"],[R[5556]],["str"]],[R[5556]]]],[11,"build_not",E,E,15,[[["self"],["str"],[R[5554]]],[R[5554]]]],[11,"position_at",E,E,15,[[["self"],[R[5128]],[R[5549]]]]],[11,"position_before",E,E,15,[[["self"],[R[5549]]]]],[11,"position_at_end",E,E,15,[[["self"],[R[5128]]]]],[11,"build_extract_value",E,"Builds an extract value instruction which extracts a…",15,[[["self"],["u32"],["aggregatevalue"],["str"]],[[R[5555]],[R[23],[R[5555]]]]]],[11,"build_insert_value",E,"Builds an insert value instruction which inserts a…",15,[[["self"],["av"],["u32"],["bv"],["str"]],[[R[5558]],[R[23],[R[5558]]]]]],[11,"build_extract_element",E,"Builds an extract element instruction which extracts a…",15,[[["self"],[R[5559]],[R[5560]],["str"]],[R[5555]]]],[11,"build_insert_element",E,"Builds an insert element instruction which inserts a…",15,[[["self"],[R[5559]],[R[5552]],[R[5560]],["str"]],[R[5559]]]],[11,"build_unreachable",E,E,15,[[["self"]],[R[5549]]]],[11,"build_fence",E,E,15,[[["self"],[R[5561]],["i32"],["str"]],[R[5549]]]],[11,"build_is_null",E,E,15,[[["self"],[R[5557]],["str"]]]],[11,"build_is_not_null",E,E,15,[[["self"],[R[5557]],["str"]]]],[11,"build_int_to_ptr",E,E,15,[[["self"],[R[5554]],["str"]]]],[11,"build_ptr_to_int",E,E,15,[[["self"],[R[5557]],["str"]]]],[11,"clear_insertion_position",E,E,15,[[["self"]]]],[11,"build_switch",E,E,15,[[["self"],[R[5560]],[R[5128]]],[R[5549]]]],[11,"build_select",E,E,15,[[["self"],[R[5552]],[R[5554]],["str"]],[R[5555]]]],[11,"build_global_string",E,E,15,[[["self"],["str"]],[R[5001]]]],[11,"build_global_string_ptr",E,E,15,[[["self"],["str"]],[R[5001]]]],[11,"build_shuffle_vector",E,E,15,[[["self"],[R[5559]],["str"]],[R[5559]]]],[11,"build_va_arg",E,E,15,[[["self"],[R[5553]],["str"],[R[5550]]],[R[5555]]]],[11,"build_atomicrmw",E,"Builds an atomicrmw instruction. It allows you to…",15,[[["self"],[R[5560]],[R[5561]],[R[5755]],[R[5550]]],[[R[3],[R[5560],"str"]],[R[5560]],["str"]]]],[11,"build_cmpxchg",E,"Builds a cmpxchg instruction. It allows you to atomically…",15,[[["self"],[R[5552]],[R[5561]],[R[5550]]],[[R[5562]],[R[3],[R[5562],"str"]],["str"]]]],[0,"context","inkwell","A `Context` is an opaque owner and manager of core global…",N,N],[3,"Context",R[5740],"A `Context` is a container for all LLVM entities including…",N,N],[3,"ContextRef",E,"A `ContextRef` is a smart pointer allowing borrowed access…",N,N],[11,"create",E,"Creates a new `Context`.",16,[[],["self"]]],[11,R[5594],E,"Creates a `ContextRef` which references the global context…",16,[[],[R[5577]]]],[11,"create_builder",E,"Creates a new `Builder` for a `Context`.",16,[[["self"]],["builder"]]],[11,"create_module",E,"Creates a new `Module` for a `Context`.",16,[[["self"],["str"]],["module"]]],[11,"create_module_from_ir",E,"Creates a new `Module` for the current `Context` from a…",16,[[["self"],[R[5581]]],[[R[3],["module",R[5573]]],["module"],[R[5573]]]]],[11,"void_type",E,"Gets the `VoidType`. It will be assigned the current…",16,[[["self"]],[R[5758]]]],[11,"bool_type",E,R[5646],16,[[["self"]],["inttype"]]],[11,"i8_type",E,R[5647],16,[[["self"]],["inttype"]]],[11,"i16_type",E,R[5648],16,[[["self"]],["inttype"]]],[11,"i32_type",E,R[5649],16,[[["self"]],["inttype"]]],[11,"i64_type",E,R[5650],16,[[["self"]],["inttype"]]],[11,"i128_type",E,R[5651],16,[[["self"]],["inttype"]]],[11,R[5652],E,R[5653],16,[[["self"],["u32"]],["inttype"]]],[11,"f16_type",E,"Gets the `FloatType` representing a 16 bit width. It will…",16,[[["self"]],[R[5563]]]],[11,"f32_type",E,"Gets the `FloatType` representing a 32 bit width. It will…",16,[[["self"]],[R[5563]]]],[11,"f64_type",E,"Gets the `FloatType` representing a 64 bit width. It will…",16,[[["self"]],[R[5563]]]],[11,R[5639],E,R[5640],16,[[["self"]],[R[5563]]]],[11,"f128_type",E,R[5564],16,[[["self"]],[R[5563]]]],[11,R[5641],E,R[5564],16,[[["self"]],[R[5563]]]],[11,R[5662],E,R[5663],16,[[["self"],["bool"]],[R[5602]]]],[11,"opaque_struct_type",E,"Creates an opaque `StructType` with no type definition yet…",16,[[["self"],["str"]],[R[5602]]]],[11,R[5660],E,"Creates a constant `StructValue` from constant values.",16,[[["self"],["bool"]],[R[5562]]]],[11,R[5705],E,"Append a named `BasicBlock` at the end of the referenced…",16,[[["self"],[R[5548]],["str"]],[R[5128]]]],[11,"insert_basic_block_after",E,"Append a named `BasicBlock` after the referenced…",16,[[["self"],[R[5128]],["str"]],[R[5128]]]],[11,R[5565],E,"Prepend a named `BasicBlock` before the referenced…",16,[[["self"],[R[5128]],["str"]],[R[5128]]]],[11,"metadata_node",E,"Creates a `MetadataValue` tuple of heterogeneous types (a…",16,[[["self"]],[R[5566]]]],[11,"metadata_string",E,"Creates a `MetadataValue` string for the current context.…",16,[[["self"],["str"]],[R[5566]]]],[11,R[5725],E,"Obtains the index of a metadata kind id. If the string…",16,[[["self"],["str"]],["u32"]]],[11,"create_enum_attribute",E,"Creates an enum `Attribute` in this `Context`.",16,[[["self"],["u32"],["u64"]],[R[996]]]],[11,"create_string_attribute",E,"Creates a string `Attribute` in this `Context`.",16,[[["self"],["str"]],[R[996]]]],[11,R[5729],E,R[5730],16,[[["self"],["str"],["bool"]],[R[5559]]]],[0,"data_layout","inkwell",E,N,N],[3,"DataLayout",R[5741],E,N,N],[11,"as_str",E,E,17,[[["self"]],["cstr"]]],[11,"as_ptr",E,E,17,[[["self"]]]],[0,R[5829],"inkwell",E,N,N],[3,R[5786],R[5742],"A reference-counted wrapper around LLVM's execution engine.",N,N],[3,R[5787],E,"A wrapper around a function pointer which ensures the…",N,N],[4,R[5784],E,E,N,N],[13,"JITNotEnabled",E,E,18,N],[13,"FunctionNotFound",E,E,18,N],[4,R[5785],E,E,N,N],[13,"ModuleNotOwned",E,E,19,N],[13,"IncorrectModuleOwner",E,E,19,N],[13,"LLVMError",E,E,19,N],[8,"UnsafeFunctionPointer",E,"Marker trait representing an unsafe function pointer…",N,N],[11,"link_in_mc_jit",E,R[5567],20,[[]]],[11,"link_in_interpreter",E,R[5567],20,[[]]],[11,"add_global_mapping",E,"Maps the specified value to an address.",20,[[["self"],["anyvalue"],["usize"]]]],[11,"add_module",E,"Adds a module to an `ExecutionEngine`.",20,[[["self"],["module"]],[R[3]]]],[11,"remove_module",E,E,20,[[["self"],["module"]],[[R[3],[R[5568]]],[R[5568]]]]],[11,R[5569],E,"Try to load a function from the execution engine.",20,[[["self"],["str"]],[[R[3],[R[5571],R[5570]]],[R[5570]],[R[5571]]]]],[11,R[5598],E,E,20,[[["self"]],[R[5601]]]],[11,"get_function_value",E,E,20,[[["self"],["str"]],[[R[5548]],[R[5570]],[R[3],[R[5548],R[5570]]]]]],[11,"run_function",E,E,20,[[["self"],[R[5548]]],[R[5643]]]],[11,"run_function_as_main",E,E,20,[[["self"],[R[5548]]],["c_int"]]],[11,"free_fn_machine_code",E,E,20,[[["self"],[R[5548]]]]],[11,"run_static_constructors",E,E,20,[[["self"]]]],[11,"run_static_destructors",E,E,20,[[["self"]]]],[11,"call",E,R[5572],21,[[["self"],["h"],["i"],["m"],["f"],["k"],["a"],["j"],["l"],["e"],["c"],["d"],["b"],["g"]],["output"]]],[11,"call",E,R[5572],21,[[["self"],["h"],["i"],["m"],["f"],["k"],["j"],["l"],["e"],["c"],["d"],["b"],["g"]],["output"]]],[11,"call",E,R[5572],21,[[["self"],["g"],["m"],["f"],["k"],["j"],["l"],["e"],["c"],["d"],["i"],["h"]],["output"]]],[11,"call",E,R[5572],21,[[["self"],["g"],["m"],["f"],["k"],["j"],["l"],["e"],["i"],["d"],["h"]],["output"]]],[11,"call",E,R[5572],21,[[["self"],["g"],["m"],["f"],["k"],["j"],["l"],["e"],["i"],["h"]],["output"]]],[11,"call",E,R[5572],21,[[["self"],["g"],["m"],["k"],["f"],["j"],["l"],["i"],["h"]],["output"]]],[11,"call",E,R[5572],21,[[["self"],["h"],["m"],["k"],["l"],["j"],["i"],["g"]],["output"]]],[11,"call",E,R[5572],21,[[["self"],["j"],["l"],["m"],["i"],["k"],["h"]],["output"]]],[11,"call",E,R[5572],21,[[["self"],["j"],["m"],["i"],["k"],["l"]],["output"]]],[11,"call",E,R[5572],21,[[["self"],["j"],["m"],["k"],["l"]],["output"]]],[11,"call",E,R[5572],21,[[["self"],["m"],["k"],["l"]],["output"]]],[11,"call",E,R[5572],21,[[["self"],["m"],["l"]],["output"]]],[11,"call",E,R[5572],21,[[["self"],["m"]],["output"]]],[11,"call",E,R[5572],21,[[["self"]],["output"]]],[0,"memory_buffer","inkwell",E,N,N],[3,R[5788],R[5743],E,N,N],[11,"create_from_file",E,E,22,[[["path"]],[[R[5573]],[R[3],[R[5573]]]]]],[11,"create_from_stdin",E,E,22,[[],[[R[5573]],[R[3],[R[5573]]]]]],[11,"create_from_memory_range",E,R[5574],22,[[["str"]],["self"]]],[11,"create_from_memory_range_copy",E,R[5574],22,[[["str"]],["self"]]],[11,R[44],E,"Gets a byte slice of this `MemoryBuffer`.",22,[[["self"]]]],[11,"get_size",E,"Gets the byte size of this `MemoryBuffer`.",22,[[["self"]],["usize"]]],[11,"create_object_file",E,"Convert this `MemoryBuffer` into an `ObjectFile`. LLVM…",22,[[],[[R[3],["objectfile"]],["objectfile"]]]],[0,"module","inkwell","A `Module` represets a single code compilation unit.",N,N],[3,"Module",R[5744],"Represents a reference to an LLVM `Module`. The underlying…",N,N],[4,"Linkage",E,"This enum defines how to link a global variable or…",N,N],[13,"Appending",E,"`Appending` linkage may only be applied to global…",23,N],[13,"AvailableExternally",E,"Globals with `AvailableExternally` linkage are never…",23,N],[13,"Common",E,"`Common` linkage is most similar to \"weak\" linkage, but…",23,N],[13,"DLLExport",E,"`DLLExport` causes the compiler to provide a global…",23,N],[13,"DLLImport",E,"`DLLImport` causes the compiler to reference a function or…",23,N],[13,"External",E,"If none of the other identifiers are used, the global is…",23,N],[13,"ExternalWeak",E,"The semantics of this linkage follow the ELF object file…",23,N],[13,"Ghost",E,R[5575],23,N],[13,"Internal",E,"Similar to private, but the value shows as a local symbol…",23,N],[13,"LinkerPrivate",E,R[5575],23,N],[13,"LinkerPrivateWeak",E,R[5575],23,N],[13,"LinkOnceAny",E,"Globals with `LinkOnceAny` linkage are merged with other…",23,N],[13,"LinkOnceODRAutoHide",E,R[5575],23,N],[13,"LinkOnceODR",E,R[5576],23,N],[13,"Private",E,"Global values with `Private` linkage are only directly…",23,N],[13,"WeakAny",E,"`WeakAny` linkage has the same merging semantics as…",23,N],[13,"WeakODR",E,R[5576],23,N],[4,R[5789],E,"Defines the operational behavior for a module wide flag.…",N,N],[13,"Error",E,R[5818],24,N],[13,"Warning",E,R[5819],24,N],[13,"Require",E,R[5820],24,N],[13,"Override",E,R[5821],24,N],[13,"Append",E,R[3133],24,N],[13,"AppendUnique",E,R[3133],24,N],[11,"create",E,"Creates a named `Module`. Will be automatically assigned…",25,[[["str"]],["self"]]],[11,"add_function",E,"Creates a function given its `name` and `ty`, adds it to…",25,[[["self"],[R[23],["linkage"]],["linkage"],["str"],[R[5614]]],[R[5548]]]],[11,R[4752],E,"Gets the `Context` from which this `Module` originates.",25,[[["self"]],[R[5577]]]],[11,"get_first_function",E,"Gets the first `FunctionValue` defined in this `Module`.",25,[[["self"]],[[R[23],[R[5548]]],[R[5548]]]]],[11,"get_last_function",E,"Gets the last `FunctionValue` defined in this `Module`.",25,[[["self"]],[[R[23],[R[5548]]],[R[5548]]]]],[11,R[5569],E,"Gets a `FunctionValue` defined in this `Module` by its name.",25,[[["self"],["str"]],[[R[23],[R[5548]]],[R[5548]]]]],[11,R[5698],E,"Gets a `BasicTypeEnum` of a named type in a `Module`.",25,[[["self"],["str"]],[[R[23],[R[5578]]],[R[5578]]]]],[11,"set_target",E,"Sets a `Target` to this `Module`.",25,[[["self"],["target"]]]],[11,"get_target",E,"Gets the `Target` assigned to this `Module`, if any.",25,[[["self"]],[[R[23],["target"]],["target"]]]],[11,"create_execution_engine",E,"Creates an `ExecutionEngine` from this `Module`.",25,[[["self"]],[[R[3],[R[5579],R[5573]]],[R[5573]],[R[5579]]]]],[11,"create_interpreter_execution_engine",E,"Creates an interpreter `ExecutionEngine` from this `Module`.",25,[[["self"]],[[R[3],[R[5579],R[5573]]],[R[5573]],[R[5579]]]]],[11,"create_jit_execution_engine",E,"Creates a JIT `ExecutionEngine` from this `Module`.",25,[[["self"],[R[5588]]],[[R[3],[R[5579],R[5573]]],[R[5573]],[R[5579]]]]],[11,"add_global",E,"Creates a `GlobalValue` based on a type in an address space.",25,[[["self"],[R[5553]],[R[5580]],[R[23],[R[5580]]],["str"]],[R[5001]]]],[11,"write_bitcode_to_path",E,"Writes a `Module` to a `Path`.",25,[[["self"],["path"]],["bool"]]],[11,"write_bitcode_to_file",E,"`write_bitcode_to_path` should be preferred over this…",25,[[["self"],["file"],["bool"]],["bool"]]],[11,"write_bitcode_to_memory",E,"Writes this `Module` to a `MemoryBuffer`.",25,[[["self"]],[R[5581]]]],[11,"verify",E,"Ensures that the current `Module` is valid, and returns a…",25,[[["self"]],[[R[3],[R[5573]]],[R[5573]]]]],[11,R[5600],E,"Gets a smart pointer to the `DataLayout` belonging to a…",25,[[["self"]],[["ref",[R[5582]]],[R[5582]]]]],[11,"set_data_layout",E,"Sets the `DataLayout` for a particular `Module`.",25,[[["self"],[R[5582]]]]],[11,R[5678],E,"Prints the content of the `Module` to stderr.",25,[[["self"]]]],[11,R[5615],E,"Prints the content of the `Module` to a string.",25,[[["self"]],[R[5573]]]],[11,"print_to_file",E,"Prints the content of the `Module` to a file.",25,[[["self"],["path"],["asref",["path"]]],[[R[3],[R[5573]]],[R[5573]]]]],[11,"set_inline_assembly",E,"Sets the inline assembly for the `Module`.",25,[[["self"],["str"]]]],[11,"add_global_metadata",E,"Appends a `MetaDataValue` to a global list indexed by a…",25,[[["self"],[R[5566]],["str"]]]],[11,"get_global_metadata_size",E,"Obtains the number of `MetaDataValue`s indexed by a…",25,[[["self"],["str"]],["u32"]]],[11,"get_global_metadata",E,"Obtains the global `MetaDataValue` node indexed by key,…",25,[[["self"],["str"]],[["vec",[R[5566]]],[R[5566]]]]],[11,"get_first_global",E,"Gets the first `GlobalValue` in a module.",25,[[["self"]],[[R[23],[R[5001]]],[R[5001]]]]],[11,"get_last_global",E,"Gets the last `GlobalValue` in a module.",25,[[["self"]],[[R[23],[R[5001]]],[R[5001]]]]],[11,R[5594],E,"Gets a named `GlobalValue` in a module.",25,[[["self"],["str"]],[[R[23],[R[5001]]],[R[5001]]]]],[11,"parse_bitcode_from_buffer",E,R[5583],25,[[[R[5581]]],[[R[5573]],[R[3],[R[5573]]]]]],[11,"parse_bitcode_from_buffer_in_context",E,R[5583],25,[[[R[5581]],["context"]],[[R[5573]],[R[3],[R[5573]]]]]],[11,"parse_bitcode_from_path",E,"A convenience function for creating a `Module` from a file.",25,[[["path"],["asref",["path"]]],[[R[5573]],[R[3],[R[5573]]]]]],[11,"parse_bitcode_from_path_in_context",E,"A convenience function for creating a `Module` from a file…",25,[[["path"],["asref",["path"]],["context"]],[[R[5573]],[R[3],[R[5573]]]]]],[11,R[5661],E,"Gets the name of this `Module`.",25,[[["self"]],["cstr"]]],[11,R[5727],E,"Assigns the name of this `Module`.",25,[[["self"],["str"]]]],[11,"get_source_file_name",E,"Gets the source file name. It defaults to the module…",25,[[["self"]],["cstr"]]],[11,"set_source_file_name",E,"Sets the source file name. It defaults to the module…",25,[[["self"],["str"]]]],[11,"link_in_module",E,"Links one module into another. This will merge two…",25,[[["self"]],[[R[3],[R[5573]]],[R[5573]]]]],[11,"get_or_insert_comdat",E,"Gets the `Comdat` associated with a particular name. If it…",25,[[["self"],["str"]],["comdat"]]],[11,"get_flag",E,"Gets the `MetadataValue` flag associated with the key in…",25,[[["self"],["str"]],[[R[23],[R[5566]]],[R[5566]]]]],[11,"add_metadata_flag",E,"Append a `MetadataValue` as a module wide flag. Note that…",25,[[["self"],[R[5566]],[R[5584]],["str"]]]],[11,"add_basic_value_flag",E,"Append a `BasicValue` as a module wide flag. Note that…",25,[[["self"],[R[5552]],[R[5584]],["str"]]]],[0,"object_file","inkwell",E,N,N],[3,"ObjectFile",R[5745],E,N,N],[3,R[295],E,E,N,N],[3,"Section",E,E,N,N],[3,R[4346],E,E,N,N],[3,R[4339],E,E,N,N],[3,R[4183],E,E,N,N],[3,"Symbol",E,E,N,N],[11,"get_sections",E,E,26,[[["self"]],[R[5833]]]],[11,R[5586],E,E,26,[[["self"]],[R[4131]]]],[11,R[5661],E,E,27,[[["self"]],["cstr"]]],[11,"size",E,E,27,[[["self"]],["u64"]]],[11,"get_contents",E,E,27,[[["self"]],["cstr"]]],[11,R[5587],E,E,27,[[["self"]],["u64"]]],[11,"get_relocations",E,E,27,[[["self"]],[R[5585]]]],[11,"get_offset",E,E,28,[[["self"]],["u64"]]],[11,R[5586],E,E,28,[[["self"]],[R[4131]]]],[11,R[5698],E,E,28,[[["self"]]]],[11,"get_value",E,E,28,[[["self"]],["cstr"]]],[11,R[5661],E,E,29,[[["self"]],["cstr"]]],[11,"size",E,E,29,[[["self"]],["u64"]]],[11,R[5587],E,E,29,[[["self"]],["u64"]]],[0,"passes","inkwell",E,N,N],[3,R[5791],R[5746],E,N,N],[3,R[5792],E,"A manager for running optimization and simplification…",N,N],[3,R[5793],E,E,N,N],[8,R[5790],E,E,N,N],[16,"Input",E,E,30,N],[10,"create",E,E,30,[[[R[6]]],[R[5750]]]],[10,R[5751],E,E,30,[[["self"],[R[5589]]],["bool"]]],[11,"create",E,E,31,[[],["self"]]],[11,"set_optimization_level",E,E,31,[[["self"],[R[5588]]]]],[11,"set_size_level",E,E,31,[[["self"],["u32"]]]],[11,"set_disable_unit_at_a_time",E,E,31,[[["self"],["bool"]]]],[11,"set_disable_unroll_loops",E,E,31,[[["self"],["bool"]]]],[11,"set_disable_simplify_lib_calls",E,E,31,[[["self"],["bool"]]]],[11,"set_inliner_with_threshold",E,E,31,[[["self"],["u32"]]]],[11,"populate_function_pass_manager",E,"Populates a PassManager with the expectation of function…",31,[[["self"],[R[5589]]]]],[11,"populate_module_pass_manager",E,"Populates a PassManager with the expectation of whole…",31,[[["self"],[R[5589]]]]],[11,"populate_lto_pass_manager",E,"Populates a PassManager with the expectation of link time…",31,[[["self"],[R[5589]],["bool"]]]],[11,R[3331],E,E,32,[[["self"]],["bool"]]],[11,R[5543],E,E,32,[[["self"]],["bool"]]],[11,"create",E,E,32,[[[R[6]]],[R[5589]]]],[11,"run_on",E,"This method returns true if any of the passes modified the…",32,[[["self"],[T]],["bool"]]],[11,"add_argument_promotion_pass",E,"This pass promotes \"by reference\" arguments to be \"by…",32,[[["self"]]]],[11,"add_constant_merge_pass",E,"Merges duplicate global constants together into a single…",32,[[["self"]]]],[11,"add_dead_arg_elimination_pass",E,"This pass deletes dead arguments from internal functions.…",32,[[["self"]]]],[11,"add_function_attrs_pass",E,"A simple interprocedural pass which walks the call-graph,…",32,[[["self"]]]],[11,"add_function_inlining_pass",E,"Bottom-up inlining of functions into callees.",32,[[["self"]]]],[11,"add_always_inliner_pass",E,"A custom inliner that handles only functions that are…",32,[[["self"]]]],[11,"add_global_dce_pass",E,"This transform is designed to eliminate unreachable…",32,[[["self"]]]],[11,"add_global_optimizer_pass",E,"This pass transforms simple global variables that never…",32,[[["self"]]]],[11,"add_ip_constant_propagation_pass",E,"This pass implements an extremely simple interprocedural…",32,[[["self"]]]],[11,"add_prune_eh_pass",E,"This file implements a simple interprocedural pass which…",32,[[["self"]]]],[11,"add_ipsccp_pass",E,"An interprocedural variant of Sparse Conditional Constant…",32,[[["self"]]]],[11,"add_internalize_pass",E,R[5590],32,[[["self"],["bool"]]]],[11,"add_strip_dead_prototypes_pass",E,R[5590],32,[[["self"]]]],[11,"add_strip_symbol_pass",E,"Performs code stripping. This transformation can delete:",32,[[["self"]]]],[11,"add_loop_vectorize_pass",E,R[5591],32,[[["self"]]]],[11,"add_slp_vectorize_pass",E,R[5591],32,[[["self"]]]],[11,"add_aggressive_dce_pass",E,"ADCE aggressively tries to eliminate code. This pass is…",32,[[["self"]]]],[11,"add_bit_tracking_dce_pass",E,R[5591],32,[[["self"]]]],[11,"add_alignment_from_assumptions_pass",E,R[5591],32,[[["self"]]]],[11,"add_cfg_simplification_pass",E,"Performs dead code elimination and basic block merging.…",32,[[["self"]]]],[11,"add_dead_store_elimination_pass",E,"A trivial dead store elimination that only considers…",32,[[["self"]]]],[11,"add_scalarizer_pass",E,R[5591],32,[[["self"]]]],[11,"add_merged_load_store_motion_pass",E,R[5591],32,[[["self"]]]],[11,"add_gvn_pass",E,R[5592],32,[[["self"]]]],[11,"add_new_gvn_pass",E,R[5592],32,[[["self"]]]],[11,"add_ind_var_simplify_pass",E,"This transformation analyzes and transforms the induction…",32,[[["self"]]]],[11,"add_instruction_combining_pass",E,"Combine instructions to form fewer, simple instructions.…",32,[[["self"]]]],[11,"add_jump_threading_pass",E,"Jump threading tries to find distinct threads of control…",32,[[["self"]]]],[11,"add_licm_pass",E,"This pass performs loop invariant code motion, attempting…",32,[[["self"]]]],[11,"add_loop_deletion_pass",E,"This file implements the Dead Loop Deletion Pass. This…",32,[[["self"]]]],[11,"add_loop_idiom_pass",E,R[5591],32,[[["self"]]]],[11,"add_loop_rotate_pass",E,"A simple loop rotation transformation.",32,[[["self"]]]],[11,"add_loop_reroll_pass",E,R[5591],32,[[["self"]]]],[11,"add_loop_unroll_pass",E,"This pass implements a simple loop unroller. It works best…",32,[[["self"]]]],[11,"add_loop_unswitch_pass",E,"This pass transforms loops that contain branches on…",32,[[["self"]]]],[11,"add_memcpy_optimize_pass",E,"This pass performs various transformations related to…",32,[[["self"]]]],[11,"add_partially_inline_lib_calls_pass",E,"This pass performs partial inlining, typically by inlining…",32,[[["self"]]]],[11,"add_lower_switch_pass",E,"Rewrites switch instructions with a sequence of branches,…",32,[[["self"]]]],[11,"add_promote_memory_to_register_pass",E,R[5593],32,[[["self"]]]],[11,"add_reassociate_pass",E,"This pass reassociates commutative expressions in an order…",32,[[["self"]]]],[11,"add_sccp_pass",E,"Sparse conditional constant propagation and merging, which…",32,[[["self"]]]],[11,"add_scalar_repl_aggregates_pass",E,R[5591],32,[[["self"]]]],[11,"add_scalar_repl_aggregates_pass_ssa",E,"The well-known scalar replacement of aggregates…",32,[[["self"]]]],[11,"add_scalar_repl_aggregates_pass_with_threshold",E,R[5591],32,[[["self"],["i32"]]]],[11,"add_simplify_lib_calls_pass",E,R[5591],32,[[["self"]]]],[11,"add_tail_call_elimination_pass",E,"This file transforms calls of the current function (self…",32,[[["self"]]]],[11,"add_constant_propagation_pass",E,"This pass implements constant propagation and merging. It…",32,[[["self"]]]],[11,"add_demote_memory_to_register_pass",E,R[5593],32,[[["self"]]]],[11,"add_verifier_pass",E,"Verifies an LLVM IR code. This is useful to run after an…",32,[[["self"]]]],[11,"add_correlated_value_propagation_pass",E,R[5591],32,[[["self"]]]],[11,"add_early_cse_pass",E,R[5591],32,[[["self"]]]],[11,"add_early_cse_mem_ssa_pass",E,R[5591],32,[[["self"]]]],[11,"add_lower_expect_intrinsic_pass",E,R[5591],32,[[["self"]]]],[11,"add_type_based_alias_analysis_pass",E,R[5591],32,[[["self"]]]],[11,"add_scoped_no_alias_aa_pass",E,R[5591],32,[[["self"]]]],[11,"add_basic_alias_analysis_pass",E,"A basic alias analysis pass that implements identities…",32,[[["self"]]]],[11,"add_aggressive_inst_combiner_pass",E,E,32,[[["self"]]]],[11,"add_loop_unroll_and_jam_pass",E,E,32,[[["self"]]]],[11,"add_coroutine_early_pass",E,E,32,[[["self"]]]],[11,"add_coroutine_split_pass",E,E,32,[[["self"]]]],[11,"add_coroutine_elide_pass",E,E,32,[[["self"]]]],[11,"add_coroutine_cleanup_pass",E,E,32,[[["self"]]]],[11,"new",E,E,33,[[["llvmpassregistryref"]],[R[5595]]]],[11,R[5594],E,E,33,[[],[R[5595]]]],[11,"initialize_core",E,E,33,[[["self"]]]],[11,"initialize_transform_utils",E,E,33,[[["self"]]]],[11,"initialize_scalar_opts",E,E,33,[[["self"]]]],[11,"initialize_obj_carc_opts",E,E,33,[[["self"]]]],[11,"initialize_vectorization",E,E,33,[[["self"]]]],[11,"initialize_inst_combine",E,E,33,[[["self"]]]],[11,"initialize_ipo",E,E,33,[[["self"]]]],[11,"initialize_instrumentation",E,E,33,[[["self"]]]],[11,"initialize_analysis",E,E,33,[[["self"]]]],[11,"initialize_ipa",E,E,33,[[["self"]]]],[11,"initialize_codegen",E,E,33,[[["self"]]]],[11,"initialize_target",E,E,33,[[["self"]]]],[11,"initialize_aggressive_inst_combiner",E,E,33,[[["self"]]]],[0,"targets","inkwell",E,N,N],[3,R[5794],R[5747],E,N,N],[12,"asm_parser",E,E,34,N],[12,"asm_printer",E,E,34,N],[12,"base",E,E,34,N],[12,R[5827],E,E,34,N],[12,"info",E,E,34,N],[12,"machine_code",E,E,34,N],[3,"Target",E,E,N,N],[3,R[5796],E,E,N,N],[3,"TargetData",E,E,N,N],[4,"CodeModel",E,E,N,N],[13,"Default",E,E,35,N],[13,"JITDefault",E,E,35,N],[13,"Small",E,E,35,N],[13,"Kernel",E,E,35,N],[13,"Medium",E,E,35,N],[13,"Large",E,E,35,N],[4,"RelocMode",E,E,N,N],[13,"Default",E,E,36,N],[13,"Static",E,E,36,N],[13,"PIC",E,E,36,N],[13,"DynamicNoPic",E,E,36,N],[4,"FileType",E,E,N,N],[13,"Assembly",E,E,37,N],[13,"Object",E,E,37,N],[4,R[5795],E,E,N,N],[13,R[953],E,E,38,N],[13,R[954],E,E,38,N],[11,"initialize_x86",E,E,39,[[[R[5596]]]]],[11,"initialize_native",E,E,39,[[[R[5596]]],[["string"],[R[3],["string"]]]]],[11,"initialize_all",E,E,39,[[[R[5596]]]]],[11,"create_target_machine",E,E,39,[[["self"],["codemodel"],[R[5588]],["relocmode"],["str"]],[[R[23],[R[5597]]],[R[5597]]]]],[11,"get_first",E,E,39,[[],[R[23]]]],[11,"get_next",E,E,39,[[["self"]],[R[23]]]],[11,R[5661],E,E,39,[[["self"]],["cstr"]]],[11,"get_description",E,E,39,[[["self"]],["cstr"]]],[11,"from_name",E,E,39,[[["str"]],[R[23]]]],[11,"from_triple",E,E,39,[[["str"]],[[R[5573]],[R[3],[R[5573]]]]]],[11,"has_jit",E,E,39,[[["self"]],["bool"]]],[11,"has_target_machine",E,E,39,[[["self"]],["bool"]]],[11,"has_asm_backend",E,E,39,[[["self"]],["bool"]]],[11,"get_target",E,E,40,[[["self"]],["target"]]],[11,"get_triple",E,E,40,[[["self"]],[R[5573]]]],[11,"get_default_triple",E,"Gets the default triple for the current system.",40,[[],[R[5573]]]],[11,"normalize_target_triple",E,E,40,[[["cstr"],["str"],["either",["str","cstr"]]],[R[5573]]]],[11,"get_host_cpu_name",E,"Gets a string containing the host CPU's name (triple).",40,[[],[R[5573]]]],[11,"get_host_cpu_features",E,"Gets a comma separated list of supported features by the…",40,[[],[R[5573]]]],[11,"get_cpu",E,E,40,[[["self"]],[R[5573]]]],[11,"get_feature_string",E,E,40,[[["self"]],["cstr"]]],[11,R[5598],E,"Create TargetData from this target machine",40,[[["self"]],[R[5601]]]],[11,"set_asm_verbosity",E,E,40,[[["self"],["bool"]]]],[11,"add_analysis_passes",E,E,40,[[["self"],[R[5589]]]]],[11,"write_to_memory_buffer",E,"Writes a `TargetMachine` to a `MemoryBuffer`.",40,[[["self"],[R[5817]],["module"]],[[R[5581]],[R[5573]],[R[3],[R[5581],R[5573]]]]]],[11,"write_to_file",E,"Saves a `TargetMachine` to a file.",40,[[["self"],["path"],[R[5817]],["module"]],[[R[3],[R[5573]]],[R[5573]]]]],[11,"ptr_sized_int_type",E,R[5599],41,[[["self"],[R[5580]],[R[23],[R[5580]]]],["inttype"]]],[11,"ptr_sized_int_type_in_context",E,R[5599],41,[[["self"],[R[5580]],["context"],[R[23],[R[5580]]]],["inttype"]]],[11,R[5600],E,E,41,[[["self"]],[R[5582]]]],[11,"get_bit_size",E,E,41,[[["self"],["anytype"]],["u64"]]],[11,"create",E,E,41,[[["str"]],[R[5601]]]],[11,"get_byte_ordering",E,E,41,[[["self"]],[R[5756]]]],[11,"get_pointer_byte_size",E,E,41,[[["self"],[R[5580]],[R[23],[R[5580]]]],["u32"]]],[11,"get_store_size",E,E,41,[[["self"],["anytype"]],["u64"]]],[11,"get_abi_size",E,E,41,[[["self"],["anytype"]],["u64"]]],[11,"get_abi_alignment",E,E,41,[[["self"],["anytype"]],["u32"]]],[11,"get_call_frame_alignment",E,E,41,[[["self"],["anytype"]],["u32"]]],[11,"get_preferred_alignment",E,E,41,[[["self"],["anytype"]],["u32"]]],[11,"get_preferred_alignment_of_global",E,E,41,[[["self"],[R[5001]]],["u32"]]],[11,"element_at_offset",E,E,41,[[["self"],["u64"],[R[5602]]],["u32"]]],[11,"offset_of_element",E,E,41,[[["self"],["u32"],[R[5602]]],[["u64"],[R[23],["u64"]]]]],[0,"types","inkwell","A type is a classification which determines how data is…",N,N],[3,R[5605],R[5748],"An `ArrayType` is the type of contiguous constants or…",N,N],[3,R[5800],E,"A `FloatType` is the type of a floating point constant or…",N,N],[3,R[5603],E,"A `FunctionType` is the type of a function variable.",N,N],[3,"IntType",E,"An `IntType` is the type of an integer constant or variable.",N,N],[3,R[5604],E,"A `PointerType` is the type of a pointer constant or…",N,N],[3,R[5609],E,"A `StructType` is the type of a heterogeneous container of…",N,N],[3,R[5611],E,"A `VectorType` is the type of a multiple value SIMD…",N,N],[3,"VoidType",E,"A `VoidType` is a special type with no possible direct…",N,N],[4,R[5797],E,"A wrapper for any `BasicType`, `VoidType`, or…",N,N],[13,R[5605],E,R[5606],42,N],[13,R[5800],E,R[5607],42,N],[13,R[5603],E,"A function return and parameter definition.",42,N],[13,"IntType",E,"An integer type.",42,N],[13,R[5604],E,R[5608],42,N],[13,R[5609],E,R[5610],42,N],[13,R[5611],E,R[5612],42,N],[13,"VoidType",E,"A valueless type.",42,N],[4,R[5798],E,"A wrapper for any `BasicType`.",N,N],[13,R[5605],E,R[5606],43,N],[13,R[5800],E,R[5607],43,N],[13,"IntType",E,E,43,N],[13,R[5604],E,R[5608],43,N],[13,R[5609],E,R[5610],43,N],[13,R[5611],E,R[5612],43,N],[4,R[5799],E,"How to interpret a string or digits used to construct an…",N,N],[13,"Binary",E,"Binary 0 or 1",44,N],[13,"Octal",E,"Octal 0-7",44,N],[13,"Decimal",E,"Decimal 0-9",44,N],[13,"Hexadecimal",E,"Hexadecimal with upper or lowercase letters up to F.",44,N],[13,R[2877],E,"Alphanumeric, 0-9 and all 26 letters in upper or lowercase.",44,N],[11,R[5665],E,"Gets whether or not this `ArrayType` is sized or not.",45,[[["self"]],["bool"]]],[11,"size_of",E,"Gets the size of this `ArrayType`. Value may vary…",45,[[["self"]],[[R[5560]],[R[23],[R[5560]]]]]],[11,R[5638],E,"Gets the alignment of this `ArrayType`. Value may vary…",45,[[["self"]],[R[5560]]]],[11,R[5666],E,"Creates a `PointerType` with this `ArrayType` for its…",45,[[["self"],[R[5580]]],[R[5613]]]],[11,R[4752],E,"Gets a reference to the `Context` this `ArrayType` was…",45,[[["self"]],[R[5577]]]],[11,"fn_type",E,"Creates a `FunctionType` with this `ArrayType` for its…",45,[[["self"],["bool"]],[R[5614]]]],[11,R[5655],E,"Creates an `ArrayType` with this `ArrayType` for its…",45,[[["self"],["u32"]],[R[5618]]]],[11,R[5644],E,R[5645],45,[[["self"]],[R[5616]]]],[11,R[5654],E,"Creates a constant zero value of this `ArrayType`.",45,[[["self"]],[R[5616]]]],[11,"len",E,"Gets the length of this `ArrayType`.",45,[[["self"]],["u32"]]],[11,R[5615],E,"Prints the definition of a `ArrayType` to a `LLVMString`.",45,[[["self"]],[R[5573]]]],[11,R[5658],E,"Creates an undefined instance of a `ArrayType`.",45,[[["self"]],[R[5616]]]],[11,R[5659],E,"Gets the element type of this `ArrayType`.",45,[[["self"]],[R[5578]]]],[11,R[5617],E,E,42,[[["self"]],[R[5618]]]],[11,R[5619],E,E,42,[[["self"]],[R[5563]]]],[11,"as_function_type",E,E,42,[[["self"]],[R[5614]]]],[11,R[5620],E,E,42,[[["self"]],["inttype"]]],[11,R[5621],E,E,42,[[["self"]],[R[5613]]]],[11,R[5622],E,E,42,[[["self"]],[R[5602]]]],[11,R[5623],E,E,42,[[["self"]],[R[5624]]]],[11,"as_void_type",E,E,42,[[["self"]],[R[5758]]]],[11,R[5625],E,E,42,[[],[R[5618]]]],[11,R[5626],E,E,42,[[],[R[5563]]]],[11,"into_function_type",E,E,42,[[],[R[5614]]]],[11,R[5627],E,E,42,[[],["inttype"]]],[11,R[5628],E,E,42,[[],[R[5613]]]],[11,R[5629],E,E,42,[[],[R[5602]]]],[11,R[5630],E,E,42,[[],[R[5624]]]],[11,"into_void_type",E,E,42,[[],[R[5758]]]],[11,R[5631],E,E,42,[[["self"]],["bool"]]],[11,R[5632],E,E,42,[[["self"]],["bool"]]],[11,"is_function_type",E,E,42,[[["self"]],["bool"]]],[11,R[5633],E,E,42,[[["self"]],["bool"]]],[11,R[5634],E,E,42,[[["self"]],["bool"]]],[11,R[5635],E,E,42,[[["self"]],["bool"]]],[11,R[5636],E,E,42,[[["self"]],["bool"]]],[11,"is_void_type",E,E,42,[[["self"]],["bool"]]],[11,R[5617],E,E,43,[[["self"]],[R[5618]]]],[11,R[5619],E,E,43,[[["self"]],[R[5563]]]],[11,R[5620],E,E,43,[[["self"]],["inttype"]]],[11,R[5621],E,E,43,[[["self"]],[R[5613]]]],[11,R[5622],E,E,43,[[["self"]],[R[5602]]]],[11,R[5623],E,E,43,[[["self"]],[R[5624]]]],[11,R[5625],E,E,43,[[],[R[5618]]]],[11,R[5626],E,E,43,[[],[R[5563]]]],[11,R[5627],E,E,43,[[],["inttype"]]],[11,R[5628],E,E,43,[[],[R[5613]]]],[11,R[5629],E,E,43,[[],[R[5602]]]],[11,R[5630],E,E,43,[[],[R[5624]]]],[11,R[5631],E,E,43,[[["self"]],["bool"]]],[11,R[5632],E,E,43,[[["self"]],["bool"]]],[11,R[5633],E,E,43,[[["self"]],["bool"]]],[11,R[5634],E,E,43,[[["self"]],["bool"]]],[11,R[5635],E,E,43,[[["self"]],["bool"]]],[11,R[5636],E,E,43,[[["self"]],["bool"]]],[11,"fn_type",E,"Creates a `FunctionType` with this `FloatType` for its…",46,[[["self"],["bool"]],[R[5614]]]],[11,R[5655],E,"Creates an `ArrayType` with this `FloatType` for its…",46,[[["self"],["u32"]],[R[5618]]]],[11,"vec_type",E,"Creates a `VectorType` with this `FloatType` for its…",46,[[["self"],["u32"]],[R[5624]]]],[11,"const_float",E,"Creates a `FloatValue` repesenting a constant value of…",46,[[["self"],["f64"]],[R[5637]]]],[11,"const_float_from_string",E,"Create a `FloatValue` from a string. LLVM provides no…",46,[[["self"],["str"]],[R[5637]]]],[11,R[5654],E,"Creates a constant zero value of this `FloatType`.",46,[[["self"]],[R[5637]]]],[11,R[5665],E,"Gets whether or not this `FloatType` is sized or not. This…",46,[[["self"]],["bool"]]],[11,"size_of",E,"Gets the size of this `FloatType`. Value may vary…",46,[[["self"]],[R[5560]]]],[11,R[5638],E,"Gets the alignment of this `FloatType`. Value may vary…",46,[[["self"]],[R[5560]]]],[11,R[4752],E,"Gets a reference to the `Context` this `FloatType` was…",46,[[["self"]],[R[5577]]]],[11,R[5666],E,"Creates a `PointerType` with this `FloatType` for its…",46,[[["self"],[R[5580]]],[R[5613]]]],[11,"f16_type",E,"Creates a new `FloatType` which represents sixteen bits…",46,[[],["self"]]],[11,"f32_type",E,"Creates a new `FloatType` which represents thirty two bits…",46,[[],["self"]]],[11,"f64_type",E,"Creates a new `FloatType` which represents sixty four bits…",46,[[],["self"]]],[11,R[5639],E,R[5640],46,[[],[R[5563]]]],[11,"f128_type",E,R[5642],46,[[],["self"]]],[11,R[5641],E,R[5642],46,[[],["self"]]],[11,R[5615],E,"Prints the definition of a `FloatType` to a `LLVMString`.",46,[[["self"]],[R[5573]]]],[11,R[5658],E,"Creates an undefined instance of a `FloatType`.",46,[[["self"]],[R[5637]]]],[11,R[5656],E,R[5657],46,[[["self"],["f64"]],[R[5643]]]],[11,R[5644],E,R[5645],46,[[["self"]],[R[5616]]]],[11,R[5666],E,"Creates a `PointerType` with this `FunctionType` for its…",47,[[["self"],[R[5580]]],[R[5613]]]],[11,"is_var_arg",E,"Determines whether or not a `FunctionType` is a variadic…",47,[[["self"]],["bool"]]],[11,"get_param_types",E,"Gets param types this `FunctionType` has.",47,[[["self"]],[["vec",[R[5578]]],[R[5578]]]]],[11,"count_param_types",E,"Counts the number of param types this `FunctionType` has.",47,[[["self"]],["u32"]]],[11,R[5665],E,"Gets whether or not this `FunctionType` is sized or not.…",47,[[["self"]],["bool"]]],[11,R[4752],E,"Gets a reference to the `Context` this `FunctionType` was…",47,[[["self"]],[R[5577]]]],[11,R[5615],E,"Prints the definition of a `FunctionType` to a `LLVMString`.",47,[[["self"]],[R[5573]]]],[11,"get_return_type",E,"Gets the return type of this `FunctionType`.",47,[[["self"]],[[R[23],[R[5578]]],[R[5578]]]]],[11,"to_regex",E,"Create a Regex that matches valid strings for the given…",44,[[["self"]],["regex"]]],[11,"bool_type",E,R[5646],48,[[],["self"]]],[11,"i8_type",E,R[5647],48,[[],["self"]]],[11,"i16_type",E,R[5648],48,[[],["self"]]],[11,"i32_type",E,R[5649],48,[[],["self"]]],[11,"i64_type",E,R[5650],48,[[],["self"]]],[11,"i128_type",E,R[5651],48,[[],["self"]]],[11,R[5652],E,R[5653],48,[[["u32"]],["self"]]],[11,"const_int",E,"Creates an `IntValue` repesenting a constant value of this…",48,[[["self"],["u64"],["bool"]],[R[5560]]]],[11,"const_int_from_string",E,"Create an `IntValue` from a string and radix. LLVM…",48,[[["self"],["str"],[R[5752]]],[[R[5560]],[R[23],[R[5560]]]]]],[11,"const_int_arbitrary_precision",E,"Create a constant `IntValue` of arbitrary precision.",48,[[["self"]],[R[5560]]]],[11,"const_all_ones",E,"Creates an `IntValue` representing a constant value of all…",48,[[["self"]],[R[5560]]]],[11,R[5654],E,"Creates a constant zero value of this `IntType`.",48,[[["self"]],[R[5560]]]],[11,"fn_type",E,"Creates a `FunctionType` with this `IntType` for its…",48,[[["self"],["bool"]],[R[5614]]]],[11,R[5655],E,"Creates an `ArrayType` with this `IntType` for its element…",48,[[["self"],["u32"]],[R[5618]]]],[11,"vec_type",E,"Creates a `VectorType` with this `IntType` for its element…",48,[[["self"],["u32"]],[R[5624]]]],[11,R[4752],E,"Gets a reference to the `Context` this `IntType` was…",48,[[["self"]],[R[5577]]]],[11,R[5665],E,"Gets whether or not this `IntType` is sized or not. This…",48,[[["self"]],["bool"]]],[11,"size_of",E,"Gets the size of this `IntType`. Value may vary depending…",48,[[["self"]],[R[5560]]]],[11,R[5638],E,"Gets the alignment of this `IntType`. Value may vary…",48,[[["self"]],[R[5560]]]],[11,R[5666],E,"Creates a `PointerType` with this `IntType` for its…",48,[[["self"],[R[5580]]],[R[5613]]]],[11,"get_bit_width",E,"Gets the bit width of an `IntType`.",48,[[["self"]],["u32"]]],[11,R[5615],E,"Prints the definition of an `IntType` to a `LLVMString`.",48,[[["self"]],[R[5573]]]],[11,R[5658],E,"Creates an undefined instance of an `IntType`.",48,[[["self"]],[R[5560]]]],[11,R[5656],E,R[5657],48,[[["self"],["u64"],["bool"]],[R[5643]]]],[11,R[5644],E,R[5645],48,[[["self"]],[R[5616]]]],[11,R[5665],E,"Gets whether or not this `PointerType` is sized or not.…",49,[[["self"]],["bool"]]],[11,"size_of",E,"Gets the size of this `PointerType`. Value may vary…",49,[[["self"]],[R[5560]]]],[11,R[5638],E,"Gets the alignment of this `PointerType`. Value may vary…",49,[[["self"]],[R[5560]]]],[11,R[5666],E,"Creates a `PointerType` with this `PointerType` for its…",49,[[["self"],[R[5580]]],[R[5613]]]],[11,R[4752],E,"Gets a reference to the `Context` this `PointerType` was…",49,[[["self"]],[R[5577]]]],[11,"fn_type",E,"Creates a `FunctionType` with this `PointerType` for its…",49,[[["self"],["bool"]],[R[5614]]]],[11,R[5655],E,"Creates an `ArrayType` with this `PointerType` for its…",49,[[["self"],["u32"]],[R[5618]]]],[11,"get_address_space",E,"Gets the `AddressSpace` a `PointerType` was created with.",49,[[["self"]],[R[5580]]]],[11,R[5615],E,"Prints the definition of a `PointerType` to a `LLVMString`.",49,[[["self"]],[R[5573]]]],[11,"const_null",E,"Creates a null `PointerValue` of this `PointerType`. It…",49,[[["self"]],[R[5550]]]],[11,R[5654],E,"Creates a constant null value of this `PointerType`. This…",49,[[["self"]],[R[5550]]]],[11,R[5658],E,"Creates an undefined instance of a `PointerType`.",49,[[["self"]],[R[5550]]]],[11,"vec_type",E,"Creates a `VectorType` with this `PointerType` for its…",49,[[["self"],["u32"]],[R[5624]]]],[11,R[5659],E,"Gets the element type of this `PointerType`.",49,[[["self"]],[R[5667]]]],[11,R[5644],E,R[5645],49,[[["self"]],[R[5616]]]],[11,"get_field_type_at_index",E,"Gets the type of a field belonging to this `StructType`.",50,[[["self"],["u32"]],[[R[23],[R[5578]]],[R[5578]]]]],[11,"const_named_struct",E,"Creates a `StructValue` based on this `StructType`'s…",50,[[["self"]],[R[5562]]]],[11,R[5660],E,"Creates a `StructValue` based on the input values rather…",50,[[["bool"]],[R[5562]]]],[11,R[5654],E,"Creates a constant zero value of this `StructType`.",50,[[["self"]],[R[5562]]]],[11,R[5665],E,"Gets whether or not this `StructType` is sized or not.",50,[[["self"]],["bool"]]],[11,"size_of",E,"Gets the size of this `StructType`. Value may vary…",50,[[["self"]],[[R[5560]],[R[23],[R[5560]]]]]],[11,R[5638],E,"Gets the alignment of this `StructType`. Value may vary…",50,[[["self"]],[R[5560]]]],[11,R[4752],E,"Gets a reference to the `Context` this `StructType` was…",50,[[["self"]],[R[5577]]]],[11,R[5661],E,"Gets this `StructType`'s name.",50,[[["self"]],[[R[23],["cstr"]],["cstr"]]]],[11,R[5666],E,"Creates a `PointerType` with this `StructType` for its…",50,[[["self"],[R[5580]]],[R[5613]]]],[11,"fn_type",E,"Creates a `FunctionType` with this `StructType` for its…",50,[[["self"],["bool"]],[R[5614]]]],[11,R[5655],E,"Creates an `ArrayType` with this `StructType` for its…",50,[[["self"],["u32"]],[R[5618]]]],[11,"is_packed",E,"Determines whether or not a `StructType` is packed.",50,[[["self"]],["bool"]]],[11,"is_opaque",E,R[5664],50,[[["self"]],["bool"]]],[11,R[5662],E,R[5663],50,[[["bool"]],["self"]]],[11,"count_fields",E,"Counts the number of field types.",50,[[["self"]],["u32"]]],[11,"get_field_types",E,"Gets this `StructType`'s field types.",50,[[["self"]],[["vec",[R[5578]]],[R[5578]]]]],[11,R[5615],E,"Prints the definition of a `StructType` to a `LLVMString`.",50,[[["self"]],[R[5573]]]],[11,R[5658],E,"Creates an undefined instance of a `StructType`.",50,[[["self"]],[R[5562]]]],[11,"set_body",E,R[5664],50,[[["self"],["bool"]],["bool"]]],[11,R[5644],E,R[5645],50,[[["self"]],[R[5616]]]],[11,R[5665],E,"Gets whether or not this `VectorType` is sized or not.",51,[[["self"]],["bool"]]],[11,"size_of",E,"Gets the size of this `VectorType`. Value may vary…",51,[[["self"]],[[R[5560]],[R[23],[R[5560]]]]]],[11,R[5638],E,"Gets the alignment of this `VectorType`. Value may vary…",51,[[["self"]],[R[5560]]]],[11,"get_size",E,"Gets the size of this `VectorType`.",51,[[["self"]],["u32"]]],[11,"const_vector",E,"Creates a constant `VectorValue`.",51,[[],[R[5559]]]],[11,R[5654],E,"Creates a constant zero value of this `VectorType`.",51,[[["self"]],[R[5559]]]],[11,R[5615],E,"Prints the definition of a `VectorType` to a `LLVMString`.",51,[[["self"]],[R[5573]]]],[11,R[5658],E,"Creates an undefined instance of a `VectorType`.",51,[[["self"]],[R[5559]]]],[11,R[5659],E,"Gets the element type of this `VectorType`.",51,[[["self"]],[R[5578]]]],[11,R[5666],E,"Creates a `PointerType` with this `VectorType` for its…",51,[[["self"],[R[5580]]],[R[5613]]]],[11,"fn_type",E,"Creates a `FunctionType` with this `VectorType` for its…",51,[[["self"],["bool"]],[R[5614]]]],[11,R[5655],E,"Creates an `ArrayType` with this `VectorType` for its…",51,[[["self"],["u32"]],[R[5618]]]],[11,R[5644],E,R[5645],51,[[["self"]],[R[5616]]]],[11,R[4752],E,"Gets a reference to the `Context` this `VectorType` was…",51,[[["self"]],[R[5577]]]],[11,R[5665],E,"Gets whether or not this `VoidType` is sized or not. This…",52,[[["self"]],["bool"]]],[11,R[4752],E,"Gets a reference to the `Context` this `VoidType` was…",52,[[["self"]],[R[5577]]]],[11,"fn_type",E,"Creates a `FunctionType` with this `VoidType` for its…",52,[[["self"],["bool"]],[R[5614]]]],[11,"void_type",E,"Gets the `VoidType`. It will be assigned the global context.",52,[[],["self"]]],[11,R[5615],E,"Prints the definition of a `VoidType` to a `LLVMString`.",52,[[["self"]],[R[5573]]]],[8,"AnyType",E,"Represents any LLVM type.",N,N],[11,R[5759],E,R[5760],53,[[["self"]],[R[5667]]]],[8,"BasicType",E,"Represents a basic LLVM type, that may be used in…",N,N],[11,R[5761],E,R[5762],54,[[["self"]],[R[5578]]]],[11,"fn_type",E,R[5763],54,[[["self"],["bool"]],[R[5614]]]],[11,R[5655],E,R[5764],54,[[["self"],["u32"]],[R[5618]]]],[11,R[5666],E,R[5765],54,[[["self"],[R[5580]]],[R[5613]]]],[8,R[5801],E,"Represents an LLVM type that can have integer math…",N,N],[16,R[5832],E,"The value instance of an int or int vector type.",55,N],[16,R[5668],E,"The type for int to float or int vector to float vector…",55,N],[16,R[5669],E,"The type for int to pointer or int vector to pointer…",55,N],[8,R[5802],E,"Represents an LLVM type that can have floating point math…",N,N],[16,R[5832],E,"The value instance of a float or float vector type.",56,N],[16,R[5668],E,"The type for float to int or float vector to int vector…",56,N],[8,R[5803],E,"Represents an LLVM type that can have pointer operations…",N,N],[16,R[5832],E,"The value instance of a pointer type.",57,N],[16,R[5669],E,"The type for pointer to int or pointer vector to int…",57,N],[0,"values","inkwell","A value is an instance of a type.",N,N],[3,R[5675],R[5749],E,N,N],[3,R[5810],E,"A usage of a `BasicValue` in an `InstructionValue`.",N,N],[3,R[5811],E,"A value resulting from a function call. It may have…",N,N],[3,R[5676],E,E,N,N],[3,R[5670],E,E,N,N],[3,R[5812],E,E,N,N],[3,R[4946],E,E,N,N],[3,R[5674],E,E,N,N],[3,"IntValue",E,E,N,N],[3,R[5677],E,E,N,N],[3,"PhiValue",E,"A Phi Instruction returns a value based on which basic…",N,N],[3,R[5671],E,E,N,N],[3,R[5672],E,E,N,N],[3,R[5673],E,E,N,N],[4,R[5804],E,E,N,N],[13,R[5675],E,E,58,N],[13,"IntValue",E,E,58,N],[13,R[5676],E,E,58,N],[13,"PhiValue",E,E,58,N],[13,R[5670],E,E,58,N],[13,R[5671],E,E,58,N],[13,R[5672],E,E,58,N],[13,R[5673],E,E,58,N],[13,R[5674],E,E,58,N],[4,R[5805],E,E,N,N],[13,R[5675],E,E,59,N],[13,R[5672],E,E,59,N],[4,R[5806],E,E,N,N],[13,R[5675],E,E,60,N],[13,"IntValue",E,E,60,N],[13,R[5676],E,E,60,N],[13,R[5671],E,E,60,N],[13,R[5672],E,E,60,N],[13,R[5673],E,E,60,N],[4,R[5807],E,E,N,N],[13,R[5675],E,E,61,N],[13,"IntValue",E,E,61,N],[13,R[5676],E,E,61,N],[13,R[5671],E,E,61,N],[13,R[5672],E,E,61,N],[13,R[5673],E,E,61,N],[13,R[5677],E,E,61,N],[4,R[5808],E,"This enum determines the significance of a `GlobalValue`'s…",N,N],[13,"None",E,"Address of the `GlobalValue` is significant.",62,N],[13,"Local",E,"Address of the `GlobalValue` is locally insignificant.",62,N],[13,"Global",E,"Address of the `GlobalValue` is globally insignificant.",62,N],[4,R[5809],E,E,N,N],[13,"Add",E,E,63,N],[13,"AddrSpaceCast",E,E,63,N],[13,"Alloca",E,E,63,N],[13,"And",E,E,63,N],[13,"AShr",E,E,63,N],[13,"AtomicCmpXchg",E,E,63,N],[13,"AtomicRMW",E,E,63,N],[13,"BitCast",E,E,63,N],[13,"Br",E,E,63,N],[13,"Call",E,E,63,N],[13,"CatchPad",E,E,63,N],[13,"CatchRet",E,E,63,N],[13,"CatchSwitch",E,E,63,N],[13,"CleanupPad",E,E,63,N],[13,"CleanupRet",E,E,63,N],[13,"ExtractElement",E,E,63,N],[13,"ExtractValue",E,E,63,N],[13,"FNeg",E,E,63,N],[13,"FAdd",E,E,63,N],[13,"FCmp",E,E,63,N],[13,"FDiv",E,E,63,N],[13,"Fence",E,E,63,N],[13,"FMul",E,E,63,N],[13,"FPExt",E,E,63,N],[13,"FPToSI",E,E,63,N],[13,"FPToUI",E,E,63,N],[13,"FPTrunc",E,E,63,N],[13,"FRem",E,E,63,N],[13,"FSub",E,E,63,N],[13,"GetElementPtr",E,E,63,N],[13,"ICmp",E,E,63,N],[13,"IndirectBr",E,E,63,N],[13,"InsertElement",E,E,63,N],[13,"InsertValue",E,E,63,N],[13,"IntToPtr",E,E,63,N],[13,"Invoke",E,E,63,N],[13,"LandingPad",E,E,63,N],[13,"Load",E,E,63,N],[13,"LShr",E,E,63,N],[13,"Mul",E,E,63,N],[13,"Or",E,E,63,N],[13,"Phi",E,E,63,N],[13,"PtrToInt",E,E,63,N],[13,"Resume",E,E,63,N],[13,"Return",E,E,63,N],[13,"SDiv",E,E,63,N],[13,"Select",E,E,63,N],[13,"SExt",E,E,63,N],[13,"Shl",E,E,63,N],[13,"ShuffleVector",E,E,63,N],[13,"SIToFP",E,E,63,N],[13,"SRem",E,E,63,N],[13,"Store",E,E,63,N],[13,"Sub",E,E,63,N],[13,"Switch",E,E,63,N],[13,"Trunc",E,E,63,N],[13,"UDiv",E,E,63,N],[13,"UIToFP",E,E,63,N],[13,R[4916],E,E,63,N],[13,"URem",E,E,63,N],[13,"UserOp1",E,E,63,N],[13,"UserOp2",E,E,63,N],[13,"VAArg",E,E,63,N],[13,"Xor",E,E,63,N],[13,"ZExt",E,E,63,N],[11,R[5661],E,E,64,[[["self"]],["cstr"]]],[11,R[5727],E,E,64,[[["self"],["str"]]]],[11,R[5698],E,E,64,[[["self"]],[R[5618]]]],[11,"is_null",E,E,64,[[["self"]],["bool"]]],[11,R[5728],E,E,64,[[["self"]],["bool"]]],[11,R[5615],E,E,64,[[["self"]],[R[5573]]]],[11,R[5678],E,E,64,[[["self"]]]],[11,R[5699],E,E,64,[[["self"]],[[R[23],[R[5549]]],[R[5549]]]]],[11,R[5700],E,E,64,[[["self"]],["bool"]]],[11,R[5701],E,E,64,[[["self"],["u32"]],[[R[23],[R[5566]]],[R[5566]]]]],[11,R[5702],E,E,64,[[["self"],["u32"],[R[5566]]]]],[11,R[5704],E,E,64,[[["self"],[R[5616]]]]],[11,"is_const",E,"Determines whether or not an `ArrayValue` is a constant.",64,[[["self"]],["bool"]]],[11,"get_next_use",E,"Gets the next use of an `InstructionValue` or `BasicValue`…",65,[[["self"]],[R[23]]]],[11,"get_user",E,"Gets the user(an `InstructionValue`) of this use.",65,[[["self"]],[R[5549]]]],[11,"get_used_value",E,"Gets the used value(a `BasicValueEnum` or `BasicBlock`) of…",65,[[["self"]],[[R[5128]],["either",[R[5555],R[5128]]],[R[5555]]]]],[11,"set_tail_call",E,"Sets whether or not this call is a tail call.",66,[[["self"],["bool"]]]],[11,R[5719],E,"Determines whether or not this call is a tail call.",66,[[["self"]],["bool"]]],[11,"try_as_basic_value",E,"Try to convert this `CallSiteValue` to a `BasicValueEnum`…",66,[[["self"]],[[R[5555]],[R[5549]],["either",[R[5555],R[5549]]]]]],[11,R[5706],E,"Adds an `Attribute` to this `CallSiteValue`.",66,[[["self"],[R[5679]],[R[996]]]]],[11,"get_called_fn_value",E,"Gets the `FunctionValue` this `CallSiteValue` is based on.",66,[[["self"]],[R[5548]]]],[11,R[5707],E,"Counts the number of `Attribute`s on this `CallSiteValue`…",66,[[["self"],[R[5679]]],["u32"]]],[11,R[5710],E,"Gets an enum `Attribute` on this `CallSiteValue` at an…",66,[[["self"],[R[5679]],["u32"]],[[R[996]],[R[23],[R[996]]]]]],[11,R[5711],E,"Gets a string `Attribute` on this `CallSiteValue` at an…",66,[[["self"],[R[5679]],["str"]],[[R[996]],[R[23],[R[996]]]]]],[11,R[5709],E,"Removes an enum `Attribute` on this `CallSiteValue` at an…",66,[[["self"],[R[5679]],["u32"]]]],[11,R[5708],E,"Removes a string `Attribute` on this `CallSiteValue` at an…",66,[[["self"],[R[5679]],["str"]]]],[11,"count_arguments",E,"Counts the number of arguments this `CallSiteValue` was…",66,[[["self"]],["u32"]]],[11,"get_call_convention",E,"Gets the calling convention for this `CallSiteValue`.",66,[[["self"]],["u32"]]],[11,"set_call_convention",E,"Sets the calling convention for this `CallSiteValue`.",66,[[["self"],["u32"]]]],[11,"set_alignment_attribute",E,"Shortcut for setting the alignment `Attribute` for this…",66,[[["self"],[R[5679]],["u32"]]]],[11,R[5615],E,"Prints the definition of a `CallSiteValue` to a…",66,[[["self"]],[R[5573]]]],[11,R[5680],E,E,59,[[["self"]],[R[5616]]]],[11,R[5681],E,E,59,[[["self"]],[R[5562]]]],[11,R[5682],E,E,59,[[],[R[5616]]]],[11,R[5683],E,E,59,[[],[R[5562]]]],[11,R[5684],E,E,59,[[["self"]],["bool"]]],[11,R[5685],E,E,59,[[["self"]],["bool"]]],[11,R[5680],E,E,58,[[["self"]],[R[5616]]]],[11,R[5686],E,E,58,[[["self"]],[R[5560]]]],[11,R[5687],E,E,58,[[["self"]],[R[5637]]]],[11,"as_phi_value",E,E,58,[[["self"]],[R[5757]]]],[11,"as_function_value",E,E,58,[[["self"]],[R[5548]]]],[11,R[5688],E,E,58,[[["self"]],[R[5550]]]],[11,R[5681],E,E,58,[[["self"]],[R[5562]]]],[11,R[5689],E,E,58,[[["self"]],[R[5559]]]],[11,R[5733],E,E,58,[[["self"]],[R[5549]]]],[11,R[5682],E,E,58,[[],[R[5616]]]],[11,R[5690],E,E,58,[[],[R[5560]]]],[11,R[5691],E,E,58,[[],[R[5637]]]],[11,"into_phi_value",E,E,58,[[],[R[5757]]]],[11,"into_function_value",E,E,58,[[],[R[5548]]]],[11,R[5692],E,E,58,[[],[R[5550]]]],[11,R[5683],E,E,58,[[],[R[5562]]]],[11,R[5693],E,E,58,[[],[R[5559]]]],[11,"into_instruction_value",E,E,58,[[],[R[5549]]]],[11,R[5684],E,E,58,[[["self"]],["bool"]]],[11,R[5694],E,E,58,[[["self"]],["bool"]]],[11,R[5695],E,E,58,[[["self"]],["bool"]]],[11,"is_phi_value",E,E,58,[[["self"]],["bool"]]],[11,"is_function_value",E,E,58,[[["self"]],["bool"]]],[11,R[5696],E,E,58,[[["self"]],["bool"]]],[11,R[5685],E,E,58,[[["self"]],["bool"]]],[11,R[5697],E,E,58,[[["self"]],["bool"]]],[11,"is_instruction_value",E,E,58,[[["self"]],["bool"]]],[11,R[5680],E,E,60,[[["self"]],[R[5616]]]],[11,R[5686],E,E,60,[[["self"]],[R[5560]]]],[11,R[5687],E,E,60,[[["self"]],[R[5637]]]],[11,R[5688],E,E,60,[[["self"]],[R[5550]]]],[11,R[5681],E,E,60,[[["self"]],[R[5562]]]],[11,R[5689],E,E,60,[[["self"]],[R[5559]]]],[11,R[5682],E,E,60,[[],[R[5616]]]],[11,R[5690],E,E,60,[[],[R[5560]]]],[11,R[5691],E,E,60,[[],[R[5637]]]],[11,R[5692],E,E,60,[[],[R[5550]]]],[11,R[5683],E,E,60,[[],[R[5562]]]],[11,R[5693],E,E,60,[[],[R[5559]]]],[11,R[5684],E,E,60,[[["self"]],["bool"]]],[11,R[5694],E,E,60,[[["self"]],["bool"]]],[11,R[5695],E,E,60,[[["self"]],["bool"]]],[11,R[5696],E,E,60,[[["self"]],["bool"]]],[11,R[5685],E,E,60,[[["self"]],["bool"]]],[11,R[5697],E,E,60,[[["self"]],["bool"]]],[11,R[5680],E,E,61,[[["self"]],[R[5616]]]],[11,R[5686],E,E,61,[[["self"]],[R[5560]]]],[11,R[5687],E,E,61,[[["self"]],[R[5637]]]],[11,R[5688],E,E,61,[[["self"]],[R[5550]]]],[11,R[5681],E,E,61,[[["self"]],[R[5562]]]],[11,R[5689],E,E,61,[[["self"]],[R[5559]]]],[11,"as_metadata_value",E,E,61,[[["self"]],[R[5566]]]],[11,R[5682],E,E,61,[[],[R[5616]]]],[11,R[5690],E,E,61,[[],[R[5560]]]],[11,R[5691],E,E,61,[[],[R[5637]]]],[11,R[5692],E,E,61,[[],[R[5550]]]],[11,R[5683],E,E,61,[[],[R[5562]]]],[11,R[5693],E,E,61,[[],[R[5559]]]],[11,"into_metadata_value",E,E,61,[[],[R[5566]]]],[11,R[5684],E,E,61,[[["self"]],["bool"]]],[11,R[5694],E,E,61,[[["self"]],["bool"]]],[11,R[5695],E,E,61,[[["self"]],["bool"]]],[11,R[5696],E,E,61,[[["self"]],["bool"]]],[11,R[5685],E,E,61,[[["self"]],["bool"]]],[11,R[5697],E,E,61,[[["self"]],["bool"]]],[11,"is_metadata_value",E,E,61,[[["self"]],["bool"]]],[11,R[5698],E,E,58,[[["self"]],[R[5667]]]],[11,R[5698],E,E,60,[[["self"]],[R[5578]]]],[11,R[5661],E,E,67,[[["self"]],["cstr"]]],[11,R[5727],E,E,67,[[["self"],["str"]]]],[11,R[5698],E,E,67,[[["self"]],[R[5563]]]],[11,"is_null",E,E,67,[[["self"]],["bool"]]],[11,R[5728],E,E,67,[[["self"]],["bool"]]],[11,R[5615],E,E,67,[[["self"]],[R[5573]]]],[11,R[5678],E,E,67,[[["self"]]]],[11,R[5699],E,E,67,[[["self"]],[[R[23],[R[5549]]],[R[5549]]]]],[11,"const_neg",E,E,67,[[["self"]],["self"]]],[11,"const_add",E,E,67,[[["self"],[R[5637]]],["self"]]],[11,"const_sub",E,E,67,[[["self"],[R[5637]]],["self"]]],[11,"const_mul",E,E,67,[[["self"],[R[5637]]],["self"]]],[11,"const_div",E,E,67,[[["self"],[R[5637]]],["self"]]],[11,"const_remainder",E,E,67,[[["self"],[R[5637]]],["self"]]],[11,R[5726],E,E,67,[[["self"],[R[5563]]],["self"]]],[11,"const_to_unsigned_int",E,E,67,[[["self"],["inttype"]],[R[5560]]]],[11,"const_to_signed_int",E,E,67,[[["self"],["inttype"]],[R[5560]]]],[11,R[5722],E,E,67,[[["self"],[R[5563]]],[R[5637]]]],[11,"const_extend",E,E,67,[[["self"],[R[5563]]],[R[5637]]]],[11,R[5700],E,E,67,[[["self"]],["bool"]]],[11,R[5701],E,E,67,[[["self"],["u32"]],[[R[23],[R[5566]]],[R[5566]]]]],[11,R[5702],E,E,67,[[["self"],["u32"],[R[5566]]]]],[11,"const_compare",E,E,67,[[["self"],[R[5703]],[R[5637]]],[R[5560]]]],[11,"is_const",E,"Determines whether or not a `FloatValue` is a constant.",67,[[["self"]],["bool"]]],[11,"get_constant",E,"Obtains a constant `FloatValue`'s value and whether or not…",67,[[["self"]],[R[23]]]],[11,R[5704],E,E,67,[[["self"],[R[5637]]]]],[11,R[5716],E,E,68,[[["self"]],["linkage"]]],[11,R[5717],E,E,68,[[["self"],["linkage"]]]],[11,"is_null",E,E,68,[[["self"]],["bool"]]],[11,R[5728],E,E,68,[[["self"]],["bool"]]],[11,R[5615],E,E,68,[[["self"]],[R[5573]]]],[11,R[5678],E,E,68,[[["self"]]]],[11,"verify",E,E,68,[[["self"],["bool"]],["bool"]]],[11,"get_next_function",E,E,68,[[["self"]],[R[23]]]],[11,"get_previous_function",E,E,68,[[["self"]],[R[23]]]],[11,"get_first_param",E,E,68,[[["self"]],[[R[5555]],[R[23],[R[5555]]]]]],[11,"get_last_param",E,E,68,[[["self"]],[[R[5555]],[R[23],[R[5555]]]]]],[11,"get_first_basic_block",E,E,68,[[["self"]],[[R[5128]],[R[23],[R[5128]]]]]],[11,R[5705],E,E,68,[[["self"],["str"]],[R[5128]]]],[11,"get_nth_param",E,E,68,[[["self"],["u32"]],[[R[5555]],[R[23],[R[5555]]]]]],[11,"count_params",E,E,68,[[["self"]],["u32"]]],[11,"count_basic_blocks",E,E,68,[[["self"]],["u32"]]],[11,"get_basic_blocks",E,E,68,[[["self"]],[["vec",[R[5128]]],[R[5128]]]]],[11,"get_param_iter",E,E,68,[[["self"]],["paramvalueiter"]]],[11,"get_params",E,E,68,[[["self"]],[["vec",[R[5555]]],[R[5555]]]]],[11,"get_last_basic_block",E,E,68,[[["self"]],[[R[5128]],[R[23],[R[5128]]]]]],[11,R[5661],E,E,68,[[["self"]],["cstr"]]],[11,"view_function_config",E,E,68,[[["self"]]]],[11,"view_function_config_only",E,E,68,[[["self"]]]],[11,"delete",E,E,68,[[]]],[11,R[5698],E,E,68,[[["self"]],[R[5614]]]],[11,R[5700],E,E,68,[[["self"]],["bool"]]],[11,R[5701],E,E,68,[[["self"],["u32"]],[[R[23],[R[5566]]],[R[5566]]]]],[11,R[5702],E,E,68,[[["self"],["u32"],[R[5566]]]]],[11,"has_personality_function",E,E,68,[[["self"]],["bool"]]],[11,"get_personality_function",E,E,68,[[["self"]],[[R[23],[R[5548]]],[R[5548]]]]],[11,"set_personality_function",E,E,68,[[["self"],[R[5548]]]]],[11,"get_intrinsic_id",E,E,68,[[["self"]],["u32"]]],[11,"get_call_conventions",E,E,68,[[["self"]],["u32"]]],[11,"set_call_conventions",E,E,68,[[["self"],["u32"]]]],[11,"get_gc",E,E,68,[[["self"]],["cstr"]]],[11,"set_gc",E,E,68,[[["self"],["str"]]]],[11,R[5704],E,E,68,[[["self"],[R[5548]]]]],[11,R[5706],E,"Adds an `Attribute` to a particular location in this…",68,[[["self"],[R[5679]],[R[996]]]]],[11,R[5707],E,"Counts the number of `Attribute`s belonging to the…",68,[[["self"],[R[5679]]],["u32"]]],[11,R[5708],E,"Removes a string `Attribute` belonging to the specified…",68,[[["self"],[R[5679]],["str"]]]],[11,R[5709],E,"Removes an enum `Attribute` belonging to the specified…",68,[[["self"],[R[5679]],["u32"]]]],[11,R[5710],E,"Gets an enum `Attribute` belonging to the specified…",68,[[["self"],[R[5679]],["u32"]],[[R[996]],[R[23],[R[996]]]]]],[11,R[5711],E,"Gets a string `Attribute` belonging to the specified…",68,[[["self"],[R[5679]],["str"]],[[R[996]],[R[23],[R[996]]]]]],[11,"set_param_alignment",E,E,68,[[["self"],["u32"]]]],[11,"as_global_value",E,"Gets the `GlobalValue` version of this `FunctionValue`.…",68,[[["self"]],[R[5001]]]],[11,"int_width",E,E,69,[[["self"]],["u32"]]],[11,"create_generic_value_of_pointer",E,E,69,[[[T]],["self"]]],[11,"as_int",E,E,69,[[["self"],["bool"]],["u64"]]],[11,"as_float",E,E,69,[[["self"],[R[5563]]],["f64"]]],[11,"into_pointer",E,E,69,[[]]],[11,"get_previous_global",E,E,70,[[["self"]],[[R[23],[R[5001]]],[R[5001]]]]],[11,"get_next_global",E,E,70,[[["self"]],[[R[23],[R[5001]]],[R[5001]]]]],[11,"get_dll_storage_class",E,E,70,[[["self"]],[R[5712]]]],[11,"set_dll_storage_class",E,E,70,[[["self"],[R[5712]]]]],[11,"get_initializer",E,E,70,[[["self"]],[[R[5555]],[R[23],[R[5555]]]]]],[11,"set_initializer",E,E,70,[[["self"],[R[5552]]]]],[11,"is_thread_local",E,E,70,[[["self"]],["bool"]]],[11,"set_thread_local",E,E,70,[[["self"],["bool"]]]],[11,"get_thread_local_mode",E,E,70,[[["self"]],[[R[23],[R[5713]]],[R[5713]]]]],[11,"set_thread_local_mode",E,E,70,[[["self"],[R[23],[R[5713]]],[R[5713]]]]],[11,"is_declaration",E,"Determines whether or not a `GlobalValue` is a declaration…",70,[[["self"]],["bool"]]],[11,"has_unnamed_addr",E,E,70,[[["self"]],["bool"]]],[11,"set_unnamed_addr",E,E,70,[[["self"],["bool"]]]],[11,"is_constant",E,E,70,[[["self"]],["bool"]]],[11,"set_constant",E,E,70,[[["self"],["bool"]]]],[11,"is_externally_initialized",E,E,70,[[["self"]],["bool"]]],[11,"set_externally_initialized",E,E,70,[[["self"],["bool"]]]],[11,"set_visibility",E,E,70,[[["self"],[R[5714]]]]],[11,"get_visibility",E,E,70,[[["self"]],[R[5714]]]],[11,"get_section",E,E,70,[[["self"]],["cstr"]]],[11,"set_section",E,E,70,[[["self"],["str"]]]],[11,"delete",E,E,70,[[]]],[11,R[5688],E,E,70,[[["self"]],[R[5550]]]],[11,R[5638],E,E,70,[[["self"]],["u32"]]],[11,"set_alignment",E,E,70,[[["self"],["u32"]]]],[11,"get_comdat",E,"Gets a `Comdat` assigned to this `GlobalValue`, if any.",70,[[["self"]],[["comdat"],[R[23],["comdat"]]]]],[11,"set_comdat",E,"Assigns a `Comdat` to this `GlobalValue`.",70,[[["self"],["comdat"]]]],[11,"get_unnamed_address",E,E,70,[[["self"]],[R[5715]]]],[11,"set_unnamed_address",E,E,70,[[["self"],[R[5715]]]]],[11,R[5716],E,E,70,[[["self"]],["linkage"]]],[11,R[5717],E,E,70,[[["self"],["linkage"]]]],[11,R[5615],E,E,70,[[["self"]],[R[5573]]]],[11,"get_opcode",E,E,71,[[["self"]],[R[5718]]]],[11,"get_previous_instruction",E,E,71,[[["self"]],[R[23]]]],[11,"get_next_instruction",E,E,71,[[["self"]],[R[23]]]],[11,"erase_from_basic_block",E,E,71,[[["self"]]]],[11,"remove_from_basic_block",E,E,71,[[["self"]]]],[11,"get_parent",E,E,71,[[["self"]],[[R[5128]],[R[23],[R[5128]]]]]],[11,R[5719],E,E,71,[[["self"]],["bool"]]],[11,R[5704],E,E,71,[[["self"],[R[5549]]]]],[11,"get_volatile",E,"Returns whether or not a memory access instruction is…",71,[[["self"]],["bool"]]],[11,"set_volatile",E,"Sets whether or not a memory access instruction is volatile.",71,[[["self"],["bool"]]]],[11,"get_num_operands",E,"Obtains the number of operands an `InstructionValue` has.…",71,[[["self"]],["u32"]]],[11,"get_operand",E,"Obtains the operand an `InstructionValue` has at a given…",71,[[["self"],["u32"]],[[R[23],["either"]],["either",[R[5555],R[5128]]]]]],[11,"set_operand",E,"Sets the operand an `InstructionValue` has at a given…",71,[[["self"],["u32"],[R[5552]]],["bool"]]],[11,"get_operand_use",E,"Gets the use of an operand(`BasicValue`), if any.",71,[[["self"],["u32"]],[[R[5720]],[R[23],[R[5720]]]]]],[11,R[5734],E,"Gets the first use of an `InstructionValue` if any.",71,[[["self"]],[[R[5720]],[R[23],[R[5720]]]]]],[11,"get_icmp_predicate",E,"Gets the predicate of an `ICmp` `InstructionValue`. For…",71,[[["self"]],[[R[23],[R[5721]]],[R[5721]]]]],[11,"get_fcmp_predicate",E,"Gets the predicate of an `FCmp` `InstructionValue`. For…",71,[[["self"]],[[R[23],[R[5703]]],[R[5703]]]]],[11,R[5661],E,E,72,[[["self"]],["cstr"]]],[11,R[5727],E,E,72,[[["self"],["str"]]]],[11,R[5698],E,E,72,[[["self"]],["inttype"]]],[11,"is_null",E,E,72,[[["self"]],["bool"]]],[11,R[5728],E,E,72,[[["self"]],["bool"]]],[11,R[5615],E,E,72,[[["self"]],[R[5573]]]],[11,R[5678],E,E,72,[[["self"]]]],[11,R[5699],E,E,72,[[["self"]],[[R[23],[R[5549]]],[R[5549]]]]],[11,"const_not",E,E,72,[[["self"]],["self"]]],[11,"const_neg",E,E,72,[[["self"]],["self"]]],[11,"const_nsw_neg",E,E,72,[[["self"]],["self"]]],[11,"const_nuw_neg",E,E,72,[[["self"]],["self"]]],[11,"const_add",E,E,72,[[["self"],[R[5560]]],["self"]]],[11,"const_nsw_add",E,E,72,[[["self"],[R[5560]]],["self"]]],[11,"const_nuw_add",E,E,72,[[["self"],[R[5560]]],["self"]]],[11,"const_sub",E,E,72,[[["self"],[R[5560]]],["self"]]],[11,"const_nsw_sub",E,E,72,[[["self"],[R[5560]]],["self"]]],[11,"const_nuw_sub",E,E,72,[[["self"],[R[5560]]],["self"]]],[11,"const_mul",E,E,72,[[["self"],[R[5560]]],["self"]]],[11,"const_nsw_mul",E,E,72,[[["self"],[R[5560]]],["self"]]],[11,"const_nuw_mul",E,E,72,[[["self"],[R[5560]]],["self"]]],[11,"const_unsigned_div",E,E,72,[[["self"],[R[5560]]],["self"]]],[11,"const_signed_div",E,E,72,[[["self"],[R[5560]]],["self"]]],[11,"const_exact_signed_div",E,E,72,[[["self"],[R[5560]]],["self"]]],[11,"const_exact_unsigned_div",E,E,72,[[["self"],[R[5560]]],["self"]]],[11,"const_unsigned_remainder",E,E,72,[[["self"],[R[5560]]],["self"]]],[11,"const_signed_remainder",E,E,72,[[["self"],[R[5560]]],["self"]]],[11,"const_and",E,E,72,[[["self"],[R[5560]]],["self"]]],[11,"const_or",E,E,72,[[["self"],[R[5560]]],["self"]]],[11,"const_xor",E,E,72,[[["self"],[R[5560]]],["self"]]],[11,R[5726],E,E,72,[[["self"],["inttype"],["bool"]],["self"]]],[11,"const_shl",E,E,72,[[["self"],[R[5560]]],["self"]]],[11,"const_rshr",E,E,72,[[["self"],[R[5560]]],["self"]]],[11,"const_ashr",E,E,72,[[["self"],[R[5560]]],["self"]]],[11,"const_unsigned_to_float",E,E,72,[[["self"],[R[5563]]],[R[5637]]]],[11,"const_signed_to_float",E,E,72,[[["self"],[R[5563]]],[R[5637]]]],[11,"const_to_pointer",E,E,72,[[["self"],[R[5613]]],[R[5550]]]],[11,R[5722],E,E,72,[[["self"],["inttype"]],[R[5560]]]],[11,"const_s_extend",E,E,72,[[["self"],["inttype"]],[R[5560]]]],[11,"const_z_ext",E,E,72,[[["self"],["inttype"]],[R[5560]]]],[11,"const_truncate_or_bit_cast",E,E,72,[[["self"],["inttype"]],[R[5560]]]],[11,"const_s_extend_or_bit_cast",E,E,72,[[["self"],["inttype"]],[R[5560]]]],[11,"const_z_ext_or_bit_cast",E,E,72,[[["self"],["inttype"]],[R[5560]]]],[11,"const_bit_cast",E,E,72,[[["self"],["inttype"]],[R[5560]]]],[11,R[5700],E,E,72,[[["self"]],["bool"]]],[11,R[5701],E,E,72,[[["self"],["u32"]],[[R[23],[R[5566]]],[R[5566]]]]],[11,R[5702],E,E,72,[[["self"],["u32"],[R[5566]]]]],[11,"const_int_compare",E,E,72,[[["self"],[R[5560]],[R[5721]]],[R[5560]]]],[11,R[5731],E,E,72,[[["self"],[R[5552]]],[R[5555]]]],[11,"is_const",E,"Determines whether or not an `IntValue` is a constant.",72,[[["self"]],["bool"]]],[11,"get_zero_extended_constant",E,"Obtains a constant `IntValue`'s zero extended value.",72,[[["self"]],[["u64"],[R[23],["u64"]]]]],[11,"get_sign_extended_constant",E,"Obtains a constant `IntValue`'s sign extended value.",72,[[["self"]],[[R[23],["i64"]],["i64"]]]],[11,R[5704],E,E,72,[[["self"],[R[5560]]]]],[11,"is_node",E,E,73,[[["self"]],["bool"]]],[11,"is_string",E,E,73,[[["self"]],["bool"]]],[11,"create_node",E,E,73,[[],["self"]]],[11,"create_string",E,E,73,[[["str"]],["self"]]],[11,R[5723],E,E,73,[[["self"]],[[R[23],["cstr"]],["cstr"]]]],[11,"get_node_size",E,E,73,[[["self"]],["u32"]]],[11,"get_node_values",E,E,73,[[["self"]],[["vec",[R[5724]]],[R[5724]]]]],[11,R[5725],E,E,73,[[["str"]],["u32"]]],[11,R[5615],E,E,73,[[["self"]],[R[5573]]]],[11,R[5678],E,E,73,[[["self"]]]],[11,R[5704],E,E,73,[[["self"],[R[5566]]]]],[11,"add_incoming",E,E,74,[[["self"]]]],[11,"count_incoming",E,E,74,[[["self"]],["u32"]]],[11,"get_incoming",E,E,74,[[["self"],["u32"]],[R[23]]]],[11,R[5661],E,E,74,[[["self"]],["cstr"]]],[11,R[5727],E,E,74,[[["self"],["str"]]]],[11,"is_null",E,E,74,[[["self"]],["bool"]]],[11,R[5728],E,E,74,[[["self"]],["bool"]]],[11,R[5615],E,E,74,[[["self"]],[R[5573]]]],[11,R[5678],E,E,74,[[["self"]]]],[11,R[5699],E,E,74,[[["self"]],[R[5549]]]],[11,R[5704],E,E,74,[[["self"],[R[5757]]]]],[11,"as_basic_value",E,E,74,[[["self"]],[R[5555]]]],[11,R[5661],E,E,75,[[["self"]],["cstr"]]],[11,R[5727],E,E,75,[[["self"],["str"]]]],[11,R[5698],E,E,75,[[["self"]],[R[5613]]]],[11,"is_null",E,E,75,[[["self"]],["bool"]]],[11,R[5728],E,E,75,[[["self"]],["bool"]]],[11,"is_const",E,"Determines whether or not a `PointerValue` is a constant.",75,[[["self"]],["bool"]]],[11,R[5615],E,E,75,[[["self"]],[R[5573]]]],[11,R[5678],E,E,75,[[["self"]]]],[11,R[5699],E,E,75,[[["self"]],[[R[23],[R[5549]]],[R[5549]]]]],[11,R[5700],E,E,75,[[["self"]],["bool"]]],[11,R[5701],E,E,75,[[["self"],["u32"]],[[R[23],[R[5566]]],[R[5566]]]]],[11,R[5702],E,E,75,[[["self"],["u32"],[R[5566]]]]],[11,"const_gep",E,R[5551],75,[[["self"]],[R[5550]]]],[11,"const_in_bounds_gep",E,R[5551],75,[[["self"]],[R[5550]]]],[11,"const_to_int",E,E,75,[[["self"],["inttype"]],[R[5560]]]],[11,R[5726],E,E,75,[[["self"],[R[5613]]],[R[5550]]]],[11,"const_address_space_cast",E,E,75,[[["self"],[R[5613]]],[R[5550]]]],[11,R[5704],E,E,75,[[["self"],[R[5550]]]]],[11,R[5661],E,E,76,[[["self"]],["cstr"]]],[11,R[5727],E,E,76,[[["self"],["str"]]]],[11,R[5698],E,E,76,[[["self"]],[R[5602]]]],[11,"is_null",E,E,76,[[["self"]],["bool"]]],[11,R[5728],E,E,76,[[["self"]],["bool"]]],[11,R[5615],E,E,76,[[["self"]],[R[5573]]]],[11,R[5678],E,E,76,[[["self"]]]],[11,R[5699],E,E,76,[[["self"]],[[R[23],[R[5549]]],[R[5549]]]]],[11,R[5700],E,E,76,[[["self"]],["bool"]]],[11,R[5701],E,E,76,[[["self"],["u32"]],[[R[23],[R[5566]]],[R[5566]]]]],[11,R[5702],E,E,76,[[["self"],["u32"],[R[5566]]]]],[11,R[5704],E,E,76,[[["self"],[R[5562]]]]],[11,"is_const",E,"Determines whether or not a `VectorValue` is a constant.",77,[[["self"]],["bool"]]],[11,"is_constant_vector",E,E,77,[[["self"]],["bool"]]],[11,"is_constant_data_vector",E,E,77,[[["self"]],["bool"]]],[11,R[5615],E,E,77,[[["self"]],[R[5573]]]],[11,R[5678],E,E,77,[[["self"]]]],[11,R[5661],E,E,77,[[["self"]],["cstr"]]],[11,R[5727],E,E,77,[[["self"],["str"]]]],[11,R[5698],E,E,77,[[["self"]],[R[5624]]]],[11,"is_null",E,E,77,[[["self"]],["bool"]]],[11,R[5728],E,E,77,[[["self"]],["bool"]]],[11,R[5699],E,E,77,[[["self"]],[[R[23],[R[5549]]],[R[5549]]]]],[11,"const_extract_element",E,E,77,[[["self"],[R[5560]]],[R[5555]]]],[11,"const_insert_element",E,E,77,[[["self"],[R[5560]],[R[5552]]],[R[5555]]]],[11,R[5700],E,E,77,[[["self"]],["bool"]]],[11,R[5701],E,E,77,[[["self"],["u32"]],[[R[23],[R[5566]]],[R[5566]]]]],[11,R[5702],E,E,77,[[["self"],["u32"],[R[5566]]]]],[11,R[5704],E,E,77,[[["self"],[R[5559]]]]],[11,R[5729],E,R[5730],77,[[["str"],["bool"]],["self"]]],[11,"is_const_string",E,R[5730],77,[[["self"]],["bool"]]],[11,"get_string_constant",E,E,77,[[["self"]],["cstr"]]],[11,"get_element_as_constant",E,E,77,[[["self"],["u32"]],[R[5555]]]],[11,R[5731],E,E,77,[[["self"],[R[5552]]],[R[5555]]]],[11,"const_shuffle_vector",E,E,77,[[["self"],[R[5559]]],[R[5559]]]],[17,"FIRST_CUSTOM_METADATA_KIND_ID",E,E,N,N],[8,"AnyValue",E,"Defines any struct wrapping an LLVM value.",N,N],[11,R[5771],E,R[5772],78,[[["self"]],[R[5754]]]],[8,R[5813],E,"Represents an aggregate value, built on top of other values.",N,N],[11,R[5766],E,R[5732],79,[[["self"]],[R[5558]]]],[11,R[5767],E,E,79,[[["self"]],[R[5555]]]],[11,R[5768],E,E,79,[[["self"],[R[5552]]],[R[5555]]]],[8,"BasicValue",E,"Represents a basic value, which can be used both by…",N,N],[11,R[5769],E,R[5732],80,[[["self"]],[R[5555]]]],[11,R[5733],E,R[5770],80,[[["self"]],[[R[23],[R[5549]]],[R[5549]]]]],[11,R[5734],E,E,80,[[["self"]],[[R[5720]],[R[23],[R[5720]]]]]],[8,R[5814],E,"Represents a value which is permitted in integer math…",N,N],[16,"BaseType",E,E,81,N],[10,"new",E,E,81,[[[R[5735]]],["self"]]],[8,R[5815],E,"Represents a value which is permitted in floating point…",N,N],[16,"BaseType",E,E,82,N],[10,"new",E,E,82,[[[R[5735]]],["self"]]],[8,R[5816],E,E,N,N],[16,"BaseType",E,E,83,N],[10,"new",E,E,83,[[[R[5735]]],["self"]]],[11,"into","inkwell",E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[46],E,E,0,[[["self"]],[T]]],[11,R[47],E,E,0,[[["self"],[T]]]],[11,R[4],E,E,0,[[[U]],[R[3]]]],[11,R[5],E,E,0,[[],[R[3]]]],[11,R[7],E,E,0,[[["self"]],[T]]],[11,R[6],E,E,0,[[["self"]],[T]]],[11,R[8],E,E,0,[[["self"]],[R[9]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[46],E,E,1,[[["self"]],[T]]],[11,R[47],E,E,1,[[["self"],[T]]]],[11,R[4],E,E,1,[[[U]],[R[3]]]],[11,R[5],E,E,1,[[],[R[3]]]],[11,R[7],E,E,1,[[["self"]],[T]]],[11,R[6],E,E,1,[[["self"]],[T]]],[11,R[8],E,E,1,[[["self"]],[R[9]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[46],E,E,2,[[["self"]],[T]]],[11,R[47],E,E,2,[[["self"],[T]]]],[11,R[4],E,E,2,[[[U]],[R[3]]]],[11,R[5],E,E,2,[[],[R[3]]]],[11,R[7],E,E,2,[[["self"]],[T]]],[11,R[6],E,E,2,[[["self"]],[T]]],[11,R[8],E,E,2,[[["self"]],[R[9]]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[46],E,E,3,[[["self"]],[T]]],[11,R[47],E,E,3,[[["self"],[T]]]],[11,R[4],E,E,3,[[[U]],[R[3]]]],[11,R[5],E,E,3,[[],[R[3]]]],[11,R[7],E,E,3,[[["self"]],[T]]],[11,R[6],E,E,3,[[["self"]],[T]]],[11,R[8],E,E,3,[[["self"]],[R[9]]]],[11,"into",E,E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[46],E,E,4,[[["self"]],[T]]],[11,R[47],E,E,4,[[["self"],[T]]]],[11,R[4],E,E,4,[[[U]],[R[3]]]],[11,R[5],E,E,4,[[],[R[3]]]],[11,R[7],E,E,4,[[["self"]],[T]]],[11,R[6],E,E,4,[[["self"]],[T]]],[11,R[8],E,E,4,[[["self"]],[R[9]]]],[11,"into",E,E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[46],E,E,5,[[["self"]],[T]]],[11,R[47],E,E,5,[[["self"],[T]]]],[11,R[4],E,E,5,[[[U]],[R[3]]]],[11,R[5],E,E,5,[[],[R[3]]]],[11,R[7],E,E,5,[[["self"]],[T]]],[11,R[6],E,E,5,[[["self"]],[T]]],[11,R[8],E,E,5,[[["self"]],[R[9]]]],[11,"into",E,E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[46],E,E,6,[[["self"]],[T]]],[11,R[47],E,E,6,[[["self"],[T]]]],[11,R[4],E,E,6,[[[U]],[R[3]]]],[11,R[5],E,E,6,[[],[R[3]]]],[11,R[7],E,E,6,[[["self"]],[T]]],[11,R[6],E,E,6,[[["self"]],[T]]],[11,R[8],E,E,6,[[["self"]],[R[9]]]],[11,"into",E,E,7,[[],[U]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[46],E,E,7,[[["self"]],[T]]],[11,R[47],E,E,7,[[["self"],[T]]]],[11,R[4],E,E,7,[[[U]],[R[3]]]],[11,R[5],E,E,7,[[],[R[3]]]],[11,R[7],E,E,7,[[["self"]],[T]]],[11,R[6],E,E,7,[[["self"]],[T]]],[11,R[8],E,E,7,[[["self"]],[R[9]]]],[11,"into",E,E,8,[[],[U]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[46],E,E,8,[[["self"]],[T]]],[11,R[47],E,E,8,[[["self"],[T]]]],[11,R[4],E,E,8,[[[U]],[R[3]]]],[11,R[5],E,E,8,[[],[R[3]]]],[11,R[7],E,E,8,[[["self"]],[T]]],[11,R[6],E,E,8,[[["self"]],[T]]],[11,R[8],E,E,8,[[["self"]],[R[9]]]],[11,"into",R[5544],E,9,[[],[U]]],[11,R[113],E,E,9,[[["self"]],["string"]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[4],E,E,9,[[[U]],[R[3]]]],[11,R[5],E,E,9,[[],[R[3]]]],[11,R[7],E,E,9,[[["self"]],[T]]],[11,R[6],E,E,9,[[["self"]],[T]]],[11,R[8],E,E,9,[[["self"]],[R[9]]]],[11,"into",R[5736],E,11,[[],[U]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[46],E,E,11,[[["self"]],[T]]],[11,R[47],E,E,11,[[["self"],[T]]]],[11,R[4],E,E,11,[[[U]],[R[3]]]],[11,R[5],E,E,11,[[],[R[3]]]],[11,R[7],E,E,11,[[["self"]],[T]]],[11,R[6],E,E,11,[[["self"]],[T]]],[11,R[8],E,E,11,[[["self"]],[R[9]]]],[11,"into",E,E,10,[[],[U]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[46],E,E,10,[[["self"]],[T]]],[11,R[47],E,E,10,[[["self"],[T]]]],[11,R[4],E,E,10,[[[U]],[R[3]]]],[11,R[5],E,E,10,[[],[R[3]]]],[11,R[7],E,E,10,[[["self"]],[T]]],[11,R[6],E,E,10,[[["self"]],[T]]],[11,R[8],E,E,10,[[["self"]],[R[9]]]],[11,"into",R[5737],E,13,[[],[U]]],[11,"from",E,E,13,[[[T]],[T]]],[11,R[46],E,E,13,[[["self"]],[T]]],[11,R[47],E,E,13,[[["self"],[T]]]],[11,R[4],E,E,13,[[[U]],[R[3]]]],[11,R[5],E,E,13,[[],[R[3]]]],[11,R[7],E,E,13,[[["self"]],[T]]],[11,R[6],E,E,13,[[["self"]],[T]]],[11,R[8],E,E,13,[[["self"]],[R[9]]]],[11,"into",E,E,12,[[],[U]]],[11,"from",E,E,12,[[[T]],[T]]],[11,R[46],E,E,12,[[["self"]],[T]]],[11,R[47],E,E,12,[[["self"],[T]]]],[11,R[4],E,E,12,[[[U]],[R[3]]]],[11,R[5],E,E,12,[[],[R[3]]]],[11,R[7],E,E,12,[[["self"]],[T]]],[11,R[6],E,E,12,[[["self"]],[T]]],[11,R[8],E,E,12,[[["self"]],[R[9]]]],[11,"into",R[5738],E,14,[[],[U]]],[11,"from",E,E,14,[[[T]],[T]]],[11,R[46],E,E,14,[[["self"]],[T]]],[11,R[47],E,E,14,[[["self"],[T]]]],[11,R[4],E,E,14,[[[U]],[R[3]]]],[11,R[5],E,E,14,[[],[R[3]]]],[11,R[7],E,E,14,[[["self"]],[T]]],[11,R[6],E,E,14,[[["self"]],[T]]],[11,R[8],E,E,14,[[["self"]],[R[9]]]],[11,"into",R[5739],E,15,[[],[U]]],[11,"from",E,E,15,[[[T]],[T]]],[11,R[4],E,E,15,[[[U]],[R[3]]]],[11,R[5],E,E,15,[[],[R[3]]]],[11,R[7],E,E,15,[[["self"]],[T]]],[11,R[6],E,E,15,[[["self"]],[T]]],[11,R[8],E,E,15,[[["self"]],[R[9]]]],[11,"into",R[5740],E,16,[[],[U]]],[11,"from",E,E,16,[[[T]],[T]]],[11,R[46],E,E,16,[[["self"]],[T]]],[11,R[47],E,E,16,[[["self"],[T]]]],[11,R[4],E,E,16,[[[U]],[R[3]]]],[11,R[5],E,E,16,[[],[R[3]]]],[11,R[7],E,E,16,[[["self"]],[T]]],[11,R[6],E,E,16,[[["self"]],[T]]],[11,R[8],E,E,16,[[["self"]],[R[9]]]],[11,"into",E,E,84,[[],[U]]],[11,"from",E,E,84,[[[T]],[T]]],[11,R[4],E,E,84,[[[U]],[R[3]]]],[11,R[5],E,E,84,[[],[R[3]]]],[11,R[7],E,E,84,[[["self"]],[T]]],[11,R[6],E,E,84,[[["self"]],[T]]],[11,R[8],E,E,84,[[["self"]],[R[9]]]],[11,"into",R[5741],E,17,[[],[U]]],[11,"from",E,E,17,[[[T]],[T]]],[11,R[4],E,E,17,[[[U]],[R[3]]]],[11,R[5],E,E,17,[[],[R[3]]]],[11,R[7],E,E,17,[[["self"]],[T]]],[11,R[6],E,E,17,[[["self"]],[T]]],[11,R[8],E,E,17,[[["self"]],[R[9]]]],[11,"into",R[5742],E,20,[[],[U]]],[11,"from",E,E,20,[[[T]],[T]]],[11,R[46],E,E,20,[[["self"]],[T]]],[11,R[47],E,E,20,[[["self"],[T]]]],[11,R[4],E,E,20,[[[U]],[R[3]]]],[11,R[5],E,E,20,[[],[R[3]]]],[11,R[7],E,E,20,[[["self"]],[T]]],[11,R[6],E,E,20,[[["self"]],[T]]],[11,R[8],E,E,20,[[["self"]],[R[9]]]],[11,"into",E,E,21,[[],[U]]],[11,"from",E,E,21,[[[T]],[T]]],[11,R[46],E,E,21,[[["self"]],[T]]],[11,R[47],E,E,21,[[["self"],[T]]]],[11,R[4],E,E,21,[[[U]],[R[3]]]],[11,R[5],E,E,21,[[],[R[3]]]],[11,R[7],E,E,21,[[["self"]],[T]]],[11,R[6],E,E,21,[[["self"]],[T]]],[11,R[8],E,E,21,[[["self"]],[R[9]]]],[11,"into",E,E,18,[[],[U]]],[11,R[113],E,E,18,[[["self"]],["string"]]],[11,"from",E,E,18,[[[T]],[T]]],[11,R[4],E,E,18,[[[U]],[R[3]]]],[11,R[5],E,E,18,[[],[R[3]]]],[11,R[7],E,E,18,[[["self"]],[T]]],[11,R[6],E,E,18,[[["self"]],[T]]],[11,R[8],E,E,18,[[["self"]],[R[9]]]],[11,"into",E,E,19,[[],[U]]],[11,R[113],E,E,19,[[["self"]],["string"]]],[11,"from",E,E,19,[[[T]],[T]]],[11,R[4],E,E,19,[[[U]],[R[3]]]],[11,R[5],E,E,19,[[],[R[3]]]],[11,R[7],E,E,19,[[["self"]],[T]]],[11,R[6],E,E,19,[[["self"]],[T]]],[11,R[8],E,E,19,[[["self"]],[R[9]]]],[11,"into",R[5743],E,22,[[],[U]]],[11,"from",E,E,22,[[[T]],[T]]],[11,R[4],E,E,22,[[[U]],[R[3]]]],[11,R[5],E,E,22,[[],[R[3]]]],[11,R[7],E,E,22,[[["self"]],[T]]],[11,R[6],E,E,22,[[["self"]],[T]]],[11,R[8],E,E,22,[[["self"]],[R[9]]]],[11,"into",R[5744],E,25,[[],[U]]],[11,"from",E,E,25,[[[T]],[T]]],[11,R[46],E,E,25,[[["self"]],[T]]],[11,R[47],E,E,25,[[["self"],[T]]]],[11,R[4],E,E,25,[[[U]],[R[3]]]],[11,R[5],E,E,25,[[],[R[3]]]],[11,R[7],E,E,25,[[["self"]],[T]]],[11,R[6],E,E,25,[[["self"]],[T]]],[11,R[8],E,E,25,[[["self"]],[R[9]]]],[11,"into",E,E,23,[[],[U]]],[11,"from",E,E,23,[[[T]],[T]]],[11,R[46],E,E,23,[[["self"]],[T]]],[11,R[47],E,E,23,[[["self"],[T]]]],[11,R[4],E,E,23,[[[U]],[R[3]]]],[11,R[5],E,E,23,[[],[R[3]]]],[11,R[7],E,E,23,[[["self"]],[T]]],[11,R[6],E,E,23,[[["self"]],[T]]],[11,R[8],E,E,23,[[["self"]],[R[9]]]],[11,"into",E,E,24,[[],[U]]],[11,"from",E,E,24,[[[T]],[T]]],[11,R[46],E,E,24,[[["self"]],[T]]],[11,R[47],E,E,24,[[["self"],[T]]]],[11,R[4],E,E,24,[[[U]],[R[3]]]],[11,R[5],E,E,24,[[],[R[3]]]],[11,R[7],E,E,24,[[["self"]],[T]]],[11,R[6],E,E,24,[[["self"]],[T]]],[11,R[8],E,E,24,[[["self"]],[R[9]]]],[11,"into",R[5745],E,26,[[],[U]]],[11,"from",E,E,26,[[[T]],[T]]],[11,R[4],E,E,26,[[[U]],[R[3]]]],[11,R[5],E,E,26,[[],[R[3]]]],[11,R[7],E,E,26,[[["self"]],[T]]],[11,R[6],E,E,26,[[["self"]],[T]]],[11,R[8],E,E,26,[[["self"]],[R[9]]]],[11,"into",E,E,85,[[],[U]]],[11,R[45],E,E,85,[[],["i"]]],[11,"from",E,E,85,[[[T]],[T]]],[11,R[4],E,E,85,[[[U]],[R[3]]]],[11,R[5],E,E,85,[[],[R[3]]]],[11,R[7],E,E,85,[[["self"]],[T]]],[11,R[6],E,E,85,[[["self"]],[T]]],[11,R[8],E,E,85,[[["self"]],[R[9]]]],[11,"into",E,E,27,[[],[U]]],[11,"from",E,E,27,[[[T]],[T]]],[11,R[4],E,E,27,[[[U]],[R[3]]]],[11,R[5],E,E,27,[[],[R[3]]]],[11,R[7],E,E,27,[[["self"]],[T]]],[11,R[6],E,E,27,[[["self"]],[T]]],[11,R[8],E,E,27,[[["self"]],[R[9]]]],[11,"into",E,E,86,[[],[U]]],[11,R[45],E,E,86,[[],["i"]]],[11,"from",E,E,86,[[[T]],[T]]],[11,R[4],E,E,86,[[[U]],[R[3]]]],[11,R[5],E,E,86,[[],[R[3]]]],[11,R[7],E,E,86,[[["self"]],[T]]],[11,R[6],E,E,86,[[["self"]],[T]]],[11,R[8],E,E,86,[[["self"]],[R[9]]]],[11,"into",E,E,28,[[],[U]]],[11,"from",E,E,28,[[[T]],[T]]],[11,R[4],E,E,28,[[[U]],[R[3]]]],[11,R[5],E,E,28,[[],[R[3]]]],[11,R[7],E,E,28,[[["self"]],[T]]],[11,R[6],E,E,28,[[["self"]],[T]]],[11,R[8],E,E,28,[[["self"]],[R[9]]]],[11,"into",E,E,87,[[],[U]]],[11,R[45],E,E,87,[[],["i"]]],[11,"from",E,E,87,[[[T]],[T]]],[11,R[4],E,E,87,[[[U]],[R[3]]]],[11,R[5],E,E,87,[[],[R[3]]]],[11,R[7],E,E,87,[[["self"]],[T]]],[11,R[6],E,E,87,[[["self"]],[T]]],[11,R[8],E,E,87,[[["self"]],[R[9]]]],[11,"into",E,E,29,[[],[U]]],[11,"from",E,E,29,[[[T]],[T]]],[11,R[4],E,E,29,[[[U]],[R[3]]]],[11,R[5],E,E,29,[[],[R[3]]]],[11,R[7],E,E,29,[[["self"]],[T]]],[11,R[6],E,E,29,[[["self"]],[T]]],[11,R[8],E,E,29,[[["self"]],[R[9]]]],[11,"into",R[5746],E,31,[[],[U]]],[11,"from",E,E,31,[[[T]],[T]]],[11,R[4],E,E,31,[[[U]],[R[3]]]],[11,R[5],E,E,31,[[],[R[3]]]],[11,R[7],E,E,31,[[["self"]],[T]]],[11,R[6],E,E,31,[[["self"]],[T]]],[11,R[8],E,E,31,[[["self"]],[R[9]]]],[11,"into",E,E,32,[[],[U]]],[11,"from",E,E,32,[[[T]],[T]]],[11,R[4],E,E,32,[[[U]],[R[3]]]],[11,R[5],E,E,32,[[],[R[3]]]],[11,R[7],E,E,32,[[["self"]],[T]]],[11,R[6],E,E,32,[[["self"]],[T]]],[11,R[8],E,E,32,[[["self"]],[R[9]]]],[11,"into",E,E,33,[[],[U]]],[11,"from",E,E,33,[[[T]],[T]]],[11,R[4],E,E,33,[[[U]],[R[3]]]],[11,R[5],E,E,33,[[],[R[3]]]],[11,R[7],E,E,33,[[["self"]],[T]]],[11,R[6],E,E,33,[[["self"]],[T]]],[11,R[8],E,E,33,[[["self"]],[R[9]]]],[11,"into",R[5747],E,34,[[],[U]]],[11,"from",E,E,34,[[[T]],[T]]],[11,R[46],E,E,34,[[["self"]],[T]]],[11,R[47],E,E,34,[[["self"],[T]]]],[11,R[4],E,E,34,[[[U]],[R[3]]]],[11,R[5],E,E,34,[[],[R[3]]]],[11,R[7],E,E,34,[[["self"]],[T]]],[11,R[6],E,E,34,[[["self"]],[T]]],[11,R[8],E,E,34,[[["self"]],[R[9]]]],[11,"into",E,E,39,[[],[U]]],[11,"from",E,E,39,[[[T]],[T]]],[11,R[4],E,E,39,[[[U]],[R[3]]]],[11,R[5],E,E,39,[[],[R[3]]]],[11,R[7],E,E,39,[[["self"]],[T]]],[11,R[6],E,E,39,[[["self"]],[T]]],[11,R[8],E,E,39,[[["self"]],[R[9]]]],[11,"into",E,E,40,[[],[U]]],[11,"from",E,E,40,[[[T]],[T]]],[11,R[4],E,E,40,[[[U]],[R[3]]]],[11,R[5],E,E,40,[[],[R[3]]]],[11,R[7],E,E,40,[[["self"]],[T]]],[11,R[6],E,E,40,[[["self"]],[T]]],[11,R[8],E,E,40,[[["self"]],[R[9]]]],[11,"into",E,E,41,[[],[U]]],[11,"from",E,E,41,[[[T]],[T]]],[11,R[4],E,E,41,[[[U]],[R[3]]]],[11,R[5],E,E,41,[[],[R[3]]]],[11,R[7],E,E,41,[[["self"]],[T]]],[11,R[6],E,E,41,[[["self"]],[T]]],[11,R[8],E,E,41,[[["self"]],[R[9]]]],[11,"into",E,E,35,[[],[U]]],[11,"from",E,E,35,[[[T]],[T]]],[11,R[4],E,E,35,[[[U]],[R[3]]]],[11,R[5],E,E,35,[[],[R[3]]]],[11,R[7],E,E,35,[[["self"]],[T]]],[11,R[6],E,E,35,[[["self"]],[T]]],[11,R[8],E,E,35,[[["self"]],[R[9]]]],[11,"into",E,E,36,[[],[U]]],[11,"from",E,E,36,[[[T]],[T]]],[11,R[4],E,E,36,[[[U]],[R[3]]]],[11,R[5],E,E,36,[[],[R[3]]]],[11,R[7],E,E,36,[[["self"]],[T]]],[11,R[6],E,E,36,[[["self"]],[T]]],[11,R[8],E,E,36,[[["self"]],[R[9]]]],[11,"into",E,E,37,[[],[U]]],[11,"from",E,E,37,[[[T]],[T]]],[11,R[4],E,E,37,[[[U]],[R[3]]]],[11,R[5],E,E,37,[[],[R[3]]]],[11,R[7],E,E,37,[[["self"]],[T]]],[11,R[6],E,E,37,[[["self"]],[T]]],[11,R[8],E,E,37,[[["self"]],[R[9]]]],[11,"into",E,E,38,[[],[U]]],[11,"from",E,E,38,[[[T]],[T]]],[11,R[4],E,E,38,[[[U]],[R[3]]]],[11,R[5],E,E,38,[[],[R[3]]]],[11,R[7],E,E,38,[[["self"]],[T]]],[11,R[6],E,E,38,[[["self"]],[T]]],[11,R[8],E,E,38,[[["self"]],[R[9]]]],[11,"into",R[5748],E,45,[[],[U]]],[11,"from",E,E,45,[[[T]],[T]]],[11,R[46],E,E,45,[[["self"]],[T]]],[11,R[47],E,E,45,[[["self"],[T]]]],[11,R[4],E,E,45,[[[U]],[R[3]]]],[11,R[5],E,E,45,[[],[R[3]]]],[11,R[7],E,E,45,[[["self"]],[T]]],[11,R[6],E,E,45,[[["self"]],[T]]],[11,R[8],E,E,45,[[["self"]],[R[9]]]],[11,"into",E,E,46,[[],[U]]],[11,"from",E,E,46,[[[T]],[T]]],[11,R[46],E,E,46,[[["self"]],[T]]],[11,R[47],E,E,46,[[["self"],[T]]]],[11,R[4],E,E,46,[[[U]],[R[3]]]],[11,R[5],E,E,46,[[],[R[3]]]],[11,R[7],E,E,46,[[["self"]],[T]]],[11,R[6],E,E,46,[[["self"]],[T]]],[11,R[8],E,E,46,[[["self"]],[R[9]]]],[11,"into",E,E,47,[[],[U]]],[11,"from",E,E,47,[[[T]],[T]]],[11,R[46],E,E,47,[[["self"]],[T]]],[11,R[47],E,E,47,[[["self"],[T]]]],[11,R[4],E,E,47,[[[U]],[R[3]]]],[11,R[5],E,E,47,[[],[R[3]]]],[11,R[7],E,E,47,[[["self"]],[T]]],[11,R[6],E,E,47,[[["self"]],[T]]],[11,R[8],E,E,47,[[["self"]],[R[9]]]],[11,"into",E,E,48,[[],[U]]],[11,"from",E,E,48,[[[T]],[T]]],[11,R[46],E,E,48,[[["self"]],[T]]],[11,R[47],E,E,48,[[["self"],[T]]]],[11,R[4],E,E,48,[[[U]],[R[3]]]],[11,R[5],E,E,48,[[],[R[3]]]],[11,R[7],E,E,48,[[["self"]],[T]]],[11,R[6],E,E,48,[[["self"]],[T]]],[11,R[8],E,E,48,[[["self"]],[R[9]]]],[11,"into",E,E,49,[[],[U]]],[11,"from",E,E,49,[[[T]],[T]]],[11,R[46],E,E,49,[[["self"]],[T]]],[11,R[47],E,E,49,[[["self"],[T]]]],[11,R[4],E,E,49,[[[U]],[R[3]]]],[11,R[5],E,E,49,[[],[R[3]]]],[11,R[7],E,E,49,[[["self"]],[T]]],[11,R[6],E,E,49,[[["self"]],[T]]],[11,R[8],E,E,49,[[["self"]],[R[9]]]],[11,"into",E,E,50,[[],[U]]],[11,"from",E,E,50,[[[T]],[T]]],[11,R[46],E,E,50,[[["self"]],[T]]],[11,R[47],E,E,50,[[["self"],[T]]]],[11,R[4],E,E,50,[[[U]],[R[3]]]],[11,R[5],E,E,50,[[],[R[3]]]],[11,R[7],E,E,50,[[["self"]],[T]]],[11,R[6],E,E,50,[[["self"]],[T]]],[11,R[8],E,E,50,[[["self"]],[R[9]]]],[11,"into",E,E,51,[[],[U]]],[11,"from",E,E,51,[[[T]],[T]]],[11,R[46],E,E,51,[[["self"]],[T]]],[11,R[47],E,E,51,[[["self"],[T]]]],[11,R[4],E,E,51,[[[U]],[R[3]]]],[11,R[5],E,E,51,[[],[R[3]]]],[11,R[7],E,E,51,[[["self"]],[T]]],[11,R[6],E,E,51,[[["self"]],[T]]],[11,R[8],E,E,51,[[["self"]],[R[9]]]],[11,"into",E,E,52,[[],[U]]],[11,"from",E,E,52,[[[T]],[T]]],[11,R[46],E,E,52,[[["self"]],[T]]],[11,R[47],E,E,52,[[["self"],[T]]]],[11,R[4],E,E,52,[[[U]],[R[3]]]],[11,R[5],E,E,52,[[],[R[3]]]],[11,R[7],E,E,52,[[["self"]],[T]]],[11,R[6],E,E,52,[[["self"]],[T]]],[11,R[8],E,E,52,[[["self"]],[R[9]]]],[11,"into",E,E,42,[[],[U]]],[11,"from",E,E,42,[[[T]],[T]]],[11,R[46],E,E,42,[[["self"]],[T]]],[11,R[47],E,E,42,[[["self"],[T]]]],[11,R[4],E,E,42,[[[U]],[R[3]]]],[11,R[5],E,E,42,[[],[R[3]]]],[11,R[7],E,E,42,[[["self"]],[T]]],[11,R[6],E,E,42,[[["self"]],[T]]],[11,R[8],E,E,42,[[["self"]],[R[9]]]],[11,"into",E,E,43,[[],[U]]],[11,"from",E,E,43,[[[T]],[T]]],[11,R[46],E,E,43,[[["self"]],[T]]],[11,R[47],E,E,43,[[["self"],[T]]]],[11,R[4],E,E,43,[[[U]],[R[3]]]],[11,R[5],E,E,43,[[],[R[3]]]],[11,R[7],E,E,43,[[["self"]],[T]]],[11,R[6],E,E,43,[[["self"]],[T]]],[11,R[8],E,E,43,[[["self"]],[R[9]]]],[11,"into",E,E,44,[[],[U]]],[11,"from",E,E,44,[[[T]],[T]]],[11,R[46],E,E,44,[[["self"]],[T]]],[11,R[47],E,E,44,[[["self"],[T]]]],[11,R[4],E,E,44,[[[U]],[R[3]]]],[11,R[5],E,E,44,[[],[R[3]]]],[11,R[7],E,E,44,[[["self"]],[T]]],[11,R[6],E,E,44,[[["self"]],[T]]],[11,R[8],E,E,44,[[["self"]],[R[9]]]],[11,"into",R[5749],E,64,[[],[U]]],[11,"from",E,E,64,[[[T]],[T]]],[11,R[46],E,E,64,[[["self"]],[T]]],[11,R[47],E,E,64,[[["self"],[T]]]],[11,R[4],E,E,64,[[[U]],[R[3]]]],[11,R[5],E,E,64,[[],[R[3]]]],[11,R[7],E,E,64,[[["self"]],[T]]],[11,R[6],E,E,64,[[["self"]],[T]]],[11,R[8],E,E,64,[[["self"]],[R[9]]]],[11,"into",E,E,65,[[],[U]]],[11,"from",E,E,65,[[[T]],[T]]],[11,R[46],E,E,65,[[["self"]],[T]]],[11,R[47],E,E,65,[[["self"],[T]]]],[11,R[4],E,E,65,[[[U]],[R[3]]]],[11,R[5],E,E,65,[[],[R[3]]]],[11,R[7],E,E,65,[[["self"]],[T]]],[11,R[6],E,E,65,[[["self"]],[T]]],[11,R[8],E,E,65,[[["self"]],[R[9]]]],[11,"into",E,E,66,[[],[U]]],[11,"from",E,E,66,[[[T]],[T]]],[11,R[46],E,E,66,[[["self"]],[T]]],[11,R[47],E,E,66,[[["self"],[T]]]],[11,R[4],E,E,66,[[[U]],[R[3]]]],[11,R[5],E,E,66,[[],[R[3]]]],[11,R[7],E,E,66,[[["self"]],[T]]],[11,R[6],E,E,66,[[["self"]],[T]]],[11,R[8],E,E,66,[[["self"]],[R[9]]]],[11,"into",E,E,67,[[],[U]]],[11,"from",E,E,67,[[[T]],[T]]],[11,R[46],E,E,67,[[["self"]],[T]]],[11,R[47],E,E,67,[[["self"],[T]]]],[11,R[4],E,E,67,[[[U]],[R[3]]]],[11,R[5],E,E,67,[[],[R[3]]]],[11,R[7],E,E,67,[[["self"]],[T]]],[11,R[6],E,E,67,[[["self"]],[T]]],[11,R[8],E,E,67,[[["self"]],[R[9]]]],[11,"into",E,E,68,[[],[U]]],[11,"from",E,E,68,[[[T]],[T]]],[11,R[46],E,E,68,[[["self"]],[T]]],[11,R[47],E,E,68,[[["self"],[T]]]],[11,R[4],E,E,68,[[[U]],[R[3]]]],[11,R[5],E,E,68,[[],[R[3]]]],[11,R[7],E,E,68,[[["self"]],[T]]],[11,R[6],E,E,68,[[["self"]],[T]]],[11,R[8],E,E,68,[[["self"]],[R[9]]]],[11,"into",E,E,69,[[],[U]]],[11,"from",E,E,69,[[[T]],[T]]],[11,R[4],E,E,69,[[[U]],[R[3]]]],[11,R[5],E,E,69,[[],[R[3]]]],[11,R[7],E,E,69,[[["self"]],[T]]],[11,R[6],E,E,69,[[["self"]],[T]]],[11,R[8],E,E,69,[[["self"]],[R[9]]]],[11,"into",E,E,70,[[],[U]]],[11,"from",E,E,70,[[[T]],[T]]],[11,R[46],E,E,70,[[["self"]],[T]]],[11,R[47],E,E,70,[[["self"],[T]]]],[11,R[4],E,E,70,[[[U]],[R[3]]]],[11,R[5],E,E,70,[[],[R[3]]]],[11,R[7],E,E,70,[[["self"]],[T]]],[11,R[6],E,E,70,[[["self"]],[T]]],[11,R[8],E,E,70,[[["self"]],[R[9]]]],[11,"into",E,E,71,[[],[U]]],[11,"from",E,E,71,[[[T]],[T]]],[11,R[46],E,E,71,[[["self"]],[T]]],[11,R[47],E,E,71,[[["self"],[T]]]],[11,R[4],E,E,71,[[[U]],[R[3]]]],[11,R[5],E,E,71,[[],[R[3]]]],[11,R[7],E,E,71,[[["self"]],[T]]],[11,R[6],E,E,71,[[["self"]],[T]]],[11,R[8],E,E,71,[[["self"]],[R[9]]]],[11,"into",E,E,72,[[],[U]]],[11,"from",E,E,72,[[[T]],[T]]],[11,R[46],E,E,72,[[["self"]],[T]]],[11,R[47],E,E,72,[[["self"],[T]]]],[11,R[4],E,E,72,[[[U]],[R[3]]]],[11,R[5],E,E,72,[[],[R[3]]]],[11,R[7],E,E,72,[[["self"]],[T]]],[11,R[6],E,E,72,[[["self"]],[T]]],[11,R[8],E,E,72,[[["self"]],[R[9]]]],[11,"into",E,E,73,[[],[U]]],[11,"from",E,E,73,[[[T]],[T]]],[11,R[46],E,E,73,[[["self"]],[T]]],[11,R[47],E,E,73,[[["self"],[T]]]],[11,R[4],E,E,73,[[[U]],[R[3]]]],[11,R[5],E,E,73,[[],[R[3]]]],[11,R[7],E,E,73,[[["self"]],[T]]],[11,R[6],E,E,73,[[["self"]],[T]]],[11,R[8],E,E,73,[[["self"]],[R[9]]]],[11,"into",E,E,74,[[],[U]]],[11,"from",E,E,74,[[[T]],[T]]],[11,R[46],E,E,74,[[["self"]],[T]]],[11,R[47],E,E,74,[[["self"],[T]]]],[11,R[4],E,E,74,[[[U]],[R[3]]]],[11,R[5],E,E,74,[[],[R[3]]]],[11,R[7],E,E,74,[[["self"]],[T]]],[11,R[6],E,E,74,[[["self"]],[T]]],[11,R[8],E,E,74,[[["self"]],[R[9]]]],[11,"into",E,E,75,[[],[U]]],[11,"from",E,E,75,[[[T]],[T]]],[11,R[46],E,E,75,[[["self"]],[T]]],[11,R[47],E,E,75,[[["self"],[T]]]],[11,R[4],E,E,75,[[[U]],[R[3]]]],[11,R[5],E,E,75,[[],[R[3]]]],[11,R[7],E,E,75,[[["self"]],[T]]],[11,R[6],E,E,75,[[["self"]],[T]]],[11,R[8],E,E,75,[[["self"]],[R[9]]]],[11,"into",E,E,76,[[],[U]]],[11,"from",E,E,76,[[[T]],[T]]],[11,R[46],E,E,76,[[["self"]],[T]]],[11,R[47],E,E,76,[[["self"],[T]]]],[11,R[4],E,E,76,[[[U]],[R[3]]]],[11,R[5],E,E,76,[[],[R[3]]]],[11,R[7],E,E,76,[[["self"]],[T]]],[11,R[6],E,E,76,[[["self"]],[T]]],[11,R[8],E,E,76,[[["self"]],[R[9]]]],[11,"into",E,E,77,[[],[U]]],[11,"from",E,E,77,[[[T]],[T]]],[11,R[46],E,E,77,[[["self"]],[T]]],[11,R[47],E,E,77,[[["self"],[T]]]],[11,R[4],E,E,77,[[[U]],[R[3]]]],[11,R[5],E,E,77,[[],[R[3]]]],[11,R[7],E,E,77,[[["self"]],[T]]],[11,R[6],E,E,77,[[["self"]],[T]]],[11,R[8],E,E,77,[[["self"]],[R[9]]]],[11,"into",E,E,58,[[],[U]]],[11,"from",E,E,58,[[[T]],[T]]],[11,R[46],E,E,58,[[["self"]],[T]]],[11,R[47],E,E,58,[[["self"],[T]]]],[11,R[4],E,E,58,[[[U]],[R[3]]]],[11,R[5],E,E,58,[[],[R[3]]]],[11,R[7],E,E,58,[[["self"]],[T]]],[11,R[6],E,E,58,[[["self"]],[T]]],[11,R[8],E,E,58,[[["self"]],[R[9]]]],[11,"into",E,E,59,[[],[U]]],[11,"from",E,E,59,[[[T]],[T]]],[11,R[46],E,E,59,[[["self"]],[T]]],[11,R[47],E,E,59,[[["self"],[T]]]],[11,R[4],E,E,59,[[[U]],[R[3]]]],[11,R[5],E,E,59,[[],[R[3]]]],[11,R[7],E,E,59,[[["self"]],[T]]],[11,R[6],E,E,59,[[["self"]],[T]]],[11,R[8],E,E,59,[[["self"]],[R[9]]]],[11,"into",E,E,60,[[],[U]]],[11,"from",E,E,60,[[[T]],[T]]],[11,R[46],E,E,60,[[["self"]],[T]]],[11,R[47],E,E,60,[[["self"],[T]]]],[11,R[4],E,E,60,[[[U]],[R[3]]]],[11,R[5],E,E,60,[[],[R[3]]]],[11,R[7],E,E,60,[[["self"]],[T]]],[11,R[6],E,E,60,[[["self"]],[T]]],[11,R[8],E,E,60,[[["self"]],[R[9]]]],[11,"into",E,E,61,[[],[U]]],[11,"from",E,E,61,[[[T]],[T]]],[11,R[46],E,E,61,[[["self"]],[T]]],[11,R[47],E,E,61,[[["self"],[T]]]],[11,R[4],E,E,61,[[[U]],[R[3]]]],[11,R[5],E,E,61,[[],[R[3]]]],[11,R[7],E,E,61,[[["self"]],[T]]],[11,R[6],E,E,61,[[["self"]],[T]]],[11,R[8],E,E,61,[[["self"]],[R[9]]]],[11,"into",E,E,62,[[],[U]]],[11,"from",E,E,62,[[[T]],[T]]],[11,R[46],E,E,62,[[["self"]],[T]]],[11,R[47],E,E,62,[[["self"],[T]]]],[11,R[4],E,E,62,[[[U]],[R[3]]]],[11,R[5],E,E,62,[[],[R[3]]]],[11,R[7],E,E,62,[[["self"]],[T]]],[11,R[6],E,E,62,[[["self"]],[T]]],[11,R[8],E,E,62,[[["self"]],[R[9]]]],[11,"into",E,E,63,[[],[U]]],[11,"from",E,E,63,[[[T]],[T]]],[11,R[46],E,E,63,[[["self"]],[T]]],[11,R[47],E,E,63,[[["self"],[T]]]],[11,R[4],E,E,63,[[[U]],[R[3]]]],[11,R[5],E,E,63,[[],[R[3]]]],[11,R[7],E,E,63,[[["self"]],[T]]],[11,R[6],E,E,63,[[["self"]],[T]]],[11,R[8],E,E,63,[[["self"]],[R[9]]]],[11,"create",R[5744],E,25,[[[R[6]]],[R[5750]]]],[11,R[5751],E,E,25,[[["self"],[R[5589]]],["bool"]]],[11,"create",R[5749],E,68,[[[R[6]]],[R[5750]]]],[11,R[5751],E,E,68,[[["self"],[R[5589]]],["bool"]]],[11,"new",E,E,72,[[[R[5735]]],["self"]]],[11,"new",E,E,77,[[[R[5735]]],["self"]]],[11,"new",E,E,67,[[[R[5735]]],["self"]]],[11,"new",E,E,77,[[[R[5735]]],["self"]]],[11,"new",E,E,75,[[[R[5735]]],["self"]]],[11,"new",E,E,77,[[[R[5735]]],["self"]]],[11,R[83],R[5747],E,34,[[],["self"]]],[11,R[83],"inkwell","Returns the default value for `OptimizationLevel`, namely…",5,[[],["self"]]],[11,R[83],E,"Returns the default value for `GlobalVisibility`, namely…",6,[[],["self"]]],[11,R[83],E,"Returns the default value for `DLLStorageClass`, namely…",8,[[],["self"]]],[11,"clone",R[5736],E,11,[[["self"]],[R[996]]]],[11,"clone",E,E,10,[[["self"]],[R[5679]]]],[11,"clone",R[5737],E,12,[[["self"]],[R[5545]]]],[11,"clone",E,E,13,[[["self"]],["comdat"]]],[11,"clone",R[5738],E,14,[[["self"]],[R[5128]]]],[11,"clone",R[5740],E,16,[[["self"]],["context"]]],[11,"clone",R[5742],E,20,[[["self"]],[R[5579]]]],[11,"clone",E,E,21,[[["self"]],[R[5571]]]],[11,"clone",R[5744],E,23,[[["self"]],["linkage"]]],[11,"clone",E,E,25,[[["self"]],["self"]]],[11,"clone",E,E,24,[[["self"]],[R[5584]]]],[11,"clone",R[5747],E,34,[[["self"]],[R[5596]]]],[11,"clone",R[5748],E,45,[[["self"]],[R[5618]]]],[11,"clone",E,E,42,[[["self"]],[R[5667]]]],[11,"clone",E,E,43,[[["self"]],[R[5578]]]],[11,"clone",E,E,46,[[["self"]],[R[5563]]]],[11,"clone",E,E,47,[[["self"]],[R[5614]]]],[11,"clone",E,E,44,[[["self"]],[R[5752]]]],[11,"clone",E,E,48,[[["self"]],["inttype"]]],[11,"clone",E,E,49,[[["self"]],[R[5613]]]],[11,"clone",E,E,50,[[["self"]],[R[5602]]]],[11,"clone",E,E,51,[[["self"]],[R[5624]]]],[11,"clone",E,E,52,[[["self"]],[R[5758]]]],[11,"clone",R[5749],E,64,[[["self"]],[R[5616]]]],[11,"clone",E,E,65,[[["self"]],[R[5720]]]],[11,"clone",E,E,66,[[["self"]],[R[5753]]]],[11,"clone",E,E,59,[[["self"]],[R[5558]]]],[11,"clone",E,E,58,[[["self"]],[R[5754]]]],[11,"clone",E,E,60,[[["self"]],[R[5555]]]],[11,"clone",E,E,61,[[["self"]],[R[5724]]]],[11,"clone",E,E,67,[[["self"]],[R[5637]]]],[11,"clone",E,E,68,[[["self"]],[R[5548]]]],[11,"clone",E,E,70,[[["self"]],[R[5001]]]],[11,"clone",E,E,62,[[["self"]],[R[5715]]]],[11,"clone",E,E,63,[[["self"]],[R[5718]]]],[11,"clone",E,"Creates a clone of this `InstructionValue`, and returns…",71,[[["self"]],["self"]]],[11,"clone",E,E,72,[[["self"]],[R[5560]]]],[11,"clone",E,E,73,[[["self"]],[R[5566]]]],[11,"clone",E,E,74,[[["self"]],[R[5757]]]],[11,"clone",E,E,75,[[["self"]],[R[5550]]]],[11,"clone",E,E,76,[[["self"]],[R[5562]]]],[11,"clone",E,E,77,[[["self"]],[R[5559]]]],[11,"clone","inkwell",E,0,[[["self"]],[R[5580]]]],[11,"clone",E,E,1,[[["self"]],[R[5721]]]],[11,"clone",E,E,2,[[["self"]],[R[5703]]]],[11,"clone",E,E,3,[[["self"]],[R[5561]]]],[11,"clone",E,E,4,[[["self"]],[R[5755]]]],[11,"clone",E,E,5,[[["self"]],[R[5588]]]],[11,"clone",E,E,6,[[["self"]],[R[5714]]]],[11,"clone",E,E,7,[[["self"]],[R[5713]]]],[11,"clone",E,E,8,[[["self"]],[R[5712]]]],[11,"into",R[5749],E,68,[[],[[R[5550]],["either",[R[5548],R[5550]]],[R[5548]]]]],[11,"into",E,E,75,[[],[[R[5550]],["either",[R[5548],R[5550]]],[R[5548]]]]],[11,"into",E,E,63,[[],[R[5830]]]],[11,"into","inkwell",E,3,[[],[R[3183]]]],[11,"into",E,E,4,[[],[R[3184]]]],[11,R[77],R[5737],E,12,[[["self"],[R[5545]]],[[R[50]],[R[23],[R[50]]]]]],[11,R[77],R[5744],E,23,[[["self"],["linkage"]],[[R[50]],[R[23],[R[50]]]]]],[11,R[77],E,E,24,[[["self"],[R[5584]]],[[R[50]],[R[23],[R[50]]]]]],[11,R[77],R[5749],E,62,[[["self"],[R[5715]]],[[R[50]],[R[23],[R[50]]]]]],[11,R[77],"inkwell",E,1,[[["self"],[R[5721]]],[[R[50]],[R[23],[R[50]]]]]],[11,R[77],E,E,2,[[["self"],[R[5703]]],[[R[50]],[R[23],[R[50]]]]]],[11,R[77],E,E,3,[[["self"],[R[5561]]],[[R[50]],[R[23],[R[50]]]]]],[11,R[77],E,E,4,[[["self"],[R[5755]]],[[R[50]],[R[23],[R[50]]]]]],[11,R[77],E,E,6,[[["self"],[R[5714]]],[[R[50]],[R[23],[R[50]]]]]],[11,R[77],E,E,8,[[["self"],[R[5712]]],[[R[50]],[R[23],[R[50]]]]]],[11,"cmp",R[5737],E,12,[[["self"],[R[5545]]],[R[50]]]],[11,"cmp",R[5744],E,23,[[["self"],["linkage"]],[R[50]]]],[11,"cmp",E,E,24,[[["self"],[R[5584]]],[R[50]]]],[11,"cmp",R[5749],E,62,[[["self"],[R[5715]]],[R[50]]]],[11,"cmp","inkwell",E,1,[[["self"],[R[5721]]],[R[50]]]],[11,"cmp",E,E,2,[[["self"],[R[5703]]],[R[50]]]],[11,"cmp",E,E,3,[[["self"],[R[5561]]],[R[50]]]],[11,"cmp",E,E,4,[[["self"],[R[5755]]],[R[50]]]],[11,"cmp",E,E,6,[[["self"],[R[5714]]],[R[50]]]],[11,"cmp",E,E,8,[[["self"],[R[5712]]],[R[50]]]],[11,"eq",R[5544],E,9,[[["self"],[R[5573]]],["bool"]]],[11,"eq",R[5736],E,11,[[["self"],[R[996]]],["bool"]]],[11,"ne",E,E,11,[[["self"],[R[996]]],["bool"]]],[11,"eq",E,E,10,[[["self"],[R[5679]]],["bool"]]],[11,"ne",E,E,10,[[["self"],[R[5679]]],["bool"]]],[11,"eq",R[5737],E,12,[[["self"],[R[5545]]],["bool"]]],[11,"eq",E,E,13,[[["self"],["comdat"]],["bool"]]],[11,"ne",E,E,13,[[["self"],["comdat"]],["bool"]]],[11,"eq",R[5738],E,14,[[["self"],[R[5128]]],["bool"]]],[11,"ne",E,E,14,[[["self"],[R[5128]]],["bool"]]],[11,"eq",R[5740],E,16,[[["self"],["context"]],["bool"]]],[11,"ne",E,E,16,[[["self"],["context"]],["bool"]]],[11,"eq",E,E,84,[[["self"],[R[5577]]],["bool"]]],[11,"ne",E,E,84,[[["self"],[R[5577]]],["bool"]]],[11,"eq",R[5741],E,17,[[["self"],[R[5582]]],["bool"]]],[11,"eq",R[5742],E,18,[[["self"],[R[5570]]],["bool"]]],[11,"eq",E,E,19,[[["self"],[R[5568]]],["bool"]]],[11,"ne",E,E,19,[[["self"],[R[5568]]],["bool"]]],[11,"eq",E,E,20,[[["self"],[R[5579]]],["bool"]]],[11,"ne",E,E,20,[[["self"],[R[5579]]],["bool"]]],[11,"eq",R[5744],E,23,[[["self"],["linkage"]],["bool"]]],[11,"eq",E,E,25,[[["self"],["module"]],["bool"]]],[11,"ne",E,E,25,[[["self"],["module"]],["bool"]]],[11,"eq",E,E,24,[[["self"],[R[5584]]],["bool"]]],[11,"eq",R[5747],E,35,[[["self"],["codemodel"]],["bool"]]],[11,"eq",E,E,36,[[["self"],["relocmode"]],["bool"]]],[11,"eq",E,E,37,[[["self"],[R[5817]]],["bool"]]],[11,"eq",E,E,34,[[["self"],[R[5596]]],["bool"]]],[11,"ne",E,E,34,[[["self"],[R[5596]]],["bool"]]],[11,"eq",E,E,39,[[["self"],["target"]],["bool"]]],[11,"ne",E,E,39,[[["self"],["target"]],["bool"]]],[11,"eq",E,E,38,[[["self"],[R[5756]]],["bool"]]],[11,"eq",E,E,41,[[["self"],[R[5601]]],["bool"]]],[11,"ne",E,E,41,[[["self"],[R[5601]]],["bool"]]],[11,"eq",R[5748],E,45,[[["self"],[R[5618]]],["bool"]]],[11,"ne",E,E,45,[[["self"],[R[5618]]],["bool"]]],[11,"eq",E,E,42,[[["self"],[R[5667]]],["bool"]]],[11,"ne",E,E,42,[[["self"],[R[5667]]],["bool"]]],[11,"eq",E,E,43,[[["self"],[R[5578]]],["bool"]]],[11,"ne",E,E,43,[[["self"],[R[5578]]],["bool"]]],[11,"eq",E,E,46,[[["self"],[R[5563]]],["bool"]]],[11,"ne",E,E,46,[[["self"],[R[5563]]],["bool"]]],[11,"eq",E,E,47,[[["self"],[R[5614]]],["bool"]]],[11,"ne",E,E,47,[[["self"],[R[5614]]],["bool"]]],[11,"eq",E,E,44,[[["self"],[R[5752]]],["bool"]]],[11,"eq",E,E,48,[[["self"],["inttype"]],["bool"]]],[11,"ne",E,E,48,[[["self"],["inttype"]],["bool"]]],[11,"eq",E,E,49,[[["self"],[R[5613]]],["bool"]]],[11,"ne",E,E,49,[[["self"],[R[5613]]],["bool"]]],[11,"eq",E,E,50,[[["self"],[R[5602]]],["bool"]]],[11,"ne",E,E,50,[[["self"],[R[5602]]],["bool"]]],[11,"eq",E,E,51,[[["self"],[R[5624]]],["bool"]]],[11,"ne",E,E,51,[[["self"],[R[5624]]],["bool"]]],[11,"eq",E,E,52,[[["self"],[R[5758]]],["bool"]]],[11,"ne",E,E,52,[[["self"],[R[5758]]],["bool"]]],[11,"eq",R[5749],E,64,[[["self"],[R[5616]]],["bool"]]],[11,"ne",E,E,64,[[["self"],[R[5616]]],["bool"]]],[11,"eq",E,E,65,[[["self"],[R[5720]]],["bool"]]],[11,"ne",E,E,65,[[["self"],[R[5720]]],["bool"]]],[11,"eq",E,E,66,[[["self"],[R[5753]]],["bool"]]],[11,"ne",E,E,66,[[["self"],[R[5753]]],["bool"]]],[11,"eq",E,E,59,[[["self"],[R[5558]]],["bool"]]],[11,"ne",E,E,59,[[["self"],[R[5558]]],["bool"]]],[11,"eq",E,E,59,[[["self"],[R[5616]]],["bool"]]],[11,"eq",E,E,64,[[["self"],[R[5558]]],["bool"]]],[11,"eq",E,E,59,[[["self"],[R[5562]]],["bool"]]],[11,"eq",E,E,76,[[["self"],[R[5558]]],["bool"]]],[11,"eq",E,E,58,[[["self"],[R[5754]]],["bool"]]],[11,"ne",E,E,58,[[["self"],[R[5754]]],["bool"]]],[11,"eq",E,E,58,[[["self"],[R[5616]]],["bool"]]],[11,"eq",E,E,64,[[["self"],[R[5754]]],["bool"]]],[11,"eq",E,E,58,[[["self"],[R[5560]]],["bool"]]],[11,"eq",E,E,72,[[["self"],[R[5754]]],["bool"]]],[11,"eq",E,E,58,[[["self"],[R[5637]]],["bool"]]],[11,"eq",E,E,67,[[["self"],[R[5754]]],["bool"]]],[11,"eq",E,E,58,[[["self"],[R[5757]]],["bool"]]],[11,"eq",E,E,74,[[["self"],[R[5754]]],["bool"]]],[11,"eq",E,E,58,[[["self"],[R[5548]]],["bool"]]],[11,"eq",E,E,68,[[["self"],[R[5754]]],["bool"]]],[11,"eq",E,E,58,[[["self"],[R[5550]]],["bool"]]],[11,"eq",E,E,75,[[["self"],[R[5754]]],["bool"]]],[11,"eq",E,E,58,[[["self"],[R[5562]]],["bool"]]],[11,"eq",E,E,76,[[["self"],[R[5754]]],["bool"]]],[11,"eq",E,E,58,[[["self"],[R[5559]]],["bool"]]],[11,"eq",E,E,77,[[["self"],[R[5754]]],["bool"]]],[11,"eq",E,E,58,[[["self"],[R[5549]]],["bool"]]],[11,"eq",E,E,71,[[["self"],[R[5754]]],["bool"]]],[11,"eq",E,E,60,[[["self"],[R[5555]]],["bool"]]],[11,"ne",E,E,60,[[["self"],[R[5555]]],["bool"]]],[11,"eq",E,E,60,[[["self"],[R[5616]]],["bool"]]],[11,"eq",E,E,64,[[["self"],[R[5555]]],["bool"]]],[11,"eq",E,E,60,[[["self"],[R[5560]]],["bool"]]],[11,"eq",E,E,72,[[["self"],[R[5555]]],["bool"]]],[11,"eq",E,E,60,[[["self"],[R[5637]]],["bool"]]],[11,"eq",E,E,67,[[["self"],[R[5555]]],["bool"]]],[11,"eq",E,E,60,[[["self"],[R[5550]]],["bool"]]],[11,"eq",E,E,75,[[["self"],[R[5555]]],["bool"]]],[11,"eq",E,E,60,[[["self"],[R[5562]]],["bool"]]],[11,"eq",E,E,76,[[["self"],[R[5555]]],["bool"]]],[11,"eq",E,E,60,[[["self"],[R[5559]]],["bool"]]],[11,"eq",E,E,77,[[["self"],[R[5555]]],["bool"]]],[11,"eq",E,E,61,[[["self"],[R[5724]]],["bool"]]],[11,"ne",E,E,61,[[["self"],[R[5724]]],["bool"]]],[11,"eq",E,E,61,[[["self"],[R[5616]]],["bool"]]],[11,"eq",E,E,64,[[["self"],[R[5724]]],["bool"]]],[11,"eq",E,E,61,[[["self"],[R[5560]]],["bool"]]],[11,"eq",E,E,72,[[["self"],[R[5724]]],["bool"]]],[11,"eq",E,E,61,[[["self"],[R[5637]]],["bool"]]],[11,"eq",E,E,67,[[["self"],[R[5724]]],["bool"]]],[11,"eq",E,E,61,[[["self"],[R[5550]]],["bool"]]],[11,"eq",E,E,75,[[["self"],[R[5724]]],["bool"]]],[11,"eq",E,E,61,[[["self"],[R[5562]]],["bool"]]],[11,"eq",E,E,76,[[["self"],[R[5724]]],["bool"]]],[11,"eq",E,E,61,[[["self"],[R[5559]]],["bool"]]],[11,"eq",E,E,77,[[["self"],[R[5724]]],["bool"]]],[11,"eq",E,E,61,[[["self"],[R[5566]]],["bool"]]],[11,"eq",E,E,73,[[["self"],[R[5724]]],["bool"]]],[11,"eq",E,E,67,[[["self"],[R[5637]]],["bool"]]],[11,"ne",E,E,67,[[["self"],[R[5637]]],["bool"]]],[11,"eq",E,E,68,[[["self"],[R[5548]]],["bool"]]],[11,"ne",E,E,68,[[["self"],[R[5548]]],["bool"]]],[11,"eq",E,E,70,[[["self"],[R[5001]]],["bool"]]],[11,"ne",E,E,70,[[["self"],[R[5001]]],["bool"]]],[11,"eq",E,E,62,[[["self"],[R[5715]]],["bool"]]],[11,"eq",E,E,63,[[["self"],[R[5718]]],["bool"]]],[11,"eq",E,E,71,[[["self"],[R[5549]]],["bool"]]],[11,"ne",E,E,71,[[["self"],[R[5549]]],["bool"]]],[11,"eq",E,E,72,[[["self"],[R[5560]]],["bool"]]],[11,"ne",E,E,72,[[["self"],[R[5560]]],["bool"]]],[11,"eq",E,E,73,[[["self"],[R[5566]]],["bool"]]],[11,"ne",E,E,73,[[["self"],[R[5566]]],["bool"]]],[11,"eq",E,E,74,[[["self"],[R[5757]]],["bool"]]],[11,"ne",E,E,74,[[["self"],[R[5757]]],["bool"]]],[11,"eq",E,E,75,[[["self"],[R[5550]]],["bool"]]],[11,"ne",E,E,75,[[["self"],[R[5550]]],["bool"]]],[11,"eq",E,E,76,[[["self"],[R[5562]]],["bool"]]],[11,"ne",E,E,76,[[["self"],[R[5562]]],["bool"]]],[11,"eq",E,E,77,[[["self"],[R[5559]]],["bool"]]],[11,"ne",E,E,77,[[["self"],[R[5559]]],["bool"]]],[11,"eq","inkwell",E,0,[[["self"],[R[5580]]],["bool"]]],[11,"eq",E,E,1,[[["self"],[R[5721]]],["bool"]]],[11,"eq",E,E,2,[[["self"],[R[5703]]],["bool"]]],[11,"eq",E,E,3,[[["self"],[R[5561]]],["bool"]]],[11,"eq",E,E,4,[[["self"],[R[5755]]],["bool"]]],[11,"eq",E,E,5,[[["self"],[R[5588]]],["bool"]]],[11,"eq",E,E,6,[[["self"],[R[5714]]],["bool"]]],[11,"eq",E,E,7,[[["self"],[R[5713]]],["bool"]]],[11,"eq",E,E,8,[[["self"],[R[5712]]],["bool"]]],[11,"drop",R[5544],E,9,[[["self"]]]],[11,"drop",R[5739],E,15,[[["self"]]]],[11,"drop",R[5740],E,16,[[["self"]]]],[11,"drop",E,E,84,[[["self"]]]],[11,"drop",R[5742],E,20,[[["self"]]]],[11,"drop",R[5743],E,22,[[["self"]]]],[11,"drop",R[5744],E,25,[[["self"]]]],[11,"drop",R[5745],E,26,[[["self"]]]],[11,"drop",E,E,85,[[["self"]]]],[11,"drop",E,E,86,[[["self"]]]],[11,"drop",E,E,87,[[["self"]]]],[11,"drop",R[5746],E,31,[[["self"]]]],[11,"drop",E,E,32,[[["self"]]]],[11,"drop",R[5747],E,40,[[["self"]]]],[11,"drop",E,E,41,[[["self"]]]],[11,"drop",R[5749],E,69,[[["self"]]]],[11,"from",R[5748],E,42,[[[R[5618]]],[R[5667]]]],[11,"from",E,E,42,[[[R[5563]]],[R[5667]]]],[11,"from",E,E,42,[[[R[5614]]],[R[5667]]]],[11,"from",E,E,42,[[["inttype"]],[R[5667]]]],[11,"from",E,E,42,[[[R[5613]]],[R[5667]]]],[11,"from",E,E,42,[[[R[5602]]],[R[5667]]]],[11,"from",E,E,42,[[[R[5624]]],[R[5667]]]],[11,"from",E,E,42,[[[R[5758]]],[R[5667]]]],[11,"from",E,E,43,[[[R[5618]]],[R[5578]]]],[11,"from",E,E,43,[[[R[5563]]],[R[5578]]]],[11,"from",E,E,43,[[["inttype"]],[R[5578]]]],[11,"from",E,E,43,[[[R[5613]]],[R[5578]]]],[11,"from",E,E,43,[[[R[5602]]],[R[5578]]]],[11,"from",E,E,43,[[[R[5624]]],[R[5578]]]],[11,"from",R[5749],E,59,[[[R[5616]]],[R[5558]]]],[11,"from",E,E,59,[[[R[5562]]],[R[5558]]]],[11,"from",E,E,58,[[[R[5616]]],[R[5754]]]],[11,"from",E,E,58,[[[R[5560]]],[R[5754]]]],[11,"from",E,E,58,[[[R[5637]]],[R[5754]]]],[11,"from",E,E,58,[[[R[5757]]],[R[5754]]]],[11,"from",E,E,58,[[[R[5548]]],[R[5754]]]],[11,"from",E,E,58,[[[R[5550]]],[R[5754]]]],[11,"from",E,E,58,[[[R[5562]]],[R[5754]]]],[11,"from",E,E,58,[[[R[5559]]],[R[5754]]]],[11,"from",E,E,58,[[[R[5549]]],[R[5754]]]],[11,"from",E,E,60,[[[R[5616]]],[R[5555]]]],[11,"from",E,E,60,[[[R[5560]]],[R[5555]]]],[11,"from",E,E,60,[[[R[5637]]],[R[5555]]]],[11,"from",E,E,60,[[[R[5550]]],[R[5555]]]],[11,"from",E,E,60,[[[R[5562]]],[R[5555]]]],[11,"from",E,E,60,[[[R[5559]]],[R[5555]]]],[11,"from",E,E,61,[[[R[5616]]],[R[5724]]]],[11,"from",E,E,61,[[[R[5560]]],[R[5724]]]],[11,"from",E,E,61,[[[R[5637]]],[R[5724]]]],[11,"from",E,E,61,[[[R[5550]]],[R[5724]]]],[11,"from",E,E,61,[[[R[5562]]],[R[5724]]]],[11,"from",E,E,61,[[[R[5559]]],[R[5724]]]],[11,"from",E,E,61,[[[R[5566]]],[R[5724]]]],[11,"from",E,E,58,[[[R[5555]]],[R[5754]]]],[11,"from",E,E,63,[[[R[5830]]],["self"]]],[11,"from","inkwell",E,3,[[[R[3183]]],["self"]]],[11,"from",E,E,4,[[[R[3184]]],["self"]]],[11,"next",R[5745],E,85,[[["self"]],[R[23]]]],[11,"next",E,E,86,[[["self"]],[R[23]]]],[11,"next",E,E,87,[[["self"]],[R[23]]]],[11,"deref",R[5544],E,9,[[["self"]]]],[11,"deref",R[5740],E,84,[[["self"]]]],[11,"hash",R[5736],E,10,[[["self"],["__h"]]]],[11,"hash",R[5738],E,14,[[["self"],["__h"]]]],[11,"hash",R[5748],E,44,[[["self"],["__h"]]]],[11,"hash",R[5749],E,64,[[["self"],["__h"]]]],[11,"hash",E,E,66,[[["self"],["__h"]]]],[11,"hash",E,E,59,[[["self"],["__h"]]]],[11,"hash",E,E,58,[[["self"],["__h"]]]],[11,"hash",E,E,60,[[["self"],["__h"]]]],[11,"hash",E,E,61,[[["self"],["__h"]]]],[11,"hash",E,E,67,[[["self"],["__h"]]]],[11,"hash",E,E,68,[[["self"],["__h"]]]],[11,"hash",E,E,70,[[["self"],["__h"]]]],[11,"hash",E,E,63,[[["self"],["__h"]]]],[11,"hash",E,E,71,[[["self"],["__h"]]]],[11,"hash",E,E,72,[[["self"],["__h"]]]],[11,"hash",E,E,73,[[["self"],["__h"]]]],[11,"hash",E,E,74,[[["self"],["__h"]]]],[11,"hash",E,E,75,[[["self"],["__h"]]]],[11,"hash",E,E,76,[[["self"],["__h"]]]],[11,"hash",E,E,77,[[["self"],["__h"]]]],[11,"hash","inkwell",E,3,[[["self"],["__h"]]]],[11,"hash",E,E,4,[[["self"],["__h"]]]],[11,"fmt",R[5544],E,9,[[["self"],[R[10]]],[["error"],[R[3],["error"]]]]],[11,"fmt",R[5736],E,11,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,10,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[5737],E,12,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,13,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[5738],E,14,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[5739],E,15,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[5740],E,16,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,84,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[5741],E,17,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[5742],E,18,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,19,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,20,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,21,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[5743],E,22,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[5744],E,23,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,25,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,24,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[5745],E,26,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,85,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,27,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,86,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,28,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,87,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,29,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[5746],E,31,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,32,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,33,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[5747],E,35,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,36,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,37,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,34,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,39,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,40,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,38,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,41,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[5748],E,45,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,42,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,43,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,46,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,47,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,44,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,48,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,49,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,50,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,51,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,52,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[5749],E,64,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,65,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,66,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,59,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,58,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,60,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,61,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,67,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,68,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,69,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,70,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,62,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,63,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,71,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,72,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,73,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,74,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,75,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,76,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,77,[[["self"],[R[10]]],[R[3]]]],[11,"fmt","inkwell",E,0,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,1,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,2,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,3,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,4,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,5,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,6,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,7,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,8,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[5544],E,9,[[["self"],[R[10]]],[["error"],[R[3],["error"]]]]],[11,"fmt",R[5742],E,18,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,19,[[["self"],[R[10]]],[R[3]]]],[11,R[4],R[5748],E,44,[[["u8"]],[R[3]]]],[11,R[4],E,E,45,[[[R[5578]]],[R[3]]]],[11,R[4],E,E,46,[[[R[5578]]],[R[3]]]],[11,R[4],E,E,48,[[[R[5578]]],[R[3]]]],[11,R[4],E,E,49,[[[R[5578]]],[R[3]]]],[11,R[4],E,E,50,[[[R[5578]]],[R[3]]]],[11,R[4],E,E,51,[[[R[5578]]],[R[3]]]],[11,R[4],R[5749],E,64,[[[R[5555]]],[R[3]]]],[11,R[4],E,E,72,[[[R[5555]]],[R[3]]]],[11,R[4],E,E,67,[[[R[5555]]],[R[3]]]],[11,R[4],E,E,75,[[[R[5555]]],[R[3]]]],[11,R[4],E,E,76,[[[R[5555]]],[R[3]]]],[11,R[4],E,E,77,[[[R[5555]]],[R[3]]]],[11,R[4],"inkwell",E,0,[[["u32"]],[R[3]]]],[11,R[157],R[5544],E,9,[[["self"]],["str"]]],[11,"cause",E,E,9,[[["self"]],[[R[23],["error"]],["error"]]]],[11,R[157],R[5742],E,19,[[["self"]],["str"]]],[11,"cause",E,E,19,[[["self"]],[[R[23],["error"]],["error"]]]],[11,R[5759],R[5748],R[5760],53,[[["self"]],[R[5667]]]],[11,R[5761],E,R[5762],54,[[["self"]],[R[5578]]]],[11,"fn_type",E,R[5763],54,[[["self"],["bool"]],[R[5614]]]],[11,R[5655],E,R[5764],54,[[["self"],["u32"]],[R[5618]]]],[11,R[5666],E,R[5765],54,[[["self"],[R[5580]]],[R[5613]]]],[11,R[5766],R[5749],R[5732],79,[[["self"]],[R[5558]]]],[11,R[5767],E,E,79,[[["self"]],[R[5555]]]],[11,R[5768],E,E,79,[[["self"],[R[5552]]],[R[5555]]]],[11,R[5769],E,R[5732],80,[[["self"]],[R[5555]]]],[11,R[5733],E,R[5770],80,[[["self"]],[[R[23],[R[5549]]],[R[5549]]]]],[11,R[5734],E,E,80,[[["self"]],[[R[5720]],[R[23],[R[5720]]]]]],[11,R[5771],E,R[5772],78,[[["self"]],[R[5754]]]]],"p":[[4,R[5773]],[4,R[5774]],[4,R[5775]],[4,R[5776]],[4,R[5777]],[4,R[5778]],[4,R[5779]],[4,R[5780]],[4,R[5781]],[3,"LLVMString"],[4,R[5782]],[3,R[5831]],[4,R[5783]],[3,"Comdat"],[3,R[5546]],[3,"Builder"],[3,"Context"],[3,"DataLayout"],[4,R[5784]],[4,R[5785]],[3,R[5786]],[3,R[5787]],[3,R[5788]],[4,"Linkage"],[4,R[5789]],[3,"Module"],[3,"ObjectFile"],[3,"Section"],[3,R[4339]],[3,"Symbol"],[8,R[5790]],[3,R[5791]],[3,R[5792]],[3,R[5793]],[3,R[5794]],[4,"CodeModel"],[4,"RelocMode"],[4,"FileType"],[4,R[5795]],[3,"Target"],[3,R[5796]],[3,"TargetData"],[4,R[5797]],[4,R[5798]],[4,R[5799]],[3,R[5605]],[3,R[5800]],[3,R[5603]],[3,"IntType"],[3,R[5604]],[3,R[5609]],[3,R[5611]],[3,"VoidType"],[8,"AnyType"],[8,"BasicType"],[8,R[5801]],[8,R[5802]],[8,R[5803]],[4,R[5804]],[4,R[5805]],[4,R[5806]],[4,R[5807]],[4,R[5808]],[4,R[5809]],[3,R[5675]],[3,R[5810]],[3,R[5811]],[3,R[5676]],[3,R[5670]],[3,R[5812]],[3,R[4946]],[3,R[5674]],[3,"IntValue"],[3,R[5677]],[3,"PhiValue"],[3,R[5671]],[3,R[5672]],[3,R[5673]],[8,"AnyValue"],[8,R[5813]],[8,"BasicValue"],[8,R[5814]],[8,R[5815]],[8,R[5816]],[3,"ContextRef"],[3,R[295]],[3,R[4346]],[3,R[4183]]]};
searchIndex["inkwell_internal_macros"]={"doc":"These macros are only intended to be used by inkwell…","i":[[23,"llvm_versions","inkwell_internal_macros","This macro can be used to specify version constraints for…",N,N],[23,"llvm_versioned_item",E,"This attribute is used to decorate enums, structs, or…",N,N],[23,"llvm_enum",E,"This attribute macro allows you to decorate an enum…",N,N]],"p":[]};
searchIndex["inventory"]={"doc":"Typed distributed plugin registration.","i":[[6,"iter","inventory","An iterator over plugins registered of a given type.",N,N],[8,"Collect",E,"Trait bound corresponding to types that can be iterated by…",N,N],[14,"collect",E,"Associate a plugin registry with the specified type.",N,N],[14,"submit",E,"Enter an element into the plugin registry corresponding to…",N,N],[11,R[45],E,E,0,[[]]]],"p":[[6,"iter"]]};
searchIndex["inventory_impl"]={"doc":E,"i":[],"p":[]};
searchIndex["itoa"]={"doc":"This crate provides fast functions for printing integer…","i":[[3,"Buffer","itoa","A safe API for formatting integers to text.",N,N],[5,"write",E,"Write integer to an `io::Write`.",N,[[["integer"],["write"]],[[R[3],["usize"]],["usize"]]]],[5,"fmt",E,"Write integer to an `fmt::Write`.",N,[[["integer"],["write"]],[R[3]]]],[8,"Integer",E,"An integer that can be formatted by `itoa::write` and…",N,N],[11,"new",E,R[727],0,[[],["buffer"]]],[11,"format",E,"Print an integer into this buffer and return a reference…",0,[[["self"],["integer"]],["str"]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[46],E,E,0,[[["self"]],[T]]],[11,R[47],E,E,0,[[["self"],[T]]]],[11,R[4],E,E,0,[[[U]],[R[3]]]],[11,R[5],E,E,0,[[],[R[3]]]],[11,R[7],E,E,0,[[["self"]],[T]]],[11,R[6],E,E,0,[[["self"]],[T]]],[11,R[8],E,E,0,[[["self"]],[R[9]]]],[11,R[83],E,E,0,[[],["buffer"]]],[11,"clone",E,E,0,[[["self"]],["self"]]]],"p":[[3,"Buffer"]]};
searchIndex["kwasmd"]={"doc":E,"i":[],"p":[]};
searchIndex["lazy_static"]={"doc":"A macro for declaring lazily evaluated statics.","i":[[5,R[3331],R[13],"Takes a shared reference to a lazy static and initializes…",N,[[[T]]]],[8,"LazyStatic",E,"Support trait for enabling a few common operation on lazy…",N,N],[14,R[13],E,E,N,N]],"p":[]};
searchIndex["libc"]={"doc":"libc - Raw FFI bindings to platforms' system libraries","i":[[4,"c_void","libc","Equivalent to C's `void` type when used as a [pointer].",N,N],[3,"group",E,E,N,N],[12,"gr_name",E,E,0,N],[12,"gr_passwd",E,E,0,N],[12,"gr_gid",E,E,0,N],[12,"gr_mem",E,E,0,N],[3,"utimbuf",E,E,N,N],[12,"actime",E,E,1,N],[12,"modtime",E,E,1,N],[3,"timeval",E,E,N,N],[12,"tv_sec",E,E,2,N],[12,"tv_usec",E,E,2,N],[3,R[785],E,E,N,N],[12,"tv_sec",E,E,3,N],[12,"tv_nsec",E,E,3,N],[3,"rlimit",E,E,N,N],[12,"rlim_cur",E,E,4,N],[12,"rlim_max",E,E,4,N],[3,"rusage",E,E,N,N],[12,"ru_utime",E,E,5,N],[12,"ru_stime",E,E,5,N],[12,"ru_maxrss",E,E,5,N],[12,"ru_ixrss",E,E,5,N],[12,"ru_idrss",E,E,5,N],[12,"ru_isrss",E,E,5,N],[12,"ru_minflt",E,E,5,N],[12,"ru_majflt",E,E,5,N],[12,"ru_nswap",E,E,5,N],[12,"ru_inblock",E,E,5,N],[12,"ru_oublock",E,E,5,N],[12,"ru_msgsnd",E,E,5,N],[12,"ru_msgrcv",E,E,5,N],[12,"ru_nsignals",E,E,5,N],[12,"ru_nvcsw",E,E,5,N],[12,"ru_nivcsw",E,E,5,N],[3,R[786],E,E,N,N],[12,"ipv6mr_multiaddr",E,E,6,N],[12,"ipv6mr_interface",E,E,6,N],[3,"hostent",E,E,N,N],[12,"h_name",E,E,7,N],[12,"h_aliases",E,E,7,N],[12,"h_addrtype",E,E,7,N],[12,"h_length",E,E,7,N],[12,"h_addr_list",E,E,7,N],[3,"iovec",E,E,N,N],[12,"iov_base",E,E,8,N],[12,"iov_len",E,E,8,N],[3,"pollfd",E,E,N,N],[12,"fd",E,E,9,N],[12,"events",E,E,9,N],[12,"revents",E,E,9,N],[3,"winsize",E,E,N,N],[12,"ws_row",E,E,10,N],[12,"ws_col",E,E,10,N],[12,"ws_xpixel",E,E,10,N],[12,"ws_ypixel",E,E,10,N],[3,"linger",E,E,N,N],[12,"l_onoff",E,E,11,N],[12,"l_linger",E,E,11,N],[3,"sigval",E,E,N,N],[12,"sival_ptr",E,E,12,N],[3,R[787],E,E,N,N],[12,"it_interval",E,E,13,N],[12,"it_value",E,E,13,N],[3,"tms",E,E,N,N],[12,"tms_utime",E,E,14,N],[12,"tms_stime",E,E,14,N],[12,"tms_cutime",E,E,14,N],[12,"tms_cstime",E,E,14,N],[3,"servent",E,E,N,N],[12,"s_name",E,E,15,N],[12,"s_aliases",E,E,15,N],[12,"s_port",E,E,15,N],[12,"s_proto",E,E,15,N],[3,R[788],E,E,N,N],[12,"p_name",E,E,16,N],[12,"p_aliases",E,E,16,N],[12,"p_proto",E,E,16,N],[3,R[789],E,E,N,N],[12,"sa_len",E,E,17,N],[12,"sa_family",E,E,17,N],[12,"sa_data",E,E,17,N],[3,R[790],E,E,N,N],[12,"sin6_len",E,E,18,N],[12,R[1374],E,E,18,N],[12,"sin6_port",E,E,18,N],[12,R[1375],E,E,18,N],[12,"sin6_addr",E,E,18,N],[12,R[1376],E,E,18,N],[3,"passwd",E,E,N,N],[12,"pw_name",E,E,19,N],[12,"pw_passwd",E,E,19,N],[12,"pw_uid",E,E,19,N],[12,"pw_gid",E,E,19,N],[12,"pw_change",E,E,19,N],[12,"pw_class",E,E,19,N],[12,"pw_gecos",E,E,19,N],[12,"pw_dir",E,E,19,N],[12,"pw_shell",E,E,19,N],[12,"pw_expire",E,E,19,N],[3,"ifaddrs",E,E,N,N],[12,"ifa_next",E,E,20,N],[12,"ifa_name",E,E,20,N],[12,"ifa_flags",E,E,20,N],[12,"ifa_addr",E,E,20,N],[12,"ifa_netmask",E,E,20,N],[12,"ifa_dstaddr",E,E,20,N],[12,"ifa_data",E,E,20,N],[3,"fd_set",E,E,N,N],[3,"tm",E,E,N,N],[12,"tm_sec",E,E,21,N],[12,"tm_min",E,E,21,N],[12,"tm_hour",E,E,21,N],[12,"tm_mday",E,E,21,N],[12,"tm_mon",E,E,21,N],[12,"tm_year",E,E,21,N],[12,"tm_wday",E,E,21,N],[12,"tm_yday",E,E,21,N],[12,"tm_isdst",E,E,21,N],[12,"tm_gmtoff",E,E,21,N],[12,"tm_zone",E,E,21,N],[3,"msghdr",E,E,N,N],[12,"msg_name",E,E,22,N],[12,R[1370],E,E,22,N],[12,"msg_iov",E,E,22,N],[12,"msg_iovlen",E,E,22,N],[12,R[1371],E,E,22,N],[12,R[1372],E,E,22,N],[12,"msg_flags",E,E,22,N],[3,"cmsghdr",E,E,N,N],[12,"cmsg_len",E,E,23,N],[12,"cmsg_level",E,E,23,N],[12,"cmsg_type",E,E,23,N],[3,"fsid_t",E,E,N,N],[3,R[783],E,E,N,N],[12,"if_index",E,E,24,N],[12,"if_name",E,E,24,N],[3,R[791],E,E,N,N],[12,"sun_len",E,E,25,N],[12,"sun_family",E,E,25,N],[12,"sun_path",E,E,25,N],[3,"utsname",E,E,N,N],[12,"sysname",E,E,26,N],[12,"nodename",E,E,26,N],[12,"release",E,E,26,N],[12,"version",E,E,26,N],[12,"machine",E,E,26,N],[3,"ip_mreq",E,E,N,N],[12,"imr_multiaddr",E,E,27,N],[12,"imr_interface",E,E,27,N],[3,"aiocb",E,E,N,N],[12,"aio_fildes",E,E,28,N],[12,"aio_offset",E,E,28,N],[12,"aio_buf",E,E,28,N],[12,"aio_nbytes",E,E,28,N],[12,"aio_reqprio",E,E,28,N],[12,"aio_sigevent",E,E,28,N],[12,"aio_lio_opcode",E,E,28,N],[3,"glob_t",E,E,N,N],[12,"gl_pathc",E,E,29,N],[12,"gl_offs",E,E,29,N],[12,"gl_pathv",E,E,29,N],[3,R[792],E,E,N,N],[12,"ai_flags",E,E,30,N],[12,"ai_family",E,E,30,N],[12,"ai_socktype",E,E,30,N],[12,"ai_protocol",E,E,30,N],[12,"ai_addrlen",E,E,30,N],[12,"ai_canonname",E,E,30,N],[12,"ai_addr",E,E,30,N],[12,"ai_next",E,E,30,N],[3,R[784],E,E,N,N],[12,"numer",E,E,31,N],[12,"denom",E,E,31,N],[3,"stat",E,E,N,N],[12,"st_dev",E,E,32,N],[12,"st_mode",E,E,32,N],[12,"st_nlink",E,E,32,N],[12,"st_ino",E,E,32,N],[12,"st_uid",E,E,32,N],[12,"st_gid",E,E,32,N],[12,"st_rdev",E,E,32,N],[12,"st_atime",E,E,32,N],[12,R[1392],E,E,32,N],[12,"st_mtime",E,E,32,N],[12,R[1393],E,E,32,N],[12,"st_ctime",E,E,32,N],[12,R[1394],E,E,32,N],[12,R[1395],E,E,32,N],[12,R[1396],E,E,32,N],[12,"st_size",E,E,32,N],[12,"st_blocks",E,E,32,N],[12,"st_blksize",E,E,32,N],[12,"st_flags",E,E,32,N],[12,"st_gen",E,E,32,N],[12,"st_lspare",E,E,32,N],[12,"st_qspare",E,E,32,N],[3,R[793],E,E,N,N],[3,R[794],E,E,N,N],[3,R[795],E,E,N,N],[3,R[796],E,E,N,N],[12,"si_signo",E,E,33,N],[12,"si_errno",E,E,33,N],[12,"si_code",E,E,33,N],[12,"si_pid",E,E,33,N],[12,"si_uid",E,E,33,N],[12,"si_status",E,E,33,N],[12,"si_addr",E,E,33,N],[3,R[782],E,E,N,N],[12,"sa_sigaction",E,E,34,N],[12,"sa_mask",E,E,34,N],[12,"sa_flags",E,E,34,N],[3,"stack_t",E,E,N,N],[12,"ss_sp",E,E,35,N],[12,"ss_size",E,E,35,N],[12,"ss_flags",E,E,35,N],[3,R[797],E,E,N,N],[12,"fst_flags",E,E,36,N],[12,"fst_posmode",E,E,36,N],[12,"fst_offset",E,E,36,N],[12,"fst_length",E,E,36,N],[12,"fst_bytesalloc",E,E,36,N],[3,R[798],E,E,N,N],[12,"ra_offset",E,E,37,N],[12,"ra_count",E,E,37,N],[3,R[828],E,E,N,N],[12,"f_bsize",E,E,38,N],[12,"f_frsize",E,E,38,N],[12,"f_blocks",E,E,38,N],[12,"f_bfree",E,E,38,N],[12,"f_bavail",E,E,38,N],[12,"f_files",E,E,38,N],[12,"f_ffree",E,E,38,N],[12,"f_favail",E,E,38,N],[12,"f_fsid",E,E,38,N],[12,"f_flag",E,E,38,N],[12,"f_namemax",E,E,38,N],[3,"Dl_info",E,E,N,N],[12,"dli_fname",E,E,39,N],[12,"dli_fbase",E,E,39,N],[12,"dli_sname",E,E,39,N],[12,"dli_saddr",E,E,39,N],[3,R[799],E,E,N,N],[12,"sin_len",E,E,40,N],[12,R[781],E,E,40,N],[12,"sin_port",E,E,40,N],[12,"sin_addr",E,E,40,N],[12,"sin_zero",E,E,40,N],[3,R[800],E,E,N,N],[12,"ident",E,E,41,N],[12,"filter",E,E,41,N],[12,"flags",E,E,41,N],[12,"fflags",E,E,41,N],[12,"data",E,E,41,N],[12,"udata",E,E,41,N],[12,"ext",E,E,41,N],[3,"dqblk",E,E,N,N],[12,"dqb_bhardlimit",E,E,42,N],[12,"dqb_bsoftlimit",E,E,42,N],[12,"dqb_curbytes",E,E,42,N],[12,"dqb_ihardlimit",E,E,42,N],[12,"dqb_isoftlimit",E,E,42,N],[12,"dqb_curinodes",E,E,42,N],[12,"dqb_btime",E,E,42,N],[12,"dqb_itime",E,E,42,N],[12,"dqb_id",E,E,42,N],[12,"dqb_spare",E,E,42,N],[3,R[801],E,E,N,N],[12,"ifm_msglen",E,E,43,N],[12,"ifm_version",E,E,43,N],[12,"ifm_type",E,E,43,N],[12,"ifm_addrs",E,E,43,N],[12,"ifm_flags",E,E,43,N],[12,"ifm_index",E,E,43,N],[12,"ifm_data",E,E,43,N],[3,"termios",E,E,N,N],[12,"c_iflag",E,E,44,N],[12,"c_oflag",E,E,44,N],[12,"c_cflag",E,E,44,N],[12,"c_lflag",E,E,44,N],[12,"c_cc",E,E,44,N],[12,"c_ispeed",E,E,44,N],[12,"c_ospeed",E,E,44,N],[3,"flock",E,E,N,N],[12,"l_start",E,E,45,N],[12,"l_len",E,E,45,N],[12,"l_pid",E,E,45,N],[12,"l_type",E,E,45,N],[12,"l_whence",E,E,45,N],[3,"sf_hdtr",E,E,N,N],[12,"headers",E,E,46,N],[12,"hdr_cnt",E,E,46,N],[12,"trailers",E,E,46,N],[12,"trl_cnt",E,E,46,N],[3,"lconv",E,E,N,N],[12,"decimal_point",E,E,47,N],[12,"thousands_sep",E,E,47,N],[12,"grouping",E,E,47,N],[12,"int_curr_symbol",E,E,47,N],[12,"currency_symbol",E,E,47,N],[12,"mon_decimal_point",E,E,47,N],[12,"mon_thousands_sep",E,E,47,N],[12,"mon_grouping",E,E,47,N],[12,"positive_sign",E,E,47,N],[12,"negative_sign",E,E,47,N],[12,"int_frac_digits",E,E,47,N],[12,"frac_digits",E,E,47,N],[12,"p_cs_precedes",E,E,47,N],[12,"p_sep_by_space",E,E,47,N],[12,"n_cs_precedes",E,E,47,N],[12,"n_sep_by_space",E,E,47,N],[12,"p_sign_posn",E,E,47,N],[12,"n_sign_posn",E,E,47,N],[12,"int_p_cs_precedes",E,E,47,N],[12,"int_n_cs_precedes",E,E,47,N],[12,"int_p_sep_by_space",E,E,47,N],[12,"int_n_sep_by_space",E,E,47,N],[12,"int_p_sign_posn",E,E,47,N],[12,"int_n_sign_posn",E,E,47,N],[3,R[802],E,E,N,N],[12,"pti_virtual_size",E,E,48,N],[12,"pti_resident_size",E,E,48,N],[12,"pti_total_user",E,E,48,N],[12,"pti_total_system",E,E,48,N],[12,"pti_threads_user",E,E,48,N],[12,"pti_threads_system",E,E,48,N],[12,"pti_policy",E,E,48,N],[12,"pti_faults",E,E,48,N],[12,"pti_pageins",E,E,48,N],[12,"pti_cow_faults",E,E,48,N],[12,"pti_messages_sent",E,E,48,N],[12,"pti_messages_received",E,E,48,N],[12,"pti_syscalls_mach",E,E,48,N],[12,"pti_syscalls_unix",E,E,48,N],[12,"pti_csw",E,E,48,N],[12,"pti_threadnum",E,E,48,N],[12,"pti_numrunning",E,E,48,N],[12,"pti_priority",E,E,48,N],[3,R[803],E,E,N,N],[12,"pbi_flags",E,E,49,N],[12,"pbi_status",E,E,49,N],[12,"pbi_xstatus",E,E,49,N],[12,"pbi_pid",E,E,49,N],[12,"pbi_ppid",E,E,49,N],[12,"pbi_uid",E,E,49,N],[12,"pbi_gid",E,E,49,N],[12,"pbi_ruid",E,E,49,N],[12,"pbi_rgid",E,E,49,N],[12,"pbi_svuid",E,E,49,N],[12,"pbi_svgid",E,E,49,N],[12,"rfu_1",E,E,49,N],[12,"pbi_comm",E,E,49,N],[12,"pbi_name",E,E,49,N],[12,"pbi_nfiles",E,E,49,N],[12,"pbi_pgid",E,E,49,N],[12,"pbi_pjobc",E,E,49,N],[12,"e_tdev",E,E,49,N],[12,"e_tpgid",E,E,49,N],[12,"pbi_nice",E,E,49,N],[12,"pbi_start_tvsec",E,E,49,N],[12,"pbi_start_tvusec",E,E,49,N],[3,R[804],E,E,N,N],[12,"pbsd",E,E,50,N],[12,"ptinfo",E,E,50,N],[3,R[805],E,E,N,N],[12,"xsu_total",E,E,51,N],[12,"xsu_avail",E,E,51,N],[12,"xsu_used",E,E,51,N],[12,"xsu_pagesize",E,E,51,N],[12,"xsu_encrypted",E,E,51,N],[3,"xucred",E,E,N,N],[12,"cr_version",E,E,52,N],[12,"cr_uid",E,E,52,N],[12,"cr_ngroups",E,E,52,N],[12,"cr_groups",E,E,52,N],[3,R[806],E,E,N,N],[12,"magic",E,E,53,N],[12,"cputype",E,E,53,N],[12,R[779],E,E,53,N],[12,R[5817],E,E,53,N],[12,"ncmds",E,E,53,N],[12,R[780],E,E,53,N],[12,"flags",E,E,53,N],[3,R[807],E,E,N,N],[12,"magic",E,E,54,N],[12,"cputype",E,E,54,N],[12,R[779],E,E,54,N],[12,R[5817],E,E,54,N],[12,"ncmds",E,E,54,N],[12,R[780],E,E,54,N],[12,"flags",E,E,54,N],[12,R[830],E,E,54,N],[3,R[808],E,E,N,N],[12,"cmd",E,E,55,N],[12,"cmdsize",E,E,55,N],[12,"segname",E,E,55,N],[12,"vmaddr",E,E,55,N],[12,"vmsize",E,E,55,N],[12,"fileoff",E,E,55,N],[12,"filesize",E,E,55,N],[12,"maxprot",E,E,55,N],[12,"initprot",E,E,55,N],[12,"nsects",E,E,55,N],[12,"flags",E,E,55,N],[3,R[809],E,E,N,N],[12,"cmd",E,E,56,N],[12,"cmdsize",E,E,56,N],[12,"segname",E,E,56,N],[12,"vmaddr",E,E,56,N],[12,"vmsize",E,E,56,N],[12,"fileoff",E,E,56,N],[12,"filesize",E,E,56,N],[12,"maxprot",E,E,56,N],[12,"initprot",E,E,56,N],[12,"nsects",E,E,56,N],[12,"flags",E,E,56,N],[3,R[810],E,E,N,N],[12,"cmd",E,E,57,N],[12,"cmdsize",E,E,57,N],[3,R[811],E,E,N,N],[12,"sdl_len",E,E,58,N],[12,"sdl_family",E,E,58,N],[12,"sdl_index",E,E,58,N],[12,"sdl_type",E,E,58,N],[12,"sdl_nlen",E,E,58,N],[12,"sdl_alen",E,E,58,N],[12,"sdl_slen",E,E,58,N],[12,"sdl_data",E,E,58,N],[3,R[812],E,E,N,N],[12,"sin_len",E,E,59,N],[12,R[781],E,E,59,N],[12,"sin_port",E,E,59,N],[12,"sin_addr",E,E,59,N],[12,"sin_srcaddr",E,E,59,N],[12,"sin_tos",E,E,59,N],[12,"sin_other",E,E,59,N],[3,R[813],E,E,N,N],[12,"sc_len",E,E,60,N],[12,"sc_family",E,E,60,N],[12,"ss_sysaddr",E,E,60,N],[12,"sc_id",E,E,60,N],[12,"sc_unit",E,E,60,N],[12,"sc_reserved",E,E,60,N],[3,R[814],E,E,N,N],[12,"ipi_ifindex",E,E,61,N],[12,"ipi_spec_dst",E,E,61,N],[12,"ipi_addr",E,E,61,N],[3,R[815],E,E,N,N],[12,"ipi6_addr",E,E,62,N],[12,"ipi6_ifindex",E,E,62,N],[3,R[816],E,E,N,N],[12,"uid",E,E,63,N],[12,"gid",E,E,63,N],[12,"cuid",E,E,63,N],[12,"cgid",E,E,63,N],[12,"mode",E,E,63,N],[12,"_seq",E,E,63,N],[12,"_key",E,E,63,N],[3,"sembuf",E,E,N,N],[12,"sem_num",E,E,64,N],[12,"sem_op",E,E,64,N],[12,"sem_flg",E,E,64,N],[3,"arphdr",E,E,N,N],[12,"ar_hrd",E,E,65,N],[12,"ar_pro",E,E,65,N],[12,"ar_hln",E,E,65,N],[12,"ar_pln",E,E,65,N],[12,"ar_op",E,E,65,N],[3,"in_addr",E,E,N,N],[12,"s_addr",E,E,66,N],[3,"kevent",E,E,N,N],[12,"ident",E,E,67,N],[12,"filter",E,E,67,N],[12,"flags",E,E,67,N],[12,"fflags",E,E,67,N],[12,"data",E,E,67,N],[12,"udata",E,E,67,N],[3,R[825],E,E,N,N],[12,"sem_perm",E,E,68,N],[12,"sem_base",E,E,68,N],[12,"sem_nsems",E,E,68,N],[12,"sem_otime",E,E,68,N],[12,"sem_pad1",E,E,68,N],[12,"sem_ctime",E,E,68,N],[12,"sem_pad2",E,E,68,N],[12,"sem_pad3",E,E,68,N],[3,R[826],E,E,N,N],[12,"shm_perm",E,E,69,N],[12,"shm_segsz",E,E,69,N],[12,"shm_lpid",E,E,69,N],[12,"shm_cpid",E,E,69,N],[12,"shm_nattch",E,E,69,N],[12,"shm_atime",E,E,69,N],[12,"shm_dtime",E,E,69,N],[12,"shm_ctime",E,E,69,N],[12,"shm_internal",E,E,69,N],[3,R[817],E,E,N,N],[12,"pth_user_time",E,E,70,N],[12,"pth_system_time",E,E,70,N],[12,"pth_cpu_usage",E,E,70,N],[12,"pth_policy",E,E,70,N],[12,"pth_run_state",E,E,70,N],[12,"pth_flags",E,E,70,N],[12,"pth_sleep_time",E,E,70,N],[12,"pth_curpri",E,E,70,N],[12,"pth_priority",E,E,70,N],[12,"pth_maxpriority",E,E,70,N],[12,"pth_name",E,E,70,N],[3,"statfs",E,E,N,N],[12,"f_bsize",E,E,71,N],[12,"f_iosize",E,E,71,N],[12,"f_blocks",E,E,71,N],[12,"f_bfree",E,E,71,N],[12,"f_bavail",E,E,71,N],[12,"f_files",E,E,71,N],[12,"f_ffree",E,E,71,N],[12,"f_fsid",E,E,71,N],[12,"f_owner",E,E,71,N],[12,"f_type",E,E,71,N],[12,"f_flags",E,E,71,N],[12,"f_fssubtype",E,E,71,N],[12,"f_fstypename",E,E,71,N],[12,"f_mntonname",E,E,71,N],[12,"f_mntfromname",E,E,71,N],[12,"f_reserved",E,E,71,N],[3,"dirent",E,E,N,N],[12,"d_ino",E,E,72,N],[12,"d_seekoff",E,E,72,N],[12,"d_reclen",E,E,72,N],[12,"d_namlen",E,E,72,N],[12,"d_type",E,E,72,N],[12,"d_name",E,E,72,N],[3,R[818],E,E,N,N],[3,R[819],E,E,N,N],[3,R[820],E,E,N,N],[3,R[821],E,E,N,N],[12,"ss_len",E,E,73,N],[12,"ss_family",E,E,73,N],[3,"utmpx",E,E,N,N],[12,"ut_user",E,E,74,N],[12,"ut_id",E,E,74,N],[12,"ut_line",E,E,74,N],[12,"ut_pid",E,E,74,N],[12,"ut_type",E,E,74,N],[12,"ut_tv",E,E,74,N],[12,"ut_host",E,E,74,N],[3,R[827],E,E,N,N],[12,"sigev_notify",E,E,75,N],[12,"sigev_signo",E,E,75,N],[12,"sigev_value",E,E,75,N],[12,"sigev_notify_attributes",E,E,75,N],[3,R[822],E,E,N,N],[12,"tv_sec",E,E,76,N],[12,"tv_usec",E,E,76,N],[3,"if_data",E,E,N,N],[12,"ifi_type",E,E,77,N],[12,"ifi_typelen",E,E,77,N],[12,"ifi_physical",E,E,77,N],[12,"ifi_addrlen",E,E,77,N],[12,"ifi_hdrlen",E,E,77,N],[12,"ifi_recvquota",E,E,77,N],[12,"ifi_xmitquota",E,E,77,N],[12,"ifi_unused1",E,E,77,N],[12,"ifi_mtu",E,E,77,N],[12,"ifi_metric",E,E,77,N],[12,"ifi_baudrate",E,E,77,N],[12,"ifi_ipackets",E,E,77,N],[12,"ifi_ierrors",E,E,77,N],[12,"ifi_opackets",E,E,77,N],[12,"ifi_oerrors",E,E,77,N],[12,"ifi_collisions",E,E,77,N],[12,"ifi_ibytes",E,E,77,N],[12,"ifi_obytes",E,E,77,N],[12,"ifi_imcasts",E,E,77,N],[12,"ifi_omcasts",E,E,77,N],[12,"ifi_iqdrops",E,E,77,N],[12,"ifi_noproto",E,E,77,N],[12,"ifi_recvtiming",E,E,77,N],[12,"ifi_xmittiming",E,E,77,N],[12,"ifi_lastchange",E,E,77,N],[12,"ifi_unused2",E,E,77,N],[12,"ifi_hwassist",E,E,77,N],[12,"ifi_reserved1",E,E,77,N],[12,"ifi_reserved2",E,E,77,N],[3,"bpf_hdr",E,E,N,N],[12,"bh_tstamp",E,E,78,N],[12,"bh_caplen",E,E,78,N],[12,"bh_datalen",E,E,78,N],[12,"bh_hdrlen",E,E,78,N],[3,R[823],E,E,N,N],[3,R[824],E,E,N,N],[12,"s6_addr",E,E,79,N],[19,"semun",E,E,N,N],[12,"val",E,E,80,N],[12,"buf",E,E,80,N],[12,"array",E,E,80,N],[4,"DIR",E,E,N,N],[4,"FILE",E,E,N,N],[4,"fpos_t",E,E,N,N],[4,R[829],E,E,N,N],[5,"CMSG_FIRSTHDR",E,E,N,[[]]],[5,"FD_CLR",E,E,N,[[["c_int"]]]],[5,"FD_ISSET",E,E,N,[[["c_int"]],["bool"]]],[5,"FD_SET",E,E,N,[[["c_int"]]]],[5,"FD_ZERO",E,E,N,[[]]],[5,"WTERMSIG",E,E,N,[[["c_int"]],["c_int"]]],[5,"WIFEXITED",E,E,N,[[["c_int"]],["bool"]]],[5,"WEXITSTATUS",E,E,N,[[["c_int"]],["c_int"]]],[5,"WCOREDUMP",E,E,N,[[["c_int"]],["bool"]]],[5,"QCMD",E,E,N,[[["c_int"]],["c_int"]]],[5,"CMSG_NXTHDR",E,E,N,[[]]],[5,"CMSG_DATA",E,E,N,[[]]],[5,"CMSG_SPACE",E,E,N,[[["c_uint"]],["c_uint"]]],[5,"CMSG_LEN",E,E,N,[[["c_uint"]],["c_uint"]]],[5,"WSTOPSIG",E,E,N,[[["c_int"]],["c_int"]]],[5,"_WSTATUS",E,E,N,[[["c_int"]],["c_int"]]],[5,"WIFCONTINUED",E,E,N,[[["c_int"]],["bool"]]],[5,"WIFSIGNALED",E,E,N,[[["c_int"]],["bool"]]],[5,"WIFSTOPPED",E,E,N,[[["c_int"]],["bool"]]],[5,"isalnum",E,E,N,N],[5,"isalpha",E,E,N,N],[5,"iscntrl",E,E,N,N],[5,"isdigit",E,E,N,N],[5,"isgraph",E,E,N,N],[5,"islower",E,E,N,N],[5,"isprint",E,E,N,N],[5,"ispunct",E,E,N,N],[5,"isspace",E,E,N,N],[5,"isupper",E,E,N,N],[5,"isxdigit",E,E,N,N],[5,"tolower",E,E,N,N],[5,"toupper",E,E,N,N],[5,"fopen",E,E,N,N],[5,"freopen",E,E,N,N],[5,"fflush",E,E,N,N],[5,"fclose",E,E,N,N],[5,"remove",E,E,N,N],[5,"rename",E,E,N,N],[5,"tmpfile",E,E,N,N],[5,"setvbuf",E,E,N,N],[5,"setbuf",E,E,N,N],[5,"getchar",E,E,N,N],[5,"putchar",E,E,N,N],[5,"fgetc",E,E,N,N],[5,"fgets",E,E,N,N],[5,"fputc",E,E,N,N],[5,"fputs",E,E,N,N],[5,"puts",E,E,N,N],[5,"ungetc",E,E,N,N],[5,"fread",E,E,N,N],[5,"fwrite",E,E,N,N],[5,"fseek",E,E,N,N],[5,"ftell",E,E,N,N],[5,"rewind",E,E,N,N],[5,"fgetpos",E,E,N,N],[5,"fsetpos",E,E,N,N],[5,"feof",E,E,N,N],[5,"ferror",E,E,N,N],[5,"perror",E,E,N,N],[5,"atoi",E,E,N,N],[5,"strtod",E,E,N,N],[5,"strtol",E,E,N,N],[5,"strtoul",E,E,N,N],[5,"calloc",E,E,N,N],[5,"malloc",E,E,N,N],[5,"realloc",E,E,N,N],[5,"free",E,E,N,N],[5,"abort",E,E,N,N],[5,"exit",E,E,N,N],[5,"_exit",E,E,N,N],[5,"atexit",E,E,N,N],[5,"system",E,E,N,N],[5,"getenv",E,E,N,N],[5,"strcpy",E,E,N,N],[5,"strncpy",E,E,N,N],[5,"strcat",E,E,N,N],[5,"strncat",E,E,N,N],[5,"strcmp",E,E,N,N],[5,"strncmp",E,E,N,N],[5,"strcoll",E,E,N,N],[5,"strchr",E,E,N,N],[5,"strrchr",E,E,N,N],[5,"strspn",E,E,N,N],[5,"strcspn",E,E,N,N],[5,"strdup",E,E,N,N],[5,"strpbrk",E,E,N,N],[5,"strstr",E,E,N,N],[5,"strcasecmp",E,E,N,N],[5,"strncasecmp",E,E,N,N],[5,"strlen",E,E,N,N],[5,"strnlen",E,E,N,N],[5,"strerror",E,E,N,N],[5,"strtok",E,E,N,N],[5,"strxfrm",E,E,N,N],[5,"wcslen",E,E,N,N],[5,"wcstombs",E,E,N,N],[5,"memchr",E,E,N,N],[5,"memcmp",E,E,N,N],[5,"memcpy",E,E,N,N],[5,"memmove",E,E,N,N],[5,"memset",E,E,N,N],[5,"getpwnam",E,E,N,N],[5,"getpwuid",E,E,N,N],[5,"fprintf",E,E,N,N],[5,"printf",E,E,N,N],[5,"snprintf",E,E,N,N],[5,"sprintf",E,E,N,N],[5,"fscanf",E,E,N,N],[5,"scanf",E,E,N,N],[5,"sscanf",E,E,N,N],[5,"getchar_unlocked",E,E,N,N],[5,"putchar_unlocked",E,E,N,N],[5,"socket",E,E,N,N],[5,"connect",E,E,N,N],[5,"listen",E,E,N,N],[5,"accept",E,E,N,N],[5,R[1381],E,E,N,N],[5,R[1382],E,E,N,N],[5,R[1380],E,E,N,N],[5,"socketpair",E,E,N,N],[5,"sendto",E,E,N,N],[5,"shutdown",E,E,N,N],[5,"chmod",E,E,N,N],[5,"fchmod",E,E,N,N],[5,"fstat",E,E,N,N],[5,"mkdir",E,E,N,N],[5,"stat",E,E,N,N],[5,"pclose",E,E,N,N],[5,"fdopen",E,E,N,N],[5,"fileno",E,E,N,N],[5,"open",E,E,N,N],[5,"creat",E,E,N,N],[5,"fcntl",E,E,N,N],[5,"opendir",E,E,N,N],[5,"readdir",E,E,N,N],[5,"closedir",E,E,N,N],[5,"rewinddir",E,E,N,N],[5,"fchmodat",E,E,N,N],[5,"fchown",E,E,N,N],[5,"fchownat",E,E,N,N],[5,"fstatat",E,E,N,N],[5,"linkat",E,E,N,N],[5,"renameat",E,E,N,N],[5,"symlinkat",E,E,N,N],[5,"unlinkat",E,E,N,N],[5,"access",E,E,N,N],[5,"alarm",E,E,N,N],[5,"chdir",E,E,N,N],[5,"fchdir",E,E,N,N],[5,"chown",E,E,N,N],[5,"lchown",E,E,N,N],[5,"close",E,E,N,N],[5,"dup",E,E,N,N],[5,"dup2",E,E,N,N],[5,"execl",E,E,N,N],[5,"execle",E,E,N,N],[5,"execlp",E,E,N,N],[5,"execv",E,E,N,N],[5,"execve",E,E,N,N],[5,"execvp",E,E,N,N],[5,"fork",E,E,N,N],[5,"fpathconf",E,E,N,N],[5,"getcwd",E,E,N,N],[5,"getegid",E,E,N,N],[5,"geteuid",E,E,N,N],[5,"getgid",E,E,N,N],[5,"getgroups",E,E,N,N],[5,"getlogin",E,E,N,N],[5,"getopt",E,E,N,N],[5,"getpgid",E,E,N,N],[5,"getpgrp",E,E,N,N],[5,"getpid",E,E,N,N],[5,"getppid",E,E,N,N],[5,"getuid",E,E,N,N],[5,"isatty",E,E,N,N],[5,"link",E,E,N,N],[5,"lseek",E,E,N,N],[5,"pathconf",E,E,N,N],[5,"pipe",E,E,N,N],[5,"posix_memalign",E,E,N,N],[5,"read",E,E,N,N],[5,"rmdir",E,E,N,N],[5,"seteuid",E,E,N,N],[5,"setegid",E,E,N,N],[5,"setgid",E,E,N,N],[5,"setpgid",E,E,N,N],[5,"setsid",E,E,N,N],[5,"setuid",E,E,N,N],[5,"sleep",E,E,N,N],[5,"nanosleep",E,E,N,N],[5,"tcgetpgrp",E,E,N,N],[5,"tcsetpgrp",E,E,N,N],[5,"ttyname",E,E,N,N],[5,"ttyname_r",E,E,N,N],[5,"unlink",E,E,N,N],[5,"wait",E,E,N,N],[5,"waitpid",E,E,N,N],[5,"write",E,E,N,N],[5,"pread",E,E,N,N],[5,"pwrite",E,E,N,N],[5,"umask",E,E,N,N],[5,"utime",E,E,N,N],[5,"kill",E,E,N,N],[5,"killpg",E,E,N,N],[5,"mlock",E,E,N,N],[5,"munlock",E,E,N,N],[5,"mlockall",E,E,N,N],[5,"munlockall",E,E,N,N],[5,"mmap",E,E,N,N],[5,"munmap",E,E,N,N],[5,R[1269],E,E,N,N],[5,"if_indextoname",E,E,N,N],[5,"lstat",E,E,N,N],[5,"fsync",E,E,N,N],[5,"setenv",E,E,N,N],[5,"unsetenv",E,E,N,N],[5,"symlink",E,E,N,N],[5,"ftruncate",E,E,N,N],[5,"signal",E,E,N,N],[5,"getrusage",E,E,N,N],[5,"realpath",E,E,N,N],[5,"flock",E,E,N,N],[5,"times",E,E,N,N],[5,R[1352],E,E,N,N],[5,"pthread_join",E,E,N,N],[5,"pthread_exit",E,E,N,N],[5,"pthread_attr_init",E,E,N,N],[5,"pthread_attr_destroy",E,E,N,N],[5,"pthread_attr_setstacksize",E,E,N,N],[5,"pthread_attr_setdetachstate",E,E,N,N],[5,"pthread_detach",E,E,N,N],[5,R[1291],E,E,N,N],[5,"pthread_key_create",E,E,N,N],[5,"pthread_key_delete",E,E,N,N],[5,"pthread_getspecific",E,E,N,N],[5,"pthread_setspecific",E,E,N,N],[5,"pthread_mutex_init",E,E,N,N],[5,"pthread_mutex_destroy",E,E,N,N],[5,"pthread_mutex_lock",E,E,N,N],[5,"pthread_mutex_trylock",E,E,N,N],[5,"pthread_mutex_unlock",E,E,N,N],[5,"pthread_mutexattr_init",E,E,N,N],[5,"pthread_mutexattr_destroy",E,E,N,N],[5,"pthread_mutexattr_settype",E,E,N,N],[5,"pthread_cond_init",E,E,N,N],[5,"pthread_cond_wait",E,E,N,N],[5,"pthread_cond_timedwait",E,E,N,N],[5,"pthread_cond_signal",E,E,N,N],[5,"pthread_cond_broadcast",E,E,N,N],[5,"pthread_cond_destroy",E,E,N,N],[5,"pthread_condattr_init",E,E,N,N],[5,"pthread_condattr_destroy",E,E,N,N],[5,"pthread_rwlock_init",E,E,N,N],[5,"pthread_rwlock_destroy",E,E,N,N],[5,"pthread_rwlock_rdlock",E,E,N,N],[5,"pthread_rwlock_tryrdlock",E,E,N,N],[5,"pthread_rwlock_wrlock",E,E,N,N],[5,"pthread_rwlock_trywrlock",E,E,N,N],[5,"pthread_rwlock_unlock",E,E,N,N],[5,"pthread_rwlockattr_init",E,E,N,N],[5,"pthread_rwlockattr_destroy",E,E,N,N],[5,R[1379],E,E,N,N],[5,"raise",E,E,N,N],[5,R[782],E,E,N,N],[5,"utimes",E,E,N,N],[5,"dlopen",E,E,N,N],[5,"dlerror",E,E,N,N],[5,"dlsym",E,E,N,N],[5,"dlclose",E,E,N,N],[5,"dladdr",E,E,N,N],[5,"getaddrinfo",E,E,N,N],[5,"freeaddrinfo",E,E,N,N],[5,"gai_strerror",E,E,N,N],[5,"res_init",E,E,N,N],[5,"gmtime_r",E,E,N,N],[5,"localtime_r",E,E,N,N],[5,"mktime",E,E,N,N],[5,"time",E,E,N,N],[5,"gmtime",E,E,N,N],[5,"localtime",E,E,N,N],[5,"difftime",E,E,N,N],[5,"mknod",E,E,N,N],[5,R[1428],E,E,N,N],[5,"getservbyname",E,E,N,N],[5,"getprotobyname",E,E,N,N],[5,"getprotobynumber",E,E,N,N],[5,"chroot",E,E,N,N],[5,"usleep",E,E,N,N],[5,"send",E,E,N,N],[5,"recv",E,E,N,N],[5,"putenv",E,E,N,N],[5,"poll",E,E,N,N],[5,"select",E,E,N,N],[5,"setlocale",E,E,N,N],[5,"localeconv",E,E,N,N],[5,"sem_wait",E,E,N,N],[5,"sem_trywait",E,E,N,N],[5,"sem_post",E,E,N,N],[5,R[828],E,E,N,N],[5,"fstatvfs",E,E,N,N],[5,"readlink",E,E,N,N],[5,"sigemptyset",E,E,N,N],[5,"sigaddset",E,E,N,N],[5,"sigfillset",E,E,N,N],[5,"sigdelset",E,E,N,N],[5,"sigismember",E,E,N,N],[5,R[1365],E,E,N,N],[5,"sigpending",E,E,N,N],[5,"timegm",E,E,N,N],[5,"sysconf",E,E,N,N],[5,"mkfifo",E,E,N,N],[5,"pselect",E,E,N,N],[5,"fseeko",E,E,N,N],[5,"ftello",E,E,N,N],[5,"tcdrain",E,E,N,N],[5,R[1407],E,E,N,N],[5,R[1408],E,E,N,N],[5,R[1409],E,E,N,N],[5,R[1410],E,E,N,N],[5,"tcgetattr",E,E,N,N],[5,"tcsetattr",E,E,N,N],[5,"tcflow",E,E,N,N],[5,"tcflush",E,E,N,N],[5,"tcgetsid",E,E,N,N],[5,R[1411],E,E,N,N],[5,"mkstemp",E,E,N,N],[5,"mkdtemp",E,E,N,N],[5,"tmpnam",E,E,N,N],[5,"openlog",E,E,N,N],[5,"closelog",E,E,N,N],[5,"setlogmask",E,E,N,N],[5,"syslog",E,E,N,N],[5,"nice",E,E,N,N],[5,"grantpt",E,E,N,N],[5,R[1287],E,E,N,N],[5,"ptsname",E,E,N,N],[5,"unlockpt",E,E,N,N],[5,"strcasestr",E,E,N,N],[5,"getline",E,E,N,N],[5,"getsid",E,E,N,N],[5,R[765],E,E,N,N],[5,"pause",E,E,N,N],[5,"readlinkat",E,E,N,N],[5,"mkdirat",E,E,N,N],[5,"openat",E,E,N,N],[5,"fdopendir",E,E,N,N],[5,"readdir_r",E,"The 64-bit libc on Solaris and illumos only has readdir_r.…",N,N],[5,"cfmakeraw",E,E,N,N],[5,"cfsetspeed",E,E,N,N],[5,"getrlimit",E,E,N,N],[5,"setrlimit",E,E,N,N],[5,"strerror_r",E,E,N,N],[5,"abs",E,E,N,N],[5,"atof",E,E,N,N],[5,"labs",E,E,N,N],[5,"rand",E,E,N,N],[5,"srand",E,E,N,N],[5,"getifaddrs",E,E,N,N],[5,"freeifaddrs",E,E,N,N],[5,"setgroups",E,E,N,N],[5,"ioctl",E,E,N,N],[5,"kqueue",E,E,N,N],[5,"unmount",E,E,N,N],[5,"syscall",E,E,N,N],[5,"getpwent",E,E,N,N],[5,"setpwent",E,E,N,N],[5,"endpwent",E,E,N,N],[5,"endgrent",E,E,N,N],[5,"getgrent",E,E,N,N],[5,"getprogname",E,E,N,N],[5,"setprogname",E,E,N,N],[5,"getloadavg",E,E,N,N],[5,R[783],E,E,N,N],[5,"if_freenameindex",E,E,N,N],[5,"getpeereid",E,E,N,N],[5,"glob",E,E,N,N],[5,"globfree",E,E,N,N],[5,"posix_madvise",E,E,N,N],[5,"shm_unlink",E,E,N,N],[5,"seekdir",E,E,N,N],[5,"telldir",E,E,N,N],[5,"madvise",E,E,N,N],[5,"msync",E,E,N,N],[5,"recvfrom",E,E,N,N],[5,"mkstemps",E,E,N,N],[5,"futimes",E,E,N,N],[5,"nl_langinfo",E,E,N,N],[5,"bind",E,E,N,N],[5,"writev",E,E,N,N],[5,"readv",E,E,N,N],[5,"sendmsg",E,E,N,N],[5,"recvmsg",E,E,N,N],[5,"sync",E,E,N,N],[5,"getgrgid_r",E,E,N,N],[5,"sigaltstack",E,E,N,N],[5,"sem_close",E,E,N,N],[5,"getdtablesize",E,E,N,N],[5,"getgrnam_r",E,E,N,N],[5,R[1364],E,E,N,N],[5,"sem_open",E,E,N,N],[5,"getgrnam",E,E,N,N],[5,"pthread_cancel",E,E,N,N],[5,"pthread_kill",E,E,N,N],[5,"sem_unlink",E,E,N,N],[5,"getpwnam_r",E,E,N,N],[5,"getpwuid_r",E,E,N,N],[5,"sigwait",E,E,N,N],[5,"pthread_atfork",E,E,N,N],[5,"getgrgid",E,E,N,N],[5,"popen",E,E,N,N],[5,"faccessat",E,E,N,N],[5,"pthread_create",E,E,N,N],[5,"acct",E,E,N,N],[5,"setgrent",E,E,N,N],[5,"aio_read",E,E,N,N],[5,"aio_write",E,E,N,N],[5,"aio_fsync",E,E,N,N],[5,"aio_error",E,E,N,N],[5,"aio_return",E,E,N,N],[5,R[1293],E,E,N,N],[5,"aio_cancel",E,E,N,N],[5,"chflags",E,E,N,N],[5,"fchflags",E,E,N,N],[5,"clock_getres",E,E,N,N],[5,"clock_gettime",E,E,N,N],[5,"lio_listio",E,E,N,N],[5,"dirfd",E,E,N,N],[5,"lutimes",E,E,N,N],[5,"gettimeofday",E,E,N,N],[5,"getutxent",E,E,N,N],[5,"getutxid",E,E,N,N],[5,"getutxline",E,E,N,N],[5,"pututxline",E,E,N,N],[5,"setutxent",E,E,N,N],[5,"endutxent",E,E,N,N],[5,"utmpxname",E,E,N,N],[5,"getnameinfo",E,E,N,N],[5,"mincore",E,E,N,N],[5,"sysctlnametomib",E,E,N,N],[5,"mprotect",E,E,N,N],[5,"semget",E,E,N,N],[5,"semctl",E,E,N,N],[5,"semop",E,E,N,N],[5,"shm_open",E,E,N,N],[5,"ftok",E,E,N,N],[5,"shmat",E,E,N,N],[5,"shmdt",E,E,N,N],[5,"shmctl",E,E,N,N],[5,"shmget",E,E,N,N],[5,"sysctl",E,E,N,N],[5,"sysctlbyname",E,E,N,N],[5,"mach_absolute_time",E,E,N,N],[5,R[784],E,E,N,N],[5,"pthread_setname_np",E,E,N,N],[5,"pthread_get_stackaddr_np",E,E,N,N],[5,"pthread_get_stacksize_np",E,E,N,N],[5,"pthread_condattr_setpshared",E,E,N,N],[5,"pthread_condattr_getpshared",E,E,N,N],[5,"pthread_mutexattr_setpshared",E,E,N,N],[5,"pthread_mutexattr_getpshared",E,E,N,N],[5,"pthread_rwlockattr_getpshared",E,E,N,N],[5,"pthread_rwlockattr_setpshared",E,E,N,N],[5,"__error",E,E,N,N],[5,R[1705],E,E,N,N],[5,"statfs",E,E,N,N],[5,"fstatfs",E,E,N,N],[5,"kevent",E,E,N,N],[5,"kevent64",E,E,N,N],[5,"mount",E,E,N,N],[5,"ptrace",E,E,N,N],[5,"quotactl",E,E,N,N],[5,R[1427],E,E,N,N],[5,"sendfile",E,E,N,N],[5,"futimens",E,E,N,N],[5,"utimensat",E,E,N,N],[5,"openpty",E,E,N,N],[5,"forkpty",E,E,N,N],[5,"login_tty",E,E,N,N],[5,"duplocale",E,E,N,N],[5,"freelocale",E,E,N,N],[5,"localeconv_l",E,E,N,N],[5,"newlocale",E,E,N,N],[5,"uselocale",E,E,N,N],[5,"querylocale",E,E,N,N],[5,"getpriority",E,E,N,N],[5,"setpriority",E,E,N,N],[5,"getdomainname",E,E,N,N],[5,"setdomainname",E,E,N,N],[5,"getxattr",E,E,N,N],[5,"fgetxattr",E,E,N,N],[5,"setxattr",E,E,N,N],[5,"fsetxattr",E,E,N,N],[5,"listxattr",E,E,N,N],[5,"flistxattr",E,E,N,N],[5,"removexattr",E,E,N,N],[5,"renamex_np",E,E,N,N],[5,"renameatx_np",E,E,N,N],[5,"fremovexattr",E,E,N,N],[5,"getgrouplist",E,E,N,N],[5,"initgroups",E,E,N,N],[5,"waitid",E,E,N,N],[5,"brk",E,E,N,N],[5,"sbrk",E,E,N,N],[5,"settimeofday",E,E,N,N],[5,"_dyld_image_count",E,E,N,N],[5,"_dyld_get_image_header",E,E,N,N],[5,"_dyld_get_image_vmaddr_slide",E,E,N,N],[5,"_dyld_get_image_name",E,E,N,N],[5,"posix_spawn",E,E,N,N],[5,"posix_spawnp",E,E,N,N],[5,"posix_spawnattr_init",E,E,N,N],[5,"posix_spawnattr_destroy",E,E,N,N],[5,"posix_spawnattr_getsigdefault",E,E,N,N],[5,"posix_spawnattr_setsigdefault",E,E,N,N],[5,"posix_spawnattr_getsigmask",E,E,N,N],[5,"posix_spawnattr_setsigmask",E,E,N,N],[5,"posix_spawnattr_getflags",E,E,N,N],[5,"posix_spawnattr_setflags",E,E,N,N],[5,"posix_spawnattr_getpgroup",E,E,N,N],[5,"posix_spawnattr_setpgroup",E,E,N,N],[5,"posix_spawn_file_actions_init",E,E,N,N],[5,"posix_spawn_file_actions_destroy",E,E,N,N],[5,"posix_spawn_file_actions_addopen",E,E,N,N],[5,"posix_spawn_file_actions_addclose",E,E,N,N],[5,"posix_spawn_file_actions_adddup2",E,E,N,N],[5,"uname",E,E,N,N],[5,"exchangedata",E,E,N,N],[11,"si_addr",E,E,33,[[["self"]]]],[11,"si_value",E,E,33,[[["self"]],["sigval"]]],[6,"int8_t",E,E,N,N],[6,"int16_t",E,E,N,N],[6,"int32_t",E,E,N,N],[6,"int64_t",E,E,N,N],[6,"uint8_t",E,E,N,N],[6,"uint16_t",E,E,N,N],[6,"uint32_t",E,E,N,N],[6,"uint64_t",E,E,N,N],[6,"c_schar",E,E,N,N],[6,"c_uchar",E,E,N,N],[6,"c_short",E,E,N,N],[6,"c_ushort",E,E,N,N],[6,"c_int",E,E,N,N],[6,"c_uint",E,E,N,N],[6,"c_float",E,E,N,N],[6,"c_double",E,E,N,N],[6,"c_longlong",E,E,N,N],[6,"c_ulonglong",E,E,N,N],[6,"intmax_t",E,E,N,N],[6,"uintmax_t",E,E,N,N],[6,"size_t",E,E,N,N],[6,"ptrdiff_t",E,E,N,N],[6,"intptr_t",E,E,N,N],[6,"uintptr_t",E,E,N,N],[6,"ssize_t",E,E,N,N],[6,"pid_t",E,E,N,N],[6,"uid_t",E,E,N,N],[6,"gid_t",E,E,N,N],[6,"in_addr_t",E,E,N,N],[6,"in_port_t",E,E,N,N],[6,"sighandler_t",E,E,N,N],[6,"cc_t",E,E,N,N],[6,"locale_t",E,E,N,N],[6,"wchar_t",E,E,N,N],[6,"off_t",E,E,N,N],[6,"useconds_t",E,E,N,N],[6,"blkcnt_t",E,E,N,N],[6,"socklen_t",E,E,N,N],[6,R[1373],E,E,N,N],[6,"pthread_t",E,E,N,N],[6,"nfds_t",E,E,N,N],[6,"c_char",E,E,N,N],[6,"clock_t",E,E,N,N],[6,"time_t",E,E,N,N],[6,R[1417],E,E,N,N],[6,"dev_t",E,E,N,N],[6,"ino_t",E,E,N,N],[6,"mode_t",E,E,N,N],[6,"nlink_t",E,E,N,N],[6,"blksize_t",E,E,N,N],[6,"rlim_t",E,E,N,N],[6,"pthread_key_t",E,E,N,N],[6,"sigset_t",E,E,N,N],[6,"clockid_t",E,E,N,N],[6,R[1402],E,E,N,N],[6,R[1404],E,E,N,N],[6,"speed_t",E,E,N,N],[6,R[1414],E,E,N,N],[6,"nl_item",E,E,N,N],[6,"id_t",E,E,N,N],[6,"sem_t",E,E,N,N],[6,"idtype_t",E,E,N,N],[6,"integer_t",E,E,N,N],[6,"cpu_type_t",E,E,N,N],[6,"cpu_subtype_t",E,E,N,N],[6,"posix_spawnattr_t",E,E,N,N],[6,"posix_spawn_file_actions_t",E,E,N,N],[6,"key_t",E,E,N,N],[6,"shmatt_t",E,E,N,N],[6,"vm_prot_t",E,E,N,N],[6,"vm_size_t",E,E,N,N],[6,"mach_timebase_info_data_t",E,E,N,N],[6,"c_long",E,E,N,N],[6,"c_ulong",E,E,N,N],[6,"boolean_t",E,E,N,N],[17,"INT_MIN",E,E,N,N],[17,"INT_MAX",E,E,N,N],[17,"SIG_DFL",E,E,N,N],[17,"SIG_IGN",E,E,N,N],[17,"SIG_ERR",E,E,N,N],[17,"DT_UNKNOWN",E,E,N,N],[17,"DT_FIFO",E,E,N,N],[17,"DT_CHR",E,E,N,N],[17,"DT_DIR",E,E,N,N],[17,"DT_BLK",E,E,N,N],[17,"DT_REG",E,E,N,N],[17,"DT_LNK",E,E,N,N],[17,"DT_SOCK",E,E,N,N],[17,"FD_CLOEXEC",E,E,N,N],[17,"USRQUOTA",E,E,N,N],[17,"GRPQUOTA",E,E,N,N],[17,"SIGIOT",E,E,N,N],[17,"S_ISUID",E,E,N,N],[17,"S_ISGID",E,E,N,N],[17,"S_ISVTX",E,E,N,N],[17,"IF_NAMESIZE",E,E,N,N],[17,"IFNAMSIZ",E,E,N,N],[17,"LOG_EMERG",E,E,N,N],[17,"LOG_ALERT",E,E,N,N],[17,"LOG_CRIT",E,E,N,N],[17,"LOG_ERR",E,E,N,N],[17,"LOG_WARNING",E,E,N,N],[17,"LOG_NOTICE",E,E,N,N],[17,"LOG_INFO",E,E,N,N],[17,"LOG_DEBUG",E,E,N,N],[17,"LOG_KERN",E,E,N,N],[17,"LOG_USER",E,E,N,N],[17,"LOG_MAIL",E,E,N,N],[17,"LOG_DAEMON",E,E,N,N],[17,"LOG_AUTH",E,E,N,N],[17,"LOG_SYSLOG",E,E,N,N],[17,"LOG_LPR",E,E,N,N],[17,"LOG_NEWS",E,E,N,N],[17,"LOG_UUCP",E,E,N,N],[17,"LOG_LOCAL0",E,E,N,N],[17,"LOG_LOCAL1",E,E,N,N],[17,"LOG_LOCAL2",E,E,N,N],[17,"LOG_LOCAL3",E,E,N,N],[17,"LOG_LOCAL4",E,E,N,N],[17,"LOG_LOCAL5",E,E,N,N],[17,"LOG_LOCAL6",E,E,N,N],[17,"LOG_LOCAL7",E,E,N,N],[17,"LOG_PID",E,E,N,N],[17,"LOG_CONS",E,E,N,N],[17,"LOG_ODELAY",E,E,N,N],[17,"LOG_NDELAY",E,E,N,N],[17,"LOG_NOWAIT",E,E,N,N],[17,"LOG_PRIMASK",E,E,N,N],[17,"LOG_FACMASK",E,E,N,N],[17,"PRIO_PROCESS",E,E,N,N],[17,"PRIO_PGRP",E,E,N,N],[17,"PRIO_USER",E,E,N,N],[17,"PRIO_MIN",E,E,N,N],[17,"PRIO_MAX",E,E,N,N],[17,"IPPROTO_ICMP",E,E,N,N],[17,"IPPROTO_ICMPV6",E,E,N,N],[17,"IPPROTO_TCP",E,E,N,N],[17,"IPPROTO_UDP",E,E,N,N],[17,"IPPROTO_IP",E,E,N,N],[17,"IPPROTO_IPV6",E,E,N,N],[17,"INADDR_LOOPBACK",E,E,N,N],[17,"INADDR_ANY",E,E,N,N],[17,"INADDR_BROADCAST",E,E,N,N],[17,"INADDR_NONE",E,E,N,N],[17,"ARPOP_REQUEST",E,E,N,N],[17,"ARPOP_REPLY",E,E,N,N],[17,"ATF_COM",E,E,N,N],[17,"ATF_PERM",E,E,N,N],[17,"ATF_PUBL",E,E,N,N],[17,"ATF_USETRAILERS",E,E,N,N],[17,"LC_ALL",E,E,N,N],[17,"LC_COLLATE",E,E,N,N],[17,"LC_CTYPE",E,E,N,N],[17,"LC_MONETARY",E,E,N,N],[17,"LC_NUMERIC",E,E,N,N],[17,"LC_TIME",E,E,N,N],[17,"LC_MESSAGES",E,E,N,N],[17,"FIOCLEX",E,E,N,N],[17,"FIONCLEX",E,E,N,N],[17,"FIONREAD",E,E,N,N],[17,"FIONBIO",E,E,N,N],[17,"FIOASYNC",E,E,N,N],[17,"FIOSETOWN",E,E,N,N],[17,"FIOGETOWN",E,E,N,N],[17,"PATH_MAX",E,E,N,N],[17,"SA_ONSTACK",E,E,N,N],[17,"SA_SIGINFO",E,E,N,N],[17,"SA_RESTART",E,E,N,N],[17,R[1368],E,E,N,N],[17,R[1366],E,E,N,N],[17,"SA_NODEFER",E,E,N,N],[17,R[1367],E,E,N,N],[17,"SS_ONSTACK",E,E,N,N],[17,"SS_DISABLE",E,E,N,N],[17,"SIGCHLD",E,E,N,N],[17,"SIGBUS",E,E,N,N],[17,"SIGUSR1",E,E,N,N],[17,"SIGUSR2",E,E,N,N],[17,"SIGCONT",E,E,N,N],[17,"SIGSTOP",E,E,N,N],[17,"SIGTSTP",E,E,N,N],[17,"SIGURG",E,E,N,N],[17,"SIGIO",E,E,N,N],[17,"SIGSYS",E,E,N,N],[17,"SIGTTIN",E,E,N,N],[17,"SIGTTOU",E,E,N,N],[17,"SIGXCPU",E,E,N,N],[17,"SIGXFSZ",E,E,N,N],[17,"SIGVTALRM",E,E,N,N],[17,"SIGPROF",E,E,N,N],[17,"SIGWINCH",E,E,N,N],[17,"SIGINFO",E,E,N,N],[17,R[1360],E,E,N,N],[17,"SIG_BLOCK",E,E,N,N],[17,R[1359],E,E,N,N],[17,"IP_TOS",E,E,N,N],[17,"IP_MULTICAST_IF",E,E,N,N],[17,"IP_MULTICAST_TTL",E,E,N,N],[17,"IP_MULTICAST_LOOP",E,E,N,N],[17,"IPV6_UNICAST_HOPS",E,E,N,N],[17,"IPV6_MULTICAST_IF",E,E,N,N],[17,"IPV6_MULTICAST_HOPS",E,E,N,N],[17,"IPV6_MULTICAST_LOOP",E,E,N,N],[17,"IPV6_V6ONLY",E,E,N,N],[17,"IPTOS_ECN_NOTECT",E,E,N,N],[17,"IPTOS_ECN_MASK",E,E,N,N],[17,"IPTOS_ECN_ECT1",E,E,N,N],[17,"IPTOS_ECN_ECT0",E,E,N,N],[17,"IPTOS_ECN_CE",E,E,N,N],[17,"ST_RDONLY",E,E,N,N],[17,"SCM_RIGHTS",E,E,N,N],[17,"NCCS",E,E,N,N],[17,"O_ACCMODE",E,E,N,N],[17,"O_RDONLY",E,E,N,N],[17,"O_WRONLY",E,E,N,N],[17,"O_RDWR",E,E,N,N],[17,"O_APPEND",E,E,N,N],[17,"O_CREAT",E,E,N,N],[17,"O_TRUNC",E,E,N,N],[17,"O_EXCL",E,E,N,N],[17,"O_ASYNC",E,E,N,N],[17,"O_SYNC",E,E,N,N],[17,"O_NONBLOCK",E,E,N,N],[17,"O_NOFOLLOW",E,E,N,N],[17,"O_SHLOCK",E,E,N,N],[17,"O_EXLOCK",E,E,N,N],[17,"O_FSYNC",E,E,N,N],[17,"O_NDELAY",E,E,N,N],[17,"F_GETOWN",E,E,N,N],[17,"F_SETOWN",E,E,N,N],[17,"F_RDLCK",E,E,N,N],[17,"F_UNLCK",E,E,N,N],[17,"F_WRLCK",E,E,N,N],[17,"MNT_FORCE",E,E,N,N],[17,"Q_SYNC",E,E,N,N],[17,"Q_QUOTAON",E,E,N,N],[17,"Q_QUOTAOFF",E,E,N,N],[17,"TCIOFF",E,E,N,N],[17,"TCION",E,E,N,N],[17,"TCOOFF",E,E,N,N],[17,"TCOON",E,E,N,N],[17,"TCIFLUSH",E,E,N,N],[17,"TCOFLUSH",E,E,N,N],[17,"TCIOFLUSH",E,E,N,N],[17,"TCSANOW",E,E,N,N],[17,"TCSADRAIN",E,E,N,N],[17,"TCSAFLUSH",E,E,N,N],[17,"VEOF",E,E,N,N],[17,"VEOL",E,E,N,N],[17,"VEOL2",E,E,N,N],[17,"VERASE",E,E,N,N],[17,"VWERASE",E,E,N,N],[17,"VKILL",E,E,N,N],[17,"VREPRINT",E,E,N,N],[17,"VINTR",E,E,N,N],[17,"VQUIT",E,E,N,N],[17,"VSUSP",E,E,N,N],[17,"VDSUSP",E,E,N,N],[17,"VSTART",E,E,N,N],[17,"VSTOP",E,E,N,N],[17,"VLNEXT",E,E,N,N],[17,"VDISCARD",E,E,N,N],[17,"VMIN",E,E,N,N],[17,"VTIME",E,E,N,N],[17,"VSTATUS",E,E,N,N],[17,R[1406],E,E,N,N],[17,"IGNBRK",E,E,N,N],[17,"BRKINT",E,E,N,N],[17,"IGNPAR",E,E,N,N],[17,"PARMRK",E,E,N,N],[17,"INPCK",E,E,N,N],[17,"ISTRIP",E,E,N,N],[17,"INLCR",E,E,N,N],[17,"IGNCR",E,E,N,N],[17,"ICRNL",E,E,N,N],[17,"IXON",E,E,N,N],[17,"IXOFF",E,E,N,N],[17,"IXANY",E,E,N,N],[17,"IMAXBEL",E,E,N,N],[17,"OPOST",E,E,N,N],[17,"ONLCR",E,E,N,N],[17,"OXTABS",E,E,N,N],[17,"ONOEOT",E,E,N,N],[17,"CIGNORE",E,E,N,N],[17,"CSIZE",E,E,N,N],[17,"CS5",E,E,N,N],[17,"CS6",E,E,N,N],[17,"CS7",E,E,N,N],[17,"CS8",E,E,N,N],[17,"CSTOPB",E,E,N,N],[17,"CREAD",E,E,N,N],[17,"PARENB",E,E,N,N],[17,"PARODD",E,E,N,N],[17,"HUPCL",E,E,N,N],[17,"CLOCAL",E,E,N,N],[17,"ECHOKE",E,E,N,N],[17,"ECHOE",E,E,N,N],[17,"ECHOK",E,E,N,N],[17,"ECHO",E,E,N,N],[17,"ECHONL",E,E,N,N],[17,"ECHOPRT",E,E,N,N],[17,"ECHOCTL",E,E,N,N],[17,"ISIG",E,E,N,N],[17,"ICANON",E,E,N,N],[17,"ALTWERASE",E,E,N,N],[17,"IEXTEN",E,E,N,N],[17,"EXTPROC",E,E,N,N],[17,"TOSTOP",E,E,N,N],[17,"FLUSHO",E,E,N,N],[17,"NOKERNINFO",E,E,N,N],[17,"PENDIN",E,E,N,N],[17,"NOFLSH",E,E,N,N],[17,"MDMBUF",E,E,N,N],[17,"WNOHANG",E,E,N,N],[17,"WUNTRACED",E,E,N,N],[17,"RTLD_LAZY",E,E,N,N],[17,"RTLD_NOW",E,E,N,N],[17,"RTLD_NEXT",E,E,N,N],[17,"RTLD_DEFAULT",E,E,N,N],[17,"RTLD_SELF",E,E,N,N],[17,"LOG_CRON",E,E,N,N],[17,"LOG_AUTHPRIV",E,E,N,N],[17,"LOG_FTP",E,E,N,N],[17,"LOG_PERROR",E,E,N,N],[17,"TCP_NODELAY",E,E,N,N],[17,"TCP_MAXSEG",E,E,N,N],[17,"PIPE_BUF",E,E,N,N],[17,"POLLIN",E,E,N,N],[17,"POLLPRI",E,E,N,N],[17,"POLLOUT",E,E,N,N],[17,"POLLERR",E,E,N,N],[17,"POLLHUP",E,E,N,N],[17,"POLLNVAL",E,E,N,N],[17,"POLLRDNORM",E,E,N,N],[17,"POLLWRNORM",E,E,N,N],[17,"POLLRDBAND",E,E,N,N],[17,"POLLWRBAND",E,E,N,N],[17,"_UTX_USERSIZE",E,E,N,N],[17,"_UTX_LINESIZE",E,E,N,N],[17,"_UTX_IDSIZE",E,E,N,N],[17,"_UTX_HOSTSIZE",E,E,N,N],[17,"EMPTY",E,E,N,N],[17,"RUN_LVL",E,E,N,N],[17,"BOOT_TIME",E,E,N,N],[17,"OLD_TIME",E,E,N,N],[17,"NEW_TIME",E,E,N,N],[17,"INIT_PROCESS",E,E,N,N],[17,"LOGIN_PROCESS",E,E,N,N],[17,"USER_PROCESS",E,E,N,N],[17,"DEAD_PROCESS",E,E,N,N],[17,"ACCOUNTING",E,E,N,N],[17,"SIGNATURE",E,E,N,N],[17,"SHUTDOWN_TIME",E,E,N,N],[17,"LC_COLLATE_MASK",E,E,N,N],[17,"LC_CTYPE_MASK",E,E,N,N],[17,"LC_MESSAGES_MASK",E,E,N,N],[17,"LC_MONETARY_MASK",E,E,N,N],[17,"LC_NUMERIC_MASK",E,E,N,N],[17,"LC_TIME_MASK",E,E,N,N],[17,"LC_ALL_MASK",E,E,N,N],[17,"CODESET",E,E,N,N],[17,"D_T_FMT",E,E,N,N],[17,"D_FMT",E,E,N,N],[17,"T_FMT",E,E,N,N],[17,"T_FMT_AMPM",E,E,N,N],[17,"AM_STR",E,E,N,N],[17,"PM_STR",E,E,N,N],[17,"DAY_1",E,E,N,N],[17,"DAY_2",E,E,N,N],[17,"DAY_3",E,E,N,N],[17,"DAY_4",E,E,N,N],[17,"DAY_5",E,E,N,N],[17,"DAY_6",E,E,N,N],[17,"DAY_7",E,E,N,N],[17,"ABDAY_1",E,E,N,N],[17,"ABDAY_2",E,E,N,N],[17,"ABDAY_3",E,E,N,N],[17,"ABDAY_4",E,E,N,N],[17,"ABDAY_5",E,E,N,N],[17,"ABDAY_6",E,E,N,N],[17,"ABDAY_7",E,E,N,N],[17,"MON_1",E,E,N,N],[17,"MON_2",E,E,N,N],[17,"MON_3",E,E,N,N],[17,"MON_4",E,E,N,N],[17,"MON_5",E,E,N,N],[17,"MON_6",E,E,N,N],[17,"MON_7",E,E,N,N],[17,"MON_8",E,E,N,N],[17,"MON_9",E,E,N,N],[17,"MON_10",E,E,N,N],[17,"MON_11",E,E,N,N],[17,"MON_12",E,E,N,N],[17,"ABMON_1",E,E,N,N],[17,"ABMON_2",E,E,N,N],[17,"ABMON_3",E,E,N,N],[17,"ABMON_4",E,E,N,N],[17,"ABMON_5",E,E,N,N],[17,"ABMON_6",E,E,N,N],[17,"ABMON_7",E,E,N,N],[17,"ABMON_8",E,E,N,N],[17,"ABMON_9",E,E,N,N],[17,"ABMON_10",E,E,N,N],[17,"ABMON_11",E,E,N,N],[17,"ABMON_12",E,E,N,N],[17,"CLOCK_REALTIME",E,E,N,N],[17,"CLOCK_MONOTONIC",E,E,N,N],[17,"CLOCK_PROCESS_CPUTIME_ID",E,E,N,N],[17,"CLOCK_THREAD_CPUTIME_ID",E,E,N,N],[17,"ERA",E,E,N,N],[17,"ERA_D_FMT",E,E,N,N],[17,"ERA_D_T_FMT",E,E,N,N],[17,"ERA_T_FMT",E,E,N,N],[17,"ALT_DIGITS",E,E,N,N],[17,"RADIXCHAR",E,E,N,N],[17,"THOUSEP",E,E,N,N],[17,"YESEXPR",E,E,N,N],[17,"NOEXPR",E,E,N,N],[17,"YESSTR",E,E,N,N],[17,"NOSTR",E,E,N,N],[17,"CRNCYSTR",E,E,N,N],[17,"D_MD_ORDER",E,E,N,N],[17,"EXIT_FAILURE",E,E,N,N],[17,"EXIT_SUCCESS",E,E,N,N],[17,"RAND_MAX",E,E,N,N],[17,"EOF",E,E,N,N],[17,"SEEK_SET",E,E,N,N],[17,"SEEK_CUR",E,E,N,N],[17,"SEEK_END",E,E,N,N],[17,"_IOFBF",E,E,N,N],[17,"_IONBF",E,E,N,N],[17,"_IOLBF",E,E,N,N],[17,"BUFSIZ",E,E,N,N],[17,"FOPEN_MAX",E,E,N,N],[17,"FILENAME_MAX",E,E,N,N],[17,"L_tmpnam",E,E,N,N],[17,"TMP_MAX",E,E,N,N],[17,"_PC_LINK_MAX",E,E,N,N],[17,"_PC_MAX_CANON",E,E,N,N],[17,"_PC_MAX_INPUT",E,E,N,N],[17,"_PC_NAME_MAX",E,E,N,N],[17,"_PC_PATH_MAX",E,E,N,N],[17,"_PC_PIPE_BUF",E,E,N,N],[17,"_PC_CHOWN_RESTRICTED",E,E,N,N],[17,"_PC_NO_TRUNC",E,E,N,N],[17,"_PC_VDISABLE",E,E,N,N],[17,"O_DSYNC",E,E,N,N],[17,"O_NOCTTY",E,E,N,N],[17,"O_CLOEXEC",E,E,N,N],[17,R[1252],E,E,N,N],[17,"S_IFIFO",E,E,N,N],[17,"S_IFCHR",E,E,N,N],[17,"S_IFBLK",E,E,N,N],[17,"S_IFDIR",E,E,N,N],[17,"S_IFREG",E,E,N,N],[17,"S_IFLNK",E,E,N,N],[17,"S_IFSOCK",E,E,N,N],[17,"S_IFMT",E,E,N,N],[17,"S_IEXEC",E,E,N,N],[17,"S_IWRITE",E,E,N,N],[17,"S_IREAD",E,E,N,N],[17,"S_IRWXU",E,E,N,N],[17,"S_IXUSR",E,E,N,N],[17,"S_IWUSR",E,E,N,N],[17,"S_IRUSR",E,E,N,N],[17,"S_IRWXG",E,E,N,N],[17,"S_IXGRP",E,E,N,N],[17,"S_IWGRP",E,E,N,N],[17,"S_IRGRP",E,E,N,N],[17,"S_IRWXO",E,E,N,N],[17,"S_IXOTH",E,E,N,N],[17,"S_IWOTH",E,E,N,N],[17,"S_IROTH",E,E,N,N],[17,"F_OK",E,E,N,N],[17,"R_OK",E,E,N,N],[17,"W_OK",E,E,N,N],[17,"X_OK",E,E,N,N],[17,"STDIN_FILENO",E,E,N,N],[17,"STDOUT_FILENO",E,E,N,N],[17,"STDERR_FILENO",E,E,N,N],[17,"F_LOCK",E,E,N,N],[17,"F_TEST",E,E,N,N],[17,"F_TLOCK",E,E,N,N],[17,"F_ULOCK",E,E,N,N],[17,"F_GETLK",E,E,N,N],[17,"F_SETLK",E,E,N,N],[17,"F_SETLKW",E,E,N,N],[17,"SIGHUP",E,E,N,N],[17,"SIGINT",E,E,N,N],[17,"SIGQUIT",E,E,N,N],[17,"SIGILL",E,E,N,N],[17,"SIGABRT",E,E,N,N],[17,"SIGEMT",E,E,N,N],[17,"SIGFPE",E,E,N,N],[17,"SIGKILL",E,E,N,N],[17,"SIGSEGV",E,E,N,N],[17,"SIGPIPE",E,E,N,N],[17,"SIGALRM",E,E,N,N],[17,"SIGTERM",E,E,N,N],[17,"PROT_NONE",E,E,N,N],[17,"PROT_READ",E,E,N,N],[17,"PROT_WRITE",E,E,N,N],[17,"PROT_EXEC",E,E,N,N],[17,R[1353],E,E,N,N],[17,"PT_READ_I",E,E,N,N],[17,"PT_READ_D",E,E,N,N],[17,"PT_READ_U",E,E,N,N],[17,"PT_WRITE_I",E,E,N,N],[17,"PT_WRITE_D",E,E,N,N],[17,"PT_WRITE_U",E,E,N,N],[17,R[1354],E,E,N,N],[17,"PT_KILL",E,E,N,N],[17,"PT_STEP",E,E,N,N],[17,"PT_ATTACH",E,E,N,N],[17,"PT_DETACH",E,E,N,N],[17,"PT_SIGEXC",E,E,N,N],[17,R[1355],E,E,N,N],[17,R[1356],E,E,N,N],[17,"PT_FORCEQUOTA",E,E,N,N],[17,"PT_DENY_ATTACH",E,E,N,N],[17,"PT_FIRSTMACH",E,E,N,N],[17,"MAP_FILE",E,E,N,N],[17,"MAP_SHARED",E,E,N,N],[17,R[1343],E,E,N,N],[17,"MAP_FIXED",E,E,N,N],[17,"MAP_ANON",E,E,N,N],[17,"MAP_ANONYMOUS",E,E,N,N],[17,"VM_FLAGS_FIXED",E,E,N,N],[17,"VM_FLAGS_ANYWHERE",E,E,N,N],[17,"VM_FLAGS_PURGABLE",E,E,N,N],[17,"VM_FLAGS_RANDOM_ADDR",E,E,N,N],[17,"VM_FLAGS_NO_CACHE",E,E,N,N],[17,"VM_FLAGS_RESILIENT_CODESIGN",E,E,N,N],[17,"VM_FLAGS_RESILIENT_MEDIA",E,E,N,N],[17,"VM_FLAGS_OVERWRITE",E,E,N,N],[17,"VM_FLAGS_SUPERPAGE_MASK",E,E,N,N],[17,"VM_FLAGS_RETURN_DATA_ADDR",E,E,N,N],[17,"VM_FLAGS_RETURN_4K_DATA_ADDR",E,E,N,N],[17,"VM_FLAGS_ALIAS_MASK",E,E,N,N],[17,"VM_FLAGS_USER_ALLOCATE",E,E,N,N],[17,"VM_FLAGS_USER_MAP",E,E,N,N],[17,"VM_FLAGS_USER_REMAP",E,E,N,N],[17,"VM_FLAGS_SUPERPAGE_SHIFT",E,E,N,N],[17,"SUPERPAGE_NONE",E,E,N,N],[17,"SUPERPAGE_SIZE_ANY",E,E,N,N],[17,"VM_FLAGS_SUPERPAGE_NONE",E,E,N,N],[17,"VM_FLAGS_SUPERPAGE_SIZE_ANY",E,E,N,N],[17,"SUPERPAGE_SIZE_2MB",E,E,N,N],[17,"VM_FLAGS_SUPERPAGE_SIZE_2MB",E,E,N,N],[17,"VM_MEMORY_MALLOC",E,E,N,N],[17,"VM_MEMORY_MALLOC_SMALL",E,E,N,N],[17,"VM_MEMORY_MALLOC_LARGE",E,E,N,N],[17,"VM_MEMORY_MALLOC_HUGE",E,E,N,N],[17,"VM_MEMORY_SBRK",E,E,N,N],[17,"VM_MEMORY_REALLOC",E,E,N,N],[17,"VM_MEMORY_MALLOC_TINY",E,E,N,N],[17,"VM_MEMORY_MALLOC_LARGE_REUSABLE",E,E,N,N],[17,"VM_MEMORY_MALLOC_LARGE_REUSED",E,E,N,N],[17,"VM_MEMORY_ANALYSIS_TOOL",E,E,N,N],[17,"VM_MEMORY_MALLOC_NANO",E,E,N,N],[17,"VM_MEMORY_MACH_MSG",E,E,N,N],[17,"VM_MEMORY_IOKIT",E,E,N,N],[17,"VM_MEMORY_STACK",E,E,N,N],[17,"VM_MEMORY_GUARD",E,E,N,N],[17,"VM_MEMORY_SHARED_PMAP",E,E,N,N],[17,"VM_MEMORY_DYLIB",E,E,N,N],[17,"VM_MEMORY_OBJC_DISPATCHERS",E,E,N,N],[17,"VM_MEMORY_UNSHARED_PMAP",E,E,N,N],[17,"VM_MEMORY_APPKIT",E,E,N,N],[17,"VM_MEMORY_FOUNDATION",E,E,N,N],[17,"VM_MEMORY_COREGRAPHICS",E,E,N,N],[17,"VM_MEMORY_CORESERVICES",E,E,N,N],[17,"VM_MEMORY_CARBON",E,E,N,N],[17,"VM_MEMORY_JAVA",E,E,N,N],[17,"VM_MEMORY_COREDATA",E,E,N,N],[17,"VM_MEMORY_COREDATA_OBJECTIDS",E,E,N,N],[17,"VM_MEMORY_ATS",E,E,N,N],[17,"VM_MEMORY_LAYERKIT",E,E,N,N],[17,"VM_MEMORY_CGIMAGE",E,E,N,N],[17,"VM_MEMORY_TCMALLOC",E,E,N,N],[17,"VM_MEMORY_COREGRAPHICS_DATA",E,E,N,N],[17,"VM_MEMORY_COREGRAPHICS_SHARED",E,E,N,N],[17,"VM_MEMORY_COREGRAPHICS_FRAMEBUFFERS",E,E,N,N],[17,"VM_MEMORY_COREGRAPHICS_BACKINGSTORES",E,E,N,N],[17,"VM_MEMORY_COREGRAPHICS_XALLOC",E,E,N,N],[17,"VM_MEMORY_COREGRAPHICS_MISC",E,E,N,N],[17,"VM_MEMORY_DYLD",E,E,N,N],[17,"VM_MEMORY_DYLD_MALLOC",E,E,N,N],[17,"VM_MEMORY_SQLITE",E,E,N,N],[17,"VM_MEMORY_JAVASCRIPT_CORE",E,E,N,N],[17,"VM_MEMORY_JAVASCRIPT_JIT_EXECUTABLE_ALLOCATOR",E,E,N,N],[17,"VM_MEMORY_JAVASCRIPT_JIT_REGISTER_FILE",E,E,N,N],[17,"VM_MEMORY_GLSL",E,E,N,N],[17,"VM_MEMORY_OPENCL",E,E,N,N],[17,"VM_MEMORY_COREIMAGE",E,E,N,N],[17,"VM_MEMORY_WEBCORE_PURGEABLE_BUFFERS",E,E,N,N],[17,"VM_MEMORY_IMAGEIO",E,E,N,N],[17,"VM_MEMORY_COREPROFILE",E,E,N,N],[17,"VM_MEMORY_ASSETSD",E,E,N,N],[17,"VM_MEMORY_OS_ALLOC_ONCE",E,E,N,N],[17,"VM_MEMORY_LIBDISPATCH",E,E,N,N],[17,"VM_MEMORY_ACCELERATE",E,E,N,N],[17,"VM_MEMORY_COREUI",E,E,N,N],[17,"VM_MEMORY_COREUIFILE",E,E,N,N],[17,"VM_MEMORY_GENEALOGY",E,E,N,N],[17,"VM_MEMORY_RAWCAMERA",E,E,N,N],[17,"VM_MEMORY_CORPSEINFO",E,E,N,N],[17,"VM_MEMORY_ASL",E,E,N,N],[17,"VM_MEMORY_SWIFT_RUNTIME",E,E,N,N],[17,"VM_MEMORY_SWIFT_METADATA",E,E,N,N],[17,"VM_MEMORY_DHMM",E,E,N,N],[17,"VM_MEMORY_SCENEKIT",E,E,N,N],[17,"VM_MEMORY_SKYWALK",E,E,N,N],[17,"VM_MEMORY_APPLICATION_SPECIFIC_1",E,E,N,N],[17,"VM_MEMORY_APPLICATION_SPECIFIC_16",E,E,N,N],[17,"MAP_FAILED",E,E,N,N],[17,R[1350],E,E,N,N],[17,"MCL_FUTURE",E,E,N,N],[17,"MS_ASYNC",E,E,N,N],[17,R[1347],E,E,N,N],[17,"MS_SYNC",E,E,N,N],[17,R[1348],E,E,N,N],[17,R[1349],E,E,N,N],[17,"EPERM",E,E,N,N],[17,"ENOENT",E,E,N,N],[17,"ESRCH",E,E,N,N],[17,"EINTR",E,E,N,N],[17,"EIO",E,E,N,N],[17,"ENXIO",E,E,N,N],[17,"E2BIG",E,E,N,N],[17,"ENOEXEC",E,E,N,N],[17,"EBADF",E,E,N,N],[17,"ECHILD",E,E,N,N],[17,"EDEADLK",E,E,N,N],[17,"ENOMEM",E,E,N,N],[17,"EACCES",E,E,N,N],[17,"EFAULT",E,E,N,N],[17,"ENOTBLK",E,E,N,N],[17,"EBUSY",E,E,N,N],[17,"EEXIST",E,E,N,N],[17,"EXDEV",E,E,N,N],[17,"ENODEV",E,E,N,N],[17,"ENOTDIR",E,E,N,N],[17,"EISDIR",E,E,N,N],[17,"EINVAL",E,E,N,N],[17,"ENFILE",E,E,N,N],[17,"EMFILE",E,E,N,N],[17,"ENOTTY",E,E,N,N],[17,"ETXTBSY",E,E,N,N],[17,"EFBIG",E,E,N,N],[17,"ENOSPC",E,E,N,N],[17,"ESPIPE",E,E,N,N],[17,"EROFS",E,E,N,N],[17,"EMLINK",E,E,N,N],[17,"EPIPE",E,E,N,N],[17,"EDOM",E,E,N,N],[17,"ERANGE",E,E,N,N],[17,"EAGAIN",E,E,N,N],[17,R[1246],E,E,N,N],[17,R[1227],E,E,N,N],[17,"EALREADY",E,E,N,N],[17,"ENOTSOCK",E,E,N,N],[17,R[1228],E,E,N,N],[17,"EMSGSIZE",E,E,N,N],[17,"EPROTOTYPE",E,E,N,N],[17,R[1229],E,E,N,N],[17,R[1230],E,E,N,N],[17,R[1231],E,E,N,N],[17,"ENOTSUP",E,E,N,N],[17,R[1232],E,E,N,N],[17,R[1233],E,E,N,N],[17,"EADDRINUSE",E,E,N,N],[17,R[1234],E,E,N,N],[17,"ENETDOWN",E,E,N,N],[17,R[1235],E,E,N,N],[17,"ENETRESET",E,E,N,N],[17,R[1236],E,E,N,N],[17,"ECONNRESET",E,E,N,N],[17,"ENOBUFS",E,E,N,N],[17,"EISCONN",E,E,N,N],[17,"ENOTCONN",E,E,N,N],[17,"ESHUTDOWN",E,E,N,N],[17,R[1237],E,E,N,N],[17,"ETIMEDOUT",E,E,N,N],[17,R[1238],E,E,N,N],[17,"ELOOP",E,E,N,N],[17,R[1239],E,E,N,N],[17,"EHOSTDOWN",E,E,N,N],[17,R[1240],E,E,N,N],[17,"ENOTEMPTY",E,E,N,N],[17,"EPROCLIM",E,E,N,N],[17,"EUSERS",E,E,N,N],[17,"EDQUOT",E,E,N,N],[17,"ESTALE",E,E,N,N],[17,"EREMOTE",E,E,N,N],[17,"EBADRPC",E,E,N,N],[17,R[1241],E,E,N,N],[17,R[1242],E,E,N,N],[17,R[1243],E,E,N,N],[17,R[1244],E,E,N,N],[17,"ENOLCK",E,E,N,N],[17,"ENOSYS",E,E,N,N],[17,"EFTYPE",E,E,N,N],[17,"EAUTH",E,E,N,N],[17,"ENEEDAUTH",E,E,N,N],[17,"EPWROFF",E,E,N,N],[17,"EDEVERR",E,E,N,N],[17,"EOVERFLOW",E,E,N,N],[17,"EBADEXEC",E,E,N,N],[17,"EBADARCH",E,E,N,N],[17,"ESHLIBVERS",E,E,N,N],[17,"EBADMACHO",E,E,N,N],[17,"ECANCELED",E,E,N,N],[17,"EIDRM",E,E,N,N],[17,"ENOMSG",E,E,N,N],[17,"EILSEQ",E,E,N,N],[17,"ENOATTR",E,E,N,N],[17,"EBADMSG",E,E,N,N],[17,"EMULTIHOP",E,E,N,N],[17,"ENODATA",E,E,N,N],[17,"ENOLINK",E,E,N,N],[17,"ENOSR",E,E,N,N],[17,"ENOSTR",E,E,N,N],[17,"EPROTO",E,E,N,N],[17,"ETIME",E,E,N,N],[17,"EOPNOTSUPP",E,E,N,N],[17,"ENOPOLICY",E,E,N,N],[17,R[1245],E,E,N,N],[17,"EOWNERDEAD",E,E,N,N],[17,"EQFULL",E,E,N,N],[17,"ELAST",E,E,N,N],[17,"EAI_AGAIN",E,E,N,N],[17,"EAI_BADFLAGS",E,E,N,N],[17,"EAI_FAIL",E,E,N,N],[17,"EAI_FAMILY",E,E,N,N],[17,"EAI_MEMORY",E,E,N,N],[17,"EAI_NODATA",E,E,N,N],[17,"EAI_NONAME",E,E,N,N],[17,"EAI_SERVICE",E,E,N,N],[17,"EAI_SOCKTYPE",E,E,N,N],[17,"EAI_SYSTEM",E,E,N,N],[17,"EAI_OVERFLOW",E,E,N,N],[17,"F_DUPFD",E,E,N,N],[17,R[1248],E,E,N,N],[17,"F_GETFD",E,E,N,N],[17,"F_SETFD",E,E,N,N],[17,"F_GETFL",E,E,N,N],[17,"F_SETFL",E,E,N,N],[17,"F_PREALLOCATE",E,E,N,N],[17,"F_RDADVISE",E,E,N,N],[17,"F_RDAHEAD",E,E,N,N],[17,"F_NOCACHE",E,E,N,N],[17,"F_GETPATH",E,E,N,N],[17,R[1249],E,E,N,N],[17,"F_FREEZE_FS",E,E,N,N],[17,"F_THAW_FS",E,E,N,N],[17,"F_GLOBAL_NOCACHE",E,E,N,N],[17,"F_NODIRECT",E,E,N,N],[17,"F_ALLOCATECONTIG",E,E,N,N],[17,"F_ALLOCATEALL",E,E,N,N],[17,"F_PEOFPOSMODE",E,E,N,N],[17,"F_VOLPOSMODE",E,E,N,N],[17,"AT_FDCWD",E,E,N,N],[17,"AT_EACCESS",E,E,N,N],[17,R[1251],E,E,N,N],[17,"AT_SYMLINK_FOLLOW",E,E,N,N],[17,R[1250],E,E,N,N],[17,"TIOCMODG",E,E,N,N],[17,"TIOCMODS",E,E,N,N],[17,"TIOCM_LE",E,E,N,N],[17,"TIOCM_DTR",E,E,N,N],[17,"TIOCM_RTS",E,E,N,N],[17,"TIOCM_ST",E,E,N,N],[17,"TIOCM_SR",E,E,N,N],[17,"TIOCM_CTS",E,E,N,N],[17,"TIOCM_CAR",E,E,N,N],[17,"TIOCM_CD",E,E,N,N],[17,"TIOCM_RNG",E,E,N,N],[17,"TIOCM_RI",E,E,N,N],[17,"TIOCM_DSR",E,E,N,N],[17,"TIOCEXCL",E,E,N,N],[17,"TIOCNXCL",E,E,N,N],[17,"TIOCFLUSH",E,E,N,N],[17,"TIOCGETD",E,E,N,N],[17,"TIOCSETD",E,E,N,N],[17,"TIOCIXON",E,E,N,N],[17,"TIOCIXOFF",E,E,N,N],[17,"TIOCSBRK",E,E,N,N],[17,"TIOCCBRK",E,E,N,N],[17,"TIOCSDTR",E,E,N,N],[17,"TIOCCDTR",E,E,N,N],[17,"TIOCGPGRP",E,E,N,N],[17,"TIOCSPGRP",E,E,N,N],[17,"TIOCOUTQ",E,E,N,N],[17,"TIOCSTI",E,E,N,N],[17,"TIOCNOTTY",E,E,N,N],[17,"TIOCPKT",E,E,N,N],[17,"TIOCPKT_DATA",E,E,N,N],[17,"TIOCPKT_FLUSHREAD",E,E,N,N],[17,"TIOCPKT_FLUSHWRITE",E,E,N,N],[17,"TIOCPKT_STOP",E,E,N,N],[17,"TIOCPKT_START",E,E,N,N],[17,"TIOCPKT_NOSTOP",E,E,N,N],[17,"TIOCPKT_DOSTOP",E,E,N,N],[17,"TIOCPKT_IOCTL",E,E,N,N],[17,"TIOCSTOP",E,E,N,N],[17,"TIOCSTART",E,E,N,N],[17,"TIOCMSET",E,E,N,N],[17,"TIOCMBIS",E,E,N,N],[17,"TIOCMBIC",E,E,N,N],[17,"TIOCMGET",E,E,N,N],[17,"TIOCREMOTE",E,E,N,N],[17,"TIOCGWINSZ",E,E,N,N],[17,"TIOCSWINSZ",E,E,N,N],[17,"TIOCUCNTL",E,E,N,N],[17,"TIOCSTAT",E,E,N,N],[17,"TIOCSCONS",E,E,N,N],[17,"TIOCCONS",E,E,N,N],[17,"TIOCSCTTY",E,E,N,N],[17,"TIOCEXT",E,E,N,N],[17,"TIOCSIG",E,E,N,N],[17,"TIOCDRAIN",E,E,N,N],[17,"TIOCMSDTRWAIT",E,E,N,N],[17,"TIOCMGDTRWAIT",E,E,N,N],[17,"TIOCSDRAINWAIT",E,E,N,N],[17,"TIOCGDRAINWAIT",E,E,N,N],[17,"TIOCDSIMICROCODE",E,E,N,N],[17,"TIOCPTYGRANT",E,E,N,N],[17,"TIOCPTYGNAME",E,E,N,N],[17,"TIOCPTYUNLK",E,E,N,N],[17,"FIODTYPE",E,E,N,N],[17,"B0",E,E,N,N],[17,"B50",E,E,N,N],[17,"B75",E,E,N,N],[17,"B110",E,E,N,N],[17,"B134",E,E,N,N],[17,"B150",E,E,N,N],[17,"B200",E,E,N,N],[17,"B300",E,E,N,N],[17,"B600",E,E,N,N],[17,"B1200",E,E,N,N],[17,"B1800",E,E,N,N],[17,"B2400",E,E,N,N],[17,"B4800",E,E,N,N],[17,"B9600",E,E,N,N],[17,"B19200",E,E,N,N],[17,"B38400",E,E,N,N],[17,"B7200",E,E,N,N],[17,"B14400",E,E,N,N],[17,"B28800",E,E,N,N],[17,"B57600",E,E,N,N],[17,"B76800",E,E,N,N],[17,"B115200",E,E,N,N],[17,"B230400",E,E,N,N],[17,"EXTA",E,E,N,N],[17,"EXTB",E,E,N,N],[17,"SIGTRAP",E,E,N,N],[17,"GLOB_APPEND",E,E,N,N],[17,"GLOB_DOOFFS",E,E,N,N],[17,"GLOB_ERR",E,E,N,N],[17,"GLOB_MARK",E,E,N,N],[17,"GLOB_NOCHECK",E,E,N,N],[17,"GLOB_NOSORT",E,E,N,N],[17,"GLOB_NOESCAPE",E,E,N,N],[17,"GLOB_NOSPACE",E,E,N,N],[17,"GLOB_ABORTED",E,E,N,N],[17,"GLOB_NOMATCH",E,E,N,N],[17,"POSIX_MADV_NORMAL",E,E,N,N],[17,"POSIX_MADV_RANDOM",E,E,N,N],[17,"POSIX_MADV_SEQUENTIAL",E,E,N,N],[17,"POSIX_MADV_WILLNEED",E,E,N,N],[17,"POSIX_MADV_DONTNEED",E,E,N,N],[17,"_SC_IOV_MAX",E,E,N,N],[17,"_SC_GETGR_R_SIZE_MAX",E,E,N,N],[17,"_SC_GETPW_R_SIZE_MAX",E,E,N,N],[17,"_SC_LOGIN_NAME_MAX",E,E,N,N],[17,"_SC_MQ_PRIO_MAX",E,E,N,N],[17,"_SC_THREAD_ATTR_STACKADDR",E,E,N,N],[17,"_SC_THREAD_ATTR_STACKSIZE",E,E,N,N],[17,"_SC_THREAD_DESTRUCTOR_ITERATIONS",E,E,N,N],[17,"_SC_THREAD_KEYS_MAX",E,E,N,N],[17,"_SC_THREAD_PRIO_INHERIT",E,E,N,N],[17,"_SC_THREAD_PRIO_PROTECT",E,E,N,N],[17,"_SC_THREAD_PRIORITY_SCHEDULING",E,E,N,N],[17,"_SC_THREAD_PROCESS_SHARED",E,E,N,N],[17,"_SC_THREAD_SAFE_FUNCTIONS",E,E,N,N],[17,"_SC_THREAD_STACK_MIN",E,E,N,N],[17,"_SC_THREAD_THREADS_MAX",E,E,N,N],[17,"_SC_THREADS",E,E,N,N],[17,"_SC_TTY_NAME_MAX",E,E,N,N],[17,"_SC_ATEXIT_MAX",E,E,N,N],[17,"_SC_XOPEN_CRYPT",E,E,N,N],[17,"_SC_XOPEN_ENH_I18N",E,E,N,N],[17,"_SC_XOPEN_LEGACY",E,E,N,N],[17,"_SC_XOPEN_REALTIME",E,E,N,N],[17,"_SC_XOPEN_REALTIME_THREADS",E,E,N,N],[17,"_SC_XOPEN_SHM",E,E,N,N],[17,"_SC_XOPEN_UNIX",E,E,N,N],[17,"_SC_XOPEN_VERSION",E,E,N,N],[17,"_SC_XOPEN_XCU_VERSION",E,E,N,N],[17,"_SC_PHYS_PAGES",E,E,N,N],[17,"PTHREAD_PROCESS_PRIVATE",E,E,N,N],[17,"PTHREAD_PROCESS_SHARED",E,E,N,N],[17,"PTHREAD_CREATE_JOINABLE",E,E,N,N],[17,"PTHREAD_CREATE_DETACHED",E,E,N,N],[17,R[1424],E,E,N,N],[17,"RLIMIT_CPU",E,E,N,N],[17,"RLIMIT_FSIZE",E,E,N,N],[17,"RLIMIT_DATA",E,E,N,N],[17,"RLIMIT_STACK",E,E,N,N],[17,"RLIMIT_CORE",E,E,N,N],[17,"RLIMIT_AS",E,E,N,N],[17,"RLIMIT_RSS",E,E,N,N],[17,"RLIMIT_MEMLOCK",E,E,N,N],[17,"RLIMIT_NPROC",E,E,N,N],[17,"RLIMIT_NOFILE",E,E,N,N],[17,"RLIM_NLIMITS",E,E,N,N],[17,"_RLIMIT_POSIX_FLAG",E,E,N,N],[17,"RLIM_INFINITY",E,E,N,N],[17,"RUSAGE_SELF",E,E,N,N],[17,"RUSAGE_CHILDREN",E,E,N,N],[17,R[1333],E,E,N,N],[17,R[1334],E,E,N,N],[17,R[1335],E,E,N,N],[17,R[1336],E,E,N,N],[17,R[1337],E,E,N,N],[17,"MADV_FREE",E,E,N,N],[17,R[1338],E,E,N,N],[17,R[1339],E,E,N,N],[17,R[1340],E,E,N,N],[17,R[1341],E,E,N,N],[17,"MINCORE_INCORE",E,E,N,N],[17,"MINCORE_REFERENCED",E,E,N,N],[17,"MINCORE_MODIFIED",E,E,N,N],[17,"MINCORE_REFERENCED_OTHER",E,E,N,N],[17,"MINCORE_MODIFIED_OTHER",E,E,N,N],[17,"IPPROTO_HOPOPTS",E,"IP6 hop-by-hop options",N,N],[17,"IPPROTO_IGMP",E,"group mgmt protocol",N,N],[17,"IPPROTO_GGP",E,"gateway2 (deprecated)",N,N],[17,"IPPROTO_IPIP",E,"for compatibility",N,N],[17,"IPPROTO_ST",E,"Stream protocol II.",N,N],[17,"IPPROTO_EGP",E,"exterior gateway protocol",N,N],[17,"IPPROTO_PIGP",E,"private interior gateway",N,N],[17,"IPPROTO_RCCMON",E,"BBN RCC Monitoring",N,N],[17,"IPPROTO_NVPII",E,"network voice protocol",N,N],[17,"IPPROTO_PUP",E,"pup",N,N],[17,"IPPROTO_ARGUS",E,"Argus",N,N],[17,"IPPROTO_EMCON",E,"EMCON",N,N],[17,"IPPROTO_XNET",E,"Cross Net Debugger",N,N],[17,"IPPROTO_CHAOS",E,"Chaos",N,N],[17,"IPPROTO_MUX",E,"Multiplexing",N,N],[17,"IPPROTO_MEAS",E,"DCN Measurement Subsystems",N,N],[17,"IPPROTO_HMP",E,"Host Monitoring",N,N],[17,"IPPROTO_PRM",E,"Packet Radio Measurement",N,N],[17,"IPPROTO_IDP",E,"xns idp",N,N],[17,"IPPROTO_TRUNK1",E,"Trunk-1",N,N],[17,"IPPROTO_TRUNK2",E,"Trunk-2",N,N],[17,"IPPROTO_LEAF1",E,"Leaf-1",N,N],[17,"IPPROTO_LEAF2",E,"Leaf-2",N,N],[17,"IPPROTO_RDP",E,"Reliable Data",N,N],[17,"IPPROTO_IRTP",E,"Reliable Transaction",N,N],[17,"IPPROTO_TP",E,"tp-4 w/ class negotiation",N,N],[17,"IPPROTO_BLT",E,"Bulk Data Transfer",N,N],[17,"IPPROTO_NSP",E,"Network Services",N,N],[17,"IPPROTO_INP",E,"Merit Internodal",N,N],[17,"IPPROTO_SEP",E,"Sequential Exchange",N,N],[17,"IPPROTO_3PC",E,"Third Party Connect",N,N],[17,"IPPROTO_IDPR",E,"InterDomain Policy Routing",N,N],[17,"IPPROTO_XTP",E,"XTP",N,N],[17,"IPPROTO_DDP",E,"Datagram Delivery",N,N],[17,"IPPROTO_CMTP",E,"Control Message Transport",N,N],[17,"IPPROTO_TPXX",E,"TP++ Transport",N,N],[17,"IPPROTO_IL",E,"IL transport protocol",N,N],[17,"IPPROTO_SDRP",E,"Source Demand Routing",N,N],[17,"IPPROTO_ROUTING",E,"IP6 routing header",N,N],[17,"IPPROTO_FRAGMENT",E,"IP6 fragmentation header",N,N],[17,"IPPROTO_IDRP",E,"InterDomain Routing",N,N],[17,"IPPROTO_RSVP",E,"resource reservation",N,N],[17,"IPPROTO_GRE",E,"General Routing Encap.",N,N],[17,"IPPROTO_MHRP",E,"Mobile Host Routing",N,N],[17,"IPPROTO_BHA",E,"BHA",N,N],[17,"IPPROTO_ESP",E,"IP6 Encap Sec. Payload",N,N],[17,"IPPROTO_AH",E,"IP6 Auth Header",N,N],[17,"IPPROTO_INLSP",E,"Integ. Net Layer Security",N,N],[17,"IPPROTO_SWIPE",E,"IP with encryption",N,N],[17,"IPPROTO_NHRP",E,"Next Hop Resolution",N,N],[17,"IPPROTO_NONE",E,"IP6 no next header",N,N],[17,"IPPROTO_DSTOPTS",E,"IP6 destination option",N,N],[17,"IPPROTO_AHIP",E,"any host internal protocol",N,N],[17,"IPPROTO_CFTP",E,"CFTP",N,N],[17,"IPPROTO_HELLO",E,"\"hello\" routing protocol",N,N],[17,"IPPROTO_SATEXPAK",E,"SATNET/Backroom EXPAK",N,N],[17,"IPPROTO_KRYPTOLAN",E,"Kryptolan",N,N],[17,"IPPROTO_RVD",E,"Remote Virtual Disk",N,N],[17,"IPPROTO_IPPC",E,"Pluribus Packet Core",N,N],[17,"IPPROTO_ADFS",E,"Any distributed FS",N,N],[17,"IPPROTO_SATMON",E,"Satnet Monitoring",N,N],[17,"IPPROTO_VISA",E,"VISA Protocol",N,N],[17,"IPPROTO_IPCV",E,"Packet Core Utility",N,N],[17,"IPPROTO_CPNX",E,"Comp. Prot. Net. Executive",N,N],[17,"IPPROTO_CPHB",E,"Comp. Prot. HeartBeat",N,N],[17,"IPPROTO_WSN",E,"Wang Span Network",N,N],[17,"IPPROTO_PVP",E,"Packet Video Protocol",N,N],[17,"IPPROTO_BRSATMON",E,"BackRoom SATNET Monitoring",N,N],[17,"IPPROTO_ND",E,"Sun net disk proto (temp.)",N,N],[17,"IPPROTO_WBMON",E,"WIDEBAND Monitoring",N,N],[17,"IPPROTO_WBEXPAK",E,"WIDEBAND EXPAK",N,N],[17,"IPPROTO_EON",E,"ISO cnlp",N,N],[17,"IPPROTO_VMTP",E,"VMTP",N,N],[17,"IPPROTO_SVMTP",E,"Secure VMTP",N,N],[17,"IPPROTO_VINES",E,"Banyon VINES",N,N],[17,"IPPROTO_TTP",E,"TTP",N,N],[17,"IPPROTO_IGP",E,"NSFNET-IGP",N,N],[17,"IPPROTO_DGP",E,"dissimilar gateway prot.",N,N],[17,"IPPROTO_TCF",E,"TCF",N,N],[17,"IPPROTO_IGRP",E,"Cisco/GXS IGRP",N,N],[17,"IPPROTO_OSPFIGP",E,"OSPFIGP",N,N],[17,"IPPROTO_SRPC",E,"Strite RPC protocol",N,N],[17,"IPPROTO_LARP",E,"Locus Address Resoloution",N,N],[17,"IPPROTO_MTP",E,"Multicast Transport",N,N],[17,"IPPROTO_AX25",E,"AX.25 Frames",N,N],[17,"IPPROTO_IPEIP",E,"IP encapsulated in IP",N,N],[17,"IPPROTO_MICP",E,"Mobile Int.ing control",N,N],[17,"IPPROTO_SCCSP",E,"Semaphore Comm. security",N,N],[17,"IPPROTO_ETHERIP",E,"Ethernet IP encapsulation",N,N],[17,"IPPROTO_ENCAP",E,"encapsulation header",N,N],[17,"IPPROTO_APES",E,"any private encr. scheme",N,N],[17,"IPPROTO_GMTP",E,"GMTP",N,N],[17,"IPPROTO_PIM",E,"Protocol Independent Mcast",N,N],[17,"IPPROTO_IPCOMP",E,"payload compression (IPComp)",N,N],[17,"IPPROTO_PGM",E,"PGM",N,N],[17,"IPPROTO_SCTP",E,"SCTP",N,N],[17,"IPPROTO_DIVERT",E,"divert pseudo-protocol",N,N],[17,"IPPROTO_RAW",E,"raw IP packet",N,N],[17,"IPPROTO_MAX",E,E,N,N],[17,"IPPROTO_DONE",E,"last return value of *_input(), meaning \"all job for this…",N,N],[17,"AF_UNSPEC",E,E,N,N],[17,"AF_LOCAL",E,E,N,N],[17,"AF_UNIX",E,E,N,N],[17,"AF_INET",E,E,N,N],[17,"AF_IMPLINK",E,E,N,N],[17,"AF_PUP",E,E,N,N],[17,"AF_CHAOS",E,E,N,N],[17,"AF_NS",E,E,N,N],[17,"AF_ISO",E,E,N,N],[17,"AF_OSI",E,E,N,N],[17,"AF_ECMA",E,E,N,N],[17,"AF_DATAKIT",E,E,N,N],[17,"AF_CCITT",E,E,N,N],[17,"AF_SNA",E,E,N,N],[17,"AF_DECnet",E,E,N,N],[17,"AF_DLI",E,E,N,N],[17,"AF_LAT",E,E,N,N],[17,"AF_HYLINK",E,E,N,N],[17,"AF_APPLETALK",E,E,N,N],[17,"AF_ROUTE",E,E,N,N],[17,"AF_LINK",E,E,N,N],[17,"pseudo_AF_XTP",E,E,N,N],[17,"AF_COIP",E,E,N,N],[17,"AF_CNT",E,E,N,N],[17,"pseudo_AF_RTIP",E,E,N,N],[17,"AF_IPX",E,E,N,N],[17,"AF_SIP",E,E,N,N],[17,"pseudo_AF_PIP",E,E,N,N],[17,"AF_ISDN",E,E,N,N],[17,"AF_E164",E,E,N,N],[17,"pseudo_AF_KEY",E,E,N,N],[17,"AF_INET6",E,E,N,N],[17,"AF_NATM",E,E,N,N],[17,"AF_SYSTEM",E,E,N,N],[17,"AF_NETBIOS",E,E,N,N],[17,"AF_PPP",E,E,N,N],[17,"pseudo_AF_HDRCMPLT",E,E,N,N],[17,"AF_SYS_CONTROL",E,E,N,N],[17,"SYSPROTO_EVENT",E,E,N,N],[17,"SYSPROTO_CONTROL",E,E,N,N],[17,"PF_UNSPEC",E,E,N,N],[17,"PF_LOCAL",E,E,N,N],[17,"PF_UNIX",E,E,N,N],[17,"PF_INET",E,E,N,N],[17,"PF_IMPLINK",E,E,N,N],[17,"PF_PUP",E,E,N,N],[17,"PF_CHAOS",E,E,N,N],[17,"PF_NS",E,E,N,N],[17,"PF_ISO",E,E,N,N],[17,"PF_OSI",E,E,N,N],[17,"PF_ECMA",E,E,N,N],[17,"PF_DATAKIT",E,E,N,N],[17,"PF_CCITT",E,E,N,N],[17,"PF_SNA",E,E,N,N],[17,"PF_DECnet",E,E,N,N],[17,"PF_DLI",E,E,N,N],[17,"PF_LAT",E,E,N,N],[17,"PF_HYLINK",E,E,N,N],[17,"PF_APPLETALK",E,E,N,N],[17,"PF_ROUTE",E,E,N,N],[17,"PF_LINK",E,E,N,N],[17,"PF_XTP",E,E,N,N],[17,"PF_COIP",E,E,N,N],[17,"PF_CNT",E,E,N,N],[17,"PF_SIP",E,E,N,N],[17,"PF_IPX",E,E,N,N],[17,"PF_RTIP",E,E,N,N],[17,"PF_PIP",E,E,N,N],[17,"PF_ISDN",E,E,N,N],[17,"PF_KEY",E,E,N,N],[17,"PF_INET6",E,E,N,N],[17,"PF_NATM",E,E,N,N],[17,"PF_SYSTEM",E,E,N,N],[17,"PF_NETBIOS",E,E,N,N],[17,"PF_PPP",E,E,N,N],[17,"NET_RT_DUMP",E,E,N,N],[17,"NET_RT_FLAGS",E,E,N,N],[17,"NET_RT_IFLIST",E,E,N,N],[17,"SOMAXCONN",E,E,N,N],[17,"SOCK_MAXADDRLEN",E,E,N,N],[17,"SOCK_STREAM",E,E,N,N],[17,"SOCK_DGRAM",E,E,N,N],[17,"SOCK_RAW",E,E,N,N],[17,"SOCK_RDM",E,E,N,N],[17,"SOCK_SEQPACKET",E,E,N,N],[17,"IP_TTL",E,E,N,N],[17,"IP_HDRINCL",E,E,N,N],[17,"IP_RECVDSTADDR",E,E,N,N],[17,"IP_ADD_MEMBERSHIP",E,E,N,N],[17,"IP_DROP_MEMBERSHIP",E,E,N,N],[17,"IP_RECVIF",E,E,N,N],[17,"IP_PKTINFO",E,E,N,N],[17,"IP_RECVTOS",E,E,N,N],[17,"IPV6_JOIN_GROUP",E,E,N,N],[17,"IPV6_LEAVE_GROUP",E,E,N,N],[17,"IPV6_RECVTCLASS",E,E,N,N],[17,"IPV6_TCLASS",E,E,N,N],[17,"IPV6_PKTINFO",E,E,N,N],[17,"IPV6_RECVPKTINFO",E,E,N,N],[17,"TCP_NOPUSH",E,E,N,N],[17,"TCP_NOOPT",E,E,N,N],[17,"TCP_KEEPALIVE",E,E,N,N],[17,"SOL_LOCAL",E,E,N,N],[17,"LOCAL_PEERCRED",E,E,N,N],[17,"LOCAL_PEERPID",E,E,N,N],[17,"LOCAL_PEEREPID",E,E,N,N],[17,"LOCAL_PEERUUID",E,E,N,N],[17,"LOCAL_PEEREUUID",E,E,N,N],[17,"SOL_SOCKET",E,E,N,N],[17,"SO_DEBUG",E,E,N,N],[17,"SO_ACCEPTCONN",E,E,N,N],[17,"SO_REUSEADDR",E,E,N,N],[17,"SO_KEEPALIVE",E,E,N,N],[17,"SO_DONTROUTE",E,E,N,N],[17,"SO_BROADCAST",E,E,N,N],[17,"SO_USELOOPBACK",E,E,N,N],[17,"SO_LINGER",E,E,N,N],[17,"SO_OOBINLINE",E,E,N,N],[17,"SO_REUSEPORT",E,E,N,N],[17,"SO_TIMESTAMP",E,E,N,N],[17,"SO_TIMESTAMP_MONOTONIC",E,E,N,N],[17,"SO_DONTTRUNC",E,E,N,N],[17,"SO_WANTMORE",E,E,N,N],[17,"SO_WANTOOBFLAG",E,E,N,N],[17,"SO_SNDBUF",E,E,N,N],[17,"SO_RCVBUF",E,E,N,N],[17,"SO_SNDLOWAT",E,E,N,N],[17,"SO_RCVLOWAT",E,E,N,N],[17,"SO_SNDTIMEO",E,E,N,N],[17,"SO_RCVTIMEO",E,E,N,N],[17,"SO_ERROR",E,E,N,N],[17,"SO_TYPE",E,E,N,N],[17,"SO_LABEL",E,E,N,N],[17,"SO_PEERLABEL",E,E,N,N],[17,"SO_NREAD",E,E,N,N],[17,"SO_NKE",E,E,N,N],[17,"SO_NOSIGPIPE",E,E,N,N],[17,"SO_NOADDRERR",E,E,N,N],[17,"SO_NWRITE",E,E,N,N],[17,"SO_REUSESHAREUID",E,E,N,N],[17,"SO_NOTIFYCONFLICT",E,E,N,N],[17,"SO_RANDOMPORT",E,E,N,N],[17,"SO_NP_EXTENSIONS",E,E,N,N],[17,"MSG_OOB",E,E,N,N],[17,"MSG_PEEK",E,E,N,N],[17,"MSG_DONTROUTE",E,E,N,N],[17,"MSG_EOR",E,E,N,N],[17,"MSG_TRUNC",E,E,N,N],[17,"MSG_CTRUNC",E,E,N,N],[17,R[1388],E,E,N,N],[17,R[1389],E,E,N,N],[17,"MSG_EOF",E,E,N,N],[17,"MSG_FLUSH",E,E,N,N],[17,"MSG_HOLD",E,E,N,N],[17,"MSG_SEND",E,E,N,N],[17,"MSG_HAVEMORE",E,E,N,N],[17,"MSG_RCVMORE",E,E,N,N],[17,"SCM_TIMESTAMP",E,E,N,N],[17,"SCM_CREDS",E,E,N,N],[17,"IFF_UP",E,E,N,N],[17,R[1270],E,E,N,N],[17,"IFF_DEBUG",E,E,N,N],[17,R[1271],E,E,N,N],[17,R[1272],E,E,N,N],[17,R[1273],E,E,N,N],[17,R[1274],E,E,N,N],[17,"IFF_NOARP",E,E,N,N],[17,R[1275],E,E,N,N],[17,R[1276],E,E,N,N],[17,R[1277],E,E,N,N],[17,R[1278],E,E,N,N],[17,"IFF_LINK0",E,E,N,N],[17,"IFF_LINK1",E,E,N,N],[17,"IFF_LINK2",E,E,N,N],[17,R[1281],E,E,N,N],[17,R[1279],E,E,N,N],[17,"SHUT_RD",E,E,N,N],[17,"SHUT_WR",E,E,N,N],[17,"SHUT_RDWR",E,E,N,N],[17,"LOCK_SH",E,E,N,N],[17,"LOCK_EX",E,E,N,N],[17,"LOCK_NB",E,E,N,N],[17,"LOCK_UN",E,E,N,N],[17,"MAP_COPY",E,E,N,N],[17,"MAP_RENAME",E,E,N,N],[17,R[1344],E,E,N,N],[17,"MAP_NOEXTEND",E,E,N,N],[17,"MAP_HASSEMAPHORE",E,E,N,N],[17,R[1345],E,E,N,N],[17,"MAP_JIT",E,E,N,N],[17,"_SC_ARG_MAX",E,E,N,N],[17,"_SC_CHILD_MAX",E,E,N,N],[17,"_SC_CLK_TCK",E,E,N,N],[17,"_SC_NGROUPS_MAX",E,E,N,N],[17,"_SC_OPEN_MAX",E,E,N,N],[17,"_SC_JOB_CONTROL",E,E,N,N],[17,"_SC_SAVED_IDS",E,E,N,N],[17,"_SC_VERSION",E,E,N,N],[17,"_SC_BC_BASE_MAX",E,E,N,N],[17,"_SC_BC_DIM_MAX",E,E,N,N],[17,"_SC_BC_SCALE_MAX",E,E,N,N],[17,"_SC_BC_STRING_MAX",E,E,N,N],[17,"_SC_COLL_WEIGHTS_MAX",E,E,N,N],[17,"_SC_EXPR_NEST_MAX",E,E,N,N],[17,"_SC_LINE_MAX",E,E,N,N],[17,"_SC_RE_DUP_MAX",E,E,N,N],[17,"_SC_2_VERSION",E,E,N,N],[17,"_SC_2_C_BIND",E,E,N,N],[17,"_SC_2_C_DEV",E,E,N,N],[17,"_SC_2_CHAR_TERM",E,E,N,N],[17,"_SC_2_FORT_DEV",E,E,N,N],[17,"_SC_2_FORT_RUN",E,E,N,N],[17,"_SC_2_LOCALEDEF",E,E,N,N],[17,"_SC_2_SW_DEV",E,E,N,N],[17,"_SC_2_UPE",E,E,N,N],[17,"_SC_STREAM_MAX",E,E,N,N],[17,"_SC_TZNAME_MAX",E,E,N,N],[17,"_SC_ASYNCHRONOUS_IO",E,E,N,N],[17,"_SC_PAGESIZE",E,E,N,N],[17,"_SC_MEMLOCK",E,E,N,N],[17,"_SC_MEMLOCK_RANGE",E,E,N,N],[17,"_SC_MEMORY_PROTECTION",E,E,N,N],[17,"_SC_MESSAGE_PASSING",E,E,N,N],[17,"_SC_PRIORITIZED_IO",E,E,N,N],[17,"_SC_PRIORITY_SCHEDULING",E,E,N,N],[17,"_SC_REALTIME_SIGNALS",E,E,N,N],[17,"_SC_SEMAPHORES",E,E,N,N],[17,"_SC_FSYNC",E,E,N,N],[17,"_SC_SHARED_MEMORY_OBJECTS",E,E,N,N],[17,"_SC_SYNCHRONIZED_IO",E,E,N,N],[17,"_SC_TIMERS",E,E,N,N],[17,"_SC_AIO_LISTIO_MAX",E,E,N,N],[17,"_SC_AIO_MAX",E,E,N,N],[17,"_SC_AIO_PRIO_DELTA_MAX",E,E,N,N],[17,"_SC_DELAYTIMER_MAX",E,E,N,N],[17,"_SC_MQ_OPEN_MAX",E,E,N,N],[17,"_SC_MAPPED_FILES",E,E,N,N],[17,"_SC_RTSIG_MAX",E,E,N,N],[17,"_SC_SEM_NSEMS_MAX",E,E,N,N],[17,"_SC_SEM_VALUE_MAX",E,E,N,N],[17,"_SC_SIGQUEUE_MAX",E,E,N,N],[17,"_SC_TIMER_MAX",E,E,N,N],[17,"_SC_NPROCESSORS_CONF",E,E,N,N],[17,"_SC_NPROCESSORS_ONLN",E,E,N,N],[17,"_SC_2_PBS",E,E,N,N],[17,"_SC_2_PBS_ACCOUNTING",E,E,N,N],[17,"_SC_2_PBS_CHECKPOINT",E,E,N,N],[17,"_SC_2_PBS_LOCATE",E,E,N,N],[17,"_SC_2_PBS_MESSAGE",E,E,N,N],[17,"_SC_2_PBS_TRACK",E,E,N,N],[17,"_SC_ADVISORY_INFO",E,E,N,N],[17,"_SC_BARRIERS",E,E,N,N],[17,"_SC_CLOCK_SELECTION",E,E,N,N],[17,"_SC_CPUTIME",E,E,N,N],[17,"_SC_FILE_LOCKING",E,E,N,N],[17,"_SC_HOST_NAME_MAX",E,E,N,N],[17,"_SC_MONOTONIC_CLOCK",E,E,N,N],[17,"_SC_READER_WRITER_LOCKS",E,E,N,N],[17,"_SC_REGEXP",E,E,N,N],[17,"_SC_SHELL",E,E,N,N],[17,"_SC_SPAWN",E,E,N,N],[17,"_SC_SPIN_LOCKS",E,E,N,N],[17,"_SC_SPORADIC_SERVER",E,E,N,N],[17,"_SC_THREAD_CPUTIME",E,E,N,N],[17,"_SC_THREAD_SPORADIC_SERVER",E,E,N,N],[17,"_SC_TIMEOUTS",E,E,N,N],[17,"_SC_TRACE",E,E,N,N],[17,"_SC_TRACE_EVENT_FILTER",E,E,N,N],[17,"_SC_TRACE_INHERIT",E,E,N,N],[17,"_SC_TRACE_LOG",E,E,N,N],[17,"_SC_TYPED_MEMORY_OBJECTS",E,E,N,N],[17,"_SC_V6_ILP32_OFF32",E,E,N,N],[17,"_SC_V6_ILP32_OFFBIG",E,E,N,N],[17,"_SC_V6_LP64_OFF64",E,E,N,N],[17,"_SC_V6_LPBIG_OFFBIG",E,E,N,N],[17,"_SC_IPV6",E,E,N,N],[17,"_SC_RAW_SOCKETS",E,E,N,N],[17,"_SC_SYMLOOP_MAX",E,E,N,N],[17,"_SC_PAGE_SIZE",E,E,N,N],[17,"_SC_XOPEN_STREAMS",E,E,N,N],[17,"_SC_XBS5_ILP32_OFF32",E,E,N,N],[17,"_SC_XBS5_ILP32_OFFBIG",E,E,N,N],[17,"_SC_XBS5_LP64_OFF64",E,E,N,N],[17,"_SC_XBS5_LPBIG_OFFBIG",E,E,N,N],[17,"_SC_SS_REPL_MAX",E,E,N,N],[17,"_SC_TRACE_EVENT_NAME_MAX",E,E,N,N],[17,"_SC_TRACE_NAME_MAX",E,E,N,N],[17,"_SC_TRACE_SYS_MAX",E,E,N,N],[17,"_SC_TRACE_USER_EVENT_MAX",E,E,N,N],[17,"_SC_PASS_MAX",E,E,N,N],[17,"PTHREAD_MUTEX_NORMAL",E,E,N,N],[17,"PTHREAD_MUTEX_ERRORCHECK",E,E,N,N],[17,"PTHREAD_MUTEX_RECURSIVE",E,E,N,N],[17,"PTHREAD_MUTEX_DEFAULT",E,E,N,N],[17,"_PTHREAD_MUTEX_SIG_init",E,E,N,N],[17,"_PTHREAD_COND_SIG_init",E,E,N,N],[17,"_PTHREAD_RWLOCK_SIG_init",E,E,N,N],[17,"PTHREAD_MUTEX_INITIALIZER",E,E,N,N],[17,"PTHREAD_COND_INITIALIZER",E,E,N,N],[17,"PTHREAD_RWLOCK_INITIALIZER",E,E,N,N],[17,"SIGSTKSZ",E,E,N,N],[17,"FD_SETSIZE",E,E,N,N],[17,"ST_NOSUID",E,E,N,N],[17,R[1299],E,E,N,N],[17,R[1304],E,E,N,N],[17,"EVFILT_AIO",E,E,N,N],[17,R[1303],E,E,N,N],[17,R[1298],E,E,N,N],[17,R[1300],E,E,N,N],[17,R[1301],E,E,N,N],[17,R[1297],E,E,N,N],[17,"EVFILT_FS",E,E,N,N],[17,R[1302],E,E,N,N],[17,"EVFILT_VM",E,E,N,N],[17,"EV_ADD",E,E,N,N],[17,"EV_DELETE",E,E,N,N],[17,"EV_ENABLE",E,E,N,N],[17,"EV_DISABLE",E,E,N,N],[17,"EV_ONESHOT",E,E,N,N],[17,"EV_CLEAR",E,E,N,N],[17,"EV_RECEIPT",E,E,N,N],[17,R[1305],E,E,N,N],[17,"EV_FLAG0",E,E,N,N],[17,"EV_POLL",E,E,N,N],[17,"EV_FLAG1",E,E,N,N],[17,"EV_OOBAND",E,E,N,N],[17,"EV_ERROR",E,E,N,N],[17,"EV_EOF",E,E,N,N],[17,R[1306],E,E,N,N],[17,R[1325],E,E,N,N],[17,"NOTE_FFNOP",E,E,N,N],[17,"NOTE_FFAND",E,E,N,N],[17,"NOTE_FFOR",E,E,N,N],[17,R[1314],E,E,N,N],[17,R[1315],E,E,N,N],[17,R[1316],E,E,N,N],[17,"NOTE_LOWAT",E,E,N,N],[17,R[1311],E,E,N,N],[17,"NOTE_WRITE",E,E,N,N],[17,R[1313],E,E,N,N],[17,R[1310],E,E,N,N],[17,"NOTE_LINK",E,E,N,N],[17,R[1320],E,E,N,N],[17,R[1321],E,E,N,N],[17,"NOTE_NONE",E,E,N,N],[17,"NOTE_EXIT",E,E,N,N],[17,"NOTE_FORK",E,E,N,N],[17,"NOTE_EXEC",E,E,N,N],[17,R[1323],E,E,N,N],[17,R[1312],E,E,N,N],[17,"NOTE_EXIT_DETAIL",E,E,N,N],[17,R[1319],E,E,N,N],[17,R[1318],E,E,N,N],[17,"NOTE_EXIT_DETAIL_MASK",E,E,N,N],[17,"NOTE_EXIT_DECRYPTFAIL",E,E,N,N],[17,"NOTE_EXIT_MEMORY",E,E,N,N],[17,"NOTE_EXIT_CSERROR",E,E,N,N],[17,R[1328],E,E,N,N],[17,R[1330],E,E,N,N],[17,R[1329],E,E,N,N],[17,R[1327],E,E,N,N],[17,R[1322],E,E,N,N],[17,R[1326],E,E,N,N],[17,R[1317],E,E,N,N],[17,R[1309],E,E,N,N],[17,"NOTE_LEEWAY",E,E,N,N],[17,"NOTE_CRITICAL",E,E,N,N],[17,"NOTE_BACKGROUND",E,E,N,N],[17,"NOTE_TRACK",E,E,N,N],[17,R[1324],E,E,N,N],[17,"NOTE_CHILD",E,E,N,N],[17,"OCRNL",E,E,N,N],[17,"ONOCR",E,E,N,N],[17,"ONLRET",E,E,N,N],[17,"OFILL",E,E,N,N],[17,"NLDLY",E,E,N,N],[17,"TABDLY",E,E,N,N],[17,"CRDLY",E,E,N,N],[17,"FFDLY",E,E,N,N],[17,"BSDLY",E,E,N,N],[17,"VTDLY",E,E,N,N],[17,"OFDEL",E,E,N,N],[17,"NL0",E,E,N,N],[17,"NL1",E,E,N,N],[17,"TAB0",E,E,N,N],[17,"TAB1",E,E,N,N],[17,"TAB2",E,E,N,N],[17,"CR0",E,E,N,N],[17,"CR1",E,E,N,N],[17,"CR2",E,E,N,N],[17,"CR3",E,E,N,N],[17,"FF0",E,E,N,N],[17,"FF1",E,E,N,N],[17,"BS0",E,E,N,N],[17,"BS1",E,E,N,N],[17,"TAB3",E,E,N,N],[17,"VT0",E,E,N,N],[17,"VT1",E,E,N,N],[17,"IUTF8",E,E,N,N],[17,"CRTSCTS",E,E,N,N],[17,"NI_MAXHOST",E,E,N,N],[17,"NI_MAXSERV",E,E,N,N],[17,"NI_NOFQDN",E,E,N,N],[17,"NI_NUMERICHOST",E,E,N,N],[17,"NI_NAMEREQD",E,E,N,N],[17,"NI_NUMERICSERV",E,E,N,N],[17,"NI_NUMERICSCOPE",E,E,N,N],[17,"NI_DGRAM",E,E,N,N],[17,"Q_GETQUOTA",E,E,N,N],[17,"Q_SETQUOTA",E,E,N,N],[17,"RENAME_SWAP",E,E,N,N],[17,"RENAME_EXCL",E,E,N,N],[17,"RTLD_LOCAL",E,E,N,N],[17,"RTLD_FIRST",E,E,N,N],[17,"RTLD_NODELETE",E,E,N,N],[17,"RTLD_NOLOAD",E,E,N,N],[17,"RTLD_GLOBAL",E,E,N,N],[17,"_WSTOPPED",E,E,N,N],[17,"LOG_NETINFO",E,E,N,N],[17,"LOG_REMOTEAUTH",E,E,N,N],[17,"LOG_INSTALL",E,E,N,N],[17,"LOG_RAS",E,E,N,N],[17,"LOG_LAUNCHD",E,E,N,N],[17,"LOG_NFACILITIES",E,E,N,N],[17,"CTLTYPE",E,E,N,N],[17,"CTLTYPE_NODE",E,E,N,N],[17,"CTLTYPE_INT",E,E,N,N],[17,"CTLTYPE_STRING",E,E,N,N],[17,"CTLTYPE_QUAD",E,E,N,N],[17,"CTLTYPE_OPAQUE",E,E,N,N],[17,"CTLTYPE_STRUCT",E,E,N,N],[17,"CTLFLAG_RD",E,E,N,N],[17,"CTLFLAG_WR",E,E,N,N],[17,"CTLFLAG_RW",E,E,N,N],[17,"CTLFLAG_NOLOCK",E,E,N,N],[17,"CTLFLAG_ANYBODY",E,E,N,N],[17,"CTLFLAG_SECURE",E,E,N,N],[17,"CTLFLAG_MASKED",E,E,N,N],[17,"CTLFLAG_NOAUTO",E,E,N,N],[17,"CTLFLAG_KERN",E,E,N,N],[17,"CTLFLAG_LOCKED",E,E,N,N],[17,"CTLFLAG_OID2",E,E,N,N],[17,"CTL_UNSPEC",E,E,N,N],[17,"CTL_KERN",E,E,N,N],[17,"CTL_VM",E,E,N,N],[17,"CTL_VFS",E,E,N,N],[17,"CTL_NET",E,E,N,N],[17,"CTL_DEBUG",E,E,N,N],[17,"CTL_HW",E,E,N,N],[17,"CTL_MACHDEP",E,E,N,N],[17,"CTL_USER",E,E,N,N],[17,"CTL_MAXID",E,E,N,N],[17,"KERN_OSTYPE",E,E,N,N],[17,"KERN_OSRELEASE",E,E,N,N],[17,"KERN_OSREV",E,E,N,N],[17,"KERN_VERSION",E,E,N,N],[17,"KERN_MAXVNODES",E,E,N,N],[17,"KERN_MAXPROC",E,E,N,N],[17,"KERN_MAXFILES",E,E,N,N],[17,"KERN_ARGMAX",E,E,N,N],[17,"KERN_SECURELVL",E,E,N,N],[17,"KERN_HOSTNAME",E,E,N,N],[17,"KERN_HOSTID",E,E,N,N],[17,"KERN_CLOCKRATE",E,E,N,N],[17,"KERN_VNODE",E,E,N,N],[17,"KERN_PROC",E,E,N,N],[17,"KERN_FILE",E,E,N,N],[17,"KERN_PROF",E,E,N,N],[17,"KERN_POSIX1",E,E,N,N],[17,"KERN_NGROUPS",E,E,N,N],[17,"KERN_JOB_CONTROL",E,E,N,N],[17,"KERN_SAVED_IDS",E,E,N,N],[17,"KERN_BOOTTIME",E,E,N,N],[17,"KERN_NISDOMAINNAME",E,E,N,N],[17,"KERN_DOMAINNAME",E,E,N,N],[17,"KERN_MAXPARTITIONS",E,E,N,N],[17,"KERN_KDEBUG",E,E,N,N],[17,"KERN_UPDATEINTERVAL",E,E,N,N],[17,"KERN_OSRELDATE",E,E,N,N],[17,"KERN_NTP_PLL",E,E,N,N],[17,"KERN_BOOTFILE",E,E,N,N],[17,"KERN_MAXFILESPERPROC",E,E,N,N],[17,"KERN_MAXPROCPERUID",E,E,N,N],[17,"KERN_DUMPDEV",E,E,N,N],[17,"KERN_IPC",E,E,N,N],[17,"KERN_DUMMY",E,E,N,N],[17,"KERN_PS_STRINGS",E,E,N,N],[17,"KERN_USRSTACK32",E,E,N,N],[17,"KERN_LOGSIGEXIT",E,E,N,N],[17,"KERN_SYMFILE",E,E,N,N],[17,"KERN_PROCARGS",E,E,N,N],[17,"KERN_NETBOOT",E,E,N,N],[17,"KERN_SYSV",E,E,N,N],[17,"KERN_AFFINITY",E,E,N,N],[17,"KERN_TRANSLATE",E,E,N,N],[17,"KERN_CLASSIC",E,E,N,N],[17,"KERN_EXEC",E,E,N,N],[17,"KERN_CLASSICHANDLER",E,E,N,N],[17,"KERN_AIOMAX",E,E,N,N],[17,"KERN_AIOPROCMAX",E,E,N,N],[17,"KERN_AIOTHREADS",E,E,N,N],[17,"KERN_COREFILE",E,E,N,N],[17,"KERN_COREDUMP",E,E,N,N],[17,"KERN_SUGID_COREDUMP",E,E,N,N],[17,"KERN_PROCDELAYTERM",E,E,N,N],[17,"KERN_SHREG_PRIVATIZABLE",E,E,N,N],[17,"KERN_LOW_PRI_WINDOW",E,E,N,N],[17,"KERN_LOW_PRI_DELAY",E,E,N,N],[17,"KERN_POSIX",E,E,N,N],[17,"KERN_USRSTACK64",E,E,N,N],[17,"KERN_NX_PROTECTION",E,E,N,N],[17,"KERN_TFP",E,E,N,N],[17,"KERN_PROCNAME",E,E,N,N],[17,"KERN_THALTSTACK",E,E,N,N],[17,"KERN_SPECULATIVE_READS",E,E,N,N],[17,"KERN_OSVERSION",E,E,N,N],[17,"KERN_SAFEBOOT",E,E,N,N],[17,"KERN_RAGEVNODE",E,E,N,N],[17,"KERN_TTY",E,E,N,N],[17,"KERN_CHECKOPENEVT",E,E,N,N],[17,"KERN_THREADNAME",E,E,N,N],[17,"KERN_MAXID",E,E,N,N],[17,"KERN_RAGE_PROC",E,E,N,N],[17,"KERN_RAGE_THREAD",E,E,N,N],[17,"KERN_UNRAGE_PROC",E,E,N,N],[17,"KERN_UNRAGE_THREAD",E,E,N,N],[17,"KERN_OPENEVT_PROC",E,E,N,N],[17,"KERN_UNOPENEVT_PROC",E,E,N,N],[17,"KERN_TFP_POLICY",E,E,N,N],[17,"KERN_TFP_POLICY_DENY",E,E,N,N],[17,"KERN_TFP_POLICY_DEFAULT",E,E,N,N],[17,"KERN_KDEFLAGS",E,E,N,N],[17,"KERN_KDDFLAGS",E,E,N,N],[17,"KERN_KDENABLE",E,E,N,N],[17,"KERN_KDSETBUF",E,E,N,N],[17,"KERN_KDGETBUF",E,E,N,N],[17,"KERN_KDSETUP",E,E,N,N],[17,"KERN_KDREMOVE",E,E,N,N],[17,"KERN_KDSETREG",E,E,N,N],[17,"KERN_KDGETREG",E,E,N,N],[17,"KERN_KDREADTR",E,E,N,N],[17,"KERN_KDPIDTR",E,E,N,N],[17,"KERN_KDTHRMAP",E,E,N,N],[17,"KERN_KDPIDEX",E,E,N,N],[17,"KERN_KDSETRTCDEC",E,E,N,N],[17,"KERN_KDGETENTROPY",E,E,N,N],[17,"KERN_KDWRITETR",E,E,N,N],[17,"KERN_KDWRITEMAP",E,E,N,N],[17,"KERN_KDREADCURTHRMAP",E,E,N,N],[17,"KERN_KDSET_TYPEFILTER",E,E,N,N],[17,"KERN_KDBUFWAIT",E,E,N,N],[17,"KERN_KDCPUMAP",E,E,N,N],[17,"KERN_PROC_ALL",E,E,N,N],[17,"KERN_PROC_PID",E,E,N,N],[17,"KERN_PROC_PGRP",E,E,N,N],[17,"KERN_PROC_SESSION",E,E,N,N],[17,"KERN_PROC_TTY",E,E,N,N],[17,"KERN_PROC_UID",E,E,N,N],[17,"KERN_PROC_RUID",E,E,N,N],[17,"KERN_PROC_LCID",E,E,N,N],[17,"KIPC_MAXSOCKBUF",E,E,N,N],[17,"KIPC_SOCKBUF_WASTE",E,E,N,N],[17,"KIPC_SOMAXCONN",E,E,N,N],[17,"KIPC_MAX_LINKHDR",E,E,N,N],[17,"KIPC_MAX_PROTOHDR",E,E,N,N],[17,"KIPC_MAX_HDR",E,E,N,N],[17,"KIPC_MAX_DATALEN",E,E,N,N],[17,"KIPC_MBSTAT",E,E,N,N],[17,"KIPC_NMBCLUSTERS",E,E,N,N],[17,"KIPC_SOQLIMITCOMPAT",E,E,N,N],[17,"VM_METER",E,E,N,N],[17,"VM_LOADAVG",E,E,N,N],[17,"VM_MACHFACTOR",E,E,N,N],[17,"VM_SWAPUSAGE",E,E,N,N],[17,"VM_MAXID",E,E,N,N],[17,"HW_MACHINE",E,E,N,N],[17,"HW_MODEL",E,E,N,N],[17,"HW_NCPU",E,E,N,N],[17,"HW_BYTEORDER",E,E,N,N],[17,"HW_PHYSMEM",E,E,N,N],[17,"HW_USERMEM",E,E,N,N],[17,"HW_PAGESIZE",E,E,N,N],[17,"HW_DISKNAMES",E,E,N,N],[17,"HW_DISKSTATS",E,E,N,N],[17,"HW_EPOCH",E,E,N,N],[17,"HW_FLOATINGPT",E,E,N,N],[17,"HW_MACHINE_ARCH",E,E,N,N],[17,"HW_VECTORUNIT",E,E,N,N],[17,"HW_BUS_FREQ",E,E,N,N],[17,"HW_CPU_FREQ",E,E,N,N],[17,"HW_CACHELINE",E,E,N,N],[17,"HW_L1ICACHESIZE",E,E,N,N],[17,"HW_L1DCACHESIZE",E,E,N,N],[17,"HW_L2SETTINGS",E,E,N,N],[17,"HW_L2CACHESIZE",E,E,N,N],[17,"HW_L3SETTINGS",E,E,N,N],[17,"HW_L3CACHESIZE",E,E,N,N],[17,"HW_TB_FREQ",E,E,N,N],[17,"HW_MEMSIZE",E,E,N,N],[17,"HW_AVAILCPU",E,E,N,N],[17,"HW_MAXID",E,E,N,N],[17,"USER_CS_PATH",E,E,N,N],[17,"USER_BC_BASE_MAX",E,E,N,N],[17,"USER_BC_DIM_MAX",E,E,N,N],[17,"USER_BC_SCALE_MAX",E,E,N,N],[17,"USER_BC_STRING_MAX",E,E,N,N],[17,"USER_COLL_WEIGHTS_MAX",E,E,N,N],[17,"USER_EXPR_NEST_MAX",E,E,N,N],[17,"USER_LINE_MAX",E,E,N,N],[17,"USER_RE_DUP_MAX",E,E,N,N],[17,"USER_POSIX2_VERSION",E,E,N,N],[17,"USER_POSIX2_C_BIND",E,E,N,N],[17,"USER_POSIX2_C_DEV",E,E,N,N],[17,"USER_POSIX2_CHAR_TERM",E,E,N,N],[17,"USER_POSIX2_FORT_DEV",E,E,N,N],[17,"USER_POSIX2_FORT_RUN",E,E,N,N],[17,"USER_POSIX2_LOCALEDEF",E,E,N,N],[17,"USER_POSIX2_SW_DEV",E,E,N,N],[17,"USER_POSIX2_UPE",E,E,N,N],[17,"USER_STREAM_MAX",E,E,N,N],[17,"USER_TZNAME_MAX",E,E,N,N],[17,"USER_MAXID",E,E,N,N],[17,"CTL_DEBUG_NAME",E,E,N,N],[17,"CTL_DEBUG_VALUE",E,E,N,N],[17,"CTL_DEBUG_MAXID",E,E,N,N],[17,"PRIO_DARWIN_THREAD",E,E,N,N],[17,"PRIO_DARWIN_PROCESS",E,E,N,N],[17,"PRIO_DARWIN_BG",E,E,N,N],[17,"PRIO_DARWIN_NONUI",E,E,N,N],[17,"SEM_FAILED",E,E,N,N],[17,"AI_PASSIVE",E,E,N,N],[17,"AI_CANONNAME",E,E,N,N],[17,"AI_NUMERICHOST",E,E,N,N],[17,"AI_NUMERICSERV",E,E,N,N],[17,"AI_MASK",E,E,N,N],[17,"AI_ALL",E,E,N,N],[17,"AI_V4MAPPED_CFG",E,E,N,N],[17,"AI_ADDRCONFIG",E,E,N,N],[17,"AI_V4MAPPED",E,E,N,N],[17,"AI_DEFAULT",E,E,N,N],[17,"AI_UNUSABLE",E,E,N,N],[17,"SIGEV_NONE",E,E,N,N],[17,"SIGEV_SIGNAL",E,E,N,N],[17,"SIGEV_THREAD",E,E,N,N],[17,"AIO_CANCELED",E,E,N,N],[17,"AIO_NOTCANCELED",E,E,N,N],[17,"AIO_ALLDONE",E,E,N,N],[17,R[1421],E,E,N,N],[17,"LIO_NOP",E,E,N,N],[17,"LIO_WRITE",E,E,N,N],[17,"LIO_READ",E,E,N,N],[17,"LIO_WAIT",E,E,N,N],[17,"LIO_NOWAIT",E,E,N,N],[17,"WEXITED",E,E,N,N],[17,"WSTOPPED",E,E,N,N],[17,"WCONTINUED",E,E,N,N],[17,"WNOWAIT",E,E,N,N],[17,"P_ALL",E,E,N,N],[17,"P_PID",E,E,N,N],[17,"P_PGID",E,E,N,N],[17,"XATTR_NOFOLLOW",E,E,N,N],[17,"XATTR_CREATE",E,E,N,N],[17,"XATTR_REPLACE",E,E,N,N],[17,"XATTR_NOSECURITY",E,E,N,N],[17,"XATTR_NODEFAULT",E,E,N,N],[17,"XATTR_SHOWCOMPRESSION",E,E,N,N],[17,"NET_RT_IFLIST2",E,E,N,N],[17,"RTF_UP",E,E,N,N],[17,"RTF_GATEWAY",E,E,N,N],[17,"RTF_HOST",E,E,N,N],[17,"RTF_REJECT",E,E,N,N],[17,"RTF_DYNAMIC",E,E,N,N],[17,"RTF_MODIFIED",E,E,N,N],[17,"RTF_DONE",E,E,N,N],[17,"RTF_DELCLONE",E,E,N,N],[17,"RTF_CLONING",E,E,N,N],[17,"RTF_XRESOLVE",E,E,N,N],[17,"RTF_LLINFO",E,E,N,N],[17,"RTF_STATIC",E,E,N,N],[17,"RTF_BLACKHOLE",E,E,N,N],[17,"RTF_NOIFREF",E,E,N,N],[17,"RTF_PROTO2",E,E,N,N],[17,"RTF_PROTO1",E,E,N,N],[17,"RTF_PRCLONING",E,E,N,N],[17,"RTF_WASCLONED",E,E,N,N],[17,"RTF_PROTO3",E,E,N,N],[17,"RTF_PINNED",E,E,N,N],[17,"RTF_LOCAL",E,E,N,N],[17,"RTF_BROADCAST",E,E,N,N],[17,"RTF_MULTICAST",E,E,N,N],[17,"RTF_IFSCOPE",E,E,N,N],[17,"RTF_CONDEMNED",E,E,N,N],[17,"RTF_IFREF",E,E,N,N],[17,"RTF_PROXY",E,E,N,N],[17,"RTF_ROUTER",E,E,N,N],[17,"RTM_VERSION",E,E,N,N],[17,"RTM_ADD",E,E,N,N],[17,"RTM_DELETE",E,E,N,N],[17,"RTM_CHANGE",E,E,N,N],[17,"RTM_GET",E,E,N,N],[17,"RTM_LOSING",E,E,N,N],[17,"RTM_REDIRECT",E,E,N,N],[17,"RTM_MISS",E,E,N,N],[17,"RTM_LOCK",E,E,N,N],[17,"RTM_OLDADD",E,E,N,N],[17,"RTM_OLDDEL",E,E,N,N],[17,"RTM_RESOLVE",E,E,N,N],[17,"RTM_NEWADDR",E,E,N,N],[17,"RTM_DELADDR",E,E,N,N],[17,"RTM_IFINFO",E,E,N,N],[17,"RTM_NEWMADDR",E,E,N,N],[17,"RTM_DELMADDR",E,E,N,N],[17,"RTM_IFINFO2",E,E,N,N],[17,"RTM_NEWMADDR2",E,E,N,N],[17,"RTM_GET2",E,E,N,N],[17,"RTV_MTU",E,E,N,N],[17,"RTV_HOPCOUNT",E,E,N,N],[17,"RTV_EXPIRE",E,E,N,N],[17,"RTV_RPIPE",E,E,N,N],[17,"RTV_SPIPE",E,E,N,N],[17,"RTV_SSTHRESH",E,E,N,N],[17,"RTV_RTT",E,E,N,N],[17,"RTV_RTTVAR",E,E,N,N],[17,"RTA_DST",E,E,N,N],[17,"RTA_GATEWAY",E,E,N,N],[17,"RTA_NETMASK",E,E,N,N],[17,"RTA_GENMASK",E,E,N,N],[17,"RTA_IFP",E,E,N,N],[17,"RTA_IFA",E,E,N,N],[17,"RTA_AUTHOR",E,E,N,N],[17,"RTA_BRD",E,E,N,N],[17,"RTAX_DST",E,E,N,N],[17,"RTAX_GATEWAY",E,E,N,N],[17,"RTAX_NETMASK",E,E,N,N],[17,"RTAX_GENMASK",E,E,N,N],[17,"RTAX_IFP",E,E,N,N],[17,"RTAX_IFA",E,E,N,N],[17,"RTAX_AUTHOR",E,E,N,N],[17,"RTAX_BRD",E,E,N,N],[17,"RTAX_MAX",E,E,N,N],[17,"KERN_PROCARGS2",E,E,N,N],[17,"PROC_PIDTASKALLINFO",E,E,N,N],[17,"PROC_PIDTASKINFO",E,E,N,N],[17,"PROC_PIDTHREADINFO",E,E,N,N],[17,"MAXCOMLEN",E,E,N,N],[17,"MAXTHREADNAMESIZE",E,E,N,N],[17,"XUCRED_VERSION",E,E,N,N],[17,"LC_SEGMENT",E,E,N,N],[17,R[4350],E,E,N,N],[17,"MH_MAGIC",E,E,N,N],[17,R[4351],E,E,N,N],[17,"UTUN_OPT_FLAGS",E,E,N,N],[17,"UTUN_OPT_IFNAME",E,E,N,N],[17,"DLT_NULL",E,E,N,N],[17,"DLT_EN10MB",E,E,N,N],[17,"DLT_EN3MB",E,E,N,N],[17,"DLT_AX25",E,E,N,N],[17,"DLT_PRONET",E,E,N,N],[17,"DLT_CHAOS",E,E,N,N],[17,"DLT_IEEE802",E,E,N,N],[17,"DLT_ARCNET",E,E,N,N],[17,"DLT_SLIP",E,E,N,N],[17,"DLT_PPP",E,E,N,N],[17,"DLT_FDDI",E,E,N,N],[17,"DLT_ATM_RFC1483",E,E,N,N],[17,"DLT_RAW",E,E,N,N],[17,"DLT_LOOP",E,E,N,N],[17,"BPF_ALIGNMENT",E,E,N,N],[17,"POSIX_SPAWN_RESETIDS",E,E,N,N],[17,"POSIX_SPAWN_SETPGROUP",E,E,N,N],[17,"POSIX_SPAWN_SETSIGDEF",E,E,N,N],[17,"POSIX_SPAWN_SETSIGMASK",E,E,N,N],[17,"POSIX_SPAWN_SETEXEC",E,E,N,N],[17,"POSIX_SPAWN_START_SUSPENDED",E,E,N,N],[17,"POSIX_SPAWN_CLOEXEC_DEFAULT",E,E,N,N],[17,"IPC_CREAT",E,E,N,N],[17,"IPC_EXCL",E,E,N,N],[17,"IPC_NOWAIT",E,E,N,N],[17,"IPC_PRIVATE",E,E,N,N],[17,"IPC_RMID",E,E,N,N],[17,"IPC_SET",E,E,N,N],[17,"IPC_STAT",E,E,N,N],[17,"IPC_R",E,E,N,N],[17,"IPC_W",E,E,N,N],[17,"IPC_M",E,E,N,N],[17,"SEM_UNDO",E,E,N,N],[17,"GETNCNT",E,E,N,N],[17,"GETPID",E,E,N,N],[17,"GETVAL",E,E,N,N],[17,"GETALL",E,E,N,N],[17,"GETZCNT",E,E,N,N],[17,"SETVAL",E,E,N,N],[17,"SETALL",E,E,N,N],[17,"SHM_RDONLY",E,E,N,N],[17,"SHM_RND",E,E,N,N],[17,"SHMLBA",E,E,N,N],[17,"SHM_R",E,E,N,N],[17,"SHM_W",E,E,N,N],[17,"UF_SETTABLE",E,E,N,N],[17,"UF_NODUMP",E,E,N,N],[17,"UF_IMMUTABLE",E,E,N,N],[17,"UF_APPEND",E,E,N,N],[17,"UF_OPAQUE",E,E,N,N],[17,"UF_COMPRESSED",E,E,N,N],[17,"UF_TRACKED",E,E,N,N],[17,"SF_SETTABLE",E,E,N,N],[17,"SF_ARCHIVED",E,E,N,N],[17,"SF_IMMUTABLE",E,E,N,N],[17,"SF_APPEND",E,E,N,N],[17,"UF_HIDDEN",E,E,N,N],[17,"__PTHREAD_MUTEX_SIZE__",E,E,N,N],[17,"__PTHREAD_COND_SIZE__",E,E,N,N],[17,"__PTHREAD_CONDATTR_SIZE__",E,E,N,N],[17,"__PTHREAD_RWLOCK_SIZE__",E,E,N,N],[17,"__PTHREAD_RWLOCKATTR_SIZE__",E,E,N,N],[17,"TIOCTIMESTAMP",E,E,N,N],[17,"TIOCDCDTIMESTAMP",E,E,N,N],[11,"from",E,E,81,[[[T]],[T]]],[11,R[4],E,E,81,[[[U]],[R[3]]]],[11,"into",E,E,81,[[],[U]]],[11,R[5],E,E,81,[[],[R[3]]]],[11,R[6],E,E,81,[[["self"]],[T]]],[11,R[7],E,E,81,[[["self"]],[T]]],[11,R[8],E,E,81,[[["self"]],[R[9]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[4],E,E,0,[[[U]],[R[3]]]],[11,"into",E,E,0,[[],[U]]],[11,R[5],E,E,0,[[],[R[3]]]],[11,R[6],E,E,0,[[["self"]],[T]]],[11,R[7],E,E,0,[[["self"]],[T]]],[11,R[8],E,E,0,[[["self"]],[R[9]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[4],E,E,1,[[[U]],[R[3]]]],[11,"into",E,E,1,[[],[U]]],[11,R[5],E,E,1,[[],[R[3]]]],[11,R[6],E,E,1,[[["self"]],[T]]],[11,R[7],E,E,1,[[["self"]],[T]]],[11,R[8],E,E,1,[[["self"]],[R[9]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[4],E,E,2,[[[U]],[R[3]]]],[11,"into",E,E,2,[[],[U]]],[11,R[5],E,E,2,[[],[R[3]]]],[11,R[6],E,E,2,[[["self"]],[T]]],[11,R[7],E,E,2,[[["self"]],[T]]],[11,R[8],E,E,2,[[["self"]],[R[9]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[4],E,E,3,[[[U]],[R[3]]]],[11,"into",E,E,3,[[],[U]]],[11,R[5],E,E,3,[[],[R[3]]]],[11,R[6],E,E,3,[[["self"]],[T]]],[11,R[7],E,E,3,[[["self"]],[T]]],[11,R[8],E,E,3,[[["self"]],[R[9]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[4],E,E,4,[[[U]],[R[3]]]],[11,"into",E,E,4,[[],[U]]],[11,R[5],E,E,4,[[],[R[3]]]],[11,R[6],E,E,4,[[["self"]],[T]]],[11,R[7],E,E,4,[[["self"]],[T]]],[11,R[8],E,E,4,[[["self"]],[R[9]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[4],E,E,5,[[[U]],[R[3]]]],[11,"into",E,E,5,[[],[U]]],[11,R[5],E,E,5,[[],[R[3]]]],[11,R[6],E,E,5,[[["self"]],[T]]],[11,R[7],E,E,5,[[["self"]],[T]]],[11,R[8],E,E,5,[[["self"]],[R[9]]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[4],E,E,6,[[[U]],[R[3]]]],[11,"into",E,E,6,[[],[U]]],[11,R[5],E,E,6,[[],[R[3]]]],[11,R[6],E,E,6,[[["self"]],[T]]],[11,R[7],E,E,6,[[["self"]],[T]]],[11,R[8],E,E,6,[[["self"]],[R[9]]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[4],E,E,7,[[[U]],[R[3]]]],[11,"into",E,E,7,[[],[U]]],[11,R[5],E,E,7,[[],[R[3]]]],[11,R[6],E,E,7,[[["self"]],[T]]],[11,R[7],E,E,7,[[["self"]],[T]]],[11,R[8],E,E,7,[[["self"]],[R[9]]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[4],E,E,8,[[[U]],[R[3]]]],[11,"into",E,E,8,[[],[U]]],[11,R[5],E,E,8,[[],[R[3]]]],[11,R[6],E,E,8,[[["self"]],[T]]],[11,R[7],E,E,8,[[["self"]],[T]]],[11,R[8],E,E,8,[[["self"]],[R[9]]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[4],E,E,9,[[[U]],[R[3]]]],[11,"into",E,E,9,[[],[U]]],[11,R[5],E,E,9,[[],[R[3]]]],[11,R[6],E,E,9,[[["self"]],[T]]],[11,R[7],E,E,9,[[["self"]],[T]]],[11,R[8],E,E,9,[[["self"]],[R[9]]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[4],E,E,10,[[[U]],[R[3]]]],[11,"into",E,E,10,[[],[U]]],[11,R[5],E,E,10,[[],[R[3]]]],[11,R[6],E,E,10,[[["self"]],[T]]],[11,R[7],E,E,10,[[["self"]],[T]]],[11,R[8],E,E,10,[[["self"]],[R[9]]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[4],E,E,11,[[[U]],[R[3]]]],[11,"into",E,E,11,[[],[U]]],[11,R[5],E,E,11,[[],[R[3]]]],[11,R[6],E,E,11,[[["self"]],[T]]],[11,R[7],E,E,11,[[["self"]],[T]]],[11,R[8],E,E,11,[[["self"]],[R[9]]]],[11,"from",E,E,12,[[[T]],[T]]],[11,R[4],E,E,12,[[[U]],[R[3]]]],[11,"into",E,E,12,[[],[U]]],[11,R[5],E,E,12,[[],[R[3]]]],[11,R[6],E,E,12,[[["self"]],[T]]],[11,R[7],E,E,12,[[["self"]],[T]]],[11,R[8],E,E,12,[[["self"]],[R[9]]]],[11,"from",E,E,13,[[[T]],[T]]],[11,R[4],E,E,13,[[[U]],[R[3]]]],[11,"into",E,E,13,[[],[U]]],[11,R[5],E,E,13,[[],[R[3]]]],[11,R[6],E,E,13,[[["self"]],[T]]],[11,R[7],E,E,13,[[["self"]],[T]]],[11,R[8],E,E,13,[[["self"]],[R[9]]]],[11,"from",E,E,14,[[[T]],[T]]],[11,R[4],E,E,14,[[[U]],[R[3]]]],[11,"into",E,E,14,[[],[U]]],[11,R[5],E,E,14,[[],[R[3]]]],[11,R[6],E,E,14,[[["self"]],[T]]],[11,R[7],E,E,14,[[["self"]],[T]]],[11,R[8],E,E,14,[[["self"]],[R[9]]]],[11,"from",E,E,15,[[[T]],[T]]],[11,R[4],E,E,15,[[[U]],[R[3]]]],[11,"into",E,E,15,[[],[U]]],[11,R[5],E,E,15,[[],[R[3]]]],[11,R[6],E,E,15,[[["self"]],[T]]],[11,R[7],E,E,15,[[["self"]],[T]]],[11,R[8],E,E,15,[[["self"]],[R[9]]]],[11,"from",E,E,16,[[[T]],[T]]],[11,R[4],E,E,16,[[[U]],[R[3]]]],[11,"into",E,E,16,[[],[U]]],[11,R[5],E,E,16,[[],[R[3]]]],[11,R[6],E,E,16,[[["self"]],[T]]],[11,R[7],E,E,16,[[["self"]],[T]]],[11,R[8],E,E,16,[[["self"]],[R[9]]]],[11,"from",E,E,17,[[[T]],[T]]],[11,R[4],E,E,17,[[[U]],[R[3]]]],[11,"into",E,E,17,[[],[U]]],[11,R[5],E,E,17,[[],[R[3]]]],[11,R[6],E,E,17,[[["self"]],[T]]],[11,R[7],E,E,17,[[["self"]],[T]]],[11,R[8],E,E,17,[[["self"]],[R[9]]]],[11,"from",E,E,18,[[[T]],[T]]],[11,R[4],E,E,18,[[[U]],[R[3]]]],[11,"into",E,E,18,[[],[U]]],[11,R[5],E,E,18,[[],[R[3]]]],[11,R[6],E,E,18,[[["self"]],[T]]],[11,R[7],E,E,18,[[["self"]],[T]]],[11,R[8],E,E,18,[[["self"]],[R[9]]]],[11,"from",E,E,19,[[[T]],[T]]],[11,R[4],E,E,19,[[[U]],[R[3]]]],[11,"into",E,E,19,[[],[U]]],[11,R[5],E,E,19,[[],[R[3]]]],[11,R[6],E,E,19,[[["self"]],[T]]],[11,R[7],E,E,19,[[["self"]],[T]]],[11,R[8],E,E,19,[[["self"]],[R[9]]]],[11,"from",E,E,20,[[[T]],[T]]],[11,R[4],E,E,20,[[[U]],[R[3]]]],[11,"into",E,E,20,[[],[U]]],[11,R[5],E,E,20,[[],[R[3]]]],[11,R[6],E,E,20,[[["self"]],[T]]],[11,R[7],E,E,20,[[["self"]],[T]]],[11,R[8],E,E,20,[[["self"]],[R[9]]]],[11,"from",E,E,82,[[[T]],[T]]],[11,R[4],E,E,82,[[[U]],[R[3]]]],[11,"into",E,E,82,[[],[U]]],[11,R[5],E,E,82,[[],[R[3]]]],[11,R[6],E,E,82,[[["self"]],[T]]],[11,R[7],E,E,82,[[["self"]],[T]]],[11,R[8],E,E,82,[[["self"]],[R[9]]]],[11,"from",E,E,21,[[[T]],[T]]],[11,R[4],E,E,21,[[[U]],[R[3]]]],[11,"into",E,E,21,[[],[U]]],[11,R[5],E,E,21,[[],[R[3]]]],[11,R[6],E,E,21,[[["self"]],[T]]],[11,R[7],E,E,21,[[["self"]],[T]]],[11,R[8],E,E,21,[[["self"]],[R[9]]]],[11,"from",E,E,22,[[[T]],[T]]],[11,R[4],E,E,22,[[[U]],[R[3]]]],[11,"into",E,E,22,[[],[U]]],[11,R[5],E,E,22,[[],[R[3]]]],[11,R[6],E,E,22,[[["self"]],[T]]],[11,R[7],E,E,22,[[["self"]],[T]]],[11,R[8],E,E,22,[[["self"]],[R[9]]]],[11,"from",E,E,23,[[[T]],[T]]],[11,R[4],E,E,23,[[[U]],[R[3]]]],[11,"into",E,E,23,[[],[U]]],[11,R[5],E,E,23,[[],[R[3]]]],[11,R[6],E,E,23,[[["self"]],[T]]],[11,R[7],E,E,23,[[["self"]],[T]]],[11,R[8],E,E,23,[[["self"]],[R[9]]]],[11,"from",E,E,83,[[[T]],[T]]],[11,R[4],E,E,83,[[[U]],[R[3]]]],[11,"into",E,E,83,[[],[U]]],[11,R[5],E,E,83,[[],[R[3]]]],[11,R[6],E,E,83,[[["self"]],[T]]],[11,R[7],E,E,83,[[["self"]],[T]]],[11,R[8],E,E,83,[[["self"]],[R[9]]]],[11,"from",E,E,24,[[[T]],[T]]],[11,R[4],E,E,24,[[[U]],[R[3]]]],[11,"into",E,E,24,[[],[U]]],[11,R[5],E,E,24,[[],[R[3]]]],[11,R[6],E,E,24,[[["self"]],[T]]],[11,R[7],E,E,24,[[["self"]],[T]]],[11,R[8],E,E,24,[[["self"]],[R[9]]]],[11,"from",E,E,25,[[[T]],[T]]],[11,R[4],E,E,25,[[[U]],[R[3]]]],[11,"into",E,E,25,[[],[U]]],[11,R[5],E,E,25,[[],[R[3]]]],[11,R[6],E,E,25,[[["self"]],[T]]],[11,R[7],E,E,25,[[["self"]],[T]]],[11,R[8],E,E,25,[[["self"]],[R[9]]]],[11,"from",E,E,26,[[[T]],[T]]],[11,R[4],E,E,26,[[[U]],[R[3]]]],[11,"into",E,E,26,[[],[U]]],[11,R[5],E,E,26,[[],[R[3]]]],[11,R[6],E,E,26,[[["self"]],[T]]],[11,R[7],E,E,26,[[["self"]],[T]]],[11,R[8],E,E,26,[[["self"]],[R[9]]]],[11,"from",E,E,27,[[[T]],[T]]],[11,R[4],E,E,27,[[[U]],[R[3]]]],[11,"into",E,E,27,[[],[U]]],[11,R[5],E,E,27,[[],[R[3]]]],[11,R[6],E,E,27,[[["self"]],[T]]],[11,R[7],E,E,27,[[["self"]],[T]]],[11,R[8],E,E,27,[[["self"]],[R[9]]]],[11,"from",E,E,28,[[[T]],[T]]],[11,R[4],E,E,28,[[[U]],[R[3]]]],[11,"into",E,E,28,[[],[U]]],[11,R[5],E,E,28,[[],[R[3]]]],[11,R[6],E,E,28,[[["self"]],[T]]],[11,R[7],E,E,28,[[["self"]],[T]]],[11,R[8],E,E,28,[[["self"]],[R[9]]]],[11,"from",E,E,29,[[[T]],[T]]],[11,R[4],E,E,29,[[[U]],[R[3]]]],[11,"into",E,E,29,[[],[U]]],[11,R[5],E,E,29,[[],[R[3]]]],[11,R[6],E,E,29,[[["self"]],[T]]],[11,R[7],E,E,29,[[["self"]],[T]]],[11,R[8],E,E,29,[[["self"]],[R[9]]]],[11,"from",E,E,30,[[[T]],[T]]],[11,R[4],E,E,30,[[[U]],[R[3]]]],[11,"into",E,E,30,[[],[U]]],[11,R[5],E,E,30,[[],[R[3]]]],[11,R[6],E,E,30,[[["self"]],[T]]],[11,R[7],E,E,30,[[["self"]],[T]]],[11,R[8],E,E,30,[[["self"]],[R[9]]]],[11,"from",E,E,31,[[[T]],[T]]],[11,R[4],E,E,31,[[[U]],[R[3]]]],[11,"into",E,E,31,[[],[U]]],[11,R[5],E,E,31,[[],[R[3]]]],[11,R[6],E,E,31,[[["self"]],[T]]],[11,R[7],E,E,31,[[["self"]],[T]]],[11,R[8],E,E,31,[[["self"]],[R[9]]]],[11,"from",E,E,32,[[[T]],[T]]],[11,R[4],E,E,32,[[[U]],[R[3]]]],[11,"into",E,E,32,[[],[U]]],[11,R[5],E,E,32,[[],[R[3]]]],[11,R[6],E,E,32,[[["self"]],[T]]],[11,R[7],E,E,32,[[["self"]],[T]]],[11,R[8],E,E,32,[[["self"]],[R[9]]]],[11,"from",E,E,84,[[[T]],[T]]],[11,R[4],E,E,84,[[[U]],[R[3]]]],[11,"into",E,E,84,[[],[U]]],[11,R[5],E,E,84,[[],[R[3]]]],[11,R[6],E,E,84,[[["self"]],[T]]],[11,R[7],E,E,84,[[["self"]],[T]]],[11,R[8],E,E,84,[[["self"]],[R[9]]]],[11,"from",E,E,85,[[[T]],[T]]],[11,R[4],E,E,85,[[[U]],[R[3]]]],[11,"into",E,E,85,[[],[U]]],[11,R[5],E,E,85,[[],[R[3]]]],[11,R[6],E,E,85,[[["self"]],[T]]],[11,R[7],E,E,85,[[["self"]],[T]]],[11,R[8],E,E,85,[[["self"]],[R[9]]]],[11,"from",E,E,86,[[[T]],[T]]],[11,R[4],E,E,86,[[[U]],[R[3]]]],[11,"into",E,E,86,[[],[U]]],[11,R[5],E,E,86,[[],[R[3]]]],[11,R[6],E,E,86,[[["self"]],[T]]],[11,R[7],E,E,86,[[["self"]],[T]]],[11,R[8],E,E,86,[[["self"]],[R[9]]]],[11,"from",E,E,33,[[[T]],[T]]],[11,R[4],E,E,33,[[[U]],[R[3]]]],[11,"into",E,E,33,[[],[U]]],[11,R[5],E,E,33,[[],[R[3]]]],[11,R[6],E,E,33,[[["self"]],[T]]],[11,R[7],E,E,33,[[["self"]],[T]]],[11,R[8],E,E,33,[[["self"]],[R[9]]]],[11,"from",E,E,34,[[[T]],[T]]],[11,R[4],E,E,34,[[[U]],[R[3]]]],[11,"into",E,E,34,[[],[U]]],[11,R[5],E,E,34,[[],[R[3]]]],[11,R[6],E,E,34,[[["self"]],[T]]],[11,R[7],E,E,34,[[["self"]],[T]]],[11,R[8],E,E,34,[[["self"]],[R[9]]]],[11,"from",E,E,35,[[[T]],[T]]],[11,R[4],E,E,35,[[[U]],[R[3]]]],[11,"into",E,E,35,[[],[U]]],[11,R[5],E,E,35,[[],[R[3]]]],[11,R[6],E,E,35,[[["self"]],[T]]],[11,R[7],E,E,35,[[["self"]],[T]]],[11,R[8],E,E,35,[[["self"]],[R[9]]]],[11,"from",E,E,36,[[[T]],[T]]],[11,R[4],E,E,36,[[[U]],[R[3]]]],[11,"into",E,E,36,[[],[U]]],[11,R[5],E,E,36,[[],[R[3]]]],[11,R[6],E,E,36,[[["self"]],[T]]],[11,R[7],E,E,36,[[["self"]],[T]]],[11,R[8],E,E,36,[[["self"]],[R[9]]]],[11,"from",E,E,37,[[[T]],[T]]],[11,R[4],E,E,37,[[[U]],[R[3]]]],[11,"into",E,E,37,[[],[U]]],[11,R[5],E,E,37,[[],[R[3]]]],[11,R[6],E,E,37,[[["self"]],[T]]],[11,R[7],E,E,37,[[["self"]],[T]]],[11,R[8],E,E,37,[[["self"]],[R[9]]]],[11,"from",E,E,38,[[[T]],[T]]],[11,R[4],E,E,38,[[[U]],[R[3]]]],[11,"into",E,E,38,[[],[U]]],[11,R[5],E,E,38,[[],[R[3]]]],[11,R[6],E,E,38,[[["self"]],[T]]],[11,R[7],E,E,38,[[["self"]],[T]]],[11,R[8],E,E,38,[[["self"]],[R[9]]]],[11,"from",E,E,39,[[[T]],[T]]],[11,R[4],E,E,39,[[[U]],[R[3]]]],[11,"into",E,E,39,[[],[U]]],[11,R[5],E,E,39,[[],[R[3]]]],[11,R[6],E,E,39,[[["self"]],[T]]],[11,R[7],E,E,39,[[["self"]],[T]]],[11,R[8],E,E,39,[[["self"]],[R[9]]]],[11,"from",E,E,40,[[[T]],[T]]],[11,R[4],E,E,40,[[[U]],[R[3]]]],[11,"into",E,E,40,[[],[U]]],[11,R[5],E,E,40,[[],[R[3]]]],[11,R[6],E,E,40,[[["self"]],[T]]],[11,R[7],E,E,40,[[["self"]],[T]]],[11,R[8],E,E,40,[[["self"]],[R[9]]]],[11,"from",E,E,41,[[[T]],[T]]],[11,R[4],E,E,41,[[[U]],[R[3]]]],[11,"into",E,E,41,[[],[U]]],[11,R[5],E,E,41,[[],[R[3]]]],[11,R[6],E,E,41,[[["self"]],[T]]],[11,R[7],E,E,41,[[["self"]],[T]]],[11,R[8],E,E,41,[[["self"]],[R[9]]]],[11,"from",E,E,42,[[[T]],[T]]],[11,R[4],E,E,42,[[[U]],[R[3]]]],[11,"into",E,E,42,[[],[U]]],[11,R[5],E,E,42,[[],[R[3]]]],[11,R[6],E,E,42,[[["self"]],[T]]],[11,R[7],E,E,42,[[["self"]],[T]]],[11,R[8],E,E,42,[[["self"]],[R[9]]]],[11,"from",E,E,43,[[[T]],[T]]],[11,R[4],E,E,43,[[[U]],[R[3]]]],[11,"into",E,E,43,[[],[U]]],[11,R[5],E,E,43,[[],[R[3]]]],[11,R[6],E,E,43,[[["self"]],[T]]],[11,R[7],E,E,43,[[["self"]],[T]]],[11,R[8],E,E,43,[[["self"]],[R[9]]]],[11,"from",E,E,44,[[[T]],[T]]],[11,R[4],E,E,44,[[[U]],[R[3]]]],[11,"into",E,E,44,[[],[U]]],[11,R[5],E,E,44,[[],[R[3]]]],[11,R[6],E,E,44,[[["self"]],[T]]],[11,R[7],E,E,44,[[["self"]],[T]]],[11,R[8],E,E,44,[[["self"]],[R[9]]]],[11,"from",E,E,45,[[[T]],[T]]],[11,R[4],E,E,45,[[[U]],[R[3]]]],[11,"into",E,E,45,[[],[U]]],[11,R[5],E,E,45,[[],[R[3]]]],[11,R[6],E,E,45,[[["self"]],[T]]],[11,R[7],E,E,45,[[["self"]],[T]]],[11,R[8],E,E,45,[[["self"]],[R[9]]]],[11,"from",E,E,46,[[[T]],[T]]],[11,R[4],E,E,46,[[[U]],[R[3]]]],[11,"into",E,E,46,[[],[U]]],[11,R[5],E,E,46,[[],[R[3]]]],[11,R[6],E,E,46,[[["self"]],[T]]],[11,R[7],E,E,46,[[["self"]],[T]]],[11,R[8],E,E,46,[[["self"]],[R[9]]]],[11,"from",E,E,47,[[[T]],[T]]],[11,R[4],E,E,47,[[[U]],[R[3]]]],[11,"into",E,E,47,[[],[U]]],[11,R[5],E,E,47,[[],[R[3]]]],[11,R[6],E,E,47,[[["self"]],[T]]],[11,R[7],E,E,47,[[["self"]],[T]]],[11,R[8],E,E,47,[[["self"]],[R[9]]]],[11,"from",E,E,48,[[[T]],[T]]],[11,R[4],E,E,48,[[[U]],[R[3]]]],[11,"into",E,E,48,[[],[U]]],[11,R[5],E,E,48,[[],[R[3]]]],[11,R[6],E,E,48,[[["self"]],[T]]],[11,R[7],E,E,48,[[["self"]],[T]]],[11,R[8],E,E,48,[[["self"]],[R[9]]]],[11,"from",E,E,49,[[[T]],[T]]],[11,R[4],E,E,49,[[[U]],[R[3]]]],[11,"into",E,E,49,[[],[U]]],[11,R[5],E,E,49,[[],[R[3]]]],[11,R[6],E,E,49,[[["self"]],[T]]],[11,R[7],E,E,49,[[["self"]],[T]]],[11,R[8],E,E,49,[[["self"]],[R[9]]]],[11,"from",E,E,50,[[[T]],[T]]],[11,R[4],E,E,50,[[[U]],[R[3]]]],[11,"into",E,E,50,[[],[U]]],[11,R[5],E,E,50,[[],[R[3]]]],[11,R[6],E,E,50,[[["self"]],[T]]],[11,R[7],E,E,50,[[["self"]],[T]]],[11,R[8],E,E,50,[[["self"]],[R[9]]]],[11,"from",E,E,51,[[[T]],[T]]],[11,R[4],E,E,51,[[[U]],[R[3]]]],[11,"into",E,E,51,[[],[U]]],[11,R[5],E,E,51,[[],[R[3]]]],[11,R[6],E,E,51,[[["self"]],[T]]],[11,R[7],E,E,51,[[["self"]],[T]]],[11,R[8],E,E,51,[[["self"]],[R[9]]]],[11,"from",E,E,52,[[[T]],[T]]],[11,R[4],E,E,52,[[[U]],[R[3]]]],[11,"into",E,E,52,[[],[U]]],[11,R[5],E,E,52,[[],[R[3]]]],[11,R[6],E,E,52,[[["self"]],[T]]],[11,R[7],E,E,52,[[["self"]],[T]]],[11,R[8],E,E,52,[[["self"]],[R[9]]]],[11,"from",E,E,53,[[[T]],[T]]],[11,R[4],E,E,53,[[[U]],[R[3]]]],[11,"into",E,E,53,[[],[U]]],[11,R[5],E,E,53,[[],[R[3]]]],[11,R[6],E,E,53,[[["self"]],[T]]],[11,R[7],E,E,53,[[["self"]],[T]]],[11,R[8],E,E,53,[[["self"]],[R[9]]]],[11,"from",E,E,54,[[[T]],[T]]],[11,R[4],E,E,54,[[[U]],[R[3]]]],[11,"into",E,E,54,[[],[U]]],[11,R[5],E,E,54,[[],[R[3]]]],[11,R[6],E,E,54,[[["self"]],[T]]],[11,R[7],E,E,54,[[["self"]],[T]]],[11,R[8],E,E,54,[[["self"]],[R[9]]]],[11,"from",E,E,55,[[[T]],[T]]],[11,R[4],E,E,55,[[[U]],[R[3]]]],[11,"into",E,E,55,[[],[U]]],[11,R[5],E,E,55,[[],[R[3]]]],[11,R[6],E,E,55,[[["self"]],[T]]],[11,R[7],E,E,55,[[["self"]],[T]]],[11,R[8],E,E,55,[[["self"]],[R[9]]]],[11,"from",E,E,56,[[[T]],[T]]],[11,R[4],E,E,56,[[[U]],[R[3]]]],[11,"into",E,E,56,[[],[U]]],[11,R[5],E,E,56,[[],[R[3]]]],[11,R[6],E,E,56,[[["self"]],[T]]],[11,R[7],E,E,56,[[["self"]],[T]]],[11,R[8],E,E,56,[[["self"]],[R[9]]]],[11,"from",E,E,57,[[[T]],[T]]],[11,R[4],E,E,57,[[[U]],[R[3]]]],[11,"into",E,E,57,[[],[U]]],[11,R[5],E,E,57,[[],[R[3]]]],[11,R[6],E,E,57,[[["self"]],[T]]],[11,R[7],E,E,57,[[["self"]],[T]]],[11,R[8],E,E,57,[[["self"]],[R[9]]]],[11,"from",E,E,58,[[[T]],[T]]],[11,R[4],E,E,58,[[[U]],[R[3]]]],[11,"into",E,E,58,[[],[U]]],[11,R[5],E,E,58,[[],[R[3]]]],[11,R[6],E,E,58,[[["self"]],[T]]],[11,R[7],E,E,58,[[["self"]],[T]]],[11,R[8],E,E,58,[[["self"]],[R[9]]]],[11,"from",E,E,59,[[[T]],[T]]],[11,R[4],E,E,59,[[[U]],[R[3]]]],[11,"into",E,E,59,[[],[U]]],[11,R[5],E,E,59,[[],[R[3]]]],[11,R[6],E,E,59,[[["self"]],[T]]],[11,R[7],E,E,59,[[["self"]],[T]]],[11,R[8],E,E,59,[[["self"]],[R[9]]]],[11,"from",E,E,60,[[[T]],[T]]],[11,R[4],E,E,60,[[[U]],[R[3]]]],[11,"into",E,E,60,[[],[U]]],[11,R[5],E,E,60,[[],[R[3]]]],[11,R[6],E,E,60,[[["self"]],[T]]],[11,R[7],E,E,60,[[["self"]],[T]]],[11,R[8],E,E,60,[[["self"]],[R[9]]]],[11,"from",E,E,61,[[[T]],[T]]],[11,R[4],E,E,61,[[[U]],[R[3]]]],[11,"into",E,E,61,[[],[U]]],[11,R[5],E,E,61,[[],[R[3]]]],[11,R[6],E,E,61,[[["self"]],[T]]],[11,R[7],E,E,61,[[["self"]],[T]]],[11,R[8],E,E,61,[[["self"]],[R[9]]]],[11,"from",E,E,62,[[[T]],[T]]],[11,R[4],E,E,62,[[[U]],[R[3]]]],[11,"into",E,E,62,[[],[U]]],[11,R[5],E,E,62,[[],[R[3]]]],[11,R[6],E,E,62,[[["self"]],[T]]],[11,R[7],E,E,62,[[["self"]],[T]]],[11,R[8],E,E,62,[[["self"]],[R[9]]]],[11,"from",E,E,63,[[[T]],[T]]],[11,R[4],E,E,63,[[[U]],[R[3]]]],[11,"into",E,E,63,[[],[U]]],[11,R[5],E,E,63,[[],[R[3]]]],[11,R[6],E,E,63,[[["self"]],[T]]],[11,R[7],E,E,63,[[["self"]],[T]]],[11,R[8],E,E,63,[[["self"]],[R[9]]]],[11,"from",E,E,64,[[[T]],[T]]],[11,R[4],E,E,64,[[[U]],[R[3]]]],[11,"into",E,E,64,[[],[U]]],[11,R[5],E,E,64,[[],[R[3]]]],[11,R[6],E,E,64,[[["self"]],[T]]],[11,R[7],E,E,64,[[["self"]],[T]]],[11,R[8],E,E,64,[[["self"]],[R[9]]]],[11,"from",E,E,65,[[[T]],[T]]],[11,R[4],E,E,65,[[[U]],[R[3]]]],[11,"into",E,E,65,[[],[U]]],[11,R[5],E,E,65,[[],[R[3]]]],[11,R[6],E,E,65,[[["self"]],[T]]],[11,R[7],E,E,65,[[["self"]],[T]]],[11,R[8],E,E,65,[[["self"]],[R[9]]]],[11,"from",E,E,66,[[[T]],[T]]],[11,R[4],E,E,66,[[[U]],[R[3]]]],[11,"into",E,E,66,[[],[U]]],[11,R[5],E,E,66,[[],[R[3]]]],[11,R[6],E,E,66,[[["self"]],[T]]],[11,R[7],E,E,66,[[["self"]],[T]]],[11,R[8],E,E,66,[[["self"]],[R[9]]]],[11,"from",E,E,67,[[[T]],[T]]],[11,R[4],E,E,67,[[[U]],[R[3]]]],[11,"into",E,E,67,[[],[U]]],[11,R[5],E,E,67,[[],[R[3]]]],[11,R[6],E,E,67,[[["self"]],[T]]],[11,R[7],E,E,67,[[["self"]],[T]]],[11,R[8],E,E,67,[[["self"]],[R[9]]]],[11,"from",E,E,68,[[[T]],[T]]],[11,R[4],E,E,68,[[[U]],[R[3]]]],[11,"into",E,E,68,[[],[U]]],[11,R[5],E,E,68,[[],[R[3]]]],[11,R[6],E,E,68,[[["self"]],[T]]],[11,R[7],E,E,68,[[["self"]],[T]]],[11,R[8],E,E,68,[[["self"]],[R[9]]]],[11,"from",E,E,69,[[[T]],[T]]],[11,R[4],E,E,69,[[[U]],[R[3]]]],[11,"into",E,E,69,[[],[U]]],[11,R[5],E,E,69,[[],[R[3]]]],[11,R[6],E,E,69,[[["self"]],[T]]],[11,R[7],E,E,69,[[["self"]],[T]]],[11,R[8],E,E,69,[[["self"]],[R[9]]]],[11,"from",E,E,70,[[[T]],[T]]],[11,R[4],E,E,70,[[[U]],[R[3]]]],[11,"into",E,E,70,[[],[U]]],[11,R[5],E,E,70,[[],[R[3]]]],[11,R[6],E,E,70,[[["self"]],[T]]],[11,R[7],E,E,70,[[["self"]],[T]]],[11,R[8],E,E,70,[[["self"]],[R[9]]]],[11,"from",E,E,71,[[[T]],[T]]],[11,R[4],E,E,71,[[[U]],[R[3]]]],[11,"into",E,E,71,[[],[U]]],[11,R[5],E,E,71,[[],[R[3]]]],[11,R[6],E,E,71,[[["self"]],[T]]],[11,R[7],E,E,71,[[["self"]],[T]]],[11,R[8],E,E,71,[[["self"]],[R[9]]]],[11,"from",E,E,72,[[[T]],[T]]],[11,R[4],E,E,72,[[[U]],[R[3]]]],[11,"into",E,E,72,[[],[U]]],[11,R[5],E,E,72,[[],[R[3]]]],[11,R[6],E,E,72,[[["self"]],[T]]],[11,R[7],E,E,72,[[["self"]],[T]]],[11,R[8],E,E,72,[[["self"]],[R[9]]]],[11,"from",E,E,87,[[[T]],[T]]],[11,R[4],E,E,87,[[[U]],[R[3]]]],[11,"into",E,E,87,[[],[U]]],[11,R[5],E,E,87,[[],[R[3]]]],[11,R[6],E,E,87,[[["self"]],[T]]],[11,R[7],E,E,87,[[["self"]],[T]]],[11,R[8],E,E,87,[[["self"]],[R[9]]]],[11,"from",E,E,88,[[[T]],[T]]],[11,R[4],E,E,88,[[[U]],[R[3]]]],[11,"into",E,E,88,[[],[U]]],[11,R[5],E,E,88,[[],[R[3]]]],[11,R[6],E,E,88,[[["self"]],[T]]],[11,R[7],E,E,88,[[["self"]],[T]]],[11,R[8],E,E,88,[[["self"]],[R[9]]]],[11,"from",E,E,89,[[[T]],[T]]],[11,R[4],E,E,89,[[[U]],[R[3]]]],[11,"into",E,E,89,[[],[U]]],[11,R[5],E,E,89,[[],[R[3]]]],[11,R[6],E,E,89,[[["self"]],[T]]],[11,R[7],E,E,89,[[["self"]],[T]]],[11,R[8],E,E,89,[[["self"]],[R[9]]]],[11,"from",E,E,73,[[[T]],[T]]],[11,R[4],E,E,73,[[[U]],[R[3]]]],[11,"into",E,E,73,[[],[U]]],[11,R[5],E,E,73,[[],[R[3]]]],[11,R[6],E,E,73,[[["self"]],[T]]],[11,R[7],E,E,73,[[["self"]],[T]]],[11,R[8],E,E,73,[[["self"]],[R[9]]]],[11,"from",E,E,74,[[[T]],[T]]],[11,R[4],E,E,74,[[[U]],[R[3]]]],[11,"into",E,E,74,[[],[U]]],[11,R[5],E,E,74,[[],[R[3]]]],[11,R[6],E,E,74,[[["self"]],[T]]],[11,R[7],E,E,74,[[["self"]],[T]]],[11,R[8],E,E,74,[[["self"]],[R[9]]]],[11,"from",E,E,75,[[[T]],[T]]],[11,R[4],E,E,75,[[[U]],[R[3]]]],[11,"into",E,E,75,[[],[U]]],[11,R[5],E,E,75,[[],[R[3]]]],[11,R[6],E,E,75,[[["self"]],[T]]],[11,R[7],E,E,75,[[["self"]],[T]]],[11,R[8],E,E,75,[[["self"]],[R[9]]]],[11,"from",E,E,76,[[[T]],[T]]],[11,R[4],E,E,76,[[[U]],[R[3]]]],[11,"into",E,E,76,[[],[U]]],[11,R[5],E,E,76,[[],[R[3]]]],[11,R[6],E,E,76,[[["self"]],[T]]],[11,R[7],E,E,76,[[["self"]],[T]]],[11,R[8],E,E,76,[[["self"]],[R[9]]]],[11,"from",E,E,77,[[[T]],[T]]],[11,R[4],E,E,77,[[[U]],[R[3]]]],[11,"into",E,E,77,[[],[U]]],[11,R[5],E,E,77,[[],[R[3]]]],[11,R[6],E,E,77,[[["self"]],[T]]],[11,R[7],E,E,77,[[["self"]],[T]]],[11,R[8],E,E,77,[[["self"]],[R[9]]]],[11,"from",E,E,78,[[[T]],[T]]],[11,R[4],E,E,78,[[[U]],[R[3]]]],[11,"into",E,E,78,[[],[U]]],[11,R[5],E,E,78,[[],[R[3]]]],[11,R[6],E,E,78,[[["self"]],[T]]],[11,R[7],E,E,78,[[["self"]],[T]]],[11,R[8],E,E,78,[[["self"]],[R[9]]]],[11,"from",E,E,90,[[[T]],[T]]],[11,R[4],E,E,90,[[[U]],[R[3]]]],[11,"into",E,E,90,[[],[U]]],[11,R[5],E,E,90,[[],[R[3]]]],[11,R[6],E,E,90,[[["self"]],[T]]],[11,R[7],E,E,90,[[["self"]],[T]]],[11,R[8],E,E,90,[[["self"]],[R[9]]]],[11,"from",E,E,79,[[[T]],[T]]],[11,R[4],E,E,79,[[[U]],[R[3]]]],[11,"into",E,E,79,[[],[U]]],[11,R[5],E,E,79,[[],[R[3]]]],[11,R[6],E,E,79,[[["self"]],[T]]],[11,R[7],E,E,79,[[["self"]],[T]]],[11,R[8],E,E,79,[[["self"]],[R[9]]]],[11,"from",E,E,80,[[[T]],[T]]],[11,R[4],E,E,80,[[[U]],[R[3]]]],[11,"into",E,E,80,[[],[U]]],[11,R[5],E,E,80,[[],[R[3]]]],[11,R[6],E,E,80,[[["self"]],[T]]],[11,R[7],E,E,80,[[["self"]],[T]]],[11,R[8],E,E,80,[[["self"]],[R[9]]]],[11,"from",E,E,91,[[[T]],[T]]],[11,R[4],E,E,91,[[[U]],[R[3]]]],[11,"into",E,E,91,[[],[U]]],[11,R[5],E,E,91,[[],[R[3]]]],[11,R[6],E,E,91,[[["self"]],[T]]],[11,R[7],E,E,91,[[["self"]],[T]]],[11,R[8],E,E,91,[[["self"]],[R[9]]]],[11,"from",E,E,92,[[[T]],[T]]],[11,R[4],E,E,92,[[[U]],[R[3]]]],[11,"into",E,E,92,[[],[U]]],[11,R[5],E,E,92,[[],[R[3]]]],[11,R[6],E,E,92,[[["self"]],[T]]],[11,R[7],E,E,92,[[["self"]],[T]]],[11,R[8],E,E,92,[[["self"]],[R[9]]]],[11,"from",E,E,93,[[[T]],[T]]],[11,R[4],E,E,93,[[[U]],[R[3]]]],[11,"into",E,E,93,[[],[U]]],[11,R[5],E,E,93,[[],[R[3]]]],[11,R[6],E,E,93,[[["self"]],[T]]],[11,R[7],E,E,93,[[["self"]],[T]]],[11,R[8],E,E,93,[[["self"]],[R[9]]]],[11,"from",E,E,94,[[[T]],[T]]],[11,R[4],E,E,94,[[[U]],[R[3]]]],[11,"into",E,E,94,[[],[U]]],[11,R[5],E,E,94,[[],[R[3]]]],[11,R[6],E,E,94,[[["self"]],[T]]],[11,R[7],E,E,94,[[["self"]],[T]]],[11,R[8],E,E,94,[[["self"]],[R[9]]]],[11,"fmt",E,E,81,[[["self"],[R[10]]],[["error"],[R[3],["error"]]]]],[11,"eq",E,E,0,[[["self"],["group"]],["bool"]]],[11,"ne",E,E,0,[[["self"],["group"]],["bool"]]],[11,"eq",E,E,1,[[["self"],["utimbuf"]],["bool"]]],[11,"ne",E,E,1,[[["self"],["utimbuf"]],["bool"]]],[11,"eq",E,E,2,[[["self"],["timeval"]],["bool"]]],[11,"ne",E,E,2,[[["self"],["timeval"]],["bool"]]],[11,"eq",E,E,3,[[["self"],[R[785]]],["bool"]]],[11,"ne",E,E,3,[[["self"],[R[785]]],["bool"]]],[11,"eq",E,E,4,[[["self"],["rlimit"]],["bool"]]],[11,"ne",E,E,4,[[["self"],["rlimit"]],["bool"]]],[11,"eq",E,E,5,[[["self"],["rusage"]],["bool"]]],[11,"ne",E,E,5,[[["self"],["rusage"]],["bool"]]],[11,"eq",E,E,6,[[["self"],[R[786]]],["bool"]]],[11,"ne",E,E,6,[[["self"],[R[786]]],["bool"]]],[11,"eq",E,E,7,[[["self"],["hostent"]],["bool"]]],[11,"ne",E,E,7,[[["self"],["hostent"]],["bool"]]],[11,"eq",E,E,8,[[["self"],["iovec"]],["bool"]]],[11,"ne",E,E,8,[[["self"],["iovec"]],["bool"]]],[11,"eq",E,E,9,[[["self"],["pollfd"]],["bool"]]],[11,"ne",E,E,9,[[["self"],["pollfd"]],["bool"]]],[11,"eq",E,E,10,[[["self"],["winsize"]],["bool"]]],[11,"ne",E,E,10,[[["self"],["winsize"]],["bool"]]],[11,"eq",E,E,11,[[["self"],["linger"]],["bool"]]],[11,"ne",E,E,11,[[["self"],["linger"]],["bool"]]],[11,"eq",E,E,12,[[["self"],["sigval"]],["bool"]]],[11,"ne",E,E,12,[[["self"],["sigval"]],["bool"]]],[11,"eq",E,E,13,[[["self"],[R[787]]],["bool"]]],[11,"ne",E,E,13,[[["self"],[R[787]]],["bool"]]],[11,"eq",E,E,14,[[["self"],["tms"]],["bool"]]],[11,"ne",E,E,14,[[["self"],["tms"]],["bool"]]],[11,"eq",E,E,15,[[["self"],["servent"]],["bool"]]],[11,"ne",E,E,15,[[["self"],["servent"]],["bool"]]],[11,"eq",E,E,16,[[["self"],[R[788]]],["bool"]]],[11,"ne",E,E,16,[[["self"],[R[788]]],["bool"]]],[11,"eq",E,E,17,[[["self"],[R[789]]],["bool"]]],[11,"ne",E,E,17,[[["self"],[R[789]]],["bool"]]],[11,"eq",E,E,18,[[["self"],[R[790]]],["bool"]]],[11,"ne",E,E,18,[[["self"],[R[790]]],["bool"]]],[11,"eq",E,E,19,[[["self"],["passwd"]],["bool"]]],[11,"ne",E,E,19,[[["self"],["passwd"]],["bool"]]],[11,"eq",E,E,20,[[["self"],["ifaddrs"]],["bool"]]],[11,"ne",E,E,20,[[["self"],["ifaddrs"]],["bool"]]],[11,"eq",E,E,82,[[["self"],["fd_set"]],["bool"]]],[11,"ne",E,E,82,[[["self"],["fd_set"]],["bool"]]],[11,"eq",E,E,21,[[["self"],["tm"]],["bool"]]],[11,"ne",E,E,21,[[["self"],["tm"]],["bool"]]],[11,"eq",E,E,22,[[["self"],["msghdr"]],["bool"]]],[11,"ne",E,E,22,[[["self"],["msghdr"]],["bool"]]],[11,"eq",E,E,23,[[["self"],["cmsghdr"]],["bool"]]],[11,"ne",E,E,23,[[["self"],["cmsghdr"]],["bool"]]],[11,"eq",E,E,83,[[["self"],["fsid_t"]],["bool"]]],[11,"ne",E,E,83,[[["self"],["fsid_t"]],["bool"]]],[11,"eq",E,E,24,[[["self"],[R[783]]],["bool"]]],[11,"ne",E,E,24,[[["self"],[R[783]]],["bool"]]],[11,"eq",E,E,25,[[["self"],[R[791]]],["bool"]]],[11,"eq",E,E,26,[[["self"],["utsname"]],["bool"]]],[11,"eq",E,E,27,[[["self"],["ip_mreq"]],["bool"]]],[11,"ne",E,E,27,[[["self"],["ip_mreq"]],["bool"]]],[11,"eq",E,E,28,[[["self"],["aiocb"]],["bool"]]],[11,"ne",E,E,28,[[["self"],["aiocb"]],["bool"]]],[11,"eq",E,E,29,[[["self"],["glob_t"]],["bool"]]],[11,"ne",E,E,29,[[["self"],["glob_t"]],["bool"]]],[11,"eq",E,E,30,[[["self"],[R[792]]],["bool"]]],[11,"ne",E,E,30,[[["self"],[R[792]]],["bool"]]],[11,"eq",E,E,31,[[["self"],[R[784]]],["bool"]]],[11,"ne",E,E,31,[[["self"],[R[784]]],["bool"]]],[11,"eq",E,E,32,[[["self"],["stat"]],["bool"]]],[11,"ne",E,E,32,[[["self"],["stat"]],["bool"]]],[11,"eq",E,E,84,[[["self"],[R[793]]],["bool"]]],[11,"ne",E,E,84,[[["self"],[R[793]]],["bool"]]],[11,"eq",E,E,85,[[["self"],[R[794]]],["bool"]]],[11,"ne",E,E,85,[[["self"],[R[794]]],["bool"]]],[11,"eq",E,E,86,[[["self"],[R[795]]],["bool"]]],[11,"ne",E,E,86,[[["self"],[R[795]]],["bool"]]],[11,"eq",E,E,33,[[["self"],[R[796]]],["bool"]]],[11,"ne",E,E,33,[[["self"],[R[796]]],["bool"]]],[11,"eq",E,E,34,[[["self"],[R[782]]],["bool"]]],[11,"ne",E,E,34,[[["self"],[R[782]]],["bool"]]],[11,"eq",E,E,35,[[["self"],["stack_t"]],["bool"]]],[11,"ne",E,E,35,[[["self"],["stack_t"]],["bool"]]],[11,"eq",E,E,36,[[["self"],[R[797]]],["bool"]]],[11,"ne",E,E,36,[[["self"],[R[797]]],["bool"]]],[11,"eq",E,E,37,[[["self"],[R[798]]],["bool"]]],[11,"ne",E,E,37,[[["self"],[R[798]]],["bool"]]],[11,"eq",E,E,38,[[["self"],[R[828]]],["bool"]]],[11,"ne",E,E,38,[[["self"],[R[828]]],["bool"]]],[11,"eq",E,E,39,[[["self"],["dl_info"]],["bool"]]],[11,"ne",E,E,39,[[["self"],["dl_info"]],["bool"]]],[11,"eq",E,E,40,[[["self"],[R[799]]],["bool"]]],[11,"ne",E,E,40,[[["self"],[R[799]]],["bool"]]],[11,"eq",E,E,41,[[["self"],[R[800]]],["bool"]]],[11,"ne",E,E,41,[[["self"],[R[800]]],["bool"]]],[11,"eq",E,E,42,[[["self"],["dqblk"]],["bool"]]],[11,"ne",E,E,42,[[["self"],["dqblk"]],["bool"]]],[11,"eq",E,E,43,[[["self"],[R[801]]],["bool"]]],[11,"ne",E,E,43,[[["self"],[R[801]]],["bool"]]],[11,"eq",E,E,44,[[["self"],["termios"]],["bool"]]],[11,"ne",E,E,44,[[["self"],["termios"]],["bool"]]],[11,"eq",E,E,45,[[["self"],["flock"]],["bool"]]],[11,"ne",E,E,45,[[["self"],["flock"]],["bool"]]],[11,"eq",E,E,46,[[["self"],["sf_hdtr"]],["bool"]]],[11,"ne",E,E,46,[[["self"],["sf_hdtr"]],["bool"]]],[11,"eq",E,E,47,[[["self"],["lconv"]],["bool"]]],[11,"ne",E,E,47,[[["self"],["lconv"]],["bool"]]],[11,"eq",E,E,48,[[["self"],[R[802]]],["bool"]]],[11,"ne",E,E,48,[[["self"],[R[802]]],["bool"]]],[11,"eq",E,E,49,[[["self"],[R[803]]],["bool"]]],[11,"ne",E,E,49,[[["self"],[R[803]]],["bool"]]],[11,"eq",E,E,50,[[["self"],[R[804]]],["bool"]]],[11,"ne",E,E,50,[[["self"],[R[804]]],["bool"]]],[11,"eq",E,E,51,[[["self"],[R[805]]],["bool"]]],[11,"ne",E,E,51,[[["self"],[R[805]]],["bool"]]],[11,"eq",E,E,52,[[["self"],["xucred"]],["bool"]]],[11,"ne",E,E,52,[[["self"],["xucred"]],["bool"]]],[11,"eq",E,E,53,[[["self"],[R[806]]],["bool"]]],[11,"ne",E,E,53,[[["self"],[R[806]]],["bool"]]],[11,"eq",E,E,54,[[["self"],[R[807]]],["bool"]]],[11,"ne",E,E,54,[[["self"],[R[807]]],["bool"]]],[11,"eq",E,E,55,[[["self"],[R[808]]],["bool"]]],[11,"ne",E,E,55,[[["self"],[R[808]]],["bool"]]],[11,"eq",E,E,56,[[["self"],[R[809]]],["bool"]]],[11,"ne",E,E,56,[[["self"],[R[809]]],["bool"]]],[11,"eq",E,E,57,[[["self"],[R[810]]],["bool"]]],[11,"ne",E,E,57,[[["self"],[R[810]]],["bool"]]],[11,"eq",E,E,58,[[["self"],[R[811]]],["bool"]]],[11,"ne",E,E,58,[[["self"],[R[811]]],["bool"]]],[11,"eq",E,E,59,[[["self"],[R[812]]],["bool"]]],[11,"ne",E,E,59,[[["self"],[R[812]]],["bool"]]],[11,"eq",E,E,60,[[["self"],[R[813]]],["bool"]]],[11,"ne",E,E,60,[[["self"],[R[813]]],["bool"]]],[11,"eq",E,E,61,[[["self"],[R[814]]],["bool"]]],[11,"ne",E,E,61,[[["self"],[R[814]]],["bool"]]],[11,"eq",E,E,62,[[["self"],[R[815]]],["bool"]]],[11,"ne",E,E,62,[[["self"],[R[815]]],["bool"]]],[11,"eq",E,E,63,[[["self"],[R[816]]],["bool"]]],[11,"ne",E,E,63,[[["self"],[R[816]]],["bool"]]],[11,"eq",E,E,64,[[["self"],["sembuf"]],["bool"]]],[11,"ne",E,E,64,[[["self"],["sembuf"]],["bool"]]],[11,"eq",E,E,65,[[["self"],["arphdr"]],["bool"]]],[11,"ne",E,E,65,[[["self"],["arphdr"]],["bool"]]],[11,"eq",E,E,66,[[["self"],["in_addr"]],["bool"]]],[11,"ne",E,E,66,[[["self"],["in_addr"]],["bool"]]],[11,"eq",E,E,80,[[["self"],["semun"]],["bool"]]],[11,"eq",E,E,67,[[["self"],["kevent"]],["bool"]]],[11,"eq",E,E,68,[[["self"],[R[825]]],["bool"]]],[11,"eq",E,E,69,[[["self"],[R[826]]],["bool"]]],[11,"eq",E,E,70,[[["self"],[R[817]]],["bool"]]],[11,"eq",E,E,71,[[["self"],["statfs"]],["bool"]]],[11,"eq",E,E,72,[[["self"],["dirent"]],["bool"]]],[11,"eq",E,E,87,[[["self"],[R[818]]],["bool"]]],[11,"eq",E,E,88,[[["self"],[R[819]]],["bool"]]],[11,"eq",E,E,89,[[["self"],[R[820]]],["bool"]]],[11,"eq",E,E,73,[[["self"],[R[821]]],["bool"]]],[11,"eq",E,E,74,[[["self"],["utmpx"]],["bool"]]],[11,"eq",E,E,75,[[["self"],[R[827]]],["bool"]]],[11,"eq",E,E,76,[[["self"],[R[822]]],["bool"]]],[11,"ne",E,E,76,[[["self"],[R[822]]],["bool"]]],[11,"eq",E,E,77,[[["self"],["if_data"]],["bool"]]],[11,"ne",E,E,77,[[["self"],["if_data"]],["bool"]]],[11,"eq",E,E,78,[[["self"],["bpf_hdr"]],["bool"]]],[11,"ne",E,E,78,[[["self"],["bpf_hdr"]],["bool"]]],[11,"eq",E,E,90,[[["self"],[R[823]]],["bool"]]],[11,"eq",E,E,79,[[["self"],[R[824]]],["bool"]]],[11,"ne",E,E,79,[[["self"],[R[824]]],["bool"]]],[11,"hash",E,E,0,[[["self"],["__h"]]]],[11,"hash",E,E,1,[[["self"],["__h"]]]],[11,"hash",E,E,2,[[["self"],["__h"]]]],[11,"hash",E,E,3,[[["self"],["__h"]]]],[11,"hash",E,E,4,[[["self"],["__h"]]]],[11,"hash",E,E,5,[[["self"],["__h"]]]],[11,"hash",E,E,6,[[["self"],["__h"]]]],[11,"hash",E,E,7,[[["self"],["__h"]]]],[11,"hash",E,E,8,[[["self"],["__h"]]]],[11,"hash",E,E,9,[[["self"],["__h"]]]],[11,"hash",E,E,10,[[["self"],["__h"]]]],[11,"hash",E,E,11,[[["self"],["__h"]]]],[11,"hash",E,E,12,[[["self"],["__h"]]]],[11,"hash",E,E,13,[[["self"],["__h"]]]],[11,"hash",E,E,14,[[["self"],["__h"]]]],[11,"hash",E,E,15,[[["self"],["__h"]]]],[11,"hash",E,E,16,[[["self"],["__h"]]]],[11,"hash",E,E,17,[[["self"],["__h"]]]],[11,"hash",E,E,18,[[["self"],["__h"]]]],[11,"hash",E,E,19,[[["self"],["__h"]]]],[11,"hash",E,E,20,[[["self"],["__h"]]]],[11,"hash",E,E,82,[[["self"],["__h"]]]],[11,"hash",E,E,21,[[["self"],["__h"]]]],[11,"hash",E,E,22,[[["self"],["__h"]]]],[11,"hash",E,E,23,[[["self"],["__h"]]]],[11,"hash",E,E,83,[[["self"],["__h"]]]],[11,"hash",E,E,24,[[["self"],["__h"]]]],[11,"hash",E,E,25,[[["self"],["h"]]]],[11,"hash",E,E,26,[[["self"],["h"]]]],[11,"hash",E,E,27,[[["self"],["__h"]]]],[11,"hash",E,E,28,[[["self"],["__h"]]]],[11,"hash",E,E,29,[[["self"],["__h"]]]],[11,"hash",E,E,30,[[["self"],["__h"]]]],[11,"hash",E,E,31,[[["self"],["__h"]]]],[11,"hash",E,E,32,[[["self"],["__h"]]]],[11,"hash",E,E,84,[[["self"],["__h"]]]],[11,"hash",E,E,85,[[["self"],["__h"]]]],[11,"hash",E,E,86,[[["self"],["__h"]]]],[11,"hash",E,E,33,[[["self"],["__h"]]]],[11,"hash",E,E,34,[[["self"],["__h"]]]],[11,"hash",E,E,35,[[["self"],["__h"]]]],[11,"hash",E,E,36,[[["self"],["__h"]]]],[11,"hash",E,E,37,[[["self"],["__h"]]]],[11,"hash",E,E,38,[[["self"],["__h"]]]],[11,"hash",E,E,39,[[["self"],["__h"]]]],[11,"hash",E,E,40,[[["self"],["__h"]]]],[11,"hash",E,E,41,[[["self"],["__h"]]]],[11,"hash",E,E,42,[[["self"],["__h"]]]],[11,"hash",E,E,43,[[["self"],["__h"]]]],[11,"hash",E,E,44,[[["self"],["__h"]]]],[11,"hash",E,E,45,[[["self"],["__h"]]]],[11,"hash",E,E,46,[[["self"],["__h"]]]],[11,"hash",E,E,47,[[["self"],["__h"]]]],[11,"hash",E,E,48,[[["self"],["__h"]]]],[11,"hash",E,E,49,[[["self"],["__h"]]]],[11,"hash",E,E,50,[[["self"],["__h"]]]],[11,"hash",E,E,51,[[["self"],["__h"]]]],[11,"hash",E,E,52,[[["self"],["__h"]]]],[11,"hash",E,E,53,[[["self"],["__h"]]]],[11,"hash",E,E,54,[[["self"],["__h"]]]],[11,"hash",E,E,55,[[["self"],["__h"]]]],[11,"hash",E,E,56,[[["self"],["__h"]]]],[11,"hash",E,E,57,[[["self"],["__h"]]]],[11,"hash",E,E,58,[[["self"],["__h"]]]],[11,"hash",E,E,59,[[["self"],["__h"]]]],[11,"hash",E,E,60,[[["self"],["__h"]]]],[11,"hash",E,E,61,[[["self"],["__h"]]]],[11,"hash",E,E,62,[[["self"],["__h"]]]],[11,"hash",E,E,63,[[["self"],["__h"]]]],[11,"hash",E,E,64,[[["self"],["__h"]]]],[11,"hash",E,E,65,[[["self"],["__h"]]]],[11,"hash",E,E,66,[[["self"],["__h"]]]],[11,"hash",E,E,80,[[["self"],["h"]]]],[11,"hash",E,E,67,[[["self"],["h"]]]],[11,"hash",E,E,68,[[["self"],["h"]]]],[11,"hash",E,E,69,[[["self"],["h"]]]],[11,"hash",E,E,70,[[["self"],["h"]]]],[11,"hash",E,E,71,[[["self"],["h"]]]],[11,"hash",E,E,72,[[["self"],["h"]]]],[11,"hash",E,E,87,[[["self"],["h"]]]],[11,"hash",E,E,88,[[["self"],["h"]]]],[11,"hash",E,E,89,[[["self"],["h"]]]],[11,"hash",E,E,73,[[["self"],["h"]]]],[11,"hash",E,E,74,[[["self"],["h"]]]],[11,"hash",E,E,75,[[["self"],["h"]]]],[11,"hash",E,E,76,[[["self"],["__h"]]]],[11,"hash",E,E,77,[[["self"],["__h"]]]],[11,"hash",E,E,78,[[["self"],["__h"]]]],[11,"hash",E,E,90,[[["self"],["h"]]]],[11,"hash",E,E,79,[[["self"],["__h"]]]],[11,"fmt",E,E,91,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,0,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,1,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,2,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,3,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,4,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,5,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,6,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,7,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,8,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,9,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,10,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,11,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,12,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,13,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,14,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,15,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,16,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,92,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,93,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,17,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,18,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,19,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,20,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,82,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,21,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,22,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,23,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,83,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,24,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,25,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,26,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,94,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,27,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,28,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,29,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,30,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,31,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,32,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,84,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,85,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,86,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,33,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,34,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,35,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,36,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,37,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,38,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,39,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,40,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,41,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,42,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,43,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,44,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,45,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,46,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,47,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,48,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,49,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,50,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,51,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,52,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,53,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,54,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,55,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,56,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,57,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,58,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,59,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,60,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,61,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,62,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,63,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,64,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,65,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,66,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,80,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,67,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,68,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,69,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,70,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,71,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,72,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,87,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,88,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,89,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,73,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,74,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,75,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,76,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,77,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,78,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,90,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,79,[[["self"],[R[10]]],[R[3]]]],[11,"clone",E,E,91,[[["self"]],["dir"]]],[11,"clone",E,E,0,[[["self"]],["group"]]],[11,"clone",E,E,1,[[["self"]],["utimbuf"]]],[11,"clone",E,E,2,[[["self"]],["timeval"]]],[11,"clone",E,E,3,[[["self"]],[R[785]]]],[11,"clone",E,E,4,[[["self"]],["rlimit"]]],[11,"clone",E,E,5,[[["self"]],["rusage"]]],[11,"clone",E,E,6,[[["self"]],[R[786]]]],[11,"clone",E,E,7,[[["self"]],["hostent"]]],[11,"clone",E,E,8,[[["self"]],["iovec"]]],[11,"clone",E,E,9,[[["self"]],["pollfd"]]],[11,"clone",E,E,10,[[["self"]],["winsize"]]],[11,"clone",E,E,11,[[["self"]],["linger"]]],[11,"clone",E,E,12,[[["self"]],["sigval"]]],[11,"clone",E,E,13,[[["self"]],[R[787]]]],[11,"clone",E,E,14,[[["self"]],["tms"]]],[11,"clone",E,E,15,[[["self"]],["servent"]]],[11,"clone",E,E,16,[[["self"]],[R[788]]]],[11,"clone",E,E,92,[[["self"]],["file"]]],[11,"clone",E,E,93,[[["self"]],["fpos_t"]]],[11,"clone",E,E,17,[[["self"]],[R[789]]]],[11,"clone",E,E,18,[[["self"]],[R[790]]]],[11,"clone",E,E,19,[[["self"]],["passwd"]]],[11,"clone",E,E,20,[[["self"]],["ifaddrs"]]],[11,"clone",E,E,82,[[["self"]],["fd_set"]]],[11,"clone",E,E,21,[[["self"]],["tm"]]],[11,"clone",E,E,22,[[["self"]],["msghdr"]]],[11,"clone",E,E,23,[[["self"]],["cmsghdr"]]],[11,"clone",E,E,83,[[["self"]],["fsid_t"]]],[11,"clone",E,E,24,[[["self"]],[R[783]]]],[11,"clone",E,E,25,[[["self"]],[R[791]]]],[11,"clone",E,E,26,[[["self"]],["utsname"]]],[11,"clone",E,E,94,[[["self"]],[R[829]]]],[11,"clone",E,E,27,[[["self"]],["ip_mreq"]]],[11,"clone",E,E,28,[[["self"]],["aiocb"]]],[11,"clone",E,E,29,[[["self"]],["glob_t"]]],[11,"clone",E,E,30,[[["self"]],[R[792]]]],[11,"clone",E,E,31,[[["self"]],[R[784]]]],[11,"clone",E,E,32,[[["self"]],["stat"]]],[11,"clone",E,E,84,[[["self"]],[R[793]]]],[11,"clone",E,E,85,[[["self"]],[R[794]]]],[11,"clone",E,E,86,[[["self"]],[R[795]]]],[11,"clone",E,E,33,[[["self"]],[R[796]]]],[11,"clone",E,E,34,[[["self"]],[R[782]]]],[11,"clone",E,E,35,[[["self"]],["stack_t"]]],[11,"clone",E,E,36,[[["self"]],[R[797]]]],[11,"clone",E,E,37,[[["self"]],[R[798]]]],[11,"clone",E,E,38,[[["self"]],[R[828]]]],[11,"clone",E,E,39,[[["self"]],["dl_info"]]],[11,"clone",E,E,40,[[["self"]],[R[799]]]],[11,"clone",E,E,41,[[["self"]],[R[800]]]],[11,"clone",E,E,42,[[["self"]],["dqblk"]]],[11,"clone",E,E,43,[[["self"]],[R[801]]]],[11,"clone",E,E,44,[[["self"]],["termios"]]],[11,"clone",E,E,45,[[["self"]],["flock"]]],[11,"clone",E,E,46,[[["self"]],["sf_hdtr"]]],[11,"clone",E,E,47,[[["self"]],["lconv"]]],[11,"clone",E,E,48,[[["self"]],[R[802]]]],[11,"clone",E,E,49,[[["self"]],[R[803]]]],[11,"clone",E,E,50,[[["self"]],[R[804]]]],[11,"clone",E,E,51,[[["self"]],[R[805]]]],[11,"clone",E,E,52,[[["self"]],["xucred"]]],[11,"clone",E,E,53,[[["self"]],[R[806]]]],[11,"clone",E,E,54,[[["self"]],[R[807]]]],[11,"clone",E,E,55,[[["self"]],[R[808]]]],[11,"clone",E,E,56,[[["self"]],[R[809]]]],[11,"clone",E,E,57,[[["self"]],[R[810]]]],[11,"clone",E,E,58,[[["self"]],[R[811]]]],[11,"clone",E,E,59,[[["self"]],[R[812]]]],[11,"clone",E,E,60,[[["self"]],[R[813]]]],[11,"clone",E,E,61,[[["self"]],[R[814]]]],[11,"clone",E,E,62,[[["self"]],[R[815]]]],[11,"clone",E,E,63,[[["self"]],[R[816]]]],[11,"clone",E,E,64,[[["self"]],["sembuf"]]],[11,"clone",E,E,65,[[["self"]],["arphdr"]]],[11,"clone",E,E,66,[[["self"]],["in_addr"]]],[11,"clone",E,E,67,[[["self"]],["kevent"]]],[11,"clone",E,E,68,[[["self"]],[R[825]]]],[11,"clone",E,E,69,[[["self"]],[R[826]]]],[11,"clone",E,E,70,[[["self"]],[R[817]]]],[11,"clone",E,E,71,[[["self"]],["statfs"]]],[11,"clone",E,E,72,[[["self"]],["dirent"]]],[11,"clone",E,E,87,[[["self"]],[R[818]]]],[11,"clone",E,E,88,[[["self"]],[R[819]]]],[11,"clone",E,E,89,[[["self"]],[R[820]]]],[11,"clone",E,E,73,[[["self"]],[R[821]]]],[11,"clone",E,E,74,[[["self"]],["utmpx"]]],[11,"clone",E,E,75,[[["self"]],[R[827]]]],[11,"clone",E,E,80,[[["self"]],["semun"]]],[11,"clone",E,E,76,[[["self"]],[R[822]]]],[11,"clone",E,E,77,[[["self"]],["if_data"]]],[11,"clone",E,E,78,[[["self"]],["bpf_hdr"]]],[11,"clone",E,E,90,[[["self"]],[R[823]]]],[11,"clone",E,E,79,[[["self"]],[R[824]]]]],"p":[[3,"group"],[3,"utimbuf"],[3,"timeval"],[3,R[785]],[3,"rlimit"],[3,"rusage"],[3,R[786]],[3,"hostent"],[3,"iovec"],[3,"pollfd"],[3,"winsize"],[3,"linger"],[3,"sigval"],[3,R[787]],[3,"tms"],[3,"servent"],[3,R[788]],[3,R[789]],[3,R[790]],[3,"passwd"],[3,"ifaddrs"],[3,"tm"],[3,"msghdr"],[3,"cmsghdr"],[3,R[783]],[3,R[791]],[3,"utsname"],[3,"ip_mreq"],[3,"aiocb"],[3,"glob_t"],[3,R[792]],[3,R[784]],[3,"stat"],[3,R[796]],[3,R[782]],[3,"stack_t"],[3,R[797]],[3,R[798]],[3,R[828]],[3,"Dl_info"],[3,R[799]],[3,R[800]],[3,"dqblk"],[3,R[801]],[3,"termios"],[3,"flock"],[3,"sf_hdtr"],[3,"lconv"],[3,R[802]],[3,R[803]],[3,R[804]],[3,R[805]],[3,"xucred"],[3,R[806]],[3,R[807]],[3,R[808]],[3,R[809]],[3,R[810]],[3,R[811]],[3,R[812]],[3,R[813]],[3,R[814]],[3,R[815]],[3,R[816]],[3,"sembuf"],[3,"arphdr"],[3,"in_addr"],[3,"kevent"],[3,R[825]],[3,R[826]],[3,R[817]],[3,"statfs"],[3,"dirent"],[3,R[821]],[3,"utmpx"],[3,R[827]],[3,R[822]],[3,"if_data"],[3,"bpf_hdr"],[3,R[824]],[19,"semun"],[4,"c_void"],[3,"fd_set"],[3,"fsid_t"],[3,R[793]],[3,R[794]],[3,R[795]],[3,R[818]],[3,R[819]],[3,R[820]],[3,R[823]],[4,"DIR"],[4,"FILE"],[4,"fpos_t"],[4,R[829]]]};
searchIndex["llvm_sys"]={"doc":"Bindings to LLVM's C API.","i":[[4,R[3219],R[3139],E,N,N],[4,R[3220],E,E,N,N],[4,"LLVMModule",E,E,N,N],[4,"LLVMType",E,E,N,N],[4,"LLVMValue",E,E,N,N],[4,R[3221],E,E,N,N],[4,R[3222],E,E,N,N],[4,R[3223],E,E,N,N],[4,R[3224],E,E,N,N],[4,R[3225],E,E,N,N],[4,R[3226],E,E,N,N],[4,R[3227],E,E,N,N],[4,R[3228],E,E,N,N],[4,R[3229],E,E,N,N],[4,"LLVMUse",E,E,N,N],[4,R[3230],E,E,N,N],[4,"LLVMComdat",E,E,N,N],[4,R[3231],E,E,N,N],[4,R[3232],E,E,N,N],[4,R[3233],E,E,N,N],[4,"LLVMOpcode",E,E,N,N],[13,"LLVMRet",E,E,0,N],[13,"LLVMBr",E,E,0,N],[13,"LLVMSwitch",E,E,0,N],[13,"LLVMIndirectBr",E,E,0,N],[13,"LLVMInvoke",E,E,0,N],[13,"LLVMUnreachable",E,E,0,N],[13,"LLVMFNeg",E,E,0,N],[13,"LLVMAdd",E,E,0,N],[13,"LLVMFAdd",E,E,0,N],[13,"LLVMSub",E,E,0,N],[13,"LLVMFSub",E,E,0,N],[13,"LLVMMul",E,E,0,N],[13,"LLVMFMul",E,E,0,N],[13,"LLVMUDiv",E,E,0,N],[13,"LLVMSDiv",E,E,0,N],[13,"LLVMFDiv",E,E,0,N],[13,"LLVMURem",E,E,0,N],[13,"LLVMSRem",E,E,0,N],[13,"LLVMFRem",E,E,0,N],[13,"LLVMShl",E,E,0,N],[13,"LLVMLShr",E,E,0,N],[13,"LLVMAShr",E,E,0,N],[13,"LLVMAnd",E,E,0,N],[13,"LLVMOr",E,E,0,N],[13,"LLVMXor",E,E,0,N],[13,"LLVMAlloca",E,E,0,N],[13,"LLVMLoad",E,E,0,N],[13,"LLVMStore",E,E,0,N],[13,"LLVMGetElementPtr",E,E,0,N],[13,"LLVMTrunc",E,E,0,N],[13,"LLVMZExt",E,E,0,N],[13,"LLVMSExt",E,E,0,N],[13,"LLVMFPToUI",E,E,0,N],[13,"LLVMFPToSI",E,E,0,N],[13,"LLVMUIToFP",E,E,0,N],[13,"LLVMSIToFP",E,E,0,N],[13,"LLVMFPTrunc",E,E,0,N],[13,"LLVMFPExt",E,E,0,N],[13,"LLVMPtrToInt",E,E,0,N],[13,"LLVMIntToPtr",E,E,0,N],[13,"LLVMBitCast",E,E,0,N],[13,"LLVMAddrSpaceCast",E,E,0,N],[13,"LLVMICmp",E,E,0,N],[13,"LLVMFCmp",E,E,0,N],[13,"LLVMPHI",E,E,0,N],[13,"LLVMCall",E,E,0,N],[13,"LLVMSelect",E,E,0,N],[13,"LLVMUserOp1",E,E,0,N],[13,"LLVMUserOp2",E,E,0,N],[13,"LLVMVAArg",E,E,0,N],[13,"LLVMExtractElement",E,E,0,N],[13,"LLVMInsertElement",E,E,0,N],[13,"LLVMShuffleVector",E,E,0,N],[13,"LLVMExtractValue",E,E,0,N],[13,"LLVMInsertValue",E,E,0,N],[13,"LLVMFence",E,E,0,N],[13,"LLVMAtomicCmpXchg",E,E,0,N],[13,"LLVMAtomicRMW",E,E,0,N],[13,"LLVMResume",E,E,0,N],[13,"LLVMLandingPad",E,E,0,N],[13,"LLVMCleanupRet",E,E,0,N],[13,"LLVMCatchRet",E,E,0,N],[13,"LLVMCatchPad",E,E,0,N],[13,"LLVMCleanupPad",E,E,0,N],[13,"LLVMCatchSwitch",E,E,0,N],[4,R[3188],E,E,N,N],[13,"LLVMVoidTypeKind",E,E,1,N],[13,"LLVMHalfTypeKind",E,E,1,N],[13,"LLVMFloatTypeKind",E,E,1,N],[13,"LLVMDoubleTypeKind",E,E,1,N],[13,"LLVMX86_FP80TypeKind",E,E,1,N],[13,"LLVMFP128TypeKind",E,E,1,N],[13,"LLVMPPC_FP128TypeKind",E,E,1,N],[13,"LLVMLabelTypeKind",E,E,1,N],[13,"LLVMIntegerTypeKind",E,E,1,N],[13,"LLVMFunctionTypeKind",E,E,1,N],[13,"LLVMStructTypeKind",E,E,1,N],[13,"LLVMArrayTypeKind",E,E,1,N],[13,"LLVMPointerTypeKind",E,E,1,N],[13,"LLVMVectorTypeKind",E,E,1,N],[13,"LLVMMetadataTypeKind",E,E,1,N],[13,"LLVMX86_MMXTypeKind",E,E,1,N],[13,"LLVMTokenTypeKind",E,E,1,N],[4,R[3189],E,E,N,N],[13,"LLVMExternalLinkage",E,E,2,N],[13,"LLVMAvailableExternallyLinkage",E,E,2,N],[13,"LLVMLinkOnceAnyLinkage",E,E,2,N],[13,"LLVMLinkOnceODRLinkage",E,E,2,N],[13,"LLVMLinkOnceODRAutoHideLinkage",E,E,2,N],[13,"LLVMWeakAnyLinkage",E,E,2,N],[13,"LLVMWeakODRLinkage",E,E,2,N],[13,"LLVMAppendingLinkage",E,E,2,N],[13,"LLVMInternalLinkage",E,E,2,N],[13,"LLVMPrivateLinkage",E,E,2,N],[13,"LLVMDLLImportLinkage",E,E,2,N],[13,"LLVMDLLExportLinkage",E,E,2,N],[13,"LLVMExternalWeakLinkage",E,E,2,N],[13,"LLVMGhostLinkage",E,E,2,N],[13,"LLVMCommonLinkage",E,E,2,N],[13,"LLVMLinkerPrivateLinkage",E,E,2,N],[13,"LLVMLinkerPrivateWeakLinkage",E,E,2,N],[4,R[3190],E,E,N,N],[13,"LLVMDefaultVisibility",E,E,3,N],[13,"LLVMHiddenVisibility",E,E,3,N],[13,"LLVMProtectedVisibility",E,E,3,N],[4,R[3191],E,E,N,N],[13,"LLVMNoUnnamedAddr",E,"Address of the GV is significant.",4,N],[13,"LLVMLocalUnnamedAddr",E,"Address of the GV is locally insignificant.",4,N],[13,"LLVMGlobalUnnamedAddr",E,"Address of the GV is globally insignificant.",4,N],[4,R[3192],E,E,N,N],[13,"LLVMDefaultStorageClass",E,E,5,N],[13,"LLVMDLLImportStorageClass",E,E,5,N],[13,"LLVMDLLExportStorageClass",E,E,5,N],[4,R[3193],E,E,N,N],[13,"LLVMCCallConv",E,E,6,N],[13,"LLVMFastCallConv",E,E,6,N],[13,"LLVMColdCallConv",E,E,6,N],[13,"LLVMGHCCallConv",E,E,6,N],[13,"LLVMHiPECallConv",E,E,6,N],[13,"LLVMWebKitJSCallConv",E,E,6,N],[13,"LLVMAnyRegCallConv",E,E,6,N],[13,"LLVMPreserveMostCallConv",E,E,6,N],[13,"LLVMPreserveAllCallConv",E,E,6,N],[13,"LLVMSwiftCallConv",E,E,6,N],[13,"LLVMCXXFASTTLSCallConv",E,E,6,N],[13,"LLVMX86StdcallCallConv",E,E,6,N],[13,"LLVMX86FastcallCallConv",E,E,6,N],[13,"LLVMARMAPCSCallConv",E,E,6,N],[13,"LLVMARMAAPCSCallConv",E,E,6,N],[13,"LLVMARMAAPCSVFPCallConv",E,E,6,N],[13,"LLVMMSP430INTRCallConv",E,E,6,N],[13,"LLVMX86ThisCallCallConv",E,E,6,N],[13,"LLVMPTXKernelCallConv",E,E,6,N],[13,"LLVMPTXDeviceCallConv",E,E,6,N],[13,"LLVMSPIRFUNCCallConv",E,E,6,N],[13,"LLVMSPIRKERNELCallConv",E,E,6,N],[13,"LLVMIntelOCLBICallConv",E,E,6,N],[13,"LLVMX8664SysVCallConv",E,E,6,N],[13,"LLVMWin64CallConv",E,E,6,N],[13,"LLVMX86VectorCallCallConv",E,E,6,N],[13,"LLVMHHVMCallConv",E,E,6,N],[13,"LLVMHHVMCCallConv",E,E,6,N],[13,"LLVMX86INTRCallConv",E,E,6,N],[13,"LLVMAVRINTRCallConv",E,E,6,N],[13,"LLVMAVRSIGNALCallConv",E,E,6,N],[13,"LLVMAVRBUILTINCallConv",E,E,6,N],[13,"LLVMAMDGPUVSCallConv",E,E,6,N],[13,"LLVMAMDGPUGSCallConv",E,E,6,N],[13,"LLVMAMDGPUPSCallConv",E,E,6,N],[13,"LLVMAMDGPUCSCallConv",E,E,6,N],[13,"LLVMAMDGPUKERNELCallConv",E,E,6,N],[13,"LLVMX86RegCallCallConv",E,E,6,N],[13,"LLVMAMDGPUHSCallConv",E,E,6,N],[13,"LLVMMSP430BUILTINCallConv",E,E,6,N],[13,"LLVMAMDGPULSCallConv",E,E,6,N],[13,"LLVMAMDGPUESCallConv",E,E,6,N],[4,R[3194],E,E,N,N],[13,"LLVMArgumentValueKind",E,E,7,N],[13,"LLVMBasicBlockValueKind",E,E,7,N],[13,"LLVMMemoryUseValueKind",E,E,7,N],[13,"LLVMMemoryDefValueKind",E,E,7,N],[13,"LLVMMemoryPhiValueKind",E,E,7,N],[13,"LLVMFunctionValueKind",E,E,7,N],[13,"LLVMGlobalAliasValueKind",E,E,7,N],[13,"LLVMGlobalIFuncValueKind",E,E,7,N],[13,"LLVMGlobalVariableValueKind",E,E,7,N],[13,"LLVMBlockAddressValueKind",E,E,7,N],[13,"LLVMConstantExprValueKind",E,E,7,N],[13,"LLVMConstantArrayValueKind",E,E,7,N],[13,"LLVMConstantStructValueKind",E,E,7,N],[13,"LLVMConstantVectorValueKind",E,E,7,N],[13,"LLVMUndefValueValueKind",E,E,7,N],[13,"LLVMConstantAggregateZeroValueKind",E,E,7,N],[13,"LLVMConstantDataArrayValueKind",E,E,7,N],[13,"LLVMConstantDataVectorValueKind",E,E,7,N],[13,"LLVMConstantIntValueKind",E,E,7,N],[13,"LLVMConstantFPValueKind",E,E,7,N],[13,"LLVMConstantPointerNullValueKind",E,E,7,N],[13,"LLVMConstantTokenNoneValueKind",E,E,7,N],[13,"LLVMMetadataAsValueValueKind",E,E,7,N],[13,"LLVMInlineAsmValueKind",E,E,7,N],[13,"LLVMInstructionValueKind",E,E,7,N],[4,R[3195],E,E,N,N],[13,"LLVMIntEQ",E,E,8,N],[13,"LLVMIntNE",E,E,8,N],[13,"LLVMIntUGT",E,E,8,N],[13,"LLVMIntUGE",E,E,8,N],[13,"LLVMIntULT",E,E,8,N],[13,"LLVMIntULE",E,E,8,N],[13,"LLVMIntSGT",E,E,8,N],[13,"LLVMIntSGE",E,E,8,N],[13,"LLVMIntSLT",E,E,8,N],[13,"LLVMIntSLE",E,E,8,N],[4,R[3196],E,E,N,N],[13,"LLVMRealPredicateFalse",E,E,9,N],[13,"LLVMRealOEQ",E,E,9,N],[13,"LLVMRealOGT",E,E,9,N],[13,"LLVMRealOGE",E,E,9,N],[13,"LLVMRealOLT",E,E,9,N],[13,"LLVMRealOLE",E,E,9,N],[13,"LLVMRealONE",E,E,9,N],[13,"LLVMRealORD",E,E,9,N],[13,"LLVMRealUNO",E,E,9,N],[13,"LLVMRealUEQ",E,E,9,N],[13,"LLVMRealUGT",E,E,9,N],[13,"LLVMRealUGE",E,E,9,N],[13,"LLVMRealULT",E,E,9,N],[13,"LLVMRealULE",E,E,9,N],[13,"LLVMRealUNE",E,E,9,N],[13,"LLVMRealPredicateTrue",E,E,9,N],[4,R[3197],E,E,N,N],[13,"LLVMLandingPadCatch",E,E,10,N],[13,"LLVMLandingPadFilter",E,E,10,N],[4,R[3198],E,E,N,N],[13,"LLVMNotThreadLocal",E,E,11,N],[13,"LLVMGeneralDynamicTLSModel",E,E,11,N],[13,"LLVMLocalDynamicTLSModel",E,E,11,N],[13,"LLVMInitialExecTLSModel",E,E,11,N],[13,"LLVMLocalExecTLSModel",E,E,11,N],[4,R[3199],E,E,N,N],[13,"LLVMAtomicOrderingNotAtomic",E,E,12,N],[13,"LLVMAtomicOrderingUnordered",E,E,12,N],[13,"LLVMAtomicOrderingMonotonic",E,E,12,N],[13,"LLVMAtomicOrderingAcquire",E,E,12,N],[13,"LLVMAtomicOrderingRelease",E,E,12,N],[13,"LLVMAtomicOrderingAcquireRelease",E,E,12,N],[13,"LLVMAtomicOrderingSequentiallyConsistent",E,E,12,N],[4,R[3200],E,E,N,N],[13,"LLVMAtomicRMWBinOpXchg",E,E,13,N],[13,"LLVMAtomicRMWBinOpAdd",E,E,13,N],[13,"LLVMAtomicRMWBinOpSub",E,E,13,N],[13,"LLVMAtomicRMWBinOpAnd",E,E,13,N],[13,"LLVMAtomicRMWBinOpNand",E,E,13,N],[13,"LLVMAtomicRMWBinOpOr",E,E,13,N],[13,"LLVMAtomicRMWBinOpXor",E,E,13,N],[13,"LLVMAtomicRMWBinOpMax",E,E,13,N],[13,"LLVMAtomicRMWBinOpMin",E,E,13,N],[13,"LLVMAtomicRMWBinOpUMax",E,E,13,N],[13,"LLVMAtomicRMWBinOpUMin",E,E,13,N],[4,R[3201],E,E,N,N],[13,"LLVMDSError",E,E,14,N],[13,"LLVMDSWarning",E,E,14,N],[13,"LLVMDSRemark",E,E,14,N],[13,"LLVMDSNote",E,E,14,N],[4,R[3202],E,E,N,N],[13,"LLVMInlineAsmDialectATT",E,E,15,N],[13,"LLVMInlineAsmDialectIntel",E,E,15,N],[4,R[3203],E,E,N,N],[13,"LLVMModuleFlagBehaviorError",E,R[5818],16,N],[13,"LLVMModuleFlagBehaviorWarning",E,R[5819],16,N],[13,"LLVMModuleFlagBehaviorRequire",E,R[5820],16,N],[13,"LLVMModuleFlagBehaviorOverride",E,R[5821],16,N],[13,"LLVMModuleFlagBehaviorAppend",E,R[3133],16,N],[13,"LLVMModuleFlagBehaviorAppendUnique",E,R[3133],16,N],[0,"prelude",E,"Core types used throughout LLVM.",N,N],[6,"LLVMBool","llvm_sys::prelude",E,N,N],[6,"LLVMMemoryBufferRef",E,E,N,N],[6,"LLVMContextRef",E,E,N,N],[6,"LLVMModuleRef",E,E,N,N],[6,"LLVMTypeRef",E,E,N,N],[6,"LLVMValueRef",E,E,N,N],[6,"LLVMBasicBlockRef",E,E,N,N],[6,"LLVMMetadataRef",E,E,N,N],[6,"LLVMNamedMDNodeRef",E,E,N,N],[6,"LLVMValueMetadataEntry",E,E,N,N],[6,"LLVMBuilderRef",E,E,N,N],[6,"LLVMDIBuilderRef",E,E,N,N],[6,"LLVMModuleProviderRef",E,E,N,N],[6,"LLVMPassManagerRef",E,E,N,N],[6,"LLVMPassRegistryRef",E,E,N,N],[6,"LLVMUseRef",E,E,N,N],[6,"LLVMDiagnosticInfoRef",E,E,N,N],[6,"LLVMComdatRef",E,E,N,N],[6,"LLVMModuleFlagEntry",E,E,N,N],[6,"LLVMJITEventListenerRef",E,E,N,N],[6,"LLVMAttributeRef",E,E,N,N],[0,"analysis",R[3139],"Various analyses of the LLVM IR.",N,N],[4,R[3204],R[3145],E,N,N],[13,"LLVMAbortProcessAction",E,"Print to stderr and abort the process.",17,N],[13,"LLVMPrintMessageAction",E,"Print to stderr and return 1.",17,N],[13,"LLVMReturnStatusAction",E,"Return 1 and print nothing.",17,N],[5,"LLVMVerifyModule",E,"Verify that a module is valid, taking the specified action…",N,N],[5,"LLVMVerifyFunction",E,"Verify that a single function is valid, taking the…",N,N],[5,"LLVMViewFunctionCFG",E,"Open a ghostview window displaying the CFG of the given…",N,N],[5,"LLVMViewFunctionCFGOnly",E,E,N,N],[0,"bit_reader",R[3139],"Input of the LLVM bitcode format.",N,N],[5,"LLVMParseBitcode","llvm_sys::bit_reader",R[3134],N,N],[5,"LLVMParseBitcode2",E,R[3134],N,N],[5,"LLVMParseBitcodeInContext",E,E,N,N],[5,"LLVMParseBitcodeInContext2",E,E,N,N],[5,"LLVMGetBitcodeModuleInContext",E,R[3135],N,N],[5,"LLVMGetBitcodeModuleInContext2",E,R[3135],N,N],[5,"LLVMGetBitcodeModule",E,E,N,N],[5,"LLVMGetBitcodeModule2",E,"Read a module from the specified path.",N,N],[0,"bit_writer",R[3139],"Output of the LLVM bitcode format.",N,N],[5,"LLVMWriteBitcodeToFile","llvm_sys::bit_writer","Write a module to the specified path.",N,N],[5,"LLVMWriteBitcodeToFD",E,"Write a module to an open file descriptor.",N,N],[5,"LLVMWriteBitcodeToFileHandle",E,"Deprecated: use LLVMWriteBitcodeToFD",N,N],[5,"LLVMWriteBitcodeToMemoryBuffer",E,"Writes a module to a new memory buffer.",N,N],[0,"comdat",R[3139],"COMDAT",N,N],[4,R[3205],R[3146],E,N,N],[13,"LLVMAnyComdatSelectionKind",E,R[5822],18,N],[13,"LLVMExactMatchComdatSelectionKind",E,R[5823],18,N],[13,"LLVMLargestComdatSelectionKind",E,R[5824],18,N],[13,"LLVMNoDuplicatesComdatSelectionKind",E,R[5825],18,N],[13,"LLVMSameSizeComdatSelectionKind",E,R[5826],18,N],[5,"LLVMGetOrInsertComdat",E,"Return the Comdat in the module with the specified name.…",N,N],[5,"LLVMGetComdat",E,"Get the Comdat assigned to the given global object.",N,N],[5,"LLVMSetComdat",E,"Assign the Comdat to the given global object.",N,N],[5,"LLVMGetComdatSelectionKind",E,"Get the conflict resolution selection kind for the Comdat.",N,N],[5,"LLVMSetComdatSelectionKind",E,"Set the conflict resolution selection kind for the Comdat.",N,N],[0,"core",R[3139],"The LLVM intermediate representation.",N,N],[5,"LLVMShutdown","llvm_sys::core",E,N,N],[5,"LLVMCreateMessage",E,E,N,N],[5,"LLVMDisposeMessage",E,E,N,N],[5,"LLVMContextCreate",E,E,N,N],[5,"LLVMGetGlobalContext",E,E,N,N],[5,"LLVMContextSetDiagnosticHandler",E,E,N,N],[5,"LLVMContextGetDiagnosticHandler",E,"Get the diagnostic handler of this context.",N,N],[5,"LLVMContextGetDiagnosticContext",E,"Get the diagnostic context of this context.",N,N],[5,"LLVMContextSetYieldCallback",E,E,N,N],[5,"LLVMContextShouldDiscardValueNames",E,E,N,N],[5,"LLVMContextSetDiscardValueNames",E,E,N,N],[5,"LLVMContextDispose",E,E,N,N],[5,"LLVMGetDiagInfoDescription",E,E,N,N],[5,"LLVMGetDiagInfoSeverity",E,E,N,N],[5,"LLVMGetMDKindIDInContext",E,E,N,N],[5,"LLVMGetMDKindID",E,E,N,N],[5,"LLVMGetEnumAttributeKindForName",E,"Return a unique id given the name of an enum attribute, or…",N,N],[5,"LLVMGetLastEnumAttributeKind",E,E,N,N],[5,"LLVMCreateEnumAttribute",E,"Create an enum attribute.",N,N],[5,"LLVMGetEnumAttributeKind",E,"Get the unique id corresponding to the provided enum…",N,N],[5,"LLVMGetEnumAttributeValue",E,"Get the value of an enum attribute.",N,N],[5,"LLVMCreateStringAttribute",E,"Create a string attribute.",N,N],[5,"LLVMGetStringAttributeKind",E,"Get a string attribute's kind.",N,N],[5,"LLVMGetStringAttributeValue",E,"Get a string attribute's value.",N,N],[5,"LLVMIsEnumAttribute",E,E,N,N],[5,"LLVMIsStringAttribute",E,E,N,N],[5,"LLVMModuleCreateWithName",E,E,N,N],[5,"LLVMModuleCreateWithNameInContext",E,E,N,N],[5,"LLVMCloneModule",E,E,N,N],[5,"LLVMDisposeModule",E,E,N,N],[5,"LLVMGetModuleIdentifier",E,"Get the identifier of a module.",N,N],[5,"LLVMSetModuleIdentifier",E,"Set the identifier of a module.",N,N],[5,"LLVMGetSourceFileName",E,"Obtain the module's original source file name.",N,N],[5,"LLVMSetSourceFileName",E,"Set the original source file name of a module to a string…",N,N],[5,"LLVMGetDataLayout",E,E,N,N],[5,"LLVMGetDataLayoutStr",E,"Obtain the data layout for a module.",N,N],[5,"LLVMSetDataLayout",E,E,N,N],[5,"LLVMGetTarget",E,E,N,N],[5,"LLVMSetTarget",E,E,N,N],[5,"LLVMCopyModuleFlagsMetadata",E,"Returns the module flags as an array of flag-key-value…",N,N],[5,"LLVMDisposeModuleFlagsMetadata",E,"Destroys module flags metadata entries.",N,N],[5,"LLVMModuleFlagEntriesGetFlagBehavior",E,"Returns the flag behavior for a module flag entry at a…",N,N],[5,"LLVMModuleFlagEntriesGetKey",E,"Returns the key for a module flag entry at a specific index.",N,N],[5,"LLVMModuleFlagEntriesGetMetadata",E,"Returns the metadata for a module flag entry at a specific…",N,N],[5,"LLVMGetModuleFlag",E,R[3136],N,N],[5,"LLVMAddModuleFlag",E,R[3136],N,N],[5,"LLVMDumpModule",E,E,N,N],[5,"LLVMPrintModuleToFile",E,E,N,N],[5,"LLVMPrintModuleToString",E,E,N,N],[5,"LLVMGetModuleInlineAsm",E,E,N,N],[5,"LLVMSetModuleInlineAsm",E,E,N,N],[5,"LLVMSetModuleInlineAsm2",E,E,N,N],[5,"LLVMAppendModuleInlineAsm",E,E,N,N],[5,"LLVMGetInlineAsm",E,E,N,N],[5,"LLVMGetModuleContext",E,E,N,N],[5,"LLVMGetTypeByName",E,E,N,N],[5,"LLVMGetFirstNamedMetadata",E,E,N,N],[5,"LLVMGetLastNamedMetadata",E,E,N,N],[5,"LLVMGetNextNamedMetadata",E,E,N,N],[5,"LLVMGetPreviousNamedMetadata",E,E,N,N],[5,"LLVMGetNamedMetadata",E,E,N,N],[5,"LLVMGetOrInsertNamedMetadata",E,E,N,N],[5,"LLVMGetNamedMetadataName",E,E,N,N],[5,"LLVMGetNamedMetadataNumOperands",E,E,N,N],[5,"LLVMGetNamedMetadataOperands",E,E,N,N],[5,"LLVMAddNamedMetadataOperand",E,E,N,N],[5,"LLVMGetDebugLocDirectory",E,E,N,N],[5,"LLVMGetDebugLocFilename",E,E,N,N],[5,"LLVMGetDebugLocLine",E,E,N,N],[5,"LLVMGetDebugLocColumn",E,E,N,N],[5,"LLVMAddFunction",E,E,N,N],[5,"LLVMGetNamedFunction",E,E,N,N],[5,"LLVMGetFirstFunction",E,E,N,N],[5,"LLVMGetLastFunction",E,E,N,N],[5,"LLVMGetNextFunction",E,E,N,N],[5,"LLVMGetPreviousFunction",E,E,N,N],[5,"LLVMGetTypeKind",E,E,N,N],[5,"LLVMTypeIsSized",E,E,N,N],[5,"LLVMGetTypeContext",E,E,N,N],[5,"LLVMDumpType",E,E,N,N],[5,"LLVMPrintTypeToString",E,E,N,N],[5,"LLVMInt1TypeInContext",E,E,N,N],[5,"LLVMInt8TypeInContext",E,E,N,N],[5,"LLVMInt16TypeInContext",E,E,N,N],[5,"LLVMInt32TypeInContext",E,E,N,N],[5,"LLVMInt64TypeInContext",E,E,N,N],[5,"LLVMInt128TypeInContext",E,E,N,N],[5,"LLVMIntTypeInContext",E,E,N,N],[5,"LLVMInt1Type",E,E,N,N],[5,"LLVMInt8Type",E,E,N,N],[5,"LLVMInt16Type",E,E,N,N],[5,"LLVMInt32Type",E,E,N,N],[5,"LLVMInt64Type",E,E,N,N],[5,"LLVMInt128Type",E,E,N,N],[5,"LLVMIntType",E,E,N,N],[5,"LLVMGetIntTypeWidth",E,E,N,N],[5,"LLVMHalfTypeInContext",E,E,N,N],[5,"LLVMFloatTypeInContext",E,E,N,N],[5,"LLVMDoubleTypeInContext",E,E,N,N],[5,"LLVMX86FP80TypeInContext",E,E,N,N],[5,"LLVMFP128TypeInContext",E,E,N,N],[5,"LLVMPPCFP128TypeInContext",E,E,N,N],[5,"LLVMHalfType",E,E,N,N],[5,"LLVMFloatType",E,E,N,N],[5,"LLVMDoubleType",E,E,N,N],[5,"LLVMX86FP80Type",E,E,N,N],[5,"LLVMFP128Type",E,E,N,N],[5,"LLVMPPCFP128Type",E,E,N,N],[5,"LLVMFunctionType",E,E,N,N],[5,"LLVMIsFunctionVarArg",E,E,N,N],[5,"LLVMGetReturnType",E,E,N,N],[5,"LLVMCountParamTypes",E,E,N,N],[5,"LLVMGetParamTypes",E,E,N,N],[5,"LLVMStructTypeInContext",E,E,N,N],[5,"LLVMStructType",E,E,N,N],[5,"LLVMStructCreateNamed",E,E,N,N],[5,"LLVMGetStructName",E,E,N,N],[5,"LLVMStructSetBody",E,E,N,N],[5,"LLVMCountStructElementTypes",E,E,N,N],[5,"LLVMGetStructElementTypes",E,E,N,N],[5,"LLVMStructGetTypeAtIndex",E,"Get the type of the element at the given index in a…",N,N],[5,"LLVMIsPackedStruct",E,"Determine whether a structure is packed.",N,N],[5,"LLVMIsOpaqueStruct",E,E,N,N],[5,"LLVMIsLiteralStruct",E,E,N,N],[5,"LLVMGetElementType",E,E,N,N],[5,"LLVMGetSubtypes",E,"Get the subtypes of the given type.",N,N],[5,"LLVMGetNumContainedTypes",E,"Return the number of types in the derived type.",N,N],[5,"LLVMArrayType",E,E,N,N],[5,"LLVMGetArrayLength",E,E,N,N],[5,"LLVMPointerType",E,E,N,N],[5,"LLVMGetPointerAddressSpace",E,E,N,N],[5,"LLVMVectorType",E,E,N,N],[5,"LLVMGetVectorSize",E,E,N,N],[5,"LLVMVoidTypeInContext",E,E,N,N],[5,"LLVMLabelTypeInContext",E,E,N,N],[5,"LLVMX86MMXTypeInContext",E,E,N,N],[5,"LLVMTokenTypeInContext",E,E,N,N],[5,"LLVMMetadataTypeInContext",E,E,N,N],[5,"LLVMVoidType",E,E,N,N],[5,"LLVMLabelType",E,E,N,N],[5,"LLVMX86MMXType",E,E,N,N],[5,"LLVMGetValueKind",E,E,N,N],[5,"LLVMTypeOf",E,E,N,N],[5,"LLVMGetValueName",E,E,N,N],[5,"LLVMGetValueName2",E,E,N,N],[5,"LLVMSetValueName",E,E,N,N],[5,"LLVMSetValueName2",E,E,N,N],[5,"LLVMDumpValue",E,E,N,N],[5,"LLVMPrintValueToString",E,E,N,N],[5,"LLVMReplaceAllUsesWith",E,E,N,N],[5,"LLVMIsConstant",E,"Determine whether the specified value instance is constant.",N,N],[5,"LLVMIsUndef",E,E,N,N],[5,"LLVMIsAMDNode",E,E,N,N],[5,"LLVMIsAMDString",E,E,N,N],[5,"LLVMGetFirstUse",E,E,N,N],[5,"LLVMGetNextUse",E,E,N,N],[5,"LLVMGetUser",E,E,N,N],[5,"LLVMGetUsedValue",E,E,N,N],[5,"LLVMGetOperand",E,E,N,N],[5,"LLVMGetOperandUse",E,E,N,N],[5,"LLVMSetOperand",E,E,N,N],[5,"LLVMGetNumOperands",E,E,N,N],[5,"LLVMConstNull",E,E,N,N],[5,"LLVMConstAllOnes",E,E,N,N],[5,"LLVMGetUndef",E,E,N,N],[5,"LLVMIsNull",E,E,N,N],[5,"LLVMConstPointerNull",E,E,N,N],[5,"LLVMConstInt",E,E,N,N],[5,"LLVMConstIntOfArbitraryPrecision",E,E,N,N],[5,"LLVMConstIntOfString",E,E,N,N],[5,"LLVMConstIntOfStringAndSize",E,E,N,N],[5,"LLVMConstReal",E,E,N,N],[5,"LLVMConstRealOfString",E,E,N,N],[5,"LLVMConstRealOfStringAndSize",E,E,N,N],[5,"LLVMConstIntGetZExtValue",E,E,N,N],[5,"LLVMConstIntGetSExtValue",E,E,N,N],[5,"LLVMConstRealGetDouble",E,E,N,N],[5,"LLVMConstStringInContext",E,E,N,N],[5,"LLVMConstString",E,E,N,N],[5,"LLVMIsConstantString",E,E,N,N],[5,"LLVMGetAsString",E,E,N,N],[5,"LLVMConstStructInContext",E,E,N,N],[5,"LLVMConstStruct",E,E,N,N],[5,"LLVMConstArray",E,E,N,N],[5,"LLVMConstNamedStruct",E,E,N,N],[5,"LLVMGetElementAsConstant",E,E,N,N],[5,"LLVMConstVector",E,E,N,N],[5,"LLVMGetConstOpcode",E,E,N,N],[5,"LLVMAlignOf",E,E,N,N],[5,"LLVMSizeOf",E,E,N,N],[5,"LLVMConstNeg",E,E,N,N],[5,"LLVMConstNSWNeg",E,E,N,N],[5,"LLVMConstNUWNeg",E,E,N,N],[5,"LLVMConstFNeg",E,E,N,N],[5,"LLVMConstNot",E,E,N,N],[5,"LLVMConstAdd",E,E,N,N],[5,"LLVMConstNSWAdd",E,E,N,N],[5,"LLVMConstNUWAdd",E,E,N,N],[5,"LLVMConstFAdd",E,E,N,N],[5,"LLVMConstSub",E,E,N,N],[5,"LLVMConstNSWSub",E,E,N,N],[5,"LLVMConstNUWSub",E,E,N,N],[5,"LLVMConstFSub",E,E,N,N],[5,"LLVMConstMul",E,E,N,N],[5,"LLVMConstNSWMul",E,E,N,N],[5,"LLVMConstNUWMul",E,E,N,N],[5,"LLVMConstFMul",E,E,N,N],[5,"LLVMConstUDiv",E,E,N,N],[5,"LLVMConstExactUDiv",E,E,N,N],[5,"LLVMConstSDiv",E,E,N,N],[5,"LLVMConstExactSDiv",E,E,N,N],[5,"LLVMConstFDiv",E,E,N,N],[5,"LLVMConstURem",E,E,N,N],[5,"LLVMConstSRem",E,E,N,N],[5,"LLVMConstFRem",E,E,N,N],[5,"LLVMConstAnd",E,E,N,N],[5,"LLVMConstOr",E,E,N,N],[5,"LLVMConstXor",E,E,N,N],[5,"LLVMConstICmp",E,E,N,N],[5,"LLVMConstFCmp",E,E,N,N],[5,"LLVMConstShl",E,E,N,N],[5,"LLVMConstLShr",E,E,N,N],[5,"LLVMConstAShr",E,E,N,N],[5,"LLVMConstGEP",E,E,N,N],[5,"LLVMConstGEP2",E,E,N,N],[5,"LLVMConstInBoundsGEP",E,E,N,N],[5,"LLVMConstInBoundsGEP2",E,E,N,N],[5,"LLVMConstTrunc",E,E,N,N],[5,"LLVMConstSExt",E,E,N,N],[5,"LLVMConstZExt",E,E,N,N],[5,"LLVMConstFPTrunc",E,E,N,N],[5,"LLVMConstFPExt",E,E,N,N],[5,"LLVMConstUIToFP",E,E,N,N],[5,"LLVMConstSIToFP",E,E,N,N],[5,"LLVMConstFPToUI",E,E,N,N],[5,"LLVMConstFPToSI",E,E,N,N],[5,"LLVMConstPtrToInt",E,E,N,N],[5,"LLVMConstIntToPtr",E,E,N,N],[5,"LLVMConstBitCast",E,E,N,N],[5,"LLVMConstAddrSpaceCast",E,E,N,N],[5,"LLVMConstZExtOrBitCast",E,E,N,N],[5,"LLVMConstSExtOrBitCast",E,E,N,N],[5,"LLVMConstTruncOrBitCast",E,E,N,N],[5,"LLVMConstPointerCast",E,E,N,N],[5,"LLVMConstIntCast",E,E,N,N],[5,"LLVMConstFPCast",E,E,N,N],[5,"LLVMConstSelect",E,E,N,N],[5,"LLVMConstExtractElement",E,E,N,N],[5,"LLVMConstInsertElement",E,E,N,N],[5,"LLVMConstShuffleVector",E,E,N,N],[5,"LLVMConstExtractValue",E,E,N,N],[5,"LLVMConstInsertValue",E,E,N,N],[5,"LLVMConstInlineAsm",E,E,N,N],[5,"LLVMBlockAddress",E,E,N,N],[5,"LLVMGetGlobalParent",E,E,N,N],[5,"LLVMIsDeclaration",E,E,N,N],[5,"LLVMGetLinkage",E,E,N,N],[5,"LLVMSetLinkage",E,E,N,N],[5,"LLVMGetSection",E,E,N,N],[5,"LLVMSetSection",E,E,N,N],[5,"LLVMGetVisibility",E,E,N,N],[5,"LLVMSetVisibility",E,E,N,N],[5,"LLVMGetDLLStorageClass",E,E,N,N],[5,"LLVMSetDLLStorageClass",E,E,N,N],[5,"LLVMGetUnnamedAddress",E,E,N,N],[5,"LLVMSetUnnamedAddress",E,E,N,N],[5,"LLVMGlobalGetValueType",E,E,N,N],[5,"LLVMHasUnnamedAddr",E,E,N,N],[5,"LLVMSetUnnamedAddr",E,E,N,N],[5,"LLVMGetAlignment",E,E,N,N],[5,"LLVMSetAlignment",E,E,N,N],[5,"LLVMGlobalSetMetadata",E,E,N,N],[5,"LLVMGlobalEraseMetadata",E,E,N,N],[5,"LLVMGlobalClearMetadata",E,E,N,N],[5,"LLVMGlobalCopyAllMetadata",E,E,N,N],[5,"LLVMDisposeValueMetadataEntries",E,E,N,N],[5,"LLVMValueMetadataEntriesGetKind",E,E,N,N],[5,"LLVMValueMetadataEntriesGetMetadata",E,E,N,N],[5,"LLVMAddGlobal",E,E,N,N],[5,"LLVMAddGlobalInAddressSpace",E,E,N,N],[5,"LLVMGetNamedGlobal",E,E,N,N],[5,"LLVMGetFirstGlobal",E,E,N,N],[5,"LLVMGetLastGlobal",E,E,N,N],[5,"LLVMGetNextGlobal",E,E,N,N],[5,"LLVMGetPreviousGlobal",E,E,N,N],[5,"LLVMDeleteGlobal",E,E,N,N],[5,"LLVMGetInitializer",E,E,N,N],[5,"LLVMSetInitializer",E,E,N,N],[5,"LLVMIsThreadLocal",E,E,N,N],[5,"LLVMSetThreadLocal",E,E,N,N],[5,"LLVMIsGlobalConstant",E,E,N,N],[5,"LLVMSetGlobalConstant",E,E,N,N],[5,"LLVMGetThreadLocalMode",E,E,N,N],[5,"LLVMSetThreadLocalMode",E,E,N,N],[5,"LLVMIsExternallyInitialized",E,E,N,N],[5,"LLVMSetExternallyInitialized",E,E,N,N],[5,"LLVMGetNamedGlobalAlias",E,"Obtain a GlobalAlias value from a Module by its name.",N,N],[5,"LLVMGetFirstGlobalAlias",E,"Obtain an iterator to the first GlobalAlias in a Module.",N,N],[5,"LLVMGetLastGlobalAlias",E,"Obtain an iterator to the last GlobalAlias in a Module.",N,N],[5,"LLVMGetNextGlobalAlias",E,"Advance a GlobalAlias iterator to the next GlobalAlias.",N,N],[5,"LLVMGetPreviousGlobalAlias",E,"Decrement a GlobalAlias iterator to the previous…",N,N],[5,"LLVMAliasGetAliasee",E,"Retrieve the target value of an alias.",N,N],[5,"LLVMAliasSetAliasee",E,"Set the target value of an alias.",N,N],[5,"LLVMAddAlias",E,E,N,N],[5,"LLVMDeleteFunction",E,E,N,N],[5,"LLVMHasPersonalityFn",E,"Check whether the given function has a personality function.",N,N],[5,"LLVMGetPersonalityFn",E,"Obtain the personality function attached to the function.",N,N],[5,"LLVMSetPersonalityFn",E,"Set the personality function attached to the function.",N,N],[5,"LLVMGetIntrinsicID",E,"Obtain the ID number from a function instance.",N,N],[5,"LLVMGetIntrinsicDeclaration",E,E,N,N],[5,"LLVMIntrinsicGetType",E,E,N,N],[5,"LLVMIntrinsicGetName",E,E,N,N],[5,"LLVMIntrinsicCopyOverloadedName",E,E,N,N],[5,"LLVMIntrinsicIsOverloaded",E,E,N,N],[5,"LLVMGetFunctionCallConv",E,E,N,N],[5,"LLVMSetFunctionCallConv",E,E,N,N],[5,"LLVMGetGC",E,E,N,N],[5,"LLVMSetGC",E,E,N,N],[5,"LLVMAddAttributeAtIndex",E,E,N,N],[5,"LLVMGetAttributeCountAtIndex",E,E,N,N],[5,"LLVMGetAttributesAtIndex",E,E,N,N],[5,"LLVMGetEnumAttributeAtIndex",E,E,N,N],[5,"LLVMGetStringAttributeAtIndex",E,E,N,N],[5,"LLVMRemoveEnumAttributeAtIndex",E,E,N,N],[5,"LLVMRemoveStringAttributeAtIndex",E,E,N,N],[5,"LLVMAddTargetDependentFunctionAttr",E,E,N,N],[5,"LLVMCountParams",E,E,N,N],[5,"LLVMGetParams",E,E,N,N],[5,"LLVMGetParam",E,E,N,N],[5,"LLVMGetParamParent",E,E,N,N],[5,"LLVMGetFirstParam",E,E,N,N],[5,"LLVMGetLastParam",E,E,N,N],[5,"LLVMGetNextParam",E,E,N,N],[5,"LLVMGetPreviousParam",E,E,N,N],[5,"LLVMSetParamAlignment",E,E,N,N],[5,"LLVMMDStringInContext",E,E,N,N],[5,"LLVMMDString",E,E,N,N],[5,"LLVMMDNodeInContext",E,E,N,N],[5,"LLVMMDNode",E,E,N,N],[5,"LLVMMetadataAsValue",E,"Obtain Metadata as a Value.",N,N],[5,"LLVMValueAsMetadata",E,"Obtain a Value as Metadata.",N,N],[5,"LLVMGetMDString",E,"Obtain the underlying string from a MDString value.",N,N],[5,"LLVMGetMDNodeNumOperands",E,E,N,N],[5,"LLVMGetMDNodeOperands",E,E,N,N],[5,"LLVMBasicBlockAsValue",E,E,N,N],[5,"LLVMValueIsBasicBlock",E,E,N,N],[5,"LLVMValueAsBasicBlock",E,E,N,N],[5,"LLVMGetBasicBlockName",E,"Get the string name of a basic block.",N,N],[5,"LLVMGetBasicBlockParent",E,E,N,N],[5,"LLVMGetBasicBlockTerminator",E,E,N,N],[5,"LLVMCountBasicBlocks",E,E,N,N],[5,"LLVMGetBasicBlocks",E,E,N,N],[5,"LLVMGetFirstBasicBlock",E,E,N,N],[5,"LLVMGetLastBasicBlock",E,E,N,N],[5,"LLVMGetNextBasicBlock",E,E,N,N],[5,"LLVMGetPreviousBasicBlock",E,E,N,N],[5,"LLVMGetEntryBasicBlock",E,E,N,N],[5,"LLVMCreateBasicBlockInContext",E,E,N,N],[5,"LLVMAppendBasicBlockInContext",E,E,N,N],[5,"LLVMAppendBasicBlock",E,E,N,N],[5,"LLVMInsertBasicBlockInContext",E,E,N,N],[5,"LLVMInsertBasicBlock",E,E,N,N],[5,"LLVMDeleteBasicBlock",E,E,N,N],[5,"LLVMRemoveBasicBlockFromParent",E,E,N,N],[5,"LLVMMoveBasicBlockBefore",E,E,N,N],[5,"LLVMMoveBasicBlockAfter",E,E,N,N],[5,"LLVMGetFirstInstruction",E,E,N,N],[5,"LLVMGetLastInstruction",E,E,N,N],[5,"LLVMHasMetadata",E,E,N,N],[5,"LLVMGetMetadata",E,E,N,N],[5,"LLVMSetMetadata",E,E,N,N],[5,"LLVMInstructionGetAllMetadataOtherThanDebugLoc",E,E,N,N],[5,"LLVMGetInstructionParent",E,E,N,N],[5,"LLVMGetNextInstruction",E,E,N,N],[5,"LLVMGetPreviousInstruction",E,E,N,N],[5,"LLVMInstructionRemoveFromParent",E,R[3137],N,N],[5,"LLVMInstructionEraseFromParent",E,R[3137],N,N],[5,"LLVMGetInstructionOpcode",E,E,N,N],[5,"LLVMGetICmpPredicate",E,E,N,N],[5,"LLVMGetFCmpPredicate",E,E,N,N],[5,"LLVMInstructionClone",E,E,N,N],[5,"LLVMIsATerminatorInst",E,E,N,N],[5,"LLVMGetNumArgOperands",E,E,N,N],[5,"LLVMSetInstructionCallConv",E,E,N,N],[5,"LLVMGetInstructionCallConv",E,E,N,N],[5,"LLVMSetInstrParamAlignment",E,E,N,N],[5,"LLVMAddCallSiteAttribute",E,E,N,N],[5,"LLVMGetCallSiteAttributeCount",E,E,N,N],[5,"LLVMGetCallSiteAttributes",E,E,N,N],[5,"LLVMGetCallSiteEnumAttribute",E,E,N,N],[5,"LLVMGetCallSiteStringAttribute",E,E,N,N],[5,"LLVMRemoveCallSiteEnumAttribute",E,E,N,N],[5,"LLVMRemoveCallSiteStringAttribute",E,E,N,N],[5,"LLVMGetCalledFunctionType",E,E,N,N],[5,"LLVMGetCalledValue",E,"Get a pointer to the function invoked by this instruction.",N,N],[5,"LLVMIsTailCall",E,"Get whether a call instruction is a tail call.",N,N],[5,"LLVMSetTailCall",E,E,N,N],[5,"LLVMGetNormalDest",E,"Return the normal destination basic block of an invoke…",N,N],[5,"LLVMGetUnwindDest",E,"Return the unwind destination basic block.",N,N],[5,"LLVMSetNormalDest",E,"Set the normal destination basic block.",N,N],[5,"LLVMSetUnwindDest",E,"Set the unwind destination basic block.",N,N],[5,"LLVMGetNumSuccessors",E,E,N,N],[5,"LLVMGetSuccessor",E,E,N,N],[5,"LLVMSetSuccessor",E,E,N,N],[5,"LLVMIsConditional",E,E,N,N],[5,"LLVMGetCondition",E,E,N,N],[5,"LLVMSetCondition",E,E,N,N],[5,"LLVMGetSwitchDefaultDest",E,E,N,N],[5,"LLVMGetAllocatedType",E,E,N,N],[5,"LLVMIsInBounds",E,E,N,N],[5,"LLVMSetIsInBounds",E,"Set the given GEP instruction to be inbounds or not.",N,N],[5,"LLVMAddIncoming",E,E,N,N],[5,"LLVMCountIncoming",E,E,N,N],[5,"LLVMGetIncomingValue",E,E,N,N],[5,"LLVMGetIncomingBlock",E,E,N,N],[5,"LLVMIsAArgument",E,E,N,N],[5,"LLVMIsABasicBlock",E,E,N,N],[5,"LLVMIsAInlineAsm",E,E,N,N],[5,"LLVMIsAUser",E,E,N,N],[5,"LLVMIsAConstant",E,E,N,N],[5,"LLVMIsABlockAddress",E,E,N,N],[5,"LLVMIsAConstantAggregateZero",E,E,N,N],[5,"LLVMIsAConstantArray",E,E,N,N],[5,"LLVMIsAConstantDataSequential",E,E,N,N],[5,"LLVMIsAConstantDataArray",E,E,N,N],[5,"LLVMIsAConstantDataVector",E,E,N,N],[5,"LLVMIsAConstantExpr",E,E,N,N],[5,"LLVMIsAConstantFP",E,E,N,N],[5,"LLVMIsAConstantInt",E,E,N,N],[5,"LLVMIsAConstantPointerNull",E,E,N,N],[5,"LLVMIsAConstantStruct",E,E,N,N],[5,"LLVMIsAConstantTokenNone",E,E,N,N],[5,"LLVMIsAConstantVector",E,E,N,N],[5,"LLVMIsAGlobalValue",E,E,N,N],[5,"LLVMIsAGlobalAlias",E,E,N,N],[5,"LLVMIsAGlobalIFunc",E,E,N,N],[5,"LLVMIsAGlobalObject",E,E,N,N],[5,"LLVMIsAFunction",E,E,N,N],[5,"LLVMIsAGlobalVariable",E,E,N,N],[5,"LLVMIsAUndefValue",E,E,N,N],[5,"LLVMIsAInstruction",E,E,N,N],[5,"LLVMIsABinaryOperator",E,E,N,N],[5,"LLVMIsACallInst",E,E,N,N],[5,"LLVMIsAIntrinsicInst",E,E,N,N],[5,"LLVMIsADbgInfoIntrinsic",E,E,N,N],[5,"LLVMIsADbgVariableIntrinsic",E,E,N,N],[5,"LLVMIsADbgDeclareInst",E,E,N,N],[5,"LLVMIsADbgLabelInst",E,E,N,N],[5,"LLVMIsAMemIntrinsic",E,E,N,N],[5,"LLVMIsAMemCpyInst",E,E,N,N],[5,"LLVMIsAMemMoveInst",E,E,N,N],[5,"LLVMIsAMemSetInst",E,E,N,N],[5,"LLVMIsACmpInst",E,E,N,N],[5,"LLVMIsAFCmpInst",E,E,N,N],[5,"LLVMIsAICmpInst",E,E,N,N],[5,"LLVMIsAExtractElementInst",E,E,N,N],[5,"LLVMIsAGetElementPtrInst",E,E,N,N],[5,"LLVMIsAInsertElementInst",E,E,N,N],[5,"LLVMIsAInsertValueInst",E,E,N,N],[5,"LLVMIsALandingPadInst",E,E,N,N],[5,"LLVMIsAPHINode",E,E,N,N],[5,"LLVMIsASelectInst",E,E,N,N],[5,"LLVMIsAShuffleVectorInst",E,E,N,N],[5,"LLVMIsAStoreInst",E,E,N,N],[5,"LLVMIsABranchInst",E,E,N,N],[5,"LLVMIsAIndirectBrInst",E,E,N,N],[5,"LLVMIsAInvokeInst",E,E,N,N],[5,"LLVMIsAReturnInst",E,E,N,N],[5,"LLVMIsASwitchInst",E,E,N,N],[5,"LLVMIsAUnreachableInst",E,E,N,N],[5,"LLVMIsAResumeInst",E,E,N,N],[5,"LLVMIsACleanupReturnInst",E,E,N,N],[5,"LLVMIsACatchReturnInst",E,E,N,N],[5,"LLVMIsAFuncletPadInst",E,E,N,N],[5,"LLVMIsACatchPadInst",E,E,N,N],[5,"LLVMIsACleanupPadInst",E,E,N,N],[5,"LLVMIsAUnaryInstruction",E,E,N,N],[5,"LLVMIsAAllocaInst",E,E,N,N],[5,"LLVMIsACastInst",E,E,N,N],[5,"LLVMIsAAddrSpaceCastInst",E,E,N,N],[5,"LLVMIsABitCastInst",E,E,N,N],[5,"LLVMIsAFPExtInst",E,E,N,N],[5,"LLVMIsAFPToSIInst",E,E,N,N],[5,"LLVMIsAFPToUIInst",E,E,N,N],[5,"LLVMIsAFPTruncInst",E,E,N,N],[5,"LLVMIsAIntToPtrInst",E,E,N,N],[5,"LLVMIsAPtrToIntInst",E,E,N,N],[5,"LLVMIsASExtInst",E,E,N,N],[5,"LLVMIsASIToFPInst",E,E,N,N],[5,"LLVMIsATruncInst",E,E,N,N],[5,"LLVMIsAUIToFPInst",E,E,N,N],[5,"LLVMIsAZExtInst",E,E,N,N],[5,"LLVMIsAExtractValueInst",E,E,N,N],[5,"LLVMIsALoadInst",E,E,N,N],[5,"LLVMIsAVAArgInst",E,E,N,N],[5,"LLVMGetNumIndices",E,"Get the number of indices on an ExtractValue, InsertValue…",N,N],[5,"LLVMGetIndices",E,E,N,N],[5,"LLVMCreateBuilderInContext",E,E,N,N],[5,"LLVMCreateBuilder",E,E,N,N],[5,"LLVMPositionBuilder",E,E,N,N],[5,"LLVMPositionBuilderBefore",E,E,N,N],[5,"LLVMPositionBuilderAtEnd",E,E,N,N],[5,"LLVMGetInsertBlock",E,E,N,N],[5,"LLVMClearInsertionPosition",E,E,N,N],[5,"LLVMInsertIntoBuilder",E,E,N,N],[5,"LLVMInsertIntoBuilderWithName",E,E,N,N],[5,"LLVMDisposeBuilder",E,E,N,N],[5,"LLVMSetCurrentDebugLocation",E,E,N,N],[5,"LLVMGetCurrentDebugLocation",E,E,N,N],[5,"LLVMSetInstDebugLocation",E,E,N,N],[5,"LLVMBuildRetVoid",E,E,N,N],[5,"LLVMBuildRet",E,E,N,N],[5,"LLVMBuildAggregateRet",E,E,N,N],[5,"LLVMBuildBr",E,E,N,N],[5,"LLVMBuildCondBr",E,E,N,N],[5,"LLVMBuildSwitch",E,E,N,N],[5,"LLVMBuildIndirectBr",E,E,N,N],[5,"LLVMBuildInvoke",E,E,N,N],[5,"LLVMBuildInvoke2",E,E,N,N],[5,"LLVMBuildUnreachable",E,E,N,N],[5,"LLVMBuildResume",E,E,N,N],[5,"LLVMBuildLandingPad",E,E,N,N],[5,"LLVMBuildCleanupRet",E,E,N,N],[5,"LLVMBuildCatchRet",E,E,N,N],[5,"LLVMBuildCatchPad",E,E,N,N],[5,"LLVMBuildCleanupPad",E,E,N,N],[5,"LLVMBuildCatchSwitch",E,E,N,N],[5,"LLVMAddCase",E,"Add a case to a `switch` instruction",N,N],[5,"LLVMAddDestination",E,"Add a destination to an `indirectbr` instruction",N,N],[5,"LLVMGetNumClauses",E,"Get the number of clauses on a landingpad instruction.",N,N],[5,"LLVMGetClause",E,"Get the value of the clause with the given index on a…",N,N],[5,"LLVMAddClause",E,"Add a catch or filter clause to a `landingpad` instruction",N,N],[5,"LLVMIsCleanup",E,"Get the cleanup flag in a landingpad instruction.",N,N],[5,"LLVMSetCleanup",E,"Set the cleanup flag in a `landingpad` instruction.",N,N],[5,"LLVMAddHandler",E,"Add a destination to the catchswitch instruction",N,N],[5,"LLVMGetNumHandlers",E,"Get the number of handlers on the catchswitch instruction",N,N],[5,"LLVMGetHandlers",E,"Obtain the basic blocks acting as handlers for a…",N,N],[5,"LLVMGetArgOperand",E,"Get the number of funcletpad arguments.",N,N],[5,"LLVMSetArgOperand",E,"Set a funcletpad argument at the given index.",N,N],[5,"LLVMGetParentCatchSwitch",E,"Get the parent catchswitch instruction of a catchpad…",N,N],[5,"LLVMSetParentCatchSwitch",E,"Set the parent catchswitch instruction of a catchpad…",N,N],[5,"LLVMBuildAdd",E,E,N,N],[5,"LLVMBuildNSWAdd",E,E,N,N],[5,"LLVMBuildNUWAdd",E,E,N,N],[5,"LLVMBuildFAdd",E,E,N,N],[5,"LLVMBuildSub",E,E,N,N],[5,"LLVMBuildNSWSub",E,E,N,N],[5,"LLVMBuildNUWSub",E,E,N,N],[5,"LLVMBuildFSub",E,E,N,N],[5,"LLVMBuildMul",E,E,N,N],[5,"LLVMBuildNSWMul",E,E,N,N],[5,"LLVMBuildNUWMul",E,E,N,N],[5,"LLVMBuildFMul",E,E,N,N],[5,"LLVMBuildUDiv",E,E,N,N],[5,"LLVMBuildExactUDiv",E,E,N,N],[5,"LLVMBuildSDiv",E,E,N,N],[5,"LLVMBuildExactSDiv",E,E,N,N],[5,"LLVMBuildFDiv",E,E,N,N],[5,"LLVMBuildURem",E,E,N,N],[5,"LLVMBuildSRem",E,E,N,N],[5,"LLVMBuildFRem",E,E,N,N],[5,"LLVMBuildShl",E,E,N,N],[5,"LLVMBuildLShr",E,E,N,N],[5,"LLVMBuildAShr",E,E,N,N],[5,"LLVMBuildAnd",E,E,N,N],[5,"LLVMBuildOr",E,E,N,N],[5,"LLVMBuildXor",E,E,N,N],[5,"LLVMBuildBinOp",E,E,N,N],[5,"LLVMBuildNeg",E,E,N,N],[5,"LLVMBuildNSWNeg",E,E,N,N],[5,"LLVMBuildNUWNeg",E,E,N,N],[5,"LLVMBuildFNeg",E,E,N,N],[5,"LLVMBuildNot",E,E,N,N],[5,"LLVMBuildMalloc",E,E,N,N],[5,"LLVMBuildArrayMalloc",E,E,N,N],[5,"LLVMBuildMemSet",E,E,N,N],[5,"LLVMBuildMemCpy",E,E,N,N],[5,"LLVMBuildMemMove",E,E,N,N],[5,"LLVMBuildAlloca",E,E,N,N],[5,"LLVMBuildArrayAlloca",E,E,N,N],[5,"LLVMBuildFree",E,E,N,N],[5,"LLVMBuildLoad",E,E,N,N],[5,"LLVMBuildLoad2",E,E,N,N],[5,"LLVMBuildStore",E,E,N,N],[5,"LLVMBuildGEP",E,E,N,N],[5,"LLVMBuildInBoundsGEP",E,E,N,N],[5,"LLVMBuildStructGEP",E,E,N,N],[5,"LLVMBuildGEP2",E,E,N,N],[5,"LLVMBuildInBoundsGEP2",E,E,N,N],[5,"LLVMBuildStructGEP2",E,E,N,N],[5,"LLVMBuildGlobalString",E,E,N,N],[5,"LLVMBuildGlobalStringPtr",E,E,N,N],[5,"LLVMGetVolatile",E,E,N,N],[5,"LLVMSetVolatile",E,E,N,N],[5,"LLVMGetOrdering",E,E,N,N],[5,"LLVMSetOrdering",E,E,N,N],[5,"LLVMBuildTrunc",E,E,N,N],[5,"LLVMBuildZExt",E,E,N,N],[5,"LLVMBuildSExt",E,E,N,N],[5,"LLVMBuildFPToUI",E,E,N,N],[5,"LLVMBuildFPToSI",E,E,N,N],[5,"LLVMBuildUIToFP",E,E,N,N],[5,"LLVMBuildSIToFP",E,E,N,N],[5,"LLVMBuildFPTrunc",E,E,N,N],[5,"LLVMBuildFPExt",E,E,N,N],[5,"LLVMBuildPtrToInt",E,E,N,N],[5,"LLVMBuildIntToPtr",E,E,N,N],[5,"LLVMBuildBitCast",E,E,N,N],[5,"LLVMBuildAddrSpaceCast",E,E,N,N],[5,"LLVMBuildZExtOrBitCast",E,E,N,N],[5,"LLVMBuildSExtOrBitCast",E,E,N,N],[5,"LLVMBuildTruncOrBitCast",E,E,N,N],[5,"LLVMBuildCast",E,E,N,N],[5,"LLVMBuildPointerCast",E,E,N,N],[5,"LLVMBuildIntCast",E,E,N,N],[5,"LLVMBuildIntCast2",E,E,N,N],[5,"LLVMBuildFPCast",E,E,N,N],[5,"LLVMBuildICmp",E,E,N,N],[5,"LLVMBuildFCmp",E,E,N,N],[5,"LLVMBuildPhi",E,E,N,N],[5,"LLVMBuildCall",E,E,N,N],[5,"LLVMBuildCall2",E,E,N,N],[5,"LLVMBuildSelect",E,E,N,N],[5,"LLVMBuildVAArg",E,E,N,N],[5,"LLVMBuildExtractElement",E,E,N,N],[5,"LLVMBuildInsertElement",E,E,N,N],[5,"LLVMBuildShuffleVector",E,E,N,N],[5,"LLVMBuildExtractValue",E,E,N,N],[5,"LLVMBuildInsertValue",E,E,N,N],[5,"LLVMBuildIsNull",E,E,N,N],[5,"LLVMBuildIsNotNull",E,E,N,N],[5,"LLVMBuildPtrDiff",E,E,N,N],[5,"LLVMBuildFence",E,E,N,N],[5,"LLVMBuildAtomicRMW",E,E,N,N],[5,"LLVMBuildAtomicCmpXchg",E,E,N,N],[5,"LLVMIsAtomicSingleThread",E,E,N,N],[5,"LLVMSetAtomicSingleThread",E,E,N,N],[5,"LLVMGetCmpXchgSuccessOrdering",E,E,N,N],[5,"LLVMSetCmpXchgSuccessOrdering",E,E,N,N],[5,"LLVMGetCmpXchgFailureOrdering",E,E,N,N],[5,"LLVMSetCmpXchgFailureOrdering",E,E,N,N],[5,"LLVMCreateModuleProviderForExistingModule",E,E,N,N],[5,"LLVMDisposeModuleProvider",E,E,N,N],[5,"LLVMCreateMemoryBufferWithContentsOfFile",E,E,N,N],[5,"LLVMCreateMemoryBufferWithSTDIN",E,E,N,N],[5,"LLVMCreateMemoryBufferWithMemoryRange",E,E,N,N],[5,"LLVMCreateMemoryBufferWithMemoryRangeCopy",E,E,N,N],[5,"LLVMGetBufferStart",E,E,N,N],[5,"LLVMGetBufferSize",E,E,N,N],[5,"LLVMDisposeMemoryBuffer",E,E,N,N],[5,"LLVMGetGlobalPassRegistry",E,E,N,N],[5,"LLVMCreatePassManager",E,E,N,N],[5,"LLVMCreateFunctionPassManagerForModule",E,E,N,N],[5,"LLVMCreateFunctionPassManager",E,E,N,N],[5,"LLVMRunPassManager",E,E,N,N],[5,"LLVMInitializeFunctionPassManager",E,E,N,N],[5,"LLVMRunFunctionPassManager",E,E,N,N],[5,"LLVMFinalizeFunctionPassManager",E,E,N,N],[5,"LLVMDisposePassManager",E,E,N,N],[5,"LLVMStartMultithreaded",E,R[3138],N,N],[5,"LLVMStopMultithreaded",E,R[3138],N,N],[5,"LLVMIsMultithreaded",E,E,N,N],[0,"debuginfo",R[3139],"Generation of DWARF debug info.",N,N],[4,R[3206],R[3147],"Debug info flags.",N,N],[13,"LLVMDIFlagZero",E,E,19,N],[13,"LLVMDIFlagPrivate",E,E,19,N],[13,"LLVMDIFlagProtected",E,E,19,N],[13,"LLVMDIFlagPublic",E,E,19,N],[13,"LLVMDIFlagFwdDecl",E,E,19,N],[13,"LLVMDIFlagAppleBlock",E,E,19,N],[13,"LLVMDIFlagBlockByrefStruct",E,E,19,N],[13,"LLVMDIFlagVirtual",E,E,19,N],[13,"LLVMDIFlagArtificial",E,E,19,N],[13,"LLVMDIFlagExplicit",E,E,19,N],[13,"LLVMDIFlagPrototyped",E,E,19,N],[13,"LLVMDIFlagObjcClassComplete",E,E,19,N],[13,"LLVMDIFlagObjectPointer",E,E,19,N],[13,"LLVMDIFlagVector",E,E,19,N],[13,"LLVMDIFlagStaticMember",E,E,19,N],[13,"LLVMDIFlagLValueReference",E,E,19,N],[13,"LLVMDIFlagRValueReference",E,E,19,N],[13,"LLVMDIFlagReserved",E,E,19,N],[13,"LLVMDIFlagSingleInheritance",E,E,19,N],[13,"LLVMDIFlagMultipleInheritance",E,E,19,N],[13,"LLVMDIFlagVirtualInheritance",E,E,19,N],[13,"LLVMDIFlagIntroducedVirtual",E,E,19,N],[13,"LLVMDIFlagBitField",E,E,19,N],[13,"LLVMDIFlagNoReturn",E,E,19,N],[13,"LLVMDIFlagMainSubprogram",E,E,19,N],[13,"LLVMDIFlagTypePassByValue",E,E,19,N],[13,"LLVMDIFlagTypePassByReference",E,E,19,N],[13,"LLVMDIFlagEnumClass",E,E,19,N],[13,"LLVMDIFlagThunk",E,E,19,N],[13,"LLVMDIFlagTrivial",E,E,19,N],[13,"LLVMDIFlagBigendian",E,E,19,N],[13,"LLVMDIFlagLittleEndian",E,E,19,N],[13,"LLVMDIFlagIndirectVirtualBase",E,E,19,N],[4,R[3207],E,"Source languages known by DWARF.",N,N],[13,"LLVMDWARFSourceLanguageC89",E,E,20,N],[13,"LLVMDWARFSourceLanguageC",E,E,20,N],[13,"LLVMDWARFSourceLanguageAda83",E,E,20,N],[13,"LLVMDWARFSourceLanguageC_plus_plus",E,E,20,N],[13,"LLVMDWARFSourceLanguageCobol74",E,E,20,N],[13,"LLVMDWARFSourceLanguageCobol85",E,E,20,N],[13,"LLVMDWARFSourceLanguageFortran77",E,E,20,N],[13,"LLVMDWARFSourceLanguageFortran90",E,E,20,N],[13,"LLVMDWARFSourceLanguagePascal83",E,E,20,N],[13,"LLVMDWARFSourceLanguageModula2",E,E,20,N],[13,"LLVMDWARFSourceLanguageJava",E,E,20,N],[13,"LLVMDWARFSourceLanguageC99",E,E,20,N],[13,"LLVMDWARFSourceLanguageAda95",E,E,20,N],[13,"LLVMDWARFSourceLanguageFortran95",E,E,20,N],[13,"LLVMDWARFSourceLanguagePLI",E,E,20,N],[13,"LLVMDWARFSourceLanguageObjC",E,E,20,N],[13,"LLVMDWARFSourceLanguageObjC_plus_plus",E,E,20,N],[13,"LLVMDWARFSourceLanguageUPC",E,E,20,N],[13,"LLVMDWARFSourceLanguageD",E,E,20,N],[13,"LLVMDWARFSourceLanguagePython",E,E,20,N],[13,"LLVMDWARFSourceLanguageOpenCL",E,E,20,N],[13,"LLVMDWARFSourceLanguageGo",E,E,20,N],[13,"LLVMDWARFSourceLanguageModula3",E,E,20,N],[13,"LLVMDWARFSourceLanguageHaskell",E,E,20,N],[13,"LLVMDWARFSourceLanguageC_plus_plus_03",E,E,20,N],[13,"LLVMDWARFSourceLanguageC_plus_plus_11",E,E,20,N],[13,"LLVMDWARFSourceLanguageOCaml",E,E,20,N],[13,"LLVMDWARFSourceLanguageRust",E,E,20,N],[13,"LLVMDWARFSourceLanguageC11",E,E,20,N],[13,"LLVMDWARFSourceLanguageSwift",E,E,20,N],[13,"LLVMDWARFSourceLanguageJulia",E,E,20,N],[13,"LLVMDWARFSourceLanguageDylan",E,E,20,N],[13,"LLVMDWARFSourceLanguageC_plus_plus_14",E,E,20,N],[13,"LLVMDWARFSourceLanguageFortran03",E,E,20,N],[13,"LLVMDWARFSourceLanguageFortran08",E,E,20,N],[13,"LLVMDWARFSourceLanguageRenderScript",E,E,20,N],[13,"LLVMDWARFSourceLanguageBLISS",E,E,20,N],[13,"LLVMDWARFSourceLanguageMips_Assembler",E,E,20,N],[13,"LLVMDWARFSourceLanguageGOOGLE_RenderScript",E,E,20,N],[13,"LLVMDWARFSourceLanguageBORLAND_Delphi",E,E,20,N],[4,R[3208],E,"The amount of debug information to emit.",N,N],[13,"LLVMDWARFEmissionKindNone",E,E,21,N],[13,"LLVMDWARFEmissionKindFull",E,E,21,N],[13,"LLVMDWARFEmissionKindLineTablesOnly",E,E,21,N],[4,R[3209],E,E,N,N],[13,"LLVMMDStringMetadataKind",E,E,22,N],[13,"LLVMConstantAsMetadataMetadataKind",E,E,22,N],[13,"LLVMLocalAsMetadataMetadataKind",E,E,22,N],[13,"LLVMDistinctMDOperandPlaceholderMetadataKind",E,E,22,N],[13,"LLVMMDTupleMetadataKind",E,E,22,N],[13,"LLVMDILocationMetadataKind",E,E,22,N],[13,"LLVMDIExpressionMetadataKind",E,E,22,N],[13,"LLVMDIGlobalVariableExpressionMetadataKind",E,E,22,N],[13,"LLVMGenericDINodeMetadataKind",E,E,22,N],[13,"LLVMDISubrangeMetadataKind",E,E,22,N],[13,"LLVMDIEnumeratorMetadataKind",E,E,22,N],[13,"LLVMDIBasicTypeMetadataKind",E,E,22,N],[13,"LLVMDIDerivedTypeMetadataKind",E,E,22,N],[13,"LLVMDICompositeTypeMetadataKind",E,E,22,N],[13,"LLVMDISubroutineTypeMetadataKind",E,E,22,N],[13,"LLVMDIFileMetadataKind",E,E,22,N],[13,"LLVMDICompileUnitMetadataKind",E,E,22,N],[13,"LLVMDISubprogramMetadataKind",E,E,22,N],[13,"LLVMDILexicalBlockMetadataKind",E,E,22,N],[13,"LLVMDILexicalBlockFileMetadataKind",E,E,22,N],[13,"LLVMDINamespaceMetadataKind",E,E,22,N],[13,"LLVMDIModuleMetadataKind",E,E,22,N],[13,"LLVMDITemplateTypeParameterMetadataKind",E,E,22,N],[13,"LLVMDITemplateValueParameterMetadataKind",E,E,22,N],[13,"LLVMDIGlobalVariableMetadataKind",E,E,22,N],[13,"LLVMDILocalVariableMetadataKind",E,E,22,N],[13,"LLVMDILabelMetadataKind",E,E,22,N],[13,"LLVMDIObjCPropertyMetadataKind",E,E,22,N],[13,"LLVMDIImportedEntityMetadataKind",E,E,22,N],[13,"LLVMDIMacroMetadataKind",E,E,22,N],[13,"LLVMDIMacroFileMetadataKind",E,E,22,N],[5,"LLVMDebugMetadataVersion",E,"The current debug metadata version number.",N,N],[5,"LLVMGetModuleDebugMetadataVersion",E,"The version of debug metadata that's present in the…",N,N],[5,"LLVMStripModuleDebugInfo",E,"Strip debug info in the module if it exists.",N,N],[5,"LLVMCreateDIBuilderDisallowUnresolved",E,"Construct a builder for a module, do not allow unresolved…",N,N],[5,"LLVMCreateDIBuilder",E,"Construct a builder for a module and collect unresolved…",N,N],[5,"LLVMDisposeDIBuilder",E,"Deallocate a builder and everything it owns.",N,N],[5,"LLVMDIBuilderFinalize",E,"Construct any deferred debug info descriptors.",N,N],[5,"LLVMDIBuilderCreateCompileUnit",E,E,N,N],[5,"LLVMDIBuilderCreateFile",E,"Create a file descriptor to hold debugging information for…",N,N],[5,"LLVMDIBuilderCreateModule",E,"Creates a new descriptor for a module with the specified…",N,N],[5,"LLVMDIBuilderCreateNameSpace",E,"Creates a new descriptor for a namespace with the…",N,N],[5,"LLVMDIBuilderCreateFunction",E,"Create a new descriptor for the specified subprogram.",N,N],[5,"LLVMDIBuilderCreateLexicalBlock",E,"Create a descriptor for a lexical block with the specified…",N,N],[5,"LLVMDIBuilderCreateLexicalBlockFile",E,"Create a descriptor for a lexical block with a new file…",N,N],[5,"LLVMDIBuilderCreateImportedModuleFromNamespace",E,"Create a descriptor for an imported namespace. Suitable…",N,N],[5,"LLVMDIBuilderCreateImportedModuleFromAlias",E,"Create a descriptor for an imported module that aliases…",N,N],[5,"LLVMDIBuilderCreateImportedModuleFromModule",E,"Create a descriptor for an imported module.",N,N],[5,"LLVMDIBuilderCreateImportedDeclaration",E,"Create a descriptor for an imported function, type, or…",N,N],[5,"LLVMDIBuilderCreateDebugLocation",E,"Creates a new DebugLocation that describes a source…",N,N],[5,"LLVMDILocationGetLine",E,"Get the line number of this debug location.",N,N],[5,"LLVMDILocationGetColumn",E,"Get the column number of this debug location.",N,N],[5,"LLVMDILocationGetScope",E,"Get the local scope associated with this debug location.",N,N],[5,"LLVMDIBuilderGetOrCreateTypeArray",E,"Create a type array.",N,N],[5,"LLVMDIBuilderCreateSubroutineType",E,"Create subroutine type.",N,N],[5,"LLVMDIBuilderCreateEnumerationType",E,"Create debugging information entry for an enumeration.",N,N],[5,"LLVMDIBuilderCreateUnionType",E,"Create debugging information entry for a union.",N,N],[5,"LLVMDIBuilderCreateArrayType",E,"Create debugging information entry for an array.",N,N],[5,"LLVMDIBuilderCreateVectorType",E,"Create debugging information entry for a vector type.",N,N],[5,"LLVMDIBuilderCreateUnspecifiedType",E,"Create a DWARF unspecified type.",N,N],[5,"LLVMDIBuilderCreateBasicType",E,"Create debugging information entry for a basic type.",N,N],[5,"LLVMDIBuilderCreatePointerType",E,"Create debugging information entry for a pointer.",N,N],[5,"LLVMDIBuilderCreateStructType",E,"Create debugging information entry for a struct.",N,N],[5,"LLVMDIBuilderCreateMemberType",E,"Create debugging information entry for a member.",N,N],[5,"LLVMDIBuilderCreateStaticMemberType",E,"Create debugging information entry for a C++ static data…",N,N],[5,"LLVMDIBuilderCreateMemberPointerType",E,"Create debugging information entry for a pointer to member.",N,N],[5,"LLVMDIBuilderCreateObjCIVar",E,"Create debugging information entry for Objective-C…",N,N],[5,"LLVMDIBuilderCreateObjCProperty",E,"Create debugging information entry for Objective-C property.",N,N],[5,"LLVMDIBuilderCreateObjectPointerType",E,"Create a uniqued DIType* clone with FlagObjectPointer and…",N,N],[5,"LLVMDIBuilderCreateQualifiedType",E,"Create debugging information entry for a qualified type,…",N,N],[5,"LLVMDIBuilderCreateReferenceType",E,"Create debugging information entry for a c++ style…",N,N],[5,"LLVMDIBuilderCreateNullPtrType",E,"Create C++11 nullptr type.",N,N],[5,"LLVMDIBuilderCreateTypedef",E,"Create debugging information entry for a typedef.",N,N],[5,"LLVMDIBuilderCreateInheritance",E,"Create debugging information entry to establish…",N,N],[5,"LLVMDIBuilderCreateForwardDecl",E,"Create a permanent forward-declared type.",N,N],[5,"LLVMDIBuilderCreateReplaceableCompositeType",E,"Create a temporary forward-declared type.",N,N],[5,"LLVMDIBuilderCreateBitFieldMemberType",E,"Create debugging information entry for a bit field member.",N,N],[5,"LLVMDIBuilderCreateClassType",E,"Create debugging information entry for a class.",N,N],[5,"LLVMDIBuilderCreateArtificialType",E,"Create a uniqued DIType* clone with FlagArtificial set.",N,N],[5,"LLVMDITypeGetName",E,"Get the name of this DIType.",N,N],[5,"LLVMDITypeGetSizeInBits",E,"Get the size of this DIType in bits.",N,N],[5,"LLVMDITypeGetOffsetInBits",E,"Get the offset of this DIType in bits.",N,N],[5,"LLVMDITypeGetAlignInBits",E,"Get the alignment of this DIType in bits.",N,N],[5,"LLVMDITypeGetLine",E,"Get the source line where this DIType is declared.",N,N],[5,"LLVMDITypeGetFlags",E,"Get the flags associated with this DIType.",N,N],[5,"LLVMDIBuilderGetOrCreateSubrange",E,"Create a descriptor for a value range.",N,N],[5,"LLVMDIBuilderGetOrCreateArray",E,"Create an array of DI Nodes.",N,N],[5,"LLVMDIBuilderCreateExpression",E,"Create a new descriptor for the specified variable which…",N,N],[5,"LLVMDIBuilderCreateConstantValueExpression",E,"Create a new descriptor for the specified variable that…",N,N],[5,"LLVMDIBuilderCreateGlobalVariableExpression",E,"Create a new descriptor for the specified variable.",N,N],[5,"LLVMTemporaryMDNode",E,"Create a new temporary \\c MDNode. Suitable for use in…",N,N],[5,"LLVMDisposeTemporaryMDNode",E,"Deallocate a temporary node.",N,N],[5,"LLVMMetadataReplaceAllUsesWith",E,"Replace all uses of temporary metadata.",N,N],[5,"LLVMDIBuilderCreateTempGlobalVariableFwdDecl",E,"Create a new descriptor for the specified global variable…",N,N],[5,"LLVMDIBuilderInsertDeclareBefore",E,"Insert a new llvm.dbg.declare intrinsic call before the…",N,N],[5,"LLVMDIBuilderInsertDeclareAtEnd",E,"Insert a new llvm.dbg.declare intrinsic call at the end of…",N,N],[5,"LLVMDIBuilderInsertDbgValueBefore",E,"Insert a new llvm.dbg.value intrinsic call before the…",N,N],[5,"LLVMDIBuilderInsertDbgValueAtEnd",E,"Insert a new llvm.dbg.value intrinsic call at the end of…",N,N],[5,"LLVMDIBuilderCreateAutoVariable",E,"Create a new descriptor for a local auto variable.",N,N],[5,"LLVMDIBuilderCreateParameterVariable",E,"Create a new descriptor for a function parameter variable.",N,N],[5,"LLVMGetSubprogram",E,"Get the metadata of the subprogram attached to a function.",N,N],[5,"LLVMSetSubprogram",E,"Set the subprogram attached to a function.",N,N],[5,"LLVMGetMetadataKind",E,"Obtain the enumerated type of a metadata instance.",N,N],[6,"LLVMDWARFTypeEncoding",E,E,N,N],[17,"LLVMDIFlagAccessibility",E,E,N,N],[17,"LLVMDIFlagPtrToMemberRep",E,E,N,N],[0,R[5827],R[3139],"A disassembler library.",N,N],[3,R[3210],R[3148],E,N,N],[12,"Present",E,"1 if this symbol is present.",23,N],[12,"Name",E,"Symbol name if not NULL.",23,N],[12,"Value",E,"Symbol value if name is NULL.",23,N],[3,R[3211],E,E,N,N],[12,"AddSymbol",E,E,24,N],[12,"SubtractSymbol",E,E,24,N],[12,"Value",E,E,24,N],[12,"VariantKind",E,E,24,N],[4,R[3234],E,E,N,N],[5,"LLVMCreateDisasm",E,E,N,N],[5,"LLVMCreateDisasmCPU",E,E,N,N],[5,"LLVMCreateDisasmCPUFeatures",E,E,N,N],[5,"LLVMSetDisasmOptions",E,E,N,N],[5,"LLVMDisasmDispose",E,E,N,N],[5,"LLVMDisasmInstruction",E,E,N,N],[6,"LLVMDisasmContextRef",E,E,N,N],[6,"LLVMOpInfoCallback",E,E,N,N],[6,"LLVMSymbolLookupCallback",E,E,N,N],[17,"LLVMDisassembler_VariantKind_None",E,E,N,N],[17,"LLVMDisassembler_VariantKind_ARM_HI16",E,E,N,N],[17,"LLVMDisassembler_VariantKind_ARM_LO16",E,E,N,N],[17,"LLVMDisassembler_VariantKind_ARM64_PAGE",E,E,N,N],[17,"LLVMDisassembler_VariantKind_ARM64_PAGEOFF",E,E,N,N],[17,"LLVMDisassembler_VariantKind_ARM64_GOTPAGE",E,E,N,N],[17,"LLVMDisassembler_VariantKind_ARM64_GOTPAGEOFF",E,E,N,N],[17,"LLVMDisassembler_VariantKind_ARM64_TLVP",E,E,N,N],[17,"LLVMDisassembler_VariantKind_ARM64_TLVOFF",E,E,N,N],[17,"LLVMDisassembler_ReferenceType_InOut_None",E,"No input reference type or no output reference type.",N,N],[17,"LLVMDisassembler_ReferenceType_In_Branch",E,"The input reference is from a branch instruction.",N,N],[17,"LLVMDisassembler_ReferenceType_In_PCrel_Load",E,"The input reference is from a PC relative load instruction.",N,N],[17,"LLVMDisassembler_ReferenceType_In_ARM64_ADRP",E,"The input reference is from an ARM64::ADRP instruction.",N,N],[17,"LLVMDisassembler_ReferenceType_In_ARM64_ADDXri",E,"The input reference is from an ARM64::ADDXri instruction.",N,N],[17,"LLVMDisassembler_ReferenceType_In_ARM64_LDRXui",E,"The input reference is from an ARM64::LDRXui instruction.",N,N],[17,"LLVMDisassembler_ReferenceType_In_ARM64_LDRXl",E,"The input reference is from an ARM64::LDRXl instruction.",N,N],[17,"LLVMDisassembler_ReferenceType_In_ARM64_ADR",E,"The input reference is from an ARM64::ADR instruction.",N,N],[17,"LLVMDisassembler_ReferenceType_Out_SymbolStub",E,"The output reference is to as symbol stub.",N,N],[17,"LLVMDisassembler_ReferenceType_Out_LitPool_SymAddr",E,"The output reference is to a symbol address in a literal…",N,N],[17,"LLVMDisassembler_ReferenceType_Out_LitPool_CstrAddr",E,"The output reference is to a cstring address in a literal…",N,N],[17,"LLVMDisassembler_ReferenceType_Out_Objc_CFString_Ref",E,"The output reference is to a Objective-C CoreFoundation…",N,N],[17,"LLVMDisassembler_ReferenceType_Out_Objc_Message",E,"The output reference is to a Objective-C message.",N,N],[17,"LLVMDisassembler_ReferenceType_Out_Objc_Message_Ref",E,"The output reference is to a Objective-C message ref.",N,N],[17,"LLVMDisassembler_ReferenceType_Out_Objc_Selector_Ref",E,"The output reference is to a Objective-C selector ref.",N,N],[17,"LLVMDisassembler_ReferenceType_Out_Objc_Class_Ref",E,"The output reference is to a Objective-C class ref.",N,N],[17,"LLVMDisassembler_ReferenceType_DeMangled_Name",E,"The output reference is to a C++ symbol name.",N,N],[17,"LLVMDisassembler_Option_UseMarkup",E,"The option to produce marked up assembly.",N,N],[17,"LLVMDisassembler_Option_PrintImmHex",E,"The option to print immediates as hex.",N,N],[17,"LLVMDisassembler_Option_AsmPrinterVariant",E,"The option use the other assembler printer variant",N,N],[17,"LLVMDisassembler_Option_SetInstrComments",E,"The option to set comment on instructions",N,N],[17,"LLVMDisassembler_Option_PrintLatency",E,"The option to print latency information alongside…",N,N],[0,"error",R[3139],E,N,N],[4,R[3235],R[3149],E,N,N],[5,"LLVMGetErrorTypeId",E,E,N,N],[5,"LLVMConsumeError",E,E,N,N],[5,"LLVMGetErrorMessage",E,E,N,N],[5,"LLVMDisposeErrorMessage",E,E,N,N],[5,"LLVMGetStringErrorTypeId",E,E,N,N],[6,"LLVMErrorRef",E,E,N,N],[6,"LLVMErrorTypeId",E,E,N,N],[17,"LLVMErrorSuccess",E,E,N,N],[0,R[5828],R[3139],E,N,N],[5,"LLVMInstallFatalErrorHandler","llvm_sys::error_handling","Install a fatal error handler.",N,N],[5,"LLVMResetFatalErrorHandler",E,"Reset fatal error handling to the default.",N,N],[5,"LLVMEnablePrettyStackTrace",E,"Enable LLVM's build-in stack trace code.",N,N],[6,"LLVMFatalErrorHandler",E,E,N,N],[0,R[5829],R[3139],"Runtime code generation and execution.",N,N],[3,R[3212],R[3150],E,N,N],[12,"OptLevel",E,E,25,N],[12,"CodeModel",E,E,25,N],[12,"NoFramePointerElim",E,E,25,N],[12,"EnableFastISel",E,E,25,N],[12,"MCJMM",E,E,25,N],[4,R[3236],E,E,N,N],[4,R[3237],E,E,N,N],[4,R[3238],E,E,N,N],[5,"LLVMLinkInMCJIT",E,E,N,N],[5,"LLVMLinkInInterpreter",E,E,N,N],[5,"LLVMCreateGenericValueOfInt",E,E,N,N],[5,"LLVMCreateGenericValueOfPointer",E,E,N,N],[5,"LLVMCreateGenericValueOfFloat",E,E,N,N],[5,"LLVMGenericValueIntWidth",E,E,N,N],[5,"LLVMGenericValueToInt",E,E,N,N],[5,"LLVMGenericValueToPointer",E,E,N,N],[5,"LLVMGenericValueToFloat",E,E,N,N],[5,"LLVMDisposeGenericValue",E,E,N,N],[5,"LLVMCreateExecutionEngineForModule",E,E,N,N],[5,"LLVMCreateInterpreterForModule",E,E,N,N],[5,"LLVMCreateJITCompilerForModule",E,E,N,N],[5,"LLVMInitializeMCJITCompilerOptions",E,E,N,N],[5,"LLVMCreateMCJITCompilerForModule",E,"Create an MCJIT execution engine for a module, with the…",N,N],[5,"LLVMDisposeExecutionEngine",E,E,N,N],[5,"LLVMRunStaticConstructors",E,E,N,N],[5,"LLVMRunStaticDestructors",E,E,N,N],[5,"LLVMRunFunctionAsMain",E,E,N,N],[5,"LLVMRunFunction",E,E,N,N],[5,"LLVMFreeMachineCodeForFunction",E,E,N,N],[5,"LLVMAddModule",E,E,N,N],[5,"LLVMRemoveModule",E,E,N,N],[5,"LLVMFindFunction",E,E,N,N],[5,"LLVMRecompileAndRelinkFunction",E,E,N,N],[5,"LLVMGetExecutionEngineTargetData",E,E,N,N],[5,"LLVMGetExecutionEngineTargetMachine",E,E,N,N],[5,"LLVMAddGlobalMapping",E,E,N,N],[5,"LLVMGetPointerToGlobal",E,E,N,N],[5,"LLVMGetGlobalValueAddress",E,E,N,N],[5,"LLVMGetFunctionAddress",E,E,N,N],[5,"LLVMCreateSimpleMCJITMemoryManager",E,E,N,N],[5,"LLVMDisposeMCJITMemoryManager",E,E,N,N],[5,"LLVMCreateGDBRegistrationListener",E,E,N,N],[5,"LLVMCreateIntelJITEventListener",E,E,N,N],[5,"LLVMCreateOProfileJITEventListener",E,E,N,N],[5,"LLVMCreatePerfJITEventListener",E,E,N,N],[6,"LLVMGenericValueRef",E,E,N,N],[6,"LLVMExecutionEngineRef",E,E,N,N],[6,"LLVMMCJITMemoryManagerRef",E,E,N,N],[6,"LLVMMemoryManagerAllocateCodeSectionCallback",E,E,N,N],[6,"LLVMMemoryManagerAllocateDataSectionCallback",E,E,N,N],[6,"LLVMMemoryManagerFinalizeMemoryCallback",E,E,N,N],[6,"LLVMMemoryManagerDestroyCallback",E,E,N,N],[0,"initialization",R[3139],"Initialization routines which must be called before using…",N,N],[5,"LLVMInitializeCore","llvm_sys::initialization",E,N,N],[5,"LLVMInitializeTransformUtils",E,E,N,N],[5,"LLVMInitializeScalarOpts",E,E,N,N],[5,"LLVMInitializeObjCARCOpts",E,E,N,N],[5,"LLVMInitializeVectorization",E,E,N,N],[5,"LLVMInitializeInstCombine",E,E,N,N],[5,"LLVMInitializeAggressiveInstCombiner",E,E,N,N],[5,"LLVMInitializeIPO",E,E,N,N],[5,"LLVMInitializeInstrumentation",E,E,N,N],[5,"LLVMInitializeAnalysis",E,E,N,N],[5,"LLVMInitializeIPA",E,E,N,N],[5,"LLVMInitializeCodeGen",E,E,N,N],[5,"LLVMInitializeTarget",E,E,N,N],[0,"ir_reader",R[3139],"The IR reader",N,N],[5,"LLVMParseIRInContext","llvm_sys::ir_reader","Read LLVM IR from a memory buffer and convert it to an…",N,N],[0,"link_time_optimizer",R[3139],"Link-time-optimization",N,N],[4,R[3160],R[3151],E,N,N],[13,"LLVM_LTO_UNKNOWN",E,E,26,N],[13,"LLVM_LTO_OPT_SUCCESS",E,E,26,N],[13,"LLVM_LTO_READ_SUCCESS",E,E,26,N],[13,"LLVM_LTO_READ_FAILURE",E,E,26,N],[13,"LLVM_LTO_WRITE_FAILURE",E,E,26,N],[13,"LLVM_LTO_NO_TARGET",E,E,26,N],[13,"LLVM_LTO_NO_WORK",E,E,26,N],[13,"LLVM_LTO_MODULE_MERGE_FAILURE",E,E,26,N],[13,"LLVM_LTO_ASM_FAILURE",E,E,26,N],[13,"LLVM_LTO_NULL_OBJECT",E,E,26,N],[5,"llvm_create_optimizer",E,E,N,N],[5,"llvm_destroy_optimizer",E,E,N,N],[5,"llvm_read_object_file",E,E,N,N],[5,"llvm_optimize_modules",E,E,N,N],[6,"llvm_lto_t",E,"Dummy type for pointers to the LTO object",N,N],[0,"linker",R[3139],"The module/file/archive linker",N,N],[4,R[3213],R[3152],E,N,N],[13,"LLVMLinkerDestroySource",E,E,27,N],[13,"LLVMLinkerPreserveSource_Removed",E,E,27,N],[5,"LLVMLinkModules2",E,"Link the source module into the destination module.",N,N],[0,"lto",R[3139],"Abstract link time optimization.",N,N],[3,R[3239],R[3153],"Type to wrap a single object returned by ThinLTO.",N,N],[4,R[3161],E,E,N,N],[13,"LTO_SYMBOL_ALIGNMENT_MASK",E,E,28,N],[13,"LTO_SYMBOL_PERMISSIONS_MASK",E,E,28,N],[13,"LTO_SYMBOL_PERMISSIONS_CODE",E,E,28,N],[13,"LTO_SYMBOL_PERMISSIONS_DATA",E,E,28,N],[13,"LTO_SYMBOL_PERMISSIONS_RODATA",E,E,28,N],[13,"LTO_SYMBOL_DEFINITION_MASK",E,E,28,N],[13,"LTO_SYMBOL_DEFINITION_REGULAR",E,E,28,N],[13,"LTO_SYMBOL_DEFINITION_TENTATIVE",E,E,28,N],[13,"LTO_SYMBOL_DEFINITION_WEAK",E,E,28,N],[13,"LTO_SYMBOL_DEFINITION_UNDEFINED",E,E,28,N],[13,"LTO_SYMBOL_DEFINITION_WEAKUNDEF",E,E,28,N],[13,"LTO_SYMBOL_SCOPE_MASK",E,E,28,N],[13,"LTO_SYMBOL_SCOPE_INTERNAL",E,E,28,N],[13,"LTO_SYMBOL_SCOPE_HIDDEN",E,E,28,N],[13,"LTO_SYMBOL_SCOPE_PROTECTED",E,E,28,N],[13,"LTO_SYMBOL_SCOPE_DEFAULT",E,E,28,N],[13,"LTO_SYMBOL_SCOPE_DEFAULT_CAN_BE_HIDDEN",E,E,28,N],[13,"LTO_SYMBOL_COMDAT",E,R[3140],28,N],[13,"LTO_SYMBOL_ALIAS",E,R[3140],28,N],[4,R[3162],E,E,N,N],[13,"LTO_DEBUG_MODEL_NONE",E,E,29,N],[13,"LTO_DEBUG_MODEL_DWARF",E,E,29,N],[4,R[3163],E,E,N,N],[13,"LTO_CODEGEN_PIC_MODEL_STATIC",E,E,30,N],[13,"LTO_CODEGEN_PIC_MODEL_DYNAMIC",E,E,30,N],[13,"LTO_CODEGEN_PIC_MODEL_DYNAMIC_NO_PIC",E,E,30,N],[13,"LTO_CODEGEN_PIC_MODEL_DEFAULT",E,E,30,N],[4,R[3240],E,E,N,N],[4,R[3241],E,E,N,N],[4,R[3242],E,E,N,N],[4,R[3164],E,E,N,N],[13,"LTO_DS_ERROR",E,E,31,N],[13,"LTO_DS_WARNING",E,E,31,N],[13,"LTO_DS_REMARK",E,E,31,N],[13,"LTO_DS_NOTE",E,E,31,N],[5,"lto_get_version",E,E,N,N],[5,"lto_get_error_message",E,E,N,N],[5,"lto_module_is_object_file",E,E,N,N],[5,"lto_module_is_object_file_for_target",E,E,N,N],[5,"lto_module_has_objc_category",E,"Return true if `Buffer` contains a bitcode file with ObjC…",N,N],[5,"lto_module_is_object_file_in_memory",E,"Checks if a buffer is a loadable object file.",N,N],[5,"lto_module_is_object_file_in_memory_for_target",E,E,N,N],[5,"lto_module_create",E,E,N,N],[5,"lto_module_create_from_memory",E,E,N,N],[5,"lto_module_create_from_memory_with_path",E,E,N,N],[5,"lto_module_create_in_local_context",E,E,N,N],[5,"lto_module_create_in_codegen_context",E,E,N,N],[5,"lto_module_create_from_fd",E,E,N,N],[5,"lto_module_create_from_fd_at_offset",E,E,N,N],[5,"lto_module_dispose",E,E,N,N],[5,"lto_module_get_target_triple",E,E,N,N],[5,"lto_module_set_target_triple",E,E,N,N],[5,"lto_module_get_num_symbols",E,E,N,N],[5,"lto_module_get_symbol_name",E,E,N,N],[5,"lto_module_get_symbol_attribute",E,E,N,N],[5,"lto_module_get_linkeropts",E,"Returns the module's linker options.",N,N],[5,"lto_codegen_set_diagnostic_handler",E,E,N,N],[5,"lto_codegen_create",E,E,N,N],[5,"lto_codegen_create_in_local_context",E,E,N,N],[5,"lto_codegen_dispose",E,E,N,N],[5,"lto_codegen_add_module",E,E,N,N],[5,"lto_codegen_set_module",E,"Sets the object module for code gneeration. This will…",N,N],[5,"lto_codegen_set_debug_model",E,E,N,N],[5,"lto_codegen_set_pic_model",E,E,N,N],[5,"lto_codegen_set_cpu",E,E,N,N],[5,"lto_codegen_set_assembler_path",E,E,N,N],[5,"lto_codegen_set_assembler_args",E,E,N,N],[5,"lto_codegen_add_must_preserve_symbol",E,E,N,N],[5,"lto_codegen_write_merged_modules",E,E,N,N],[5,"lto_codegen_compile",E,E,N,N],[5,"lto_codegen_compile_to_file",E,E,N,N],[5,"lto_codegen_optimize",E,"Runs optimization for the merged module.",N,N],[5,"lto_codegen_compile_optimized",E,"Generates code for the optimized merged module into one…",N,N],[5,"lto_api_version",E,"Returns the runtime API version.",N,N],[5,"lto_codegen_debug_options",E,E,N,N],[5,"lto_initialize_disassembler",E,E,N,N],[5,"lto_codegen_set_should_internalize",E,"Sets if we should run the itnernalize pass during…",N,N],[5,"lto_codegen_set_should_embed_uselists",E,"Set whether to embed uselists in bitcode.",N,N],[5,"thinlto_create_codegen",E,"Instantiates a ThinLTO code generator.",N,N],[5,"thinlto_codegen_dispose",E,"Frees a code generator.",N,N],[5,"thinlto_codegen_add_module",E,"Add a module to a code generator.",N,N],[5,"thinlto_codegen_process",E,"Optimize and codegen all modules attached to the code…",N,N],[5,"thinlto_module_get_num_objects",E,R[3141],N,N],[5,"thinlto_module_get_object",E,"Return a reference to the `index`th object file produced…",N,N],[5,"thinlto_module_get_num_object_files",E,R[3141],N,N],[5,"thinlto_module_get_object_file",E,"Return the path to the ith output object file.",N,N],[5,"thinlto_codegen_set_pic_model",E,"Set which PIC code model to generate.",N,N],[5,"thinlto_codegen_set_cache_dir",E,E,N,N],[5,"thinlto_codegen_set_cache_pruning_interval",E,"Set the cache pruning interval, in seconds.",N,N],[5,"thinlto_codegen_set_final_cache_size_relative_to_available_space",E,"Set the maximum cache size to persist across builds.",N,N],[5,"thinlto_codegen_set_cache_entry_expiration",E,"Set the expiration (in seconds) for cache entries.",N,N],[5,"thinlto_codegen_set_cache_size_bytes",E,"Set the maximum size of the cache directory (in bytes). A…",N,N],[5,"thinlto_codegen_set_cache_size_megabytes",E,"Same as thinlto_codegen_set_cache_size_bytes, except the…",N,N],[5,"thinlto_codegen_set_cache_size_files",E,"Sets the maximum number of files in the cache directory.…",N,N],[5,"thinlto_codegen_set_savetemps_dir",E,"Set the path to a directory to use as temporary bitcode…",N,N],[5,"thinlto_set_generated_objects_dir",E,"Set the path to a directory to save generated object files.",N,N],[5,"thinlto_codegen_set_cpu",E,"Set the CPU to generate code for.",N,N],[5,"thinlto_codegen_disable_codegen",E,"Disable code generation (running all stages until codegen).",N,N],[5,"thinlto_codegen_set_codegen_only",E,"Perform codegen only; disable all other stages.",N,N],[5,"thinlto_debug_options",E,"Parse -mllvm style debug options.",N,N],[5,"lto_module_is_thinlto",E,"Test if a module has ThinLTO linking support.",N,N],[5,"thinlto_codegen_add_must_preserve_symbol",E,"Add a symbol to the list of global symbols that must exist…",N,N],[5,"thinlto_codegen_add_cross_referenced_symbol",E,"Add a symbol to the list of global symbols that are…",N,N],[6,"lto_bool_t",E,E,N,N],[6,"lto_module_t",E,E,N,N],[6,"lto_code_gen_t",E,E,N,N],[6,"thinlto_code_gen_t",E,E,N,N],[6,"lto_diagnostic_handler_t",E,E,N,N],[0,"object",R[3139],"Object file reading and writing",N,N],[4,R[3243],R[3154],E,N,N],[4,R[3244],E,E,N,N],[4,R[3245],E,E,N,N],[4,R[3246],E,E,N,N],[5,"LLVMCreateObjectFile",E,E,N,N],[5,"LLVMDisposeObjectFile",E,E,N,N],[5,"LLVMGetSections",E,E,N,N],[5,"LLVMDisposeSectionIterator",E,E,N,N],[5,"LLVMIsSectionIteratorAtEnd",E,E,N,N],[5,"LLVMMoveToNextSection",E,E,N,N],[5,"LLVMMoveToContainingSection",E,E,N,N],[5,"LLVMGetSymbols",E,E,N,N],[5,"LLVMDisposeSymbolIterator",E,E,N,N],[5,"LLVMIsSymbolIteratorAtEnd",E,E,N,N],[5,"LLVMMoveToNextSymbol",E,E,N,N],[5,"LLVMGetSectionName",E,E,N,N],[5,"LLVMGetSectionSize",E,E,N,N],[5,"LLVMGetSectionContents",E,E,N,N],[5,"LLVMGetSectionAddress",E,E,N,N],[5,"LLVMGetSectionContainsSymbol",E,E,N,N],[5,"LLVMGetRelocations",E,E,N,N],[5,"LLVMDisposeRelocationIterator",E,E,N,N],[5,"LLVMIsRelocationIteratorAtEnd",E,E,N,N],[5,"LLVMMoveToNextRelocation",E,E,N,N],[5,"LLVMGetSymbolName",E,E,N,N],[5,"LLVMGetSymbolAddress",E,E,N,N],[5,"LLVMGetSymbolSize",E,E,N,N],[5,"LLVMGetRelocationOffset",E,E,N,N],[5,"LLVMGetRelocationSymbol",E,E,N,N],[5,"LLVMGetRelocationType",E,E,N,N],[5,"LLVMGetRelocationTypeName",E,E,N,N],[5,"LLVMGetRelocationValueString",E,E,N,N],[6,"LLVMObjectFileRef",E,E,N,N],[6,"LLVMSectionIteratorRef",E,E,N,N],[6,"LLVMSymbolIteratorRef",E,E,N,N],[6,"LLVMRelocationIteratorRef",E,E,N,N],[0,"opt_remarks",R[3139],E,N,N],[3,R[3247],R[3155],E,N,N],[3,R[3248],E,E,N,N],[3,R[3249],E,E,N,N],[3,R[3250],E,E,N,N],[4,R[3251],E,E,N,N],[5,"LLVMOptRemarkParserCreate",E,E,N,N],[5,"LLVMOptRemarkParserGetNext",E,E,N,N],[5,"LLVMOptRemarkParserHasError",E,E,N,N],[5,"LLVMOptRemarkParserGetErrorMessage",E,E,N,N],[5,"LLVMOptRemarkParserDispose",E,E,N,N],[5,"LLVMOptRemarkVersion",E,E,N,N],[6,"LLVMOptRemarkParserRef",E,E,N,N],[0,"orc",R[3139],"The ORC JIT.",N,N],[4,R[3252],R[3156],E,N,N],[5,"LLVMOrcCreateInstance",E,"Create an ORC JIT stack.",N,N],[5,"LLVMOrcGetErrorMsg",E,"Get the error message for the most recent error (if any).",N,N],[5,"LLVMOrcGetMangledSymbol",E,"Mangle the given symbol.",N,N],[5,"LLVMOrcDisposeMangledSymbol",E,"Dispose of a mangled symbol.",N,N],[5,"LLVMOrcCreateLazyCompileCallback",E,"Create a lazy compile callback.",N,N],[5,"LLVMOrcCreateIndirectStub",E,"Create a named indirect call stub.",N,N],[5,"LLVMOrcSetIndirectStubPointer",E,"Set the pointer for the given indirect stub.",N,N],[5,"LLVMOrcAddEagerlyCompiledIR",E,"Add a module to be eagerly compiled.",N,N],[5,"LLVMOrcAddLazilyCompiledIR",E,"Add a module to be lazily compiled one function at a time.",N,N],[5,"LLVMOrcAddObjectFile",E,"Add an object file.",N,N],[5,"LLVMOrcRemoveModule",E,"Remove a module set from the JIT.",N,N],[5,"LLVMOrcGetSymbolAddress",E,"Get symbol address from JIT instance.",N,N],[5,"LLVMOrcGetSymbolAddressIn",E,"Get symbol address from JIT instance, searching only the…",N,N],[5,"LLVMOrcDisposeInstance",E,"Dispose of an ORC JIT stack.",N,N],[5,"LLVMOrcRegisterJITEventListener",E,"Register a JIT Event Listener.",N,N],[5,"LLVMOrcUnregisterJITEventListener",E,"Unegister a JIT Event Listener.",N,N],[6,"LLVMOrcJITStackRef",E,E,N,N],[6,"LLVMOrcModuleHandle",E,E,N,N],[6,"LLVMOrcTargetAddress",E,E,N,N],[6,"LLVMOrcSymbolResolverFn",E,E,N,N],[6,"LLVMOrcLazyCompileCallbackFn",E,E,N,N],[0,"support",R[3139],E,N,N],[5,"LLVMLoadLibraryPermanently","llvm_sys::support",E,N,N],[5,"LLVMParseCommandLineOptions",E,E,N,N],[5,"LLVMSearchForAddressOfSymbol",E,"Search all previously loaded dynamic libraries for the…",N,N],[5,"LLVMAddSymbol",E,"Permanently add the named symbol with the provided value.",N,N],[0,"target",R[3139],"Target information",N,N],[4,R[3214],R[3157],E,N,N],[13,"LLVMBigEndian",E,E,32,N],[13,"LLVMLittleEndian",E,E,32,N],[4,R[3253],E,E,N,N],[4,R[3254],E,E,N,N],[5,"LLVMInitializeAMDGPUTargetInfo",E,E,N,N],[5,"LLVMInitializeAMDGPUTarget",E,E,N,N],[5,"LLVMInitializeAMDGPUTargetMC",E,E,N,N],[5,"LLVMInitializeAMDGPUAsmPrinter",E,E,N,N],[5,"LLVMInitializeAMDGPUAsmParser",E,E,N,N],[5,"LLVMInitializeSystemZTargetInfo",E,E,N,N],[5,"LLVMInitializeSystemZTarget",E,E,N,N],[5,"LLVMInitializeSystemZTargetMC",E,E,N,N],[5,"LLVMInitializeSystemZAsmPrinter",E,E,N,N],[5,"LLVMInitializeSystemZAsmParser",E,E,N,N],[5,"LLVMInitializeSystemZDisassembler",E,E,N,N],[5,"LLVMInitializeHexagonTargetInfo",E,E,N,N],[5,"LLVMInitializeHexagonTarget",E,E,N,N],[5,"LLVMInitializeHexagonTargetMC",E,E,N,N],[5,"LLVMInitializeHexagonAsmPrinter",E,E,N,N],[5,"LLVMInitializeHexagonDisassembler",E,E,N,N],[5,"LLVMInitializeNVPTXTargetInfo",E,E,N,N],[5,"LLVMInitializeNVPTXTarget",E,E,N,N],[5,"LLVMInitializeNVPTXTargetMC",E,E,N,N],[5,"LLVMInitializeNVPTXAsmPrinter",E,E,N,N],[5,"LLVMInitializeMSP430TargetInfo",E,E,N,N],[5,"LLVMInitializeMSP430Target",E,E,N,N],[5,"LLVMInitializeMSP430TargetMC",E,E,N,N],[5,"LLVMInitializeMSP430AsmPrinter",E,E,N,N],[5,"LLVMInitializeXCoreTargetInfo",E,E,N,N],[5,"LLVMInitializeXCoreTarget",E,E,N,N],[5,"LLVMInitializeXCoreTargetMC",E,E,N,N],[5,"LLVMInitializeXCoreAsmPrinter",E,E,N,N],[5,"LLVMInitializeXCoreDisassembler",E,E,N,N],[5,"LLVMInitializeMipsTargetInfo",E,E,N,N],[5,"LLVMInitializeMipsTarget",E,E,N,N],[5,"LLVMInitializeMipsTargetMC",E,E,N,N],[5,"LLVMInitializeMipsAsmPrinter",E,E,N,N],[5,"LLVMInitializeMipsAsmParser",E,E,N,N],[5,"LLVMInitializeMipsDisassembler",E,E,N,N],[5,"LLVMInitializeAArch64TargetInfo",E,E,N,N],[5,"LLVMInitializeAArch64Target",E,E,N,N],[5,"LLVMInitializeAArch64TargetMC",E,E,N,N],[5,"LLVMInitializeAArch64AsmPrinter",E,E,N,N],[5,"LLVMInitializeAArch64AsmParser",E,E,N,N],[5,"LLVMInitializeAArch64Disassembler",E,E,N,N],[5,"LLVMInitializeARMTargetInfo",E,E,N,N],[5,"LLVMInitializeARMTarget",E,E,N,N],[5,"LLVMInitializeARMTargetMC",E,E,N,N],[5,"LLVMInitializeARMAsmPrinter",E,E,N,N],[5,"LLVMInitializeARMAsmParser",E,E,N,N],[5,"LLVMInitializeARMDisassembler",E,E,N,N],[5,"LLVMInitializePowerPCTargetInfo",E,E,N,N],[5,"LLVMInitializePowerPCTarget",E,E,N,N],[5,"LLVMInitializePowerPCTargetMC",E,E,N,N],[5,"LLVMInitializePowerPCAsmPrinter",E,E,N,N],[5,"LLVMInitializePowerPCAsmParser",E,E,N,N],[5,"LLVMInitializePowerPCDisassembler",E,E,N,N],[5,"LLVMInitializeSparcTargetInfo",E,E,N,N],[5,"LLVMInitializeSparcTarget",E,E,N,N],[5,"LLVMInitializeSparcTargetMC",E,E,N,N],[5,"LLVMInitializeSparcAsmPrinter",E,E,N,N],[5,"LLVMInitializeSparcAsmParser",E,E,N,N],[5,"LLVMInitializeSparcDisassembler",E,E,N,N],[5,"LLVMInitializeX86TargetInfo",E,E,N,N],[5,"LLVMInitializeX86Target",E,E,N,N],[5,"LLVMInitializeX86TargetMC",E,E,N,N],[5,"LLVMInitializeX86AsmPrinter",E,E,N,N],[5,"LLVMInitializeX86AsmParser",E,E,N,N],[5,"LLVMInitializeX86Disassembler",E,E,N,N],[5,"LLVMInitializeBPFTargetInfo",E,E,N,N],[5,"LLVMInitializeBPFTarget",E,E,N,N],[5,"LLVMInitializeBPFTargetMC",E,E,N,N],[5,"LLVMInitializeBPFAsmPrinter",E,E,N,N],[5,"LLVMInitializeBPFDisassembler",E,E,N,N],[5,"LLVMInitializeLanaiTargetInfo",E,E,N,N],[5,"LLVMInitializeLanaiTarget",E,E,N,N],[5,"LLVMInitializeLanaiTargetMC",E,E,N,N],[5,"LLVMInitializeLanaiAsmPrinter",E,E,N,N],[5,"LLVMInitializeLanaiAsmParser",E,E,N,N],[5,"LLVMInitializeLanaiDisassembler",E,E,N,N],[5,"LLVMInitializeRISCVTargetInfo",E,E,N,N],[5,"LLVMInitializeRISCVTarget",E,E,N,N],[5,"LLVMInitializeRISCVTargetMC",E,E,N,N],[5,"LLVMInitializeWebAssemblyTargetInfo",E,E,N,N],[5,"LLVMInitializeWebAssemblyTarget",E,E,N,N],[5,"LLVMInitializeWebAssemblyTargetMC",E,E,N,N],[5,"LLVMInitializeWebAssemblyAsmPrinter",E,E,N,N],[5,"LLVMInitializeWebAssemblyAsmParser",E,E,N,N],[5,"LLVMInitializeWebAssemblyDisassembler",E,E,N,N],[5,"LLVMGetModuleDataLayout",E,"Get the data layout for a module.",N,N],[5,"LLVMSetModuleDataLayout",E,"Set the data layout for a module.",N,N],[5,"LLVMCreateTargetData",E,"Create target data from a target layout string.",N,N],[5,"LLVMAddTargetLibraryInfo",E,E,N,N],[5,"LLVMCopyStringRepOfTargetData",E,E,N,N],[5,"LLVMByteOrder",E,E,N,N],[5,"LLVMPointerSize",E,E,N,N],[5,"LLVMPointerSizeForAS",E,E,N,N],[5,"LLVMIntPtrType",E,E,N,N],[5,"LLVMIntPtrTypeForAS",E,E,N,N],[5,"LLVMIntPtrTypeInContext",E,E,N,N],[5,"LLVMIntPtrTypeForASInContext",E,E,N,N],[5,"LLVMSizeOfTypeInBits",E,E,N,N],[5,"LLVMStoreSizeOfType",E,E,N,N],[5,"LLVMABISizeOfType",E,E,N,N],[5,"LLVMABIAlignmentOfType",E,E,N,N],[5,"LLVMCallFrameAlignmentOfType",E,E,N,N],[5,"LLVMPreferredAlignmentOfType",E,E,N,N],[5,"LLVMPreferredAlignmentOfGlobal",E,E,N,N],[5,"LLVMElementAtOffset",E,E,N,N],[5,"LLVMOffsetOfElement",E,E,N,N],[5,"LLVMDisposeTargetData",E,E,N,N],[5,"LLVM_InitializeAllTargetInfos",E,E,N,N],[5,"LLVM_InitializeAllTargets",E,E,N,N],[5,"LLVM_InitializeAllTargetMCs",E,E,N,N],[5,"LLVM_InitializeAllAsmPrinters",E,E,N,N],[5,"LLVM_InitializeAllAsmParsers",E,E,N,N],[5,"LLVM_InitializeAllDisassemblers",E,E,N,N],[5,"LLVM_InitializeNativeTarget",E,R[3142],N,N],[5,"LLVM_InitializeNativeAsmParser",E,R[3142],N,N],[5,"LLVM_InitializeNativeAsmPrinter",E,R[3142],N,N],[5,"LLVM_InitializeNativeDisassembler",E,R[3142],N,N],[6,"LLVMTargetDataRef",E,E,N,N],[6,"LLVMTargetLibraryInfoRef",E,E,N,N],[0,"target_machine",R[3139],"Target machine information, to generate assembly or object…",N,N],[4,R[3255],R[3158],E,N,N],[4,"LLVMTarget",E,E,N,N],[4,R[3215],E,E,N,N],[13,"LLVMCodeGenLevelNone",E,E,33,N],[13,"LLVMCodeGenLevelLess",E,E,33,N],[13,"LLVMCodeGenLevelDefault",E,E,33,N],[13,"LLVMCodeGenLevelAggressive",E,E,33,N],[4,R[3216],E,E,N,N],[13,"LLVMRelocDefault",E,E,34,N],[13,"LLVMRelocStatic",E,E,34,N],[13,"LLVMRelocPIC",E,E,34,N],[13,"LLVMRelocDynamicNoPic",E,E,34,N],[13,"LLVMRelocROPI",E,E,34,N],[13,"LLVMRelocRWPI",E,E,34,N],[13,"LLVMRelocROPI_RWPI",E,E,34,N],[4,R[3217],E,E,N,N],[13,"LLVMCodeModelDefault",E,E,35,N],[13,"LLVMCodeModelJITDefault",E,E,35,N],[13,"LLVMCodeModelTiny",E,E,35,N],[13,"LLVMCodeModelSmall",E,E,35,N],[13,"LLVMCodeModelKernel",E,E,35,N],[13,"LLVMCodeModelMedium",E,E,35,N],[13,"LLVMCodeModelLarge",E,E,35,N],[4,R[3218],E,E,N,N],[13,"LLVMAssemblyFile",E,E,36,N],[13,"LLVMObjectFile",E,E,36,N],[5,"LLVMGetFirstTarget",E,E,N,N],[5,"LLVMGetNextTarget",E,E,N,N],[5,"LLVMGetTargetFromName",E,E,N,N],[5,"LLVMGetTargetFromTriple",E,E,N,N],[5,"LLVMGetTargetName",E,E,N,N],[5,"LLVMGetTargetDescription",E,E,N,N],[5,"LLVMTargetHasJIT",E,E,N,N],[5,"LLVMTargetHasTargetMachine",E,E,N,N],[5,"LLVMTargetHasAsmBackend",E,E,N,N],[5,"LLVMCreateTargetMachine",E,E,N,N],[5,"LLVMDisposeTargetMachine",E,E,N,N],[5,"LLVMGetTargetMachineTarget",E,E,N,N],[5,"LLVMGetTargetMachineTriple",E,E,N,N],[5,"LLVMGetTargetMachineCPU",E,E,N,N],[5,"LLVMGetTargetMachineFeatureString",E,E,N,N],[5,"LLVMCreateTargetDataLayout",E,"Create a DataLayout based on the target machine.",N,N],[5,"LLVMSetTargetMachineAsmVerbosity",E,E,N,N],[5,"LLVMTargetMachineEmitToFile",E,E,N,N],[5,"LLVMTargetMachineEmitToMemoryBuffer",E,E,N,N],[5,"LLVMGetDefaultTargetTriple",E,E,N,N],[5,"LLVMNormalizeTargetTriple",E,"Normalize a target triple. The result needs to be disposed…",N,N],[5,"LLVMGetHostCPUName",E,"Get the host CPU as a string. The result needs to be…",N,N],[5,"LLVMGetHostCPUFeatures",E,"Get the host CPU's features as a string. The result needs…",N,N],[5,"LLVMAddAnalysisPasses",E,E,N,N],[6,"LLVMTargetMachineRef",E,E,N,N],[6,"LLVMTargetRef",E,E,N,N],[0,"transforms",R[3139],E,N,N],[0,"aggressive_instcombine",R[3143],E,N,N],[5,"LLVMAddAggressiveInstCombinerPass","llvm_sys::transforms::aggressive_instcombine",E,N,N],[0,"coroutines",R[3143],E,N,N],[5,"LLVMAddCoroEarlyPass","llvm_sys::transforms::coroutines",E,N,N],[5,"LLVMAddCoroSplitPass",E,E,N,N],[5,"LLVMAddCoroElidePass",E,E,N,N],[5,"LLVMAddCoroCleanupPass",E,E,N,N],[0,"instcombine",R[3143],E,N,N],[5,R[3144],"llvm_sys::transforms::instcombine",E,N,N],[0,"ipo",R[3143],"Interprocedural transformations of LLVM IR.",N,N],[5,"LLVMAddArgumentPromotionPass","llvm_sys::transforms::ipo",E,N,N],[5,"LLVMAddConstantMergePass",E,E,N,N],[5,"LLVMAddCalledValuePropagationPass",E,E,N,N],[5,"LLVMAddDeadArgEliminationPass",E,E,N,N],[5,"LLVMAddFunctionAttrsPass",E,E,N,N],[5,"LLVMAddFunctionInliningPass",E,E,N,N],[5,"LLVMAddAlwaysInlinerPass",E,E,N,N],[5,"LLVMAddGlobalDCEPass",E,E,N,N],[5,"LLVMAddGlobalOptimizerPass",E,E,N,N],[5,"LLVMAddIPConstantPropagationPass",E,E,N,N],[5,"LLVMAddPruneEHPass",E,E,N,N],[5,"LLVMAddIPSCCPPass",E,E,N,N],[5,"LLVMAddInternalizePass",E,E,N,N],[5,"LLVMAddStripDeadPrototypesPass",E,E,N,N],[5,"LLVMAddStripSymbolsPass",E,E,N,N],[0,"pass_manager_builder",R[3143],E,N,N],[4,R[3256],R[3159],E,N,N],[5,"LLVMPassManagerBuilderCreate",E,E,N,N],[5,"LLVMPassManagerBuilderDispose",E,E,N,N],[5,"LLVMPassManagerBuilderSetOptLevel",E,E,N,N],[5,"LLVMPassManagerBuilderSetSizeLevel",E,E,N,N],[5,"LLVMPassManagerBuilderSetDisableUnitAtATime",E,E,N,N],[5,"LLVMPassManagerBuilderSetDisableUnrollLoops",E,E,N,N],[5,"LLVMPassManagerBuilderSetDisableSimplifyLibCalls",E,E,N,N],[5,"LLVMPassManagerBuilderUseInlinerWithThreshold",E,E,N,N],[5,"LLVMPassManagerBuilderPopulateFunctionPassManager",E,E,N,N],[5,"LLVMPassManagerBuilderPopulateModulePassManager",E,E,N,N],[5,"LLVMPassManagerBuilderPopulateLTOPassManager",E,E,N,N],[6,"LLVMPassManagerBuilderRef",E,E,N,N],[0,"scalar",R[3143],"Scalar transformations of LLVM IR.",N,N],[5,"LLVMAddAggressiveDCEPass","llvm_sys::transforms::scalar",E,N,N],[5,"LLVMAddBitTrackingDCEPass",E,R[3140],N,N],[5,"LLVMAddAlignmentFromAssumptionsPass",E,E,N,N],[5,"LLVMAddCFGSimplificationPass",E,E,N,N],[5,"LLVMAddDeadStoreEliminationPass",E,E,N,N],[5,"LLVMAddScalarizerPass",E,E,N,N],[5,"LLVMAddMergedLoadStoreMotionPass",E,E,N,N],[5,"LLVMAddGVNPass",E,E,N,N],[5,"LLVMAddNewGVNPass",E,E,N,N],[5,"LLVMAddIndVarSimplifyPass",E,E,N,N],[5,R[3144],E,E,N,N],[5,"LLVMAddJumpThreadingPass",E,E,N,N],[5,"LLVMAddLICMPass",E,E,N,N],[5,"LLVMAddLoopDeletionPass",E,E,N,N],[5,"LLVMAddLoopIdiomPass",E,E,N,N],[5,"LLVMAddLoopRotatePass",E,E,N,N],[5,"LLVMAddLoopRerollPass",E,E,N,N],[5,"LLVMAddLoopUnrollPass",E,E,N,N],[5,"LLVMAddLoopUnrollAndJamPass",E,E,N,N],[5,"LLVMAddLoopUnswitchPass",E,E,N,N],[5,"LLVMAddLowerAtomicPass",E,E,N,N],[5,"LLVMAddMemCpyOptPass",E,E,N,N],[5,"LLVMAddPartiallyInlineLibCallsPass",E,E,N,N],[5,"LLVMAddReassociatePass",E,E,N,N],[5,"LLVMAddSCCPPass",E,E,N,N],[5,"LLVMAddScalarReplAggregatesPass",E,E,N,N],[5,"LLVMAddScalarReplAggregatesPassSSA",E,E,N,N],[5,"LLVMAddScalarReplAggregatesPassWithThreshold",E,E,N,N],[5,"LLVMAddSimplifyLibCallsPass",E,E,N,N],[5,"LLVMAddTailCallEliminationPass",E,E,N,N],[5,"LLVMAddConstantPropagationPass",E,E,N,N],[5,"LLVMAddDemoteMemoryToRegisterPass",E,E,N,N],[5,"LLVMAddVerifierPass",E,E,N,N],[5,"LLVMAddCorrelatedValuePropagationPass",E,E,N,N],[5,"LLVMAddEarlyCSEPass",E,E,N,N],[5,"LLVMAddEarlyCSEMemSSAPass",E,E,N,N],[5,"LLVMAddLowerExpectIntrinsicPass",E,E,N,N],[5,"LLVMAddTypeBasedAliasAnalysisPass",E,E,N,N],[5,"LLVMAddScopedNoAliasAAPass",E,E,N,N],[5,"LLVMAddBasicAliasAnalysisPass",E,E,N,N],[5,"LLVMAddUnifyFunctionExitNodesPass",E,E,N,N],[0,"util",R[3143],E,N,N],[5,"LLVMAddLowerSwitchPass","llvm_sys::transforms::util",E,N,N],[5,"LLVMAddPromoteMemoryToRegisterPass",E,E,N,N],[0,"vectorize",R[3143],"Vectorization transformations of LLVM IR.",N,N],[5,"LLVMAddLoopVectorizePass","llvm_sys::transforms::vectorize",E,N,N],[5,"LLVMAddSLPVectorizePass",E,E,N,N],[6,"LLVMAttributeIndex",R[3139],"Either LLVMAttributeReturnIndex,…",N,N],[6,"LLVMDiagnosticHandler",E,E,N,N],[6,"LLVMYieldCallback",E,E,N,N],[17,"LLVMAttributeReturnIndex",E,E,N,N],[17,"LLVMAttributeFunctionIndex",E,E,N,N],[11,"into",E,E,37,[[],[U]]],[11,"from",E,E,37,[[[T]],[T]]],[11,R[4],E,E,37,[[[U]],[R[3]]]],[11,R[5],E,E,37,[[],[R[3]]]],[11,R[7],E,E,37,[[["self"]],[T]]],[11,R[6],E,E,37,[[["self"]],[T]]],[11,R[8],E,E,37,[[["self"]],[R[9]]]],[11,"into",E,E,38,[[],[U]]],[11,"from",E,E,38,[[[T]],[T]]],[11,R[4],E,E,38,[[[U]],[R[3]]]],[11,R[5],E,E,38,[[],[R[3]]]],[11,R[7],E,E,38,[[["self"]],[T]]],[11,R[6],E,E,38,[[["self"]],[T]]],[11,R[8],E,E,38,[[["self"]],[R[9]]]],[11,"into",E,E,39,[[],[U]]],[11,"from",E,E,39,[[[T]],[T]]],[11,R[4],E,E,39,[[[U]],[R[3]]]],[11,R[5],E,E,39,[[],[R[3]]]],[11,R[7],E,E,39,[[["self"]],[T]]],[11,R[6],E,E,39,[[["self"]],[T]]],[11,R[8],E,E,39,[[["self"]],[R[9]]]],[11,"into",E,E,40,[[],[U]]],[11,"from",E,E,40,[[[T]],[T]]],[11,R[4],E,E,40,[[[U]],[R[3]]]],[11,R[5],E,E,40,[[],[R[3]]]],[11,R[7],E,E,40,[[["self"]],[T]]],[11,R[6],E,E,40,[[["self"]],[T]]],[11,R[8],E,E,40,[[["self"]],[R[9]]]],[11,"into",E,E,41,[[],[U]]],[11,"from",E,E,41,[[[T]],[T]]],[11,R[4],E,E,41,[[[U]],[R[3]]]],[11,R[5],E,E,41,[[],[R[3]]]],[11,R[7],E,E,41,[[["self"]],[T]]],[11,R[6],E,E,41,[[["self"]],[T]]],[11,R[8],E,E,41,[[["self"]],[R[9]]]],[11,"into",E,E,42,[[],[U]]],[11,"from",E,E,42,[[[T]],[T]]],[11,R[4],E,E,42,[[[U]],[R[3]]]],[11,R[5],E,E,42,[[],[R[3]]]],[11,R[7],E,E,42,[[["self"]],[T]]],[11,R[6],E,E,42,[[["self"]],[T]]],[11,R[8],E,E,42,[[["self"]],[R[9]]]],[11,"into",E,E,43,[[],[U]]],[11,"from",E,E,43,[[[T]],[T]]],[11,R[4],E,E,43,[[[U]],[R[3]]]],[11,R[5],E,E,43,[[],[R[3]]]],[11,R[7],E,E,43,[[["self"]],[T]]],[11,R[6],E,E,43,[[["self"]],[T]]],[11,R[8],E,E,43,[[["self"]],[R[9]]]],[11,"into",E,E,44,[[],[U]]],[11,"from",E,E,44,[[[T]],[T]]],[11,R[4],E,E,44,[[[U]],[R[3]]]],[11,R[5],E,E,44,[[],[R[3]]]],[11,R[7],E,E,44,[[["self"]],[T]]],[11,R[6],E,E,44,[[["self"]],[T]]],[11,R[8],E,E,44,[[["self"]],[R[9]]]],[11,"into",E,E,45,[[],[U]]],[11,"from",E,E,45,[[[T]],[T]]],[11,R[4],E,E,45,[[[U]],[R[3]]]],[11,R[5],E,E,45,[[],[R[3]]]],[11,R[7],E,E,45,[[["self"]],[T]]],[11,R[6],E,E,45,[[["self"]],[T]]],[11,R[8],E,E,45,[[["self"]],[R[9]]]],[11,"into",E,E,46,[[],[U]]],[11,"from",E,E,46,[[[T]],[T]]],[11,R[4],E,E,46,[[[U]],[R[3]]]],[11,R[5],E,E,46,[[],[R[3]]]],[11,R[7],E,E,46,[[["self"]],[T]]],[11,R[6],E,E,46,[[["self"]],[T]]],[11,R[8],E,E,46,[[["self"]],[R[9]]]],[11,"into",E,E,47,[[],[U]]],[11,"from",E,E,47,[[[T]],[T]]],[11,R[4],E,E,47,[[[U]],[R[3]]]],[11,R[5],E,E,47,[[],[R[3]]]],[11,R[7],E,E,47,[[["self"]],[T]]],[11,R[6],E,E,47,[[["self"]],[T]]],[11,R[8],E,E,47,[[["self"]],[R[9]]]],[11,"into",E,E,48,[[],[U]]],[11,"from",E,E,48,[[[T]],[T]]],[11,R[4],E,E,48,[[[U]],[R[3]]]],[11,R[5],E,E,48,[[],[R[3]]]],[11,R[7],E,E,48,[[["self"]],[T]]],[11,R[6],E,E,48,[[["self"]],[T]]],[11,R[8],E,E,48,[[["self"]],[R[9]]]],[11,"into",E,E,49,[[],[U]]],[11,"from",E,E,49,[[[T]],[T]]],[11,R[4],E,E,49,[[[U]],[R[3]]]],[11,R[5],E,E,49,[[],[R[3]]]],[11,R[7],E,E,49,[[["self"]],[T]]],[11,R[6],E,E,49,[[["self"]],[T]]],[11,R[8],E,E,49,[[["self"]],[R[9]]]],[11,"into",E,E,50,[[],[U]]],[11,"from",E,E,50,[[[T]],[T]]],[11,R[4],E,E,50,[[[U]],[R[3]]]],[11,R[5],E,E,50,[[],[R[3]]]],[11,R[7],E,E,50,[[["self"]],[T]]],[11,R[6],E,E,50,[[["self"]],[T]]],[11,R[8],E,E,50,[[["self"]],[R[9]]]],[11,"into",E,E,51,[[],[U]]],[11,"from",E,E,51,[[[T]],[T]]],[11,R[4],E,E,51,[[[U]],[R[3]]]],[11,R[5],E,E,51,[[],[R[3]]]],[11,R[7],E,E,51,[[["self"]],[T]]],[11,R[6],E,E,51,[[["self"]],[T]]],[11,R[8],E,E,51,[[["self"]],[R[9]]]],[11,"into",E,E,52,[[],[U]]],[11,"from",E,E,52,[[[T]],[T]]],[11,R[4],E,E,52,[[[U]],[R[3]]]],[11,R[5],E,E,52,[[],[R[3]]]],[11,R[7],E,E,52,[[["self"]],[T]]],[11,R[6],E,E,52,[[["self"]],[T]]],[11,R[8],E,E,52,[[["self"]],[R[9]]]],[11,"into",E,E,53,[[],[U]]],[11,"from",E,E,53,[[[T]],[T]]],[11,R[4],E,E,53,[[[U]],[R[3]]]],[11,R[5],E,E,53,[[],[R[3]]]],[11,R[7],E,E,53,[[["self"]],[T]]],[11,R[6],E,E,53,[[["self"]],[T]]],[11,R[8],E,E,53,[[["self"]],[R[9]]]],[11,"into",E,E,54,[[],[U]]],[11,"from",E,E,54,[[[T]],[T]]],[11,R[4],E,E,54,[[[U]],[R[3]]]],[11,R[5],E,E,54,[[],[R[3]]]],[11,R[7],E,E,54,[[["self"]],[T]]],[11,R[6],E,E,54,[[["self"]],[T]]],[11,R[8],E,E,54,[[["self"]],[R[9]]]],[11,"into",E,E,55,[[],[U]]],[11,"from",E,E,55,[[[T]],[T]]],[11,R[4],E,E,55,[[[U]],[R[3]]]],[11,R[5],E,E,55,[[],[R[3]]]],[11,R[7],E,E,55,[[["self"]],[T]]],[11,R[6],E,E,55,[[["self"]],[T]]],[11,R[8],E,E,55,[[["self"]],[R[9]]]],[11,"into",E,E,56,[[],[U]]],[11,"from",E,E,56,[[[T]],[T]]],[11,R[4],E,E,56,[[[U]],[R[3]]]],[11,R[5],E,E,56,[[],[R[3]]]],[11,R[7],E,E,56,[[["self"]],[T]]],[11,R[6],E,E,56,[[["self"]],[T]]],[11,R[8],E,E,56,[[["self"]],[R[9]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[46],E,E,0,[[["self"]],[T]]],[11,R[47],E,E,0,[[["self"],[T]]]],[11,R[4],E,E,0,[[[U]],[R[3]]]],[11,R[5],E,E,0,[[],[R[3]]]],[11,R[7],E,E,0,[[["self"]],[T]]],[11,R[6],E,E,0,[[["self"]],[T]]],[11,R[8],E,E,0,[[["self"]],[R[9]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[46],E,E,1,[[["self"]],[T]]],[11,R[47],E,E,1,[[["self"],[T]]]],[11,R[4],E,E,1,[[[U]],[R[3]]]],[11,R[5],E,E,1,[[],[R[3]]]],[11,R[7],E,E,1,[[["self"]],[T]]],[11,R[6],E,E,1,[[["self"]],[T]]],[11,R[8],E,E,1,[[["self"]],[R[9]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[46],E,E,2,[[["self"]],[T]]],[11,R[47],E,E,2,[[["self"],[T]]]],[11,R[4],E,E,2,[[[U]],[R[3]]]],[11,R[5],E,E,2,[[],[R[3]]]],[11,R[7],E,E,2,[[["self"]],[T]]],[11,R[6],E,E,2,[[["self"]],[T]]],[11,R[8],E,E,2,[[["self"]],[R[9]]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[46],E,E,3,[[["self"]],[T]]],[11,R[47],E,E,3,[[["self"],[T]]]],[11,R[4],E,E,3,[[[U]],[R[3]]]],[11,R[5],E,E,3,[[],[R[3]]]],[11,R[7],E,E,3,[[["self"]],[T]]],[11,R[6],E,E,3,[[["self"]],[T]]],[11,R[8],E,E,3,[[["self"]],[R[9]]]],[11,"into",E,E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[46],E,E,4,[[["self"]],[T]]],[11,R[47],E,E,4,[[["self"],[T]]]],[11,R[4],E,E,4,[[[U]],[R[3]]]],[11,R[5],E,E,4,[[],[R[3]]]],[11,R[7],E,E,4,[[["self"]],[T]]],[11,R[6],E,E,4,[[["self"]],[T]]],[11,R[8],E,E,4,[[["self"]],[R[9]]]],[11,"into",E,E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[46],E,E,5,[[["self"]],[T]]],[11,R[47],E,E,5,[[["self"],[T]]]],[11,R[4],E,E,5,[[[U]],[R[3]]]],[11,R[5],E,E,5,[[],[R[3]]]],[11,R[7],E,E,5,[[["self"]],[T]]],[11,R[6],E,E,5,[[["self"]],[T]]],[11,R[8],E,E,5,[[["self"]],[R[9]]]],[11,"into",E,E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[46],E,E,6,[[["self"]],[T]]],[11,R[47],E,E,6,[[["self"],[T]]]],[11,R[4],E,E,6,[[[U]],[R[3]]]],[11,R[5],E,E,6,[[],[R[3]]]],[11,R[7],E,E,6,[[["self"]],[T]]],[11,R[6],E,E,6,[[["self"]],[T]]],[11,R[8],E,E,6,[[["self"]],[R[9]]]],[11,"into",E,E,7,[[],[U]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[46],E,E,7,[[["self"]],[T]]],[11,R[47],E,E,7,[[["self"],[T]]]],[11,R[4],E,E,7,[[[U]],[R[3]]]],[11,R[5],E,E,7,[[],[R[3]]]],[11,R[7],E,E,7,[[["self"]],[T]]],[11,R[6],E,E,7,[[["self"]],[T]]],[11,R[8],E,E,7,[[["self"]],[R[9]]]],[11,"into",E,E,8,[[],[U]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[46],E,E,8,[[["self"]],[T]]],[11,R[47],E,E,8,[[["self"],[T]]]],[11,R[4],E,E,8,[[[U]],[R[3]]]],[11,R[5],E,E,8,[[],[R[3]]]],[11,R[7],E,E,8,[[["self"]],[T]]],[11,R[6],E,E,8,[[["self"]],[T]]],[11,R[8],E,E,8,[[["self"]],[R[9]]]],[11,"into",E,E,9,[[],[U]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[46],E,E,9,[[["self"]],[T]]],[11,R[47],E,E,9,[[["self"],[T]]]],[11,R[4],E,E,9,[[[U]],[R[3]]]],[11,R[5],E,E,9,[[],[R[3]]]],[11,R[7],E,E,9,[[["self"]],[T]]],[11,R[6],E,E,9,[[["self"]],[T]]],[11,R[8],E,E,9,[[["self"]],[R[9]]]],[11,"into",E,E,10,[[],[U]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[46],E,E,10,[[["self"]],[T]]],[11,R[47],E,E,10,[[["self"],[T]]]],[11,R[4],E,E,10,[[[U]],[R[3]]]],[11,R[5],E,E,10,[[],[R[3]]]],[11,R[7],E,E,10,[[["self"]],[T]]],[11,R[6],E,E,10,[[["self"]],[T]]],[11,R[8],E,E,10,[[["self"]],[R[9]]]],[11,"into",E,E,11,[[],[U]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[46],E,E,11,[[["self"]],[T]]],[11,R[47],E,E,11,[[["self"],[T]]]],[11,R[4],E,E,11,[[[U]],[R[3]]]],[11,R[5],E,E,11,[[],[R[3]]]],[11,R[7],E,E,11,[[["self"]],[T]]],[11,R[6],E,E,11,[[["self"]],[T]]],[11,R[8],E,E,11,[[["self"]],[R[9]]]],[11,"into",E,E,12,[[],[U]]],[11,"from",E,E,12,[[[T]],[T]]],[11,R[46],E,E,12,[[["self"]],[T]]],[11,R[47],E,E,12,[[["self"],[T]]]],[11,R[4],E,E,12,[[[U]],[R[3]]]],[11,R[5],E,E,12,[[],[R[3]]]],[11,R[7],E,E,12,[[["self"]],[T]]],[11,R[6],E,E,12,[[["self"]],[T]]],[11,R[8],E,E,12,[[["self"]],[R[9]]]],[11,"into",E,E,13,[[],[U]]],[11,"from",E,E,13,[[[T]],[T]]],[11,R[46],E,E,13,[[["self"]],[T]]],[11,R[47],E,E,13,[[["self"],[T]]]],[11,R[4],E,E,13,[[[U]],[R[3]]]],[11,R[5],E,E,13,[[],[R[3]]]],[11,R[7],E,E,13,[[["self"]],[T]]],[11,R[6],E,E,13,[[["self"]],[T]]],[11,R[8],E,E,13,[[["self"]],[R[9]]]],[11,"into",E,E,14,[[],[U]]],[11,"from",E,E,14,[[[T]],[T]]],[11,R[46],E,E,14,[[["self"]],[T]]],[11,R[47],E,E,14,[[["self"],[T]]]],[11,R[4],E,E,14,[[[U]],[R[3]]]],[11,R[5],E,E,14,[[],[R[3]]]],[11,R[7],E,E,14,[[["self"]],[T]]],[11,R[6],E,E,14,[[["self"]],[T]]],[11,R[8],E,E,14,[[["self"]],[R[9]]]],[11,"into",E,E,15,[[],[U]]],[11,"from",E,E,15,[[[T]],[T]]],[11,R[46],E,E,15,[[["self"]],[T]]],[11,R[47],E,E,15,[[["self"],[T]]]],[11,R[4],E,E,15,[[[U]],[R[3]]]],[11,R[5],E,E,15,[[],[R[3]]]],[11,R[7],E,E,15,[[["self"]],[T]]],[11,R[6],E,E,15,[[["self"]],[T]]],[11,R[8],E,E,15,[[["self"]],[R[9]]]],[11,"into",E,E,16,[[],[U]]],[11,"from",E,E,16,[[[T]],[T]]],[11,R[46],E,E,16,[[["self"]],[T]]],[11,R[47],E,E,16,[[["self"],[T]]]],[11,R[4],E,E,16,[[[U]],[R[3]]]],[11,R[5],E,E,16,[[],[R[3]]]],[11,R[7],E,E,16,[[["self"]],[T]]],[11,R[6],E,E,16,[[["self"]],[T]]],[11,R[8],E,E,16,[[["self"]],[R[9]]]],[11,"into",R[3145],E,17,[[],[U]]],[11,"from",E,E,17,[[[T]],[T]]],[11,R[46],E,E,17,[[["self"]],[T]]],[11,R[47],E,E,17,[[["self"],[T]]]],[11,R[4],E,E,17,[[[U]],[R[3]]]],[11,R[5],E,E,17,[[],[R[3]]]],[11,R[7],E,E,17,[[["self"]],[T]]],[11,R[6],E,E,17,[[["self"]],[T]]],[11,R[8],E,E,17,[[["self"]],[R[9]]]],[11,"into",R[3146],E,18,[[],[U]]],[11,"from",E,E,18,[[[T]],[T]]],[11,R[46],E,E,18,[[["self"]],[T]]],[11,R[47],E,E,18,[[["self"],[T]]]],[11,R[4],E,E,18,[[[U]],[R[3]]]],[11,R[5],E,E,18,[[],[R[3]]]],[11,R[7],E,E,18,[[["self"]],[T]]],[11,R[6],E,E,18,[[["self"]],[T]]],[11,R[8],E,E,18,[[["self"]],[R[9]]]],[11,"into",R[3147],E,19,[[],[U]]],[11,"from",E,E,19,[[[T]],[T]]],[11,R[4],E,E,19,[[[U]],[R[3]]]],[11,R[5],E,E,19,[[],[R[3]]]],[11,R[7],E,E,19,[[["self"]],[T]]],[11,R[6],E,E,19,[[["self"]],[T]]],[11,R[8],E,E,19,[[["self"]],[R[9]]]],[11,"into",E,E,20,[[],[U]]],[11,"from",E,E,20,[[[T]],[T]]],[11,R[4],E,E,20,[[[U]],[R[3]]]],[11,R[5],E,E,20,[[],[R[3]]]],[11,R[7],E,E,20,[[["self"]],[T]]],[11,R[6],E,E,20,[[["self"]],[T]]],[11,R[8],E,E,20,[[["self"]],[R[9]]]],[11,"into",E,E,21,[[],[U]]],[11,"from",E,E,21,[[[T]],[T]]],[11,R[4],E,E,21,[[[U]],[R[3]]]],[11,R[5],E,E,21,[[],[R[3]]]],[11,R[7],E,E,21,[[["self"]],[T]]],[11,R[6],E,E,21,[[["self"]],[T]]],[11,R[8],E,E,21,[[["self"]],[R[9]]]],[11,"into",E,E,22,[[],[U]]],[11,"from",E,E,22,[[[T]],[T]]],[11,R[4],E,E,22,[[[U]],[R[3]]]],[11,R[5],E,E,22,[[],[R[3]]]],[11,R[7],E,E,22,[[["self"]],[T]]],[11,R[6],E,E,22,[[["self"]],[T]]],[11,R[8],E,E,22,[[["self"]],[R[9]]]],[11,"into",R[3148],E,23,[[],[U]]],[11,"from",E,E,23,[[[T]],[T]]],[11,R[4],E,E,23,[[[U]],[R[3]]]],[11,R[5],E,E,23,[[],[R[3]]]],[11,R[7],E,E,23,[[["self"]],[T]]],[11,R[6],E,E,23,[[["self"]],[T]]],[11,R[8],E,E,23,[[["self"]],[R[9]]]],[11,"into",E,E,24,[[],[U]]],[11,"from",E,E,24,[[[T]],[T]]],[11,R[4],E,E,24,[[[U]],[R[3]]]],[11,R[5],E,E,24,[[],[R[3]]]],[11,R[7],E,E,24,[[["self"]],[T]]],[11,R[6],E,E,24,[[["self"]],[T]]],[11,R[8],E,E,24,[[["self"]],[R[9]]]],[11,"into",E,E,57,[[],[U]]],[11,"from",E,E,57,[[[T]],[T]]],[11,R[4],E,E,57,[[[U]],[R[3]]]],[11,R[5],E,E,57,[[],[R[3]]]],[11,R[7],E,E,57,[[["self"]],[T]]],[11,R[6],E,E,57,[[["self"]],[T]]],[11,R[8],E,E,57,[[["self"]],[R[9]]]],[11,"into",R[3149],E,58,[[],[U]]],[11,"from",E,E,58,[[[T]],[T]]],[11,R[4],E,E,58,[[[U]],[R[3]]]],[11,R[5],E,E,58,[[],[R[3]]]],[11,R[7],E,E,58,[[["self"]],[T]]],[11,R[6],E,E,58,[[["self"]],[T]]],[11,R[8],E,E,58,[[["self"]],[R[9]]]],[11,"into",R[3150],E,25,[[],[U]]],[11,"from",E,E,25,[[[T]],[T]]],[11,R[46],E,E,25,[[["self"]],[T]]],[11,R[47],E,E,25,[[["self"],[T]]]],[11,R[4],E,E,25,[[[U]],[R[3]]]],[11,R[5],E,E,25,[[],[R[3]]]],[11,R[7],E,E,25,[[["self"]],[T]]],[11,R[6],E,E,25,[[["self"]],[T]]],[11,R[8],E,E,25,[[["self"]],[R[9]]]],[11,"into",E,E,59,[[],[U]]],[11,"from",E,E,59,[[[T]],[T]]],[11,R[4],E,E,59,[[[U]],[R[3]]]],[11,R[5],E,E,59,[[],[R[3]]]],[11,R[7],E,E,59,[[["self"]],[T]]],[11,R[6],E,E,59,[[["self"]],[T]]],[11,R[8],E,E,59,[[["self"]],[R[9]]]],[11,"into",E,E,60,[[],[U]]],[11,"from",E,E,60,[[[T]],[T]]],[11,R[4],E,E,60,[[[U]],[R[3]]]],[11,R[5],E,E,60,[[],[R[3]]]],[11,R[7],E,E,60,[[["self"]],[T]]],[11,R[6],E,E,60,[[["self"]],[T]]],[11,R[8],E,E,60,[[["self"]],[R[9]]]],[11,"into",E,E,61,[[],[U]]],[11,"from",E,E,61,[[[T]],[T]]],[11,R[4],E,E,61,[[[U]],[R[3]]]],[11,R[5],E,E,61,[[],[R[3]]]],[11,R[7],E,E,61,[[["self"]],[T]]],[11,R[6],E,E,61,[[["self"]],[T]]],[11,R[8],E,E,61,[[["self"]],[R[9]]]],[11,"into",R[3151],E,26,[[],[U]]],[11,"from",E,E,26,[[[T]],[T]]],[11,R[46],E,E,26,[[["self"]],[T]]],[11,R[47],E,E,26,[[["self"],[T]]]],[11,R[4],E,E,26,[[[U]],[R[3]]]],[11,R[5],E,E,26,[[],[R[3]]]],[11,R[7],E,E,26,[[["self"]],[T]]],[11,R[6],E,E,26,[[["self"]],[T]]],[11,R[8],E,E,26,[[["self"]],[R[9]]]],[11,"into",R[3152],E,27,[[],[U]]],[11,"from",E,E,27,[[[T]],[T]]],[11,R[4],E,E,27,[[[U]],[R[3]]]],[11,R[5],E,E,27,[[],[R[3]]]],[11,R[7],E,E,27,[[["self"]],[T]]],[11,R[6],E,E,27,[[["self"]],[T]]],[11,R[8],E,E,27,[[["self"]],[R[9]]]],[11,"into",R[3153],E,62,[[],[U]]],[11,"from",E,E,62,[[[T]],[T]]],[11,R[4],E,E,62,[[[U]],[R[3]]]],[11,R[5],E,E,62,[[],[R[3]]]],[11,R[7],E,E,62,[[["self"]],[T]]],[11,R[6],E,E,62,[[["self"]],[T]]],[11,R[8],E,E,62,[[["self"]],[R[9]]]],[11,"into",E,E,28,[[],[U]]],[11,"from",E,E,28,[[[T]],[T]]],[11,R[46],E,E,28,[[["self"]],[T]]],[11,R[47],E,E,28,[[["self"],[T]]]],[11,R[4],E,E,28,[[[U]],[R[3]]]],[11,R[5],E,E,28,[[],[R[3]]]],[11,R[7],E,E,28,[[["self"]],[T]]],[11,R[6],E,E,28,[[["self"]],[T]]],[11,R[8],E,E,28,[[["self"]],[R[9]]]],[11,"into",E,E,29,[[],[U]]],[11,"from",E,E,29,[[[T]],[T]]],[11,R[46],E,E,29,[[["self"]],[T]]],[11,R[47],E,E,29,[[["self"],[T]]]],[11,R[4],E,E,29,[[[U]],[R[3]]]],[11,R[5],E,E,29,[[],[R[3]]]],[11,R[7],E,E,29,[[["self"]],[T]]],[11,R[6],E,E,29,[[["self"]],[T]]],[11,R[8],E,E,29,[[["self"]],[R[9]]]],[11,"into",E,E,30,[[],[U]]],[11,"from",E,E,30,[[[T]],[T]]],[11,R[46],E,E,30,[[["self"]],[T]]],[11,R[47],E,E,30,[[["self"],[T]]]],[11,R[4],E,E,30,[[[U]],[R[3]]]],[11,R[5],E,E,30,[[],[R[3]]]],[11,R[7],E,E,30,[[["self"]],[T]]],[11,R[6],E,E,30,[[["self"]],[T]]],[11,R[8],E,E,30,[[["self"]],[R[9]]]],[11,"into",E,E,63,[[],[U]]],[11,"from",E,E,63,[[[T]],[T]]],[11,R[4],E,E,63,[[[U]],[R[3]]]],[11,R[5],E,E,63,[[],[R[3]]]],[11,R[7],E,E,63,[[["self"]],[T]]],[11,R[6],E,E,63,[[["self"]],[T]]],[11,R[8],E,E,63,[[["self"]],[R[9]]]],[11,"into",E,E,64,[[],[U]]],[11,"from",E,E,64,[[[T]],[T]]],[11,R[4],E,E,64,[[[U]],[R[3]]]],[11,R[5],E,E,64,[[],[R[3]]]],[11,R[7],E,E,64,[[["self"]],[T]]],[11,R[6],E,E,64,[[["self"]],[T]]],[11,R[8],E,E,64,[[["self"]],[R[9]]]],[11,"into",E,E,65,[[],[U]]],[11,"from",E,E,65,[[[T]],[T]]],[11,R[4],E,E,65,[[[U]],[R[3]]]],[11,R[5],E,E,65,[[],[R[3]]]],[11,R[7],E,E,65,[[["self"]],[T]]],[11,R[6],E,E,65,[[["self"]],[T]]],[11,R[8],E,E,65,[[["self"]],[R[9]]]],[11,"into",E,E,31,[[],[U]]],[11,"from",E,E,31,[[[T]],[T]]],[11,R[46],E,E,31,[[["self"]],[T]]],[11,R[47],E,E,31,[[["self"],[T]]]],[11,R[4],E,E,31,[[[U]],[R[3]]]],[11,R[5],E,E,31,[[],[R[3]]]],[11,R[7],E,E,31,[[["self"]],[T]]],[11,R[6],E,E,31,[[["self"]],[T]]],[11,R[8],E,E,31,[[["self"]],[R[9]]]],[11,"into",R[3154],E,66,[[],[U]]],[11,"from",E,E,66,[[[T]],[T]]],[11,R[4],E,E,66,[[[U]],[R[3]]]],[11,R[5],E,E,66,[[],[R[3]]]],[11,R[7],E,E,66,[[["self"]],[T]]],[11,R[6],E,E,66,[[["self"]],[T]]],[11,R[8],E,E,66,[[["self"]],[R[9]]]],[11,"into",E,E,67,[[],[U]]],[11,"from",E,E,67,[[[T]],[T]]],[11,R[4],E,E,67,[[[U]],[R[3]]]],[11,R[5],E,E,67,[[],[R[3]]]],[11,R[7],E,E,67,[[["self"]],[T]]],[11,R[6],E,E,67,[[["self"]],[T]]],[11,R[8],E,E,67,[[["self"]],[R[9]]]],[11,"into",E,E,68,[[],[U]]],[11,"from",E,E,68,[[[T]],[T]]],[11,R[4],E,E,68,[[[U]],[R[3]]]],[11,R[5],E,E,68,[[],[R[3]]]],[11,R[7],E,E,68,[[["self"]],[T]]],[11,R[6],E,E,68,[[["self"]],[T]]],[11,R[8],E,E,68,[[["self"]],[R[9]]]],[11,"into",E,E,69,[[],[U]]],[11,"from",E,E,69,[[[T]],[T]]],[11,R[4],E,E,69,[[[U]],[R[3]]]],[11,R[5],E,E,69,[[],[R[3]]]],[11,R[7],E,E,69,[[["self"]],[T]]],[11,R[6],E,E,69,[[["self"]],[T]]],[11,R[8],E,E,69,[[["self"]],[R[9]]]],[11,"into",R[3155],E,70,[[],[U]]],[11,"from",E,E,70,[[[T]],[T]]],[11,R[4],E,E,70,[[[U]],[R[3]]]],[11,R[5],E,E,70,[[],[R[3]]]],[11,R[7],E,E,70,[[["self"]],[T]]],[11,R[6],E,E,70,[[["self"]],[T]]],[11,R[8],E,E,70,[[["self"]],[R[9]]]],[11,"into",E,E,71,[[],[U]]],[11,"from",E,E,71,[[[T]],[T]]],[11,R[4],E,E,71,[[[U]],[R[3]]]],[11,R[5],E,E,71,[[],[R[3]]]],[11,R[7],E,E,71,[[["self"]],[T]]],[11,R[6],E,E,71,[[["self"]],[T]]],[11,R[8],E,E,71,[[["self"]],[R[9]]]],[11,"into",E,E,72,[[],[U]]],[11,"from",E,E,72,[[[T]],[T]]],[11,R[4],E,E,72,[[[U]],[R[3]]]],[11,R[5],E,E,72,[[],[R[3]]]],[11,R[7],E,E,72,[[["self"]],[T]]],[11,R[6],E,E,72,[[["self"]],[T]]],[11,R[8],E,E,72,[[["self"]],[R[9]]]],[11,"into",E,E,73,[[],[U]]],[11,"from",E,E,73,[[[T]],[T]]],[11,R[4],E,E,73,[[[U]],[R[3]]]],[11,R[5],E,E,73,[[],[R[3]]]],[11,R[7],E,E,73,[[["self"]],[T]]],[11,R[6],E,E,73,[[["self"]],[T]]],[11,R[8],E,E,73,[[["self"]],[R[9]]]],[11,"into",E,E,74,[[],[U]]],[11,"from",E,E,74,[[[T]],[T]]],[11,R[4],E,E,74,[[[U]],[R[3]]]],[11,R[5],E,E,74,[[],[R[3]]]],[11,R[7],E,E,74,[[["self"]],[T]]],[11,R[6],E,E,74,[[["self"]],[T]]],[11,R[8],E,E,74,[[["self"]],[R[9]]]],[11,"into",R[3156],E,75,[[],[U]]],[11,"from",E,E,75,[[[T]],[T]]],[11,R[4],E,E,75,[[[U]],[R[3]]]],[11,R[5],E,E,75,[[],[R[3]]]],[11,R[7],E,E,75,[[["self"]],[T]]],[11,R[6],E,E,75,[[["self"]],[T]]],[11,R[8],E,E,75,[[["self"]],[R[9]]]],[11,"into",R[3157],E,32,[[],[U]]],[11,"from",E,E,32,[[[T]],[T]]],[11,R[46],E,E,32,[[["self"]],[T]]],[11,R[47],E,E,32,[[["self"],[T]]]],[11,R[4],E,E,32,[[[U]],[R[3]]]],[11,R[5],E,E,32,[[],[R[3]]]],[11,R[7],E,E,32,[[["self"]],[T]]],[11,R[6],E,E,32,[[["self"]],[T]]],[11,R[8],E,E,32,[[["self"]],[R[9]]]],[11,"into",E,E,76,[[],[U]]],[11,"from",E,E,76,[[[T]],[T]]],[11,R[4],E,E,76,[[[U]],[R[3]]]],[11,R[5],E,E,76,[[],[R[3]]]],[11,R[7],E,E,76,[[["self"]],[T]]],[11,R[6],E,E,76,[[["self"]],[T]]],[11,R[8],E,E,76,[[["self"]],[R[9]]]],[11,"into",E,E,77,[[],[U]]],[11,"from",E,E,77,[[[T]],[T]]],[11,R[4],E,E,77,[[[U]],[R[3]]]],[11,R[5],E,E,77,[[],[R[3]]]],[11,R[7],E,E,77,[[["self"]],[T]]],[11,R[6],E,E,77,[[["self"]],[T]]],[11,R[8],E,E,77,[[["self"]],[R[9]]]],[11,"into",R[3158],E,78,[[],[U]]],[11,"from",E,E,78,[[[T]],[T]]],[11,R[4],E,E,78,[[[U]],[R[3]]]],[11,R[5],E,E,78,[[],[R[3]]]],[11,R[7],E,E,78,[[["self"]],[T]]],[11,R[6],E,E,78,[[["self"]],[T]]],[11,R[8],E,E,78,[[["self"]],[R[9]]]],[11,"into",E,E,79,[[],[U]]],[11,"from",E,E,79,[[[T]],[T]]],[11,R[4],E,E,79,[[[U]],[R[3]]]],[11,R[5],E,E,79,[[],[R[3]]]],[11,R[7],E,E,79,[[["self"]],[T]]],[11,R[6],E,E,79,[[["self"]],[T]]],[11,R[8],E,E,79,[[["self"]],[R[9]]]],[11,"into",E,E,33,[[],[U]]],[11,"from",E,E,33,[[[T]],[T]]],[11,R[46],E,E,33,[[["self"]],[T]]],[11,R[47],E,E,33,[[["self"],[T]]]],[11,R[4],E,E,33,[[[U]],[R[3]]]],[11,R[5],E,E,33,[[],[R[3]]]],[11,R[7],E,E,33,[[["self"]],[T]]],[11,R[6],E,E,33,[[["self"]],[T]]],[11,R[8],E,E,33,[[["self"]],[R[9]]]],[11,"into",E,E,34,[[],[U]]],[11,"from",E,E,34,[[[T]],[T]]],[11,R[46],E,E,34,[[["self"]],[T]]],[11,R[47],E,E,34,[[["self"],[T]]]],[11,R[4],E,E,34,[[[U]],[R[3]]]],[11,R[5],E,E,34,[[],[R[3]]]],[11,R[7],E,E,34,[[["self"]],[T]]],[11,R[6],E,E,34,[[["self"]],[T]]],[11,R[8],E,E,34,[[["self"]],[R[9]]]],[11,"into",E,E,35,[[],[U]]],[11,"from",E,E,35,[[[T]],[T]]],[11,R[46],E,E,35,[[["self"]],[T]]],[11,R[47],E,E,35,[[["self"],[T]]]],[11,R[4],E,E,35,[[[U]],[R[3]]]],[11,R[5],E,E,35,[[],[R[3]]]],[11,R[7],E,E,35,[[["self"]],[T]]],[11,R[6],E,E,35,[[["self"]],[T]]],[11,R[8],E,E,35,[[["self"]],[R[9]]]],[11,"into",E,E,36,[[],[U]]],[11,"from",E,E,36,[[[T]],[T]]],[11,R[46],E,E,36,[[["self"]],[T]]],[11,R[47],E,E,36,[[["self"],[T]]]],[11,R[4],E,E,36,[[[U]],[R[3]]]],[11,R[5],E,E,36,[[],[R[3]]]],[11,R[7],E,E,36,[[["self"]],[T]]],[11,R[6],E,E,36,[[["self"]],[T]]],[11,R[8],E,E,36,[[["self"]],[R[9]]]],[11,"into",R[3159],E,80,[[],[U]]],[11,"from",E,E,80,[[[T]],[T]]],[11,R[4],E,E,80,[[[U]],[R[3]]]],[11,R[5],E,E,80,[[],[R[3]]]],[11,R[7],E,E,80,[[["self"]],[T]]],[11,R[6],E,E,80,[[["self"]],[T]]],[11,R[8],E,E,80,[[["self"]],[R[9]]]],[11,"clone",R[3145],E,17,[[["self"]],[R[3165]]]],[11,"clone",R[3146],E,18,[[["self"]],[R[3166]]]],[11,"clone",R[3150],E,25,[[["self"]],["llvmmcjitcompileroptions"]]],[11,"clone",R[3151],E,26,[[["self"]],[R[3160]]]],[11,"clone",R[3153],E,28,[[["self"]],[R[3161]]]],[11,"clone",E,E,29,[[["self"]],[R[3162]]]],[11,"clone",E,E,30,[[["self"]],[R[3163]]]],[11,"clone",E,E,31,[[["self"]],[R[3164]]]],[11,"clone",R[3157],E,32,[[["self"]],[R[3167]]]],[11,"clone",R[3158],E,33,[[["self"]],[R[3168]]]],[11,"clone",E,E,34,[[["self"]],[R[3169]]]],[11,"clone",E,E,35,[[["self"]],[R[3170]]]],[11,"clone",E,E,36,[[["self"]],[R[3171]]]],[11,"clone",R[3139],E,0,[[["self"]],[R[5830]]]],[11,"clone",E,E,1,[[["self"]],[R[3172]]]],[11,"clone",E,E,2,[[["self"]],[R[3173]]]],[11,"clone",E,E,3,[[["self"]],[R[3174]]]],[11,"clone",E,E,4,[[["self"]],[R[3175]]]],[11,"clone",E,E,5,[[["self"]],[R[3176]]]],[11,"clone",E,E,6,[[["self"]],[R[3177]]]],[11,"clone",E,E,7,[[["self"]],[R[3178]]]],[11,"clone",E,E,8,[[["self"]],[R[3179]]]],[11,"clone",E,E,9,[[["self"]],[R[3180]]]],[11,"clone",E,E,10,[[["self"]],[R[3181]]]],[11,"clone",E,E,11,[[["self"]],[R[3182]]]],[11,"clone",E,E,12,[[["self"]],[R[3183]]]],[11,"clone",E,E,13,[[["self"]],[R[3184]]]],[11,"clone",E,E,14,[[["self"]],[R[3185]]]],[11,"clone",E,E,15,[[["self"]],[R[3186]]]],[11,"clone",E,E,16,[[["self"]],[R[3187]]]],[11,"eq",R[3145],E,17,[[["self"],[R[3165]]],["bool"]]],[11,"eq",R[3146],E,18,[[["self"],[R[3166]]],["bool"]]],[11,"eq",R[3151],E,26,[[["self"],[R[3160]]],["bool"]]],[11,"eq",R[3153],E,28,[[["self"],[R[3161]]],["bool"]]],[11,"eq",E,E,29,[[["self"],[R[3162]]],["bool"]]],[11,"eq",E,E,30,[[["self"],[R[3163]]],["bool"]]],[11,"eq",E,E,31,[[["self"],[R[3164]]],["bool"]]],[11,"eq",R[3157],E,32,[[["self"],[R[3167]]],["bool"]]],[11,"eq",R[3158],E,33,[[["self"],[R[3168]]],["bool"]]],[11,"eq",E,E,34,[[["self"],[R[3169]]],["bool"]]],[11,"eq",E,E,35,[[["self"],[R[3170]]],["bool"]]],[11,"eq",E,E,36,[[["self"],[R[3171]]],["bool"]]],[11,"eq",R[3139],E,0,[[["self"],[R[5830]]],["bool"]]],[11,"eq",E,E,1,[[["self"],[R[3172]]],["bool"]]],[11,"eq",E,E,2,[[["self"],[R[3173]]],["bool"]]],[11,"eq",E,E,3,[[["self"],[R[3174]]],["bool"]]],[11,"eq",E,E,4,[[["self"],[R[3175]]],["bool"]]],[11,"eq",E,E,5,[[["self"],[R[3176]]],["bool"]]],[11,"eq",E,E,6,[[["self"],[R[3177]]],["bool"]]],[11,"eq",E,E,7,[[["self"],[R[3178]]],["bool"]]],[11,"eq",E,E,8,[[["self"],[R[3179]]],["bool"]]],[11,"eq",E,E,9,[[["self"],[R[3180]]],["bool"]]],[11,"eq",E,E,10,[[["self"],[R[3181]]],["bool"]]],[11,"eq",E,E,11,[[["self"],[R[3182]]],["bool"]]],[11,"eq",E,E,12,[[["self"],[R[3183]]],["bool"]]],[11,"eq",E,E,13,[[["self"],[R[3184]]],["bool"]]],[11,"eq",E,E,14,[[["self"],[R[3185]]],["bool"]]],[11,"eq",E,E,15,[[["self"],[R[3186]]],["bool"]]],[11,"eq",E,E,16,[[["self"],[R[3187]]],["bool"]]],[11,"fmt",E,E,37,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,38,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,39,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,40,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,41,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,42,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,43,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,44,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,45,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,46,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,47,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,48,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,49,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,50,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,51,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,52,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,53,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,54,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,55,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,56,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[3145],E,17,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[3146],E,18,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[3147],E,19,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,20,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,21,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,22,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[3148],E,57,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,23,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,24,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[3149],E,58,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[3150],E,59,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,60,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,61,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,25,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[3151],E,26,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[3152],E,27,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[3153],E,28,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,29,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,30,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,63,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,64,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,65,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,31,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,62,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[3154],E,66,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,67,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,68,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,69,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[3155],E,70,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,71,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,72,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,73,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,74,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[3156],E,75,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[3157],E,32,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,76,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,77,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[3158],E,78,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,79,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,33,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,34,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,35,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,36,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[3159],E,80,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[3139],E,0,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,1,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,2,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,3,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,4,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,5,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,6,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,7,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,8,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,9,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,10,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,11,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,12,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,13,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,14,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,15,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,16,[[["self"],[R[10]]],[R[3]]]]],"p":[[4,"LLVMOpcode"],[4,R[3188]],[4,R[3189]],[4,R[3190]],[4,R[3191]],[4,R[3192]],[4,R[3193]],[4,R[3194]],[4,R[3195]],[4,R[3196]],[4,R[3197]],[4,R[3198]],[4,R[3199]],[4,R[3200]],[4,R[3201]],[4,R[3202]],[4,R[3203]],[4,R[3204]],[4,R[3205]],[4,R[3206]],[4,R[3207]],[4,R[3208]],[4,R[3209]],[3,R[3210]],[3,R[3211]],[3,R[3212]],[4,R[3160]],[4,R[3213]],[4,R[3161]],[4,R[3162]],[4,R[3163]],[4,R[3164]],[4,R[3214]],[4,R[3215]],[4,R[3216]],[4,R[3217]],[4,R[3218]],[4,R[3219]],[4,R[3220]],[4,"LLVMModule"],[4,"LLVMType"],[4,"LLVMValue"],[4,R[3221]],[4,R[3222]],[4,R[3223]],[4,R[3224]],[4,R[3225]],[4,R[3226]],[4,R[3227]],[4,R[3228]],[4,R[3229]],[4,"LLVMUse"],[4,R[3230]],[4,"LLVMComdat"],[4,R[3231]],[4,R[3232]],[4,R[3233]],[4,R[3234]],[4,R[3235]],[4,R[3236]],[4,R[3237]],[4,R[3238]],[3,R[3239]],[4,R[3240]],[4,R[3241]],[4,R[3242]],[4,R[3243]],[4,R[3244]],[4,R[3245]],[4,R[3246]],[3,R[3247]],[3,R[3248]],[3,R[3249]],[3,R[3250]],[4,R[3251]],[4,R[3252]],[4,R[3253]],[4,R[3254]],[4,R[3255]],[4,"LLVMTarget"],[4,R[3256]]]};
searchIndex["lock_api"]={"doc":"This library provides type-safe and fully-featured `Mutex`…","i":[[3,R[618],"lock_api",R[522],N,N],[3,R[619],E,R[522],N,N],[3,"Mutex",E,R[2011],N,N],[3,R[595],E,R[2012],N,N],[3,R[596],E,R[2010],N,N],[3,R[597],E,R[2014],N,N],[3,R[598],E,R[2015],N,N],[3,R[599],E,R[2013],N,N],[3,"RwLock",E,R[2018],N,N],[3,R[600],E,R[2019],N,N],[3,R[601],E,R[2021],N,N],[3,R[602],E,R[2020],N,N],[3,R[603],E,R[2016],N,N],[3,R[604],E,R[2017],N,N],[11,"new",E,"Creates a new mutex in an unlocked state ready for use.",0,[[[T]],["mutex"]]],[11,R[15],E,R[531],0,[[],[T]]],[11,"lock",E,"Acquires a mutex, blocking the current thread until it is…",0,[[["self"]],[R[523]]]],[11,R[570],E,R[532],0,[[["self"]],[[R[23],[R[523]]],[R[523]]]]],[11,R[39],E,R[534],0,[[["self"]],[T]]],[11,R[535],E,R[536],0,[[["self"]]]],[11,"raw",E,R[537],0,[[["self"]],["r"]]],[11,R[538],E,"Forcibly unlocks the mutex using a fair unlock procotol.",0,[[["self"]]]],[11,R[539],E,R[524],0,[[["self"]],[[R[23],[R[523]]],[R[523]]]]],[11,R[540],E,R[524],0,[[["self"]],[[R[23],[R[523]]],[R[523]]]]],[11,"mutex",E,"Returns a reference to the original `Mutex` object.",1,[[["self"]],["mutex"]]],[11,"map",E,R[527],1,[[["f"]],[[R[525]],["sized"]]]],[11,R[559],E,R[528],1,[[["f"]],[[R[525]],[R[3],[R[525]]]]]],[11,R[556],E,R[526],1,[[["self"],["f"]],[U]]],[11,R[529],E,R[530],1,[[]]],[11,R[543],E,R[526],1,[[["self"],["f"]],[U]]],[11,"bump",E,R[544],1,[[["self"]]]],[11,"map",E,R[527],2,[[["f"]],[[R[525]],["sized"]]]],[11,R[559],E,R[528],2,[[["f"]],[[R[525]],[R[3],[R[525]]]]]],[11,R[529],E,R[530],2,[[]]],[11,"new",E,"Creates a new reentrant mutex in an unlocked state ready…",3,[[[T]],[R[541]]]],[11,R[15],E,R[531],3,[[],[T]]],[11,"lock",E,"Acquires a reentrant mutex, blocking the current thread…",3,[[["self"]],[R[533]]]],[11,R[570],E,R[532],3,[[["self"]],[[R[23],[R[533]]],[R[533]]]]],[11,R[39],E,R[534],3,[[["self"]],[T]]],[11,R[535],E,R[536],3,[[["self"]]]],[11,"raw",E,R[537],3,[[["self"]],["r"]]],[11,R[538],E,"Forcibly unlocks the mutex using a fair unlock protocol.",3,[[["self"]]]],[11,R[539],E,R[524],3,[[["self"]],[[R[23],[R[533]]],[R[533]]]]],[11,R[540],E,R[524],3,[[["self"]],[[R[23],[R[533]]],[R[533]]]]],[11,"remutex",E,"Returns a reference to the original `ReentrantMutex` object.",4,[[["self"]],[R[541]]]],[11,"map",E,R[545],4,[[["f"]],[[R[542]],["sized"]]]],[11,R[559],E,R[546],4,[[["f"]],[[R[3],[R[542]]],[R[542]]]]],[11,R[556],E,R[526],4,[[["self"],["f"]],[U]]],[11,R[529],E,R[530],4,[[]]],[11,R[543],E,R[526],4,[[["self"],["f"]],[U]]],[11,"bump",E,R[544],4,[[["self"]]]],[11,"map",E,R[545],5,[[["f"]],[[R[542]],["sized"]]]],[11,R[559],E,R[546],5,[[["f"]],[[R[3],[R[542]]],[R[542]]]]],[11,R[529],E,R[530],5,[[]]],[11,"new",E,"Creates a new instance of an `RwLock<T>` which is unlocked.",6,[[[T]],["rwlock"]]],[11,R[15],E,"Consumes this `RwLock`, returning the underlying data.",6,[[],[T]]],[11,"read",E,R[551],6,[[["self"]],[R[547]]]],[11,"try_read",E,R[552],6,[[["self"]],[[R[23],[R[547]]],[R[547]]]]],[11,"write",E,"Locks this `RwLock` with exclusive write access, blocking…",6,[[["self"]],[R[548]]]],[11,R[668],E,"Attempts to lock this `RwLock` with exclusive write access.",6,[[["self"]],[[R[548]],[R[23],[R[548]]]]]],[11,R[39],E,R[534],6,[[["self"]],[T]]],[11,"force_unlock_read",E,"Forcibly unlocks a read lock.",6,[[["self"]]]],[11,"force_unlock_write",E,"Forcibly unlocks a write lock.",6,[[["self"]]]],[11,"raw",E,"Returns the underlying raw reader-writer lock object.",6,[[["self"]],["r"]]],[11,"force_unlock_read_fair",E,"Forcibly unlocks a read lock using a fair unlock procotol.",6,[[["self"]]]],[11,"force_unlock_write_fair",E,"Forcibly unlocks a write lock using a fair unlock procotol.",6,[[["self"]]]],[11,"try_read_for",E,R[549],6,[[["self"]],[[R[23],[R[547]]],[R[547]]]]],[11,"try_read_until",E,R[549],6,[[["self"]],[[R[23],[R[547]]],[R[547]]]]],[11,"try_write_for",E,R[550],6,[[["self"]],[[R[548]],[R[23],[R[548]]]]]],[11,"try_write_until",E,R[550],6,[[["self"]],[[R[548]],[R[23],[R[548]]]]]],[11,"read_recursive",E,R[551],6,[[["self"]],[R[547]]]],[11,"try_read_recursive",E,R[552],6,[[["self"]],[[R[23],[R[547]]],[R[547]]]]],[11,"try_read_recursive_for",E,R[549],6,[[["self"]],[[R[23],[R[547]]],[R[547]]]]],[11,"try_read_recursive_until",E,R[549],6,[[["self"]],[[R[23],[R[547]]],[R[547]]]]],[11,"upgradable_read",E,"Locks this `RwLock` with upgradable read access, blocking…",6,[[["self"]],[R[553]]]],[11,"try_upgradable_read",E,R[554],6,[[["self"]],[[R[553]],[R[23],[R[553]]]]]],[11,"try_upgradable_read_for",E,R[554],6,[[["self"]],[[R[553]],[R[23],[R[553]]]]]],[11,"try_upgradable_read_until",E,R[554],6,[[["self"]],[[R[553]],[R[23],[R[553]]]]]],[11,"rwlock",E,R[558],7,[[["self"]],["rwlock"]]],[11,"map",E,R[565],7,[[["f"]],[[R[555]],["sized"]]]],[11,R[559],E,R[566],7,[[["f"]],[[R[555]],[R[3],[R[555]]]]]],[11,R[556],E,R[557],7,[[["self"],["f"]],[U]]],[11,R[529],E,R[561],7,[[]]],[11,R[543],E,R[557],7,[[["self"],["f"]],[U]]],[11,"bump",E,R[562],7,[[["self"]]]],[11,"rwlock",E,R[558],8,[[["self"]],["rwlock"]]],[11,"map",E,R[567],8,[[["f"]],[[R[560]],["sized"]]]],[11,R[559],E,R[568],8,[[["f"]],[[R[3],[R[560]]],[R[560]]]]],[11,R[556],E,R[557],8,[[["self"],["f"]],[U]]],[11,R[563],E,R[569],8,[[],[R[547]]]],[11,R[581],E,"Atomically downgrades a write lock into an upgradable read…",8,[[],[R[553]]]],[11,R[529],E,R[561],8,[[]]],[11,R[543],E,R[557],8,[[["self"],["f"]],[U]]],[11,"bump",E,R[562],8,[[["self"]]]],[11,"rwlock",E,R[558],9,[[["self"]],["rwlock"]]],[11,R[556],E,R[557],9,[[["self"],["f"]],[U]]],[11,"upgrade",E,"Atomically upgrades an upgradable read lock lock into a…",9,[[],[R[548]]]],[11,R[579],E,R[564],9,[[],[[R[548]],[R[3],[R[548]]]]]],[11,R[529],E,R[561],9,[[]]],[11,R[543],E,R[557],9,[[["self"],["f"]],[U]]],[11,"bump",E,R[562],9,[[["self"]]]],[11,R[563],E,"Atomically downgrades an upgradable read lock lock into a…",9,[[],[R[547]]]],[11,R[583],E,R[564],9,[[],[[R[548]],[R[3],[R[548]]]]]],[11,R[585],E,R[564],9,[[],[[R[548]],[R[3],[R[548]]]]]],[11,"map",E,R[565],10,[[["f"]],[[R[555]],["sized"]]]],[11,R[559],E,R[566],10,[[["f"]],[[R[555]],[R[3],[R[555]]]]]],[11,R[529],E,R[561],10,[[]]],[11,"map",E,R[567],11,[[["f"]],[[R[560]],["sized"]]]],[11,R[559],E,R[568],11,[[["f"]],[[R[3],[R[560]]],[R[560]]]]],[11,R[563],E,R[569],11,[[],[R[555]]]],[11,R[529],E,R[561],11,[[]]],[8,"RawMutex",E,"Basic operations for a mutex.",N,N],[18,"INIT",E,R[586],12,N],[16,R[571],E,R[572],12,N],[10,"lock",E,"Acquires this mutex, blocking the current thread until it…",12,[[["self"]]]],[10,R[570],E,"Attempts to acquire this mutex without blocking.",12,[[["self"]],["bool"]]],[10,"unlock",E,"Unlocks this mutex.",12,[[["self"]]]],[8,R[605],E,"Additional methods for mutexes which support fair unlocking.",N,N],[10,R[529],E,"Unlocks this mutex using a fair unlock protocol.",13,[[["self"]]]],[11,"bump",E,R[544],13,[[["self"]]]],[8,R[606],E,"Additional methods for mutexes which support locking with…",N,N],[16,"Duration",E,R[573],14,N],[16,"Instant",E,R[574],14,N],[10,R[539],E,R[524],14,[[["self"]],["bool"]]],[10,R[540],E,R[524],14,[[["self"]],["bool"]]],[8,R[607],E,"Helper trait which returns a non-zero thread ID.",N,N],[18,"INIT",E,R[587],15,N],[10,R[2022],E,"Returns a non-zero thread ID which identifies the current…",15,[[["self"]],[R[2023]]]],[8,R[608],E,"Basic operations for a reader-writer lock.",N,N],[18,"INIT",E,R[588],16,N],[16,R[571],E,R[572],16,N],[10,R[2027],E,"Acquires a shared lock, blocking the current thread until…",16,[[["self"]]]],[10,R[2028],E,"Attempts to acquire a shared lock without blocking.",16,[[["self"]],["bool"]]],[10,R[2029],E,"Releases a shared lock.",16,[[["self"]]]],[10,R[2024],E,"Acquires an exclusive lock, blocking the current thread…",16,[[["self"]]]],[10,R[2025],E,"Attempts to acquire an exclusive lock without blocking.",16,[[["self"]],["bool"]]],[10,R[2026],E,"Releases an exclusive lock.",16,[[["self"]]]],[8,R[609],E,"Additional methods for RwLocks which support fair unlocking.",N,N],[10,R[2030],E,"Releases a shared lock using a fair unlock protocol.",17,[[["self"]]]],[10,R[2031],E,"Releases an exclusive lock using a fair unlock protocol.",17,[[["self"]]]],[11,R[589],E,R[590],17,[[["self"]]]],[11,R[591],E,R[592],17,[[["self"]]]],[8,R[610],E,R[578],N,N],[10,R[563],E,"Atomically downgrades an exclusive lock into a shared lock…",18,[[["self"]]]],[8,R[611],E,"Additional methods for RwLocks which support locking with…",N,N],[16,"Duration",E,R[573],19,N],[16,"Instant",E,R[574],19,N],[10,R[2032],E,R[575],19,[[["self"]],["bool"]]],[10,R[2033],E,R[575],19,[[["self"]],["bool"]]],[10,R[2034],E,R[576],19,[[["self"]],["bool"]]],[10,R[2035],E,R[576],19,[[["self"]],["bool"]]],[8,R[612],E,R[577],N,N],[10,R[2036],E,"Acquires a shared lock without deadlocking in case of a…",20,[[["self"]]]],[10,R[2037],E,"Attempts to acquire a shared lock without deadlocking in…",20,[[["self"]],["bool"]]],[8,R[613],E,R[577],N,N],[10,R[2038],E,R[575],21,[[["self"]],["bool"]]],[10,R[2039],E,R[575],21,[[["self"]],["bool"]]],[8,R[614],E,R[578],N,N],[10,R[2040],E,"Acquires an upgradable lock, blocking the current thread…",22,[[["self"]]]],[10,R[2041],E,"Attempts to acquire an upgradable lock without blocking.",22,[[["self"]],["bool"]]],[10,R[2042],E,"Releases an upgradable lock.",22,[[["self"]]]],[10,"upgrade",E,"Upgrades an upgradable lock to an exclusive lock.",22,[[["self"]]]],[10,R[579],E,R[584],22,[[["self"]],["bool"]]],[8,R[615],E,R[580],N,N],[10,R[2043],E,"Releases an upgradable lock using a fair unlock protocol.",23,[[["self"]]]],[11,R[593],E,R[594],23,[[["self"]]]],[8,R[616],E,R[580],N,N],[10,R[2044],E,"Downgrades an upgradable lock to a shared lock.",24,[[["self"]]]],[10,R[581],E,"Downgrades an exclusive lock to an upgradable lock.",24,[[["self"]]]],[8,R[617],E,R[580],N,N],[10,R[2046],E,R[582],25,[[["self"]],["bool"]]],[10,R[2045],E,R[582],25,[[["self"]],["bool"]]],[10,R[583],E,R[584],25,[[["self"]],["bool"]]],[10,R[585],E,R[584],25,[[["self"]],["bool"]]],[11,"from",E,E,26,[[[T]],[T]]],[11,R[4],E,E,26,[[[U]],[R[3]]]],[11,"into",E,E,26,[[],[U]]],[11,R[5],E,E,26,[[],[R[3]]]],[11,R[6],E,E,26,[[["self"]],[T]]],[11,R[7],E,E,26,[[["self"]],[T]]],[11,R[8],E,E,26,[[["self"]],[R[9]]]],[11,"from",E,E,27,[[[T]],[T]]],[11,R[4],E,E,27,[[[U]],[R[3]]]],[11,"into",E,E,27,[[],[U]]],[11,R[5],E,E,27,[[],[R[3]]]],[11,R[6],E,E,27,[[["self"]],[T]]],[11,R[7],E,E,27,[[["self"]],[T]]],[11,R[8],E,E,27,[[["self"]],[R[9]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[4],E,E,0,[[[U]],[R[3]]]],[11,"into",E,E,0,[[],[U]]],[11,R[5],E,E,0,[[],[R[3]]]],[11,R[6],E,E,0,[[["self"]],[T]]],[11,R[7],E,E,0,[[["self"]],[T]]],[11,R[8],E,E,0,[[["self"]],[R[9]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[4],E,E,1,[[[U]],[R[3]]]],[11,"into",E,E,1,[[],[U]]],[11,R[5],E,E,1,[[],[R[3]]]],[11,R[6],E,E,1,[[["self"]],[T]]],[11,R[7],E,E,1,[[["self"]],[T]]],[11,R[8],E,E,1,[[["self"]],[R[9]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[4],E,E,2,[[[U]],[R[3]]]],[11,"into",E,E,2,[[],[U]]],[11,R[5],E,E,2,[[],[R[3]]]],[11,R[6],E,E,2,[[["self"]],[T]]],[11,R[7],E,E,2,[[["self"]],[T]]],[11,R[8],E,E,2,[[["self"]],[R[9]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[4],E,E,3,[[[U]],[R[3]]]],[11,"into",E,E,3,[[],[U]]],[11,R[5],E,E,3,[[],[R[3]]]],[11,R[6],E,E,3,[[["self"]],[T]]],[11,R[7],E,E,3,[[["self"]],[T]]],[11,R[8],E,E,3,[[["self"]],[R[9]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[4],E,E,4,[[[U]],[R[3]]]],[11,"into",E,E,4,[[],[U]]],[11,R[5],E,E,4,[[],[R[3]]]],[11,R[6],E,E,4,[[["self"]],[T]]],[11,R[7],E,E,4,[[["self"]],[T]]],[11,R[8],E,E,4,[[["self"]],[R[9]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[4],E,E,5,[[[U]],[R[3]]]],[11,"into",E,E,5,[[],[U]]],[11,R[5],E,E,5,[[],[R[3]]]],[11,R[6],E,E,5,[[["self"]],[T]]],[11,R[7],E,E,5,[[["self"]],[T]]],[11,R[8],E,E,5,[[["self"]],[R[9]]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[4],E,E,6,[[[U]],[R[3]]]],[11,"into",E,E,6,[[],[U]]],[11,R[5],E,E,6,[[],[R[3]]]],[11,R[6],E,E,6,[[["self"]],[T]]],[11,R[7],E,E,6,[[["self"]],[T]]],[11,R[8],E,E,6,[[["self"]],[R[9]]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[4],E,E,7,[[[U]],[R[3]]]],[11,"into",E,E,7,[[],[U]]],[11,R[5],E,E,7,[[],[R[3]]]],[11,R[6],E,E,7,[[["self"]],[T]]],[11,R[7],E,E,7,[[["self"]],[T]]],[11,R[8],E,E,7,[[["self"]],[R[9]]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[4],E,E,8,[[[U]],[R[3]]]],[11,"into",E,E,8,[[],[U]]],[11,R[5],E,E,8,[[],[R[3]]]],[11,R[6],E,E,8,[[["self"]],[T]]],[11,R[7],E,E,8,[[["self"]],[T]]],[11,R[8],E,E,8,[[["self"]],[R[9]]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[4],E,E,9,[[[U]],[R[3]]]],[11,"into",E,E,9,[[],[U]]],[11,R[5],E,E,9,[[],[R[3]]]],[11,R[6],E,E,9,[[["self"]],[T]]],[11,R[7],E,E,9,[[["self"]],[T]]],[11,R[8],E,E,9,[[["self"]],[R[9]]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[4],E,E,10,[[[U]],[R[3]]]],[11,"into",E,E,10,[[],[U]]],[11,R[5],E,E,10,[[],[R[3]]]],[11,R[6],E,E,10,[[["self"]],[T]]],[11,R[7],E,E,10,[[["self"]],[T]]],[11,R[8],E,E,10,[[["self"]],[R[9]]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[4],E,E,11,[[[U]],[R[3]]]],[11,"into",E,E,11,[[],[U]]],[11,R[5],E,E,11,[[],[R[3]]]],[11,R[6],E,E,11,[[["self"]],[T]]],[11,R[7],E,E,11,[[["self"]],[T]]],[11,R[8],E,E,11,[[["self"]],[R[9]]]],[11,"deref",E,E,1,[[["self"]],[T]]],[11,"deref",E,E,2,[[["self"]],[T]]],[11,"deref",E,E,4,[[["self"]],[T]]],[11,"deref",E,E,5,[[["self"]],[T]]],[11,"deref",E,E,7,[[["self"]],[T]]],[11,"deref",E,E,8,[[["self"]],[T]]],[11,"deref",E,E,9,[[["self"]],[T]]],[11,"deref",E,E,10,[[["self"]],[T]]],[11,"deref",E,E,11,[[["self"]],[T]]],[11,R[17],E,E,1,[[["self"]],[T]]],[11,R[17],E,E,2,[[["self"]],[T]]],[11,R[17],E,E,8,[[["self"]],[T]]],[11,R[17],E,E,11,[[["self"]],[T]]],[11,"from",E,E,0,[[[T]],["mutex"]]],[11,"from",E,E,3,[[[T]],[R[541]]]],[11,"from",E,E,6,[[[T]],["rwlock"]]],[11,"fmt",E,E,0,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,1,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,2,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,3,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,4,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,5,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,6,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,7,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,8,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,9,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,10,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,11,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,1,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,2,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,4,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,5,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,7,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,8,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,9,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,10,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,11,[[["self"],[R[10]]],[R[3]]]],[11,"drop",E,E,1,[[["self"]]]],[11,"drop",E,E,2,[[["self"]]]],[11,"drop",E,E,4,[[["self"]]]],[11,"drop",E,E,5,[[["self"]]]],[11,"drop",E,E,7,[[["self"]]]],[11,"drop",E,E,8,[[["self"]]]],[11,"drop",E,E,9,[[["self"]]]],[11,"drop",E,E,10,[[["self"]]]],[11,"drop",E,E,11,[[["self"]]]],[11,R[83],E,E,0,[[],["mutex"]]],[11,R[83],E,E,3,[[],[R[541]]]],[11,R[83],E,E,6,[[],["rwlock"]]],[18,"INIT",E,R[586],12,N],[11,"bump",E,R[544],13,[[["self"]]]],[18,"INIT",E,R[587],15,N],[18,"INIT",E,R[588],16,N],[11,R[589],E,R[590],17,[[["self"]]]],[11,R[591],E,R[592],17,[[["self"]]]],[11,R[593],E,R[594],23,[[["self"]]]]],"p":[[3,"Mutex"],[3,R[595]],[3,R[596]],[3,R[597]],[3,R[598]],[3,R[599]],[3,"RwLock"],[3,R[600]],[3,R[601]],[3,R[602]],[3,R[603]],[3,R[604]],[8,"RawMutex"],[8,R[605]],[8,R[606]],[8,R[607]],[8,R[608]],[8,R[609]],[8,R[610]],[8,R[611]],[8,R[612]],[8,R[613]],[8,R[614]],[8,R[615]],[8,R[616]],[8,R[617]],[3,R[618]],[3,R[619]]]};
searchIndex["log"]={"doc":"A lightweight logging facade.","i":[[3,"Record","log","The \"payload\" of a log message.",N,N],[3,R[744],E,"Builder for `Record`.",N,N],[3,"Metadata",E,"Metadata about a log message.",N,N],[3,R[745],E,"Builder for `Metadata`.",N,N],[3,R[746],E,"The type returned by [`set_logger`] if [`set_logger`] has…",N,N],[3,R[747],E,"The type returned by [`from_str`] when the string doesn't…",N,N],[4,"Level",E,"An enum representing the available verbosity levels of the…",N,N],[13,"Error",E,"The \"error\" level.",0,N],[13,"Warn",E,"The \"warn\" level.",0,N],[13,"Info",E,"The \"info\" level.",0,N],[13,"Debug",E,"The \"debug\" level.",0,N],[13,"Trace",E,"The \"trace\" level.",0,N],[4,R[743],E,"An enum representing the available verbosity level filters…",N,N],[13,"Off",E,"A level lower than all log levels.",1,N],[13,"Error",E,"Corresponds to the `Error` log level.",1,N],[13,"Warn",E,"Corresponds to the `Warn` log level.",1,N],[13,"Info",E,"Corresponds to the `Info` log level.",1,N],[13,"Debug",E,"Corresponds to the `Debug` log level.",1,N],[13,"Trace",E,"Corresponds to the `Trace` log level.",1,N],[5,"set_max_level",E,"Sets the global maximum log level.",N,[[[R[729]]]]],[5,"max_level",E,"Returns the current maximum log level.",N,[[],[R[729]]]],[5,"set_boxed_logger",E,"Sets the global logger to a `Box<Log>`.",N,[[["box",["log"]],["log"]],[[R[3],[R[730]]],[R[730]]]]],[5,"set_logger",E,"Sets the global logger to a `&'static Log`.",N,[[["log"]],[[R[3],[R[730]]],[R[730]]]]],[5,"set_logger_racy",E,"A thread-unsafe version of [`set_logger`].",N,[[["log"]],[[R[3],[R[730]]],[R[730]]]]],[5,"logger",E,"Returns a reference to the logger.",N,[[],["log"]]],[17,"STATIC_MAX_LEVEL",E,"The statically resolved maximum log level.",N,N],[8,"Log",E,"A trait encapsulating the operations required of a logger.",N,N],[10,"enabled",E,"Determines if a log message with the specified metadata…",2,[[["self"],[R[731]]],["bool"]]],[10,"log",E,"Logs the `Record`.",2,[[["self"],["record"]]]],[10,"flush",E,"Flushes any buffered records.",2,[[["self"]]]],[11,"max",E,"Returns the most verbose logging level.",0,[[],["level"]]],[11,"to_level_filter",E,"Converts the `Level` to the equivalent `LevelFilter`.",0,[[["self"]],[R[729]]]],[11,"max",E,"Returns the most verbose logging level filter.",1,[[],[R[729]]]],[11,"to_level",E,"Converts `self` to the equivalent `Level`.",1,[[["self"]],[[R[23],["level"]],["level"]]]],[11,"builder",E,R[738],3,[[],[R[733]]]],[11,"args",E,"The message body.",3,[[["self"]],[R[734]]]],[11,R[731],E,"Metadata about the log directive.",3,[[["self"]],[R[731]]]],[11,"level",E,R[739],3,[[["self"]],["level"]]],[11,"target",E,R[740],3,[[["self"]],["str"]]],[11,R[735],E,"The module path of the message.",3,[[["self"]],[[R[23],["str"]],["str"]]]],[11,R[736],E,R[732],3,[[["self"]],[[R[23],["str"]],["str"]]]],[11,"file",E,"The source file containing the message.",3,[[["self"]],[[R[23],["str"]],["str"]]]],[11,R[737],E,R[732],3,[[["self"]],[[R[23],["str"]],["str"]]]],[11,"line",E,"The line containing the message.",3,[[["self"]],[[R[23],["u32"]],["u32"]]]],[11,"new",E,"Construct new `RecordBuilder`.",4,[[],[R[733]]]],[11,"args",E,"Set `args`.",4,[[["self"],[R[734]]],[R[733]]]],[11,R[731],E,"Set `metadata`. Construct a `Metadata` object with…",4,[[["self"],[R[731]]],[R[733]]]],[11,"level",E,"Set `Metadata::level`.",4,[[["self"],["level"]],[R[733]]]],[11,"target",E,"Set `Metadata::target`",4,[[["self"],["str"]],[R[733]]]],[11,R[735],E,"Set `module_path`",4,[[["self"],[R[23],["str"]],["str"]],[R[733]]]],[11,R[736],E,"Set `module_path` to a `'static` string",4,[[["self"],[R[23],["str"]],["str"]],[R[733]]]],[11,"file",E,"Set `file`",4,[[["self"],[R[23],["str"]],["str"]],[R[733]]]],[11,R[737],E,"Set `file` to a `'static` string.",4,[[["self"],[R[23],["str"]],["str"]],[R[733]]]],[11,"line",E,"Set `line`",4,[[["self"],[R[23],["u32"]],["u32"]],[R[733]]]],[11,"build",E,"Invoke the builder and return a `Record`",4,[[["self"]],["record"]]],[11,"builder",E,R[738],5,[[],[R[741]]]],[11,"level",E,R[739],5,[[["self"]],["level"]]],[11,"target",E,R[740],5,[[["self"]],["str"]]],[11,"new",E,"Construct a new `MetadataBuilder`.",6,[[],[R[741]]]],[11,"level",E,"Setter for `level`.",6,[[["self"],["level"]],[R[741]]]],[11,"target",E,"Setter for `target`.",6,[[["self"],["str"]],[R[741]]]],[11,"build",E,"Returns a `Metadata` object.",6,[[["self"]],[R[731]]]],[14,"log",E,"The standard logging macro.",N,N],[14,"error",E,"Logs a message at the error level.",N,N],[14,"warn",E,"Logs a message at the warn level.",N,N],[14,"info",E,"Logs a message at the info level.",N,N],[14,"debug",E,"Logs a message at the debug level.",N,N],[14,"trace",E,"Logs a message at the trace level.",N,N],[14,"log_enabled",E,"Determines if a message logged at the specified level in…",N,N],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[46],E,E,3,[[["self"]],[T]]],[11,R[47],E,E,3,[[["self"],[T]]]],[11,R[4],E,E,3,[[[U]],[R[3]]]],[11,R[5],E,E,3,[[],[R[3]]]],[11,R[7],E,E,3,[[["self"]],[T]]],[11,R[6],E,E,3,[[["self"]],[T]]],[11,R[8],E,E,3,[[["self"]],[R[9]]]],[11,"into",E,E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[4],E,E,4,[[[U]],[R[3]]]],[11,R[5],E,E,4,[[],[R[3]]]],[11,R[7],E,E,4,[[["self"]],[T]]],[11,R[6],E,E,4,[[["self"]],[T]]],[11,R[8],E,E,4,[[["self"]],[R[9]]]],[11,"into",E,E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[46],E,E,5,[[["self"]],[T]]],[11,R[47],E,E,5,[[["self"],[T]]]],[11,R[4],E,E,5,[[[U]],[R[3]]]],[11,R[5],E,E,5,[[],[R[3]]]],[11,R[7],E,E,5,[[["self"]],[T]]],[11,R[6],E,E,5,[[["self"]],[T]]],[11,R[8],E,E,5,[[["self"]],[R[9]]]],[11,"into",E,E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[4],E,E,6,[[[U]],[R[3]]]],[11,R[5],E,E,6,[[],[R[3]]]],[11,R[7],E,E,6,[[["self"]],[T]]],[11,R[6],E,E,6,[[["self"]],[T]]],[11,R[8],E,E,6,[[["self"]],[R[9]]]],[11,"into",E,E,7,[[],[U]]],[11,R[113],E,E,7,[[["self"]],["string"]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[4],E,E,7,[[[U]],[R[3]]]],[11,R[5],E,E,7,[[],[R[3]]]],[11,R[7],E,E,7,[[["self"]],[T]]],[11,R[6],E,E,7,[[["self"]],[T]]],[11,R[8],E,E,7,[[["self"]],[R[9]]]],[11,"into",E,E,8,[[],[U]]],[11,R[113],E,E,8,[[["self"]],["string"]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[4],E,E,8,[[[U]],[R[3]]]],[11,R[5],E,E,8,[[],[R[3]]]],[11,R[7],E,E,8,[[["self"]],[T]]],[11,R[6],E,E,8,[[["self"]],[T]]],[11,R[8],E,E,8,[[["self"]],[R[9]]]],[11,"into",E,E,0,[[],[U]]],[11,R[113],E,E,0,[[["self"]],["string"]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[46],E,E,0,[[["self"]],[T]]],[11,R[47],E,E,0,[[["self"],[T]]]],[11,R[4],E,E,0,[[[U]],[R[3]]]],[11,R[5],E,E,0,[[],[R[3]]]],[11,R[7],E,E,0,[[["self"]],[T]]],[11,R[6],E,E,0,[[["self"]],[T]]],[11,R[8],E,E,0,[[["self"]],[R[9]]]],[11,"into",E,E,1,[[],[U]]],[11,R[113],E,E,1,[[["self"]],["string"]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[46],E,E,1,[[["self"]],[T]]],[11,R[47],E,E,1,[[["self"],[T]]]],[11,R[4],E,E,1,[[[U]],[R[3]]]],[11,R[5],E,E,1,[[],[R[3]]]],[11,R[7],E,E,1,[[["self"]],[T]]],[11,R[6],E,E,1,[[["self"]],[T]]],[11,R[8],E,E,1,[[["self"]],[R[9]]]],[11,"clone",E,E,0,[[["self"]],["level"]]],[11,"clone",E,E,1,[[["self"]],[R[729]]]],[11,"clone",E,E,3,[[["self"]],["record"]]],[11,"clone",E,E,5,[[["self"]],[R[731]]]],[11,R[77],E,E,0,[[["self"],["level"]],[[R[50]],[R[23],[R[50]]]]]],[11,"lt",E,E,0,[[["self"],["level"]],["bool"]]],[11,"le",E,E,0,[[["self"],["level"]],["bool"]]],[11,"gt",E,E,0,[[["self"],["level"]],["bool"]]],[11,"ge",E,E,0,[[["self"],["level"]],["bool"]]],[11,R[77],E,E,0,[[["self"],[R[729]]],[[R[50]],[R[23],[R[50]]]]]],[11,"lt",E,E,0,[[["self"],[R[729]]],["bool"]]],[11,"le",E,E,0,[[["self"],[R[729]]],["bool"]]],[11,"gt",E,E,0,[[["self"],[R[729]]],["bool"]]],[11,"ge",E,E,0,[[["self"],[R[729]]],["bool"]]],[11,R[77],E,E,1,[[["self"],[R[729]]],[[R[50]],[R[23],[R[50]]]]]],[11,"lt",E,E,1,[[["self"],[R[729]]],["bool"]]],[11,"le",E,E,1,[[["self"],[R[729]]],["bool"]]],[11,"gt",E,E,1,[[["self"],[R[729]]],["bool"]]],[11,"ge",E,E,1,[[["self"],[R[729]]],["bool"]]],[11,R[77],E,E,1,[[["self"],["level"]],[[R[50]],[R[23],[R[50]]]]]],[11,"lt",E,E,1,[[["self"],["level"]],["bool"]]],[11,"le",E,E,1,[[["self"],["level"]],["bool"]]],[11,"gt",E,E,1,[[["self"],["level"]],["bool"]]],[11,"ge",E,E,1,[[["self"],["level"]],["bool"]]],[11,R[77],E,E,5,[[["self"],[R[731]]],[[R[50]],[R[23],[R[50]]]]]],[11,"lt",E,E,5,[[["self"],[R[731]]],["bool"]]],[11,"le",E,E,5,[[["self"],[R[731]]],["bool"]]],[11,"gt",E,E,5,[[["self"],[R[731]]],["bool"]]],[11,"ge",E,E,5,[[["self"],[R[731]]],["bool"]]],[11,R[77],E,E,6,[[["self"],[R[741]]],[[R[50]],[R[23],[R[50]]]]]],[11,"lt",E,E,6,[[["self"],[R[741]]],["bool"]]],[11,"le",E,E,6,[[["self"],[R[741]]],["bool"]]],[11,"gt",E,E,6,[[["self"],[R[741]]],["bool"]]],[11,"ge",E,E,6,[[["self"],[R[741]]],["bool"]]],[11,"cmp",E,E,0,[[["self"],["level"]],[R[50]]]],[11,"cmp",E,E,1,[[["self"],[R[729]]],[R[50]]]],[11,"cmp",E,E,5,[[["self"],[R[731]]],[R[50]]]],[11,"cmp",E,E,6,[[["self"],[R[741]]],[R[50]]]],[11,"eq",E,E,0,[[["self"],["level"]],["bool"]]],[11,"eq",E,E,0,[[["self"],[R[729]]],["bool"]]],[11,"eq",E,E,1,[[["self"],[R[729]]],["bool"]]],[11,"eq",E,E,1,[[["self"],["level"]],["bool"]]],[11,"eq",E,E,5,[[["self"],[R[731]]],["bool"]]],[11,"ne",E,E,5,[[["self"],[R[731]]],["bool"]]],[11,"eq",E,E,6,[[["self"],[R[741]]],["bool"]]],[11,"ne",E,E,6,[[["self"],[R[741]]],["bool"]]],[11,"eq",E,E,8,[[["self"],[R[742]]],["bool"]]],[11,"ne",E,E,8,[[["self"],[R[742]]],["bool"]]],[11,"hash",E,E,0,[[["self"],["__h"]]]],[11,"hash",E,E,1,[[["self"],["__h"]]]],[11,"hash",E,E,5,[[["self"],["__h"]]]],[11,"hash",E,E,6,[[["self"],["__h"]]]],[11,"fmt",E,E,0,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,1,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,3,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,4,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,5,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,6,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,7,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,8,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,0,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,1,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,7,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,8,[[["self"],[R[10]]],[R[3]]]],[11,R[775],E,E,0,[[["str"]],[[R[3],["level"]],["level"]]]],[11,R[775],E,E,1,[[["str"]],[[R[729]],[R[3],[R[729]]]]]],[11,R[157],E,E,7,[[["self"]],["str"]]],[11,R[157],E,E,8,[[["self"]],["str"]]]],"p":[[4,"Level"],[4,R[743]],[8,"Log"],[3,"Record"],[3,R[744]],[3,"Metadata"],[3,R[745]],[3,R[746]],[3,R[747]]]};
searchIndex["memchr"]={"doc":"The `memchr` crate provides heavily optimized routines for…","i":[[3,"Memchr","memchr","An iterator for `memchr`.",N,N],[3,"Memchr2",E,"An iterator for `memchr2`.",N,N],[3,"Memchr3",E,"An iterator for `memchr3`.",N,N],[5,"memchr_iter",E,R[834],N,[[["u8"]],["memchr"]]],[5,"memchr2_iter",E,R[833],N,[[["u8"]],["memchr2"]]],[5,"memchr3_iter",E,R[833],N,[[["u8"]],["memchr3"]]],[5,"memrchr_iter",E,R[834],N,[[["u8"]],[["memchr"],["rev",["memchr"]]]]],[5,"memrchr2_iter",E,R[833],N,[[["u8"]],[["memchr2"],["rev",["memchr2"]]]]],[5,"memrchr3_iter",E,R[833],N,[[["u8"]],[["rev",["memchr3"]],["memchr3"]]]],[5,"memchr",E,"Search for the first occurrence of a byte in a slice.",N,[[["u8"]],[[R[23],["usize"]],["usize"]]]],[5,"memchr2",E,"Like `memchr`, but searches for two bytes instead of one.",N,[[["u8"]],[[R[23],["usize"]],["usize"]]]],[5,"memchr3",E,"Like `memchr`, but searches for three bytes instead of one.",N,[[["u8"]],[[R[23],["usize"]],["usize"]]]],[5,"memrchr",E,"Search for the last occurrence of a byte in a slice.",N,[[["u8"]],[[R[23],["usize"]],["usize"]]]],[5,"memrchr2",E,"Like `memrchr`, but searches for two bytes instead of one.",N,[[["u8"]],[[R[23],["usize"]],["usize"]]]],[5,"memrchr3",E,"Like `memrchr`, but searches for three bytes instead of one.",N,[[["u8"]],[[R[23],["usize"]],["usize"]]]],[11,"new",E,R[835],0,[[["u8"]],["memchr"]]],[11,"new",E,R[835],1,[[["u8"]],["memchr2"]]],[11,"new",E,"Create a new `Memchr3` that's initialized to zero with a…",2,[[["u8"]],["memchr3"]]],[11,"into",E,E,0,[[],[U]]],[11,R[45],E,E,0,[[],["i"]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[4],E,E,0,[[[U]],[R[3]]]],[11,R[5],E,E,0,[[],[R[3]]]],[11,R[7],E,E,0,[[["self"]],[T]]],[11,R[6],E,E,0,[[["self"]],[T]]],[11,R[8],E,E,0,[[["self"]],[R[9]]]],[11,"into",E,E,1,[[],[U]]],[11,R[45],E,E,1,[[],["i"]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[4],E,E,1,[[[U]],[R[3]]]],[11,R[5],E,E,1,[[],[R[3]]]],[11,R[7],E,E,1,[[["self"]],[T]]],[11,R[6],E,E,1,[[["self"]],[T]]],[11,R[8],E,E,1,[[["self"]],[R[9]]]],[11,"into",E,E,2,[[],[U]]],[11,R[45],E,E,2,[[],["i"]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[4],E,E,2,[[[U]],[R[3]]]],[11,R[5],E,E,2,[[],[R[3]]]],[11,R[7],E,E,2,[[["self"]],[T]]],[11,R[6],E,E,2,[[["self"]],[T]]],[11,R[8],E,E,2,[[["self"]],[R[9]]]],[11,R[52],E,E,0,[[["self"]],[R[23]]]],[11,R[52],E,E,1,[[["self"]],[R[23]]]],[11,R[52],E,E,2,[[["self"]],[R[23]]]],[11,"next",E,E,0,[[["self"]],[[R[23],["usize"]],["usize"]]]],[11,R[53],E,E,0,[[["self"]]]],[11,"next",E,E,1,[[["self"]],[[R[23],["usize"]],["usize"]]]],[11,R[53],E,E,1,[[["self"]]]],[11,"next",E,E,2,[[["self"]],[[R[23],["usize"]],["usize"]]]],[11,R[53],E,E,2,[[["self"]]]]],"p":[[3,"Memchr"],[3,"Memchr2"],[3,"Memchr3"]]};
searchIndex["memmap"]={"doc":"A cross-platform Rust API for memory mapped buffers.","i":[[3,R[1202],"memmap","A memory map builder, providing advanced options and flags…",N,N],[3,"Mmap",E,"An immutable memory mapped buffer.",N,N],[3,"MmapMut",E,"A mutable memory mapped buffer.",N,N],[11,"new",E,"Creates a new set of options for configuring and creating…",0,[[],[R[1201]]]],[11,"offset",E,"Configures the memory map to start at byte `offset` from…",0,[[["self"],["u64"]],["self"]]],[11,"len",E,"Configures the created memory mapped buffer to be `len`…",0,[[["self"],["usize"]],["self"]]],[11,"stack",E,"Configures the anonymous memory map to be suitable for a…",0,[[["self"]],["self"]]],[11,"map",E,R[1197],0,[[["self"],["file"]],[["mmap"],[R[3],["mmap"]]]]],[11,"map_exec",E,"Creates a readable and executable memory map backed by a…",0,[[["self"],["file"]],[["mmap"],[R[3],["mmap"]]]]],[11,"map_mut",E,R[1198],0,[[["self"],["file"]],[[R[3],["mmapmut"]],["mmapmut"]]]],[11,"map_copy",E,"Creates a copy-on-write memory map backed by a file.",0,[[["self"],["file"]],[[R[3],["mmapmut"]],["mmapmut"]]]],[11,"map_anon",E,R[1199],0,[[["self"]],[[R[3],["mmapmut"]],["mmapmut"]]]],[11,"map",E,R[1197],1,[[["file"]],[["mmap"],[R[3],["mmap"]]]]],[11,"make_mut",E,"Transition the memory map to be writable.",1,[[],[[R[3],["mmapmut"]],["mmapmut"]]]],[11,"map_mut",E,R[1198],2,[[["file"]],[[R[3],["mmapmut"]],["mmapmut"]]]],[11,"map_anon",E,R[1199],2,[[["usize"]],[[R[3],["mmapmut"]],["mmapmut"]]]],[11,"flush",E,"Flushes outstanding memory map modifications to disk.",2,[[["self"]],[R[3]]]],[11,"flush_async",E,R[1200],2,[[["self"]],[R[3]]]],[11,"flush_range",E,"Flushes outstanding memory map modifications in the range…",2,[[["self"],["usize"]],[R[3]]]],[11,"flush_async_range",E,R[1200],2,[[["self"],["usize"]],[R[3]]]],[11,"make_read_only",E,"Returns an immutable version of this memory mapped buffer.",2,[[],[["mmap"],[R[3],["mmap"]]]]],[11,"make_exec",E,"Transition the memory map to be readable and executable.",2,[[],[["mmap"],[R[3],["mmap"]]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[46],E,E,0,[[["self"]],[T]]],[11,R[47],E,E,0,[[["self"],[T]]]],[11,R[4],E,E,0,[[[U]],[R[3]]]],[11,R[5],E,E,0,[[],[R[3]]]],[11,R[7],E,E,0,[[["self"]],[T]]],[11,R[6],E,E,0,[[["self"]],[T]]],[11,R[8],E,E,0,[[["self"]],[R[9]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[4],E,E,1,[[[U]],[R[3]]]],[11,R[5],E,E,1,[[],[R[3]]]],[11,R[7],E,E,1,[[["self"]],[T]]],[11,R[6],E,E,1,[[["self"]],[T]]],[11,R[8],E,E,1,[[["self"]],[R[9]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[4],E,E,2,[[[U]],[R[3]]]],[11,R[5],E,E,2,[[],[R[3]]]],[11,R[7],E,E,2,[[["self"]],[T]]],[11,R[6],E,E,2,[[["self"]],[T]]],[11,R[8],E,E,2,[[["self"]],[R[9]]]],[11,"as_ref",E,E,1,[[["self"]]]],[11,"as_ref",E,E,2,[[["self"]]]],[11,R[83],E,E,0,[[],[R[1201]]]],[11,"clone",E,E,0,[[["self"]],[R[1201]]]],[11,"as_mut",E,E,2,[[["self"]]]],[11,"deref",E,E,1,[[["self"]]]],[11,"deref",E,E,2,[[["self"]]]],[11,R[17],E,E,2,[[["self"]]]],[11,"fmt",E,E,0,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,1,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,2,[[["self"],[R[10]]],[R[3]]]]],"p":[[3,R[1202]],[3,"Mmap"],[3,"MmapMut"]]};
searchIndex["memoffset"]={"doc":"A crate used for calculating offsets of struct members and…","i":[[14,"offset_of","memoffset","Calculates the offset of the specified field from the…",N,N],[14,"span_of",E,"Produces a range instance representing the sub-slice…",N,N]],"p":[]};
searchIndex["nix"]={"doc":"Rust friendly bindings to the various *nix system functions.","i":[[4,"Error","nix","Nix Error Type",N,N],[13,"Sys",E,E,0,N],[13,"InvalidPath",E,E,0,N],[13,R[1552],E,"The operation involved a conversion to Rust's native…",0,N],[13,"UnsupportedOperation",E,"The operation is not supported by Nix, in this instance…",0,N],[0,"dir",E,E,N,N],[3,"Dir",R[1496],"An open directory.",N,N],[3,"Iter",E,E,N,N],[3,"Entry",E,"A directory entry, similar to `std::fs::DirEntry`.",N,N],[4,"Type",E,E,N,N],[13,"Fifo",E,E,1,N],[13,"CharacterDevice",E,E,1,N],[13,"Directory",E,E,1,N],[13,"BlockDevice",E,E,1,N],[13,"File",E,E,1,N],[13,"Symlink",E,E,1,N],[13,"Socket",E,E,1,N],[11,"open",E,"Opens the given path as with `fcntl::open`.",2,[[["mode"],["p"],["oflag"]],[R[3]]]],[11,"openat",E,"Opens the given path as with `fcntl::openat`.",2,[[["p"],["mode"],["rawfd"],["oflag"]],[R[3]]]],[11,"from",E,"Converts from a descriptor-based object, closing the…",2,[[["intorawfd"]],[R[3]]]],[11,"from_fd",E,"Converts from a file descriptor, closing it on success or…",2,[[["rawfd"]],[R[3]]]],[11,"iter",E,"Returns an iterator of `Result<Entry>` which rewinds when…",2,[[["self"]],["iter"]]],[11,"ino",E,"Returns the inode number (`d_ino`) of the underlying…",3,[[["self"]],["u64"]]],[11,"file_name",E,"Returns the bare file name of this directory entry without…",3,[[["self"]],["cstr"]]],[11,"file_type",E,"Returns the type of this directory entry, if known.",3,[[["self"]],[["type"],[R[23],["type"]]]]],[0,"errno","nix",E,N,N],[4,"Errno",R[1463],E,N,N],[13,"UnknownErrno",E,E,4,N],[13,"EPERM",E,E,4,N],[13,"ENOENT",E,E,4,N],[13,"ESRCH",E,E,4,N],[13,"EINTR",E,E,4,N],[13,"EIO",E,E,4,N],[13,"ENXIO",E,E,4,N],[13,"E2BIG",E,E,4,N],[13,"ENOEXEC",E,E,4,N],[13,"EBADF",E,E,4,N],[13,"ECHILD",E,E,4,N],[13,"EDEADLK",E,E,4,N],[13,"ENOMEM",E,E,4,N],[13,"EACCES",E,E,4,N],[13,"EFAULT",E,E,4,N],[13,"ENOTBLK",E,E,4,N],[13,"EBUSY",E,E,4,N],[13,"EEXIST",E,E,4,N],[13,"EXDEV",E,E,4,N],[13,"ENODEV",E,E,4,N],[13,"ENOTDIR",E,E,4,N],[13,"EISDIR",E,E,4,N],[13,"EINVAL",E,E,4,N],[13,"ENFILE",E,E,4,N],[13,"EMFILE",E,E,4,N],[13,"ENOTTY",E,E,4,N],[13,"ETXTBSY",E,E,4,N],[13,"EFBIG",E,E,4,N],[13,"ENOSPC",E,E,4,N],[13,"ESPIPE",E,E,4,N],[13,"EROFS",E,E,4,N],[13,"EMLINK",E,E,4,N],[13,"EPIPE",E,E,4,N],[13,"EDOM",E,E,4,N],[13,"ERANGE",E,E,4,N],[13,"EAGAIN",E,E,4,N],[13,R[1227],E,E,4,N],[13,"EALREADY",E,E,4,N],[13,"ENOTSOCK",E,E,4,N],[13,R[1228],E,E,4,N],[13,"EMSGSIZE",E,E,4,N],[13,"EPROTOTYPE",E,E,4,N],[13,R[1229],E,E,4,N],[13,R[1230],E,E,4,N],[13,R[1231],E,E,4,N],[13,"ENOTSUP",E,E,4,N],[13,R[1232],E,E,4,N],[13,R[1233],E,E,4,N],[13,"EADDRINUSE",E,E,4,N],[13,R[1234],E,E,4,N],[13,"ENETDOWN",E,E,4,N],[13,R[1235],E,E,4,N],[13,"ENETRESET",E,E,4,N],[13,R[1236],E,E,4,N],[13,"ECONNRESET",E,E,4,N],[13,"ENOBUFS",E,E,4,N],[13,"EISCONN",E,E,4,N],[13,"ENOTCONN",E,E,4,N],[13,"ESHUTDOWN",E,E,4,N],[13,R[1237],E,E,4,N],[13,"ETIMEDOUT",E,E,4,N],[13,R[1238],E,E,4,N],[13,"ELOOP",E,E,4,N],[13,R[1239],E,E,4,N],[13,"EHOSTDOWN",E,E,4,N],[13,R[1240],E,E,4,N],[13,"ENOTEMPTY",E,E,4,N],[13,"EPROCLIM",E,E,4,N],[13,"EUSERS",E,E,4,N],[13,"EDQUOT",E,E,4,N],[13,"ESTALE",E,E,4,N],[13,"EREMOTE",E,E,4,N],[13,"EBADRPC",E,E,4,N],[13,R[1241],E,E,4,N],[13,R[1242],E,E,4,N],[13,R[1243],E,E,4,N],[13,R[1244],E,E,4,N],[13,"ENOLCK",E,E,4,N],[13,"ENOSYS",E,E,4,N],[13,"EFTYPE",E,E,4,N],[13,"EAUTH",E,E,4,N],[13,"ENEEDAUTH",E,E,4,N],[13,"EPWROFF",E,E,4,N],[13,"EDEVERR",E,E,4,N],[13,"EOVERFLOW",E,E,4,N],[13,"EBADEXEC",E,E,4,N],[13,"EBADARCH",E,E,4,N],[13,"ESHLIBVERS",E,E,4,N],[13,"EBADMACHO",E,E,4,N],[13,"ECANCELED",E,E,4,N],[13,"EIDRM",E,E,4,N],[13,"ENOMSG",E,E,4,N],[13,"EILSEQ",E,E,4,N],[13,"ENOATTR",E,E,4,N],[13,"EBADMSG",E,E,4,N],[13,"EMULTIHOP",E,E,4,N],[13,"ENODATA",E,E,4,N],[13,"ENOLINK",E,E,4,N],[13,"ENOSR",E,E,4,N],[13,"ENOSTR",E,E,4,N],[13,"EPROTO",E,E,4,N],[13,"ETIME",E,E,4,N],[13,"EOPNOTSUPP",E,E,4,N],[13,"ENOPOLICY",E,E,4,N],[13,R[1245],E,E,4,N],[13,"EOWNERDEAD",E,E,4,N],[13,"EQFULL",E,E,4,N],[5,"from_i32",E,E,N,[[["i32"]],["errno"]]],[5,"errno",E,"Returns the platform-specific value of errno",N,[[],["i32"]]],[17,"ELAST",E,E,N,N],[17,R[1246],E,E,N,N],[17,"EDEADLOCK",E,E,N,N],[17,"EL2NSYNC",E,E,N,N],[8,R[1509],E,"The sentinel value indicates that a function failed and…",N,N],[10,"sentinel",E,E,5,[[],["self"]]],[11,"last",E,E,4,[[],["self"]]],[11,"desc",E,E,4,[[],["str"]]],[11,"from_i32",E,E,4,[[["i32"]],["errno"]]],[11,"clear",E,E,4,[[]]],[11,R[3],E,"Returns `Ok(value)` if it does not contain the sentinel…",4,[[[R[1247]],["partialeq"]],[[R[1247]],[R[3]],["partialeq"]]]],[0,R[4701],"nix","Feature tests for OS functionality",N,N],[5,"socket_atomic_cloexec","nix::features","Check if the OS supports atomic close-on-exec for sockets",N,[[],["bool"]]],[0,"fcntl","nix",E,N,N],[3,"AtFlags",R[1462],E,N,N],[3,"OFlag",E,"Configuration options for opened files.",N,N],[3,"FdFlag",E,"Additional configuration flags for `fcntl`'s `F_SETFD`.",N,N],[4,"FcntlArg",E,E,N,N],[13,"F_DUPFD",E,E,6,N],[13,R[1248],E,E,6,N],[13,"F_GETFD",E,E,6,N],[13,"F_SETFD",E,E,6,N],[13,"F_GETFL",E,E,6,N],[13,"F_SETFL",E,E,6,N],[13,"F_SETLK",E,E,6,N],[13,"F_SETLKW",E,E,6,N],[13,"F_GETLK",E,E,6,N],[13,R[1249],E,E,6,N],[4,"FlockArg",E,E,N,N],[13,"LockShared",E,E,7,N],[13,"LockExclusive",E,E,7,N],[13,"Unlock",E,E,7,N],[13,"LockSharedNonblock",E,E,7,N],[13,"LockExclusiveNonblock",E,E,7,N],[13,"UnlockNonblock",E,E,7,N],[5,"open",E,E,N,[[["mode"],["p"],["oflag"]],[["rawfd"],[R[3],["rawfd"]]]]],[5,"openat",E,E,N,[[["p"],["rawfd"],["oflag"],["mode"]],[["rawfd"],[R[3],["rawfd"]]]]],[5,"renameat",E,E,N,[[[R[23],["rawfd"]],["p2"],["rawfd"],["p1"]],[R[3]]]],[5,"readlink",E,E,N,[[["p"]],[[R[3],["osstr"]],["osstr"]]]],[5,"readlinkat",E,E,N,[[["rawfd"],["p"]],[[R[3],["osstr"]],["osstr"]]]],[5,"fcntl",E,E,N,[[["rawfd"],["fcntlarg"]],[[R[3],["c_int"]],["c_int"]]]],[5,"flock",E,E,N,[[["rawfd"],["flockarg"]],[R[3]]]],[18,R[1250],E,E,8,N],[18,R[1251],E,E,8,N],[11,"empty",E,R[1253],8,[[],["atflags"]]],[11,"all",E,R[1254],8,[[],["atflags"]]],[11,"bits",E,R[1255],8,[[["self"]],["c_int"]]],[11,R[1283],E,R[1256],8,[[["c_int"]],[["atflags"],[R[23],["atflags"]]]]],[11,R[1257],E,R[1258],8,[[["c_int"]],["atflags"]]],[11,R[25],E,R[1259],8,[[["self"]],["bool"]]],[11,"is_all",E,R[1260],8,[[["self"]],["bool"]]],[11,R[1267],E,R[1261],8,[[["self"],["atflags"]],["bool"]]],[11,R[1285],E,R[1262],8,[[["self"],["atflags"]],["bool"]]],[11,"insert",E,R[1263],8,[[["self"],["atflags"]]]],[11,"remove",E,R[1264],8,[[["self"],["atflags"]]]],[11,"toggle",E,R[1265],8,[[["self"],["atflags"]]]],[11,"set",E,R[1266],8,[[["self"],["atflags"],["bool"]]]],[18,"O_ACCMODE",E,"Mask for the access mode of the file.",9,N],[18,"O_APPEND",E,"Open the file in append-only mode.",9,N],[18,"O_ASYNC",E,"Generate a signal when input or output becomes possible.",9,N],[18,"O_CLOEXEC",E,"Closes the file descriptor once an `execve` call is made.",9,N],[18,"O_CREAT",E,"Create the file if it does not exist.",9,N],[18,R[1252],E,"If the specified path isn't a directory, fail.",9,N],[18,"O_DSYNC",E,"Implicitly follow each `write()` with an `fdatasync()`.",9,N],[18,"O_EXCL",E,"Error out if a file was not created.",9,N],[18,"O_EXLOCK",E,"Open with an exclusive file lock.",9,N],[18,"O_FSYNC",E,"Same as `O_SYNC`.",9,N],[18,"O_NOCTTY",E,"Don't attach the device as the process' controlling…",9,N],[18,"O_NDELAY",E,"Same as `O_NONBLOCK`.",9,N],[18,"O_NOFOLLOW",E,"`open()` will fail if the given path is a symbolic link.",9,N],[18,"O_NONBLOCK",E,"When possible, open the file in nonblocking mode.",9,N],[18,"O_RDONLY",E,"Only allow reading.",9,N],[18,"O_RDWR",E,"Allow both reading and writing.",9,N],[18,"O_SHLOCK",E,"Open with a shared file lock.",9,N],[18,"O_SYNC",E,"Implicitly follow each `write()` with an `fsync()`.",9,N],[18,"O_TRUNC",E,"Truncate an existing regular file to 0 length if it allows…",9,N],[18,"O_WRONLY",E,"Only allow writing.",9,N],[11,"empty",E,R[1253],9,[[],["oflag"]]],[11,"all",E,R[1254],9,[[],["oflag"]]],[11,"bits",E,R[1255],9,[[["self"]],["c_int"]]],[11,R[1283],E,R[1256],9,[[["c_int"]],[[R[23],["oflag"]],["oflag"]]]],[11,R[1257],E,R[1258],9,[[["c_int"]],["oflag"]]],[11,R[25],E,R[1259],9,[[["self"]],["bool"]]],[11,"is_all",E,R[1260],9,[[["self"]],["bool"]]],[11,R[1267],E,R[1261],9,[[["self"],["oflag"]],["bool"]]],[11,R[1285],E,R[1262],9,[[["self"],["oflag"]],["bool"]]],[11,"insert",E,R[1263],9,[[["self"],["oflag"]]]],[11,"remove",E,R[1264],9,[[["self"],["oflag"]]]],[11,"toggle",E,R[1265],9,[[["self"],["oflag"]]]],[11,"set",E,R[1266],9,[[["self"],["oflag"],["bool"]]]],[18,"FD_CLOEXEC",E,"The file descriptor will automatically be closed during a…",10,N],[11,"empty",E,R[1253],10,[[],["fdflag"]]],[11,"all",E,R[1254],10,[[],["fdflag"]]],[11,"bits",E,R[1255],10,[[["self"]],["c_int"]]],[11,R[1283],E,R[1256],10,[[["c_int"]],[["fdflag"],[R[23],["fdflag"]]]]],[11,R[1257],E,R[1258],10,[[["c_int"]],["fdflag"]]],[11,R[25],E,R[1259],10,[[["self"]],["bool"]]],[11,"is_all",E,R[1260],10,[[["self"]],["bool"]]],[11,R[1267],E,R[1261],10,[[["self"],["fdflag"]],["bool"]]],[11,R[1285],E,R[1262],10,[[["self"],["fdflag"]],["bool"]]],[11,"insert",E,R[1263],10,[[["self"],["fdflag"]]]],[11,"remove",E,R[1264],10,[[["self"],["fdflag"]]]],[11,"toggle",E,R[1265],10,[[["self"],["fdflag"]]]],[11,"set",E,R[1266],10,[[["self"],["bool"],["fdflag"]]]],[0,"ifaddrs","nix","Query network interface addresses",N,N],[3,R[1510],R[1437],"Describes a single address for an interface as returned by…",N,N],[12,"interface_name",E,"Name of the network interface",11,N],[12,"flags",E,"Flags as from `SIOCGIFFLAGS` ioctl",11,N],[12,"address",E,"Network address of this interface",11,N],[12,"netmask",E,"Netmask of this interface",11,N],[12,"broadcast",E,"Broadcast address of this interface, if applicable",11,N],[12,R[4969],E,"Point-to-point destination address",11,N],[3,R[1536],E,"Holds the results of `getifaddrs`.",N,N],[5,"getifaddrs",E,"Get interface addresses using libc's `getifaddrs`",N,[[],[[R[1268]],[R[3],[R[1268]]]]]],[0,"net","nix","Functionality involving network interfaces",N,N],[0,"if_","nix::net","Network interface name resolution.",N,N],[3,R[1511],R[1438],"Standard interface flags, used by `getifaddrs`",N,N],[5,R[1269],E,"Resolve an interface into a interface number.",N,[[["p"]],[[R[3],["c_uint"]],["c_uint"]]]],[18,"IFF_UP",E,"Interface is running. (see `netdevice(7)`)",12,N],[18,R[1270],E,"Valid broadcast address set. (see `netdevice(7)`)",12,N],[18,"IFF_DEBUG",E,"Internal debugging flag. (see `netdevice(7)`)",12,N],[18,R[1271],E,"Interface is a loopback interface. (see `netdevice(7)`)",12,N],[18,R[1272],E,"Interface is a point-to-point link. (see `netdevice(7)`)",12,N],[18,R[1273],E,"Avoid use of trailers. (see `netdevice(7)`)",12,N],[18,R[1274],E,"Resources allocated. (see `netdevice(7)`)",12,N],[18,"IFF_NOARP",E,"No arp protocol, L2 destination address not set. (see…",12,N],[18,R[1275],E,"Interface is in promiscuous mode. (see `netdevice(7)`)",12,N],[18,R[1276],E,"Receive all multicast packets. (see `netdevice(7)`)",12,N],[18,R[1277],E,"transmission in progress, tx hardware queue is full",12,N],[18,R[1278],E,"Can't hear own transmissions.",12,N],[18,R[1279],E,"Supports multicast. (see `netdevice(7)`)",12,N],[18,"IFF_LINK0",E,R[1280],12,N],[18,"IFF_LINK1",E,R[1280],12,N],[18,"IFF_LINK2",E,R[1280],12,N],[18,R[1281],E,"Use alternate physical connection.",12,N],[11,"empty",E,R[1253],12,[[],[R[1282]]]],[11,"all",E,R[1254],12,[[],[R[1282]]]],[11,"bits",E,R[1255],12,[[["self"]],["c_int"]]],[11,R[1283],E,R[1256],12,[[["c_int"]],[[R[23],[R[1282]]],[R[1282]]]]],[11,R[1257],E,R[1258],12,[[["c_int"]],[R[1282]]]],[11,R[25],E,R[1259],12,[[["self"]],["bool"]]],[11,"is_all",E,R[1260],12,[[["self"]],["bool"]]],[11,R[1267],E,R[1261],12,[[["self"],[R[1282]]],["bool"]]],[11,R[1285],E,R[1262],12,[[["self"],[R[1282]]],["bool"]]],[11,"insert",E,R[1263],12,[[["self"],[R[1282]]]]],[11,"remove",E,R[1264],12,[[["self"],[R[1282]]]]],[11,"toggle",E,R[1265],12,[[["self"],[R[1282]]]]],[11,"set",E,R[1266],12,[[["self"],[R[1282]],["bool"]]]],[0,"poll","nix","Wait for events to trigger on specific file descriptors",N,N],[3,"PollFd",R[1464],"This is a wrapper around `libc::pollfd`.",N,N],[3,"PollFlags",E,"These flags define the different events that can be…",N,N],[5,"poll",E,"`poll` waits for one of a set of file descriptors to…",N,[[["c_int"]],[["c_int"],[R[3],["c_int"]]]]],[11,"new",E,"Creates a new `PollFd` specifying the events of interest…",13,[[["rawfd"],[R[1284]]],["pollfd"]]],[11,"revents",E,"Returns the events that occured in the last call to `poll`…",13,[[["self"]],[[R[23],[R[1284]]],[R[1284]]]]],[18,"POLLIN",E,"There is data to read.",14,N],[18,"POLLPRI",E,"There is some exceptional condition on the file descriptor.",14,N],[18,"POLLOUT",E,"Writing is now possible, though a write larger that the…",14,N],[18,"POLLRDNORM",E,"Equivalent to `POLLIN`",14,N],[18,"POLLWRNORM",E,"Equivalent to `POLLOUT`",14,N],[18,"POLLRDBAND",E,"Priority band data can be read (generally unused on Linux).",14,N],[18,"POLLWRBAND",E,"Priority data may be written.",14,N],[18,"POLLERR",E,"Error condition (only returned in `PollFd::revents`;…",14,N],[18,"POLLHUP",E,"Hang up (only returned in `PollFd::revents`; ignored in…",14,N],[18,"POLLNVAL",E,"Invalid request: `fd` not open (only returned in…",14,N],[11,"empty",E,R[1253],14,[[],[R[1284]]]],[11,"all",E,R[1254],14,[[],[R[1284]]]],[11,"bits",E,R[1255],14,[[["self"]],["c_short"]]],[11,R[1283],E,R[1256],14,[[["c_short"]],[[R[23],[R[1284]]],[R[1284]]]]],[11,R[1257],E,R[1258],14,[[["c_short"]],[R[1284]]]],[11,R[25],E,R[1259],14,[[["self"]],["bool"]]],[11,"is_all",E,R[1260],14,[[["self"]],["bool"]]],[11,R[1267],E,R[1261],14,[[["self"],[R[1284]]],["bool"]]],[11,R[1285],E,R[1262],14,[[["self"],[R[1284]]],["bool"]]],[11,"insert",E,R[1263],14,[[["self"],[R[1284]]]]],[11,"remove",E,R[1264],14,[[["self"],[R[1284]]]]],[11,"toggle",E,R[1265],14,[[["self"],[R[1284]]]]],[11,"set",E,R[1266],14,[[["self"],[R[1284]],["bool"]]]],[0,"pty","nix","Create master and slave virtual pseudo-terminals (PTYs)",N,N],[6,"SessionId",R[1465],E,N,N],[3,"Winsize",E,E,N,N],[12,"ws_row",E,E,15,N],[12,"ws_col",E,E,15,N],[12,"ws_xpixel",E,E,15,N],[12,"ws_ypixel",E,E,15,N],[3,R[1512],E,"Representation of a master/slave pty pair",N,N],[12,"master",E,R[1286],16,N],[12,"slave",E,"The slave port in a virtual pty pair",16,N],[3,R[1513],E,"Representation of a master with a forked pty",N,N],[12,"master",E,R[1286],17,N],[12,"fork_result",E,"Metadata about forked process",17,N],[3,"PtyMaster",E,"Representation of the Master device in a master/slave pty…",N,N],[5,"grantpt",E,"Grant access to a slave pseudoterminal (see `grantpt(3)`)",N,[[[R[1288]]],[R[3]]]],[5,R[1287],E,"Open a pseudoterminal device (see `posix_openpt(3)`)",N,[[["oflag"]],[[R[3],[R[1288]]],[R[1288]]]]],[5,"ptsname",E,"Get the name of the slave pseudoterminal (see `ptsname(3)`)",N,[[[R[1288]]],[[R[3],["string"]],["string"]]]],[5,"unlockpt",E,"Unlock a pseudoterminal master/slave pseudoterminal pair…",N,[[[R[1288]]],[R[3]]]],[5,"openpty",E,"Create a new pseudoterminal, returning the slave and…",N,[[[R[23],["winsize"]],["into",[R[23]]],["into",[R[23]]],[R[23],["termios"]]],[[R[3],[R[1289]]],[R[1289]]]]],[5,"forkpty",E,"Create a new pseudoterminal, returning the master file…",N,[[[R[23],["winsize"]],["into",[R[23]]],["into",[R[23]]],[R[23],["termios"]]],[[R[3],[R[1290]]],[R[1290]]]]],[0,"sched","nix",E,N,N],[5,R[1291],"nix::sched","Explicitly yield the processor to other threads.",N,[[],[R[3]]]],[0,"sys","nix",E,N,N],[0,"aio",R[1358],"POSIX Asynchronous I/O",N,N],[3,"AioCb",R[1439],"AIO Control Block.",N,N],[4,R[1514],E,"Mode for `AioCb::fsync`. Controls whether only data or…",N,N],[13,"O_SYNC",E,"do it like `fsync`",18,N],[13,"O_DSYNC",E,"on supported operating systems only, do it like `fdatasync`",18,N],[4,"LioOpcode",E,"When used with `lio_listio`, determines whether a given…",N,N],[13,"LIO_NOP",E,E,19,N],[13,"LIO_WRITE",E,E,19,N],[13,"LIO_READ",E,E,19,N],[4,"LioMode",E,"Mode for `lio_listio`",N,N],[13,"LIO_WAIT",E,"Requests that `lio_listio` block until all requested…",20,N],[13,"LIO_NOWAIT",E,"Requests that `lio_listio` return immediately",20,N],[4,R[1515],E,"Return values for `AioCb::cancel` and `aio_cancel_all`",N,N],[13,"AioCanceled",E,"All outstanding requests were canceled",21,N],[13,"AioNotCanceled",E,"Some requests were not canceled. Their status should be…",21,N],[13,"AioAllDone",E,"All of the requests have already finished",21,N],[4,"Buffer",E,"Owns (uniquely or shared) a memory buffer to keep it from…",N,N],[13,"None",E,"No buffer to own.",22,N],[13,"Phantom",E,"Keeps a reference to a slice",22,N],[13,R[57],E,"Generic thing that keeps a buffer from dropping",22,N],[13,"BoxedMutSlice",E,"Generic thing that keeps a mutable buffer from dropping",22,N],[5,"aio_cancel_all",E,"Cancels outstanding AIO requests for a given file…",N,[[["rawfd"]],[[R[3],[R[1292]]],[R[1292]]]]],[5,R[1293],E,"Suspends the calling process until at least one of the…",N,[[[R[23],[R[785]]],[R[785]]],[R[3]]]],[11,"buffer",E,"Remove the inner `Buffer` and return it",23,[[["self"]],["buffer"]]],[11,"boxed_slice",E,"Remove the inner boxed slice, if any, and return it.",23,[[["self"]],[[R[23],["box"]],["box",[R[6]]]]]],[11,"boxed_mut_slice",E,"Remove the inner boxed mutable slice, if any, and return it.",23,[[["self"]],[["box",["borrowmut"]],[R[23],["box"]]]]],[11,"fd",E,"Returns the underlying file descriptor associated with the…",23,[[["self"]],["rawfd"]]],[11,"from_fd",E,"Constructs a new `AioCb` with no associated buffer.",23,[[[R[1295]],["rawfd"],["c_int"]],["aiocb"]]],[11,R[1294],E,"Constructs a new `AioCb` from a mutable slice.",23,[[[R[1295]],[R[1296]],["rawfd"],["off_t"],["c_int"]],["aiocb"]]],[11,"from_boxed_slice",E,"The safest and most flexible way to create an `AioCb`.",23,[[[R[1295]],[R[1296]],["box",[R[6]]],[R[6]],["rawfd"],["off_t"],["c_int"]],["aiocb"]]],[11,"from_boxed_mut_slice",E,"The safest and most flexible way to create an `AioCb` for…",23,[[["borrowmut"],["box",["borrowmut"]],[R[1295]],[R[1296]],["rawfd"],["off_t"],["c_int"]],["aiocb"]]],[11,"from_mut_ptr",E,"Constructs a new `AioCb` from a mutable raw pointer",23,[[["c_int"],[R[1295]],["usize"],[R[1296]],["rawfd"],["off_t"]],["aiocb"]]],[11,"from_ptr",E,"Constructs a new `AioCb` from a raw pointer.",23,[[[R[1295]],[R[1296]],["usize"],["rawfd"],["off_t"],["c_int"]],["aiocb"]]],[11,R[121],E,"Like `from_mut_slice`, but works on constant slices rather…",23,[[[R[1295]],[R[1296]],["rawfd"],["off_t"],["c_int"]],["aiocb"]]],[11,"set_sigev_notify",E,"Update the notification settings for an existing `aiocb`",23,[[["self"],[R[1295]]]]],[11,"cancel",E,"Cancels an outstanding AIO request.",23,[[["self"]],[[R[3],[R[1292]]],[R[1292]]]]],[11,"error",E,"Retrieve error status of an asynchronous operation.",23,[[["self"]],[R[3]]]],[11,"fsync",E,"An asynchronous version of `fsync(2)`.",23,[[["self"],[R[1466]]],[R[3]]]],[11,"lio_opcode",E,"Returns the `aiocb`'s `LioOpcode` field",23,[[["self"]],[[R[23],[R[1296]]],[R[1296]]]]],[11,"nbytes",E,"Returns the requested length of the aio operation in bytes",23,[[["self"]],["usize"]]],[11,"offset",E,"Returns the file offset stored in the `AioCb`",23,[[["self"]],["off_t"]]],[11,"priority",E,"Returns the priority of the `AioCb`",23,[[["self"]],["c_int"]]],[11,"read",E,"Asynchronously reads from a file descriptor into a buffer",23,[[["self"]],[R[3]]]],[11,R[827],E,"Returns the `SigEvent` stored in the `AioCb`",23,[[["self"]],[R[827]]]],[11,"aio_return",E,"Retrieve return status of an asynchronous operation.",23,[[["self"]],[["isize"],[R[3],["isize"]]]]],[11,"write",E,"Asynchronously writes from a buffer to a file descriptor",23,[[["self"]],[R[3]]]],[0,"event",R[1358],E,N,N],[3,"KEvent",R[1440],E,N,N],[3,"EventFlag",E,E,N,N],[3,"FilterFlag",E,E,N,N],[4,R[1516],E,E,N,N],[13,"EVFILT_AIO",E,E,24,N],[13,"EVFILT_FS",E,E,24,N],[13,R[1297],E,E,24,N],[13,R[1298],E,E,24,N],[13,R[1299],E,E,24,N],[13,R[1300],E,E,24,N],[13,R[1301],E,E,24,N],[13,R[1302],E,E,24,N],[13,"EVFILT_VM",E,E,24,N],[13,R[1303],E,E,24,N],[13,R[1304],E,E,24,N],[5,"kqueue",E,E,N,[[],[["rawfd"],[R[3],["rawfd"]]]]],[5,"kevent",E,E,N,[[["usize"],["rawfd"]],[["usize"],[R[3],["usize"]]]]],[5,"kevent_ts",E,E,N,[[[R[785]],["rawfd"],[R[23],[R[785]]]],[["usize"],[R[3],["usize"]]]]],[5,"ev_set",E,E,N,[[[R[1308]],[R[1332]],["usize"],[R[1331]],["kevent"],["intptr_t"]]]],[6,R[1307],E,E,N,N],[18,"EV_ADD",E,E,25,N],[18,"EV_CLEAR",E,E,25,N],[18,"EV_DELETE",E,E,25,N],[18,"EV_DISABLE",E,E,25,N],[18,R[1305],E,E,25,N],[18,"EV_ENABLE",E,E,25,N],[18,"EV_EOF",E,E,25,N],[18,"EV_ERROR",E,E,25,N],[18,"EV_FLAG0",E,E,25,N],[18,"EV_FLAG1",E,E,25,N],[18,"EV_ONESHOT",E,E,25,N],[18,"EV_OOBAND",E,E,25,N],[18,"EV_POLL",E,E,25,N],[18,"EV_RECEIPT",E,E,25,N],[18,R[1306],E,E,25,N],[11,"empty",E,R[1253],25,[[],[R[1308]]]],[11,"all",E,R[1254],25,[[],[R[1308]]]],[11,"bits",E,R[1255],25,[[["self"]],[R[1307]]]],[11,R[1283],E,R[1256],25,[[[R[1307]]],[[R[1308]],[R[23],[R[1308]]]]]],[11,R[1257],E,R[1258],25,[[[R[1307]]],[R[1308]]]],[11,R[25],E,R[1259],25,[[["self"]],["bool"]]],[11,"is_all",E,R[1260],25,[[["self"]],["bool"]]],[11,R[1267],E,R[1261],25,[[["self"],[R[1308]]],["bool"]]],[11,R[1285],E,R[1262],25,[[["self"],[R[1308]]],["bool"]]],[11,"insert",E,R[1263],25,[[["self"],[R[1308]]]]],[11,"remove",E,R[1264],25,[[["self"],[R[1308]]]]],[11,"toggle",E,R[1265],25,[[["self"],[R[1308]]]]],[11,"set",E,R[1266],25,[[["self"],[R[1308]],["bool"]]]],[18,R[1309],E,E,26,N],[18,R[1310],E,E,26,N],[18,"NOTE_CHILD",E,E,26,N],[18,R[1311],E,E,26,N],[18,"NOTE_EXEC",E,E,26,N],[18,"NOTE_EXIT",E,E,26,N],[18,"NOTE_EXIT_REPARENTED",E,E,26,N],[18,R[1312],E,E,26,N],[18,R[1313],E,E,26,N],[18,"NOTE_FFAND",E,E,26,N],[18,R[1314],E,E,26,N],[18,R[1315],E,E,26,N],[18,R[1316],E,E,26,N],[18,"NOTE_FFNOP",E,E,26,N],[18,"NOTE_FFOR",E,E,26,N],[18,"NOTE_FORK",E,E,26,N],[18,"NOTE_LINK",E,E,26,N],[18,"NOTE_LOWAT",E,E,26,N],[18,"NOTE_NONE",E,E,26,N],[18,R[1317],E,E,26,N],[18,R[1318],E,E,26,N],[18,R[1319],E,E,26,N],[18,"NOTE_REAP",E,E,26,N],[18,R[1320],E,E,26,N],[18,R[1321],E,E,26,N],[18,R[1322],E,E,26,N],[18,R[1323],E,E,26,N],[18,"NOTE_TRACK",E,E,26,N],[18,R[1324],E,E,26,N],[18,R[1325],E,E,26,N],[18,R[1326],E,E,26,N],[18,R[1327],E,E,26,N],[18,R[1328],E,E,26,N],[18,R[1329],E,E,26,N],[18,R[1330],E,E,26,N],[18,"NOTE_WRITE",E,E,26,N],[11,"empty",E,R[1253],26,[[],[R[1331]]]],[11,"all",E,R[1254],26,[[],[R[1331]]]],[11,"bits",E,R[1255],26,[[["self"]],["u32"]]],[11,R[1283],E,R[1256],26,[[["u32"]],[[R[1331]],[R[23],[R[1331]]]]]],[11,R[1257],E,R[1258],26,[[["u32"]],[R[1331]]]],[11,R[25],E,R[1259],26,[[["self"]],["bool"]]],[11,"is_all",E,R[1260],26,[[["self"]],["bool"]]],[11,R[1267],E,R[1261],26,[[["self"],[R[1331]]],["bool"]]],[11,R[1285],E,R[1262],26,[[["self"],[R[1331]]],["bool"]]],[11,"insert",E,R[1263],26,[[["self"],[R[1331]]]]],[11,"remove",E,R[1264],26,[[["self"],[R[1331]]]]],[11,"toggle",E,R[1265],26,[[["self"],[R[1331]]]]],[11,"set",E,R[1266],26,[[["self"],[R[1331]],["bool"]]]],[11,"new",E,E,27,[[[R[1308]],[R[1332]],[R[1331]],["uintptr_t"],["intptr_t"]],["kevent"]]],[11,"ident",E,E,27,[[["self"]],["uintptr_t"]]],[11,"filter",E,E,27,[[["self"]],[R[1332]]]],[11,"flags",E,E,27,[[["self"]],[R[1308]]]],[11,"fflags",E,E,27,[[["self"]],[R[1331]]]],[11,"data",E,E,27,[[["self"]],["intptr_t"]]],[11,"udata",E,E,27,[[["self"]],["intptr_t"]]],[0,"ioctl",R[1358],"Provide helpers for making ioctl system calls.",N,N],[0,"mman",E,E,N,N],[3,"ProtFlags",R[1441],"Desired memory protection of a memory mapping.",N,N],[3,"MapFlags",E,"Additional parameters for `mmap()`.",N,N],[3,"MsFlags",E,"Configuration flags for `msync`.",N,N],[3,R[1517],E,"Flags for `mlockall`.",N,N],[4,"MmapAdvise",E,"Usage information for a range of memory to allow for…",N,N],[13,R[1333],E,"No further special treatment. This is the default.",28,N],[13,R[1334],E,"Expect random page references.",28,N],[13,R[1335],E,"Expect sequential page references.",28,N],[13,R[1336],E,"Expect access in the near future.",28,N],[13,R[1337],E,"Do not expect access in the near future.",28,N],[13,"MADV_FREE",E,"Specify that the application no longer needs the pages in…",28,N],[13,R[1338],E,"Indicates that the application will not need the data in…",28,N],[13,R[1339],E,E,28,N],[13,R[1340],E,E,28,N],[13,R[1341],E,E,28,N],[5,"mlock",E,"Locks all memory pages that contain part of the address…",N,[[["size_t"]],[R[3]]]],[5,"munlock",E,"Unlocks all memory pages that contain part of the address…",N,[[["size_t"]],[R[3]]]],[5,"mlockall",E,"Locks all memory pages mapped into this process' address…",N,[[[R[1351]]],[R[3]]]],[5,"munlockall",E,"Unlocks all memory pages mapped into this process' address…",N,[[],[R[3]]]],[5,"mmap",E,"Calls to mmap are inherently unsafe, so they must be made…",N,[[["off_t"],[R[1346]],["size_t"],[R[1342]],["rawfd"]],[R[3]]]],[5,"munmap",E,E,N,[[["size_t"]],[R[3]]]],[5,"madvise",E,E,N,[[[R[1474]],["size_t"]],[R[3]]]],[5,"mprotect",E,"Set protection of memory mapping.",N,[[[R[1342]],["size_t"]],[R[3]]]],[5,"msync",E,E,N,[[["msflags"],["size_t"]],[R[3]]]],[5,"shm_open",E,E,N,[[["mode"],["p"],["oflag"]],[["rawfd"],[R[3],["rawfd"]]]]],[5,"shm_unlink",E,E,N,[[["p"]],[R[3]]]],[18,"PROT_NONE",E,"Pages cannot be accessed.",29,N],[18,"PROT_READ",E,"Pages can be read.",29,N],[18,"PROT_WRITE",E,"Pages can be written.",29,N],[18,"PROT_EXEC",E,"Pages can be executed",29,N],[11,"empty",E,R[1253],29,[[],[R[1342]]]],[11,"all",E,R[1254],29,[[],[R[1342]]]],[11,"bits",E,R[1255],29,[[["self"]],["c_int"]]],[11,R[1283],E,R[1256],29,[[["c_int"]],[[R[23],[R[1342]]],[R[1342]]]]],[11,R[1257],E,R[1258],29,[[["c_int"]],[R[1342]]]],[11,R[25],E,R[1259],29,[[["self"]],["bool"]]],[11,"is_all",E,R[1260],29,[[["self"]],["bool"]]],[11,R[1267],E,R[1261],29,[[["self"],[R[1342]]],["bool"]]],[11,R[1285],E,R[1262],29,[[["self"],[R[1342]]],["bool"]]],[11,"insert",E,R[1263],29,[[["self"],[R[1342]]]]],[11,"remove",E,R[1264],29,[[["self"],[R[1342]]]]],[11,"toggle",E,R[1265],29,[[["self"],[R[1342]]]]],[11,"set",E,R[1266],29,[[["self"],[R[1342]],["bool"]]]],[18,"MAP_FILE",E,"Compatibility flag. Ignored.",30,N],[18,"MAP_SHARED",E,"Share this mapping. Mutually exclusive with `MAP_PRIVATE`.",30,N],[18,R[1343],E,"Create a private copy-on-write mapping. Mutually exclusive…",30,N],[18,"MAP_FIXED",E,"Place the mapping at exactly the address specified in…",30,N],[18,"MAP_ANON",E,"Synonym for `MAP_ANONYMOUS`.",30,N],[18,R[1344],E,"Do not reserve swap space for this mapping.",30,N],[18,R[1345],E,"Pages in this mapping are not retained in the kernel's…",30,N],[18,"MAP_JIT",E,E,30,N],[11,"empty",E,R[1253],30,[[],[R[1346]]]],[11,"all",E,R[1254],30,[[],[R[1346]]]],[11,"bits",E,R[1255],30,[[["self"]],["c_int"]]],[11,R[1283],E,R[1256],30,[[["c_int"]],[[R[23],[R[1346]]],[R[1346]]]]],[11,R[1257],E,R[1258],30,[[["c_int"]],[R[1346]]]],[11,R[25],E,R[1259],30,[[["self"]],["bool"]]],[11,"is_all",E,R[1260],30,[[["self"]],["bool"]]],[11,R[1267],E,R[1261],30,[[["self"],[R[1346]]],["bool"]]],[11,R[1285],E,R[1262],30,[[["self"],[R[1346]]],["bool"]]],[11,"insert",E,R[1263],30,[[["self"],[R[1346]]]]],[11,"remove",E,R[1264],30,[[["self"],[R[1346]]]]],[11,"toggle",E,R[1265],30,[[["self"],[R[1346]]]]],[11,"set",E,R[1266],30,[[["self"],[R[1346]],["bool"]]]],[18,"MS_ASYNC",E,"Schedule an update but return immediately.",31,N],[18,R[1347],E,"Invalidate all cached data.",31,N],[18,R[1348],E,"Invalidate pages, but leave them mapped.",31,N],[18,R[1349],E,"Deactivate pages, but leave them mapped.",31,N],[18,"MS_SYNC",E,"Perform an update and wait for it to complete.",31,N],[11,"empty",E,R[1253],31,[[],["msflags"]]],[11,"all",E,R[1254],31,[[],["msflags"]]],[11,"bits",E,R[1255],31,[[["self"]],["c_int"]]],[11,R[1283],E,R[1256],31,[[["c_int"]],[[R[23],["msflags"]],["msflags"]]]],[11,R[1257],E,R[1258],31,[[["c_int"]],["msflags"]]],[11,R[25],E,R[1259],31,[[["self"]],["bool"]]],[11,"is_all",E,R[1260],31,[[["self"]],["bool"]]],[11,R[1267],E,R[1261],31,[[["self"],["msflags"]],["bool"]]],[11,R[1285],E,R[1262],31,[[["self"],["msflags"]],["bool"]]],[11,"insert",E,R[1263],31,[[["self"],["msflags"]]]],[11,"remove",E,R[1264],31,[[["self"],["msflags"]]]],[11,"toggle",E,R[1265],31,[[["self"],["msflags"]]]],[11,"set",E,R[1266],31,[[["self"],["bool"],["msflags"]]]],[18,R[1350],E,"Lock pages that are currently mapped into the address…",32,N],[18,"MCL_FUTURE",E,"Lock pages which will become mapped into the address space…",32,N],[11,"empty",E,R[1253],32,[[],[R[1351]]]],[11,"all",E,R[1254],32,[[],[R[1351]]]],[11,"bits",E,R[1255],32,[[["self"]],["c_int"]]],[11,R[1283],E,R[1256],32,[[["c_int"]],[[R[23],[R[1351]]],[R[1351]]]]],[11,R[1257],E,R[1258],32,[[["c_int"]],[R[1351]]]],[11,R[25],E,R[1259],32,[[["self"]],["bool"]]],[11,"is_all",E,R[1260],32,[[["self"]],["bool"]]],[11,R[1267],E,R[1261],32,[[["self"],[R[1351]]],["bool"]]],[11,R[1285],E,R[1262],32,[[["self"],[R[1351]]],["bool"]]],[11,"insert",E,R[1263],32,[[["self"],[R[1351]]]]],[11,"remove",E,R[1264],32,[[["self"],[R[1351]]]]],[11,"toggle",E,R[1265],32,[[["self"],[R[1351]]]]],[11,"set",E,R[1266],32,[[["self"],[R[1351]],["bool"]]]],[0,"pthread",R[1358],E,N,N],[5,R[1352],"nix::sys::pthread","Obtain ID of the calling thread (see `pthread_self(3)`",N,[[],["pthread"]]],[6,"Pthread",E,E,N,N],[0,"ptrace",R[1358],E,N,N],[4,"Request",R[1442],"Ptrace Request enum defining the action to be taken.",N,N],[13,R[1353],E,E,33,N],[13,"PT_READ_I",E,E,33,N],[13,"PT_READ_D",E,E,33,N],[13,"PT_READ_U",E,E,33,N],[13,"PT_WRITE_I",E,E,33,N],[13,"PT_WRITE_D",E,E,33,N],[13,"PT_WRITE_U",E,E,33,N],[13,R[1354],E,E,33,N],[13,"PT_KILL",E,E,33,N],[13,"PT_STEP",E,E,33,N],[13,"PT_ATTACH",E,E,33,N],[13,"PT_DETACH",E,E,33,N],[13,"PT_SIGEXC",E,E,33,N],[13,R[1355],E,E,33,N],[13,R[1356],E,E,33,N],[5,"traceme",E,"Sets the process as traceable, as with `ptrace(PT_TRACEME,…",N,[[],[R[3]]]],[5,"attach",E,"Attach to a running process, as with `ptrace(PT_ATTACH,…",N,[[["pid"]],[R[3]]]],[5,"detach",E,"Detaches the current running process, as with…",N,[[["pid"]],[R[3]]]],[5,"cont",E,"Restart the stopped tracee process, as with…",N,[[["pid"],["into",[R[23]]],[R[23],["signal"]]],[R[3]]]],[5,"kill",E,"Issues a kill request as with `ptrace(PT_KILL, ...)`",N,[[["pid"]],[R[3]]]],[5,"step",E,"Move the stopped tracee process forward by a single step…",N,[[["pid"],["into",[R[23]]],[R[23],["signal"]]],[R[3]]]],[5,"read",E,"Reads a word from a processes memory at the given address",N,[[["pid"],[R[1357]]],[[R[3],["c_int"]],["c_int"]]]],[5,"write",E,"Writes a word into the processes memory at the given address",N,[[["pid"],["c_int"],[R[1357]]],[R[3]]]],[6,"RequestType",E,E,N,N],[0,"select",R[1358],E,N,N],[17,"FD_SETSIZE",R[1443],E,N,N],[3,"FdSet",E,E,N,N],[5,"select",E,"Monitors file descriptors for readiness",N,[[["w"],["n"],["e"],[T],["r"]],[[R[3],["c_int"]],["c_int"]]]],[5,"pselect",E,"Monitors file descriptors for readiness with an altered…",N,[[["w"],["n"],["e"],["s"],[T],["r"]],[[R[3],["c_int"]],["c_int"]]]],[11,"new",E,E,34,[[],["fdset"]]],[11,"insert",E,E,34,[[["self"],["rawfd"]]]],[11,"remove",E,E,34,[[["self"],["rawfd"]]]],[11,R[1285],E,E,34,[[["self"],["rawfd"]],["bool"]]],[11,"clear",E,E,34,[[["self"]]]],[11,"highest",E,"Finds the highest file descriptor in the set.",34,[[["self"]],[["rawfd"],[R[23],["rawfd"]]]]],[0,"sendfile",R[1358],E,N,N],[5,"sendfile","nix::sys::sendfile","Read bytes from `in_fd` starting at `offset` and write up…",N,[[[R[23]],["rawfd"],["off_t"],[R[23],["off_t"]]]]],[0,"signal",R[1358],E,N,N],[3,"SigEvent",R[1362],"Used to request asynchronous notification of the…",N,N],[3,R[1537],E,E,N,N],[3,"SaFlags",E,E,N,N],[3,"SigSet",E,E,N,N],[3,"SigAction",E,"Action to take on receipt of a signal. Corresponds to…",N,N],[4,"Signal",E,E,N,N],[13,"SIGHUP",E,E,35,N],[13,"SIGINT",E,E,35,N],[13,"SIGQUIT",E,E,35,N],[13,"SIGILL",E,E,35,N],[13,"SIGTRAP",E,E,35,N],[13,"SIGABRT",E,E,35,N],[13,"SIGBUS",E,E,35,N],[13,"SIGFPE",E,E,35,N],[13,"SIGKILL",E,E,35,N],[13,"SIGUSR1",E,E,35,N],[13,"SIGSEGV",E,E,35,N],[13,"SIGUSR2",E,E,35,N],[13,"SIGPIPE",E,E,35,N],[13,"SIGALRM",E,E,35,N],[13,"SIGTERM",E,E,35,N],[13,"SIGCHLD",E,E,35,N],[13,"SIGCONT",E,E,35,N],[13,"SIGSTOP",E,E,35,N],[13,"SIGTSTP",E,E,35,N],[13,"SIGTTIN",E,E,35,N],[13,"SIGTTOU",E,E,35,N],[13,"SIGURG",E,E,35,N],[13,"SIGXCPU",E,E,35,N],[13,"SIGXFSZ",E,E,35,N],[13,"SIGVTALRM",E,E,35,N],[13,"SIGPROF",E,E,35,N],[13,"SIGWINCH",E,E,35,N],[13,"SIGIO",E,E,35,N],[13,"SIGSYS",E,E,35,N],[13,"SIGEMT",E,E,35,N],[13,"SIGINFO",E,E,35,N],[4,"SigmaskHow",E,E,N,N],[13,"SIG_BLOCK",E,E,36,N],[13,R[1359],E,E,36,N],[13,R[1360],E,E,36,N],[4,"SigHandler",E,"A signal handler.",N,N],[13,"SigDfl",E,"Default signal handling.",37,N],[13,"SigIgn",E,"Request that the signal be ignored.",37,N],[13,"Handler",E,R[1361],37,N],[13,"SigAction",E,R[1361],37,N],[4,R[1518],E,"Used to request asynchronous notification of certain…",N,N],[13,"SigevNone",E,"No notification will be delivered",38,N],[13,"SigevSignal",E,"The signal given by `signal` will be delivered to the…",38,N],[12,"signal","nix::sys::signal::SigevNotify",E,38,N],[12,"si_value",E,E,38,N],[5,R[782],R[1362],"Changes the action taken by a process on receipt of a…",N,[[["signal"],[R[782]]],[[R[3],[R[782]]],[R[782]]]]],[5,"signal",E,"Signal management (see signal(3p))",N,[[["signal"],[R[1363]]],[[R[1363]],[R[3],[R[1363]]]]]],[5,R[1364],E,"Manages the signal mask (set of blocked signals) for the…",N,[[[R[1369]],["sigset"],[R[23],["sigset"]],[R[23],["sigset"]],["sigset"]],[R[3]]]],[5,R[1365],E,"Examine and change blocked signals.",N,[[[R[1369]],["sigset"],[R[23],["sigset"]],[R[23],["sigset"]],["sigset"]],[R[3]]]],[5,"kill",E,E,N,[[["pid"],["into",[R[23]]],[R[23],["signal"]]],[R[3]]]],[5,"killpg",E,"Send a signal to a process group (see killpg(3)).",N,[[["pid"],["into",[R[23]]],[R[23],["signal"]]],[R[3]]]],[5,"raise",E,E,N,[[["signal"]],[R[3]]]],[11,"new",E,"Note: this constructor does not allow the user to set the…",39,[[[R[1295]]],[R[827]]]],[11,R[827],E,E,39,[[["self"]],[R[827]]]],[17,"NSIG",E,E,N,N],[17,"SIGIOT",E,E,N,N],[17,"SIGPOLL",E,E,N,N],[17,"SIGUNUSED",E,E,N,N],[11,R[3100],E,E,35,[[],[R[1467]]]],[11,"from_c_int",E,E,35,[[["c_int"]],[["signal"],[R[3],["signal"]]]]],[18,R[1366],E,E,40,N],[18,R[1367],E,E,40,N],[18,"SA_NODEFER",E,E,40,N],[18,"SA_ONSTACK",E,E,40,N],[18,R[1368],E,E,40,N],[18,"SA_RESTART",E,E,40,N],[18,"SA_SIGINFO",E,E,40,N],[11,"empty",E,R[1253],40,[[],["saflags"]]],[11,"all",E,R[1254],40,[[],["saflags"]]],[11,"bits",E,R[1255],40,[[["self"]],["c_int"]]],[11,R[1283],E,R[1256],40,[[["c_int"]],[["saflags"],[R[23],["saflags"]]]]],[11,R[1257],E,R[1258],40,[[["c_int"]],["saflags"]]],[11,R[25],E,R[1259],40,[[["self"]],["bool"]]],[11,"is_all",E,R[1260],40,[[["self"]],["bool"]]],[11,R[1267],E,R[1261],40,[[["self"],["saflags"]],["bool"]]],[11,R[1285],E,R[1262],40,[[["self"],["saflags"]],["bool"]]],[11,"insert",E,R[1263],40,[[["self"],["saflags"]]]],[11,"remove",E,R[1264],40,[[["self"],["saflags"]]]],[11,"toggle",E,R[1265],40,[[["self"],["saflags"]]]],[11,"set",E,R[1266],40,[[["self"],["saflags"],["bool"]]]],[11,"all",E,E,41,[[],["sigset"]]],[11,"empty",E,E,41,[[],["sigset"]]],[11,"add",E,E,41,[[["self"],["signal"]]]],[11,"clear",E,E,41,[[["self"]]]],[11,"remove",E,E,41,[[["self"],["signal"]]]],[11,R[1285],E,E,41,[[["self"],["signal"]],["bool"]]],[11,"extend",E,E,41,[[["self"],["sigset"]]]],[11,"thread_get_mask",E,"Gets the currently blocked (masked) set of signals for the…",41,[[],[[R[3],["sigset"]],["sigset"]]]],[11,"thread_set_mask",E,"Sets the set of signals as the signal mask for the calling…",41,[[["self"]],[R[3]]]],[11,"thread_block",E,"Adds the set of signals to the signal mask for the calling…",41,[[["self"]],[R[3]]]],[11,"thread_unblock",E,"Removes the set of signals from the signal mask for the…",41,[[["self"]],[R[3]]]],[11,"thread_swap_mask",E,"Sets the set of signals as the signal mask, and returns…",41,[[["self"],[R[1369]]],[[R[3],["sigset"]],["sigset"]]]],[11,"wait",E,"Suspends execution of the calling thread until one of the…",41,[[["self"]],[["signal"],[R[3],["signal"]]]]],[11,"new",E,"Creates a new action.",42,[[["sigset"],["saflags"],[R[1363]]],[R[782]]]],[11,"flags",E,"Returns the flags set on the action.",42,[[["self"]],["saflags"]]],[11,"mask",E,"Returns the set of signals that are blocked during…",42,[[["self"]],["sigset"]]],[11,"handler",E,"Returns the action's handler.",42,[[["self"]],[R[1363]]]],[0,"socket",R[1358],"Socket interface functions",N,N],[3,"cmsghdr",R[1385],E,N,N],[12,"cmsg_len",E,E,43,N],[12,"cmsg_level",E,E,43,N],[12,"cmsg_type",E,E,43,N],[3,"msghdr",E,E,N,N],[12,"msg_name",E,E,44,N],[12,R[1370],E,E,44,N],[12,"msg_iov",E,E,44,N],[12,"msg_iovlen",E,E,44,N],[12,R[1371],E,E,44,N],[12,R[1372],E,E,44,N],[12,"msg_flags",E,E,44,N],[6,R[1373],E,E,N,N],[3,R[789],E,E,N,N],[12,"sa_len",E,E,45,N],[12,"sa_family",E,E,45,N],[12,"sa_data",E,E,45,N],[3,R[799],E,E,N,N],[12,"sin_len",E,E,46,N],[12,R[781],E,E,46,N],[12,"sin_port",E,E,46,N],[12,"sin_addr",E,E,46,N],[12,"sin_zero",E,E,46,N],[3,R[790],E,E,N,N],[12,"sin6_len",E,E,47,N],[12,R[1374],E,E,47,N],[12,"sin6_port",E,E,47,N],[12,R[1375],E,E,47,N],[12,"sin6_addr",E,E,47,N],[12,R[1376],E,E,47,N],[3,R[821],E,E,N,N],[12,"ss_len",E,E,48,N],[12,"ss_family",E,E,48,N],[3,R[791],E,E,N,N],[12,"sun_len",E,E,49,N],[12,"sun_family",E,E,49,N],[12,"sun_path",E,E,49,N],[3,"UnixAddr",E,"A wrapper around `sockaddr_un`.",N,N],[12,"0",E,E,50,N],[12,"1",E,E,50,N],[3,"Ipv4Addr",E,E,N,N],[12,"0",E,E,51,N],[3,"Ipv6Addr",E,E,N,N],[12,"0",E,E,52,N],[3,"LinkAddr",E,"Hardware Address",N,N],[12,"0",E,E,53,N],[3,"SockFlag",E,"Additional socket options",N,N],[3,"MsgFlags",E,"Flags for send/recv and their relatives",N,N],[3,R[1523],E,"Request for multicast socket operations",N,N],[3,R[1524],E,"Request for ipv6 multicast socket operations",N,N],[3,"CmsgSpace",E,"A structure used to make room in a cmsghdr passed to…",N,N],[3,"RecvMsg",E,E,N,N],[12,"bytes",E,E,54,N],[12,"address",E,E,54,N],[12,"flags",E,E,54,N],[3,R[1538],E,E,N,N],[4,R[1519],E,"These constants specify the protocol family to be used in…",N,N],[13,"Unix",E,"Local communication (see `unix(7)`)",55,N],[13,"Inet",E,"IPv4 Internet protocols (see `ip(7)`)",55,N],[13,"Inet6",E,"IPv6 Internet protocols (see `ipv6(7)`)",55,N],[13,"System",E,"KEXT Controls and Notifications",55,N],[13,"Ipx",E,"IPX - Novell protocols",55,N],[13,"AppleTalk",E,"AppleTalk",55,N],[13,"Decnet",E,E,55,N],[13,"Sna",E,E,55,N],[13,"Isdn",E,E,55,N],[13,"ImpLink",E,E,55,N],[13,"Pup",E,E,55,N],[13,"Chaos",E,E,55,N],[13,"Ns",E,E,55,N],[13,"Iso",E,E,55,N],[13,"Datakit",E,E,55,N],[13,"Ccitt",E,E,55,N],[13,"Dli",E,E,55,N],[13,"Lat",E,E,55,N],[13,"Hylink",E,E,55,N],[13,"Link",E,E,55,N],[13,"Coip",E,E,55,N],[13,"Cnt",E,E,55,N],[13,"Natm",E,E,55,N],[4,"SockAddr",E,"Represents a socket address",N,N],[13,"Inet",E,E,56,N],[13,"Unix",E,E,56,N],[13,"SysControl",E,E,56,N],[13,"Link",E,"Datalink address (MAC)",56,N],[4,"InetAddr",E,E,N,N],[13,"V4",E,E,57,N],[13,"V6",E,E,57,N],[4,"IpAddr",E,E,N,N],[13,"V4",E,E,58,N],[13,"V6",E,E,58,N],[4,"SockType",E,"These constants are used to specify the communication…",N,N],[13,"Stream",E,"Provides sequenced, reliable, two-way, connection- based…",59,N],[13,"Datagram",E,"Supports datagrams (connectionless, unreliable messages of…",59,N],[13,"SeqPacket",E,"Provides a sequenced, reliable, two-way connection- based…",59,N],[13,"Raw",E,"Provides raw network protocol access.",59,N],[13,"Rdm",E,"Provides a reliable datagram layer that does not guarantee…",59,N],[4,R[1520],E,"Constants used in `socket` and `socketpair` to specify the…",N,N],[13,"Tcp",E,"TCP protocol (ip(7))",60,N],[13,"Udp",E,"UDP protocol (ip(7))",60,N],[13,"KextEvent",E,"Allows applications and other KEXTs to be notified when…",60,N],[13,"KextControl",E,"Allows applications to configure and control a KEXT (ref)",60,N],[4,R[1521],E,"A type-safe wrapper around a single control message, as…",N,N],[13,"ScmRights",E,"Received version of…",61,N],[13,"ScmTimestamp",E,"A message of type `SCM_TIMESTAMP`, containing the time the…",61,N],[13,R[1383],E,E,61,N],[13,"Ipv6PacketInfo",E,E,61,N],[13,R[1551],E,E,61,N],[13,R[1384],E,E,61,N],[4,R[1522],E,"A type-safe zero-copy wrapper around a single control…",N,N],[13,"ScmRights",E,"A message of type `SCM_RIGHTS`, containing an array of…",62,N],[4,"SockLevel",E,"The protocol level at which to get / set socket options.…",N,N],[13,"Socket",E,E,63,N],[13,"Tcp",E,E,63,N],[13,"Ip",E,E,63,N],[13,"Ipv6",E,E,63,N],[13,"Udp",E,E,63,N],[4,"Shutdown",E,E,N,N],[13,"Read",E,"Further receptions will be disallowed.",64,N],[13,"Write",E,"Further  transmissions will be disallowed.",64,N],[13,"Both",E,"Further receptions and transmissions will be disallowed.",64,N],[5,"sendmsg",E,"Send data in scatter-gather vectors to a socket, possibly…",N,[[[R[23],[R[789]]],[R[789]],["rawfd"],[R[1390]]],[["usize"],[R[3],["usize"]]]]],[5,"recvmsg",E,"Receive message in scatter-gather vectors from a socket,…",N,[[["cmsgbuffer"],[R[23],["cmsgbuffer"]],["rawfd"],[R[1390]]],[[R[3],["recvmsg"]],["recvmsg"]]]],[5,"socket",E,"Create an endpoint for communication",N,[[[R[1377]],[R[23],[R[1378]]],[R[1387]],["into",[R[23]]],[R[1488]]],[["rawfd"],[R[3],["rawfd"]]]]],[5,"socketpair",E,"Create a pair of connected sockets",N,[[[R[1377]],[R[23],[R[1378]]],[R[1387]],["into",[R[23]]],[R[1488]]],[R[3]]]],[5,"listen",E,"Listen for connections on a socket",N,[[["rawfd"],["usize"]],[R[3]]]],[5,"bind",E,"Bind a name to a socket",N,[[["rawfd"],[R[789]]],[R[3]]]],[5,"accept",E,"Accept a connection on a socket",N,[[["rawfd"]],[["rawfd"],[R[3],["rawfd"]]]]],[5,"connect",E,"Initiate a connection on a socket",N,[[["rawfd"],[R[789]]],[R[3]]]],[5,"recv",E,"Receive data from a connection-oriented socket. Returns…",N,[[["rawfd"],[R[1390]]],[["usize"],[R[3],["usize"]]]]],[5,"recvfrom",E,"Receive data from a connectionless or connection-oriented…",N,[[["rawfd"]],[R[3]]]],[5,"sendto",E,"Send a message to a socket",N,[[["rawfd"],[R[789]],[R[1390]]],[["usize"],[R[3],["usize"]]]]],[5,"send",E,"Send data to a connection-oriented socket. Returns the…",N,[[["rawfd"],[R[1390]]],[["usize"],[R[3],["usize"]]]]],[5,R[1379],E,"Get the current value for the requested socket option",N,[[["rawfd"],[R[1379]]],[R[3]]]],[5,R[1380],E,"Sets the value for the requested socket option",N,[[["rawfd"],[R[1380]]],[R[3]]]],[5,R[1381],E,"Get the address of the peer connected to the socket `fd`.",N,[[["rawfd"]],[[R[3],[R[789]]],[R[789]]]]],[5,R[1382],E,"Get the current address to which the socket `fd` is bound.",N,[[["rawfd"]],[[R[3],[R[789]]],[R[789]]]]],[5,"sockaddr_storage_to_addr",E,"Return the appropriate `SockAddr` type from a…",N,[[["usize"],[R[821]]],[[R[3],[R[789]]],[R[789]]]]],[5,"shutdown",E,"Shut down part of a full-duplex connection.",N,[[["rawfd"],["shutdown"]],[R[3]]]],[11,"len",E,"Total length of sockaddr",53,[[["self"]],["usize"]]],[11,"family",E,"always == AF_LINK",53,[[["self"]],[R[1377]]]],[11,"ifindex",E,"interface index, if != 0, system given index for interface",53,[[["self"]],["usize"]]],[11,"datalink_type",E,"Datalink type",53,[[["self"]],["u8"]]],[11,"nlen",E,E,53,[[["self"]],["usize"]]],[11,"alen",E,"link level address length",53,[[["self"]],["usize"]]],[11,"slen",E,"link layer selector length",53,[[["self"]],["usize"]]],[11,R[25],E,"if link level address length == 0, or `sdl_data` not be…",53,[[["self"]],["bool"]]],[11,"addr",E,"Physical-layer address (MAC)",53,[[["self"]]]],[11,"from_i32",E,"Create a new `AddressFamily` from an integer value…",55,[[["i32"]],[[R[23],[R[1377]]],[R[1377]]]]],[11,"from_std",E,E,57,[[["socketaddr"]],["inetaddr"]]],[11,"new",E,E,57,[[["ipaddr"],["u16"]],["inetaddr"]]],[11,"ip",E,"Gets the IP address associated with this socket address.",57,[[["self"]],["ipaddr"]]],[11,"port",E,"Gets the port number associated with this socket address",57,[[["self"]],["u16"]]],[11,"to_std",E,E,57,[[["self"]],["socketaddr"]]],[11,"to_str",E,E,57,[[["self"]],["string"]]],[11,"new_v4",E,"Create a new IpAddr that contains an IPv4 address.",58,[[["u8"]],["ipaddr"]]],[11,"new_v6",E,"Create a new IpAddr that contains an IPv6 address.",58,[[["u16"]],["ipaddr"]]],[11,"from_std",E,E,58,[[["ipaddr"]],["ipaddr"]]],[11,"to_std",E,E,58,[[["self"]],["ipaddr"]]],[11,"new",E,E,51,[[["u8"]],[R[1391]]]],[11,"from_std",E,E,51,[[[R[1391]]],[R[1391]]]],[11,"any",E,E,51,[[],[R[1391]]]],[11,"octets",E,E,51,[[["self"]]]],[11,"to_std",E,E,51,[[["self"]],[R[1391]]]],[11,"new",E,E,52,[[["u16"]],[R[1477]]]],[11,"from_std",E,E,52,[[[R[1477]]],[R[1477]]]],[11,"segments",E,"Return the eight 16-bit segments that make up this address",52,[[["self"]]]],[11,"to_std",E,E,52,[[["self"]],[R[1477]]]],[11,"new",E,"Create a new sockaddr_un representing a filesystem path.",50,[[["p"]],[[R[3],["unixaddr"]],["unixaddr"]]]],[11,"path",E,"If this address represents a filesystem path, return that…",50,[[["self"]],[[R[23],["path"]],["path"]]]],[11,"new_inet",E,E,56,[[["inetaddr"]],[R[789]]]],[11,"new_unix",E,E,56,[[["p"]],[[R[3],[R[789]]],[R[789]]]]],[11,"new_sys_control",E,E,56,[[["rawfd"],["str"],["u32"]],[[R[3],[R[789]]],[R[789]]]]],[11,"family",E,E,56,[[["self"]],[R[1377]]]],[11,"to_str",E,E,56,[[["self"]],["string"]]],[11,"from_libc_sockaddr",E,"Creates a `SockAddr` struct from libc's sockaddr.",56,[[],[[R[23],[R[789]]],[R[789]]]]],[11,"as_ffi_pair",E,"Conversion from nix's SockAddr type to the underlying libc…",56,[[["self"]]]],[0,"sockopt",E,E,N,N],[3,"ReuseAddr",R[1444],E,N,N],[3,"ReusePort",E,E,N,N],[3,"TcpNoDelay",E,E,N,N],[3,"Linger",E,E,N,N],[3,R[1539],E,E,N,N],[3,R[1540],E,E,N,N],[3,R[1541],E,E,N,N],[3,R[1542],E,E,N,N],[3,R[1543],E,E,N,N],[3,R[1544],E,E,N,N],[3,R[1545],E,E,N,N],[3,R[1546],E,E,N,N],[3,"Broadcast",E,E,N,N],[3,"OobInline",E,E,N,N],[3,R[1547],E,E,N,N],[3,"KeepAlive",E,E,N,N],[3,R[1548],E,E,N,N],[3,"RcvBuf",E,E,N,N],[3,"SndBuf",E,E,N,N],[3,"SockType",E,E,N,N],[3,"AcceptConn",E,E,N,N],[3,R[1549],E,E,N,N],[3,R[1383],E,E,N,N],[3,R[1550],E,E,N,N],[3,R[1551],E,E,N,N],[3,R[1384],E,E,N,N],[8,"CmsgBuffer",R[1385],"A type that can be used to store ancillary data received…",N,N],[10,R[85],E,E,65,[[["self"]]]],[8,"GetSockOpt",E,R[1386],N,N],[16,"Val",E,E,66,N],[8,"SetSockOpt",E,R[1386],N,N],[16,"Val",E,E,67,N],[11,"empty",E,R[1253],68,[[],[R[1387]]]],[11,"all",E,R[1254],68,[[],[R[1387]]]],[11,"bits",E,R[1255],68,[[["self"]],["c_int"]]],[11,R[1283],E,R[1256],68,[[["c_int"]],[[R[23],[R[1387]]],[R[1387]]]]],[11,R[1257],E,R[1258],68,[[["c_int"]],[R[1387]]]],[11,R[25],E,R[1259],68,[[["self"]],["bool"]]],[11,"is_all",E,R[1260],68,[[["self"]],["bool"]]],[11,R[1267],E,R[1261],68,[[["self"],[R[1387]]],["bool"]]],[11,R[1285],E,R[1262],68,[[["self"],[R[1387]]],["bool"]]],[11,"insert",E,R[1263],68,[[["self"],[R[1387]]]]],[11,"remove",E,R[1264],68,[[["self"],[R[1387]]]]],[11,"toggle",E,R[1265],68,[[["self"],[R[1387]]]]],[11,"set",E,R[1266],68,[[["self"],[R[1387]],["bool"]]]],[18,"MSG_OOB",E,"Sends or requests out-of-band data on sockets that support…",69,N],[18,"MSG_PEEK",E,"Peeks at an incoming message. The data is treated as…",69,N],[18,R[1388],E,"Receive operation blocks until the full amount of data can…",69,N],[18,R[1389],E,"Enables nonblocking operation; if the operation would…",69,N],[18,"MSG_CTRUNC",E,"Receive flags: Control Data was discarded (buffer too small)",69,N],[18,"MSG_TRUNC",E,"For raw (`Packet`), Internet datagram (since Linux…",69,N],[18,"MSG_EOR",E,"Terminates a record (when this notion is supported, as for…",69,N],[11,"empty",E,R[1253],69,[[],[R[1390]]]],[11,"all",E,R[1254],69,[[],[R[1390]]]],[11,"bits",E,R[1255],69,[[["self"]],["c_int"]]],[11,R[1283],E,R[1256],69,[[["c_int"]],[[R[1390]],[R[23],[R[1390]]]]]],[11,R[1257],E,R[1258],69,[[["c_int"]],[R[1390]]]],[11,R[25],E,R[1259],69,[[["self"]],["bool"]]],[11,"is_all",E,R[1260],69,[[["self"]],["bool"]]],[11,R[1267],E,R[1261],69,[[["self"],[R[1390]]],["bool"]]],[11,R[1285],E,R[1262],69,[[["self"],[R[1390]]],["bool"]]],[11,"insert",E,R[1263],69,[[["self"],[R[1390]]]]],[11,"remove",E,R[1264],69,[[["self"],[R[1390]]]]],[11,"toggle",E,R[1265],69,[[["self"],[R[1390]]]]],[11,"set",E,R[1266],69,[[["self"],[R[1390]],["bool"]]]],[11,"new",E,"Instantiate a new `IpMembershipRequest`",70,[[[R[1391]],[R[23],[R[1391]]]],["self"]]],[11,"new",E,"Instantiate a new `Ipv6MembershipRequest`",71,[[[R[1477]]],["self"]]],[11,"new",E,"Create a CmsgSpace. The structure is used only for space,…",72,[[],["self"]]],[11,"cmsgs",E,"Iterate over the valid control messages pointed to by this…",54,[[["self"]],[R[1468]]]],[0,"stat",R[1358],E,N,N],[6,"dev_t",R[1445],E,N,N],[6,"mode_t",E,E,N,N],[3,"FileStat",E,E,N,N],[12,"st_dev",E,E,73,N],[12,"st_mode",E,E,73,N],[12,"st_nlink",E,E,73,N],[12,"st_ino",E,E,73,N],[12,"st_uid",E,E,73,N],[12,"st_gid",E,E,73,N],[12,"st_rdev",E,E,73,N],[12,"st_atime",E,E,73,N],[12,R[1392],E,E,73,N],[12,"st_mtime",E,E,73,N],[12,R[1393],E,E,73,N],[12,"st_ctime",E,E,73,N],[12,R[1394],E,E,73,N],[12,R[1395],E,E,73,N],[12,R[1396],E,E,73,N],[12,"st_size",E,E,73,N],[12,"st_blocks",E,E,73,N],[12,"st_blksize",E,E,73,N],[12,"st_flags",E,E,73,N],[12,"st_gen",E,E,73,N],[12,"st_lspare",E,E,73,N],[12,"st_qspare",E,E,73,N],[5,"FileStat",E,E,N,[[],["i32"]]],[3,"SFlag",E,E,N,N],[3,"Mode",E,E,N,N],[4,R[1525],E,"Flags for `fchmodat` function.",N,N],[13,R[1397],E,E,74,N],[13,R[1398],E,E,74,N],[4,R[1526],E,"Flags for `utimensat` function.",N,N],[13,R[1397],E,E,75,N],[13,R[1398],E,E,75,N],[5,"mknod",E,E,N,[[["p"],["dev_t"],["mode"],["sflag"]],[R[3]]]],[5,"umask",E,E,N,[[["mode"]],["mode"]]],[5,"stat",E,E,N,[[["p"]],[[R[3],[R[1399]]],[R[1399]]]]],[5,"lstat",E,E,N,[[["p"]],[[R[3],[R[1399]]],[R[1399]]]]],[5,"fstat",E,E,N,[[["rawfd"]],[[R[3],[R[1399]]],[R[1399]]]]],[5,"fstatat",E,E,N,[[["atflags"],["rawfd"],["p"]],[[R[3],[R[1399]]],[R[1399]]]]],[5,"fchmod",E,"Change the file permission bits of the file specified by a…",N,[[["rawfd"],["mode"]],[R[3]]]],[5,"fchmodat",E,"Change the file permission bits.",N,[[[R[23],["rawfd"]],["p"],["rawfd"],["mode"],[R[1469]]],[R[3]]]],[5,"utimes",E,R[1400],N,[[["p"],["timeval"]],[R[3]]]],[5,"lutimes",E,"Change the access and modification times of a file without…",N,[[["p"],["timeval"]],[R[3]]]],[5,"futimens",E,"Change the access and modification times of the file…",N,[[["rawfd"],[R[785]]],[R[3]]]],[5,"utimensat",E,R[1400],N,[[[R[1470]],[R[23],["rawfd"]],["p"],["rawfd"],[R[785]]],[R[3]]]],[5,"mkdirat",E,E,N,[[["rawfd"],["p"],["mode"]],[R[3]]]],[18,"S_IFIFO",E,E,76,N],[18,"S_IFCHR",E,E,76,N],[18,"S_IFDIR",E,E,76,N],[18,"S_IFBLK",E,E,76,N],[18,"S_IFREG",E,E,76,N],[18,"S_IFLNK",E,E,76,N],[18,"S_IFSOCK",E,E,76,N],[18,"S_IFMT",E,E,76,N],[11,"empty",E,R[1253],76,[[],["sflag"]]],[11,"all",E,R[1254],76,[[],["sflag"]]],[11,"bits",E,R[1255],76,[[["self"]],["mode_t"]]],[11,R[1283],E,R[1256],76,[[["mode_t"]],[["sflag"],[R[23],["sflag"]]]]],[11,R[1257],E,R[1258],76,[[["mode_t"]],["sflag"]]],[11,R[25],E,R[1259],76,[[["self"]],["bool"]]],[11,"is_all",E,R[1260],76,[[["self"]],["bool"]]],[11,R[1267],E,R[1261],76,[[["self"],["sflag"]],["bool"]]],[11,R[1285],E,R[1262],76,[[["self"],["sflag"]],["bool"]]],[11,"insert",E,R[1263],76,[[["self"],["sflag"]]]],[11,"remove",E,R[1264],76,[[["self"],["sflag"]]]],[11,"toggle",E,R[1265],76,[[["self"],["sflag"]]]],[11,"set",E,R[1266],76,[[["self"],["bool"],["sflag"]]]],[18,"S_IRWXU",E,E,77,N],[18,"S_IRUSR",E,E,77,N],[18,"S_IWUSR",E,E,77,N],[18,"S_IXUSR",E,E,77,N],[18,"S_IRWXG",E,E,77,N],[18,"S_IRGRP",E,E,77,N],[18,"S_IWGRP",E,E,77,N],[18,"S_IXGRP",E,E,77,N],[18,"S_IRWXO",E,E,77,N],[18,"S_IROTH",E,E,77,N],[18,"S_IWOTH",E,E,77,N],[18,"S_IXOTH",E,E,77,N],[18,"S_ISUID",E,E,77,N],[18,"S_ISGID",E,E,77,N],[18,"S_ISVTX",E,E,77,N],[11,"empty",E,R[1253],77,[[],["mode"]]],[11,"all",E,R[1254],77,[[],["mode"]]],[11,"bits",E,R[1255],77,[[["self"]],["mode_t"]]],[11,R[1283],E,R[1256],77,[[["mode_t"]],[[R[23],["mode"]],["mode"]]]],[11,R[1257],E,R[1258],77,[[["mode_t"]],["mode"]]],[11,R[25],E,R[1259],77,[[["self"]],["bool"]]],[11,"is_all",E,R[1260],77,[[["self"]],["bool"]]],[11,R[1267],E,R[1261],77,[[["self"],["mode"]],["bool"]]],[11,R[1285],E,R[1262],77,[[["self"],["mode"]],["bool"]]],[11,"insert",E,R[1263],77,[[["self"],["mode"]]]],[11,"remove",E,R[1264],77,[[["self"],["mode"]]]],[11,"toggle",E,R[1265],77,[[["self"],["mode"]]]],[11,"set",E,R[1266],77,[[["self"],["mode"],["bool"]]]],[0,"statfs",R[1358],E,N,N],[3,"Statfs",R[1446],E,N,N],[5,"statfs",E,E,N,[[["p"]],[[R[3],["statfs"]],["statfs"]]]],[5,"fstatfs",E,E,N,[[[T]],[[R[3],["statfs"]],["statfs"]]]],[6,"fsid_t",E,E,N,N],[11,"filesystem_type_name",E,"Magic code defining system type",78,[[["self"]],["str"]]],[11,"optimal_transfer_size",E,"Optimal transfer block size",78,[[["self"]],["i32"]]],[11,"block_size",E,"Size of a block",78,[[["self"]],["u32"]]],[11,"blocks",E,"Total data blocks in filesystem",78,[[["self"]],["u64"]]],[11,R[1401],E,"Free blocks in filesystem",78,[[["self"]],["u64"]]],[11,R[1403],E,"Free blocks available to unprivileged user",78,[[["self"]],["u64"]]],[11,"files",E,"Total file nodes in filesystem",78,[[["self"]],["u64"]]],[11,"files_free",E,"Free file nodes in filesystem",78,[[["self"]],["u64"]]],[11,R[1405],E,"Filesystem ID",78,[[["self"]],["fsid_t"]]],[0,R[828],R[1358],"Get filesystem statistics",N,N],[3,"FsFlags",R[1447],"File system mount Flags",N,N],[3,"Statvfs",E,"Wrapper around the POSIX `statvfs` struct",N,N],[5,R[828],E,"Return a `Statvfs` object with information about the `path`",N,[[["p"]],[[R[3],[R[828]]],[R[828]]]]],[5,"fstatvfs",E,"Return a `Statvfs` object with information about `fd`",N,[[[T]],[[R[3],[R[828]]],[R[828]]]]],[18,"ST_RDONLY",E,"Read Only",79,N],[18,"ST_NOSUID",E,"Do not allow the set-uid bits to have an effect",79,N],[11,"empty",E,R[1253],79,[[],["fsflags"]]],[11,"all",E,R[1254],79,[[],["fsflags"]]],[11,"bits",E,R[1255],79,[[["self"]],["c_ulong"]]],[11,R[1283],E,R[1256],79,[[["c_ulong"]],[["fsflags"],[R[23],["fsflags"]]]]],[11,R[1257],E,R[1258],79,[[["c_ulong"]],["fsflags"]]],[11,R[25],E,R[1259],79,[[["self"]],["bool"]]],[11,"is_all",E,R[1260],79,[[["self"]],["bool"]]],[11,R[1267],E,R[1261],79,[[["self"],["fsflags"]],["bool"]]],[11,R[1285],E,R[1262],79,[[["self"],["fsflags"]],["bool"]]],[11,"insert",E,R[1263],79,[[["self"],["fsflags"]]]],[11,"remove",E,R[1264],79,[[["self"],["fsflags"]]]],[11,"toggle",E,R[1265],79,[[["self"],["fsflags"]]]],[11,"set",E,R[1266],79,[[["self"],["fsflags"],["bool"]]]],[11,"block_size",E,"get the file system block size",80,[[["self"]],["c_ulong"]]],[11,"fragment_size",E,"Get the fundamental file system block size",80,[[["self"]],["c_ulong"]]],[11,"blocks",E,"Get the number of blocks.",80,[[["self"]],[R[1402]]]],[11,R[1401],E,"Get the number of free blocks in the file system",80,[[["self"]],[R[1402]]]],[11,R[1403],E,"Get the number of free blocks for unprivileged users",80,[[["self"]],[R[1402]]]],[11,"files",E,"Get the total number of file inodes",80,[[["self"]],[R[1404]]]],[11,"files_free",E,"Get the number of free file inodes",80,[[["self"]],[R[1404]]]],[11,"files_available",E,"Get the number of free file inodes for unprivileged users",80,[[["self"]],[R[1404]]]],[11,R[1405],E,"Get the file system id",80,[[["self"]],["c_ulong"]]],[11,"flags",E,"Get the mount flags",80,[[["self"]],["fsflags"]]],[11,"name_max",E,"Get the maximum filename length",80,[[["self"]],["c_ulong"]]],[0,"termios",R[1358],"An interface for controlling asynchronous communication…",N,N],[17,"NCCS",R[1448],E,N,N],[17,R[1406],E,E,N,N],[3,"Termios",E,"Stores settings for the termios API",N,N],[12,"input_flags",E,"Input mode flags (see `termios.c_iflag` documentation)",81,N],[12,"output_flags",E,"Output mode flags (see `termios.c_oflag` documentation)",81,N],[12,"control_flags",E,"Control mode flags (see `termios.c_cflag` documentation)",81,N],[12,"local_flags",E,"Local mode flags (see `termios.c_lflag` documentation)",81,N],[12,"control_chars",E,"Control characters (see `termios.c_cc` documentation)",81,N],[3,"InputFlags",E,"Flags for configuring the input mode of a terminal",N,N],[3,R[1528],E,"Flags for configuring the output mode of a terminal",N,N],[3,R[1529],E,"Flags for setting the control mode of a terminal",N,N],[3,"LocalFlags",E,"Flags for setting any local modes",N,N],[4,"BaudRate",E,"Baud rates supported by the system.",N,N],[13,"B0",E,E,82,N],[13,"B50",E,E,82,N],[13,"B75",E,E,82,N],[13,"B110",E,E,82,N],[13,"B134",E,E,82,N],[13,"B150",E,E,82,N],[13,"B200",E,E,82,N],[13,"B300",E,E,82,N],[13,"B600",E,E,82,N],[13,"B1200",E,E,82,N],[13,"B1800",E,E,82,N],[13,"B2400",E,E,82,N],[13,"B4800",E,E,82,N],[13,"B7200",E,E,82,N],[13,"B9600",E,E,82,N],[13,"B14400",E,E,82,N],[13,"B19200",E,E,82,N],[13,"B28800",E,E,82,N],[13,"B38400",E,E,82,N],[13,"B57600",E,E,82,N],[13,"B76800",E,E,82,N],[13,"B115200",E,E,82,N],[13,"B230400",E,E,82,N],[4,"SetArg",E,"Specify when a port configuration change should occur.",N,N],[13,"TCSANOW",E,"The change will occur immediately",83,N],[13,"TCSADRAIN",E,"The change occurs after all output has been written",83,N],[13,"TCSAFLUSH",E,"Same as `TCSADRAIN`, but will also flush the input buffer",83,N],[4,"FlushArg",E,"Specify a combination of the input and output buffers to…",N,N],[13,"TCIFLUSH",E,"Flush data that was received but not read",84,N],[13,"TCOFLUSH",E,"Flush data written but not transmitted",84,N],[13,"TCIOFLUSH",E,"Flush both received data not read and written data not…",84,N],[4,"FlowArg",E,"Specify how transmission flow should be altered",N,N],[13,"TCOOFF",E,"Suspend transmission",85,N],[13,"TCOON",E,"Resume transmission",85,N],[13,"TCIOFF",E,"Transmit a STOP character, which should disable a…",85,N],[13,"TCION",E,"Transmit a START character, which should re-enable a…",85,N],[4,R[1527],E,"Indices into the `termios.c_cc` array for special…",N,N],[13,"VDISCARD",E,E,86,N],[13,"VDSUSP",E,E,86,N],[13,"VEOF",E,E,86,N],[13,"VEOL",E,E,86,N],[13,"VEOL2",E,E,86,N],[13,"VERASE",E,E,86,N],[13,"VINTR",E,E,86,N],[13,"VKILL",E,E,86,N],[13,"VLNEXT",E,E,86,N],[13,"VMIN",E,E,86,N],[13,"VQUIT",E,E,86,N],[13,"VREPRINT",E,E,86,N],[13,"VSTART",E,E,86,N],[13,"VSTATUS",E,E,86,N],[13,"VSTOP",E,E,86,N],[13,"VSUSP",E,E,86,N],[13,"VTIME",E,E,86,N],[13,"VWERASE",E,E,86,N],[5,R[1407],E,"Get input baud rate (see cfgetispeed(3p)).",N,[[["termios"]],["u32"]]],[5,R[1408],E,"Get output baud rate (see cfgetospeed(3p)).",N,[[["termios"]],["u32"]]],[5,R[1409],E,"Set input baud rate (see cfsetispeed(3p)).",N,[[["termios"],["u32"],["into",["u32"]]],[R[3]]]],[5,R[1410],E,"Set output baud rate (see cfsetospeed(3p)).",N,[[["termios"],["u32"],["into",["u32"]]],[R[3]]]],[5,"cfsetspeed",E,"Set both the input and output baud rates (see termios(3)).",N,[[["termios"],["u32"],["into",["u32"]]],[R[3]]]],[5,"cfmakeraw",E,"Configures the port to something like the \"raw\" mode of…",N,[[["termios"]]]],[5,"tcgetattr",E,"Return the configuration of a port tcgetattr(3p)).",N,[[["rawfd"]],[[R[3],["termios"]],["termios"]]]],[5,"tcsetattr",E,"Set the configuration for a terminal (see tcsetattr(3p)).",N,[[["rawfd"],["termios"],["setarg"]],[R[3]]]],[5,"tcdrain",E,"Block until all output data is written (see tcdrain(3p)).",N,[[["rawfd"]],[R[3]]]],[5,"tcflow",E,"Suspend or resume the transmission or reception of data…",N,[[["rawfd"],["flowarg"]],[R[3]]]],[5,"tcflush",E,"Discard data in the output or input queue (see tcflush(3p)).",N,[[["flusharg"],["rawfd"]],[R[3]]]],[5,R[1411],E,"Send a break for a specific duration (see tcsendbreak(3p)).",N,[[["rawfd"],["c_int"]],[R[3]]]],[5,"tcgetsid",E,"Get the session controlled by the given terminal (see…",N,[[["rawfd"]],[[R[3],["pid"]],["pid"]]]],[18,"IGNBRK",E,E,87,N],[18,"BRKINT",E,E,87,N],[18,"IGNPAR",E,E,87,N],[18,"PARMRK",E,E,87,N],[18,"INPCK",E,E,87,N],[18,"ISTRIP",E,E,87,N],[18,"INLCR",E,E,87,N],[18,"IGNCR",E,E,87,N],[18,"ICRNL",E,E,87,N],[18,"IXON",E,E,87,N],[18,"IXOFF",E,E,87,N],[18,"IXANY",E,E,87,N],[18,"IMAXBEL",E,E,87,N],[18,"IUTF8",E,E,87,N],[11,"empty",E,R[1253],87,[[],[R[1412]]]],[11,"all",E,R[1254],87,[[],[R[1412]]]],[11,"bits",E,R[1255],87,[[["self"]],[R[1414]]]],[11,R[1283],E,R[1256],87,[[[R[1414]]],[[R[23],[R[1412]]],[R[1412]]]]],[11,R[1257],E,R[1258],87,[[[R[1414]]],[R[1412]]]],[11,R[25],E,R[1259],87,[[["self"]],["bool"]]],[11,"is_all",E,R[1260],87,[[["self"]],["bool"]]],[11,R[1267],E,R[1261],87,[[["self"],[R[1412]]],["bool"]]],[11,R[1285],E,R[1262],87,[[["self"],[R[1412]]],["bool"]]],[11,"insert",E,R[1263],87,[[["self"],[R[1412]]]]],[11,"remove",E,R[1264],87,[[["self"],[R[1412]]]]],[11,"toggle",E,R[1265],87,[[["self"],[R[1412]]]]],[11,"set",E,R[1266],87,[[["self"],["bool"],[R[1412]]]]],[18,"OPOST",E,E,88,N],[18,"ONLCR",E,E,88,N],[18,"OCRNL",E,E,88,N],[18,"ONOCR",E,E,88,N],[18,"ONLRET",E,E,88,N],[18,"OFILL",E,E,88,N],[18,"OFDEL",E,E,88,N],[18,"NL0",E,E,88,N],[18,"NL1",E,E,88,N],[18,"CR0",E,E,88,N],[18,"CR1",E,E,88,N],[18,"CR2",E,E,88,N],[18,"CR3",E,E,88,N],[18,"TAB0",E,E,88,N],[18,"TAB1",E,E,88,N],[18,"TAB2",E,E,88,N],[18,"TAB3",E,E,88,N],[18,"BS0",E,E,88,N],[18,"BS1",E,E,88,N],[18,"VT0",E,E,88,N],[18,"VT1",E,E,88,N],[18,"FF0",E,E,88,N],[18,"FF1",E,E,88,N],[18,"OXTABS",E,E,88,N],[18,"ONOEOT",E,E,88,N],[18,"NLDLY",E,E,88,N],[18,"CRDLY",E,E,88,N],[18,"TABDLY",E,E,88,N],[18,"BSDLY",E,E,88,N],[18,"VTDLY",E,E,88,N],[18,"FFDLY",E,E,88,N],[11,"empty",E,R[1253],88,[[],[R[1413]]]],[11,"all",E,R[1254],88,[[],[R[1413]]]],[11,"bits",E,R[1255],88,[[["self"]],[R[1414]]]],[11,R[1283],E,R[1256],88,[[[R[1414]]],[[R[1413]],[R[23],[R[1413]]]]]],[11,R[1257],E,R[1258],88,[[[R[1414]]],[R[1413]]]],[11,R[25],E,R[1259],88,[[["self"]],["bool"]]],[11,"is_all",E,R[1260],88,[[["self"]],["bool"]]],[11,R[1267],E,R[1261],88,[[["self"],[R[1413]]],["bool"]]],[11,R[1285],E,R[1262],88,[[["self"],[R[1413]]],["bool"]]],[11,"insert",E,R[1263],88,[[["self"],[R[1413]]]]],[11,"remove",E,R[1264],88,[[["self"],[R[1413]]]]],[11,"toggle",E,R[1265],88,[[["self"],[R[1413]]]]],[11,"set",E,R[1266],88,[[["self"],[R[1413]],["bool"]]]],[18,"CIGNORE",E,E,89,N],[18,"CS5",E,E,89,N],[18,"CS6",E,E,89,N],[18,"CS7",E,E,89,N],[18,"CS8",E,E,89,N],[18,"CSTOPB",E,E,89,N],[18,"CREAD",E,E,89,N],[18,"PARENB",E,E,89,N],[18,"PARODD",E,E,89,N],[18,"HUPCL",E,E,89,N],[18,"CLOCAL",E,E,89,N],[18,"CRTSCTS",E,E,89,N],[18,"MDMBUF",E,E,89,N],[18,"CSIZE",E,E,89,N],[11,"empty",E,R[1253],89,[[],[R[1415]]]],[11,"all",E,R[1254],89,[[],[R[1415]]]],[11,"bits",E,R[1255],89,[[["self"]],[R[1414]]]],[11,R[1283],E,R[1256],89,[[[R[1414]]],[[R[1415]],[R[23],[R[1415]]]]]],[11,R[1257],E,R[1258],89,[[[R[1414]]],[R[1415]]]],[11,R[25],E,R[1259],89,[[["self"]],["bool"]]],[11,"is_all",E,R[1260],89,[[["self"]],["bool"]]],[11,R[1267],E,R[1261],89,[[["self"],[R[1415]]],["bool"]]],[11,R[1285],E,R[1262],89,[[["self"],[R[1415]]],["bool"]]],[11,"insert",E,R[1263],89,[[["self"],[R[1415]]]]],[11,"remove",E,R[1264],89,[[["self"],[R[1415]]]]],[11,"toggle",E,R[1265],89,[[["self"],[R[1415]]]]],[11,"set",E,R[1266],89,[[["self"],[R[1415]],["bool"]]]],[18,"ECHOKE",E,E,90,N],[18,"ECHOE",E,E,90,N],[18,"ECHOK",E,E,90,N],[18,"ECHO",E,E,90,N],[18,"ECHONL",E,E,90,N],[18,"ECHOPRT",E,E,90,N],[18,"ECHOCTL",E,E,90,N],[18,"ISIG",E,E,90,N],[18,"ICANON",E,E,90,N],[18,"ALTWERASE",E,E,90,N],[18,"IEXTEN",E,E,90,N],[18,"EXTPROC",E,E,90,N],[18,"TOSTOP",E,E,90,N],[18,"FLUSHO",E,E,90,N],[18,"NOKERNINFO",E,E,90,N],[18,"PENDIN",E,E,90,N],[18,"NOFLSH",E,E,90,N],[11,"empty",E,R[1253],90,[[],[R[1416]]]],[11,"all",E,R[1254],90,[[],[R[1416]]]],[11,"bits",E,R[1255],90,[[["self"]],[R[1414]]]],[11,R[1283],E,R[1256],90,[[[R[1414]]],[[R[23],[R[1416]]],[R[1416]]]]],[11,R[1257],E,R[1258],90,[[[R[1414]]],[R[1416]]]],[11,R[25],E,R[1259],90,[[["self"]],["bool"]]],[11,"is_all",E,R[1260],90,[[["self"]],["bool"]]],[11,R[1267],E,R[1261],90,[[["self"],[R[1416]]],["bool"]]],[11,R[1285],E,R[1262],90,[[["self"],[R[1416]]],["bool"]]],[11,"insert",E,R[1263],90,[[["self"],[R[1416]]]]],[11,"remove",E,R[1264],90,[[["self"],[R[1416]]]]],[11,"toggle",E,R[1265],90,[[["self"],[R[1416]]]]],[11,"set",E,R[1266],90,[[["self"],["bool"],[R[1416]]]]],[0,"time",R[1358],E,N,N],[6,"time_t",R[1449],E,N,N],[6,R[1417],E,E,N,N],[3,"TimeSpec",E,E,N,N],[3,"TimeVal",E,E,N,N],[8,R[1530],E,E,N,N],[11,"zero",E,E,91,[[],["self"]]],[11,"hours",E,E,91,[[["i64"]],["self"]]],[11,"minutes",E,E,91,[[["i64"]],["self"]]],[10,"seconds",E,E,91,[[["i64"]],["self"]]],[10,R[1455],E,E,91,[[["i64"]],["self"]]],[10,R[1456],E,E,91,[[["i64"]],["self"]]],[10,R[1457],E,E,91,[[["i64"]],["self"]]],[11,"num_hours",E,E,91,[[["self"]],["i64"]]],[11,R[1553],E,E,91,[[["self"]],["i64"]]],[10,R[1458],E,E,91,[[["self"]],["i64"]]],[10,R[1459],E,E,91,[[["self"]],["i64"]]],[10,R[1460],E,E,91,[[["self"]],["i64"]]],[10,R[1461],E,E,91,[[["self"]],["i64"]]],[11,"tv_sec",E,E,92,[[["self"]],["time_t"]]],[11,"tv_nsec",E,E,92,[[["self"]],["c_long"]]],[11,"tv_sec",E,E,93,[[["self"]],["time_t"]]],[11,"tv_usec",E,E,93,[[["self"]],[R[1417]]]],[0,"uio",R[1358],E,N,N],[3,"IoVec",R[1450],E,N,N],[5,"writev",E,E,N,[[["rawfd"]],[["usize"],[R[3],["usize"]]]]],[5,"readv",E,E,N,[[["rawfd"]],[["usize"],[R[3],["usize"]]]]],[5,"pwrite",E,E,N,[[["rawfd"],["off_t"]],[["usize"],[R[3],["usize"]]]]],[5,"pread",E,E,N,[[["rawfd"],["off_t"]],[["usize"],[R[3],["usize"]]]]],[11,R[44],E,E,94,[[["self"]]]],[11,R[121],E,E,94,[[],["iovec"]]],[11,R[1294],E,E,94,[[],["iovec"]]],[0,"utsname",R[1358],E,N,N],[3,"UtsName",R[1451],E,N,N],[5,"uname",E,E,N,[[],["utsname"]]],[11,"sysname",E,E,95,[[["self"]],["str"]]],[11,"nodename",E,E,95,[[["self"]],["str"]]],[11,"release",E,E,95,[[["self"]],["str"]]],[11,"version",E,E,95,[[["self"]],["str"]]],[11,"machine",E,E,95,[[["self"]],["str"]]],[0,"wait",R[1358],E,N,N],[3,R[1531],R[1452],E,N,N],[4,"WaitStatus",E,"Possible return values from `wait()` or `waitpid()`.",N,N],[13,"Exited",E,"The process exited normally (as with `exit()` or returning…",96,N],[13,"Signaled",E,"The process was killed by the given signal. The third…",96,N],[13,"Stopped",E,"The process is alive, but was stopped by the given signal.…",96,N],[13,"Continued",E,"The process was previously stopped but has resumed…",96,N],[13,"StillAlive",E,"There are currently no state changes to report in any…",96,N],[5,"waitpid",E,E,N,[[[R[23],[R[1418]]],["into",[R[23]]],[R[23],["pid"]],[R[1418]]],[[R[3],[R[1419]]],[R[1419]]]]],[5,"wait",E,E,N,[[],[[R[3],[R[1419]]],[R[1419]]]]],[18,"WNOHANG",E,E,97,N],[18,"WUNTRACED",E,E,97,N],[18,"WEXITED",E,E,97,N],[18,"WCONTINUED",E,E,97,N],[18,"WSTOPPED",E,E,97,N],[18,"WNOWAIT",E,"Don't reap, just poll status.",97,N],[11,"empty",E,R[1253],97,[[],[R[1418]]]],[11,"all",E,R[1254],97,[[],[R[1418]]]],[11,"bits",E,R[1255],97,[[["self"]],["c_int"]]],[11,R[1283],E,R[1256],97,[[["c_int"]],[[R[1418]],[R[23],[R[1418]]]]]],[11,R[1257],E,R[1258],97,[[["c_int"]],[R[1418]]]],[11,R[25],E,R[1259],97,[[["self"]],["bool"]]],[11,"is_all",E,R[1260],97,[[["self"]],["bool"]]],[11,R[1267],E,R[1261],97,[[["self"],[R[1418]]],["bool"]]],[11,R[1285],E,R[1262],97,[[["self"],[R[1418]]],["bool"]]],[11,"insert",E,R[1263],97,[[["self"],[R[1418]]]]],[11,"remove",E,R[1264],97,[[["self"],[R[1418]]]]],[11,"toggle",E,R[1265],97,[[["self"],[R[1418]]]]],[11,"set",E,R[1266],97,[[["self"],[R[1418]],["bool"]]]],[11,"pid",E,"Extracts the PID from the WaitStatus unless it equals…",96,[[["self"]],[[R[23],["pid"]],["pid"]]]],[11,R[3982],E,"Convert a raw `wstatus` as returned by `waitpid`/`wait`…",96,[[["pid"],["i32"]],[[R[3],[R[1419]]],[R[1419]]]]],[0,"unistd","nix","Safe wrappers around functions found in libc \"unistd.h\"…",N,N],[3,"Uid",R[1420],"User identifier",N,N],[3,"Gid",E,"Group identifier",N,N],[3,"Pid",E,"Process identifier",N,N],[3,R[1535],E,"Options for access()",N,N],[4,"ForkResult",E,"Represents the successful result of calling `fork`",N,N],[13,"Parent",E,E,98,N],[12,"child","nix::unistd::ForkResult",E,98,N],[13,"Child",R[1420],E,98,N],[4,R[1532],E,"Flags for `fchownat` function.",N,N],[13,R[1397],E,E,99,N],[13,R[1398],E,E,99,N],[4,"Whence",E,"Directive that tells [`lseek`] and [`lseek64`] what the…",N,N],[13,"SeekSet",E,"Specify an offset relative to the start of the file.",100,N],[13,"SeekCur",E,"Specify an offset relative to the current file location.",100,N],[13,"SeekEnd",E,"Specify an offset relative to the end of the file.",100,N],[4,R[1533],E,"Flags for `unlinkat` function.",N,N],[13,"RemoveDir",E,E,101,N],[13,"NoRemoveDir",E,E,101,N],[4,R[1534],E,"Variable names for `pathconf`",N,N],[13,"LINK_MAX",E,"Maximum number of links to a single file.",102,N],[13,"MAX_CANON",E,"Maximum number of bytes in a terminal canonical input line.",102,N],[13,"MAX_INPUT",E,"Minimum number of bytes for which space is available in a…",102,N],[13,"NAME_MAX",E,"Maximum number of bytes in a filename (not including the…",102,N],[13,"PATH_MAX",E,"Maximum number of bytes the implementation will store as a…",102,N],[13,"PIPE_BUF",E,"Maximum number of bytes that is guaranteed to be atomic…",102,N],[13,"_POSIX_CHOWN_RESTRICTED",E,"The use of `chown` and `fchown` is restricted to a process…",102,N],[13,"_POSIX_NO_TRUNC",E,"Pathname components longer than {NAME_MAX} generate an…",102,N],[13,R[1406],E,"This symbol shall be defined to be the value of a…",102,N],[4,"SysconfVar",E,"Variable names for `sysconf`",N,N],[13,R[1421],E,"Maximum number of I/O operations in a single list I/O call…",103,N],[13,"AIO_MAX",E,"Maximum number of outstanding asynchronous I/O operations…",103,N],[13,"AIO_PRIO_DELTA_MAX",E,"The maximum amount by which a process can decrease its…",103,N],[13,"ARG_MAX",E,"Maximum length of argument to the exec functions including…",103,N],[13,"ATEXIT_MAX",E,"Maximum number of functions that may be registered with…",103,N],[13,"BC_BASE_MAX",E,"Maximum obase values allowed by the bc utility.",103,N],[13,"BC_DIM_MAX",E,"Maximum number of elements permitted in an array by the bc…",103,N],[13,"BC_SCALE_MAX",E,"Maximum scale value allowed by the bc utility.",103,N],[13,"BC_STRING_MAX",E,"Maximum length of a string constant accepted by the bc…",103,N],[13,"CHILD_MAX",E,"Maximum number of simultaneous processes per real user ID.",103,N],[13,"COLL_WEIGHTS_MAX",E,"Maximum number of weights that can be assigned to an entry…",103,N],[13,"DELAYTIMER_MAX",E,"Maximum number of timer expiration overruns.",103,N],[13,"EXPR_NEST_MAX",E,"Maximum number of expressions that can be nested within…",103,N],[13,"HOST_NAME_MAX",E,"Maximum length of a host name (not including the…",103,N],[13,"IOV_MAX",E,"Maximum number of iovec structures that one process has…",103,N],[13,"LINE_MAX",E,"Unless otherwise noted, the maximum length, in bytes, of a…",103,N],[13,"LOGIN_NAME_MAX",E,"Maximum length of a login name.",103,N],[13,"NGROUPS_MAX",E,"Maximum number of simultaneous supplementary group IDs per…",103,N],[13,"GETGR_R_SIZE_MAX",E,"Initial size of `getgrgid_r` and `getgrnam_r` data buffers",103,N],[13,"GETPW_R_SIZE_MAX",E,"Initial size of `getpwuid_r` and `getpwnam_r` data buffers",103,N],[13,"MQ_OPEN_MAX",E,"The maximum number of open message queue descriptors a…",103,N],[13,"MQ_PRIO_MAX",E,"The maximum number of message priorities supported by the…",103,N],[13,"OPEN_MAX",E,"A value one greater than the maximum value that the system…",103,N],[13,"_POSIX_ADVISORY_INFO",E,"The implementation supports the Advisory Information option.",103,N],[13,"_POSIX_BARRIERS",E,"The implementation supports barriers.",103,N],[13,"_POSIX_ASYNCHRONOUS_IO",E,"The implementation supports asynchronous input and output.",103,N],[13,"_POSIX_CLOCK_SELECTION",E,"The implementation supports clock selection.",103,N],[13,"_POSIX_CPUTIME",E,"The implementation supports the Process CPU-Time Clocks…",103,N],[13,"_POSIX_FSYNC",E,"The implementation supports the File Synchronization option.",103,N],[13,"_POSIX_IPV6",E,"The implementation supports the IPv6 option.",103,N],[13,"_POSIX_JOB_CONTROL",E,"The implementation supports job control.",103,N],[13,"_POSIX_MAPPED_FILES",E,"The implementation supports memory mapped Files.",103,N],[13,"_POSIX_MEMLOCK",E,"The implementation supports the Process Memory Locking…",103,N],[13,"_POSIX_MEMLOCK_RANGE",E,"The implementation supports the Range Memory Locking option.",103,N],[13,"_POSIX_MEMORY_PROTECTION",E,"The implementation supports memory protection.",103,N],[13,"_POSIX_MESSAGE_PASSING",E,"The implementation supports the Message Passing option.",103,N],[13,"_POSIX_MONOTONIC_CLOCK",E,"The implementation supports the Monotonic Clock option.",103,N],[13,"_POSIX_PRIORITIZED_IO",E,"The implementation supports the Prioritized Input and…",103,N],[13,"_POSIX_PRIORITY_SCHEDULING",E,"The implementation supports the Process Scheduling option.",103,N],[13,"_POSIX_RAW_SOCKETS",E,"The implementation supports the Raw Sockets option.",103,N],[13,"_POSIX_READER_WRITER_LOCKS",E,"The implementation supports read-write locks.",103,N],[13,"_POSIX_REALTIME_SIGNALS",E,"The implementation supports realtime signals.",103,N],[13,"_POSIX_REGEXP",E,"The implementation supports the Regular Expression…",103,N],[13,"_POSIX_SAVED_IDS",E,"Each process has a saved set-user-ID and a saved…",103,N],[13,"_POSIX_SEMAPHORES",E,"The implementation supports semaphores.",103,N],[13,"_POSIX_SHARED_MEMORY_OBJECTS",E,"The implementation supports the Shared Memory Objects…",103,N],[13,"_POSIX_SHELL",E,"The implementation supports the POSIX shell.",103,N],[13,"_POSIX_SPAWN",E,"The implementation supports the Spawn option.",103,N],[13,"_POSIX_SPIN_LOCKS",E,"The implementation supports spin locks.",103,N],[13,"_POSIX_SPORADIC_SERVER",E,"The implementation supports the Process Sporadic Server…",103,N],[13,"_POSIX_SS_REPL_MAX",E,E,103,N],[13,"_POSIX_SYNCHRONIZED_IO",E,"The implementation supports the Synchronized Input and…",103,N],[13,"_POSIX_THREAD_ATTR_STACKADDR",E,"The implementation supports the Thread Stack Address…",103,N],[13,"_POSIX_THREAD_ATTR_STACKSIZE",E,"The implementation supports the Thread Stack Size…",103,N],[13,"_POSIX_THREAD_CPUTIME",E,"The implementation supports the Thread CPU-Time Clocks…",103,N],[13,"_POSIX_THREAD_PRIO_INHERIT",E,R[1422],103,N],[13,"_POSIX_THREAD_PRIO_PROTECT",E,R[1422],103,N],[13,"_POSIX_THREAD_PRIORITY_SCHEDULING",E,"The implementation supports the Thread Execution…",103,N],[13,"_POSIX_THREAD_PROCESS_SHARED",E,"The implementation supports the Thread Process-Shared…",103,N],[13,"_POSIX_THREAD_SAFE_FUNCTIONS",E,"The implementation supports thread-safe functions.",103,N],[13,"_POSIX_THREAD_SPORADIC_SERVER",E,"The implementation supports the Thread Sporadic Server…",103,N],[13,"_POSIX_THREADS",E,"The implementation supports threads.",103,N],[13,"_POSIX_TIMEOUTS",E,"The implementation supports timeouts.",103,N],[13,"_POSIX_TIMERS",E,"The implementation supports timers.",103,N],[13,"_POSIX_TRACE",E,"The implementation supports the Trace option.",103,N],[13,"_POSIX_TRACE_EVENT_FILTER",E,"The implementation supports the Trace Event Filter option.",103,N],[13,"_POSIX_TRACE_EVENT_NAME_MAX",E,E,103,N],[13,"_POSIX_TRACE_INHERIT",E,"The implementation supports the Trace Inherit option.",103,N],[13,"_POSIX_TRACE_LOG",E,"The implementation supports the Trace Log option.",103,N],[13,"_POSIX_TRACE_NAME_MAX",E,E,103,N],[13,"_POSIX_TRACE_SYS_MAX",E,E,103,N],[13,"_POSIX_TRACE_USER_EVENT_MAX",E,E,103,N],[13,"_POSIX_TYPED_MEMORY_OBJECTS",E,"The implementation supports the Typed Memory Objects option.",103,N],[13,"_POSIX_VERSION",E,"Integer value indicating version of this standard…",103,N],[13,"_POSIX_V6_ILP32_OFF32",E,R[1423],103,N],[13,"_POSIX_V6_ILP32_OFFBIG",E,R[1423],103,N],[13,"_POSIX_V6_LP64_OFF64",E,R[1423],103,N],[13,"_POSIX_V6_LPBIG_OFFBIG",E,R[1423],103,N],[13,"_POSIX2_C_BIND",E,"The implementation supports the C-Language Binding option.",103,N],[13,"_POSIX2_C_DEV",E,"The implementation supports the C-Language Development…",103,N],[13,"_POSIX2_CHAR_TERM",E,"The implementation supports the Terminal Characteristics…",103,N],[13,"_POSIX2_FORT_DEV",E,"The implementation supports the FORTRAN Development…",103,N],[13,"_POSIX2_FORT_RUN",E,"The implementation supports the FORTRAN Runtime Utilities…",103,N],[13,"_POSIX2_LOCALEDEF",E,"The implementation supports the creation of locales by the…",103,N],[13,"_POSIX2_PBS",E,"The implementation supports the Batch Environment Services…",103,N],[13,"_POSIX2_PBS_ACCOUNTING",E,"The implementation supports the Batch Accounting option.",103,N],[13,"_POSIX2_PBS_CHECKPOINT",E,"The implementation supports the Batch Checkpoint/Restart…",103,N],[13,"_POSIX2_PBS_LOCATE",E,"The implementation supports the Locate Batch Job Request…",103,N],[13,"_POSIX2_PBS_MESSAGE",E,"The implementation supports the Batch Job Message Request…",103,N],[13,"_POSIX2_PBS_TRACK",E,"The implementation supports the Track Batch Job Request…",103,N],[13,"_POSIX2_SW_DEV",E,"The implementation supports the Software Development…",103,N],[13,"_POSIX2_UPE",E,"The implementation supports the User Portability Utilities…",103,N],[13,"_POSIX2_VERSION",E,"Integer value indicating version of the Shell and…",103,N],[13,"PAGE_SIZE",E,"The size of a system page in bytes.",103,N],[13,"PTHREAD_DESTRUCTOR_ITERATIONS",E,E,103,N],[13,"PTHREAD_KEYS_MAX",E,E,103,N],[13,R[1424],E,E,103,N],[13,"PTHREAD_THREADS_MAX",E,E,103,N],[13,"RE_DUP_MAX",E,E,103,N],[13,"RTSIG_MAX",E,E,103,N],[13,"SEM_NSEMS_MAX",E,E,103,N],[13,"SEM_VALUE_MAX",E,E,103,N],[13,"SIGQUEUE_MAX",E,E,103,N],[13,"STREAM_MAX",E,E,103,N],[13,"SYMLOOP_MAX",E,E,103,N],[13,"TIMER_MAX",E,E,103,N],[13,"TTY_NAME_MAX",E,E,103,N],[13,"TZNAME_MAX",E,E,103,N],[13,"_XOPEN_CRYPT",E,"The implementation supports the X/Open Encryption Option…",103,N],[13,"_XOPEN_ENH_I18N",E,"The implementation supports the Issue 4, Version 2…",103,N],[13,"_XOPEN_LEGACY",E,E,103,N],[13,"_XOPEN_REALTIME",E,"The implementation supports the X/Open Realtime Option…",103,N],[13,"_XOPEN_REALTIME_THREADS",E,"The implementation supports the X/Open Realtime Threads…",103,N],[13,"_XOPEN_SHM",E,"The implementation supports the Issue 4, Version 2 Shared…",103,N],[13,"_XOPEN_STREAMS",E,"The implementation supports the XSI STREAMS Option Group.",103,N],[13,"_XOPEN_UNIX",E,"The implementation supports the XSI option",103,N],[13,"_XOPEN_VERSION",E,"Integer value indicating version of the X/Open Portability…",103,N],[5,"fork",E,"Create a new child process duplicating the parent process…",N,[[],[[R[3],[R[1471]]],[R[1471]]]]],[5,"getpid",E,"Get the pid of this process (see getpid(2)).",N,[[],["pid"]]],[5,"getppid",E,"Get the pid of this processes' parent (see getpid(2)).",N,[[],["pid"]]],[5,"setpgid",E,"Set a process group ID (see setpgid(2)).",N,[[["pid"]],[R[3]]]],[5,"getpgid",E,E,N,[[[R[23],["pid"]],["pid"]],[[R[3],["pid"]],["pid"]]]],[5,"setsid",E,"Create new session and set process group id (see setsid(2)).",N,[[],[[R[3],["pid"]],["pid"]]]],[5,"getsid",E,"Get the process group ID of a session leader getsid(2).",N,[[[R[23],["pid"]],["pid"]],[[R[3],["pid"]],["pid"]]]],[5,"tcgetpgrp",E,"Get the terminal foreground process group (see…",N,[[["c_int"]],[[R[3],["pid"]],["pid"]]]],[5,"tcsetpgrp",E,"Set the terminal foreground process group (see…",N,[[["c_int"],["pid"]],[R[3]]]],[5,"getpgrp",E,"Get the group id of the calling process (see getpgrp(3)).",N,[[],["pid"]]],[5,"dup",E,"Create a copy of the specified file descriptor (see dup(2)).",N,[[["rawfd"]],[["rawfd"],[R[3],["rawfd"]]]]],[5,"dup2",E,"Create a copy of the specified file descriptor using the…",N,[[["rawfd"]],[["rawfd"],[R[3],["rawfd"]]]]],[5,"dup3",E,"Create a new copy of the specified file descriptor using…",N,[[["rawfd"],["oflag"]],[["rawfd"],[R[3],["rawfd"]]]]],[5,"chdir",E,"Change the current working directory of the calling…",N,[[["p"]],[R[3]]]],[5,"fchdir",E,"Change the current working directory of the process to the…",N,[[["rawfd"]],[R[3]]]],[5,"mkdir",E,"Creates new directory `path` with access rights `mode`.…",N,[[["p"],["mode"]],[R[3]]]],[5,"mkfifo",E,"Creates new fifo special file (named pipe) with path…",N,[[["p"],["mode"]],[R[3]]]],[5,"symlinkat",E,"Creates a symbolic link at `path2` which points to `path1`.",N,[[[R[23],["rawfd"]],["p2"],["rawfd"],["p1"]],[R[3]]]],[5,"getcwd",E,"Returns the current directory as a `PathBuf`",N,[[],[["pathbuf"],[R[3],["pathbuf"]]]]],[5,"chown",E,R[1425],N,[[["gid"],["p"],["uid"],[R[23],["gid"]],[R[23],["uid"]]],[R[3]]]],[5,"fchownat",E,R[1425],N,[[["gid"],[R[23],["rawfd"]],[R[1472]],[R[23],["uid"]],["p"],["uid"],[R[23],["gid"]],["rawfd"]],[R[3]]]],[5,"execv",E,R[1426],N,[[["cstring"]],[[R[3],["void"]],["void"]]]],[5,"execve",E,R[1426],N,[[["cstring"]],[[R[3],["void"]],["void"]]]],[5,"execvp",E,"Replace the current process image with a new one and…",N,[[["cstring"]],[[R[3],["void"]],["void"]]]],[5,"daemon",E,"Daemonize this process by detaching from the controlling…",N,[[["bool"]],[R[3]]]],[5,R[1427],E,"Set the system host name (see sethostname(2)).",N,[[["asref",["osstr"]],["osstr"]],[R[3]]]],[5,R[1428],E,"Get the host name and store it in the provided buffer,…",N,[[],[["cstr"],[R[3],["cstr"]]]]],[5,"close",E,"Close a raw file descriptor",N,[[["rawfd"]],[R[3]]]],[5,"read",E,"Read from a raw file descriptor.",N,[[["rawfd"]],[["usize"],[R[3],["usize"]]]]],[5,"write",E,"Write to a raw file descriptor.",N,[[["rawfd"]],[["usize"],[R[3],["usize"]]]]],[5,"lseek",E,"Move the read/write file offset.",N,[[["rawfd"],["off_t"],["whence"]],[[R[3],["off_t"]],["off_t"]]]],[5,"pipe",E,"Create an interprocess channel.",N,[[],[R[3]]]],[5,"pipe2",E,"Like `pipe`, but allows setting certain file descriptor…",N,[[["oflag"]],[R[3]]]],[5,R[765],E,R[1429],N,[[["p"],["off_t"]],[R[3]]]],[5,"ftruncate",E,R[1429],N,[[["rawfd"],["off_t"]],[R[3]]]],[5,"isatty",E,E,N,[[["rawfd"]],[[R[3],["bool"]],["bool"]]]],[5,"unlink",E,R[1430],N,[[["p"]],[R[3]]]],[5,"unlinkat",E,R[1430],N,[[[R[23],["rawfd"]],["p"],["rawfd"],[R[1473]]],[R[3]]]],[5,"chroot",E,E,N,[[["p"]],[R[3]]]],[5,"fsync",E,"Synchronize changes to a file",N,[[["rawfd"]],[R[3]]]],[5,"getuid",E,"Get a real user ID",N,[[],["uid"]]],[5,"geteuid",E,"Get the effective user ID",N,[[],["uid"]]],[5,"getgid",E,"Get the real group ID",N,[[],["gid"]]],[5,"getegid",E,"Get the effective group ID",N,[[],["gid"]]],[5,"seteuid",E,"Set the effective user ID",N,[[["uid"]],[R[3]]]],[5,"setegid",E,"Set the effective group ID",N,[[["gid"]],[R[3]]]],[5,"setuid",E,"Set the user ID",N,[[["uid"]],[R[3]]]],[5,"setgid",E,"Set the group ID",N,[[["gid"]],[R[3]]]],[5,"pause",E,"Suspend the thread until a signal is received.",N,[[]]],[5,"sleep",E,"Suspend execution for an interval of time",N,[[["c_uint"]],["c_uint"]]],[5,"mkstemp",E,"Creates a regular file which persists even after process…",N,[[["p"]],[R[3]]]],[5,"fpathconf",E,"Like `pathconf`, but works with file descriptors instead…",N,[[["rawfd"],[R[1431]]],[[R[3],[R[23]]],[R[23],["c_long"]]]]],[5,"pathconf",E,"Get path-dependent configurable system variables (see…",N,[[["p"],[R[1431]]],[[R[3],[R[23]]],[R[23],["c_long"]]]]],[5,"sysconf",E,"Get configurable system variables (see sysconf(3))",N,[[[R[1495]]],[[R[3],[R[23]]],[R[23],["c_long"]]]]],[5,"access",E,"Checks the file named by `path` for accessibility…",N,[[["p"],[R[1432]]],[R[3]]]],[0,"alarm",E,"Alarm signal scheduling.",N,N],[5,"set","nix::unistd::alarm","Schedule an alarm signal.",N,[[["c_uint"]],[[R[23],["c_uint"]],["c_uint"]]]],[5,"cancel",E,"Cancel an previously set alarm signal.",N,[[],[[R[23],["c_uint"]],["c_uint"]]]],[0,"acct",R[1420],E,N,N],[5,"enable","nix::unistd::acct","Enable process accounting",N,[[["p"]],[R[3]]]],[5,"disable",E,"Disable process accounting",N,[[],[R[3]]]],[17,"ROOT",R[1420],"Constant for UID = 0",N,N],[11,R[3982],E,"Creates `Uid` from raw `uid_t`.",104,[[["uid_t"]],["self"]]],[11,"current",E,"Returns Uid of calling process. This is practically a more…",104,[[],["self"]]],[11,"effective",E,"Returns effective Uid of calling process. This is…",104,[[],["self"]]],[11,"is_root",E,"Returns true if the `Uid` represents privileged user -…",104,[[["self"]],["bool"]]],[11,"as_raw",E,"Get the raw `uid_t` wrapped by `self`.",104,[[["self"]],["uid_t"]]],[11,R[3982],E,"Creates `Gid` from raw `gid_t`.",105,[[["gid_t"]],["self"]]],[11,"current",E,"Returns Gid of calling process. This is practically a more…",105,[[],["self"]]],[11,"effective",E,"Returns effective Gid of calling process. This is…",105,[[],["self"]]],[11,"as_raw",E,"Get the raw `gid_t` wrapped by `self`.",105,[[["self"]],["gid_t"]]],[11,R[3982],E,"Creates `Pid` from raw `pid_t`.",106,[[["pid_t"]],["self"]]],[11,"this",E,"Returns PID of calling process",106,[[],["self"]]],[11,"parent",E,"Returns PID of parent of calling process",106,[[],["self"]]],[11,"as_raw",E,"Get the raw `pid_t` wrapped by `self`.",106,[[["self"]],["pid_t"]]],[11,"is_child",E,"Return `true` if this is the child process of the `fork()`",98,[[["self"]],["bool"]]],[11,"is_parent",E,"Returns `true` if this is the parent process of the `fork()`",98,[[["self"]],["bool"]]],[18,"F_OK",E,"Test for existence of file.",107,N],[18,"R_OK",E,"Test for read permission.",107,N],[18,"W_OK",E,"Test for write permission.",107,N],[18,"X_OK",E,"Test for execute (search) permission.",107,N],[11,"empty",E,R[1253],107,[[],[R[1432]]]],[11,"all",E,R[1254],107,[[],[R[1432]]]],[11,"bits",E,R[1255],107,[[["self"]],["c_int"]]],[11,R[1283],E,R[1256],107,[[["c_int"]],[[R[23],[R[1432]]],[R[1432]]]]],[11,R[1257],E,R[1258],107,[[["c_int"]],[R[1432]]]],[11,R[25],E,R[1259],107,[[["self"]],["bool"]]],[11,"is_all",E,R[1260],107,[[["self"]],["bool"]]],[11,R[1267],E,R[1261],107,[[["self"],[R[1432]]],["bool"]]],[11,R[1285],E,R[1262],107,[[["self"],[R[1432]]],["bool"]]],[11,"insert",E,R[1263],107,[[["self"],[R[1432]]]]],[11,"remove",E,R[1264],107,[[["self"],[R[1432]]]]],[11,"toggle",E,R[1265],107,[[["self"],[R[1432]]]]],[11,"set",E,R[1266],107,[[["self"],[R[1432]],["bool"]]]],[6,"Result","nix","Nix Result Type",N,N],[8,"NixPath",E,E,N,N],[10,"len",E,E,108,[[["self"]],["usize"]]],[10,"with_nix_path",E,E,108,[[["self"],["f"]],[R[3]]]],[11,"as_errno",E,"Convert this `Error` to an `Errno`.",0,[[["self"]],[[R[23],["errno"]],["errno"]]]],[11,"from_errno",E,"Create a nix Error from a given errno",0,[[["errno"]],["error"]]],[11,"last",E,"Get the current errno and convert it to a nix Error",0,[[],["error"]]],[11,"invalid_argument",E,"Create a new invalid argument error (`EINVAL`)",0,[[],["error"]]],[14,"request_code_none",E,R[1433],N,N],[14,"request_code_write_int",E,R[1433],N,N],[14,"request_code_read",E,"Generate an ioctl request code for a command that reads.",N,N],[14,"request_code_write",E,"Generate an ioctl request code for a command that writes.",N,N],[14,"request_code_readwrite",E,"Generate an ioctl request code for a command that reads…",N,N],[14,"ioctl_none",E,"Generates a wrapper function for an ioctl that passes no…",N,N],[14,"ioctl_none_bad",E,"Generates a wrapper function for a \"bad\" ioctl that passes…",N,N],[14,"ioctl_read",E,"Generates a wrapper function for an ioctl that reads data…",N,N],[14,"ioctl_read_bad",E,R[1435],N,N],[14,"ioctl_write_ptr",E,"Generates a wrapper function for an ioctl that writes data…",N,N],[14,"ioctl_write_ptr_bad",E,R[1434],N,N],[14,"ioctl_write_int",E,"Generates a wrapper function for a ioctl that writes an…",N,N],[14,"ioctl_write_int_bad",E,R[1434],N,N],[14,"ioctl_readwrite",E,R[1436],N,N],[14,"ioctl_readwrite_bad",E,R[1435],N,N],[14,"ioctl_read_buf",E,"Generates a wrapper function for an ioctl that reads an…",N,N],[14,"ioctl_write_buf",E,"Generates a wrapper function for an ioctl that writes an…",N,N],[14,"ioctl_readwrite_buf",E,R[1436],N,N],[14,"cmsg_space",E,"Create a buffer large enough for storing some control…",N,N],[11,"into",E,E,0,[[],[U]]],[11,R[113],E,E,0,[[["self"]],["string"]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[46],E,E,0,[[["self"]],[T]]],[11,R[47],E,E,0,[[["self"],[T]]]],[11,R[4],E,E,0,[[[U]],[R[3]]]],[11,R[5],E,E,0,[[],[R[3]]]],[11,R[7],E,E,0,[[["self"]],[T]]],[11,R[6],E,E,0,[[["self"]],[T]]],[11,R[8],E,E,0,[[["self"]],[R[9]]]],[11,"into",R[1496],E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[46],E,E,2,[[["self"]],[T]]],[11,R[47],E,E,2,[[["self"],[T]]]],[11,R[4],E,E,2,[[[U]],[R[3]]]],[11,R[5],E,E,2,[[],[R[3]]]],[11,R[7],E,E,2,[[["self"]],[T]]],[11,R[6],E,E,2,[[["self"]],[T]]],[11,R[8],E,E,2,[[["self"]],[R[9]]]],[11,"into",E,E,109,[[],[U]]],[11,R[45],E,E,109,[[],["i"]]],[11,"from",E,E,109,[[[T]],[T]]],[11,R[4],E,E,109,[[[U]],[R[3]]]],[11,R[5],E,E,109,[[],[R[3]]]],[11,R[7],E,E,109,[[["self"]],[T]]],[11,R[6],E,E,109,[[["self"]],[T]]],[11,R[8],E,E,109,[[["self"]],[R[9]]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[46],E,E,3,[[["self"]],[T]]],[11,R[47],E,E,3,[[["self"],[T]]]],[11,R[4],E,E,3,[[[U]],[R[3]]]],[11,R[5],E,E,3,[[],[R[3]]]],[11,R[7],E,E,3,[[["self"]],[T]]],[11,R[6],E,E,3,[[["self"]],[T]]],[11,R[8],E,E,3,[[["self"]],[R[9]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[46],E,E,1,[[["self"]],[T]]],[11,R[47],E,E,1,[[["self"],[T]]]],[11,R[4],E,E,1,[[[U]],[R[3]]]],[11,R[5],E,E,1,[[],[R[3]]]],[11,R[7],E,E,1,[[["self"]],[T]]],[11,R[6],E,E,1,[[["self"]],[T]]],[11,R[8],E,E,1,[[["self"]],[R[9]]]],[11,"into",R[1463],E,4,[[],[U]]],[11,R[113],E,E,4,[[["self"]],["string"]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[46],E,E,4,[[["self"]],[T]]],[11,R[47],E,E,4,[[["self"],[T]]]],[11,R[4],E,E,4,[[[U]],[R[3]]]],[11,R[5],E,E,4,[[],[R[3]]]],[11,R[7],E,E,4,[[["self"]],[T]]],[11,R[6],E,E,4,[[["self"]],[T]]],[11,R[8],E,E,4,[[["self"]],[R[9]]]],[11,"into",R[1462],E,8,[[],[U]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[46],E,E,8,[[["self"]],[T]]],[11,R[47],E,E,8,[[["self"],[T]]]],[11,R[4],E,E,8,[[[U]],[R[3]]]],[11,R[5],E,E,8,[[],[R[3]]]],[11,R[7],E,E,8,[[["self"]],[T]]],[11,R[6],E,E,8,[[["self"]],[T]]],[11,R[8],E,E,8,[[["self"]],[R[9]]]],[11,"into",E,E,9,[[],[U]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[46],E,E,9,[[["self"]],[T]]],[11,R[47],E,E,9,[[["self"],[T]]]],[11,R[4],E,E,9,[[[U]],[R[3]]]],[11,R[5],E,E,9,[[],[R[3]]]],[11,R[7],E,E,9,[[["self"]],[T]]],[11,R[6],E,E,9,[[["self"]],[T]]],[11,R[8],E,E,9,[[["self"]],[R[9]]]],[11,"into",E,E,10,[[],[U]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[46],E,E,10,[[["self"]],[T]]],[11,R[47],E,E,10,[[["self"],[T]]]],[11,R[4],E,E,10,[[[U]],[R[3]]]],[11,R[5],E,E,10,[[],[R[3]]]],[11,R[7],E,E,10,[[["self"]],[T]]],[11,R[6],E,E,10,[[["self"]],[T]]],[11,R[8],E,E,10,[[["self"]],[R[9]]]],[11,"into",E,E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[4],E,E,6,[[[U]],[R[3]]]],[11,R[5],E,E,6,[[],[R[3]]]],[11,R[7],E,E,6,[[["self"]],[T]]],[11,R[6],E,E,6,[[["self"]],[T]]],[11,R[8],E,E,6,[[["self"]],[R[9]]]],[11,"into",E,E,7,[[],[U]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[46],E,E,7,[[["self"]],[T]]],[11,R[47],E,E,7,[[["self"],[T]]]],[11,R[4],E,E,7,[[[U]],[R[3]]]],[11,R[5],E,E,7,[[],[R[3]]]],[11,R[7],E,E,7,[[["self"]],[T]]],[11,R[6],E,E,7,[[["self"]],[T]]],[11,R[8],E,E,7,[[["self"]],[R[9]]]],[11,"into",R[1437],E,11,[[],[U]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[46],E,E,11,[[["self"]],[T]]],[11,R[47],E,E,11,[[["self"],[T]]]],[11,R[4],E,E,11,[[[U]],[R[3]]]],[11,R[5],E,E,11,[[],[R[3]]]],[11,R[7],E,E,11,[[["self"]],[T]]],[11,R[6],E,E,11,[[["self"]],[T]]],[11,R[8],E,E,11,[[["self"]],[R[9]]]],[11,"into",E,E,110,[[],[U]]],[11,R[45],E,E,110,[[],["i"]]],[11,"from",E,E,110,[[[T]],[T]]],[11,R[4],E,E,110,[[[U]],[R[3]]]],[11,R[5],E,E,110,[[],[R[3]]]],[11,R[7],E,E,110,[[["self"]],[T]]],[11,R[6],E,E,110,[[["self"]],[T]]],[11,R[8],E,E,110,[[["self"]],[R[9]]]],[11,"into",R[1438],E,12,[[],[U]]],[11,"from",E,E,12,[[[T]],[T]]],[11,R[46],E,E,12,[[["self"]],[T]]],[11,R[47],E,E,12,[[["self"],[T]]]],[11,R[4],E,E,12,[[[U]],[R[3]]]],[11,R[5],E,E,12,[[],[R[3]]]],[11,R[7],E,E,12,[[["self"]],[T]]],[11,R[6],E,E,12,[[["self"]],[T]]],[11,R[8],E,E,12,[[["self"]],[R[9]]]],[11,"into",R[1464],E,13,[[],[U]]],[11,"from",E,E,13,[[[T]],[T]]],[11,R[46],E,E,13,[[["self"]],[T]]],[11,R[47],E,E,13,[[["self"],[T]]]],[11,R[4],E,E,13,[[[U]],[R[3]]]],[11,R[5],E,E,13,[[],[R[3]]]],[11,R[7],E,E,13,[[["self"]],[T]]],[11,R[6],E,E,13,[[["self"]],[T]]],[11,R[8],E,E,13,[[["self"]],[R[9]]]],[11,"into",E,E,14,[[],[U]]],[11,"from",E,E,14,[[[T]],[T]]],[11,R[46],E,E,14,[[["self"]],[T]]],[11,R[47],E,E,14,[[["self"],[T]]]],[11,R[4],E,E,14,[[[U]],[R[3]]]],[11,R[5],E,E,14,[[],[R[3]]]],[11,R[7],E,E,14,[[["self"]],[T]]],[11,R[6],E,E,14,[[["self"]],[T]]],[11,R[8],E,E,14,[[["self"]],[R[9]]]],[11,"into",R[1465],E,15,[[],[U]]],[11,"from",E,E,15,[[[T]],[T]]],[11,R[46],E,E,15,[[["self"]],[T]]],[11,R[47],E,E,15,[[["self"],[T]]]],[11,R[4],E,E,15,[[[U]],[R[3]]]],[11,R[5],E,E,15,[[],[R[3]]]],[11,R[7],E,E,15,[[["self"]],[T]]],[11,R[6],E,E,15,[[["self"]],[T]]],[11,R[8],E,E,15,[[["self"]],[R[9]]]],[11,"into",E,E,16,[[],[U]]],[11,"from",E,E,16,[[[T]],[T]]],[11,R[46],E,E,16,[[["self"]],[T]]],[11,R[47],E,E,16,[[["self"],[T]]]],[11,R[4],E,E,16,[[[U]],[R[3]]]],[11,R[5],E,E,16,[[],[R[3]]]],[11,R[7],E,E,16,[[["self"]],[T]]],[11,R[6],E,E,16,[[["self"]],[T]]],[11,R[8],E,E,16,[[["self"]],[R[9]]]],[11,"into",E,E,17,[[],[U]]],[11,"from",E,E,17,[[[T]],[T]]],[11,R[46],E,E,17,[[["self"]],[T]]],[11,R[47],E,E,17,[[["self"],[T]]]],[11,R[4],E,E,17,[[[U]],[R[3]]]],[11,R[5],E,E,17,[[],[R[3]]]],[11,R[7],E,E,17,[[["self"]],[T]]],[11,R[6],E,E,17,[[["self"]],[T]]],[11,R[8],E,E,17,[[["self"]],[R[9]]]],[11,"into",E,E,111,[[],[U]]],[11,"from",E,E,111,[[[T]],[T]]],[11,R[46],E,E,111,[[["self"]],[T]]],[11,R[47],E,E,111,[[["self"],[T]]]],[11,R[4],E,E,111,[[[U]],[R[3]]]],[11,R[5],E,E,111,[[],[R[3]]]],[11,R[7],E,E,111,[[["self"]],[T]]],[11,R[6],E,E,111,[[["self"]],[T]]],[11,R[8],E,E,111,[[["self"]],[R[9]]]],[11,"into",R[1439],E,23,[[],[U]]],[11,"from",E,E,23,[[[T]],[T]]],[11,R[4],E,E,23,[[[U]],[R[3]]]],[11,R[5],E,E,23,[[],[R[3]]]],[11,R[7],E,E,23,[[["self"]],[T]]],[11,R[6],E,E,23,[[["self"]],[T]]],[11,R[8],E,E,23,[[["self"]],[R[9]]]],[11,"into",E,E,18,[[],[U]]],[11,"from",E,E,18,[[[T]],[T]]],[11,R[46],E,E,18,[[["self"]],[T]]],[11,R[47],E,E,18,[[["self"],[T]]]],[11,R[4],E,E,18,[[[U]],[R[3]]]],[11,R[5],E,E,18,[[],[R[3]]]],[11,R[7],E,E,18,[[["self"]],[T]]],[11,R[6],E,E,18,[[["self"]],[T]]],[11,R[8],E,E,18,[[["self"]],[R[9]]]],[11,"into",E,E,19,[[],[U]]],[11,"from",E,E,19,[[[T]],[T]]],[11,R[46],E,E,19,[[["self"]],[T]]],[11,R[47],E,E,19,[[["self"],[T]]]],[11,R[4],E,E,19,[[[U]],[R[3]]]],[11,R[5],E,E,19,[[],[R[3]]]],[11,R[7],E,E,19,[[["self"]],[T]]],[11,R[6],E,E,19,[[["self"]],[T]]],[11,R[8],E,E,19,[[["self"]],[R[9]]]],[11,"into",E,E,20,[[],[U]]],[11,"from",E,E,20,[[[T]],[T]]],[11,R[46],E,E,20,[[["self"]],[T]]],[11,R[47],E,E,20,[[["self"],[T]]]],[11,R[4],E,E,20,[[[U]],[R[3]]]],[11,R[5],E,E,20,[[],[R[3]]]],[11,R[7],E,E,20,[[["self"]],[T]]],[11,R[6],E,E,20,[[["self"]],[T]]],[11,R[8],E,E,20,[[["self"]],[R[9]]]],[11,"into",E,E,21,[[],[U]]],[11,"from",E,E,21,[[[T]],[T]]],[11,R[46],E,E,21,[[["self"]],[T]]],[11,R[47],E,E,21,[[["self"],[T]]]],[11,R[4],E,E,21,[[[U]],[R[3]]]],[11,R[5],E,E,21,[[],[R[3]]]],[11,R[7],E,E,21,[[["self"]],[T]]],[11,R[6],E,E,21,[[["self"]],[T]]],[11,R[8],E,E,21,[[["self"]],[R[9]]]],[11,"into",E,E,22,[[],[U]]],[11,"from",E,E,22,[[[T]],[T]]],[11,R[4],E,E,22,[[[U]],[R[3]]]],[11,R[5],E,E,22,[[],[R[3]]]],[11,R[7],E,E,22,[[["self"]],[T]]],[11,R[6],E,E,22,[[["self"]],[T]]],[11,R[8],E,E,22,[[["self"]],[R[9]]]],[11,"into",R[1440],E,27,[[],[U]]],[11,"from",E,E,27,[[[T]],[T]]],[11,R[46],E,E,27,[[["self"]],[T]]],[11,R[47],E,E,27,[[["self"],[T]]]],[11,R[4],E,E,27,[[[U]],[R[3]]]],[11,R[5],E,E,27,[[],[R[3]]]],[11,R[7],E,E,27,[[["self"]],[T]]],[11,R[6],E,E,27,[[["self"]],[T]]],[11,R[8],E,E,27,[[["self"]],[R[9]]]],[11,"into",E,E,25,[[],[U]]],[11,"from",E,E,25,[[[T]],[T]]],[11,R[46],E,E,25,[[["self"]],[T]]],[11,R[47],E,E,25,[[["self"],[T]]]],[11,R[4],E,E,25,[[[U]],[R[3]]]],[11,R[5],E,E,25,[[],[R[3]]]],[11,R[7],E,E,25,[[["self"]],[T]]],[11,R[6],E,E,25,[[["self"]],[T]]],[11,R[8],E,E,25,[[["self"]],[R[9]]]],[11,"into",E,E,26,[[],[U]]],[11,"from",E,E,26,[[[T]],[T]]],[11,R[46],E,E,26,[[["self"]],[T]]],[11,R[47],E,E,26,[[["self"],[T]]]],[11,R[4],E,E,26,[[[U]],[R[3]]]],[11,R[5],E,E,26,[[],[R[3]]]],[11,R[7],E,E,26,[[["self"]],[T]]],[11,R[6],E,E,26,[[["self"]],[T]]],[11,R[8],E,E,26,[[["self"]],[R[9]]]],[11,"into",E,E,24,[[],[U]]],[11,"from",E,E,24,[[[T]],[T]]],[11,R[46],E,E,24,[[["self"]],[T]]],[11,R[47],E,E,24,[[["self"],[T]]]],[11,R[4],E,E,24,[[[U]],[R[3]]]],[11,R[5],E,E,24,[[],[R[3]]]],[11,R[7],E,E,24,[[["self"]],[T]]],[11,R[6],E,E,24,[[["self"]],[T]]],[11,R[8],E,E,24,[[["self"]],[R[9]]]],[11,"into",R[1441],E,29,[[],[U]]],[11,"from",E,E,29,[[[T]],[T]]],[11,R[46],E,E,29,[[["self"]],[T]]],[11,R[47],E,E,29,[[["self"],[T]]]],[11,R[4],E,E,29,[[[U]],[R[3]]]],[11,R[5],E,E,29,[[],[R[3]]]],[11,R[7],E,E,29,[[["self"]],[T]]],[11,R[6],E,E,29,[[["self"]],[T]]],[11,R[8],E,E,29,[[["self"]],[R[9]]]],[11,"into",E,E,30,[[],[U]]],[11,"from",E,E,30,[[[T]],[T]]],[11,R[46],E,E,30,[[["self"]],[T]]],[11,R[47],E,E,30,[[["self"],[T]]]],[11,R[4],E,E,30,[[[U]],[R[3]]]],[11,R[5],E,E,30,[[],[R[3]]]],[11,R[7],E,E,30,[[["self"]],[T]]],[11,R[6],E,E,30,[[["self"]],[T]]],[11,R[8],E,E,30,[[["self"]],[R[9]]]],[11,"into",E,E,31,[[],[U]]],[11,"from",E,E,31,[[[T]],[T]]],[11,R[46],E,E,31,[[["self"]],[T]]],[11,R[47],E,E,31,[[["self"],[T]]]],[11,R[4],E,E,31,[[[U]],[R[3]]]],[11,R[5],E,E,31,[[],[R[3]]]],[11,R[7],E,E,31,[[["self"]],[T]]],[11,R[6],E,E,31,[[["self"]],[T]]],[11,R[8],E,E,31,[[["self"]],[R[9]]]],[11,"into",E,E,32,[[],[U]]],[11,"from",E,E,32,[[[T]],[T]]],[11,R[46],E,E,32,[[["self"]],[T]]],[11,R[47],E,E,32,[[["self"],[T]]]],[11,R[4],E,E,32,[[[U]],[R[3]]]],[11,R[5],E,E,32,[[],[R[3]]]],[11,R[7],E,E,32,[[["self"]],[T]]],[11,R[6],E,E,32,[[["self"]],[T]]],[11,R[8],E,E,32,[[["self"]],[R[9]]]],[11,"into",E,E,28,[[],[U]]],[11,"from",E,E,28,[[[T]],[T]]],[11,R[46],E,E,28,[[["self"]],[T]]],[11,R[47],E,E,28,[[["self"],[T]]]],[11,R[4],E,E,28,[[[U]],[R[3]]]],[11,R[5],E,E,28,[[],[R[3]]]],[11,R[7],E,E,28,[[["self"]],[T]]],[11,R[6],E,E,28,[[["self"]],[T]]],[11,R[8],E,E,28,[[["self"]],[R[9]]]],[11,"into",R[1442],E,33,[[],[U]]],[11,"from",E,E,33,[[[T]],[T]]],[11,R[46],E,E,33,[[["self"]],[T]]],[11,R[47],E,E,33,[[["self"],[T]]]],[11,R[4],E,E,33,[[[U]],[R[3]]]],[11,R[5],E,E,33,[[],[R[3]]]],[11,R[7],E,E,33,[[["self"]],[T]]],[11,R[6],E,E,33,[[["self"]],[T]]],[11,R[8],E,E,33,[[["self"]],[R[9]]]],[11,"into",R[1443],E,34,[[],[U]]],[11,"from",E,E,34,[[[T]],[T]]],[11,R[46],E,E,34,[[["self"]],[T]]],[11,R[47],E,E,34,[[["self"],[T]]]],[11,R[4],E,E,34,[[[U]],[R[3]]]],[11,R[5],E,E,34,[[],[R[3]]]],[11,R[7],E,E,34,[[["self"]],[T]]],[11,R[6],E,E,34,[[["self"]],[T]]],[11,R[8],E,E,34,[[["self"]],[R[9]]]],[11,"into",R[1362],E,39,[[],[U]]],[11,"from",E,E,39,[[[T]],[T]]],[11,R[46],E,E,39,[[["self"]],[T]]],[11,R[47],E,E,39,[[["self"],[T]]]],[11,R[4],E,E,39,[[[U]],[R[3]]]],[11,R[5],E,E,39,[[],[R[3]]]],[11,R[7],E,E,39,[[["self"]],[T]]],[11,R[6],E,E,39,[[["self"]],[T]]],[11,R[8],E,E,39,[[["self"]],[R[9]]]],[11,"into",E,E,112,[[],[U]]],[11,R[45],E,E,112,[[],["i"]]],[11,"from",E,E,112,[[[T]],[T]]],[11,R[46],E,E,112,[[["self"]],[T]]],[11,R[47],E,E,112,[[["self"],[T]]]],[11,R[4],E,E,112,[[[U]],[R[3]]]],[11,R[5],E,E,112,[[],[R[3]]]],[11,R[7],E,E,112,[[["self"]],[T]]],[11,R[6],E,E,112,[[["self"]],[T]]],[11,R[8],E,E,112,[[["self"]],[R[9]]]],[11,"into",E,E,40,[[],[U]]],[11,"from",E,E,40,[[[T]],[T]]],[11,R[46],E,E,40,[[["self"]],[T]]],[11,R[47],E,E,40,[[["self"],[T]]]],[11,R[4],E,E,40,[[[U]],[R[3]]]],[11,R[5],E,E,40,[[],[R[3]]]],[11,R[7],E,E,40,[[["self"]],[T]]],[11,R[6],E,E,40,[[["self"]],[T]]],[11,R[8],E,E,40,[[["self"]],[R[9]]]],[11,"into",E,E,41,[[],[U]]],[11,"from",E,E,41,[[[T]],[T]]],[11,R[46],E,E,41,[[["self"]],[T]]],[11,R[47],E,E,41,[[["self"],[T]]]],[11,R[4],E,E,41,[[[U]],[R[3]]]],[11,R[5],E,E,41,[[],[R[3]]]],[11,R[7],E,E,41,[[["self"]],[T]]],[11,R[6],E,E,41,[[["self"]],[T]]],[11,R[8],E,E,41,[[["self"]],[R[9]]]],[11,"into",E,E,42,[[],[U]]],[11,"from",E,E,42,[[[T]],[T]]],[11,R[46],E,E,42,[[["self"]],[T]]],[11,R[47],E,E,42,[[["self"],[T]]]],[11,R[4],E,E,42,[[[U]],[R[3]]]],[11,R[5],E,E,42,[[],[R[3]]]],[11,R[7],E,E,42,[[["self"]],[T]]],[11,R[6],E,E,42,[[["self"]],[T]]],[11,R[8],E,E,42,[[["self"]],[R[9]]]],[11,"into",E,E,35,[[],[U]]],[11,R[113],E,E,35,[[["self"]],["string"]]],[11,"from",E,E,35,[[[T]],[T]]],[11,R[46],E,E,35,[[["self"]],[T]]],[11,R[47],E,E,35,[[["self"],[T]]]],[11,R[4],E,E,35,[[[U]],[R[3]]]],[11,R[5],E,E,35,[[],[R[3]]]],[11,R[7],E,E,35,[[["self"]],[T]]],[11,R[6],E,E,35,[[["self"]],[T]]],[11,R[8],E,E,35,[[["self"]],[R[9]]]],[11,"into",E,E,36,[[],[U]]],[11,"from",E,E,36,[[[T]],[T]]],[11,R[46],E,E,36,[[["self"]],[T]]],[11,R[47],E,E,36,[[["self"],[T]]]],[11,R[4],E,E,36,[[[U]],[R[3]]]],[11,R[5],E,E,36,[[],[R[3]]]],[11,R[7],E,E,36,[[["self"]],[T]]],[11,R[6],E,E,36,[[["self"]],[T]]],[11,R[8],E,E,36,[[["self"]],[R[9]]]],[11,"into",E,E,37,[[],[U]]],[11,"from",E,E,37,[[[T]],[T]]],[11,R[46],E,E,37,[[["self"]],[T]]],[11,R[47],E,E,37,[[["self"],[T]]]],[11,R[4],E,E,37,[[[U]],[R[3]]]],[11,R[5],E,E,37,[[],[R[3]]]],[11,R[7],E,E,37,[[["self"]],[T]]],[11,R[6],E,E,37,[[["self"]],[T]]],[11,R[8],E,E,37,[[["self"]],[R[9]]]],[11,"into",E,E,38,[[],[U]]],[11,"from",E,E,38,[[[T]],[T]]],[11,R[46],E,E,38,[[["self"]],[T]]],[11,R[47],E,E,38,[[["self"],[T]]]],[11,R[4],E,E,38,[[[U]],[R[3]]]],[11,R[5],E,E,38,[[],[R[3]]]],[11,R[7],E,E,38,[[["self"]],[T]]],[11,R[6],E,E,38,[[["self"]],[T]]],[11,R[8],E,E,38,[[["self"]],[R[9]]]],[11,"into",R[1385],E,43,[[],[U]]],[11,"from",E,E,43,[[[T]],[T]]],[11,R[46],E,E,43,[[["self"]],[T]]],[11,R[47],E,E,43,[[["self"],[T]]]],[11,R[4],E,E,43,[[[U]],[R[3]]]],[11,R[5],E,E,43,[[],[R[3]]]],[11,R[7],E,E,43,[[["self"]],[T]]],[11,R[6],E,E,43,[[["self"]],[T]]],[11,R[8],E,E,43,[[["self"]],[R[9]]]],[11,"into",E,E,44,[[],[U]]],[11,"from",E,E,44,[[[T]],[T]]],[11,R[46],E,E,44,[[["self"]],[T]]],[11,R[47],E,E,44,[[["self"],[T]]]],[11,R[4],E,E,44,[[[U]],[R[3]]]],[11,R[5],E,E,44,[[],[R[3]]]],[11,R[7],E,E,44,[[["self"]],[T]]],[11,R[6],E,E,44,[[["self"]],[T]]],[11,R[8],E,E,44,[[["self"]],[R[9]]]],[11,"into",E,E,45,[[],[U]]],[11,"from",E,E,45,[[[T]],[T]]],[11,R[46],E,E,45,[[["self"]],[T]]],[11,R[47],E,E,45,[[["self"],[T]]]],[11,R[4],E,E,45,[[[U]],[R[3]]]],[11,R[5],E,E,45,[[],[R[3]]]],[11,R[7],E,E,45,[[["self"]],[T]]],[11,R[6],E,E,45,[[["self"]],[T]]],[11,R[8],E,E,45,[[["self"]],[R[9]]]],[11,"into",E,E,46,[[],[U]]],[11,"from",E,E,46,[[[T]],[T]]],[11,R[46],E,E,46,[[["self"]],[T]]],[11,R[47],E,E,46,[[["self"],[T]]]],[11,R[4],E,E,46,[[[U]],[R[3]]]],[11,R[5],E,E,46,[[],[R[3]]]],[11,R[7],E,E,46,[[["self"]],[T]]],[11,R[6],E,E,46,[[["self"]],[T]]],[11,R[8],E,E,46,[[["self"]],[R[9]]]],[11,"into",E,E,47,[[],[U]]],[11,"from",E,E,47,[[[T]],[T]]],[11,R[46],E,E,47,[[["self"]],[T]]],[11,R[47],E,E,47,[[["self"],[T]]]],[11,R[4],E,E,47,[[[U]],[R[3]]]],[11,R[5],E,E,47,[[],[R[3]]]],[11,R[7],E,E,47,[[["self"]],[T]]],[11,R[6],E,E,47,[[["self"]],[T]]],[11,R[8],E,E,47,[[["self"]],[R[9]]]],[11,"into",E,E,48,[[],[U]]],[11,"from",E,E,48,[[[T]],[T]]],[11,R[46],E,E,48,[[["self"]],[T]]],[11,R[47],E,E,48,[[["self"],[T]]]],[11,R[4],E,E,48,[[[U]],[R[3]]]],[11,R[5],E,E,48,[[],[R[3]]]],[11,R[7],E,E,48,[[["self"]],[T]]],[11,R[6],E,E,48,[[["self"]],[T]]],[11,R[8],E,E,48,[[["self"]],[R[9]]]],[11,"into",E,E,49,[[],[U]]],[11,"from",E,E,49,[[[T]],[T]]],[11,R[46],E,E,49,[[["self"]],[T]]],[11,R[47],E,E,49,[[["self"],[T]]]],[11,R[4],E,E,49,[[[U]],[R[3]]]],[11,R[5],E,E,49,[[],[R[3]]]],[11,R[7],E,E,49,[[["self"]],[T]]],[11,R[6],E,E,49,[[["self"]],[T]]],[11,R[8],E,E,49,[[["self"]],[R[9]]]],[11,"into",E,E,50,[[],[U]]],[11,R[113],E,E,50,[[["self"]],["string"]]],[11,"from",E,E,50,[[[T]],[T]]],[11,R[46],E,E,50,[[["self"]],[T]]],[11,R[47],E,E,50,[[["self"],[T]]]],[11,R[4],E,E,50,[[[U]],[R[3]]]],[11,R[5],E,E,50,[[],[R[3]]]],[11,R[7],E,E,50,[[["self"]],[T]]],[11,R[6],E,E,50,[[["self"]],[T]]],[11,R[8],E,E,50,[[["self"]],[R[9]]]],[11,"into",E,E,51,[[],[U]]],[11,R[113],E,E,51,[[["self"]],["string"]]],[11,"from",E,E,51,[[[T]],[T]]],[11,R[46],E,E,51,[[["self"]],[T]]],[11,R[47],E,E,51,[[["self"],[T]]]],[11,R[4],E,E,51,[[[U]],[R[3]]]],[11,R[5],E,E,51,[[],[R[3]]]],[11,R[7],E,E,51,[[["self"]],[T]]],[11,R[6],E,E,51,[[["self"]],[T]]],[11,R[8],E,E,51,[[["self"]],[R[9]]]],[11,"into",E,E,52,[[],[U]]],[11,R[113],E,E,52,[[["self"]],["string"]]],[11,"from",E,E,52,[[[T]],[T]]],[11,R[46],E,E,52,[[["self"]],[T]]],[11,R[47],E,E,52,[[["self"],[T]]]],[11,R[4],E,E,52,[[[U]],[R[3]]]],[11,R[5],E,E,52,[[],[R[3]]]],[11,R[7],E,E,52,[[["self"]],[T]]],[11,R[6],E,E,52,[[["self"]],[T]]],[11,R[8],E,E,52,[[["self"]],[R[9]]]],[11,"into",E,E,53,[[],[U]]],[11,R[113],E,E,53,[[["self"]],["string"]]],[11,"from",E,E,53,[[[T]],[T]]],[11,R[46],E,E,53,[[["self"]],[T]]],[11,R[47],E,E,53,[[["self"],[T]]]],[11,R[4],E,E,53,[[[U]],[R[3]]]],[11,R[5],E,E,53,[[],[R[3]]]],[11,R[7],E,E,53,[[["self"]],[T]]],[11,R[6],E,E,53,[[["self"]],[T]]],[11,R[8],E,E,53,[[["self"]],[R[9]]]],[11,"into",E,E,68,[[],[U]]],[11,"from",E,E,68,[[[T]],[T]]],[11,R[46],E,E,68,[[["self"]],[T]]],[11,R[47],E,E,68,[[["self"],[T]]]],[11,R[4],E,E,68,[[[U]],[R[3]]]],[11,R[5],E,E,68,[[],[R[3]]]],[11,R[7],E,E,68,[[["self"]],[T]]],[11,R[6],E,E,68,[[["self"]],[T]]],[11,R[8],E,E,68,[[["self"]],[R[9]]]],[11,"into",E,E,69,[[],[U]]],[11,"from",E,E,69,[[[T]],[T]]],[11,R[46],E,E,69,[[["self"]],[T]]],[11,R[47],E,E,69,[[["self"],[T]]]],[11,R[4],E,E,69,[[[U]],[R[3]]]],[11,R[5],E,E,69,[[],[R[3]]]],[11,R[7],E,E,69,[[["self"]],[T]]],[11,R[6],E,E,69,[[["self"]],[T]]],[11,R[8],E,E,69,[[["self"]],[R[9]]]],[11,"into",E,E,70,[[],[U]]],[11,"from",E,E,70,[[[T]],[T]]],[11,R[46],E,E,70,[[["self"]],[T]]],[11,R[47],E,E,70,[[["self"],[T]]]],[11,R[4],E,E,70,[[[U]],[R[3]]]],[11,R[5],E,E,70,[[],[R[3]]]],[11,R[7],E,E,70,[[["self"]],[T]]],[11,R[6],E,E,70,[[["self"]],[T]]],[11,R[8],E,E,70,[[["self"]],[R[9]]]],[11,"into",E,E,71,[[],[U]]],[11,"from",E,E,71,[[[T]],[T]]],[11,R[46],E,E,71,[[["self"]],[T]]],[11,R[47],E,E,71,[[["self"],[T]]]],[11,R[4],E,E,71,[[[U]],[R[3]]]],[11,R[5],E,E,71,[[],[R[3]]]],[11,R[7],E,E,71,[[["self"]],[T]]],[11,R[6],E,E,71,[[["self"]],[T]]],[11,R[8],E,E,71,[[["self"]],[R[9]]]],[11,"into",E,E,72,[[],[U]]],[11,"from",E,E,72,[[[T]],[T]]],[11,R[46],E,E,72,[[["self"]],[T]]],[11,R[47],E,E,72,[[["self"],[T]]]],[11,R[4],E,E,72,[[[U]],[R[3]]]],[11,R[5],E,E,72,[[],[R[3]]]],[11,R[7],E,E,72,[[["self"]],[T]]],[11,R[6],E,E,72,[[["self"]],[T]]],[11,R[8],E,E,72,[[["self"]],[R[9]]]],[11,"into",E,E,54,[[],[U]]],[11,"from",E,E,54,[[[T]],[T]]],[11,R[46],E,E,54,[[["self"]],[T]]],[11,R[47],E,E,54,[[["self"],[T]]]],[11,R[4],E,E,54,[[[U]],[R[3]]]],[11,R[5],E,E,54,[[],[R[3]]]],[11,R[7],E,E,54,[[["self"]],[T]]],[11,R[6],E,E,54,[[["self"]],[T]]],[11,R[8],E,E,54,[[["self"]],[R[9]]]],[11,"into",E,E,113,[[],[U]]],[11,R[45],E,E,113,[[],["i"]]],[11,"from",E,E,113,[[[T]],[T]]],[11,R[46],E,E,113,[[["self"]],[T]]],[11,R[47],E,E,113,[[["self"],[T]]]],[11,R[4],E,E,113,[[[U]],[R[3]]]],[11,R[5],E,E,113,[[],[R[3]]]],[11,R[7],E,E,113,[[["self"]],[T]]],[11,R[6],E,E,113,[[["self"]],[T]]],[11,R[8],E,E,113,[[["self"]],[R[9]]]],[11,"into",E,E,55,[[],[U]]],[11,"from",E,E,55,[[[T]],[T]]],[11,R[46],E,E,55,[[["self"]],[T]]],[11,R[47],E,E,55,[[["self"],[T]]]],[11,R[4],E,E,55,[[[U]],[R[3]]]],[11,R[5],E,E,55,[[],[R[3]]]],[11,R[7],E,E,55,[[["self"]],[T]]],[11,R[6],E,E,55,[[["self"]],[T]]],[11,R[8],E,E,55,[[["self"]],[R[9]]]],[11,"into",E,E,56,[[],[U]]],[11,R[113],E,E,56,[[["self"]],["string"]]],[11,"from",E,E,56,[[[T]],[T]]],[11,R[46],E,E,56,[[["self"]],[T]]],[11,R[47],E,E,56,[[["self"],[T]]]],[11,R[4],E,E,56,[[[U]],[R[3]]]],[11,R[5],E,E,56,[[],[R[3]]]],[11,R[7],E,E,56,[[["self"]],[T]]],[11,R[6],E,E,56,[[["self"]],[T]]],[11,R[8],E,E,56,[[["self"]],[R[9]]]],[11,"into",E,E,57,[[],[U]]],[11,R[113],E,E,57,[[["self"]],["string"]]],[11,"from",E,E,57,[[[T]],[T]]],[11,R[46],E,E,57,[[["self"]],[T]]],[11,R[47],E,E,57,[[["self"],[T]]]],[11,R[4],E,E,57,[[[U]],[R[3]]]],[11,R[5],E,E,57,[[],[R[3]]]],[11,R[7],E,E,57,[[["self"]],[T]]],[11,R[6],E,E,57,[[["self"]],[T]]],[11,R[8],E,E,57,[[["self"]],[R[9]]]],[11,"into",E,E,58,[[],[U]]],[11,R[113],E,E,58,[[["self"]],["string"]]],[11,"from",E,E,58,[[[T]],[T]]],[11,R[46],E,E,58,[[["self"]],[T]]],[11,R[47],E,E,58,[[["self"],[T]]]],[11,R[4],E,E,58,[[[U]],[R[3]]]],[11,R[5],E,E,58,[[],[R[3]]]],[11,R[7],E,E,58,[[["self"]],[T]]],[11,R[6],E,E,58,[[["self"]],[T]]],[11,R[8],E,E,58,[[["self"]],[R[9]]]],[11,"into",E,E,59,[[],[U]]],[11,"from",E,E,59,[[[T]],[T]]],[11,R[46],E,E,59,[[["self"]],[T]]],[11,R[47],E,E,59,[[["self"],[T]]]],[11,R[4],E,E,59,[[[U]],[R[3]]]],[11,R[5],E,E,59,[[],[R[3]]]],[11,R[7],E,E,59,[[["self"]],[T]]],[11,R[6],E,E,59,[[["self"]],[T]]],[11,R[8],E,E,59,[[["self"]],[R[9]]]],[11,"into",E,E,60,[[],[U]]],[11,"from",E,E,60,[[[T]],[T]]],[11,R[46],E,E,60,[[["self"]],[T]]],[11,R[47],E,E,60,[[["self"],[T]]]],[11,R[4],E,E,60,[[[U]],[R[3]]]],[11,R[5],E,E,60,[[],[R[3]]]],[11,R[7],E,E,60,[[["self"]],[T]]],[11,R[6],E,E,60,[[["self"]],[T]]],[11,R[8],E,E,60,[[["self"]],[R[9]]]],[11,"into",E,E,61,[[],[U]]],[11,"from",E,E,61,[[[T]],[T]]],[11,R[46],E,E,61,[[["self"]],[T]]],[11,R[47],E,E,61,[[["self"],[T]]]],[11,R[4],E,E,61,[[[U]],[R[3]]]],[11,R[5],E,E,61,[[],[R[3]]]],[11,R[7],E,E,61,[[["self"]],[T]]],[11,R[6],E,E,61,[[["self"]],[T]]],[11,R[8],E,E,61,[[["self"]],[R[9]]]],[11,"into",E,E,62,[[],[U]]],[11,"from",E,E,62,[[[T]],[T]]],[11,R[46],E,E,62,[[["self"]],[T]]],[11,R[47],E,E,62,[[["self"],[T]]]],[11,R[4],E,E,62,[[[U]],[R[3]]]],[11,R[5],E,E,62,[[],[R[3]]]],[11,R[7],E,E,62,[[["self"]],[T]]],[11,R[6],E,E,62,[[["self"]],[T]]],[11,R[8],E,E,62,[[["self"]],[R[9]]]],[11,"into",E,E,63,[[],[U]]],[11,"from",E,E,63,[[[T]],[T]]],[11,R[46],E,E,63,[[["self"]],[T]]],[11,R[47],E,E,63,[[["self"],[T]]]],[11,R[4],E,E,63,[[[U]],[R[3]]]],[11,R[5],E,E,63,[[],[R[3]]]],[11,R[7],E,E,63,[[["self"]],[T]]],[11,R[6],E,E,63,[[["self"]],[T]]],[11,R[8],E,E,63,[[["self"]],[R[9]]]],[11,"into",E,E,64,[[],[U]]],[11,"from",E,E,64,[[[T]],[T]]],[11,R[46],E,E,64,[[["self"]],[T]]],[11,R[47],E,E,64,[[["self"],[T]]]],[11,R[4],E,E,64,[[[U]],[R[3]]]],[11,R[5],E,E,64,[[],[R[3]]]],[11,R[7],E,E,64,[[["self"]],[T]]],[11,R[6],E,E,64,[[["self"]],[T]]],[11,R[8],E,E,64,[[["self"]],[R[9]]]],[11,"into",R[1444],E,114,[[],[U]]],[11,"from",E,E,114,[[[T]],[T]]],[11,R[46],E,E,114,[[["self"]],[T]]],[11,R[47],E,E,114,[[["self"],[T]]]],[11,R[4],E,E,114,[[[U]],[R[3]]]],[11,R[5],E,E,114,[[],[R[3]]]],[11,R[7],E,E,114,[[["self"]],[T]]],[11,R[6],E,E,114,[[["self"]],[T]]],[11,R[8],E,E,114,[[["self"]],[R[9]]]],[11,"into",E,E,115,[[],[U]]],[11,"from",E,E,115,[[[T]],[T]]],[11,R[46],E,E,115,[[["self"]],[T]]],[11,R[47],E,E,115,[[["self"],[T]]]],[11,R[4],E,E,115,[[[U]],[R[3]]]],[11,R[5],E,E,115,[[],[R[3]]]],[11,R[7],E,E,115,[[["self"]],[T]]],[11,R[6],E,E,115,[[["self"]],[T]]],[11,R[8],E,E,115,[[["self"]],[R[9]]]],[11,"into",E,E,116,[[],[U]]],[11,"from",E,E,116,[[[T]],[T]]],[11,R[46],E,E,116,[[["self"]],[T]]],[11,R[47],E,E,116,[[["self"],[T]]]],[11,R[4],E,E,116,[[[U]],[R[3]]]],[11,R[5],E,E,116,[[],[R[3]]]],[11,R[7],E,E,116,[[["self"]],[T]]],[11,R[6],E,E,116,[[["self"]],[T]]],[11,R[8],E,E,116,[[["self"]],[R[9]]]],[11,"into",E,E,117,[[],[U]]],[11,"from",E,E,117,[[[T]],[T]]],[11,R[46],E,E,117,[[["self"]],[T]]],[11,R[47],E,E,117,[[["self"],[T]]]],[11,R[4],E,E,117,[[[U]],[R[3]]]],[11,R[5],E,E,117,[[],[R[3]]]],[11,R[7],E,E,117,[[["self"]],[T]]],[11,R[6],E,E,117,[[["self"]],[T]]],[11,R[8],E,E,117,[[["self"]],[R[9]]]],[11,"into",E,E,118,[[],[U]]],[11,"from",E,E,118,[[[T]],[T]]],[11,R[46],E,E,118,[[["self"]],[T]]],[11,R[47],E,E,118,[[["self"],[T]]]],[11,R[4],E,E,118,[[[U]],[R[3]]]],[11,R[5],E,E,118,[[],[R[3]]]],[11,R[7],E,E,118,[[["self"]],[T]]],[11,R[6],E,E,118,[[["self"]],[T]]],[11,R[8],E,E,118,[[["self"]],[R[9]]]],[11,"into",E,E,119,[[],[U]]],[11,"from",E,E,119,[[[T]],[T]]],[11,R[46],E,E,119,[[["self"]],[T]]],[11,R[47],E,E,119,[[["self"],[T]]]],[11,R[4],E,E,119,[[[U]],[R[3]]]],[11,R[5],E,E,119,[[],[R[3]]]],[11,R[7],E,E,119,[[["self"]],[T]]],[11,R[6],E,E,119,[[["self"]],[T]]],[11,R[8],E,E,119,[[["self"]],[R[9]]]],[11,"into",E,E,120,[[],[U]]],[11,"from",E,E,120,[[[T]],[T]]],[11,R[46],E,E,120,[[["self"]],[T]]],[11,R[47],E,E,120,[[["self"],[T]]]],[11,R[4],E,E,120,[[[U]],[R[3]]]],[11,R[5],E,E,120,[[],[R[3]]]],[11,R[7],E,E,120,[[["self"]],[T]]],[11,R[6],E,E,120,[[["self"]],[T]]],[11,R[8],E,E,120,[[["self"]],[R[9]]]],[11,"into",E,E,121,[[],[U]]],[11,"from",E,E,121,[[[T]],[T]]],[11,R[46],E,E,121,[[["self"]],[T]]],[11,R[47],E,E,121,[[["self"],[T]]]],[11,R[4],E,E,121,[[[U]],[R[3]]]],[11,R[5],E,E,121,[[],[R[3]]]],[11,R[7],E,E,121,[[["self"]],[T]]],[11,R[6],E,E,121,[[["self"]],[T]]],[11,R[8],E,E,121,[[["self"]],[R[9]]]],[11,"into",E,E,122,[[],[U]]],[11,"from",E,E,122,[[[T]],[T]]],[11,R[46],E,E,122,[[["self"]],[T]]],[11,R[47],E,E,122,[[["self"],[T]]]],[11,R[4],E,E,122,[[[U]],[R[3]]]],[11,R[5],E,E,122,[[],[R[3]]]],[11,R[7],E,E,122,[[["self"]],[T]]],[11,R[6],E,E,122,[[["self"]],[T]]],[11,R[8],E,E,122,[[["self"]],[R[9]]]],[11,"into",E,E,123,[[],[U]]],[11,"from",E,E,123,[[[T]],[T]]],[11,R[46],E,E,123,[[["self"]],[T]]],[11,R[47],E,E,123,[[["self"],[T]]]],[11,R[4],E,E,123,[[[U]],[R[3]]]],[11,R[5],E,E,123,[[],[R[3]]]],[11,R[7],E,E,123,[[["self"]],[T]]],[11,R[6],E,E,123,[[["self"]],[T]]],[11,R[8],E,E,123,[[["self"]],[R[9]]]],[11,"into",E,E,124,[[],[U]]],[11,"from",E,E,124,[[[T]],[T]]],[11,R[46],E,E,124,[[["self"]],[T]]],[11,R[47],E,E,124,[[["self"],[T]]]],[11,R[4],E,E,124,[[[U]],[R[3]]]],[11,R[5],E,E,124,[[],[R[3]]]],[11,R[7],E,E,124,[[["self"]],[T]]],[11,R[6],E,E,124,[[["self"]],[T]]],[11,R[8],E,E,124,[[["self"]],[R[9]]]],[11,"into",E,E,125,[[],[U]]],[11,"from",E,E,125,[[[T]],[T]]],[11,R[46],E,E,125,[[["self"]],[T]]],[11,R[47],E,E,125,[[["self"],[T]]]],[11,R[4],E,E,125,[[[U]],[R[3]]]],[11,R[5],E,E,125,[[],[R[3]]]],[11,R[7],E,E,125,[[["self"]],[T]]],[11,R[6],E,E,125,[[["self"]],[T]]],[11,R[8],E,E,125,[[["self"]],[R[9]]]],[11,"into",E,E,126,[[],[U]]],[11,"from",E,E,126,[[[T]],[T]]],[11,R[46],E,E,126,[[["self"]],[T]]],[11,R[47],E,E,126,[[["self"],[T]]]],[11,R[4],E,E,126,[[[U]],[R[3]]]],[11,R[5],E,E,126,[[],[R[3]]]],[11,R[7],E,E,126,[[["self"]],[T]]],[11,R[6],E,E,126,[[["self"]],[T]]],[11,R[8],E,E,126,[[["self"]],[R[9]]]],[11,"into",E,E,127,[[],[U]]],[11,"from",E,E,127,[[[T]],[T]]],[11,R[46],E,E,127,[[["self"]],[T]]],[11,R[47],E,E,127,[[["self"],[T]]]],[11,R[4],E,E,127,[[[U]],[R[3]]]],[11,R[5],E,E,127,[[],[R[3]]]],[11,R[7],E,E,127,[[["self"]],[T]]],[11,R[6],E,E,127,[[["self"]],[T]]],[11,R[8],E,E,127,[[["self"]],[R[9]]]],[11,"into",E,E,128,[[],[U]]],[11,"from",E,E,128,[[[T]],[T]]],[11,R[46],E,E,128,[[["self"]],[T]]],[11,R[47],E,E,128,[[["self"],[T]]]],[11,R[4],E,E,128,[[[U]],[R[3]]]],[11,R[5],E,E,128,[[],[R[3]]]],[11,R[7],E,E,128,[[["self"]],[T]]],[11,R[6],E,E,128,[[["self"]],[T]]],[11,R[8],E,E,128,[[["self"]],[R[9]]]],[11,"into",E,E,129,[[],[U]]],[11,"from",E,E,129,[[[T]],[T]]],[11,R[46],E,E,129,[[["self"]],[T]]],[11,R[47],E,E,129,[[["self"],[T]]]],[11,R[4],E,E,129,[[[U]],[R[3]]]],[11,R[5],E,E,129,[[],[R[3]]]],[11,R[7],E,E,129,[[["self"]],[T]]],[11,R[6],E,E,129,[[["self"]],[T]]],[11,R[8],E,E,129,[[["self"]],[R[9]]]],[11,"into",E,E,130,[[],[U]]],[11,"from",E,E,130,[[[T]],[T]]],[11,R[46],E,E,130,[[["self"]],[T]]],[11,R[47],E,E,130,[[["self"],[T]]]],[11,R[4],E,E,130,[[[U]],[R[3]]]],[11,R[5],E,E,130,[[],[R[3]]]],[11,R[7],E,E,130,[[["self"]],[T]]],[11,R[6],E,E,130,[[["self"]],[T]]],[11,R[8],E,E,130,[[["self"]],[R[9]]]],[11,"into",E,E,131,[[],[U]]],[11,"from",E,E,131,[[[T]],[T]]],[11,R[46],E,E,131,[[["self"]],[T]]],[11,R[47],E,E,131,[[["self"],[T]]]],[11,R[4],E,E,131,[[[U]],[R[3]]]],[11,R[5],E,E,131,[[],[R[3]]]],[11,R[7],E,E,131,[[["self"]],[T]]],[11,R[6],E,E,131,[[["self"]],[T]]],[11,R[8],E,E,131,[[["self"]],[R[9]]]],[11,"into",E,E,132,[[],[U]]],[11,"from",E,E,132,[[[T]],[T]]],[11,R[46],E,E,132,[[["self"]],[T]]],[11,R[47],E,E,132,[[["self"],[T]]]],[11,R[4],E,E,132,[[[U]],[R[3]]]],[11,R[5],E,E,132,[[],[R[3]]]],[11,R[7],E,E,132,[[["self"]],[T]]],[11,R[6],E,E,132,[[["self"]],[T]]],[11,R[8],E,E,132,[[["self"]],[R[9]]]],[11,"into",E,E,133,[[],[U]]],[11,"from",E,E,133,[[[T]],[T]]],[11,R[46],E,E,133,[[["self"]],[T]]],[11,R[47],E,E,133,[[["self"],[T]]]],[11,R[4],E,E,133,[[[U]],[R[3]]]],[11,R[5],E,E,133,[[],[R[3]]]],[11,R[7],E,E,133,[[["self"]],[T]]],[11,R[6],E,E,133,[[["self"]],[T]]],[11,R[8],E,E,133,[[["self"]],[R[9]]]],[11,"into",E,E,134,[[],[U]]],[11,"from",E,E,134,[[[T]],[T]]],[11,R[46],E,E,134,[[["self"]],[T]]],[11,R[47],E,E,134,[[["self"],[T]]]],[11,R[4],E,E,134,[[[U]],[R[3]]]],[11,R[5],E,E,134,[[],[R[3]]]],[11,R[7],E,E,134,[[["self"]],[T]]],[11,R[6],E,E,134,[[["self"]],[T]]],[11,R[8],E,E,134,[[["self"]],[R[9]]]],[11,"into",E,E,135,[[],[U]]],[11,"from",E,E,135,[[[T]],[T]]],[11,R[46],E,E,135,[[["self"]],[T]]],[11,R[47],E,E,135,[[["self"],[T]]]],[11,R[4],E,E,135,[[[U]],[R[3]]]],[11,R[5],E,E,135,[[],[R[3]]]],[11,R[7],E,E,135,[[["self"]],[T]]],[11,R[6],E,E,135,[[["self"]],[T]]],[11,R[8],E,E,135,[[["self"]],[R[9]]]],[11,"into",E,E,136,[[],[U]]],[11,"from",E,E,136,[[[T]],[T]]],[11,R[46],E,E,136,[[["self"]],[T]]],[11,R[47],E,E,136,[[["self"],[T]]]],[11,R[4],E,E,136,[[[U]],[R[3]]]],[11,R[5],E,E,136,[[],[R[3]]]],[11,R[7],E,E,136,[[["self"]],[T]]],[11,R[6],E,E,136,[[["self"]],[T]]],[11,R[8],E,E,136,[[["self"]],[R[9]]]],[11,"into",E,E,137,[[],[U]]],[11,"from",E,E,137,[[[T]],[T]]],[11,R[46],E,E,137,[[["self"]],[T]]],[11,R[47],E,E,137,[[["self"],[T]]]],[11,R[4],E,E,137,[[[U]],[R[3]]]],[11,R[5],E,E,137,[[],[R[3]]]],[11,R[7],E,E,137,[[["self"]],[T]]],[11,R[6],E,E,137,[[["self"]],[T]]],[11,R[8],E,E,137,[[["self"]],[R[9]]]],[11,"into",E,E,138,[[],[U]]],[11,"from",E,E,138,[[[T]],[T]]],[11,R[46],E,E,138,[[["self"]],[T]]],[11,R[47],E,E,138,[[["self"],[T]]]],[11,R[4],E,E,138,[[[U]],[R[3]]]],[11,R[5],E,E,138,[[],[R[3]]]],[11,R[7],E,E,138,[[["self"]],[T]]],[11,R[6],E,E,138,[[["self"]],[T]]],[11,R[8],E,E,138,[[["self"]],[R[9]]]],[11,"into",E,E,139,[[],[U]]],[11,"from",E,E,139,[[[T]],[T]]],[11,R[46],E,E,139,[[["self"]],[T]]],[11,R[47],E,E,139,[[["self"],[T]]]],[11,R[4],E,E,139,[[[U]],[R[3]]]],[11,R[5],E,E,139,[[],[R[3]]]],[11,R[7],E,E,139,[[["self"]],[T]]],[11,R[6],E,E,139,[[["self"]],[T]]],[11,R[8],E,E,139,[[["self"]],[R[9]]]],[11,"into",R[1445],E,73,[[],[U]]],[11,"from",E,E,73,[[[T]],[T]]],[11,R[46],E,E,73,[[["self"]],[T]]],[11,R[47],E,E,73,[[["self"],[T]]]],[11,R[4],E,E,73,[[[U]],[R[3]]]],[11,R[5],E,E,73,[[],[R[3]]]],[11,R[7],E,E,73,[[["self"]],[T]]],[11,R[6],E,E,73,[[["self"]],[T]]],[11,R[8],E,E,73,[[["self"]],[R[9]]]],[11,"into",E,E,76,[[],[U]]],[11,"from",E,E,76,[[[T]],[T]]],[11,R[46],E,E,76,[[["self"]],[T]]],[11,R[47],E,E,76,[[["self"],[T]]]],[11,R[4],E,E,76,[[[U]],[R[3]]]],[11,R[5],E,E,76,[[],[R[3]]]],[11,R[7],E,E,76,[[["self"]],[T]]],[11,R[6],E,E,76,[[["self"]],[T]]],[11,R[8],E,E,76,[[["self"]],[R[9]]]],[11,"into",E,E,77,[[],[U]]],[11,"from",E,E,77,[[[T]],[T]]],[11,R[46],E,E,77,[[["self"]],[T]]],[11,R[47],E,E,77,[[["self"],[T]]]],[11,R[4],E,E,77,[[[U]],[R[3]]]],[11,R[5],E,E,77,[[],[R[3]]]],[11,R[7],E,E,77,[[["self"]],[T]]],[11,R[6],E,E,77,[[["self"]],[T]]],[11,R[8],E,E,77,[[["self"]],[R[9]]]],[11,"into",E,E,74,[[],[U]]],[11,"from",E,E,74,[[[T]],[T]]],[11,R[46],E,E,74,[[["self"]],[T]]],[11,R[47],E,E,74,[[["self"],[T]]]],[11,R[4],E,E,74,[[[U]],[R[3]]]],[11,R[5],E,E,74,[[],[R[3]]]],[11,R[7],E,E,74,[[["self"]],[T]]],[11,R[6],E,E,74,[[["self"]],[T]]],[11,R[8],E,E,74,[[["self"]],[R[9]]]],[11,"into",E,E,75,[[],[U]]],[11,"from",E,E,75,[[[T]],[T]]],[11,R[46],E,E,75,[[["self"]],[T]]],[11,R[47],E,E,75,[[["self"],[T]]]],[11,R[4],E,E,75,[[[U]],[R[3]]]],[11,R[5],E,E,75,[[],[R[3]]]],[11,R[7],E,E,75,[[["self"]],[T]]],[11,R[6],E,E,75,[[["self"]],[T]]],[11,R[8],E,E,75,[[["self"]],[R[9]]]],[11,"into",R[1446],E,78,[[],[U]]],[11,"from",E,E,78,[[[T]],[T]]],[11,R[46],E,E,78,[[["self"]],[T]]],[11,R[47],E,E,78,[[["self"],[T]]]],[11,R[4],E,E,78,[[[U]],[R[3]]]],[11,R[5],E,E,78,[[],[R[3]]]],[11,R[7],E,E,78,[[["self"]],[T]]],[11,R[6],E,E,78,[[["self"]],[T]]],[11,R[8],E,E,78,[[["self"]],[R[9]]]],[11,"into",R[1447],E,79,[[],[U]]],[11,"from",E,E,79,[[[T]],[T]]],[11,R[46],E,E,79,[[["self"]],[T]]],[11,R[47],E,E,79,[[["self"],[T]]]],[11,R[4],E,E,79,[[[U]],[R[3]]]],[11,R[5],E,E,79,[[],[R[3]]]],[11,R[7],E,E,79,[[["self"]],[T]]],[11,R[6],E,E,79,[[["self"]],[T]]],[11,R[8],E,E,79,[[["self"]],[R[9]]]],[11,"into",E,E,80,[[],[U]]],[11,"from",E,E,80,[[[T]],[T]]],[11,R[46],E,E,80,[[["self"]],[T]]],[11,R[47],E,E,80,[[["self"],[T]]]],[11,R[4],E,E,80,[[[U]],[R[3]]]],[11,R[5],E,E,80,[[],[R[3]]]],[11,R[7],E,E,80,[[["self"]],[T]]],[11,R[6],E,E,80,[[["self"]],[T]]],[11,R[8],E,E,80,[[["self"]],[R[9]]]],[11,"into",R[1448],E,81,[[],[U]]],[11,"from",E,E,81,[[[T]],[T]]],[11,R[46],E,E,81,[[["self"]],[T]]],[11,R[47],E,E,81,[[["self"],[T]]]],[11,R[4],E,E,81,[[[U]],[R[3]]]],[11,R[5],E,E,81,[[],[R[3]]]],[11,R[7],E,E,81,[[["self"]],[T]]],[11,R[6],E,E,81,[[["self"]],[T]]],[11,R[8],E,E,81,[[["self"]],[R[9]]]],[11,"into",E,E,87,[[],[U]]],[11,"from",E,E,87,[[[T]],[T]]],[11,R[46],E,E,87,[[["self"]],[T]]],[11,R[47],E,E,87,[[["self"],[T]]]],[11,R[4],E,E,87,[[[U]],[R[3]]]],[11,R[5],E,E,87,[[],[R[3]]]],[11,R[7],E,E,87,[[["self"]],[T]]],[11,R[6],E,E,87,[[["self"]],[T]]],[11,R[8],E,E,87,[[["self"]],[R[9]]]],[11,"into",E,E,88,[[],[U]]],[11,"from",E,E,88,[[[T]],[T]]],[11,R[46],E,E,88,[[["self"]],[T]]],[11,R[47],E,E,88,[[["self"],[T]]]],[11,R[4],E,E,88,[[[U]],[R[3]]]],[11,R[5],E,E,88,[[],[R[3]]]],[11,R[7],E,E,88,[[["self"]],[T]]],[11,R[6],E,E,88,[[["self"]],[T]]],[11,R[8],E,E,88,[[["self"]],[R[9]]]],[11,"into",E,E,89,[[],[U]]],[11,"from",E,E,89,[[[T]],[T]]],[11,R[46],E,E,89,[[["self"]],[T]]],[11,R[47],E,E,89,[[["self"],[T]]]],[11,R[4],E,E,89,[[[U]],[R[3]]]],[11,R[5],E,E,89,[[],[R[3]]]],[11,R[7],E,E,89,[[["self"]],[T]]],[11,R[6],E,E,89,[[["self"]],[T]]],[11,R[8],E,E,89,[[["self"]],[R[9]]]],[11,"into",E,E,90,[[],[U]]],[11,"from",E,E,90,[[[T]],[T]]],[11,R[46],E,E,90,[[["self"]],[T]]],[11,R[47],E,E,90,[[["self"],[T]]]],[11,R[4],E,E,90,[[[U]],[R[3]]]],[11,R[5],E,E,90,[[],[R[3]]]],[11,R[7],E,E,90,[[["self"]],[T]]],[11,R[6],E,E,90,[[["self"]],[T]]],[11,R[8],E,E,90,[[["self"]],[R[9]]]],[11,"into",E,E,82,[[],[U]]],[11,"from",E,E,82,[[[T]],[T]]],[11,R[46],E,E,82,[[["self"]],[T]]],[11,R[47],E,E,82,[[["self"],[T]]]],[11,R[4],E,E,82,[[[U]],[R[3]]]],[11,R[5],E,E,82,[[],[R[3]]]],[11,R[7],E,E,82,[[["self"]],[T]]],[11,R[6],E,E,82,[[["self"]],[T]]],[11,R[8],E,E,82,[[["self"]],[R[9]]]],[11,"into",E,E,83,[[],[U]]],[11,"from",E,E,83,[[[T]],[T]]],[11,R[46],E,E,83,[[["self"]],[T]]],[11,R[47],E,E,83,[[["self"],[T]]]],[11,R[4],E,E,83,[[[U]],[R[3]]]],[11,R[5],E,E,83,[[],[R[3]]]],[11,R[7],E,E,83,[[["self"]],[T]]],[11,R[6],E,E,83,[[["self"]],[T]]],[11,R[8],E,E,83,[[["self"]],[R[9]]]],[11,"into",E,E,84,[[],[U]]],[11,"from",E,E,84,[[[T]],[T]]],[11,R[46],E,E,84,[[["self"]],[T]]],[11,R[47],E,E,84,[[["self"],[T]]]],[11,R[4],E,E,84,[[[U]],[R[3]]]],[11,R[5],E,E,84,[[],[R[3]]]],[11,R[7],E,E,84,[[["self"]],[T]]],[11,R[6],E,E,84,[[["self"]],[T]]],[11,R[8],E,E,84,[[["self"]],[R[9]]]],[11,"into",E,E,85,[[],[U]]],[11,"from",E,E,85,[[[T]],[T]]],[11,R[46],E,E,85,[[["self"]],[T]]],[11,R[47],E,E,85,[[["self"],[T]]]],[11,R[4],E,E,85,[[[U]],[R[3]]]],[11,R[5],E,E,85,[[],[R[3]]]],[11,R[7],E,E,85,[[["self"]],[T]]],[11,R[6],E,E,85,[[["self"]],[T]]],[11,R[8],E,E,85,[[["self"]],[R[9]]]],[11,"into",E,E,86,[[],[U]]],[11,"from",E,E,86,[[[T]],[T]]],[11,R[46],E,E,86,[[["self"]],[T]]],[11,R[47],E,E,86,[[["self"],[T]]]],[11,R[4],E,E,86,[[[U]],[R[3]]]],[11,R[5],E,E,86,[[],[R[3]]]],[11,R[7],E,E,86,[[["self"]],[T]]],[11,R[6],E,E,86,[[["self"]],[T]]],[11,R[8],E,E,86,[[["self"]],[R[9]]]],[11,"into",R[1449],E,92,[[],[U]]],[11,R[113],E,E,92,[[["self"]],["string"]]],[11,"from",E,E,92,[[[T]],[T]]],[11,R[46],E,E,92,[[["self"]],[T]]],[11,R[47],E,E,92,[[["self"],[T]]]],[11,R[4],E,E,92,[[[U]],[R[3]]]],[11,R[5],E,E,92,[[],[R[3]]]],[11,R[7],E,E,92,[[["self"]],[T]]],[11,R[6],E,E,92,[[["self"]],[T]]],[11,R[8],E,E,92,[[["self"]],[R[9]]]],[11,"into",E,E,93,[[],[U]]],[11,R[113],E,E,93,[[["self"]],["string"]]],[11,"from",E,E,93,[[[T]],[T]]],[11,R[46],E,E,93,[[["self"]],[T]]],[11,R[47],E,E,93,[[["self"],[T]]]],[11,R[4],E,E,93,[[[U]],[R[3]]]],[11,R[5],E,E,93,[[],[R[3]]]],[11,R[7],E,E,93,[[["self"]],[T]]],[11,R[6],E,E,93,[[["self"]],[T]]],[11,R[8],E,E,93,[[["self"]],[R[9]]]],[11,"into",R[1450],E,94,[[],[U]]],[11,"from",E,E,94,[[[T]],[T]]],[11,R[46],E,E,94,[[["self"]],[T]]],[11,R[47],E,E,94,[[["self"],[T]]]],[11,R[4],E,E,94,[[[U]],[R[3]]]],[11,R[5],E,E,94,[[],[R[3]]]],[11,R[7],E,E,94,[[["self"]],[T]]],[11,R[6],E,E,94,[[["self"]],[T]]],[11,R[8],E,E,94,[[["self"]],[R[9]]]],[11,"into",R[1451],E,95,[[],[U]]],[11,"from",E,E,95,[[[T]],[T]]],[11,R[46],E,E,95,[[["self"]],[T]]],[11,R[47],E,E,95,[[["self"],[T]]]],[11,R[4],E,E,95,[[[U]],[R[3]]]],[11,R[5],E,E,95,[[],[R[3]]]],[11,R[7],E,E,95,[[["self"]],[T]]],[11,R[6],E,E,95,[[["self"]],[T]]],[11,R[8],E,E,95,[[["self"]],[R[9]]]],[11,"into",R[1452],E,97,[[],[U]]],[11,"from",E,E,97,[[[T]],[T]]],[11,R[46],E,E,97,[[["self"]],[T]]],[11,R[47],E,E,97,[[["self"],[T]]]],[11,R[4],E,E,97,[[[U]],[R[3]]]],[11,R[5],E,E,97,[[],[R[3]]]],[11,R[7],E,E,97,[[["self"]],[T]]],[11,R[6],E,E,97,[[["self"]],[T]]],[11,R[8],E,E,97,[[["self"]],[R[9]]]],[11,"into",E,E,96,[[],[U]]],[11,"from",E,E,96,[[[T]],[T]]],[11,R[46],E,E,96,[[["self"]],[T]]],[11,R[47],E,E,96,[[["self"],[T]]]],[11,R[4],E,E,96,[[[U]],[R[3]]]],[11,R[5],E,E,96,[[],[R[3]]]],[11,R[7],E,E,96,[[["self"]],[T]]],[11,R[6],E,E,96,[[["self"]],[T]]],[11,R[8],E,E,96,[[["self"]],[R[9]]]],[11,"into",R[1420],E,104,[[],[U]]],[11,R[113],E,E,104,[[["self"]],["string"]]],[11,"from",E,E,104,[[[T]],[T]]],[11,R[46],E,E,104,[[["self"]],[T]]],[11,R[47],E,E,104,[[["self"],[T]]]],[11,R[4],E,E,104,[[[U]],[R[3]]]],[11,R[5],E,E,104,[[],[R[3]]]],[11,R[7],E,E,104,[[["self"]],[T]]],[11,R[6],E,E,104,[[["self"]],[T]]],[11,R[8],E,E,104,[[["self"]],[R[9]]]],[11,"into",E,E,105,[[],[U]]],[11,R[113],E,E,105,[[["self"]],["string"]]],[11,"from",E,E,105,[[[T]],[T]]],[11,R[46],E,E,105,[[["self"]],[T]]],[11,R[47],E,E,105,[[["self"],[T]]]],[11,R[4],E,E,105,[[[U]],[R[3]]]],[11,R[5],E,E,105,[[],[R[3]]]],[11,R[7],E,E,105,[[["self"]],[T]]],[11,R[6],E,E,105,[[["self"]],[T]]],[11,R[8],E,E,105,[[["self"]],[R[9]]]],[11,"into",E,E,106,[[],[U]]],[11,R[113],E,E,106,[[["self"]],["string"]]],[11,"from",E,E,106,[[[T]],[T]]],[11,R[46],E,E,106,[[["self"]],[T]]],[11,R[47],E,E,106,[[["self"],[T]]]],[11,R[4],E,E,106,[[[U]],[R[3]]]],[11,R[5],E,E,106,[[],[R[3]]]],[11,R[7],E,E,106,[[["self"]],[T]]],[11,R[6],E,E,106,[[["self"]],[T]]],[11,R[8],E,E,106,[[["self"]],[R[9]]]],[11,"into",E,E,107,[[],[U]]],[11,"from",E,E,107,[[[T]],[T]]],[11,R[46],E,E,107,[[["self"]],[T]]],[11,R[47],E,E,107,[[["self"],[T]]]],[11,R[4],E,E,107,[[[U]],[R[3]]]],[11,R[5],E,E,107,[[],[R[3]]]],[11,R[7],E,E,107,[[["self"]],[T]]],[11,R[6],E,E,107,[[["self"]],[T]]],[11,R[8],E,E,107,[[["self"]],[R[9]]]],[11,"into",E,E,98,[[],[U]]],[11,"from",E,E,98,[[[T]],[T]]],[11,R[46],E,E,98,[[["self"]],[T]]],[11,R[47],E,E,98,[[["self"],[T]]]],[11,R[4],E,E,98,[[[U]],[R[3]]]],[11,R[5],E,E,98,[[],[R[3]]]],[11,R[7],E,E,98,[[["self"]],[T]]],[11,R[6],E,E,98,[[["self"]],[T]]],[11,R[8],E,E,98,[[["self"]],[R[9]]]],[11,"into",E,E,99,[[],[U]]],[11,"from",E,E,99,[[[T]],[T]]],[11,R[46],E,E,99,[[["self"]],[T]]],[11,R[47],E,E,99,[[["self"],[T]]]],[11,R[4],E,E,99,[[[U]],[R[3]]]],[11,R[5],E,E,99,[[],[R[3]]]],[11,R[7],E,E,99,[[["self"]],[T]]],[11,R[6],E,E,99,[[["self"]],[T]]],[11,R[8],E,E,99,[[["self"]],[R[9]]]],[11,"into",E,E,100,[[],[U]]],[11,"from",E,E,100,[[[T]],[T]]],[11,R[46],E,E,100,[[["self"]],[T]]],[11,R[47],E,E,100,[[["self"],[T]]]],[11,R[4],E,E,100,[[[U]],[R[3]]]],[11,R[5],E,E,100,[[],[R[3]]]],[11,R[7],E,E,100,[[["self"]],[T]]],[11,R[6],E,E,100,[[["self"]],[T]]],[11,R[8],E,E,100,[[["self"]],[R[9]]]],[11,"into",E,E,101,[[],[U]]],[11,"from",E,E,101,[[[T]],[T]]],[11,R[46],E,E,101,[[["self"]],[T]]],[11,R[47],E,E,101,[[["self"],[T]]]],[11,R[4],E,E,101,[[[U]],[R[3]]]],[11,R[5],E,E,101,[[],[R[3]]]],[11,R[7],E,E,101,[[["self"]],[T]]],[11,R[6],E,E,101,[[["self"]],[T]]],[11,R[8],E,E,101,[[["self"]],[R[9]]]],[11,"into",E,E,102,[[],[U]]],[11,"from",E,E,102,[[[T]],[T]]],[11,R[46],E,E,102,[[["self"]],[T]]],[11,R[47],E,E,102,[[["self"],[T]]]],[11,R[4],E,E,102,[[[U]],[R[3]]]],[11,R[5],E,E,102,[[],[R[3]]]],[11,R[7],E,E,102,[[["self"]],[T]]],[11,R[6],E,E,102,[[["self"]],[T]]],[11,R[8],E,E,102,[[["self"]],[R[9]]]],[11,"into",E,E,103,[[],[U]]],[11,"from",E,E,103,[[[T]],[T]]],[11,R[46],E,E,103,[[["self"]],[T]]],[11,R[47],E,E,103,[[["self"],[T]]]],[11,R[4],E,E,103,[[[U]],[R[3]]]],[11,R[5],E,E,103,[[],[R[3]]]],[11,R[7],E,E,103,[[["self"]],[T]]],[11,R[6],E,E,103,[[["self"]],[T]]],[11,R[8],E,E,103,[[["self"]],[R[9]]]],[11,"eq",R[1465],E,15,[[["self"],["winsize"]],["bool"]]],[11,"ne",E,E,15,[[["self"],["winsize"]],["bool"]]],[11,"eq",R[1385],E,49,[[["self"],[R[791]]],["bool"]]],[11,"eq",R[1445],E,73,[[["self"],["stat"]],["bool"]]],[11,"ne",E,E,73,[[["self"],["stat"]],["bool"]]],[11,"eq",R[1385],E,44,[[["self"],["msghdr"]],["bool"]]],[11,"ne",E,E,44,[[["self"],["msghdr"]],["bool"]]],[11,"eq",E,E,48,[[["self"],[R[821]]],["bool"]]],[11,"eq",E,E,47,[[["self"],[R[790]]],["bool"]]],[11,"ne",E,E,47,[[["self"],[R[790]]],["bool"]]],[11,"eq",E,E,43,[[["self"],["cmsghdr"]],["bool"]]],[11,"ne",E,E,43,[[["self"],["cmsghdr"]],["bool"]]],[11,"eq",E,E,46,[[["self"],[R[799]]],["bool"]]],[11,"ne",E,E,46,[[["self"],[R[799]]],["bool"]]],[11,"eq",E,E,45,[[["self"],[R[789]]],["bool"]]],[11,"ne",E,E,45,[[["self"],[R[789]]],["bool"]]],[11,"hash",E,E,49,[[["self"],["h"]]]],[11,"hash",E,E,48,[[["self"],["h"]]]],[11,"hash",E,E,43,[[["self"],["__h"]]]],[11,"hash",E,E,46,[[["self"],["__h"]]]],[11,"hash",E,E,45,[[["self"],["__h"]]]],[11,"hash",E,E,44,[[["self"],["__h"]]]],[11,"hash",R[1465],E,15,[[["self"],["__h"]]]],[11,"hash",R[1445],E,73,[[["self"],["__h"]]]],[11,"hash",R[1385],E,47,[[["self"],["__h"]]]],[11,"clone",E,E,43,[[["self"]],["cmsghdr"]]],[11,"clone",R[1465],E,15,[[["self"]],["winsize"]]],[11,"clone",R[1385],E,48,[[["self"]],[R[821]]]],[11,"clone",E,E,47,[[["self"]],[R[790]]]],[11,"clone",E,E,44,[[["self"]],["msghdr"]]],[11,"clone",E,E,45,[[["self"]],[R[789]]]],[11,"clone",R[1445],E,73,[[["self"]],["stat"]]],[11,"clone",R[1385],E,49,[[["self"]],[R[791]]]],[11,"clone",E,E,46,[[["self"]],[R[799]]]],[11,"fmt",E,E,49,[[["self"],[R[10]]],[[R[3],["error"]],["error"]]]],[11,"fmt",E,E,43,[[["self"],[R[10]]],[[R[3],["error"]],["error"]]]],[11,"fmt",R[1465],E,15,[[["self"],[R[10]]],[[R[3],["error"]],["error"]]]],[11,"fmt",R[1445],E,73,[[["self"],[R[10]]],[[R[3],["error"]],["error"]]]],[11,"fmt",R[1385],E,45,[[["self"],[R[10]]],[[R[3],["error"]],["error"]]]],[11,"fmt",E,E,46,[[["self"],[R[10]]],[[R[3],["error"]],["error"]]]],[11,"fmt",E,E,44,[[["self"],[R[10]]],[[R[3],["error"]],["error"]]]],[11,"fmt",E,E,48,[[["self"],[R[10]]],[[R[3],["error"]],["error"]]]],[11,"fmt",E,E,47,[[["self"],[R[10]]],[[R[3],["error"]],["error"]]]],[11,R[85],E,E,72,[[["self"]]]],[11,"get",R[1444],E,114,[[["self"],["rawfd"]],[[R[3],["bool"]],["bool"]]]],[11,"get",E,E,115,[[["self"],["rawfd"]],[[R[3],["bool"]],["bool"]]]],[11,"get",E,E,116,[[["self"],["rawfd"]],[[R[3],["bool"]],["bool"]]]],[11,"get",E,E,117,[[["self"],["rawfd"]],[["linger"],[R[3],["linger"]]]]],[11,"get",E,E,122,[[["self"],["rawfd"]],[[R[3],["u8"]],["u8"]]]],[11,"get",E,E,123,[[["self"],["rawfd"]],[[R[3],["bool"]],["bool"]]]],[11,"get",E,E,124,[[["self"],["rawfd"]],[[R[3],["timeval"]],["timeval"]]]],[11,"get",E,E,125,[[["self"],["rawfd"]],[[R[3],["timeval"]],["timeval"]]]],[11,"get",E,E,126,[[["self"],["rawfd"]],[[R[3],["bool"]],["bool"]]]],[11,"get",E,E,127,[[["self"],["rawfd"]],[[R[3],["bool"]],["bool"]]]],[11,"get",E,E,128,[[["self"],["rawfd"]],[[R[3],["i32"]],["i32"]]]],[11,"get",E,E,129,[[["self"],["rawfd"]],[[R[3],["bool"]],["bool"]]]],[11,"get",E,E,130,[[["self"],["rawfd"]],[[R[3],["u32"]],["u32"]]]],[11,"get",E,E,131,[[["self"],["rawfd"]],[["usize"],[R[3],["usize"]]]]],[11,"get",E,E,132,[[["self"],["rawfd"]],[["usize"],[R[3],["usize"]]]]],[11,"get",E,E,133,[[["self"],["rawfd"]],[[R[3],[R[1488]]],[R[1488]]]]],[11,"get",E,E,134,[[["self"],["rawfd"]],[[R[3],["bool"]],["bool"]]]],[11,"get",E,E,135,[[["self"],["rawfd"]],[[R[3],["bool"]],["bool"]]]],[11,"get",E,E,136,[[["self"],["rawfd"]],[[R[3],["bool"]],["bool"]]]],[11,"get",E,E,137,[[["self"],["rawfd"]],[[R[3],["bool"]],["bool"]]]],[11,"get",E,E,138,[[["self"],["rawfd"]],[[R[3],["bool"]],["bool"]]]],[11,"get",E,E,139,[[["self"],["rawfd"]],[[R[3],["bool"]],["bool"]]]],[11,"set",E,E,114,[[["self"],["rawfd"],["bool"]],[R[3]]]],[11,"set",E,E,115,[[["self"],["rawfd"],["bool"]],[R[3]]]],[11,"set",E,E,116,[[["self"],["rawfd"],["bool"]],[R[3]]]],[11,"set",E,E,117,[[["self"],["rawfd"],["linger"]],[R[3]]]],[11,"set",E,E,118,[[["self"],["rawfd"],[R[1453]]],[R[3]]]],[11,"set",E,E,119,[[["self"],["rawfd"],[R[1453]]],[R[3]]]],[11,"set",E,E,120,[[["self"],["rawfd"],[R[1454]]],[R[3]]]],[11,"set",E,E,121,[[["self"],["rawfd"],[R[1454]]],[R[3]]]],[11,"set",E,E,122,[[["self"],["rawfd"],["u8"]],[R[3]]]],[11,"set",E,E,123,[[["self"],["rawfd"],["bool"]],[R[3]]]],[11,"set",E,E,124,[[["self"],["rawfd"],["timeval"]],[R[3]]]],[11,"set",E,E,125,[[["self"],["rawfd"],["timeval"]],[R[3]]]],[11,"set",E,E,126,[[["self"],["rawfd"],["bool"]],[R[3]]]],[11,"set",E,E,127,[[["self"],["rawfd"],["bool"]],[R[3]]]],[11,"set",E,E,129,[[["self"],["rawfd"],["bool"]],[R[3]]]],[11,"set",E,E,130,[[["self"],["rawfd"],["u32"]],[R[3]]]],[11,"set",E,E,131,[[["self"],["rawfd"],["usize"]],[R[3]]]],[11,"set",E,E,132,[[["self"],["rawfd"],["usize"]],[R[3]]]],[11,"set",E,E,135,[[["self"],["rawfd"],["bool"]],[R[3]]]],[11,"set",E,E,136,[[["self"],["rawfd"],["bool"]],[R[3]]]],[11,"set",E,E,137,[[["self"],["rawfd"],["bool"]],[R[3]]]],[11,"set",E,E,138,[[["self"],["rawfd"],["bool"]],[R[3]]]],[11,"set",E,E,139,[[["self"],["rawfd"],["bool"]],[R[3]]]],[11,"seconds",R[1449],E,92,[[["i64"]],[R[785]]]],[11,R[1455],E,E,92,[[["i64"]],[R[785]]]],[11,R[1456],E,"Makes a new `TimeSpec` with given number of microseconds.",92,[[["i64"]],[R[785]]]],[11,R[1457],E,"Makes a new `TimeSpec` with given number of nanoseconds.",92,[[["i64"]],[R[785]]]],[11,R[1458],E,E,92,[[["self"]],["i64"]]],[11,R[1459],E,E,92,[[["self"]],["i64"]]],[11,R[1460],E,E,92,[[["self"]],["i64"]]],[11,R[1461],E,E,92,[[["self"]],["i64"]]],[11,"seconds",E,E,93,[[["i64"]],["timeval"]]],[11,R[1455],E,E,93,[[["i64"]],["timeval"]]],[11,R[1456],E,"Makes a new `TimeVal` with given number of microseconds.",93,[[["i64"]],["timeval"]]],[11,R[1457],E,"Makes a new `TimeVal` with given number of nanoseconds.…",93,[[["i64"]],["timeval"]]],[11,R[1458],E,E,93,[[["self"]],["i64"]]],[11,R[1459],E,E,93,[[["self"]],["i64"]]],[11,R[1460],E,E,93,[[["self"]],["i64"]]],[11,R[1461],E,E,93,[[["self"]],["i64"]]],[11,"as_ref",R[1362],E,35,[[["self"]],["str"]]],[11,"as_ref",E,E,41,[[["self"]],["sigset_t"]]],[11,"as_ref",R[1449],E,92,[[["self"]],[R[785]]]],[11,"as_ref",E,E,93,[[["self"]],["timeval"]]],[11,R[83],R[1447],E,79,[[],["fsflags"]]],[11,"extend",R[1462],E,8,[[["self"],[R[82]]]]],[11,"extend",E,E,9,[[["self"],[R[82]]]]],[11,"extend",E,E,10,[[["self"],[R[82]]]]],[11,"extend",R[1438],E,12,[[["self"],[R[82]]]]],[11,"extend",R[1464],E,14,[[["self"],[R[82]]]]],[11,"extend",R[1440],E,25,[[["self"],[R[82]]]]],[11,"extend",E,E,26,[[["self"],[R[82]]]]],[11,"extend",R[1441],E,29,[[["self"],[R[82]]]]],[11,"extend",E,E,30,[[["self"],[R[82]]]]],[11,"extend",E,E,31,[[["self"],[R[82]]]]],[11,"extend",E,E,32,[[["self"],[R[82]]]]],[11,"extend",R[1362],E,40,[[["self"],[R[82]]]]],[11,"extend",R[1385],E,68,[[["self"],[R[82]]]]],[11,"extend",E,E,69,[[["self"],[R[82]]]]],[11,"extend",R[1445],E,76,[[["self"],[R[82]]]]],[11,"extend",E,E,77,[[["self"],[R[82]]]]],[11,"extend",R[1447],E,79,[[["self"],[R[82]]]]],[11,"extend",R[1448],E,87,[[["self"],[R[82]]]]],[11,"extend",E,E,88,[[["self"],[R[82]]]]],[11,"extend",E,E,89,[[["self"],[R[82]]]]],[11,"extend",E,E,90,[[["self"],[R[82]]]]],[11,"extend",R[1452],E,97,[[["self"],[R[82]]]]],[11,"extend",R[1420],E,107,[[["self"],[R[82]]]]],[11,"clone",R[1496],E,2,[[["self"]],["dir"]]],[11,"clone",E,E,3,[[["self"]],["entry"]]],[11,"clone",E,E,1,[[["self"]],["type"]]],[11,"clone",R[1463],E,4,[[["self"]],["errno"]]],[11,"clone",R[1462],E,8,[[["self"]],["atflags"]]],[11,"clone",E,E,9,[[["self"]],["oflag"]]],[11,"clone",E,E,10,[[["self"]],["fdflag"]]],[11,"clone",E,E,7,[[["self"]],["flockarg"]]],[11,"clone",R[1437],E,11,[[["self"]],[R[1476]]]],[11,"clone",R[1438],E,12,[[["self"]],[R[1282]]]],[11,"clone",R[1464],E,13,[[["self"]],["pollfd"]]],[11,"clone",E,E,14,[[["self"]],[R[1284]]]],[11,"clone",R[1465],E,16,[[["self"]],[R[1289]]]],[11,"clone",E,E,17,[[["self"]],[R[1290]]]],[11,"clone",E,E,111,[[["self"]],[R[1288]]]],[11,"clone",R[1439],E,18,[[["self"]],[R[1466]]]],[11,"clone",E,E,19,[[["self"]],[R[1296]]]],[11,"clone",E,E,20,[[["self"]],["liomode"]]],[11,"clone",E,E,21,[[["self"]],[R[1292]]]],[11,"clone",R[1440],E,27,[[["self"]],["kevent"]]],[11,"clone",E,E,24,[[["self"]],[R[1332]]]],[11,"clone",E,E,25,[[["self"]],[R[1308]]]],[11,"clone",E,E,26,[[["self"]],[R[1331]]]],[11,"clone",R[1441],E,29,[[["self"]],[R[1342]]]],[11,"clone",E,E,30,[[["self"]],[R[1346]]]],[11,"clone",E,E,28,[[["self"]],[R[1474]]]],[11,"clone",E,E,31,[[["self"]],["msflags"]]],[11,"clone",E,E,32,[[["self"]],[R[1351]]]],[11,"clone",R[1442],E,33,[[["self"]],["request"]]],[11,"clone",R[1443],E,34,[[["self"]],["fdset"]]],[11,"clone",R[1362],E,35,[[["self"]],["signal"]]],[11,"clone",E,E,112,[[["self"]],[R[1467]]]],[11,"clone",E,E,40,[[["self"]],["saflags"]]],[11,"clone",E,E,36,[[["self"]],[R[1369]]]],[11,"clone",E,E,41,[[["self"]],["sigset"]]],[11,"clone",E,E,37,[[["self"]],[R[1363]]]],[11,"clone",E,E,42,[[["self"]],[R[782]]]],[11,"clone",E,E,38,[[["self"]],[R[1295]]]],[11,"clone",E,E,39,[[["self"]],[R[827]]]],[11,"clone",R[1385],E,55,[[["self"]],[R[1377]]]],[11,"clone",E,E,57,[[["self"]],["inetaddr"]]],[11,"clone",E,E,58,[[["self"]],["ipaddr"]]],[11,"clone",E,E,51,[[["self"]],[R[1391]]]],[11,"clone",E,E,52,[[["self"]],[R[1477]]]],[11,"clone",E,E,50,[[["self"]],["unixaddr"]]],[11,"clone",E,E,56,[[["self"]],[R[789]]]],[11,"clone",E,E,53,[[["self"]],["linkaddr"]]],[11,"clone",R[1444],E,114,[[["self"]],["reuseaddr"]]],[11,"clone",E,E,115,[[["self"]],["reuseport"]]],[11,"clone",E,E,116,[[["self"]],["tcpnodelay"]]],[11,"clone",E,E,117,[[["self"]],["linger"]]],[11,"clone",E,E,118,[[["self"]],[R[1478]]]],[11,"clone",E,E,119,[[["self"]],[R[1479]]]],[11,"clone",E,E,120,[[["self"]],[R[1480]]]],[11,"clone",E,E,121,[[["self"]],[R[1481]]]],[11,"clone",E,E,122,[[["self"]],[R[1482]]]],[11,"clone",E,E,123,[[["self"]],[R[1483]]]],[11,"clone",E,E,124,[[["self"]],[R[1484]]]],[11,"clone",E,E,125,[[["self"]],[R[1485]]]],[11,"clone",E,E,126,[[["self"]],["broadcast"]]],[11,"clone",E,E,127,[[["self"]],["oobinline"]]],[11,"clone",E,E,128,[[["self"]],[R[1486]]]],[11,"clone",E,E,129,[[["self"]],["keepalive"]]],[11,"clone",E,E,130,[[["self"]],[R[1487]]]],[11,"clone",E,E,131,[[["self"]],["rcvbuf"]]],[11,"clone",E,E,132,[[["self"]],["sndbuf"]]],[11,"clone",E,E,133,[[["self"]],[R[1488]]]],[11,"clone",E,E,134,[[["self"]],["acceptconn"]]],[11,"clone",E,E,135,[[["self"]],[R[1489]]]],[11,"clone",E,E,136,[[["self"]],[R[1490]]]],[11,"clone",E,E,137,[[["self"]],[R[1491]]]],[11,"clone",E,E,138,[[["self"]],["ipv4recvif"]]],[11,"clone",E,E,139,[[["self"]],[R[1492]]]],[11,"clone",R[1385],E,59,[[["self"]],[R[1488]]]],[11,"clone",E,E,60,[[["self"]],[R[1378]]]],[11,"clone",E,E,68,[[["self"]],[R[1387]]]],[11,"clone",E,E,69,[[["self"]],[R[1390]]]],[11,"clone",E,E,70,[[["self"]],[R[1453]]]],[11,"clone",E,E,71,[[["self"]],[R[1454]]]],[11,"clone",E,E,72,[[["self"]],["cmsgspace"]]],[11,"clone",E,E,54,[[["self"]],["recvmsg"]]],[11,"clone",E,E,113,[[["self"]],[R[1468]]]],[11,"clone",E,E,61,[[["self"]],[R[1493]]]],[11,"clone",E,E,62,[[["self"]],[R[1494]]]],[11,"clone",E,E,63,[[["self"]],["socklevel"]]],[11,"clone",E,E,64,[[["self"]],["shutdown"]]],[11,"clone",R[1445],E,76,[[["self"]],["sflag"]]],[11,"clone",E,E,77,[[["self"]],["mode"]]],[11,"clone",E,E,74,[[["self"]],[R[1469]]]],[11,"clone",E,E,75,[[["self"]],[R[1470]]]],[11,"clone",R[1446],E,78,[[["self"]],["statfs"]]],[11,"clone",R[1447],E,79,[[["self"]],["fsflags"]]],[11,"clone",E,E,80,[[["self"]],[R[828]]]],[11,"clone",R[1448],E,81,[[["self"]],["termios"]]],[11,"clone",E,E,82,[[["self"]],["baudrate"]]],[11,"clone",E,E,83,[[["self"]],["setarg"]]],[11,"clone",E,E,84,[[["self"]],["flusharg"]]],[11,"clone",E,E,85,[[["self"]],["flowarg"]]],[11,"clone",E,E,86,[[["self"]],[R[1475]]]],[11,"clone",E,E,87,[[["self"]],[R[1412]]]],[11,"clone",E,E,88,[[["self"]],[R[1413]]]],[11,"clone",E,E,89,[[["self"]],[R[1415]]]],[11,"clone",E,E,90,[[["self"]],[R[1416]]]],[11,"clone",R[1449],E,92,[[["self"]],[R[785]]]],[11,"clone",E,E,93,[[["self"]],["timeval"]]],[11,"clone",R[1450],E,94,[[["self"]],["iovec"]]],[11,"clone",R[1451],E,95,[[["self"]],["utsname"]]],[11,"clone",R[1452],E,97,[[["self"]],[R[1418]]]],[11,"clone",E,E,96,[[["self"]],[R[1419]]]],[11,"clone",R[1420],E,104,[[["self"]],["uid"]]],[11,"clone",E,E,105,[[["self"]],["gid"]]],[11,"clone",E,E,106,[[["self"]],["pid"]]],[11,"clone",E,E,98,[[["self"]],[R[1471]]]],[11,"clone",E,E,99,[[["self"]],[R[1472]]]],[11,"clone",E,E,100,[[["self"]],["whence"]]],[11,"clone",E,E,101,[[["self"]],[R[1473]]]],[11,"clone",E,E,102,[[["self"]],[R[1431]]]],[11,"clone",E,E,103,[[["self"]],[R[1495]]]],[11,"clone",E,E,107,[[["self"]],[R[1432]]]],[11,"clone","nix",E,0,[[["self"]],["error"]]],[11,R[77],R[1462],E,8,[[["self"],["atflags"]],[[R[50]],[R[23],[R[50]]]]]],[11,"lt",E,E,8,[[["self"],["atflags"]],["bool"]]],[11,"le",E,E,8,[[["self"],["atflags"]],["bool"]]],[11,"gt",E,E,8,[[["self"],["atflags"]],["bool"]]],[11,"ge",E,E,8,[[["self"],["atflags"]],["bool"]]],[11,R[77],E,E,9,[[["self"],["oflag"]],[[R[50]],[R[23],[R[50]]]]]],[11,"lt",E,E,9,[[["self"],["oflag"]],["bool"]]],[11,"le",E,E,9,[[["self"],["oflag"]],["bool"]]],[11,"gt",E,E,9,[[["self"],["oflag"]],["bool"]]],[11,"ge",E,E,9,[[["self"],["oflag"]],["bool"]]],[11,R[77],E,E,10,[[["self"],["fdflag"]],[[R[50]],[R[23],[R[50]]]]]],[11,"lt",E,E,10,[[["self"],["fdflag"]],["bool"]]],[11,"le",E,E,10,[[["self"],["fdflag"]],["bool"]]],[11,"gt",E,E,10,[[["self"],["fdflag"]],["bool"]]],[11,"ge",E,E,10,[[["self"],["fdflag"]],["bool"]]],[11,R[77],R[1438],E,12,[[["self"],[R[1282]]],[[R[50]],[R[23],[R[50]]]]]],[11,"lt",E,E,12,[[["self"],[R[1282]]],["bool"]]],[11,"le",E,E,12,[[["self"],[R[1282]]],["bool"]]],[11,"gt",E,E,12,[[["self"],[R[1282]]],["bool"]]],[11,"ge",E,E,12,[[["self"],[R[1282]]],["bool"]]],[11,R[77],R[1464],E,14,[[["self"],[R[1284]]],[[R[50]],[R[23],[R[50]]]]]],[11,"lt",E,E,14,[[["self"],[R[1284]]],["bool"]]],[11,"le",E,E,14,[[["self"],[R[1284]]],["bool"]]],[11,"gt",E,E,14,[[["self"],[R[1284]]],["bool"]]],[11,"ge",E,E,14,[[["self"],[R[1284]]],["bool"]]],[11,R[77],R[1439],E,18,[[["self"],[R[1466]]],[[R[50]],[R[23],[R[50]]]]]],[11,R[77],E,E,19,[[["self"],[R[1296]]],[[R[50]],[R[23],[R[50]]]]]],[11,R[77],E,E,20,[[["self"],["liomode"]],[[R[50]],[R[23],[R[50]]]]]],[11,R[77],R[1440],E,24,[[["self"],[R[1332]]],[[R[50]],[R[23],[R[50]]]]]],[11,R[77],E,E,25,[[["self"],[R[1308]]],[[R[50]],[R[23],[R[50]]]]]],[11,"lt",E,E,25,[[["self"],[R[1308]]],["bool"]]],[11,"le",E,E,25,[[["self"],[R[1308]]],["bool"]]],[11,"gt",E,E,25,[[["self"],[R[1308]]],["bool"]]],[11,"ge",E,E,25,[[["self"],[R[1308]]],["bool"]]],[11,R[77],E,E,26,[[["self"],[R[1331]]],[[R[50]],[R[23],[R[50]]]]]],[11,"lt",E,E,26,[[["self"],[R[1331]]],["bool"]]],[11,"le",E,E,26,[[["self"],[R[1331]]],["bool"]]],[11,"gt",E,E,26,[[["self"],[R[1331]]],["bool"]]],[11,"ge",E,E,26,[[["self"],[R[1331]]],["bool"]]],[11,R[77],R[1441],E,29,[[["self"],[R[1342]]],[[R[50]],[R[23],[R[50]]]]]],[11,"lt",E,E,29,[[["self"],[R[1342]]],["bool"]]],[11,"le",E,E,29,[[["self"],[R[1342]]],["bool"]]],[11,"gt",E,E,29,[[["self"],[R[1342]]],["bool"]]],[11,"ge",E,E,29,[[["self"],[R[1342]]],["bool"]]],[11,R[77],E,E,30,[[["self"],[R[1346]]],[[R[50]],[R[23],[R[50]]]]]],[11,"lt",E,E,30,[[["self"],[R[1346]]],["bool"]]],[11,"le",E,E,30,[[["self"],[R[1346]]],["bool"]]],[11,"gt",E,E,30,[[["self"],[R[1346]]],["bool"]]],[11,"ge",E,E,30,[[["self"],[R[1346]]],["bool"]]],[11,R[77],E,E,28,[[["self"],[R[1474]]],[[R[50]],[R[23],[R[50]]]]]],[11,R[77],E,E,31,[[["self"],["msflags"]],[[R[50]],[R[23],[R[50]]]]]],[11,"lt",E,E,31,[[["self"],["msflags"]],["bool"]]],[11,"le",E,E,31,[[["self"],["msflags"]],["bool"]]],[11,"gt",E,E,31,[[["self"],["msflags"]],["bool"]]],[11,"ge",E,E,31,[[["self"],["msflags"]],["bool"]]],[11,R[77],E,E,32,[[["self"],[R[1351]]],[[R[50]],[R[23],[R[50]]]]]],[11,"lt",E,E,32,[[["self"],[R[1351]]],["bool"]]],[11,"le",E,E,32,[[["self"],[R[1351]]],["bool"]]],[11,"gt",E,E,32,[[["self"],[R[1351]]],["bool"]]],[11,"ge",E,E,32,[[["self"],[R[1351]]],["bool"]]],[11,R[77],R[1442],E,33,[[["self"],["request"]],[[R[50]],[R[23],[R[50]]]]]],[11,R[77],R[1362],E,35,[[["self"],["signal"]],[[R[50]],[R[23],[R[50]]]]]],[11,R[77],E,E,40,[[["self"],["saflags"]],[[R[50]],[R[23],[R[50]]]]]],[11,"lt",E,E,40,[[["self"],["saflags"]],["bool"]]],[11,"le",E,E,40,[[["self"],["saflags"]],["bool"]]],[11,"gt",E,E,40,[[["self"],["saflags"]],["bool"]]],[11,"ge",E,E,40,[[["self"],["saflags"]],["bool"]]],[11,R[77],E,E,36,[[["self"],[R[1369]]],[[R[50]],[R[23],[R[50]]]]]],[11,R[77],R[1385],E,68,[[["self"],[R[1387]]],[[R[50]],[R[23],[R[50]]]]]],[11,"lt",E,E,68,[[["self"],[R[1387]]],["bool"]]],[11,"le",E,E,68,[[["self"],[R[1387]]],["bool"]]],[11,"gt",E,E,68,[[["self"],[R[1387]]],["bool"]]],[11,"ge",E,E,68,[[["self"],[R[1387]]],["bool"]]],[11,R[77],E,E,69,[[["self"],[R[1390]]],[[R[50]],[R[23],[R[50]]]]]],[11,"lt",E,E,69,[[["self"],[R[1390]]],["bool"]]],[11,"le",E,E,69,[[["self"],[R[1390]]],["bool"]]],[11,"gt",E,E,69,[[["self"],[R[1390]]],["bool"]]],[11,"ge",E,E,69,[[["self"],[R[1390]]],["bool"]]],[11,R[77],R[1445],E,76,[[["self"],["sflag"]],[[R[50]],[R[23],[R[50]]]]]],[11,"lt",E,E,76,[[["self"],["sflag"]],["bool"]]],[11,"le",E,E,76,[[["self"],["sflag"]],["bool"]]],[11,"gt",E,E,76,[[["self"],["sflag"]],["bool"]]],[11,"ge",E,E,76,[[["self"],["sflag"]],["bool"]]],[11,R[77],E,E,77,[[["self"],["mode"]],[[R[50]],[R[23],[R[50]]]]]],[11,"lt",E,E,77,[[["self"],["mode"]],["bool"]]],[11,"le",E,E,77,[[["self"],["mode"]],["bool"]]],[11,"gt",E,E,77,[[["self"],["mode"]],["bool"]]],[11,"ge",E,E,77,[[["self"],["mode"]],["bool"]]],[11,R[77],R[1447],E,79,[[["self"],["fsflags"]],[[R[50]],[R[23],[R[50]]]]]],[11,"lt",E,E,79,[[["self"],["fsflags"]],["bool"]]],[11,"le",E,E,79,[[["self"],["fsflags"]],["bool"]]],[11,"gt",E,E,79,[[["self"],["fsflags"]],["bool"]]],[11,"ge",E,E,79,[[["self"],["fsflags"]],["bool"]]],[11,R[77],R[1448],E,82,[[["self"],["baudrate"]],[[R[50]],[R[23],[R[50]]]]]],[11,R[77],E,E,83,[[["self"],["setarg"]],[[R[50]],[R[23],[R[50]]]]]],[11,R[77],E,E,84,[[["self"],["flusharg"]],[[R[50]],[R[23],[R[50]]]]]],[11,R[77],E,E,85,[[["self"],["flowarg"]],[[R[50]],[R[23],[R[50]]]]]],[11,R[77],E,E,86,[[["self"],[R[1475]]],[[R[50]],[R[23],[R[50]]]]]],[11,R[77],E,E,87,[[["self"],[R[1412]]],[[R[50]],[R[23],[R[50]]]]]],[11,"lt",E,E,87,[[["self"],[R[1412]]],["bool"]]],[11,"le",E,E,87,[[["self"],[R[1412]]],["bool"]]],[11,"gt",E,E,87,[[["self"],[R[1412]]],["bool"]]],[11,"ge",E,E,87,[[["self"],[R[1412]]],["bool"]]],[11,R[77],E,E,88,[[["self"],[R[1413]]],[[R[50]],[R[23],[R[50]]]]]],[11,"lt",E,E,88,[[["self"],[R[1413]]],["bool"]]],[11,"le",E,E,88,[[["self"],[R[1413]]],["bool"]]],[11,"gt",E,E,88,[[["self"],[R[1413]]],["bool"]]],[11,"ge",E,E,88,[[["self"],[R[1413]]],["bool"]]],[11,R[77],E,E,89,[[["self"],[R[1415]]],[[R[50]],[R[23],[R[50]]]]]],[11,"lt",E,E,89,[[["self"],[R[1415]]],["bool"]]],[11,"le",E,E,89,[[["self"],[R[1415]]],["bool"]]],[11,"gt",E,E,89,[[["self"],[R[1415]]],["bool"]]],[11,"ge",E,E,89,[[["self"],[R[1415]]],["bool"]]],[11,R[77],E,E,90,[[["self"],[R[1416]]],[[R[50]],[R[23],[R[50]]]]]],[11,"lt",E,E,90,[[["self"],[R[1416]]],["bool"]]],[11,"le",E,E,90,[[["self"],[R[1416]]],["bool"]]],[11,"gt",E,E,90,[[["self"],[R[1416]]],["bool"]]],[11,"ge",E,E,90,[[["self"],[R[1416]]],["bool"]]],[11,R[77],R[1449],E,92,[[["self"],[R[785]]],[[R[50]],[R[23],[R[50]]]]]],[11,R[77],E,E,93,[[["self"],["timeval"]],[[R[50]],[R[23],[R[50]]]]]],[11,R[77],R[1452],E,97,[[["self"],[R[1418]]],[[R[50]],[R[23],[R[50]]]]]],[11,"lt",E,E,97,[[["self"],[R[1418]]],["bool"]]],[11,"le",E,E,97,[[["self"],[R[1418]]],["bool"]]],[11,"gt",E,E,97,[[["self"],[R[1418]]],["bool"]]],[11,"ge",E,E,97,[[["self"],[R[1418]]],["bool"]]],[11,R[77],R[1420],E,107,[[["self"],[R[1432]]],[[R[50]],[R[23],[R[50]]]]]],[11,"lt",E,E,107,[[["self"],[R[1432]]],["bool"]]],[11,"le",E,E,107,[[["self"],[R[1432]]],["bool"]]],[11,"gt",E,E,107,[[["self"],[R[1432]]],["bool"]]],[11,"ge",E,E,107,[[["self"],[R[1432]]],["bool"]]],[11,"cmp",R[1462],E,8,[[["self"],["atflags"]],[R[50]]]],[11,"cmp",E,E,9,[[["self"],["oflag"]],[R[50]]]],[11,"cmp",E,E,10,[[["self"],["fdflag"]],[R[50]]]],[11,"cmp",R[1438],E,12,[[["self"],[R[1282]]],[R[50]]]],[11,"cmp",R[1464],E,14,[[["self"],[R[1284]]],[R[50]]]],[11,"cmp",R[1439],E,18,[[["self"],[R[1466]]],[R[50]]]],[11,"cmp",E,E,19,[[["self"],[R[1296]]],[R[50]]]],[11,"cmp",E,E,20,[[["self"],["liomode"]],[R[50]]]],[11,"cmp",R[1440],E,24,[[["self"],[R[1332]]],[R[50]]]],[11,"cmp",E,E,25,[[["self"],[R[1308]]],[R[50]]]],[11,"cmp",E,E,26,[[["self"],[R[1331]]],[R[50]]]],[11,"cmp",R[1441],E,29,[[["self"],[R[1342]]],[R[50]]]],[11,"cmp",E,E,30,[[["self"],[R[1346]]],[R[50]]]],[11,"cmp",E,E,28,[[["self"],[R[1474]]],[R[50]]]],[11,"cmp",E,E,31,[[["self"],["msflags"]],[R[50]]]],[11,"cmp",E,E,32,[[["self"],[R[1351]]],[R[50]]]],[11,"cmp",R[1442],E,33,[[["self"],["request"]],[R[50]]]],[11,"cmp",R[1362],E,35,[[["self"],["signal"]],[R[50]]]],[11,"cmp",E,E,40,[[["self"],["saflags"]],[R[50]]]],[11,"cmp",E,E,36,[[["self"],[R[1369]]],[R[50]]]],[11,"cmp",R[1385],E,68,[[["self"],[R[1387]]],[R[50]]]],[11,"cmp",E,E,69,[[["self"],[R[1390]]],[R[50]]]],[11,"cmp",R[1445],E,76,[[["self"],["sflag"]],[R[50]]]],[11,"cmp",E,E,77,[[["self"],["mode"]],[R[50]]]],[11,"cmp",R[1447],E,79,[[["self"],["fsflags"]],[R[50]]]],[11,"cmp",R[1448],E,82,[[["self"],["baudrate"]],[R[50]]]],[11,"cmp",E,E,83,[[["self"],["setarg"]],[R[50]]]],[11,"cmp",E,E,84,[[["self"],["flusharg"]],[R[50]]]],[11,"cmp",E,E,85,[[["self"],["flowarg"]],[R[50]]]],[11,"cmp",E,E,86,[[["self"],[R[1475]]],[R[50]]]],[11,"cmp",E,E,87,[[["self"],[R[1412]]],[R[50]]]],[11,"cmp",E,E,88,[[["self"],[R[1413]]],[R[50]]]],[11,"cmp",E,E,89,[[["self"],[R[1415]]],[R[50]]]],[11,"cmp",E,E,90,[[["self"],[R[1416]]],[R[50]]]],[11,"cmp",R[1449],E,92,[[["self"],[R[785]]],[R[50]]]],[11,"cmp",E,E,93,[[["self"],["timeval"]],[R[50]]]],[11,"cmp",R[1452],E,97,[[["self"],[R[1418]]],[R[50]]]],[11,"cmp",R[1420],E,107,[[["self"],[R[1432]]],[R[50]]]],[11,"eq",R[1496],E,2,[[["self"],["dir"]],["bool"]]],[11,"ne",E,E,2,[[["self"],["dir"]],["bool"]]],[11,"eq",E,E,109,[[["self"],["iter"]],["bool"]]],[11,"ne",E,E,109,[[["self"],["iter"]],["bool"]]],[11,"eq",E,E,3,[[["self"],["entry"]],["bool"]]],[11,"ne",E,E,3,[[["self"],["entry"]],["bool"]]],[11,"eq",E,E,1,[[["self"],["type"]],["bool"]]],[11,"eq",R[1463],E,4,[[["self"],["errno"]],["bool"]]],[11,"eq",R[1462],E,8,[[["self"],["atflags"]],["bool"]]],[11,"ne",E,E,8,[[["self"],["atflags"]],["bool"]]],[11,"eq",E,E,9,[[["self"],["oflag"]],["bool"]]],[11,"ne",E,E,9,[[["self"],["oflag"]],["bool"]]],[11,"eq",E,E,10,[[["self"],["fdflag"]],["bool"]]],[11,"ne",E,E,10,[[["self"],["fdflag"]],["bool"]]],[11,"eq",E,E,6,[[["self"],["fcntlarg"]],["bool"]]],[11,"ne",E,E,6,[[["self"],["fcntlarg"]],["bool"]]],[11,"eq",E,E,7,[[["self"],["flockarg"]],["bool"]]],[11,"eq",R[1437],E,11,[[["self"],[R[1476]]],["bool"]]],[11,"ne",E,E,11,[[["self"],[R[1476]]],["bool"]]],[11,"eq",E,E,110,[[["self"],[R[1268]]],["bool"]]],[11,"ne",E,E,110,[[["self"],[R[1268]]],["bool"]]],[11,"eq",R[1438],E,12,[[["self"],[R[1282]]],["bool"]]],[11,"ne",E,E,12,[[["self"],[R[1282]]],["bool"]]],[11,"eq",R[1464],E,13,[[["self"],["pollfd"]],["bool"]]],[11,"ne",E,E,13,[[["self"],["pollfd"]],["bool"]]],[11,"eq",E,E,14,[[["self"],[R[1284]]],["bool"]]],[11,"ne",E,E,14,[[["self"],[R[1284]]],["bool"]]],[11,"eq",R[1465],E,16,[[["self"],[R[1289]]],["bool"]]],[11,"ne",E,E,16,[[["self"],[R[1289]]],["bool"]]],[11,"eq",E,E,111,[[["self"],[R[1288]]],["bool"]]],[11,"ne",E,E,111,[[["self"],[R[1288]]],["bool"]]],[11,"eq",R[1439],E,18,[[["self"],[R[1466]]],["bool"]]],[11,"eq",E,E,19,[[["self"],[R[1296]]],["bool"]]],[11,"eq",E,E,20,[[["self"],["liomode"]],["bool"]]],[11,"eq",E,E,21,[[["self"],[R[1292]]],["bool"]]],[11,"eq",R[1440],E,27,[[["self"],["kevent"]],["bool"]]],[11,"ne",E,E,27,[[["self"],["kevent"]],["bool"]]],[11,"eq",E,E,24,[[["self"],[R[1332]]],["bool"]]],[11,"eq",E,E,25,[[["self"],[R[1308]]],["bool"]]],[11,"ne",E,E,25,[[["self"],[R[1308]]],["bool"]]],[11,"eq",E,E,26,[[["self"],[R[1331]]],["bool"]]],[11,"ne",E,E,26,[[["self"],[R[1331]]],["bool"]]],[11,"eq",R[1441],E,29,[[["self"],[R[1342]]],["bool"]]],[11,"ne",E,E,29,[[["self"],[R[1342]]],["bool"]]],[11,"eq",E,E,30,[[["self"],[R[1346]]],["bool"]]],[11,"ne",E,E,30,[[["self"],[R[1346]]],["bool"]]],[11,"eq",E,E,28,[[["self"],[R[1474]]],["bool"]]],[11,"eq",E,E,31,[[["self"],["msflags"]],["bool"]]],[11,"ne",E,E,31,[[["self"],["msflags"]],["bool"]]],[11,"eq",E,E,32,[[["self"],[R[1351]]],["bool"]]],[11,"ne",E,E,32,[[["self"],[R[1351]]],["bool"]]],[11,"eq",R[1442],E,33,[[["self"],["request"]],["bool"]]],[11,"eq",R[1443],E,34,[[["self"],["fdset"]],["bool"]]],[11,"ne",E,E,34,[[["self"],["fdset"]],["bool"]]],[11,"eq",R[1362],E,35,[[["self"],["signal"]],["bool"]]],[11,"eq",E,E,112,[[["self"],[R[1467]]],["bool"]]],[11,"ne",E,E,112,[[["self"],[R[1467]]],["bool"]]],[11,"eq",E,E,40,[[["self"],["saflags"]],["bool"]]],[11,"ne",E,E,40,[[["self"],["saflags"]],["bool"]]],[11,"eq",E,E,36,[[["self"],[R[1369]]],["bool"]]],[11,"eq",E,E,41,[[["self"],["sigset"]],["bool"]]],[11,"ne",E,E,41,[[["self"],["sigset"]],["bool"]]],[11,"eq",E,E,37,[[["self"],[R[1363]]],["bool"]]],[11,"ne",E,E,37,[[["self"],[R[1363]]],["bool"]]],[11,"eq",E,E,42,[[["self"],[R[782]]],["bool"]]],[11,"ne",E,E,42,[[["self"],[R[782]]],["bool"]]],[11,"eq",E,E,38,[[["self"],[R[1295]]],["bool"]]],[11,"ne",E,E,38,[[["self"],[R[1295]]],["bool"]]],[11,"eq",E,E,39,[[["self"],[R[827]]],["bool"]]],[11,"ne",E,E,39,[[["self"],[R[827]]],["bool"]]],[11,"eq",R[1385],E,55,[[["self"],[R[1377]]],["bool"]]],[11,"eq",E,E,57,[[["self"],["inetaddr"]],["bool"]]],[11,"ne",E,E,57,[[["self"],["inetaddr"]],["bool"]]],[11,"eq",E,E,58,[[["self"],["ipaddr"]],["bool"]]],[11,"ne",E,E,58,[[["self"],["ipaddr"]],["bool"]]],[11,"eq",E,E,51,[[["self"],[R[1391]]],["bool"]]],[11,"ne",E,E,51,[[["self"],[R[1391]]],["bool"]]],[11,"eq",E,E,52,[[["self"],[R[1477]]],["bool"]]],[11,"ne",E,E,52,[[["self"],[R[1477]]],["bool"]]],[11,"eq",E,E,50,[[["self"],["unixaddr"]],["bool"]]],[11,"eq",E,E,56,[[["self"],[R[789]]],["bool"]]],[11,"ne",E,E,56,[[["self"],[R[789]]],["bool"]]],[11,"eq",E,E,53,[[["self"],["linkaddr"]],["bool"]]],[11,"ne",E,E,53,[[["self"],["linkaddr"]],["bool"]]],[11,"eq",R[1444],E,114,[[["self"],["reuseaddr"]],["bool"]]],[11,"eq",E,E,115,[[["self"],["reuseport"]],["bool"]]],[11,"eq",E,E,116,[[["self"],["tcpnodelay"]],["bool"]]],[11,"eq",E,E,117,[[["self"],["linger"]],["bool"]]],[11,"eq",E,E,118,[[["self"],[R[1478]]],["bool"]]],[11,"eq",E,E,119,[[["self"],[R[1479]]],["bool"]]],[11,"eq",E,E,120,[[["self"],[R[1480]]],["bool"]]],[11,"eq",E,E,121,[[["self"],[R[1481]]],["bool"]]],[11,"eq",E,E,122,[[["self"],[R[1482]]],["bool"]]],[11,"eq",E,E,123,[[["self"],[R[1483]]],["bool"]]],[11,"eq",E,E,124,[[["self"],[R[1484]]],["bool"]]],[11,"eq",E,E,125,[[["self"],[R[1485]]],["bool"]]],[11,"eq",E,E,126,[[["self"],["broadcast"]],["bool"]]],[11,"eq",E,E,127,[[["self"],["oobinline"]],["bool"]]],[11,"eq",E,E,128,[[["self"],[R[1486]]],["bool"]]],[11,"eq",E,E,129,[[["self"],["keepalive"]],["bool"]]],[11,"eq",E,E,130,[[["self"],[R[1487]]],["bool"]]],[11,"eq",E,E,131,[[["self"],["rcvbuf"]],["bool"]]],[11,"eq",E,E,132,[[["self"],["sndbuf"]],["bool"]]],[11,"eq",E,E,133,[[["self"],[R[1488]]],["bool"]]],[11,"eq",E,E,134,[[["self"],["acceptconn"]],["bool"]]],[11,"eq",E,E,135,[[["self"],[R[1489]]],["bool"]]],[11,"eq",E,E,136,[[["self"],[R[1490]]],["bool"]]],[11,"eq",E,E,137,[[["self"],[R[1491]]],["bool"]]],[11,"eq",E,E,138,[[["self"],["ipv4recvif"]],["bool"]]],[11,"eq",E,E,139,[[["self"],[R[1492]]],["bool"]]],[11,"eq",R[1385],E,59,[[["self"],[R[1488]]],["bool"]]],[11,"eq",E,E,60,[[["self"],[R[1378]]],["bool"]]],[11,"eq",E,E,68,[[["self"],[R[1387]]],["bool"]]],[11,"ne",E,E,68,[[["self"],[R[1387]]],["bool"]]],[11,"eq",E,E,69,[[["self"],[R[1390]]],["bool"]]],[11,"ne",E,E,69,[[["self"],[R[1390]]],["bool"]]],[11,"eq",E,E,70,[[["self"],[R[1453]]],["bool"]]],[11,"ne",E,E,70,[[["self"],[R[1453]]],["bool"]]],[11,"eq",E,E,71,[[["self"],[R[1454]]],["bool"]]],[11,"ne",E,E,71,[[["self"],[R[1454]]],["bool"]]],[11,"eq",E,E,72,[[["self"],["cmsgspace"]],["bool"]]],[11,"ne",E,E,72,[[["self"],["cmsgspace"]],["bool"]]],[11,"eq",E,E,54,[[["self"],["recvmsg"]],["bool"]]],[11,"ne",E,E,54,[[["self"],["recvmsg"]],["bool"]]],[11,"eq",E,E,113,[[["self"],[R[1468]]],["bool"]]],[11,"ne",E,E,113,[[["self"],[R[1468]]],["bool"]]],[11,"eq",E,E,61,[[["self"],[R[1493]]],["bool"]]],[11,"ne",E,E,61,[[["self"],[R[1493]]],["bool"]]],[11,"eq",E,E,62,[[["self"],[R[1494]]],["bool"]]],[11,"ne",E,E,62,[[["self"],[R[1494]]],["bool"]]],[11,"eq",E,E,63,[[["self"],["socklevel"]],["bool"]]],[11,"eq",E,E,64,[[["self"],["shutdown"]],["bool"]]],[11,"eq",R[1445],E,76,[[["self"],["sflag"]],["bool"]]],[11,"ne",E,E,76,[[["self"],["sflag"]],["bool"]]],[11,"eq",E,E,77,[[["self"],["mode"]],["bool"]]],[11,"ne",E,E,77,[[["self"],["mode"]],["bool"]]],[11,"eq",R[1447],E,79,[[["self"],["fsflags"]],["bool"]]],[11,"ne",E,E,79,[[["self"],["fsflags"]],["bool"]]],[11,"eq",E,E,80,[[["self"],[R[828]]],["bool"]]],[11,"ne",E,E,80,[[["self"],[R[828]]],["bool"]]],[11,"eq",R[1448],E,81,[[["self"],["termios"]],["bool"]]],[11,"ne",E,E,81,[[["self"],["termios"]],["bool"]]],[11,"eq",E,E,82,[[["self"],["baudrate"]],["bool"]]],[11,"eq",E,E,83,[[["self"],["setarg"]],["bool"]]],[11,"eq",E,E,84,[[["self"],["flusharg"]],["bool"]]],[11,"eq",E,E,85,[[["self"],["flowarg"]],["bool"]]],[11,"eq",E,E,86,[[["self"],[R[1475]]],["bool"]]],[11,"eq",E,E,87,[[["self"],[R[1412]]],["bool"]]],[11,"ne",E,E,87,[[["self"],[R[1412]]],["bool"]]],[11,"eq",E,E,88,[[["self"],[R[1413]]],["bool"]]],[11,"ne",E,E,88,[[["self"],[R[1413]]],["bool"]]],[11,"eq",E,E,89,[[["self"],[R[1415]]],["bool"]]],[11,"ne",E,E,89,[[["self"],[R[1415]]],["bool"]]],[11,"eq",E,E,90,[[["self"],[R[1416]]],["bool"]]],[11,"ne",E,E,90,[[["self"],[R[1416]]],["bool"]]],[11,"eq",R[1449],E,92,[[["self"],[R[785]]],["bool"]]],[11,"ne",E,E,92,[[["self"],[R[785]]],["bool"]]],[11,"eq",E,E,93,[[["self"],["timeval"]],["bool"]]],[11,"ne",E,E,93,[[["self"],["timeval"]],["bool"]]],[11,"eq",R[1450],E,94,[[["self"],["iovec"]],["bool"]]],[11,"ne",E,E,94,[[["self"],["iovec"]],["bool"]]],[11,"eq",R[1451],E,95,[[["self"],["utsname"]],["bool"]]],[11,"ne",E,E,95,[[["self"],["utsname"]],["bool"]]],[11,"eq",R[1452],E,97,[[["self"],[R[1418]]],["bool"]]],[11,"ne",E,E,97,[[["self"],[R[1418]]],["bool"]]],[11,"eq",E,E,96,[[["self"],[R[1419]]],["bool"]]],[11,"ne",E,E,96,[[["self"],[R[1419]]],["bool"]]],[11,"eq",R[1420],E,104,[[["self"],["uid"]],["bool"]]],[11,"ne",E,E,104,[[["self"],["uid"]],["bool"]]],[11,"eq",E,E,105,[[["self"],["gid"]],["bool"]]],[11,"ne",E,E,105,[[["self"],["gid"]],["bool"]]],[11,"eq",E,E,106,[[["self"],["pid"]],["bool"]]],[11,"ne",E,E,106,[[["self"],["pid"]],["bool"]]],[11,"eq",E,E,102,[[["self"],[R[1431]]],["bool"]]],[11,"eq",E,E,103,[[["self"],[R[1495]]],["bool"]]],[11,"eq",E,E,107,[[["self"],[R[1432]]],["bool"]]],[11,"ne",E,E,107,[[["self"],[R[1432]]],["bool"]]],[11,"eq","nix",E,0,[[["self"],["error"]],["bool"]]],[11,"ne",E,E,0,[[["self"],["error"]],["bool"]]],[11,"drop",R[1496],E,2,[[["self"]]]],[11,"drop",E,E,109,[[["self"]]]],[11,"drop",R[1437],E,110,[[["self"]]]],[11,"drop",R[1465],E,111,[[["self"]]]],[11,"drop",R[1439],"If the `AioCb` has no remaining state in the kernel, just…",23,[[["self"]]]],[11,"from",R[1362],E,39,[[[R[827]]],["self"]]],[11,"from",R[1448],E,81,[[["termios"]],["self"]]],[11,"from",E,E,82,[[["speed_t"]],["baudrate"]]],[11,"from",R[1449],E,93,[[["timeval"]],["self"]]],[11,"from","nix",E,140,[[["pid"]],["self"]]],[11,"from",E,E,0,[[["errno"]],["error"]]],[11,"from",E,E,0,[[[R[4564]]],["error"]]],[11,"next",R[1496],E,109,[[["self"]],[R[23]]]],[11,"next",R[1437],E,110,[[["self"]],[R[23]]]],[11,"next",R[1362],E,112,[[["self"]],[["signal"],[R[23],["signal"]]]]],[11,"next",R[1385],E,113,[[["self"]],[[R[1493]],[R[23],[R[1493]]]]]],[11,"hash",R[1496],E,2,[[["self"],["__h"]]]],[11,"hash",E,E,109,[[["self"],["__h"]]]],[11,"hash",E,E,3,[[["self"],["__h"]]]],[11,"hash",E,E,1,[[["self"],["__h"]]]],[11,"hash",R[1462],E,8,[[["self"],["__h"]]]],[11,"hash",E,E,9,[[["self"],["__h"]]]],[11,"hash",E,E,10,[[["self"],["__h"]]]],[11,"hash",E,E,6,[[["self"],["__h"]]]],[11,"hash",E,E,7,[[["self"],["__h"]]]],[11,"hash",R[1437],E,11,[[["self"],["__h"]]]],[11,"hash",E,E,110,[[["self"],["__h"]]]],[11,"hash",R[1438],E,12,[[["self"],["__h"]]]],[11,"hash",R[1464],E,13,[[["self"],["__h"]]]],[11,"hash",E,E,14,[[["self"],["__h"]]]],[11,"hash",R[1465],E,16,[[["self"],["__h"]]]],[11,"hash",E,E,111,[[["self"],["__h"]]]],[11,"hash",R[1439],E,18,[[["self"],["__h"]]]],[11,"hash",E,E,19,[[["self"],["__h"]]]],[11,"hash",E,E,20,[[["self"],["__h"]]]],[11,"hash",E,E,21,[[["self"],["__h"]]]],[11,"hash",R[1440],E,27,[[["self"],["__h"]]]],[11,"hash",E,E,24,[[["self"],["__h"]]]],[11,"hash",E,E,25,[[["self"],["__h"]]]],[11,"hash",E,E,26,[[["self"],["__h"]]]],[11,"hash",R[1441],E,29,[[["self"],["__h"]]]],[11,"hash",E,E,30,[[["self"],["__h"]]]],[11,"hash",E,E,28,[[["self"],["__h"]]]],[11,"hash",E,E,31,[[["self"],["__h"]]]],[11,"hash",E,E,32,[[["self"],["__h"]]]],[11,"hash",R[1442],E,33,[[["self"],["__h"]]]],[11,"hash",R[1443],E,34,[[["self"],["__h"]]]],[11,"hash",R[1362],E,35,[[["self"],["__h"]]]],[11,"hash",E,E,112,[[["self"],["__h"]]]],[11,"hash",E,E,40,[[["self"],["__h"]]]],[11,"hash",E,E,36,[[["self"],["__h"]]]],[11,"hash",E,E,41,[[["self"],["__h"]]]],[11,"hash",E,E,37,[[["self"],["__h"]]]],[11,"hash",E,E,42,[[["self"],["__h"]]]],[11,"hash",E,E,38,[[["self"],["__h"]]]],[11,"hash",E,E,39,[[["self"],["__h"]]]],[11,"hash",R[1385],E,55,[[["self"],["__h"]]]],[11,"hash",E,E,57,[[["self"],["__h"]]]],[11,"hash",E,E,58,[[["self"],["__h"]]]],[11,"hash",E,E,51,[[["self"],["__h"]]]],[11,"hash",E,E,52,[[["self"],["__h"]]]],[11,"hash",E,E,50,[[["self"],["h"]]]],[11,"hash",E,E,56,[[["self"],["__h"]]]],[11,"hash",E,E,53,[[["self"],["__h"]]]],[11,"hash",R[1444],E,114,[[["self"],["__h"]]]],[11,"hash",E,E,115,[[["self"],["__h"]]]],[11,"hash",E,E,116,[[["self"],["__h"]]]],[11,"hash",E,E,117,[[["self"],["__h"]]]],[11,"hash",E,E,118,[[["self"],["__h"]]]],[11,"hash",E,E,119,[[["self"],["__h"]]]],[11,"hash",E,E,120,[[["self"],["__h"]]]],[11,"hash",E,E,121,[[["self"],["__h"]]]],[11,"hash",E,E,122,[[["self"],["__h"]]]],[11,"hash",E,E,123,[[["self"],["__h"]]]],[11,"hash",E,E,124,[[["self"],["__h"]]]],[11,"hash",E,E,125,[[["self"],["__h"]]]],[11,"hash",E,E,126,[[["self"],["__h"]]]],[11,"hash",E,E,127,[[["self"],["__h"]]]],[11,"hash",E,E,128,[[["self"],["__h"]]]],[11,"hash",E,E,129,[[["self"],["__h"]]]],[11,"hash",E,E,130,[[["self"],["__h"]]]],[11,"hash",E,E,131,[[["self"],["__h"]]]],[11,"hash",E,E,132,[[["self"],["__h"]]]],[11,"hash",E,E,133,[[["self"],["__h"]]]],[11,"hash",E,E,134,[[["self"],["__h"]]]],[11,"hash",E,E,135,[[["self"],["__h"]]]],[11,"hash",E,E,136,[[["self"],["__h"]]]],[11,"hash",E,E,137,[[["self"],["__h"]]]],[11,"hash",E,E,138,[[["self"],["__h"]]]],[11,"hash",E,E,139,[[["self"],["__h"]]]],[11,"hash",R[1385],E,60,[[["self"],["__h"]]]],[11,"hash",E,E,68,[[["self"],["__h"]]]],[11,"hash",E,E,69,[[["self"],["__h"]]]],[11,"hash",E,E,63,[[["self"],["__h"]]]],[11,"hash",E,E,64,[[["self"],["__h"]]]],[11,"hash",R[1445],E,76,[[["self"],["__h"]]]],[11,"hash",E,E,77,[[["self"],["__h"]]]],[11,"hash",R[1447],E,79,[[["self"],["__h"]]]],[11,"hash",E,E,80,[[["self"],["__h"]]]],[11,"hash",R[1448],E,82,[[["self"],["__h"]]]],[11,"hash",E,E,83,[[["self"],["__h"]]]],[11,"hash",E,E,84,[[["self"],["__h"]]]],[11,"hash",E,E,85,[[["self"],["__h"]]]],[11,"hash",E,E,86,[[["self"],["__h"]]]],[11,"hash",E,E,87,[[["self"],["__h"]]]],[11,"hash",E,E,88,[[["self"],["__h"]]]],[11,"hash",E,E,89,[[["self"],["__h"]]]],[11,"hash",E,E,90,[[["self"],["__h"]]]],[11,"hash",R[1449],E,92,[[["self"],["__h"]]]],[11,"hash",E,E,93,[[["self"],["__h"]]]],[11,"hash",R[1450],E,94,[[["self"],["__h"]]]],[11,"hash",R[1451],E,95,[[["self"],["__h"]]]],[11,"hash",R[1452],E,97,[[["self"],["__h"]]]],[11,"hash",E,E,96,[[["self"],["__h"]]]],[11,"hash",R[1420],E,104,[[["self"],["__h"]]]],[11,"hash",E,E,105,[[["self"],["__h"]]]],[11,"hash",E,E,106,[[["self"],["__h"]]]],[11,"hash",E,E,102,[[["self"],["__h"]]]],[11,"hash",E,E,103,[[["self"],["__h"]]]],[11,"hash",E,E,107,[[["self"],["__h"]]]],[11,"fmt",R[1496],E,2,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,109,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,3,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,1,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[1463],E,4,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[1462],E,8,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,9,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,10,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,6,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,7,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[1437],E,11,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,110,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[1438],E,12,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[1464],E,13,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,14,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[1465],E,16,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,17,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,111,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[1439],E,18,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,19,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,20,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,21,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,22,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,23,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[1440],E,27,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,24,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,25,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,26,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[1441],E,29,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,30,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,28,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,31,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,32,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[1442],E,33,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[1443],E,34,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[1362],E,35,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,112,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,40,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,36,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,41,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,37,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,42,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,38,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,39,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[1385],E,55,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,57,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,58,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,51,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,52,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,50,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,56,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,53,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[1444],E,114,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,115,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,116,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,117,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,118,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,119,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,120,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,121,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,122,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,123,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,124,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,125,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,126,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,127,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,128,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,129,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,130,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,131,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,132,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,133,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,134,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,135,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,136,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,137,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,138,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,139,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[1385],E,59,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,60,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,68,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,69,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,70,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,71,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,72,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,54,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,113,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,61,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,62,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,63,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,64,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[1445],E,76,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,77,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,74,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,75,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[1446],E,78,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[1447],E,79,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,80,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[1448],E,81,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,82,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,83,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,84,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,85,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,86,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,87,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,88,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,89,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,90,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[1449],E,92,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,93,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[1450],E,94,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[1451],E,95,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[1452],E,97,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,96,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[1420],E,104,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,105,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,106,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,98,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,99,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,100,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,101,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,102,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,103,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,107,[[["self"],[R[10]]],[R[3]]]],[11,"fmt","nix",E,0,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[1463],E,4,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[1362],E,35,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[1385],E,57,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,58,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,51,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,52,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,50,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,56,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,53,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[1449],E,92,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,93,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[1420],E,104,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,105,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,106,[[["self"],[R[10]]],[R[3]]]],[11,"fmt","nix",E,0,[[["self"],[R[10]]],[R[3]]]],[11,"div",R[1449],E,92,[[["i32"]],[R[785]]]],[11,"div",E,E,93,[[["i32"]],["timeval"]]],[11,R[775],R[1362],E,35,[[["str"]],[["signal"],[R[3],["signal"]]]]],[11,"add",R[1449],E,92,[[[R[785]]],[R[785]]]],[11,"add",E,E,93,[[["timeval"]],["timeval"]]],[11,"sub",R[1462],R[1497],8,[[["atflags"]],["atflags"]]],[11,"sub",E,R[1497],9,[[["oflag"]],["oflag"]]],[11,"sub",E,R[1497],10,[[["fdflag"]],["fdflag"]]],[11,"sub",R[1438],R[1497],12,[[[R[1282]]],[R[1282]]]],[11,"sub",R[1464],R[1497],14,[[[R[1284]]],[R[1284]]]],[11,"sub",R[1440],R[1497],25,[[[R[1308]]],[R[1308]]]],[11,"sub",E,R[1497],26,[[[R[1331]]],[R[1331]]]],[11,"sub",R[1441],R[1497],29,[[[R[1342]]],[R[1342]]]],[11,"sub",E,R[1497],30,[[[R[1346]]],[R[1346]]]],[11,"sub",E,R[1497],31,[[["msflags"]],["msflags"]]],[11,"sub",E,R[1497],32,[[[R[1351]]],[R[1351]]]],[11,"sub",R[1362],R[1497],40,[[["saflags"]],["saflags"]]],[11,"sub",R[1385],R[1497],68,[[[R[1387]]],[R[1387]]]],[11,"sub",E,R[1497],69,[[[R[1390]]],[R[1390]]]],[11,"sub",R[1445],R[1497],76,[[["sflag"]],["sflag"]]],[11,"sub",E,R[1497],77,[[["mode"]],["mode"]]],[11,"sub",R[1447],R[1497],79,[[["fsflags"]],["fsflags"]]],[11,"sub",R[1448],R[1497],87,[[[R[1412]]],[R[1412]]]],[11,"sub",E,R[1497],88,[[[R[1413]]],[R[1413]]]],[11,"sub",E,R[1497],89,[[[R[1415]]],[R[1415]]]],[11,"sub",E,R[1497],90,[[[R[1416]]],[R[1416]]]],[11,"sub",R[1449],E,92,[[[R[785]]],[R[785]]]],[11,"sub",E,E,93,[[["timeval"]],["timeval"]]],[11,"sub",R[1452],R[1497],97,[[[R[1418]]],[R[1418]]]],[11,"sub",R[1420],R[1497],107,[[[R[1432]]],[R[1432]]]],[11,"mul",R[1449],E,92,[[["i32"]],[R[785]]]],[11,"mul",E,E,93,[[["i32"]],["timeval"]]],[11,"neg",E,E,92,[[],[R[785]]]],[11,"neg",E,E,93,[[],["timeval"]]],[11,R[79],R[1462],R[1498],8,[[["self"],["atflags"]]]],[11,R[79],E,R[1498],9,[[["self"],["oflag"]]]],[11,R[79],E,R[1498],10,[[["self"],["fdflag"]]]],[11,R[79],R[1438],R[1498],12,[[["self"],[R[1282]]]]],[11,R[79],R[1464],R[1498],14,[[["self"],[R[1284]]]]],[11,R[79],R[1440],R[1498],25,[[["self"],[R[1308]]]]],[11,R[79],E,R[1498],26,[[["self"],[R[1331]]]]],[11,R[79],R[1441],R[1498],29,[[["self"],[R[1342]]]]],[11,R[79],E,R[1498],30,[[["self"],[R[1346]]]]],[11,R[79],E,R[1498],31,[[["self"],["msflags"]]]],[11,R[79],E,R[1498],32,[[["self"],[R[1351]]]]],[11,R[79],R[1362],R[1498],40,[[["self"],["saflags"]]]],[11,R[79],R[1385],R[1498],68,[[["self"],[R[1387]]]]],[11,R[79],E,R[1498],69,[[["self"],[R[1390]]]]],[11,R[79],R[1445],R[1498],76,[[["self"],["sflag"]]]],[11,R[79],E,R[1498],77,[[["self"],["mode"]]]],[11,R[79],R[1447],R[1498],79,[[["self"],["fsflags"]]]],[11,R[79],R[1448],R[1498],87,[[["self"],[R[1412]]]]],[11,R[79],E,R[1498],88,[[["self"],[R[1413]]]]],[11,R[79],E,R[1498],89,[[["self"],[R[1415]]]]],[11,R[79],E,R[1498],90,[[["self"],[R[1416]]]]],[11,R[79],R[1452],R[1498],97,[[["self"],[R[1418]]]]],[11,R[79],R[1420],R[1498],107,[[["self"],[R[1432]]]]],[11,"not",R[1462],R[1499],8,[[],["atflags"]]],[11,"not",E,R[1499],9,[[],["oflag"]]],[11,"not",E,R[1499],10,[[],["fdflag"]]],[11,"not",R[1438],R[1499],12,[[],[R[1282]]]],[11,"not",R[1464],R[1499],14,[[],[R[1284]]]],[11,"not",R[1440],R[1499],25,[[],[R[1308]]]],[11,"not",E,R[1499],26,[[],[R[1331]]]],[11,"not",R[1441],R[1499],29,[[],[R[1342]]]],[11,"not",E,R[1499],30,[[],[R[1346]]]],[11,"not",E,R[1499],31,[[],["msflags"]]],[11,"not",E,R[1499],32,[[],[R[1351]]]],[11,"not",R[1362],R[1499],40,[[],["saflags"]]],[11,"not",R[1385],R[1499],68,[[],[R[1387]]]],[11,"not",E,R[1499],69,[[],[R[1390]]]],[11,"not",R[1445],R[1499],76,[[],["sflag"]]],[11,"not",E,R[1499],77,[[],["mode"]]],[11,"not",R[1447],R[1499],79,[[],["fsflags"]]],[11,"not",R[1448],R[1499],87,[[],[R[1412]]]],[11,"not",E,R[1499],88,[[],[R[1413]]]],[11,"not",E,R[1499],89,[[],[R[1415]]]],[11,"not",E,R[1499],90,[[],[R[1416]]]],[11,"not",R[1452],R[1499],97,[[],[R[1418]]]],[11,"not",R[1420],R[1499],107,[[],[R[1432]]]],[11,"bitand",R[1462],R[1500],8,[[["atflags"]],["atflags"]]],[11,"bitand",E,R[1500],9,[[["oflag"]],["oflag"]]],[11,"bitand",E,R[1500],10,[[["fdflag"]],["fdflag"]]],[11,"bitand",R[1438],R[1500],12,[[[R[1282]]],[R[1282]]]],[11,"bitand",R[1464],R[1500],14,[[[R[1284]]],[R[1284]]]],[11,"bitand",R[1440],R[1500],25,[[[R[1308]]],[R[1308]]]],[11,"bitand",E,R[1500],26,[[[R[1331]]],[R[1331]]]],[11,"bitand",R[1441],R[1500],29,[[[R[1342]]],[R[1342]]]],[11,"bitand",E,R[1500],30,[[[R[1346]]],[R[1346]]]],[11,"bitand",E,R[1500],31,[[["msflags"]],["msflags"]]],[11,"bitand",E,R[1500],32,[[[R[1351]]],[R[1351]]]],[11,"bitand",R[1362],R[1500],40,[[["saflags"]],["saflags"]]],[11,"bitand",R[1385],R[1500],68,[[[R[1387]]],[R[1387]]]],[11,"bitand",E,R[1500],69,[[[R[1390]]],[R[1390]]]],[11,"bitand",R[1445],R[1500],76,[[["sflag"]],["sflag"]]],[11,"bitand",E,R[1500],77,[[["mode"]],["mode"]]],[11,"bitand",R[1447],R[1500],79,[[["fsflags"]],["fsflags"]]],[11,"bitand",R[1448],R[1500],87,[[[R[1412]]],[R[1412]]]],[11,"bitand",E,R[1500],88,[[[R[1413]]],[R[1413]]]],[11,"bitand",E,R[1500],89,[[[R[1415]]],[R[1415]]]],[11,"bitand",E,R[1500],90,[[[R[1416]]],[R[1416]]]],[11,"bitand",R[1452],R[1500],97,[[[R[1418]]],[R[1418]]]],[11,"bitand",R[1420],R[1500],107,[[[R[1432]]],[R[1432]]]],[11,"bitor",R[1462],R[1501],8,[[["atflags"]],["atflags"]]],[11,"bitor",E,R[1501],9,[[["oflag"]],["oflag"]]],[11,"bitor",E,R[1501],10,[[["fdflag"]],["fdflag"]]],[11,"bitor",R[1438],R[1501],12,[[[R[1282]]],[R[1282]]]],[11,"bitor",R[1464],R[1501],14,[[[R[1284]]],[R[1284]]]],[11,"bitor",R[1440],R[1501],25,[[[R[1308]]],[R[1308]]]],[11,"bitor",E,R[1501],26,[[[R[1331]]],[R[1331]]]],[11,"bitor",R[1441],R[1501],29,[[[R[1342]]],[R[1342]]]],[11,"bitor",E,R[1501],30,[[[R[1346]]],[R[1346]]]],[11,"bitor",E,R[1501],31,[[["msflags"]],["msflags"]]],[11,"bitor",E,R[1501],32,[[[R[1351]]],[R[1351]]]],[11,"bitor",R[1362],R[1501],40,[[["saflags"]],["saflags"]]],[11,"bitor",R[1385],R[1501],68,[[[R[1387]]],[R[1387]]]],[11,"bitor",E,R[1501],69,[[[R[1390]]],[R[1390]]]],[11,"bitor",R[1445],R[1501],76,[[["sflag"]],["sflag"]]],[11,"bitor",E,R[1501],77,[[["mode"]],["mode"]]],[11,"bitor",R[1447],R[1501],79,[[["fsflags"]],["fsflags"]]],[11,"bitor",R[1448],R[1501],87,[[[R[1412]]],[R[1412]]]],[11,"bitor",E,R[1501],88,[[[R[1413]]],[R[1413]]]],[11,"bitor",E,R[1501],89,[[[R[1415]]],[R[1415]]]],[11,"bitor",E,R[1501],90,[[[R[1416]]],[R[1416]]]],[11,"bitor",R[1452],R[1501],97,[[[R[1418]]],[R[1418]]]],[11,"bitor",R[1420],R[1501],107,[[[R[1432]]],[R[1432]]]],[11,"bitxor",R[1462],R[1502],8,[[["atflags"]],["atflags"]]],[11,"bitxor",E,R[1502],9,[[["oflag"]],["oflag"]]],[11,"bitxor",E,R[1502],10,[[["fdflag"]],["fdflag"]]],[11,"bitxor",R[1438],R[1502],12,[[[R[1282]]],[R[1282]]]],[11,"bitxor",R[1464],R[1502],14,[[[R[1284]]],[R[1284]]]],[11,"bitxor",R[1440],R[1502],25,[[[R[1308]]],[R[1308]]]],[11,"bitxor",E,R[1502],26,[[[R[1331]]],[R[1331]]]],[11,"bitxor",R[1441],R[1502],29,[[[R[1342]]],[R[1342]]]],[11,"bitxor",E,R[1502],30,[[[R[1346]]],[R[1346]]]],[11,"bitxor",E,R[1502],31,[[["msflags"]],["msflags"]]],[11,"bitxor",E,R[1502],32,[[[R[1351]]],[R[1351]]]],[11,"bitxor",R[1362],R[1502],40,[[["saflags"]],["saflags"]]],[11,"bitxor",R[1385],R[1502],68,[[[R[1387]]],[R[1387]]]],[11,"bitxor",E,R[1502],69,[[[R[1390]]],[R[1390]]]],[11,"bitxor",R[1445],R[1502],76,[[["sflag"]],["sflag"]]],[11,"bitxor",E,R[1502],77,[[["mode"]],["mode"]]],[11,"bitxor",R[1447],R[1502],79,[[["fsflags"]],["fsflags"]]],[11,"bitxor",R[1448],R[1502],87,[[[R[1412]]],[R[1412]]]],[11,"bitxor",E,R[1502],88,[[[R[1413]]],[R[1413]]]],[11,"bitxor",E,R[1502],89,[[[R[1415]]],[R[1415]]]],[11,"bitxor",E,R[1502],90,[[[R[1416]]],[R[1416]]]],[11,"bitxor",R[1452],R[1502],97,[[[R[1418]]],[R[1418]]]],[11,"bitxor",R[1420],R[1502],107,[[[R[1432]]],[R[1432]]]],[11,R[1503],R[1462],R[1504],8,[[["self"],["atflags"]]]],[11,R[1503],E,R[1504],9,[[["self"],["oflag"]]]],[11,R[1503],E,R[1504],10,[[["self"],["fdflag"]]]],[11,R[1503],R[1438],R[1504],12,[[["self"],[R[1282]]]]],[11,R[1503],R[1464],R[1504],14,[[["self"],[R[1284]]]]],[11,R[1503],R[1440],R[1504],25,[[["self"],[R[1308]]]]],[11,R[1503],E,R[1504],26,[[["self"],[R[1331]]]]],[11,R[1503],R[1441],R[1504],29,[[["self"],[R[1342]]]]],[11,R[1503],E,R[1504],30,[[["self"],[R[1346]]]]],[11,R[1503],E,R[1504],31,[[["self"],["msflags"]]]],[11,R[1503],E,R[1504],32,[[["self"],[R[1351]]]]],[11,R[1503],R[1362],R[1504],40,[[["self"],["saflags"]]]],[11,R[1503],R[1385],R[1504],68,[[["self"],[R[1387]]]]],[11,R[1503],E,R[1504],69,[[["self"],[R[1390]]]]],[11,R[1503],R[1445],R[1504],76,[[["self"],["sflag"]]]],[11,R[1503],E,R[1504],77,[[["self"],["mode"]]]],[11,R[1503],R[1447],R[1504],79,[[["self"],["fsflags"]]]],[11,R[1503],R[1448],R[1504],87,[[["self"],[R[1412]]]]],[11,R[1503],E,R[1504],88,[[["self"],[R[1413]]]]],[11,R[1503],E,R[1504],89,[[["self"],[R[1415]]]]],[11,R[1503],E,R[1504],90,[[["self"],[R[1416]]]]],[11,R[1503],R[1452],R[1504],97,[[["self"],[R[1418]]]]],[11,R[1503],R[1420],R[1504],107,[[["self"],[R[1432]]]]],[11,R[1505],R[1462],R[1506],8,[[["self"],["atflags"]]]],[11,R[1505],E,R[1506],9,[[["self"],["oflag"]]]],[11,R[1505],E,R[1506],10,[[["self"],["fdflag"]]]],[11,R[1505],R[1438],R[1506],12,[[["self"],[R[1282]]]]],[11,R[1505],R[1464],R[1506],14,[[["self"],[R[1284]]]]],[11,R[1505],R[1440],R[1506],25,[[["self"],[R[1308]]]]],[11,R[1505],E,R[1506],26,[[["self"],[R[1331]]]]],[11,R[1505],R[1441],R[1506],29,[[["self"],[R[1342]]]]],[11,R[1505],E,R[1506],30,[[["self"],[R[1346]]]]],[11,R[1505],E,R[1506],31,[[["self"],["msflags"]]]],[11,R[1505],E,R[1506],32,[[["self"],[R[1351]]]]],[11,R[1505],R[1362],R[1506],40,[[["self"],["saflags"]]]],[11,R[1505],R[1385],R[1506],68,[[["self"],[R[1387]]]]],[11,R[1505],E,R[1506],69,[[["self"],[R[1390]]]]],[11,R[1505],R[1445],R[1506],76,[[["self"],["sflag"]]]],[11,R[1505],E,R[1506],77,[[["self"],["mode"]]]],[11,R[1505],R[1447],R[1506],79,[[["self"],["fsflags"]]]],[11,R[1505],R[1448],R[1506],87,[[["self"],[R[1412]]]]],[11,R[1505],E,R[1506],88,[[["self"],[R[1413]]]]],[11,R[1505],E,R[1506],89,[[["self"],[R[1415]]]]],[11,R[1505],E,R[1506],90,[[["self"],[R[1416]]]]],[11,R[1505],R[1452],R[1506],97,[[["self"],[R[1418]]]]],[11,R[1505],R[1420],R[1506],107,[[["self"],[R[1432]]]]],[11,R[1507],R[1462],R[1508],8,[[["self"],["atflags"]]]],[11,R[1507],E,R[1508],9,[[["self"],["oflag"]]]],[11,R[1507],E,R[1508],10,[[["self"],["fdflag"]]]],[11,R[1507],R[1438],R[1508],12,[[["self"],[R[1282]]]]],[11,R[1507],R[1464],R[1508],14,[[["self"],[R[1284]]]]],[11,R[1507],R[1440],R[1508],25,[[["self"],[R[1308]]]]],[11,R[1507],E,R[1508],26,[[["self"],[R[1331]]]]],[11,R[1507],R[1441],R[1508],29,[[["self"],[R[1342]]]]],[11,R[1507],E,R[1508],30,[[["self"],[R[1346]]]]],[11,R[1507],E,R[1508],31,[[["self"],["msflags"]]]],[11,R[1507],E,R[1508],32,[[["self"],[R[1351]]]]],[11,R[1507],R[1362],R[1508],40,[[["self"],["saflags"]]]],[11,R[1507],R[1385],R[1508],68,[[["self"],[R[1387]]]]],[11,R[1507],E,R[1508],69,[[["self"],[R[1390]]]]],[11,R[1507],R[1445],R[1508],76,[[["self"],["sflag"]]]],[11,R[1507],E,R[1508],77,[[["self"],["mode"]]]],[11,R[1507],R[1447],R[1508],79,[[["self"],["fsflags"]]]],[11,R[1507],R[1448],R[1508],87,[[["self"],[R[1412]]]]],[11,R[1507],E,R[1508],88,[[["self"],[R[1413]]]]],[11,R[1507],E,R[1508],89,[[["self"],[R[1415]]]]],[11,R[1507],E,R[1508],90,[[["self"],[R[1416]]]]],[11,R[1507],R[1452],R[1508],97,[[["self"],[R[1418]]]]],[11,R[1507],R[1420],R[1508],107,[[["self"],[R[1432]]]]],[11,R[81],R[1462],E,8,[[[R[82]]],["atflags"]]],[11,R[81],E,E,9,[[[R[82]]],["oflag"]]],[11,R[81],E,E,10,[[[R[82]]],["fdflag"]]],[11,R[81],R[1438],E,12,[[[R[82]]],[R[1282]]]],[11,R[81],R[1464],E,14,[[[R[82]]],[R[1284]]]],[11,R[81],R[1440],E,25,[[[R[82]]],[R[1308]]]],[11,R[81],E,E,26,[[[R[82]]],[R[1331]]]],[11,R[81],R[1441],E,29,[[[R[82]]],[R[1342]]]],[11,R[81],E,E,30,[[[R[82]]],[R[1346]]]],[11,R[81],E,E,31,[[[R[82]]],["msflags"]]],[11,R[81],E,E,32,[[[R[82]]],[R[1351]]]],[11,R[81],R[1362],E,40,[[[R[82]]],["saflags"]]],[11,R[81],R[1385],E,68,[[[R[82]]],[R[1387]]]],[11,R[81],E,E,69,[[[R[82]]],[R[1390]]]],[11,R[81],R[1445],E,76,[[[R[82]]],["sflag"]]],[11,R[81],E,E,77,[[[R[82]]],["mode"]]],[11,R[81],R[1447],E,79,[[[R[82]]],["fsflags"]]],[11,R[81],R[1448],E,87,[[[R[82]]],[R[1412]]]],[11,R[81],E,E,88,[[[R[82]]],[R[1413]]]],[11,R[81],E,E,89,[[[R[82]]],[R[1415]]]],[11,R[81],E,E,90,[[[R[82]]],[R[1416]]]],[11,R[81],R[1452],E,97,[[[R[82]]],[R[1418]]]],[11,R[81],R[1420],E,107,[[[R[82]]],[R[1432]]]],[11,"fmt",R[1462],E,8,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,9,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,10,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[1438],E,12,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[1464],E,14,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[1440],E,25,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,26,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[1441],E,29,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,30,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,31,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,32,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[1362],E,40,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[1385],E,68,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,69,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[1445],E,76,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,77,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[1447],E,79,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[1448],E,87,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,88,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,89,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,90,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[1452],E,97,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[1420],E,107,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[1462],E,8,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,9,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,10,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[1438],E,12,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[1464],E,14,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[1440],E,25,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,26,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[1441],E,29,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,30,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,31,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,32,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[1362],E,40,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[1385],E,68,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,69,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[1445],E,76,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,77,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[1447],E,79,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[1448],E,87,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,88,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,89,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,90,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[1452],E,97,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[1420],E,107,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[1462],E,8,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,9,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,10,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[1438],E,12,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[1464],E,14,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[1440],E,25,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,26,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[1441],E,29,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,30,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,31,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,32,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[1362],E,40,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[1385],E,68,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,69,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[1445],E,76,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,77,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[1447],E,79,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[1448],E,87,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,88,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,89,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,90,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[1452],E,97,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[1420],E,107,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[1462],E,8,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,9,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,10,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[1438],E,12,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[1464],E,14,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[1440],E,25,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,26,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[1441],E,29,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,30,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,31,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,32,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[1362],E,40,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[1385],E,68,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,69,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[1445],E,76,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,77,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[1447],E,79,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[1448],E,87,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,88,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,89,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,90,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[1452],E,97,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[1420],E,107,[[["self"],[R[10]]],[R[3]]]],[11,R[157],R[1463],E,4,[[["self"]],["str"]]],[11,R[157],"nix",E,0,[[["self"]],["str"]]],[11,"as_raw_fd",R[1496],E,2,[[["self"]],["rawfd"]]],[11,"as_raw_fd",R[1465],E,111,[[["self"]],["rawfd"]]],[11,"into_raw_fd",E,E,111,[[],["rawfd"]]]],"p":[[4,"Error"],[4,"Type"],[3,"Dir"],[3,"Entry"],[4,"Errno"],[8,R[1509]],[4,"FcntlArg"],[4,"FlockArg"],[3,"AtFlags"],[3,"OFlag"],[3,"FdFlag"],[3,R[1510]],[3,R[1511]],[3,"PollFd"],[3,"PollFlags"],[3,"Winsize"],[3,R[1512]],[3,R[1513]],[4,R[1514]],[4,"LioOpcode"],[4,"LioMode"],[4,R[1515]],[4,"Buffer"],[3,"AioCb"],[4,R[1516]],[3,"EventFlag"],[3,"FilterFlag"],[3,"KEvent"],[4,"MmapAdvise"],[3,"ProtFlags"],[3,"MapFlags"],[3,"MsFlags"],[3,R[1517]],[4,"Request"],[3,"FdSet"],[4,"Signal"],[4,"SigmaskHow"],[4,"SigHandler"],[4,R[1518]],[3,"SigEvent"],[3,"SaFlags"],[3,"SigSet"],[3,"SigAction"],[3,"cmsghdr"],[3,"msghdr"],[3,R[789]],[3,R[799]],[3,R[790]],[3,R[821]],[3,R[791]],[3,"UnixAddr"],[3,"Ipv4Addr"],[3,"Ipv6Addr"],[3,"LinkAddr"],[3,"RecvMsg"],[4,R[1519]],[4,"SockAddr"],[4,"InetAddr"],[4,"IpAddr"],[4,"SockType"],[4,R[1520]],[4,R[1521]],[4,R[1522]],[4,"SockLevel"],[4,"Shutdown"],[8,"CmsgBuffer"],[8,"GetSockOpt"],[8,"SetSockOpt"],[3,"SockFlag"],[3,"MsgFlags"],[3,R[1523]],[3,R[1524]],[3,"CmsgSpace"],[3,"FileStat"],[4,R[1525]],[4,R[1526]],[3,"SFlag"],[3,"Mode"],[3,"Statfs"],[3,"FsFlags"],[3,"Statvfs"],[3,"Termios"],[4,"BaudRate"],[4,"SetArg"],[4,"FlushArg"],[4,"FlowArg"],[4,R[1527]],[3,"InputFlags"],[3,R[1528]],[3,R[1529]],[3,"LocalFlags"],[8,R[1530]],[3,"TimeSpec"],[3,"TimeVal"],[3,"IoVec"],[3,"UtsName"],[4,"WaitStatus"],[3,R[1531]],[4,"ForkResult"],[4,R[1532]],[4,"Whence"],[4,R[1533]],[4,R[1534]],[4,"SysconfVar"],[3,"Uid"],[3,"Gid"],[3,"Pid"],[3,R[1535]],[8,"NixPath"],[3,"Iter"],[3,R[1536]],[3,"PtyMaster"],[3,R[1537]],[3,R[1538]],[3,"ReuseAddr"],[3,"ReusePort"],[3,"TcpNoDelay"],[3,"Linger"],[3,R[1539]],[3,R[1540]],[3,R[1541]],[3,R[1542]],[3,R[1543]],[3,R[1544]],[3,R[1545]],[3,R[1546]],[3,"Broadcast"],[3,"OobInline"],[3,R[1547]],[3,"KeepAlive"],[3,R[1548]],[3,"RcvBuf"],[3,"SndBuf"],[3,"SockType"],[3,"AcceptConn"],[3,R[1549]],[3,R[1383]],[3,R[1550]],[3,R[1551]],[3,R[1384]],[6,"SessionId"]]};
searchIndex["nodrop"]={"doc":"The nodrop crate has the following cargo feature flags:","i":[[3,"NoDrop","nodrop","A type holding T that will not call its destructor on drop",N,N],[11,"new",E,"Create a new NoDrop.",0,[[[T]],["nodrop"]]],[11,R[15],E,"Extract the inner value.",0,[[],[T]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[4],E,E,0,[[[U]],[R[3]]]],[11,"into",E,E,0,[[],[U]]],[11,R[5],E,E,0,[[],[R[3]]]],[11,R[6],E,E,0,[[["self"]],[T]]],[11,R[7],E,E,0,[[["self"]],[T]]],[11,R[8],E,E,0,[[["self"]],[R[9]]]],[11,"deref",E,E,0,[[["self"]],[T]]],[11,R[17],E,E,0,[[["self"]],[T]]],[11,"drop",E,E,0,[[["self"]]]]],"p":[[3,"NoDrop"]]};
searchIndex["num_cpus"]={"doc":"A crate with utilities to determine the number of CPUs…","i":[[5,"get","num_cpus","Returns the number of available CPUs of the current system.",N,[[],["usize"]]],[5,"get_physical",E,"Returns the number of physical cores of the current system.",N,[[],["usize"]]]],"p":[]};
searchIndex["num_traits"]={"doc":"Numeric traits for generic mathematics","i":[[8,"Bounded",R[1043],R[1607],N,N],[10,R[1074],E,R[1608],0,[[],["self"]]],[10,R[1075],E,R[1609],0,[[],["self"]]],[8,"Float",E,R[1610],N,N],[10,"nan",E,R[1611],1,[[],["self"]]],[10,"infinity",E,R[1612],1,[[],["self"]]],[10,R[1044],E,R[1613],1,[[],["self"]]],[10,"neg_zero",E,R[1045],1,[[],["self"]]],[10,R[1074],E,R[1046],1,[[],["self"]]],[10,R[1047],E,R[1048],1,[[],["self"]]],[11,"epsilon",E,R[1049],1,[[],["self"]]],[10,R[1075],E,R[1050],1,[[],["self"]]],[10,"is_nan",E,R[1614],1,[[],["bool"]]],[10,R[1051],E,R[1615],1,[[],["bool"]]],[10,"is_finite",E,R[1616],1,[[],["bool"]]],[10,"is_normal",E,R[1052],1,[[],["bool"]]],[10,"classify",E,R[1053],1,[[],["fpcategory"]]],[10,"floor",E,R[1054],1,[[],["self"]]],[10,"ceil",E,R[1055],1,[[],["self"]]],[10,"round",E,R[1056],1,[[],["self"]]],[10,"trunc",E,R[1057],1,[[],["self"]]],[10,"fract",E,R[1058],1,[[],["self"]]],[10,"abs",E,R[1059],1,[[],["self"]]],[10,"signum",E,R[1060],1,[[],["self"]]],[10,R[1061],E,R[1076],1,[[],["bool"]]],[10,R[1062],E,R[1077],1,[[],["bool"]]],[10,"mul_add",E,R[1071],1,[[],["self"]]],[10,"recip",E,R[1078],1,[[],["self"]]],[10,"powi",E,R[1063],1,[[["i32"]],["self"]]],[10,"powf",E,R[1617],1,[[],["self"]]],[10,"sqrt",E,R[1079],1,[[],["self"]]],[10,"exp",E,R[1080],1,[[],["self"]]],[10,"exp2",E,R[1081],1,[[],["self"]]],[10,"ln",E,R[1082],1,[[],["self"]]],[10,"log",E,R[1083],1,[[],["self"]]],[10,"log2",E,R[1084],1,[[],["self"]]],[10,"log10",E,R[1085],1,[[],["self"]]],[11,R[1086],E,R[1087],1,[[],["self"]]],[11,R[1088],E,R[1089],1,[[],["self"]]],[10,"max",E,R[1064],1,[[],["self"]]],[10,"min",E,R[1065],1,[[],["self"]]],[10,"abs_sub",E,R[1090],1,[[],["self"]]],[10,"cbrt",E,R[1091],1,[[],["self"]]],[10,"hypot",E,R[1092],1,[[],["self"]]],[10,"sin",E,R[1093],1,[[],["self"]]],[10,"cos",E,R[1094],1,[[],["self"]]],[10,"tan",E,R[1095],1,[[],["self"]]],[10,"asin",E,R[1096],1,[[],["self"]]],[10,"acos",E,R[1097],1,[[],["self"]]],[10,"atan",E,R[1098],1,[[],["self"]]],[10,"atan2",E,R[1099],1,[[],["self"]]],[10,"sin_cos",E,R[1100],1,[[]]],[10,"exp_m1",E,R[1101],1,[[],["self"]]],[10,"ln_1p",E,R[1102],1,[[],["self"]]],[10,"sinh",E,R[1103],1,[[],["self"]]],[10,"cosh",E,R[1104],1,[[],["self"]]],[10,"tanh",E,R[1105],1,[[],["self"]]],[10,"asinh",E,R[1106],1,[[],["self"]]],[10,"acosh",E,R[1107],1,[[],["self"]]],[10,"atanh",E,R[1108],1,[[],["self"]]],[10,R[1066],E,R[1067],1,[[]]],[8,R[1693],E,E,N,N],[10,"E",E,R[1618],2,[[],["self"]]],[10,"FRAC_1_PI",E,R[1619],2,[[],["self"]]],[10,R[1620],E,R[1621],2,[[],["self"]]],[10,"FRAC_2_PI",E,R[1622],2,[[],["self"]]],[10,R[1623],E,R[1624],2,[[],["self"]]],[10,"FRAC_PI_2",E,R[1625],2,[[],["self"]]],[10,"FRAC_PI_3",E,R[1626],2,[[],["self"]]],[10,"FRAC_PI_4",E,R[1627],2,[[],["self"]]],[10,"FRAC_PI_6",E,R[1628],2,[[],["self"]]],[10,"FRAC_PI_8",E,R[1629],2,[[],["self"]]],[10,"LN_10",E,R[1630],2,[[],["self"]]],[10,"LN_2",E,R[1631],2,[[],["self"]]],[10,"LOG10_E",E,R[1632],2,[[],["self"]]],[10,"LOG2_E",E,R[1633],2,[[],["self"]]],[10,"PI",E,R[1634],2,[[],["self"]]],[10,"SQRT_2",E,R[1635],2,[[],["self"]]],[8,"Zero",E,R[1561],N,N],[10,"zero",E,R[1562],3,[[],["self"]]],[11,"set_zero",E,R[1563],3,[[["self"]]]],[10,"is_zero",E,R[1564],3,[[["self"]],["bool"]]],[8,"One",E,R[1565],N,N],[10,"one",E,R[1566],4,[[],["self"]]],[11,"set_one",E,R[1567],4,[[["self"]]]],[11,"is_one",E,R[1568],4,[[["self"]],["bool"]]],[5,"zero",E,R[1569],N,[[],[T]]],[5,"one",E,R[1570],N,[[],[T]]],[8,R[1694],E,R[1582],N,N],[10,R[1206],E,R[1583],5,[[["self"]],[R[23]]]],[8,R[1695],E,R[1584],N,N],[10,R[1207],E,R[1585],6,[[["self"]],[R[23]]]],[8,R[1696],E,R[1586],N,N],[10,R[1587],E,R[1588],7,[[["self"]],[R[23]]]],[8,R[1697],E,R[1589],N,N],[10,R[1590],E,R[1591],8,[[["self"]],[R[23]]]],[8,R[1698],E,R[1592],N,N],[10,R[1593],E,R[1594],9,[[["self"],["u32"]],[R[23]]]],[8,R[1699],E,R[1595],N,N],[10,R[1596],E,R[1597],10,[[["self"],["u32"]],[R[23]]]],[8,R[1117],E,R[1598],N,N],[10,R[1599],E,R[1600],11,[[["self"]],["self"]]],[8,R[1119],E,R[1601],N,N],[10,R[1602],E,R[1603],12,[[["self"]],["self"]]],[8,R[1118],E,R[1604],N,N],[10,R[1605],E,R[1606],13,[[["self"]],["self"]]],[8,R[1700],E,R[1577],N,N],[10,R[1578],E,R[1579],14,[[],["self"]]],[10,R[1580],E,R[1581],14,[[],["self"]]],[8,"Signed",E,R[1571],N,N],[10,"abs",E,R[1109],15,[[["self"]],["self"]]],[10,"abs_sub",E,R[1090],15,[[["self"]],["self"]]],[10,"signum",E,R[1110],15,[[["self"]],["self"]]],[10,R[1572],E,R[1573],15,[[["self"]],["bool"]]],[10,R[1574],E,R[1575],15,[[["self"]],["bool"]]],[8,"Unsigned",E,R[1576],N,N],[5,"abs",E,R[1109],N,[[[T]],[T]]],[5,"abs_sub",E,R[1090],N,[[[T]],[T]]],[5,"signum",E,R[1110],N,[[[T]],[T]]],[8,R[1115],E,R[1636],N,N],[10,"as_",E,R[1637],16,[[],[T]]],[8,R[1114],E,R[1638],N,N],[11,"from_isize",E,R[1639],17,[[["isize"]],[R[23]]]],[11,"from_i8",E,R[1640],17,[[["i8"]],[R[23]]]],[11,"from_i16",E,R[1641],17,[[["i16"]],[R[23]]]],[11,"from_i32",E,R[1642],17,[[["i32"]],[R[23]]]],[10,"from_i64",E,R[1643],17,[[["i64"]],[R[23]]]],[11,"from_i128",E,R[1644],17,[[["i128"]],[R[23]]]],[11,R[1645],E,R[1646],17,[[["usize"]],[R[23]]]],[11,"from_u8",E,R[1647],17,[[["u8"]],[R[23]]]],[11,"from_u16",E,R[1648],17,[[["u16"]],[R[23]]]],[11,R[4950],E,R[1649],17,[[["u32"]],[R[23]]]],[10,"from_u64",E,R[1650],17,[[["u64"]],[R[23]]]],[11,"from_u128",E,R[1651],17,[[["u128"]],[R[23]]]],[11,"from_f32",E,R[1652],17,[[["f32"]],[R[23]]]],[11,"from_f64",E,R[1653],17,[[["f64"]],[R[23]]]],[8,R[1113],E,R[1654],N,N],[11,R[975],E,R[1655],18,[[["self"]],[["isize"],[R[23],["isize"]]]]],[11,"to_i8",E,R[1656],18,[[["self"]],[[R[23],["i8"]],["i8"]]]],[11,"to_i16",E,R[1657],18,[[["self"]],[[R[23],["i16"]],["i16"]]]],[11,"to_i32",E,R[1658],18,[[["self"]],[[R[23],["i32"]],["i32"]]]],[10,"to_i64",E,R[1659],18,[[["self"]],[["i64"],[R[23],["i64"]]]]],[11,"to_i128",E,R[1660],18,[[["self"]],[["i128"],[R[23],["i128"]]]]],[11,R[976],E,R[1661],18,[[["self"]],[[R[23],["usize"]],["usize"]]]],[11,"to_u8",E,R[1662],18,[[["self"]],[[R[23],["u8"]],["u8"]]]],[11,"to_u16",E,R[1663],18,[[["self"]],[[R[23],["u16"]],["u16"]]]],[11,"to_u32",E,R[1664],18,[[["self"]],[["u32"],[R[23],["u32"]]]]],[10,"to_u64",E,R[1665],18,[[["self"]],[[R[23],["u64"]],["u64"]]]],[11,"to_u128",E,R[1666],18,[[["self"]],[[R[23],["u128"]],["u128"]]]],[11,"to_f32",E,R[1667],18,[[["self"]],[["f32"],[R[23],["f32"]]]]],[11,"to_f64",E,R[1668],18,[[["self"]],[[R[23],["f64"]],["f64"]]]],[8,"NumCast",E,R[1669],N,N],[10,"from",E,R[1670],19,[[[T]],[R[23]]]],[5,"cast",E,R[1671],N,[[[T]],[R[23]]]],[8,"PrimInt",E,R[1672],N,N],[10,"count_ones",E,R[1673],20,[[],["u32"]]],[10,R[1674],E,R[1675],20,[[],["u32"]]],[10,R[1676],E,R[1677],20,[[],["u32"]]],[10,R[1678],E,R[1679],20,[[],["u32"]]],[10,R[1680],E,R[1068],20,[[["u32"]],["self"]]],[10,R[1681],E,R[1069],20,[[["u32"]],["self"]]],[10,"signed_shl",E,R[1068],20,[[["u32"]],["self"]]],[10,"signed_shr",E,R[1069],20,[[["u32"]],["self"]]],[10,R[1682],E,R[1068],20,[[["u32"]],["self"]]],[10,R[1683],E,R[1069],20,[[["u32"]],["self"]]],[10,"swap_bytes",E,R[1684],20,[[],["self"]]],[10,"from_be",E,R[1685],20,[[],["self"]]],[10,"from_le",E,R[1686],20,[[],["self"]]],[10,"to_be",E,R[1687],20,[[],["self"]]],[10,"to_le",E,R[1688],20,[[],["self"]]],[10,"pow",E,R[1689],20,[[["u32"]],["self"]]],[5,"pow",E,R[1690],N,[[[T],["usize"]],[T]]],[5,R[1691],E,R[1692],N,[[[T],["usize"]],[R[23]]]],[8,"Num",E,"The base trait for numeric types, covering `0` and `1`…",N,N],[16,"FromStrRadixErr",E,E,21,N],[10,"from_str_radix",E,"Convert from a string and radix <= 36.",21,[[["u32"],["str"]],[R[3]]]],[8,"NumOps",E,"The trait for types implementing basic numeric operations",N,N],[8,"NumRef",E,"The trait for `Num` types which also implement numeric…",N,N],[8,"RefNum",E,"The trait for references which implement numeric…",N,N],[8,"NumAssignOps",E,"The trait for types implementing numeric assignment…",N,N],[8,"NumAssign",E,"The trait for `Num` types which also implement assignment…",N,N],[8,"NumAssignRef",E,"The trait for `NumAssign` types which also implement…",N,N],[4,R[1112],E,E,N,N],[13,"Empty",E,E,22,N],[13,"Invalid",E,E,22,N],[3,R[1111],E,E,N,N],[12,"kind",E,E,23,N],[5,"clamp",E,"A value bounded by a minimum and a maximum",N,[[[T]],[T]]],[0,"identities",E,E,N,N],[8,"Zero","num_traits::identities",R[1561],N,N],[10,"zero",E,R[1562],3,[[],["self"]]],[11,"set_zero",E,R[1563],3,[[["self"]]]],[10,"is_zero",E,R[1564],3,[[["self"]],["bool"]]],[8,"One",E,R[1565],N,N],[10,"one",E,R[1566],4,[[],["self"]]],[11,"set_one",E,R[1567],4,[[["self"]]]],[11,"is_one",E,R[1568],4,[[["self"]],["bool"]]],[5,"zero",E,R[1569],N,[[],[T]]],[5,"one",E,R[1570],N,[[],[T]]],[0,"sign",R[1043],E,N,N],[8,"Signed","num_traits::sign",R[1571],N,N],[10,"abs",E,R[1109],15,[[["self"]],["self"]]],[10,"abs_sub",E,R[1090],15,[[["self"]],["self"]]],[10,"signum",E,R[1110],15,[[["self"]],["self"]]],[10,R[1572],E,R[1573],15,[[["self"]],["bool"]]],[10,R[1574],E,R[1575],15,[[["self"]],["bool"]]],[8,"Unsigned",E,R[1576],N,N],[5,"abs",E,R[1109],N,[[[T]],[T]]],[5,"abs_sub",E,R[1090],N,[[[T]],[T]]],[5,"signum",E,R[1110],N,[[[T]],[T]]],[0,"ops",R[1043],E,N,N],[0,"saturating",R[1070],E,N,N],[8,R[1700],"num_traits::ops::saturating",R[1577],N,N],[10,R[1578],E,R[1579],14,[[],["self"]]],[10,R[1580],E,R[1581],14,[[],["self"]]],[0,"checked",R[1070],E,N,N],[8,R[1694],"num_traits::ops::checked",R[1582],N,N],[10,R[1206],E,R[1583],5,[[["self"]],[R[23]]]],[8,R[1695],E,R[1584],N,N],[10,R[1207],E,R[1585],6,[[["self"]],[R[23]]]],[8,R[1696],E,R[1586],N,N],[10,R[1587],E,R[1588],7,[[["self"]],[R[23]]]],[8,R[1697],E,R[1589],N,N],[10,R[1590],E,R[1591],8,[[["self"]],[R[23]]]],[8,R[1698],E,R[1592],N,N],[10,R[1593],E,R[1594],9,[[["self"],["u32"]],[R[23]]]],[8,R[1699],E,R[1595],N,N],[10,R[1596],E,R[1597],10,[[["self"],["u32"]],[R[23]]]],[0,"wrapping",R[1070],E,N,N],[8,R[1117],"num_traits::ops::wrapping",R[1598],N,N],[10,R[1599],E,R[1600],11,[[["self"]],["self"]]],[8,R[1119],E,R[1601],N,N],[10,R[1602],E,R[1603],12,[[["self"]],["self"]]],[8,R[1118],E,R[1604],N,N],[10,R[1605],E,R[1606],13,[[["self"]],["self"]]],[0,"bounds",R[1043],E,N,N],[8,"Bounded","num_traits::bounds",R[1607],N,N],[10,R[1074],E,R[1608],0,[[],["self"]]],[10,R[1075],E,R[1609],0,[[],["self"]]],[0,"float",R[1043],E,N,N],[8,"Float","num_traits::float",R[1610],N,N],[10,"nan",E,R[1611],1,[[],["self"]]],[10,"infinity",E,R[1612],1,[[],["self"]]],[10,R[1044],E,R[1613],1,[[],["self"]]],[10,"neg_zero",E,R[1045],1,[[],["self"]]],[10,R[1074],E,R[1046],1,[[],["self"]]],[10,R[1047],E,R[1048],1,[[],["self"]]],[11,"epsilon",E,R[1049],1,[[],["self"]]],[10,R[1075],E,R[1050],1,[[],["self"]]],[10,"is_nan",E,R[1614],1,[[],["bool"]]],[10,R[1051],E,R[1615],1,[[],["bool"]]],[10,"is_finite",E,R[1616],1,[[],["bool"]]],[10,"is_normal",E,R[1052],1,[[],["bool"]]],[10,"classify",E,R[1053],1,[[],["fpcategory"]]],[10,"floor",E,R[1054],1,[[],["self"]]],[10,"ceil",E,R[1055],1,[[],["self"]]],[10,"round",E,R[1056],1,[[],["self"]]],[10,"trunc",E,R[1057],1,[[],["self"]]],[10,"fract",E,R[1058],1,[[],["self"]]],[10,"abs",E,R[1059],1,[[],["self"]]],[10,"signum",E,R[1060],1,[[],["self"]]],[10,R[1061],E,R[1076],1,[[],["bool"]]],[10,R[1062],E,R[1077],1,[[],["bool"]]],[10,"mul_add",E,R[1071],1,[[],["self"]]],[10,"recip",E,R[1078],1,[[],["self"]]],[10,"powi",E,R[1063],1,[[["i32"]],["self"]]],[10,"powf",E,R[1617],1,[[],["self"]]],[10,"sqrt",E,R[1079],1,[[],["self"]]],[10,"exp",E,R[1080],1,[[],["self"]]],[10,"exp2",E,R[1081],1,[[],["self"]]],[10,"ln",E,R[1082],1,[[],["self"]]],[10,"log",E,R[1083],1,[[],["self"]]],[10,"log2",E,R[1084],1,[[],["self"]]],[10,"log10",E,R[1085],1,[[],["self"]]],[11,R[1086],E,R[1087],1,[[],["self"]]],[11,R[1088],E,R[1089],1,[[],["self"]]],[10,"max",E,R[1064],1,[[],["self"]]],[10,"min",E,R[1065],1,[[],["self"]]],[10,"abs_sub",E,R[1090],1,[[],["self"]]],[10,"cbrt",E,R[1091],1,[[],["self"]]],[10,"hypot",E,R[1092],1,[[],["self"]]],[10,"sin",E,R[1093],1,[[],["self"]]],[10,"cos",E,R[1094],1,[[],["self"]]],[10,"tan",E,R[1095],1,[[],["self"]]],[10,"asin",E,R[1096],1,[[],["self"]]],[10,"acos",E,R[1097],1,[[],["self"]]],[10,"atan",E,R[1098],1,[[],["self"]]],[10,"atan2",E,R[1099],1,[[],["self"]]],[10,"sin_cos",E,R[1100],1,[[]]],[10,"exp_m1",E,R[1101],1,[[],["self"]]],[10,"ln_1p",E,R[1102],1,[[],["self"]]],[10,"sinh",E,R[1103],1,[[],["self"]]],[10,"cosh",E,R[1104],1,[[],["self"]]],[10,"tanh",E,R[1105],1,[[],["self"]]],[10,"asinh",E,R[1106],1,[[],["self"]]],[10,"acosh",E,R[1107],1,[[],["self"]]],[10,"atanh",E,R[1108],1,[[],["self"]]],[10,R[1066],E,R[1067],1,[[]]],[8,R[1693],E,E,N,N],[10,"E",E,R[1618],2,[[],["self"]]],[10,"FRAC_1_PI",E,R[1619],2,[[],["self"]]],[10,R[1620],E,R[1621],2,[[],["self"]]],[10,"FRAC_2_PI",E,R[1622],2,[[],["self"]]],[10,R[1623],E,R[1624],2,[[],["self"]]],[10,"FRAC_PI_2",E,R[1625],2,[[],["self"]]],[10,"FRAC_PI_3",E,R[1626],2,[[],["self"]]],[10,"FRAC_PI_4",E,R[1627],2,[[],["self"]]],[10,"FRAC_PI_6",E,R[1628],2,[[],["self"]]],[10,"FRAC_PI_8",E,R[1629],2,[[],["self"]]],[10,"LN_10",E,R[1630],2,[[],["self"]]],[10,"LN_2",E,R[1631],2,[[],["self"]]],[10,"LOG10_E",E,R[1632],2,[[],["self"]]],[10,"LOG2_E",E,R[1633],2,[[],["self"]]],[10,"PI",E,R[1634],2,[[],["self"]]],[10,"SQRT_2",E,R[1635],2,[[],["self"]]],[0,"real",R[1043],E,N,N],[8,"Real","num_traits::real","A trait for real number types that do not necessarily have…",N,N],[10,R[1074],E,R[1046],24,[[],["self"]]],[10,R[1047],E,R[1048],24,[[],["self"]]],[10,"epsilon",E,R[1049],24,[[],["self"]]],[10,R[1075],E,R[1050],24,[[],["self"]]],[10,"floor",E,R[1054],24,[[],["self"]]],[10,"ceil",E,R[1055],24,[[],["self"]]],[10,"round",E,R[1056],24,[[],["self"]]],[10,"trunc",E,R[1057],24,[[],["self"]]],[10,"fract",E,R[1058],24,[[],["self"]]],[10,"abs",E,R[1059],24,[[],["self"]]],[10,"signum",E,R[1060],24,[[],["self"]]],[10,R[1061],E,R[1076],24,[[],["bool"]]],[10,R[1062],E,R[1077],24,[[],["bool"]]],[10,"mul_add",E,R[1071],24,[[],["self"]]],[10,"recip",E,R[1078],24,[[],["self"]]],[10,"powi",E,R[1063],24,[[["i32"]],["self"]]],[10,"powf",E,"Raise a number to a real number power.",24,[[],["self"]]],[10,"sqrt",E,R[1079],24,[[],["self"]]],[10,"exp",E,R[1080],24,[[],["self"]]],[10,"exp2",E,R[1081],24,[[],["self"]]],[10,"ln",E,R[1082],24,[[],["self"]]],[10,"log",E,R[1083],24,[[],["self"]]],[10,"log2",E,R[1084],24,[[],["self"]]],[10,"log10",E,R[1085],24,[[],["self"]]],[10,R[1086],E,R[1087],24,[[],["self"]]],[10,R[1088],E,R[1089],24,[[],["self"]]],[10,"max",E,R[1064],24,[[],["self"]]],[10,"min",E,R[1065],24,[[],["self"]]],[10,"abs_sub",E,R[1090],24,[[],["self"]]],[10,"cbrt",E,R[1091],24,[[],["self"]]],[10,"hypot",E,R[1092],24,[[],["self"]]],[10,"sin",E,R[1093],24,[[],["self"]]],[10,"cos",E,R[1094],24,[[],["self"]]],[10,"tan",E,R[1095],24,[[],["self"]]],[10,"asin",E,R[1096],24,[[],["self"]]],[10,"acos",E,R[1097],24,[[],["self"]]],[10,"atan",E,R[1098],24,[[],["self"]]],[10,"atan2",E,R[1099],24,[[],["self"]]],[10,"sin_cos",E,R[1100],24,[[]]],[10,"exp_m1",E,R[1101],24,[[],["self"]]],[10,"ln_1p",E,R[1102],24,[[],["self"]]],[10,"sinh",E,R[1103],24,[[],["self"]]],[10,"cosh",E,R[1104],24,[[],["self"]]],[10,"tanh",E,R[1105],24,[[],["self"]]],[10,"asinh",E,R[1106],24,[[],["self"]]],[10,"acosh",E,R[1107],24,[[],["self"]]],[10,"atanh",E,R[1108],24,[[],["self"]]],[0,"cast",R[1043],E,N,N],[8,R[1115],"num_traits::cast",R[1636],N,N],[10,"as_",E,R[1637],16,[[],[T]]],[8,R[1114],E,R[1638],N,N],[11,"from_isize",E,R[1639],17,[[["isize"]],[R[23]]]],[11,"from_i8",E,R[1640],17,[[["i8"]],[R[23]]]],[11,"from_i16",E,R[1641],17,[[["i16"]],[R[23]]]],[11,"from_i32",E,R[1642],17,[[["i32"]],[R[23]]]],[10,"from_i64",E,R[1643],17,[[["i64"]],[R[23]]]],[11,"from_i128",E,R[1644],17,[[["i128"]],[R[23]]]],[11,R[1645],E,R[1646],17,[[["usize"]],[R[23]]]],[11,"from_u8",E,R[1647],17,[[["u8"]],[R[23]]]],[11,"from_u16",E,R[1648],17,[[["u16"]],[R[23]]]],[11,R[4950],E,R[1649],17,[[["u32"]],[R[23]]]],[10,"from_u64",E,R[1650],17,[[["u64"]],[R[23]]]],[11,"from_u128",E,R[1651],17,[[["u128"]],[R[23]]]],[11,"from_f32",E,R[1652],17,[[["f32"]],[R[23]]]],[11,"from_f64",E,R[1653],17,[[["f64"]],[R[23]]]],[8,R[1113],E,R[1654],N,N],[11,R[975],E,R[1655],18,[[["self"]],[["isize"],[R[23],["isize"]]]]],[11,"to_i8",E,R[1656],18,[[["self"]],[[R[23],["i8"]],["i8"]]]],[11,"to_i16",E,R[1657],18,[[["self"]],[[R[23],["i16"]],["i16"]]]],[11,"to_i32",E,R[1658],18,[[["self"]],[[R[23],["i32"]],["i32"]]]],[10,"to_i64",E,R[1659],18,[[["self"]],[["i64"],[R[23],["i64"]]]]],[11,"to_i128",E,R[1660],18,[[["self"]],[["i128"],[R[23],["i128"]]]]],[11,R[976],E,R[1661],18,[[["self"]],[[R[23],["usize"]],["usize"]]]],[11,"to_u8",E,R[1662],18,[[["self"]],[[R[23],["u8"]],["u8"]]]],[11,"to_u16",E,R[1663],18,[[["self"]],[[R[23],["u16"]],["u16"]]]],[11,"to_u32",E,R[1664],18,[[["self"]],[["u32"],[R[23],["u32"]]]]],[10,"to_u64",E,R[1665],18,[[["self"]],[[R[23],["u64"]],["u64"]]]],[11,"to_u128",E,R[1666],18,[[["self"]],[[R[23],["u128"]],["u128"]]]],[11,"to_f32",E,R[1667],18,[[["self"]],[["f32"],[R[23],["f32"]]]]],[11,"to_f64",E,R[1668],18,[[["self"]],[[R[23],["f64"]],["f64"]]]],[8,"NumCast",E,R[1669],N,N],[10,"from",E,R[1670],19,[[[T]],[R[23]]]],[5,"cast",E,R[1671],N,[[[T]],[R[23]]]],[0,"int",R[1043],E,N,N],[8,"PrimInt","num_traits::int",R[1672],N,N],[10,"count_ones",E,R[1673],20,[[],["u32"]]],[10,R[1674],E,R[1675],20,[[],["u32"]]],[10,R[1676],E,R[1677],20,[[],["u32"]]],[10,R[1678],E,R[1679],20,[[],["u32"]]],[10,R[1680],E,R[1068],20,[[["u32"]],["self"]]],[10,R[1681],E,R[1069],20,[[["u32"]],["self"]]],[10,"signed_shl",E,R[1068],20,[[["u32"]],["self"]]],[10,"signed_shr",E,R[1069],20,[[["u32"]],["self"]]],[10,R[1682],E,R[1068],20,[[["u32"]],["self"]]],[10,R[1683],E,R[1069],20,[[["u32"]],["self"]]],[10,"swap_bytes",E,R[1684],20,[[],["self"]]],[10,"from_be",E,R[1685],20,[[],["self"]]],[10,"from_le",E,R[1686],20,[[],["self"]]],[10,"to_be",E,R[1687],20,[[],["self"]]],[10,"to_le",E,R[1688],20,[[],["self"]]],[10,"pow",E,R[1689],20,[[["u32"]],["self"]]],[0,"pow",R[1043],E,N,N],[5,"pow","num_traits::pow",R[1690],N,[[[T],["usize"]],[T]]],[5,R[1691],E,R[1692],N,[[[T],["usize"]],[R[23]]]],[11,"into",R[1043],E,22,[[],[U]]],[11,"from",E,E,22,[[[T]],[T]]],[11,R[4],E,E,22,[[[U]],[R[3]]]],[11,R[5],E,E,22,[[],[R[3]]]],[11,R[7],E,E,22,[[["self"]],[T]]],[11,R[6],E,E,22,[[["self"]],[T]]],[11,R[8],E,E,22,[[["self"]],[R[9]]]],[11,"into",E,E,23,[[],[U]]],[11,R[113],E,E,23,[[["self"]],["string"]]],[11,"from",E,E,23,[[[T]],[T]]],[11,R[4],E,E,23,[[[U]],[R[3]]]],[11,R[5],E,E,23,[[],[R[3]]]],[11,R[7],E,E,23,[[["self"]],[T]]],[11,R[6],E,E,23,[[["self"]],[T]]],[11,R[8],E,E,23,[[["self"]],[R[9]]]],[11,"fmt",E,E,23,[[["self"],[R[10]]],[[R[3],["error"]],["error"]]]],[11,"fmt",E,E,22,[[["self"],[R[10]]],[[R[3],["error"]],["error"]]]],[11,"fmt",E,E,23,[[["self"],[R[10]]],[[R[3],["error"]],["error"]]]]],"p":[[8,"Bounded"],[8,"Float"],[8,R[1693]],[8,"Zero"],[8,"One"],[8,R[1694]],[8,R[1695]],[8,R[1696]],[8,R[1697]],[8,R[1698]],[8,R[1699]],[8,R[1117]],[8,R[1119]],[8,R[1118]],[8,R[1700]],[8,"Signed"],[8,R[1115]],[8,R[1114]],[8,R[1113]],[8,"NumCast"],[8,"PrimInt"],[8,"Num"],[4,R[1112]],[3,R[1111]],[8,"Real"]]};
searchIndex["owning_ref"]={"doc":R[669],"i":[[8,"StableAddress","owning_ref",R[693],N,N],[8,"CloneStableAddress",E,R[694],N,N],[3,R[690],E,R[669],N,N],[3,R[691],E,"An mutable owning reference.",N,N],[3,R[692],E,"`OwningHandle` is a complement to `OwningRef`. Where…",N,N],[6,"BoxRef",E,"Typedef of a owning reference that uses a `Box` as the…",N,N],[6,"VecRef",E,"Typedef of a owning reference that uses a `Vec` as the…",N,N],[6,"StringRef",E,"Typedef of a owning reference that uses a `String` as the…",N,N],[6,"RcRef",E,"Typedef of a owning reference that uses a `Rc` as the owner.",N,N],[6,"ArcRef",E,"Typedef of a owning reference that uses a `Arc` as the…",N,N],[6,"RefRef",E,"Typedef of a owning reference that uses a `Ref` as the…",N,N],[6,"RefMutRef",E,"Typedef of a owning reference that uses a `RefMut` as the…",N,N],[6,"MutexGuardRef",E,"Typedef of a owning reference that uses a `MutexGuard` as…",N,N],[6,"RwLockReadGuardRef",E,R[670],N,N],[6,"RwLockWriteGuardRef",E,R[670],N,N],[6,"BoxRefMut",E,"Typedef of a mutable owning reference that uses a `Box` as…",N,N],[6,"VecRefMut",E,"Typedef of a mutable owning reference that uses a `Vec` as…",N,N],[6,"StringRefMut",E,"Typedef of a mutable owning reference that uses a `String`…",N,N],[6,"RefMutRefMut",E,"Typedef of a mutable owning reference that uses a `RefMut`…",N,N],[6,"MutexGuardRefMut",E,R[671],N,N],[6,"RwLockWriteGuardRefMut",E,R[671],N,N],[6,"ErasedBoxRef",E,"Typedef of a owning reference that uses an erased `Box` as…",N,N],[6,"ErasedRcRef",E,"Typedef of a owning reference that uses an erased `Rc` as…",N,N],[6,"ErasedArcRef",E,"Typedef of a owning reference that uses an erased `Arc` as…",N,N],[6,"ErasedBoxRefMut",E,"Typedef of a mutable owning reference that uses an erased…",N,N],[8,"Erased",E,"Helper trait for an erased concrete type an owner…",N,N],[8,R[688],E,"Helper trait for erasing the concrete type of what an…",N,N],[16,"Erased",E,"Owner with the dereference type substituted to `Erased`.",0,N],[10,"into_erased",E,"Perform the type erasure.",0,[[]]],[8,"ToHandle",E,"Trait to implement the conversion of owner to handle for…",N,N],[16,"Handle",E,R[672],1,N],[10,"to_handle",E,R[673],1,[[]]],[8,R[689],E,"Trait to implement the conversion of owner to mutable…",N,N],[16,"HandleMut",E,R[672],2,N],[10,"to_handle_mut",E,R[673],2,[[]]],[11,"new",E,R[675],3,[[["o"]],["self"]]],[11,R[676],E,R[677],3,[[["o"]],["self"]]],[11,"map",E,"Converts `self` into a new owning reference that points at…",3,[[["f"]],[[R[674]],["sized"]]]],[11,R[559],E,"Tries to convert `self` into a new owning reference that…",3,[[["f"]],[[R[3],[R[674]]],[R[674]]]]],[11,R[679],E,R[680],3,[[["f"]],[R[674]]]],[11,R[681],E,R[682],3,[[],[["box"],[R[674],["box"]]]]],[11,R[683],E,R[684],3,[[],[R[674]]]],[11,"owner",E,R[685],3,[[["self"]],["o"]]],[11,R[15],E,R[686],3,[[],["o"]]],[11,"new",E,R[675],4,[[["o"]],["self"]]],[11,R[676],E,R[677],4,[[["o"]],["self"]]],[11,"map",E,"Converts `self` into a new shared owning reference that…",4,[[["f"]],[[R[674]],["sized"]]]],[11,"map_mut",E,"Converts `self` into a new mutable owning reference that…",4,[[["f"]],[[R[678]],["sized"]]]],[11,R[559],E,"Tries to convert `self` into a new shared owning reference…",4,[[["f"]],[[R[3],[R[674]]],[R[674]]]]],[11,"try_map_mut",E,"Tries to convert `self` into a new mutable owning…",4,[[["f"]],[[R[678]],[R[3],[R[678]]]]]],[11,R[679],E,R[680],4,[[["f"]],[R[678]]]],[11,R[681],E,R[682],4,[[],[["box"],[R[678],["box"]]]]],[11,R[683],E,R[684],4,[[],[R[678]]]],[11,"owner",E,R[685],4,[[["self"]],["o"]]],[11,R[15],E,R[686],4,[[],["o"]]],[11,"new",E,"Create a new `OwningHandle` for a type that implements…",5,[[["o"]],["self"]]],[11,"new_mut",E,"Create a new mutable `OwningHandle` for a type that…",5,[[["o"]],["self"]]],[11,"new_with_fn",E,R[687],5,[[["o"],["f"]],["self"]]],[11,"try_new",E,R[687],5,[[["o"],["f"]],[R[3]]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[46],E,E,3,[[["self"]],[T]]],[11,R[47],E,E,3,[[["self"],[T]]]],[11,R[4],E,E,3,[[[U]],[R[3]]]],[11,R[5],E,E,3,[[],[R[3]]]],[11,R[7],E,E,3,[[["self"]],[T]]],[11,R[6],E,E,3,[[["self"]],[T]]],[11,R[8],E,E,3,[[["self"]],[R[9]]]],[11,"into",E,E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[4],E,E,4,[[[U]],[R[3]]]],[11,R[5],E,E,4,[[],[R[3]]]],[11,R[7],E,E,4,[[["self"]],[T]]],[11,R[6],E,E,4,[[["self"]],[T]]],[11,R[8],E,E,4,[[["self"]],[R[9]]]],[11,"into",E,E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[4],E,E,5,[[[U]],[R[3]]]],[11,R[5],E,E,5,[[],[R[3]]]],[11,R[7],E,E,5,[[["self"]],[T]]],[11,R[6],E,E,5,[[["self"]],[T]]],[11,R[8],E,E,5,[[["self"]],[R[9]]]],[11,"as_ref",E,E,3,[[["self"]],[T]]],[11,"as_ref",E,E,4,[[["self"]],[T]]],[11,"clone",E,E,3,[[["self"]],["self"]]],[11,R[77],E,E,3,[[["self"]],[[R[23],[R[50]]],[R[50]]]]],[11,R[77],E,E,4,[[["self"]],[[R[23],[R[50]]],[R[50]]]]],[11,"as_mut",E,E,4,[[["self"]],[T]]],[11,"cmp",E,E,3,[[["self"]],[R[50]]]],[11,"cmp",E,E,4,[[["self"]],[R[50]]]],[11,"eq",E,E,3,[[["self"]],["bool"]]],[11,"eq",E,E,4,[[["self"]],["bool"]]],[11,"from",E,E,3,[[["o"]],["self"]]],[11,"from",E,E,4,[[["o"]],["self"]]],[11,"from",E,E,3,[[[R[678]]],["self"]]],[11,"deref",E,E,5,[[["self"]]]],[11,"deref",E,E,3,[[["self"]],[T]]],[11,"deref",E,E,4,[[["self"]],[T]]],[11,R[17],E,E,5,[[["self"]]]],[11,R[17],E,E,4,[[["self"]],[T]]],[11,"hash",E,E,3,[[["self"],["h"]]]],[11,"hash",E,E,4,[[["self"],["h"]]]],[11,"fmt",E,E,3,[[["self"],[R[10]]],[["error"],[R[3],["error"]]]]],[11,"fmt",E,E,4,[[["self"],[R[10]]],[["error"],[R[3],["error"]]]]],[11,"fmt",E,E,6,[[["self"],[R[10]]],[["error"],[R[3],["error"]]]]],[11,R[6],E,E,3,[[["self"]],[T]]]],"p":[[8,R[688]],[8,"ToHandle"],[8,R[689]],[3,R[690]],[3,R[691]],[3,R[692]],[8,"Erased"]]};
searchIndex["page_size"]={"doc":"This crate provides an easy, fast, cross-platform way to…","i":[[5,"get","page_size","This function retrieves the system's memory page size.",N,[[],["usize"]]],[5,"get_granularity",E,"This function retrieves the system's memory allocation…",N,[[],["usize"]]]],"p":[]};
searchIndex["parking_lot"]={"doc":"This library provides implementations of `Mutex`,…","i":[[3,"Condvar","parking_lot","A Condition Variable",N,N],[3,R[2047],E,"A type indicating whether a timed wait on a condition…",N,N],[3,"Once",E,"A synchronization primitive which can be used to run a…",N,N],[3,"RawMutex",E,"Raw mutex type backed by the parking lot.",N,N],[3,R[608],E,"Raw reader-writer lock type backed by the parking lot.",N,N],[3,R[2048],E,"Implementation of the `GetThreadId` trait for…",N,N],[4,"OnceState",E,"Current state of a `Once`.",N,N],[13,"New",E,"A closure has not been executed yet",0,N],[13,"Poisoned",E,"A closure was executed but panicked.",0,N],[13,"InProgress",E,"A thread is currently executing a closure.",0,N],[13,"Done",E,"A closure has completed successfully.",0,N],[11,"timed_out",E,"Returns whether the wait was known to have timed out.",1,[[["self"]],["bool"]]],[11,"new",E,"Creates a new condition variable which is ready to be…",2,[[],["condvar"]]],[11,"notify_one",E,"Wakes up one blocked thread on this condvar.",2,[[["self"]],["bool"]]],[11,"notify_all",E,"Wakes up all blocked threads on this condvar.",2,[[["self"]],["usize"]]],[11,"wait",E,"Blocks the current thread until this condition variable…",2,[[["self"],[R[523]]]]],[11,"wait_until",E,R[2008],2,[[["self"],[R[523]],["instant"]],[R[2009]]]],[11,"wait_for",E,R[2008],2,[[["self"],[R[523]],[R[1205]]],[R[2009]]]],[11,"poisoned",E,"Returns whether the associated `Once` has been poisoned.",0,[[["self"]],["bool"]]],[11,"done",E,"Returns whether the associated `Once` has successfully…",0,[[["self"]],["bool"]]],[11,"new",E,"Creates a new `Once` value.",3,[[],["once"]]],[11,"state",E,"Returns the current state of this `Once`.",3,[[["self"]],["oncestate"]]],[11,"call_once",E,"Performs an initialization routine once and only once. The…",3,[[["self"],["f"]]]],[11,"call_once_force",E,"Performs the same function as `call_once` except ignores…",3,[[["self"],["f"]]]],[6,R[596],E,R[2010],N,N],[6,"Mutex",E,R[2011],N,N],[6,R[595],E,R[2012],N,N],[6,R[599],E,R[2013],N,N],[6,R[597],E,R[2014],N,N],[6,R[598],E,R[2015],N,N],[6,R[603],E,R[2016],N,N],[6,R[604],E,R[2017],N,N],[6,"RwLock",E,R[2018],N,N],[6,R[600],E,R[2019],N,N],[6,R[602],E,R[2020],N,N],[6,R[601],E,R[2021],N,N],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[4],E,E,2,[[[U]],[R[3]]]],[11,R[5],E,E,2,[[],[R[3]]]],[11,R[7],E,E,2,[[["self"]],[T]]],[11,R[6],E,E,2,[[["self"]],[T]]],[11,R[8],E,E,2,[[["self"]],[R[9]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[46],E,E,1,[[["self"]],[T]]],[11,R[47],E,E,1,[[["self"],[T]]]],[11,R[4],E,E,1,[[[U]],[R[3]]]],[11,R[5],E,E,1,[[],[R[3]]]],[11,R[7],E,E,1,[[["self"]],[T]]],[11,R[6],E,E,1,[[["self"]],[T]]],[11,R[8],E,E,1,[[["self"]],[R[9]]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[4],E,E,3,[[[U]],[R[3]]]],[11,R[5],E,E,3,[[],[R[3]]]],[11,R[7],E,E,3,[[["self"]],[T]]],[11,R[6],E,E,3,[[["self"]],[T]]],[11,R[8],E,E,3,[[["self"]],[R[9]]]],[11,"into",E,E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[4],E,E,4,[[[U]],[R[3]]]],[11,R[5],E,E,4,[[],[R[3]]]],[11,R[7],E,E,4,[[["self"]],[T]]],[11,R[6],E,E,4,[[["self"]],[T]]],[11,R[8],E,E,4,[[["self"]],[R[9]]]],[11,"into",E,E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[4],E,E,5,[[[U]],[R[3]]]],[11,R[5],E,E,5,[[],[R[3]]]],[11,R[7],E,E,5,[[["self"]],[T]]],[11,R[6],E,E,5,[[["self"]],[T]]],[11,R[8],E,E,5,[[["self"]],[R[9]]]],[11,"into",E,E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[4],E,E,6,[[[U]],[R[3]]]],[11,R[5],E,E,6,[[],[R[3]]]],[11,R[7],E,E,6,[[["self"]],[T]]],[11,R[6],E,E,6,[[["self"]],[T]]],[11,R[8],E,E,6,[[["self"]],[R[9]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[46],E,E,0,[[["self"]],[T]]],[11,R[47],E,E,0,[[["self"],[T]]]],[11,R[4],E,E,0,[[[U]],[R[3]]]],[11,R[5],E,E,0,[[],[R[3]]]],[11,R[7],E,E,0,[[["self"]],[T]]],[11,R[6],E,E,0,[[["self"]],[T]]],[11,R[8],E,E,0,[[["self"]],[R[9]]]],[11,R[83],E,E,2,[[],["condvar"]]],[11,R[83],E,E,3,[[],["once"]]],[11,"clone",E,E,1,[[["self"]],[R[2009]]]],[11,"clone",E,E,0,[[["self"]],["oncestate"]]],[11,"eq",E,E,1,[[["self"],[R[2009]]],["bool"]]],[11,"ne",E,E,1,[[["self"],[R[2009]]],["bool"]]],[11,"eq",E,E,0,[[["self"],["oncestate"]],["bool"]]],[11,"fmt",E,E,1,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,2,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,0,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,3,[[["self"],[R[10]]],[R[3]]]],[11,"lock",E,E,4,[[["self"]]]],[11,R[570],E,E,4,[[["self"]],["bool"]]],[11,"unlock",E,E,4,[[["self"]]]],[11,R[529],E,E,4,[[["self"]]]],[11,"bump",E,E,4,[[["self"]]]],[11,R[540],E,E,4,[[["self"],["instant"]],["bool"]]],[11,R[539],E,E,4,[[["self"],[R[1205]]],["bool"]]],[11,R[2022],E,E,6,[[["self"]],[R[2023]]]],[11,R[2024],E,E,5,[[["self"]]]],[11,R[2025],E,E,5,[[["self"]],["bool"]]],[11,R[2026],E,E,5,[[["self"]]]],[11,R[2027],E,E,5,[[["self"]]]],[11,R[2028],E,E,5,[[["self"]],["bool"]]],[11,R[2029],E,E,5,[[["self"]]]],[11,R[2030],E,E,5,[[["self"]]]],[11,R[2031],E,E,5,[[["self"]]]],[11,R[589],E,E,5,[[["self"]]]],[11,R[591],E,E,5,[[["self"]]]],[11,R[563],E,E,5,[[["self"]]]],[11,R[2032],E,E,5,[[["self"]],["bool"]]],[11,R[2033],E,E,5,[[["self"]],["bool"]]],[11,R[2034],E,E,5,[[["self"],[R[1205]]],["bool"]]],[11,R[2035],E,E,5,[[["self"],["instant"]],["bool"]]],[11,R[2036],E,E,5,[[["self"]]]],[11,R[2037],E,E,5,[[["self"]],["bool"]]],[11,R[2038],E,E,5,[[["self"]],["bool"]]],[11,R[2039],E,E,5,[[["self"]],["bool"]]],[11,R[2040],E,E,5,[[["self"]]]],[11,R[2041],E,E,5,[[["self"]],["bool"]]],[11,R[2042],E,E,5,[[["self"]]]],[11,"upgrade",E,E,5,[[["self"]]]],[11,R[579],E,E,5,[[["self"]],["bool"]]],[11,R[2043],E,E,5,[[["self"]]]],[11,R[593],E,E,5,[[["self"]]]],[11,R[2044],E,E,5,[[["self"]]]],[11,R[581],E,E,5,[[["self"]]]],[11,R[2045],E,E,5,[[["self"],["instant"]],["bool"]]],[11,R[2046],E,E,5,[[["self"],[R[1205]]],["bool"]]],[11,R[585],E,E,5,[[["self"],["instant"]],["bool"]]],[11,R[583],E,E,5,[[["self"],[R[1205]]],["bool"]]]],"p":[[4,"OnceState"],[3,R[2047]],[3,"Condvar"],[3,"Once"],[3,"RawMutex"],[3,R[608]],[3,R[2048]]]};
searchIndex["parking_lot_core"]={"doc":"This library exposes a low-level API for creating your own…","i":[[3,"ParkToken",R[1555],"A value associated with a parked thread which can be used…",N,N],[12,"0",E,E,0,N],[3,R[1559],E,"Result of an unpark operation.",N,N],[12,"unparked_threads",E,"The number of threads that were unparked.",1,N],[12,"requeued_threads",E,"The number of threads that were requeued.",1,N],[12,"have_more_threads",E,"Whether there are any threads remaining in the queue. This…",1,N],[12,"be_fair",E,"This is set to true on average once every 0.5ms for any…",1,N],[3,R[1560],E,"A value which is passed from an unparker to a parked thread.",N,N],[12,"0",E,E,2,N],[3,"SpinWait",E,"A counter used to perform exponential backoff in spin loops.",N,N],[4,"FilterOp",E,"Operation that `unpark_filter` should perform for each…",N,N],[13,"Unpark",E,"Unpark the thread and continue scanning the list of parked…",3,N],[13,"Skip",E,"Don't unpark the thread and continue scanning the list of…",3,N],[13,"Stop",E,"Don't unpark the thread and stop scanning the list of…",3,N],[4,"ParkResult",E,"Result of a park operation.",N,N],[13,"Unparked",E,"We were unparked by another thread with the given token.",4,N],[13,"Invalid",E,"The validation callback returned false.",4,N],[13,"TimedOut",E,"The timeout expired.",4,N],[4,"RequeueOp",E,"Operation that `unpark_requeue` should perform.",N,N],[13,"Abort",E,"Abort the operation without doing anything.",5,N],[13,"UnparkOneRequeueRest",E,"Unpark one thread and requeue the rest onto the target…",5,N],[13,"RequeueAll",E,"Requeue all threads onto the target queue.",5,N],[13,"UnparkOne",E,"Unpark one thread and leave the rest parked. No requeuing…",5,N],[13,"RequeueOne",E,"Requeue one thread and leave the rest parked on the…",5,N],[5,"park",E,"Parks the current thread in the queue associated with the…",N,[[["usize"],[R[1558]],[R[23],["instant"]],["instant"]],[R[1557]]]],[5,"unpark_all",E,"Unparks all threads in the queue associated with the given…",N,[[["usize"],[R[1556]]],["usize"]]],[5,"unpark_filter",E,"Unparks a number of threads from the front of the queue…",N,[[["usize"]],[R[1554]]]],[5,"unpark_one",E,"Unparks one thread from the queue associated with the…",N,[[["usize"]],[R[1554]]]],[5,"unpark_requeue",E,"Removes all threads from the queue associated with…",N,[[["usize"]],[R[1554]]]],[11,"is_unparked",E,"Returns true if we were unparked by another thread.",4,[[],["bool"]]],[11,"new",E,"Creates a new `SpinWait`.",6,[[],["self"]]],[11,"reset",E,"Resets a `SpinWait` to its initial state.",6,[[["self"]]]],[11,"spin",E,"Spins until the sleep threshold has been reached.",6,[[["self"]],["bool"]]],[11,"spin_no_yield",E,"Spins without yielding the thread to the OS.",6,[[["self"]]]],[0,"deadlock",E,"[Experimental] Deadlock detection",N,N],[5,"acquire_resource","parking_lot_core::deadlock","Acquire a resource identified by key in the deadlock…",N,[[["usize"]]]],[5,"release_resource",E,"Release a resource identified by key in the deadlock…",N,[[["usize"]]]],[17,"DEFAULT_PARK_TOKEN",R[1555],"A default park token to use.",N,N],[17,"DEFAULT_UNPARK_TOKEN",E,"A default unpark token to use.",N,N],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[46],E,E,0,[[["self"]],[T]]],[11,R[47],E,E,0,[[["self"],[T]]]],[11,R[4],E,E,0,[[[U]],[R[3]]]],[11,R[5],E,E,0,[[],[R[3]]]],[11,R[7],E,E,0,[[["self"]],[T]]],[11,R[6],E,E,0,[[["self"]],[T]]],[11,R[8],E,E,0,[[["self"]],[R[9]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[46],E,E,1,[[["self"]],[T]]],[11,R[47],E,E,1,[[["self"],[T]]]],[11,R[4],E,E,1,[[[U]],[R[3]]]],[11,R[5],E,E,1,[[],[R[3]]]],[11,R[7],E,E,1,[[["self"]],[T]]],[11,R[6],E,E,1,[[["self"]],[T]]],[11,R[8],E,E,1,[[["self"]],[R[9]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[46],E,E,2,[[["self"]],[T]]],[11,R[47],E,E,2,[[["self"],[T]]]],[11,R[4],E,E,2,[[[U]],[R[3]]]],[11,R[5],E,E,2,[[],[R[3]]]],[11,R[7],E,E,2,[[["self"]],[T]]],[11,R[6],E,E,2,[[["self"]],[T]]],[11,R[8],E,E,2,[[["self"]],[R[9]]]],[11,"into",E,E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[4],E,E,6,[[[U]],[R[3]]]],[11,R[5],E,E,6,[[],[R[3]]]],[11,R[7],E,E,6,[[["self"]],[T]]],[11,R[6],E,E,6,[[["self"]],[T]]],[11,R[8],E,E,6,[[["self"]],[R[9]]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[46],E,E,3,[[["self"]],[T]]],[11,R[47],E,E,3,[[["self"],[T]]]],[11,R[4],E,E,3,[[[U]],[R[3]]]],[11,R[5],E,E,3,[[],[R[3]]]],[11,R[7],E,E,3,[[["self"]],[T]]],[11,R[6],E,E,3,[[["self"]],[T]]],[11,R[8],E,E,3,[[["self"]],[R[9]]]],[11,"into",E,E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[46],E,E,4,[[["self"]],[T]]],[11,R[47],E,E,4,[[["self"],[T]]]],[11,R[4],E,E,4,[[[U]],[R[3]]]],[11,R[5],E,E,4,[[],[R[3]]]],[11,R[7],E,E,4,[[["self"]],[T]]],[11,R[6],E,E,4,[[["self"]],[T]]],[11,R[8],E,E,4,[[["self"]],[R[9]]]],[11,"into",E,E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[46],E,E,5,[[["self"]],[T]]],[11,R[47],E,E,5,[[["self"],[T]]]],[11,R[4],E,E,5,[[[U]],[R[3]]]],[11,R[5],E,E,5,[[],[R[3]]]],[11,R[7],E,E,5,[[["self"]],[T]]],[11,R[6],E,E,5,[[["self"]],[T]]],[11,R[8],E,E,5,[[["self"]],[R[9]]]],[11,R[83],E,E,1,[[],[R[1554]]]],[11,R[83],E,E,6,[[],["spinwait"]]],[11,"clone",E,E,4,[[["self"]],[R[1557]]]],[11,"clone",E,E,1,[[["self"]],[R[1554]]]],[11,"clone",E,E,5,[[["self"]],["requeueop"]]],[11,"clone",E,E,3,[[["self"]],["filterop"]]],[11,"clone",E,E,2,[[["self"]],[R[1556]]]],[11,"clone",E,E,0,[[["self"]],[R[1558]]]],[11,"eq",E,E,4,[[["self"],[R[1557]]],["bool"]]],[11,"ne",E,E,4,[[["self"],[R[1557]]],["bool"]]],[11,"eq",E,E,1,[[["self"],[R[1554]]],["bool"]]],[11,"ne",E,E,1,[[["self"],[R[1554]]],["bool"]]],[11,"eq",E,E,5,[[["self"],["requeueop"]],["bool"]]],[11,"eq",E,E,3,[[["self"],["filterop"]],["bool"]]],[11,"eq",E,E,2,[[["self"],[R[1556]]],["bool"]]],[11,"ne",E,E,2,[[["self"],[R[1556]]],["bool"]]],[11,"eq",E,E,0,[[["self"],[R[1558]]],["bool"]]],[11,"ne",E,E,0,[[["self"],[R[1558]]],["bool"]]],[11,"fmt",E,E,4,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,1,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,5,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,3,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,2,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,0,[[["self"],[R[10]]],[R[3]]]]],"p":[[3,"ParkToken"],[3,R[1559]],[3,R[1560]],[4,"FilterOp"],[4,"ParkResult"],[4,"RequeueOp"],[3,"SpinWait"]]};
searchIndex["plain"]={"doc":"A small Rust library that allows users to interpret arrays…","i":[[4,"Error","plain",E,N,N],[13,"TooShort",E,E,0,N],[13,"BadAlignment",E,E,0,N],[5,R[84],E,"Interpret data as bytes. Not safe for data with padding.",N,[[["s"]]]],[5,"as_mut_bytes",E,"Interpret data as mutable bytes. Reading is not safe for…",N,[[["s"]]]],[5,R[136],E,"Copies data from a byte slice into existing memory.…",N,[[[T]],[[R[3],["error"]],["error"]]]],[5,R[130],E,"Safely converts a byte slice to a reference.",N,[[],[[R[3],["error"]],["error"],[T]]]],[5,R[133],E,"See `from_bytes()`.",N,[[],[["error"],[R[3],["error"]],[T]]]],[5,"is_aligned",E,"Check if a byte slice is aligned suitably for type T.",N,[[],["bool"]]],[5,R[131],E,"Similar to `from_bytes()`, except that the output is a…",N,[[],[[R[3],["error"]],["error"]]]],[5,R[132],E,"Same as `slice_from_bytes()`, except that it takes…",N,[[["usize"]],[[R[3],["error"]],["error"]]]],[5,R[134],E,"See `slice_from_bytes()`.",N,[[],[[R[3],["error"]],["error"]]]],[5,R[135],E,"See `slice_from_bytes_len()`.",N,[[["usize"]],[[R[3],["error"]],["error"]]]],[8,"Plain",E,"A trait for plain data types that can be safely read from…",N,N],[11,R[130],E,E,1,[[],[["self"],[R[3],["error"]],["error"]]]],[11,R[131],E,E,1,[[],[[R[3],["error"]],["error"]]]],[11,R[132],E,E,1,[[["usize"]],[[R[3],["error"]],["error"]]]],[11,R[133],E,E,1,[[],[[R[3],["error"]],["self"],["error"]]]],[11,R[134],E,E,1,[[],[["error"],[R[3],["error"]]]]],[11,R[135],E,E,1,[[["usize"]],[["error"],[R[3],["error"]]]]],[11,R[136],E,E,1,[[["self"]],[[R[3],["error"]],["error"]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[4],E,E,0,[[[U]],[R[3]]]],[11,"into",E,E,0,[[],[U]]],[11,R[5],E,E,0,[[],[R[3]]]],[11,R[6],E,E,0,[[["self"]],[T]]],[11,R[7],E,E,0,[[["self"]],[T]]],[11,R[8],E,E,0,[[["self"]],[R[9]]]],[11,"eq",E,E,0,[[["self"],["error"]],["bool"]]],[11,"fmt",E,E,0,[[["self"],[R[10]]],[R[3]]]],[11,"clone",E,E,0,[[["self"]],["error"]]],[11,R[130],E,E,1,[[],[["self"],[R[3],["error"]],["error"]]]],[11,R[131],E,E,1,[[],[[R[3],["error"]],["error"]]]],[11,R[132],E,E,1,[[["usize"]],[[R[3],["error"]],["error"]]]],[11,R[133],E,E,1,[[],[[R[3],["error"]],["self"],["error"]]]],[11,R[134],E,E,1,[[],[["error"],[R[3],["error"]]]]],[11,R[135],E,E,1,[[["usize"]],[["error"],[R[3],["error"]]]]],[11,R[136],E,E,1,[[["self"]],[[R[3],["error"]],["error"]]]]],"p":[[4,"Error"],[8,"Plain"]]};
searchIndex["ppv_lite86"]={"doc":E,"i":[[0,"x86_64",R[140],E,N,N],[3,"YesS3",R[142],E,N,N],[3,"NoS3",E,E,N,N],[3,"YesS4",E,E,N,N],[3,"NoS4",E,E,N,N],[3,"YesA1",E,E,N,N],[3,"NoA1",E,E,N,N],[3,"YesA2",E,E,N,N],[3,"NoA2",E,E,N,N],[3,"YesNI",E,E,N,N],[3,"NoNI",E,E,N,N],[3,R[153],E,E,N,N],[3,R[154],E,E,N,N],[19,R[144],E,"Generic wrapper for unparameterized storage of any of the…",N,N],[19,R[145],E,E,N,N],[19,R[146],E,E,N,N],[6,"SSE2",E,E,N,N],[6,"SSSE3",E,E,N,N],[6,"SSE41",E,E,N,N],[6,"AVX",E,"AVX but not AVX2: only 128-bit integer operations, but use…",N,N],[6,"AVX2",E,E,N,N],[11,"new128",E,E,0,[[],["self"]]],[11,"split128",E,E,0,[[]]],[11,"new128",E,E,1,[[],["self"]]],[11,"split128",E,E,1,[[]]],[8,"AndNot",R[140],E,N,N],[16,"Output",E,E,2,N],[10,"andnot",E,E,2,[[]]],[8,"BSwap",E,E,N,N],[10,"bswap",E,E,3,[[],["self"]]],[8,"ArithOps",E,"Ops that depend on word size",N,N],[8,"BitOps0",E,"Ops that are independent of word size and endian",N,N],[8,"BitOps32",E,E,N,N],[8,"BitOps64",E,E,N,N],[8,"BitOps128",E,E,N,N],[8,R[147],E,E,N,N],[10,"rotate_each_word_right7",E,E,4,[[],["self"]]],[10,"rotate_each_word_right8",E,E,4,[[],["self"]]],[10,"rotate_each_word_right11",E,E,4,[[],["self"]]],[10,"rotate_each_word_right12",E,E,4,[[],["self"]]],[10,"rotate_each_word_right16",E,E,4,[[],["self"]]],[10,"rotate_each_word_right20",E,E,4,[[],["self"]]],[10,"rotate_each_word_right24",E,E,4,[[],["self"]]],[10,"rotate_each_word_right25",E,E,4,[[],["self"]]],[8,R[148],E,E,N,N],[10,"rotate_each_word_right32",E,E,5,[[],["self"]]],[8,"RotateEachWord128",E,E,N,N],[8,R[149],E,E,N,N],[10,"unsafe_from",E,E,6,[[[T]],["self"]]],[8,"Vec2",E,"A vector composed of two elements, which may be words or…",N,N],[10,"extract",E,E,7,[[["u32"]],["w"]]],[10,"insert",E,E,7,[[["w"],["u32"]],["self"]]],[8,"Vec4",E,"A vector composed of four elements, which may be words or…",N,N],[10,"extract",E,E,8,[[["u32"]],["w"]]],[10,"insert",E,E,8,[[["w"],["u32"]],["self"]]],[8,"Words4",E,"A vector composed of four words; depending on their size,…",N,N],[10,"shuffle1230",E,E,9,[[],["self"]]],[10,"shuffle2301",E,E,9,[[],["self"]]],[10,"shuffle3012",E,E,9,[[],["self"]]],[8,R[150],E,"A vector composed one or more lanes each composed of four…",N,N],[10,"shuffle_lane_words1230",E,E,10,[[],["self"]]],[10,"shuffle_lane_words2301",E,E,10,[[],["self"]]],[10,"shuffle_lane_words3012",E,E,10,[[],["self"]]],[8,"Swap64",E,"Exchange neigboring ranges of bits of the specified size",N,N],[10,"swap1",E,E,11,[[],["self"]]],[10,"swap2",E,E,11,[[],["self"]]],[10,"swap4",E,E,11,[[],["self"]]],[10,"swap8",E,E,11,[[],["self"]]],[10,"swap16",E,E,11,[[],["self"]]],[10,"swap32",E,E,11,[[],["self"]]],[10,"swap64",E,E,11,[[],["self"]]],[8,"u32x4",E,E,N,N],[8,"u64x2",E,E,N,N],[8,"u128x1",E,E,N,N],[8,"u32x4x2",E,E,N,N],[8,"u64x2x2",E,E,N,N],[8,"u64x4",E,E,N,N],[8,"u128x2",E,E,N,N],[8,"u32x4x4",E,E,N,N],[8,"u64x2x4",E,E,N,N],[8,"u128x4",E,E,N,N],[8,R[151],E,"A vector composed of multiple 128-bit lanes.",N,N],[10,"to_lanes",E,"Split a multi-lane vector into single-lane vectors.",12,[[],["lanes"]]],[10,"from_lanes",E,"Build a multi-lane vector from individual lanes.",12,[[["lanes"]],["self"]]],[8,"VZip",E,"Combine single vectors into a multi-lane vector.",N,N],[10,"vzip",E,E,13,[[],["v"]]],[8,"Machine",E,E,N,N],[16,"u32x4",E,E,14,N],[16,"u64x2",E,E,14,N],[16,"u128x1",E,E,14,N],[16,"u32x4x2",E,E,14,N],[16,"u64x2x2",E,E,14,N],[16,"u64x4",E,E,14,N],[16,"u128x2",E,E,14,N],[16,"u32x4x4",E,E,14,N],[16,"u64x2x4",E,E,14,N],[16,"u128x4",E,E,14,N],[11,"unpack",E,E,14,[[["s"]],["store"]]],[11,"vec",E,E,14,[[["a"]],["v"]]],[11,"read_le",E,E,14,[[],["v"]]],[11,"read_be",E,E,14,[[],["v"]]],[10,R[143],E,E,14,[[],["self"]]],[8,"Store",E,E,N,N],[10,"unpack",E,E,15,[[["s"]],["self"]]],[8,R[152],E,E,N,N],[10,"unsafe_read_le",E,E,16,[[],["self"]]],[10,"unsafe_read_be",E,E,16,[[],["self"]]],[10,"write_le",E,E,16,[[]]],[10,"write_be",E,E,16,[[]]],[14,"dispatch",E,"Generate the full set of optimized implementations to take…",N,N],[14,"dispatch_light128",E,R[141],N,N],[14,"dispatch_light256",E,R[141],N,N],[11,"from",R[142],E,17,[[[T]],[T]]],[11,R[4],E,E,17,[[[U]],[R[3]]]],[11,"into",E,E,17,[[],[U]]],[11,R[5],E,E,17,[[],[R[3]]]],[11,R[6],E,E,17,[[["self"]],[T]]],[11,R[7],E,E,17,[[["self"]],[T]]],[11,R[8],E,E,17,[[["self"]],[R[9]]]],[11,"from",E,E,18,[[[T]],[T]]],[11,R[4],E,E,18,[[[U]],[R[3]]]],[11,"into",E,E,18,[[],[U]]],[11,R[5],E,E,18,[[],[R[3]]]],[11,R[6],E,E,18,[[["self"]],[T]]],[11,R[7],E,E,18,[[["self"]],[T]]],[11,R[8],E,E,18,[[["self"]],[R[9]]]],[11,"from",E,E,19,[[[T]],[T]]],[11,R[4],E,E,19,[[[U]],[R[3]]]],[11,"into",E,E,19,[[],[U]]],[11,R[5],E,E,19,[[],[R[3]]]],[11,R[6],E,E,19,[[["self"]],[T]]],[11,R[7],E,E,19,[[["self"]],[T]]],[11,R[8],E,E,19,[[["self"]],[R[9]]]],[11,"from",E,E,20,[[[T]],[T]]],[11,R[4],E,E,20,[[[U]],[R[3]]]],[11,"into",E,E,20,[[],[U]]],[11,R[5],E,E,20,[[],[R[3]]]],[11,R[6],E,E,20,[[["self"]],[T]]],[11,R[7],E,E,20,[[["self"]],[T]]],[11,R[8],E,E,20,[[["self"]],[R[9]]]],[11,"from",E,E,21,[[[T]],[T]]],[11,R[4],E,E,21,[[[U]],[R[3]]]],[11,"into",E,E,21,[[],[U]]],[11,R[5],E,E,21,[[],[R[3]]]],[11,R[6],E,E,21,[[["self"]],[T]]],[11,R[7],E,E,21,[[["self"]],[T]]],[11,R[8],E,E,21,[[["self"]],[R[9]]]],[11,"from",E,E,22,[[[T]],[T]]],[11,R[4],E,E,22,[[[U]],[R[3]]]],[11,"into",E,E,22,[[],[U]]],[11,R[5],E,E,22,[[],[R[3]]]],[11,R[6],E,E,22,[[["self"]],[T]]],[11,R[7],E,E,22,[[["self"]],[T]]],[11,R[8],E,E,22,[[["self"]],[R[9]]]],[11,"from",E,E,23,[[[T]],[T]]],[11,R[4],E,E,23,[[[U]],[R[3]]]],[11,"into",E,E,23,[[],[U]]],[11,R[5],E,E,23,[[],[R[3]]]],[11,R[6],E,E,23,[[["self"]],[T]]],[11,R[7],E,E,23,[[["self"]],[T]]],[11,R[8],E,E,23,[[["self"]],[R[9]]]],[11,"from",E,E,24,[[[T]],[T]]],[11,R[4],E,E,24,[[[U]],[R[3]]]],[11,"into",E,E,24,[[],[U]]],[11,R[5],E,E,24,[[],[R[3]]]],[11,R[6],E,E,24,[[["self"]],[T]]],[11,R[7],E,E,24,[[["self"]],[T]]],[11,R[8],E,E,24,[[["self"]],[R[9]]]],[11,"from",E,E,25,[[[T]],[T]]],[11,R[4],E,E,25,[[[U]],[R[3]]]],[11,"into",E,E,25,[[],[U]]],[11,R[5],E,E,25,[[],[R[3]]]],[11,R[6],E,E,25,[[["self"]],[T]]],[11,R[7],E,E,25,[[["self"]],[T]]],[11,R[8],E,E,25,[[["self"]],[R[9]]]],[11,"from",E,E,26,[[[T]],[T]]],[11,R[4],E,E,26,[[[U]],[R[3]]]],[11,"into",E,E,26,[[],[U]]],[11,R[5],E,E,26,[[],[R[3]]]],[11,R[6],E,E,26,[[["self"]],[T]]],[11,R[7],E,E,26,[[["self"]],[T]]],[11,R[8],E,E,26,[[["self"]],[R[9]]]],[11,"from",E,E,27,[[[T]],[T]]],[11,R[4],E,E,27,[[[U]],[R[3]]]],[11,"into",E,E,27,[[],[U]]],[11,R[5],E,E,27,[[],[R[3]]]],[11,R[6],E,E,27,[[["self"]],[T]]],[11,R[7],E,E,27,[[["self"]],[T]]],[11,R[8],E,E,27,[[["self"]],[R[9]]]],[11,"from",E,E,28,[[[T]],[T]]],[11,R[4],E,E,28,[[[U]],[R[3]]]],[11,"into",E,E,28,[[],[U]]],[11,R[5],E,E,28,[[],[R[3]]]],[11,R[6],E,E,28,[[["self"]],[T]]],[11,R[7],E,E,28,[[["self"]],[T]]],[11,R[8],E,E,28,[[["self"]],[R[9]]]],[11,"from",E,E,29,[[[T]],[T]]],[11,R[4],E,E,29,[[[U]],[R[3]]]],[11,"into",E,E,29,[[],[U]]],[11,R[5],E,E,29,[[],[R[3]]]],[11,R[6],E,E,29,[[["self"]],[T]]],[11,R[7],E,E,29,[[["self"]],[T]]],[11,R[8],E,E,29,[[["self"]],[R[9]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[4],E,E,0,[[[U]],[R[3]]]],[11,"into",E,E,0,[[],[U]]],[11,R[5],E,E,0,[[],[R[3]]]],[11,R[6],E,E,0,[[["self"]],[T]]],[11,R[7],E,E,0,[[["self"]],[T]]],[11,R[8],E,E,0,[[["self"]],[R[9]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[4],E,E,1,[[[U]],[R[3]]]],[11,"into",E,E,1,[[],[U]]],[11,R[5],E,E,1,[[],[R[3]]]],[11,R[6],E,E,1,[[["self"]],[T]]],[11,R[7],E,E,1,[[["self"]],[T]]],[11,R[8],E,E,1,[[["self"]],[R[9]]]],[11,R[143],E,E,27,[[],["self"]]],[11,R[143],E,E,28,[[],["self"]]],[11,"unpack",E,E,29,[[[R[144]]],["self"]]],[11,"into",E,E,29,[[]]],[11,"into",E,E,29,[[]]],[11,"into",E,E,29,[[]]],[11,"into",E,E,0,[[]]],[11,"into",E,E,0,[[]]],[11,"into",E,E,0,[[]]],[11,"into",E,E,1,[[]]],[11,"into",E,E,1,[[]]],[11,"into",E,E,1,[[]]],[11,"clone",E,E,17,[[["self"]],["yess3"]]],[11,"clone",E,E,18,[[["self"]],["nos3"]]],[11,"clone",E,E,19,[[["self"]],["yess4"]]],[11,"clone",E,E,20,[[["self"]],["nos4"]]],[11,"clone",E,E,21,[[["self"]],["yesa1"]]],[11,"clone",E,E,22,[[["self"]],["noa1"]]],[11,"clone",E,E,23,[[["self"]],["yesa2"]]],[11,"clone",E,E,24,[[["self"]],["noa2"]]],[11,"clone",E,E,25,[[["self"]],["yesni"]]],[11,"clone",E,E,26,[[["self"]],["noni"]]],[11,"clone",E,E,27,[[["self"]],["ssemachine"]]],[11,"clone",E,E,28,[[["self"]],["avx2machine"]]],[11,"clone",E,E,29,[[["self"]],[R[144]]]],[11,"clone",E,E,0,[[["self"]],[R[145]]]],[11,"clone",E,E,1,[[["self"]],[R[146]]]],[11,R[83],E,E,29,[[],["self"]]],[11,R[83],E,E,0,[[],["self"]]],[11,R[83],E,E,1,[[],["self"]]],[11,"unpack",R[140],E,14,[[["s"]],["store"]]],[11,"vec",E,E,14,[[["a"]],["v"]]],[11,"read_le",E,E,14,[[],["v"]]],[11,"read_be",E,E,14,[[],["v"]]]],"p":[[19,R[145]],[19,R[146]],[8,"AndNot"],[8,"BSwap"],[8,R[147]],[8,R[148]],[8,R[149]],[8,"Vec2"],[8,"Vec4"],[8,"Words4"],[8,R[150]],[8,"Swap64"],[8,R[151]],[8,"VZip"],[8,"Machine"],[8,"Store"],[8,R[152]],[3,"YesS3"],[3,"NoS3"],[3,"YesS4"],[3,"NoS4"],[3,"YesA1"],[3,"NoA1"],[3,"YesA2"],[3,"NoA2"],[3,"YesNI"],[3,"NoNI"],[3,R[153]],[3,R[154]],[19,R[144]]]};
searchIndex["proc_macro2"]={"doc":"A wrapper around the procedural macro API of the…","i":[[3,R[778],R[767],"An abstract stream of tokens, or more concretely a…",N,N],[3,"LexError",E,"Error returned from `TokenStream::from_str`.",N,N],[3,"Span",E,"A region of source code, along with macro expansion…",N,N],[3,"Group",E,"A delimited token stream.",N,N],[3,"Punct",E,"An `Punct` is an single punctuation character like `+`,…",N,N],[3,"Ident",E,R[2068],N,N],[3,R[389],E,"A literal string (`\"hello\"`), byte string (`b\"hello\"`),…",N,N],[4,R[776],E,"A single token or a delimited sequence of token trees…",N,N],[13,"Group",E,"A token stream surrounded by bracket delimiters.",0,N],[13,"Ident",E,"An identifier.",0,N],[13,"Punct",E,"A single punctuation character (`+`, `,`, `$`, etc.).",0,N],[13,R[389],E,"A literal character (`'a'`), string (`\"hello\"`), number…",0,N],[4,R[777],E,"Describes how a sequence of token trees is delimited.",N,N],[13,"Parenthesis",E,"`( ... )`",1,N],[13,"Brace",E,"`{ ... }`",1,N],[13,"Bracket",E,"`[ ... ]`",1,N],[13,"None",E,"`Ø ... Ø`",1,N],[4,"Spacing",E,"Whether an `Punct` is followed immediately by another…",N,N],[13,"Alone",E,"E.g. `+` is `Alone` in `+ =`, `+ident` or `+()`.",2,N],[13,"Joint",E,"E.g. `+` is `Joint` in `+=` or `'#`.",2,N],[0,R[2239],E,"Public implementation details for the `TokenStream` type,…",N,N],[3,R[306],R[773],"An iterator over `TokenStream`'s `TokenTree`s.",N,N],[11,"new",R[767],"Returns an empty `TokenStream` containing no token trees.",3,[[],[R[768]]]],[11,"empty",E,E,3,[[],[R[768]]]],[11,R[25],E,"Checks if this `TokenStream` is empty.",3,[[["self"]],["bool"]]],[11,"call_site",E,"The span of the invocation of the current procedural macro.",4,[[],["span"]]],[11,"unwrap",E,"Convert `proc_macro2::Span` to `proc_macro::Span`.",4,[[],["span"]]],[11,"span",E,"Returns the span of this tree, delegating to the `span`…",0,[[["self"]],["span"]]],[11,R[770],E,"Configures the span for only this token.",0,[[["self"],["span"]]]],[11,"new",E,"Creates a new `Group` with the given delimiter and token…",5,[[[R[769]],[R[768]]],["group"]]],[11,R[769],E,"Returns the delimiter of this `Group`",5,[[["self"]],[R[769]]]],[11,"stream",E,"Returns the `TokenStream` of tokens that are delimited in…",5,[[["self"]],[R[768]]]],[11,"span",E,"Returns the span for the delimiters of this token stream,…",5,[[["self"]],["span"]]],[11,R[770],E,"Configures the span for this `Group`'s delimiters, but not…",5,[[["self"],["span"]]]],[11,"new",E,"Creates a new `Punct` from the given character and spacing.",6,[[["char"],["spacing"]],["punct"]]],[11,"as_char",E,"Returns the value of this punctuation character as `char`.",6,[[["self"]],["char"]]],[11,"spacing",E,"Returns the spacing of this punctuation character,…",6,[[["self"]],["spacing"]]],[11,"span",E,"Returns the span for this punctuation character.",6,[[["self"]],["span"]]],[11,R[770],E,"Configure the span for this punctuation character.",6,[[["self"],["span"]]]],[11,"new",E,R[2756],7,[[["str"],["span"]],["ident"]]],[11,"span",E,R[2757],7,[[["self"]],["span"]]],[11,R[770],E,R[2758],7,[[["self"],["span"]]]],[11,"u8_suffixed",E,R[771],8,[[["u8"]],[R[404]]]],[11,"u16_suffixed",E,R[771],8,[[["u16"]],[R[404]]]],[11,"u32_suffixed",E,R[771],8,[[["u32"]],[R[404]]]],[11,"u64_suffixed",E,R[771],8,[[["u64"]],[R[404]]]],[11,"usize_suffixed",E,R[771],8,[[["usize"]],[R[404]]]],[11,"i8_suffixed",E,R[771],8,[[["i8"]],[R[404]]]],[11,"i16_suffixed",E,R[771],8,[[["i16"]],[R[404]]]],[11,"i32_suffixed",E,R[771],8,[[["i32"]],[R[404]]]],[11,"i64_suffixed",E,R[771],8,[[["i64"]],[R[404]]]],[11,"isize_suffixed",E,R[771],8,[[["isize"]],[R[404]]]],[11,"u128_suffixed",E,R[771],8,[[["u128"]],[R[404]]]],[11,"i128_suffixed",E,R[771],8,[[["i128"]],[R[404]]]],[11,"u8_unsuffixed",E,R[772],8,[[["u8"]],[R[404]]]],[11,"u16_unsuffixed",E,R[772],8,[[["u16"]],[R[404]]]],[11,"u32_unsuffixed",E,R[772],8,[[["u32"]],[R[404]]]],[11,"u64_unsuffixed",E,R[772],8,[[["u64"]],[R[404]]]],[11,"usize_unsuffixed",E,R[772],8,[[["usize"]],[R[404]]]],[11,"i8_unsuffixed",E,R[772],8,[[["i8"]],[R[404]]]],[11,"i16_unsuffixed",E,R[772],8,[[["i16"]],[R[404]]]],[11,"i32_unsuffixed",E,R[772],8,[[["i32"]],[R[404]]]],[11,"i64_unsuffixed",E,R[772],8,[[["i64"]],[R[404]]]],[11,"isize_unsuffixed",E,R[772],8,[[["isize"]],[R[404]]]],[11,"u128_unsuffixed",E,R[772],8,[[["u128"]],[R[404]]]],[11,"i128_unsuffixed",E,R[772],8,[[["i128"]],[R[404]]]],[11,"f64_unsuffixed",E,E,8,[[["f64"]],[R[404]]]],[11,"f64_suffixed",E,E,8,[[["f64"]],[R[404]]]],[11,"f32_unsuffixed",E,R[831],8,[[["f32"]],[R[404]]]],[11,"f32_suffixed",E,E,8,[[["f32"]],[R[404]]]],[11,"string",E,E,8,[[["str"]],[R[404]]]],[11,R[999],E,E,8,[[["char"]],[R[404]]]],[11,R[997],E,E,8,[[],[R[404]]]],[11,"span",E,E,8,[[["self"]],["span"]]],[11,R[770],E,E,8,[[["self"],["span"]]]],[11,"into",E,E,3,[[],[U]]],[11,R[45],E,E,3,[[],["i"]]],[11,R[113],E,E,3,[[["self"]],["string"]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[46],E,E,3,[[["self"]],[T]]],[11,R[47],E,E,3,[[["self"],[T]]]],[11,R[4],E,E,3,[[[U]],[R[3]]]],[11,R[5],E,E,3,[[],[R[3]]]],[11,R[7],E,E,3,[[["self"]],[T]]],[11,R[6],E,E,3,[[["self"]],[T]]],[11,R[8],E,E,3,[[["self"]],[R[9]]]],[11,"into",E,E,9,[[],[U]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[4],E,E,9,[[[U]],[R[3]]]],[11,R[5],E,E,9,[[],[R[3]]]],[11,R[7],E,E,9,[[["self"]],[T]]],[11,R[6],E,E,9,[[["self"]],[T]]],[11,R[8],E,E,9,[[["self"]],[R[9]]]],[11,"into",E,E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[46],E,E,4,[[["self"]],[T]]],[11,R[47],E,E,4,[[["self"],[T]]]],[11,R[4],E,E,4,[[[U]],[R[3]]]],[11,R[5],E,E,4,[[],[R[3]]]],[11,R[7],E,E,4,[[["self"]],[T]]],[11,R[6],E,E,4,[[["self"]],[T]]],[11,R[8],E,E,4,[[["self"]],[R[9]]]],[11,"into",E,E,5,[[],[U]]],[11,R[113],E,E,5,[[["self"]],["string"]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[46],E,E,5,[[["self"]],[T]]],[11,R[47],E,E,5,[[["self"],[T]]]],[11,R[4],E,E,5,[[[U]],[R[3]]]],[11,R[5],E,E,5,[[],[R[3]]]],[11,R[7],E,E,5,[[["self"]],[T]]],[11,R[6],E,E,5,[[["self"]],[T]]],[11,R[8],E,E,5,[[["self"]],[R[9]]]],[11,"into",E,E,6,[[],[U]]],[11,R[113],E,E,6,[[["self"]],["string"]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[46],E,E,6,[[["self"]],[T]]],[11,R[47],E,E,6,[[["self"],[T]]]],[11,R[4],E,E,6,[[[U]],[R[3]]]],[11,R[5],E,E,6,[[],[R[3]]]],[11,R[7],E,E,6,[[["self"]],[T]]],[11,R[6],E,E,6,[[["self"]],[T]]],[11,R[8],E,E,6,[[["self"]],[R[9]]]],[11,"into",E,E,7,[[],[U]]],[11,R[113],E,E,7,[[["self"]],["string"]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[46],E,E,7,[[["self"]],[T]]],[11,R[47],E,E,7,[[["self"],[T]]]],[11,R[4],E,E,7,[[[U]],[R[3]]]],[11,R[5],E,E,7,[[],[R[3]]]],[11,R[7],E,E,7,[[["self"]],[T]]],[11,R[6],E,E,7,[[["self"]],[T]]],[11,R[8],E,E,7,[[["self"]],[R[9]]]],[11,"into",E,E,8,[[],[U]]],[11,R[113],E,E,8,[[["self"]],["string"]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[46],E,E,8,[[["self"]],[T]]],[11,R[47],E,E,8,[[["self"],[T]]]],[11,R[4],E,E,8,[[[U]],[R[3]]]],[11,R[5],E,E,8,[[],[R[3]]]],[11,R[7],E,E,8,[[["self"]],[T]]],[11,R[6],E,E,8,[[["self"]],[T]]],[11,R[8],E,E,8,[[["self"]],[R[9]]]],[11,"into",E,E,0,[[],[U]]],[11,R[113],E,E,0,[[["self"]],["string"]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[46],E,E,0,[[["self"]],[T]]],[11,R[47],E,E,0,[[["self"],[T]]]],[11,R[4],E,E,0,[[[U]],[R[3]]]],[11,R[5],E,E,0,[[],[R[3]]]],[11,R[7],E,E,0,[[["self"]],[T]]],[11,R[6],E,E,0,[[["self"]],[T]]],[11,R[8],E,E,0,[[["self"]],[R[9]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[46],E,E,1,[[["self"]],[T]]],[11,R[47],E,E,1,[[["self"],[T]]]],[11,R[4],E,E,1,[[[U]],[R[3]]]],[11,R[5],E,E,1,[[],[R[3]]]],[11,R[7],E,E,1,[[["self"]],[T]]],[11,R[6],E,E,1,[[["self"]],[T]]],[11,R[8],E,E,1,[[["self"]],[R[9]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[46],E,E,2,[[["self"]],[T]]],[11,R[47],E,E,2,[[["self"],[T]]]],[11,R[4],E,E,2,[[[U]],[R[3]]]],[11,R[5],E,E,2,[[],[R[3]]]],[11,R[7],E,E,2,[[["self"]],[T]]],[11,R[6],E,E,2,[[["self"]],[T]]],[11,R[8],E,E,2,[[["self"]],[R[9]]]],[11,"into",R[773],E,10,[[],[U]]],[11,R[45],E,E,10,[[],["i"]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[46],E,E,10,[[["self"]],[T]]],[11,R[47],E,E,10,[[["self"],[T]]]],[11,R[4],E,E,10,[[[U]],[R[3]]]],[11,R[5],E,E,10,[[],[R[3]]]],[11,R[7],E,E,10,[[["self"]],[T]]],[11,R[6],E,E,10,[[["self"]],[T]]],[11,R[8],E,E,10,[[["self"]],[R[9]]]],[11,R[83],R[767],E,3,[[],["self"]]],[11,"extend",E,E,3,[[["self"],[R[82]]]]],[11,"extend",E,E,3,[[["self"],[R[82]]]]],[11,"clone",E,E,3,[[["self"]],[R[768]]]],[11,"clone",E,E,4,[[["self"]],["span"]]],[11,"clone",E,E,0,[[["self"]],[R[774]]]],[11,"clone",E,E,5,[[["self"]],["group"]]],[11,"clone",E,E,1,[[["self"]],[R[769]]]],[11,"clone",E,E,6,[[["self"]],["punct"]]],[11,"clone",E,E,2,[[["self"]],["spacing"]]],[11,"clone",E,E,7,[[["self"]],["ident"]]],[11,"clone",E,E,8,[[["self"]],[R[404]]]],[11,"clone",R[773],E,10,[[["self"]],[R[766]]]],[11,R[77],R[767],E,7,[[["self"],["ident"]],[[R[23],[R[50]]],[R[50]]]]],[11,"cmp",E,E,7,[[["self"],["ident"]],[R[50]]]],[11,"eq",E,E,1,[[["self"],[R[769]]],["bool"]]],[11,"eq",E,E,2,[[["self"],["spacing"]],["bool"]]],[11,"eq",E,E,7,[[["self"],["ident"]],["bool"]]],[11,"eq",E,E,7,[[["self"],[T]],["bool"]]],[11,R[45],E,E,3,[[],[R[766]]]],[11,"from",E,E,4,[[["span"]],["span"]]],[11,"from",E,E,3,[[[R[768]]],[R[768]]]],[11,"from",E,E,0,[[["group"]],[R[774]]]],[11,"from",E,E,0,[[["ident"]],[R[774]]]],[11,"from",E,E,0,[[["punct"]],[R[774]]]],[11,"from",E,E,0,[[[R[404]]],[R[774]]]],[11,"next",R[773],E,10,[[["self"]],[[R[23],[R[774]]],[R[774]]]]],[11,"hash",R[767],E,7,[[["self"],["h"]]]],[11,"fmt",E,E,3,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,9,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,4,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,0,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,1,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,5,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,2,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,6,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,7,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,8,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[773],E,10,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[767],E,3,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,0,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,5,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,6,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,7,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,8,[[["self"],[R[10]]],[R[3]]]],[11,R[775],E,E,3,[[["str"]],[[R[768]],[R[3],[R[768],"lexerror"]],["lexerror"]]]],[11,R[81],E,E,3,[[[R[82]]],["self"]]],[11,R[81],E,E,3,[[[R[82]]],["self"]]]],"p":[[4,R[776]],[4,R[777]],[4,"Spacing"],[3,R[778]],[3,"Span"],[3,"Group"],[3,"Punct"],[3,"Ident"],[3,R[389]],[3,"LexError"],[3,R[306]]]};
searchIndex["quote"]={"doc":"This crate provides the [`quote!`] macro for turning Rust…","i":[[8,R[1125],"quote","TokenStream extension trait with methods for appending…",N,N],[10,"append",E,R[112],0,[[["self"],[U]]]],[10,"append_all",E,R[112],0,[[["self"],["i"]]]],[10,"append_separated",E,R[112],0,[[["self"],["i"],[U]]]],[10,"append_terminated",E,R[112],0,[[["self"],["i"],[U]]]],[8,"ToTokens",E,"Types that can be interpolated inside a [`quote!`]…",N,N],[10,R[114],E,"Write `self` to the given `TokenStream`.",1,[[["self"],[R[768]]]]],[11,R[1123],E,R[1124],1,[[],[R[768]]]],[14,"quote",E,"The whole point.",N,N],[14,"quote_spanned",E,"Same as `quote!`, but applies a given span to all tokens…",N,N],[11,R[1123],E,R[1124],1,[[],[R[768]]]]],"p":[[8,R[1125]],[8,"ToTokens"]]};
searchIndex["rand"]={"doc":"Utilities for random number generation","i":[[8,"RngCore","rand",R[2889],N,N],[10,R[1178],E,R[2890],0,[[["self"]],["u32"]]],[10,R[1179],E,R[2891],0,[[["self"]],["u64"]]],[10,R[1176],E,R[1719],0,[[["self"]]]],[10,R[1721],E,R[2892],0,[[["self"]],[[R[3],["error"]],["error"]]]],[8,"CryptoRng",E,R[2893],N,N],[8,R[1194],E,R[2894],N,N],[16,"Seed",E,R[2895],1,N],[10,R[1181],E,R[2896],1,[[],["self"]]],[11,R[1722],E,R[2897],1,[[["u64"]],["self"]]],[11,"from_rng",E,R[2898],1,[[["r"]],[[R[3],["error"]],["error"]]]],[11,R[2899],E,R[2900],1,[[],["self"]]],[3,"Error",E,R[2884],N,N],[5,"thread_rng",E,"Retrieve the lazily-initialized thread-local random number…",N,[[],["threadrng"]]],[5,"random",E,"Generates a random value using the thread-local random…",N,[[],[T]]],[0,"distributions",E,"Generating random samples from probability distributions",N,N],[3,R[2877],R[1160],"Sample a `char`, uniformly distributed over ASCII letters…",N,N],[3,"Uniform",E,R[2844],N,N],[3,R[2878],E,R[2843],N,N],[3,"Open01",E,R[2843],N,N],[3,"Bernoulli",E,"The Bernoulli distribution.",N,N],[3,R[2872],E,"Samples uniformly from the surface of the unit sphere in…",N,N],[3,"UnitCircle",E,"Samples uniformly from the edge of the unit circle in two…",N,N],[3,"Gamma",E,"The Gamma distribution `Gamma(shape, scale)` distribution.",N,N],[3,"ChiSquared",E,"The chi-squared distribution `χ²(k)`, where `k` is the…",N,N],[3,"FisherF",E,"The Fisher F distribution `F(m, n)`.",N,N],[3,"StudentT",E,"The Student t distribution, `t(nu)`, where `nu` is the…",N,N],[3,"Beta",E,"The Beta distribution with shape parameters `alpha` and…",N,N],[3,"Normal",E,"The normal distribution `N(mean, std_dev**2)`.",N,N],[3,"LogNormal",E,"The log-normal distribution `ln N(mean, std_dev**2)`.",N,N],[3,R[1188],E,"Samples floating-point numbers according to the normal…",N,N],[3,"Exp",E,"The exponential distribution `Exp(lambda)`.",N,N],[3,"Exp1",E,"Samples floating-point numbers according to the…",N,N],[3,"Pareto",E,"Samples floating-point numbers according to the Pareto…",N,N],[3,"Poisson",E,"The Poisson distribution `Poisson(lambda)`.",N,N],[3,"Binomial",E,"The binomial distribution `Binomial(n, p)`.",N,N],[3,"Cauchy",E,"The Cauchy distribution `Cauchy(median, scale)`.",N,N],[3,"Dirichlet",E,"The dirichelet distribution `Dirichlet(alpha)`.",N,N],[3,"Triangular",E,"The triangular distribution.",N,N],[3,"Weibull",E,"Samples floating-point numbers according to the Weibull…",N,N],[3,"DistIter",E,"An iterator that generates random values of `T` with…",N,N],[3,"Standard",E,"A generic random value distribution, implemented for many…",N,N],[4,R[2867],E,"Error type returned from `Bernoulli::new`.",N,N],[13,"InvalidProbability",E,"`p < 0` or `p > 1`.",2,N],[0,"uniform",E,"A distribution uniformly sampling numbers within a given…",N,N],[3,"Uniform",R[2858],R[2844],N,N],[3,"UniformInt",E,"The back-end implementing [`UniformSampler`] for integer…",N,N],[3,R[2879],E,"The back-end implementing [`UniformSampler`] for…",N,N],[3,R[2880],E,"The back-end implementing [`UniformSampler`] for `Duration`.",N,N],[8,R[2868],E,"Helper trait for creating objects using the correct…",N,N],[16,"Sampler",E,"The `UniformSampler` implementation supporting type `X`.",3,N],[8,R[2869],E,"Helper trait handling actual uniform sampling.",N,N],[16,"X",E,"The type sampled by this implementation.",4,N],[10,"new",E,"Construct self, with inclusive lower bound and exclusive…",4,[[["b2"],["b1"]],["self"]]],[10,R[2845],E,"Construct self, with inclusive bounds `[low, high]`.",4,[[["b2"],["b1"]],["self"]]],[10,"sample",E,"Sample a value.",4,[[["self"],["r"]]]],[11,R[2863],E,"Sample a single value uniformly from a range with…",4,[[["b2"],["b1"],["r"]]]],[8,R[2870],E,"Helper trait similar to [`Borrow`] but implemented only…",N,N],[10,R[6],E,"Immutably borrows from an owned value. See…",5,[[["self"]],["borrowed"]]],[11,"new",E,R[2846],6,[[["b2"],["b1"]],["uniform"]]],[11,R[2845],E,R[2846],6,[[["b2"],["b1"]],["uniform"]]],[11,"new",R[1160],"Construct a new `Bernoulli` with the given probability of…",7,[[["f64"]],[[R[2847]],[R[3],[R[2848],R[2847]]],[R[2848]]]]],[11,"from_ratio",E,"Construct a new `Bernoulli` with the probability of…",7,[[["u32"]],[[R[2847]],[R[3],[R[2848],R[2847]]],[R[2848]]]]],[0,"weighted",E,"Weighted index sampling",N,N],[3,R[2849],R[2852],R[2850],N,N],[4,R[2871],E,"Error type returned from `WeightedIndex::new`.",N,N],[13,"NoItem",E,"The provided weight collection contains no items.",8,N],[13,"InvalidWeight",E,"A weight is either less than zero, greater than the…",8,N],[13,"AllWeightsZero",E,"All items in the provided weight collection are zero.",8,N],[13,"TooMany",E,"Too many weights are provided (length greater than…",8,N],[0,"alias_method",E,"This module contains an implementation of alias method for…",N,N],[3,R[2849],R[2859],R[2850],N,N],[8,"Weight",E,"Trait that must be implemented for weights, that are used…",N,N],[18,"MAX",E,"Maximum number representable by `Self`.",9,N],[18,"ZERO",E,"Element of `Self` equivalent to 0.",9,N],[10,"try_from_u32_lossy",E,"Produce an instance of `Self` from a `u32` value, or…",9,[[["u32"]],[R[23]]]],[11,"sum",E,"Sums all values in slice `values`.",9,[[],["self"]]],[11,"new",E,"Creates a new [`WeightedIndex`].",10,[[["vec"]],[[R[3],[R[2851]]],[R[2851]]]]],[11,"new",R[2852],"Creates a new a `WeightedIndex` [`Distribution`] using the…",11,[[["i"]],[[R[2853]],[R[2851]],[R[3],[R[2853],R[2851]]]]]],[11,"new",R[1160],"Construct a new `UnitSphereSurface` distribution.",12,[[],[R[2865]]]],[11,"new",E,"Construct a new `UnitCircle` distribution.",13,[[],["unitcircle"]]],[11,"new",E,"Construct an object representing the `Gamma(shape, scale)`…",14,[[["f64"]],["gamma"]]],[11,"new",E,"Create a new chi-squared distribution with…",15,[[["f64"]],["chisquared"]]],[11,"new",E,"Create a new `FisherF` distribution, with the given…",16,[[["f64"]],["fisherf"]]],[11,"new",E,"Create a new Student t distribution with `n` degrees of…",17,[[["f64"]],["studentt"]]],[11,"new",E,"Construct an object representing the `Beta(alpha, beta)`…",18,[[["f64"]],["beta"]]],[11,"new",E,"Construct a new `Normal` distribution with the given mean…",19,[[["f64"]],["normal"]]],[11,"new",E,"Construct a new `LogNormal` distribution with the given…",20,[[["f64"]],["lognormal"]]],[11,"new",E,"Construct a new `Exp` with the given shape parameter…",21,[[["f64"]],["exp"]]],[11,"new",E,"Construct a new Pareto distribution with given `scale` and…",22,[[["f64"]],["pareto"]]],[11,"new",E,"Construct a new `Poisson` with the given shape parameter…",23,[[["f64"]],["poisson"]]],[11,"new",E,"Construct a new `Binomial` with the given shape parameters…",24,[[["f64"],["u64"]],["binomial"]]],[11,"new",E,"Construct a new `Cauchy` with the given shape parameters…",25,[[["f64"]],["cauchy"]]],[11,"new",E,"Construct a new `Dirichlet` with the given alpha parameter…",26,[[["vec",["f64"]],["into",["vec"]]],["dirichlet"]]],[11,"new_with_param",E,"Construct a new `Dirichlet` with the given shape parameter…",26,[[["f64"],["usize"]],["dirichlet"]]],[11,"new",E,"Construct a new `Triangular` with minimum `min`, maximum…",27,[[["f64"]],["triangular"]]],[11,"new",E,"Construct a new `Weibull` distribution with given `scale`…",28,[[["f64"]],["weibull"]]],[8,R[2873],E,"Types (distributions) that can be used to create a random…",N,N],[10,"sample",E,"Generate a random value of `T`, using `rng` as the source…",29,[[["self"],["r"]],[T]]],[11,R[2856],E,"Create an iterator that generates random values of `T`,…",29,[[["r"]],["distiter"]]],[0,"prelude","rand","Convenience re-export of common members",N,N],[0,"rngs",E,"Random number generators and adapters",N,N],[3,"EntropyRng",R[2854],"An interface returning random data from external…",N,N],[3,"StdRng",E,"The standard RNG. The PRNG algorithm in `StdRng` is chosen…",N,N],[3,"ThreadRng",E,"The type returned by [`thread_rng`], essentially just a…",N,N],[3,"OsRng",E,"A random number generator that retrieves randomness from…",N,N],[0,"adapter",E,"Wrappers / adapters forming RNGs",N,N],[3,"ReadRng",R[2860],"An RNG that reads random bytes straight from any type…",N,N],[3,"ReadError",E,"`ReadRng` error type",N,N],[3,R[1191],E,"A wrapper around any PRNG that implements…",N,N],[11,"new",E,"Create a new `ReadRng` from a `Read`.",30,[[["r"]],["readrng"]]],[11,"new",E,"Create a new `ReseedingRng` from an existing PRNG,…",31,[[["rsdr"],["u64"],["r"]],["self"]]],[11,"reseed",E,"Reseed the internal PRNG.",31,[[["self"]],[["error"],[R[3],["error"]]]]],[11,"new",R[2854],"Create a new `EntropyRng`.",32,[[],["self"]]],[0,"mock",E,"Mock random number generator",N,N],[3,"StepRng",R[2861],"A simple implementation of `RngCore` for testing purposes.",N,N],[11,"new",E,"Create a `StepRng`, yielding an arithmetic sequence…",33,[[["u64"]],["self"]]],[11,"new",R[2854],"Create a new `OsRng`.",34,[[],[[R[3],["osrng","error"]],["osrng"],["error"]]]],[0,"seq","rand","Sequence-related functionality",N,N],[3,R[2881],R[2864],"An iterator over multiple slice elements.",N,N],[0,"index",E,"Low-level API for sampling indices",N,N],[4,"IndexVec",R[2862],"A vector of indices.",N,N],[4,R[2882],E,"Return type of `IndexVec::iter`.",N,N],[4,R[2883],E,"Return type of `IndexVec::into_iter`.",N,N],[5,"sample",E,"Randomly sample exactly `amount` distinct indices from…",N,[[["r"],["usize"]],["indexvec"]]],[11,"len",E,"Returns the number of indices",35,[[["self"]],["usize"]]],[11,"index",E,"Return the value at the given `index`.",35,[[["self"],["usize"]],["usize"]]],[11,"into_vec",E,"Return result as a `Vec<usize>`. Conversion may or may not…",35,[[],[["vec",["usize"]],["usize"]]]],[11,"iter",E,"Iterate over the indices as a sequence of `usize` values",35,[[["self"]],["indexveciter"]]],[11,R[45],E,"Convert into an iterator over the indices as a sequence of…",35,[[],[R[2866]]]],[8,R[2874],R[2864],"Extension trait on slices, providing random mutation and…",N,N],[16,"Item",E,"The element type.",36,N],[10,"choose",E,"Returns a reference to one random element of the slice, or…",36,[[["self"],["r"]],[R[23]]]],[10,"choose_mut",E,"Returns a mutable reference to one random element of the…",36,[[["self"],["r"]],[R[23]]]],[10,R[2855],E,"Chooses `amount` elements from the slice at random,…",36,[[["self"],["r"],["usize"]],["slicechooseiter"]]],[10,"choose_weighted",E,"Similar to [`choose`], but where the likelihood of each…",36,[[["self"],["r"],["f"]],[[R[2851]],[R[3],[R[2851]]]]]],[10,"choose_weighted_mut",E,"Similar to [`choose_mut`], but where the likelihood of…",36,[[["self"],["r"],["f"]],[[R[2851]],[R[3],[R[2851]]]]]],[10,"shuffle",E,"Shuffle a mutable slice in place.",36,[[["self"],["r"]]]],[10,"partial_shuffle",E,"Shuffle a slice in place, but exit early.",36,[[["self"],["r"],["usize"]]]],[8,R[2875],E,"Extension trait on iterators, providing random sampling…",N,N],[11,"choose",E,"Choose one element at random from the iterator.",37,[[["r"]],[R[23]]]],[11,"choose_multiple_fill",E,"Collects values at random from the iterator into a…",37,[[["r"]],["usize"]]],[11,R[2855],E,"Collects `amount` values at random from the iterator into…",37,[[["r"],["usize"]],["vec"]]],[8,"Rng","rand","An automatically-implemented extension trait on…",N,N],[11,"gen",E,"Return a random value supporting the [`Standard`]…",38,[[["self"]],[T]]],[11,"gen_range",E,"Generate a random value in the range [`low`, `high`), i.e.…",38,[[["self"],["b1"],["b2"]],["sampleuniform"]]],[11,"sample",E,"Sample a new value, using the given distribution.",38,[[["self"],["distribution"]],[T]]],[11,R[2856],E,"Create an iterator that generates values using the given…",38,[[["d"]],["distiter"]]],[11,"fill",E,R[2857],38,[[["self"],[T]]]],[11,"try_fill",E,R[2857],38,[[["self"],[T]],[["error"],[R[3],["error"]]]]],[11,"gen_bool",E,"Return a bool with a probability `p` of being true.",38,[[["self"],["f64"]],["bool"]]],[11,"gen_ratio",E,"Return a bool with a probability of…",38,[[["self"],["u32"]],["bool"]]],[8,R[2876],E,"Trait for casting types to byte slices",N,N],[10,"as_byte_slice_mut",E,"Return a mutable reference to self as a byte slice",39,[[["self"]]]],[10,"to_le",E,"Call `to_le` on each element (i.e. byte-swap on Big Endian…",39,[[["self"]]]],[11,"into",E,E,40,[[],[U]]],[11,R[113],E,E,40,[[["self"]],["string"]]],[11,"from",E,E,40,[[[T]],[T]]],[11,R[4],E,E,40,[[[U]],[R[3]]]],[11,R[5],E,E,40,[[],[R[3]]]],[11,R[7],E,E,40,[[["self"]],[T]]],[11,R[6],E,E,40,[[["self"]],[T]]],[11,R[8],E,E,40,[[["self"]],[R[9]]]],[11,"vzip",E,E,40,[[],["v"]]],[11,"into",R[1160],E,41,[[],[U]]],[11,"from",E,E,41,[[[T]],[T]]],[11,R[4],E,E,41,[[[U]],[R[3]]]],[11,R[5],E,E,41,[[],[R[3]]]],[11,R[7],E,E,41,[[["self"]],[T]]],[11,R[6],E,E,41,[[["self"]],[T]]],[11,R[8],E,E,41,[[["self"]],[R[9]]]],[11,"vzip",E,E,41,[[],["v"]]],[11,"into",R[2858],E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[46],E,E,6,[[["self"]],[T]]],[11,R[47],E,E,6,[[["self"],[T]]]],[11,R[4],E,E,6,[[[U]],[R[3]]]],[11,R[5],E,E,6,[[],[R[3]]]],[11,R[7],E,E,6,[[["self"]],[T]]],[11,R[6],E,E,6,[[["self"]],[T]]],[11,R[8],E,E,6,[[["self"]],[R[9]]]],[11,"vzip",E,E,6,[[],["v"]]],[11,"into",R[1160],E,42,[[],[U]]],[11,"from",E,E,42,[[[T]],[T]]],[11,R[46],E,E,42,[[["self"]],[T]]],[11,R[47],E,E,42,[[["self"],[T]]]],[11,R[4],E,E,42,[[[U]],[R[3]]]],[11,R[5],E,E,42,[[],[R[3]]]],[11,R[7],E,E,42,[[["self"]],[T]]],[11,R[6],E,E,42,[[["self"]],[T]]],[11,R[8],E,E,42,[[["self"]],[R[9]]]],[11,"vzip",E,E,42,[[],["v"]]],[11,"into",E,E,43,[[],[U]]],[11,"from",E,E,43,[[[T]],[T]]],[11,R[46],E,E,43,[[["self"]],[T]]],[11,R[47],E,E,43,[[["self"],[T]]]],[11,R[4],E,E,43,[[[U]],[R[3]]]],[11,R[5],E,E,43,[[],[R[3]]]],[11,R[7],E,E,43,[[["self"]],[T]]],[11,R[6],E,E,43,[[["self"]],[T]]],[11,R[8],E,E,43,[[["self"]],[R[9]]]],[11,"vzip",E,E,43,[[],["v"]]],[11,"into",E,E,7,[[],[U]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[46],E,E,7,[[["self"]],[T]]],[11,R[47],E,E,7,[[["self"],[T]]]],[11,R[4],E,E,7,[[[U]],[R[3]]]],[11,R[5],E,E,7,[[],[R[3]]]],[11,R[7],E,E,7,[[["self"]],[T]]],[11,R[6],E,E,7,[[["self"]],[T]]],[11,R[8],E,E,7,[[["self"]],[R[9]]]],[11,"vzip",E,E,7,[[],["v"]]],[11,"into",E,E,12,[[],[U]]],[11,"from",E,E,12,[[[T]],[T]]],[11,R[46],E,E,12,[[["self"]],[T]]],[11,R[47],E,E,12,[[["self"],[T]]]],[11,R[4],E,E,12,[[[U]],[R[3]]]],[11,R[5],E,E,12,[[],[R[3]]]],[11,R[7],E,E,12,[[["self"]],[T]]],[11,R[6],E,E,12,[[["self"]],[T]]],[11,R[8],E,E,12,[[["self"]],[R[9]]]],[11,"vzip",E,E,12,[[],["v"]]],[11,"into",E,E,13,[[],[U]]],[11,"from",E,E,13,[[[T]],[T]]],[11,R[46],E,E,13,[[["self"]],[T]]],[11,R[47],E,E,13,[[["self"],[T]]]],[11,R[4],E,E,13,[[[U]],[R[3]]]],[11,R[5],E,E,13,[[],[R[3]]]],[11,R[7],E,E,13,[[["self"]],[T]]],[11,R[6],E,E,13,[[["self"]],[T]]],[11,R[8],E,E,13,[[["self"]],[R[9]]]],[11,"vzip",E,E,13,[[],["v"]]],[11,"into",E,E,14,[[],[U]]],[11,"from",E,E,14,[[[T]],[T]]],[11,R[46],E,E,14,[[["self"]],[T]]],[11,R[47],E,E,14,[[["self"],[T]]]],[11,R[4],E,E,14,[[[U]],[R[3]]]],[11,R[5],E,E,14,[[],[R[3]]]],[11,R[7],E,E,14,[[["self"]],[T]]],[11,R[6],E,E,14,[[["self"]],[T]]],[11,R[8],E,E,14,[[["self"]],[R[9]]]],[11,"vzip",E,E,14,[[],["v"]]],[11,"into",E,E,15,[[],[U]]],[11,"from",E,E,15,[[[T]],[T]]],[11,R[46],E,E,15,[[["self"]],[T]]],[11,R[47],E,E,15,[[["self"],[T]]]],[11,R[4],E,E,15,[[[U]],[R[3]]]],[11,R[5],E,E,15,[[],[R[3]]]],[11,R[7],E,E,15,[[["self"]],[T]]],[11,R[6],E,E,15,[[["self"]],[T]]],[11,R[8],E,E,15,[[["self"]],[R[9]]]],[11,"vzip",E,E,15,[[],["v"]]],[11,"into",E,E,16,[[],[U]]],[11,"from",E,E,16,[[[T]],[T]]],[11,R[46],E,E,16,[[["self"]],[T]]],[11,R[47],E,E,16,[[["self"],[T]]]],[11,R[4],E,E,16,[[[U]],[R[3]]]],[11,R[5],E,E,16,[[],[R[3]]]],[11,R[7],E,E,16,[[["self"]],[T]]],[11,R[6],E,E,16,[[["self"]],[T]]],[11,R[8],E,E,16,[[["self"]],[R[9]]]],[11,"vzip",E,E,16,[[],["v"]]],[11,"into",E,E,17,[[],[U]]],[11,"from",E,E,17,[[[T]],[T]]],[11,R[46],E,E,17,[[["self"]],[T]]],[11,R[47],E,E,17,[[["self"],[T]]]],[11,R[4],E,E,17,[[[U]],[R[3]]]],[11,R[5],E,E,17,[[],[R[3]]]],[11,R[7],E,E,17,[[["self"]],[T]]],[11,R[6],E,E,17,[[["self"]],[T]]],[11,R[8],E,E,17,[[["self"]],[R[9]]]],[11,"vzip",E,E,17,[[],["v"]]],[11,"into",E,E,18,[[],[U]]],[11,"from",E,E,18,[[[T]],[T]]],[11,R[46],E,E,18,[[["self"]],[T]]],[11,R[47],E,E,18,[[["self"],[T]]]],[11,R[4],E,E,18,[[[U]],[R[3]]]],[11,R[5],E,E,18,[[],[R[3]]]],[11,R[7],E,E,18,[[["self"]],[T]]],[11,R[6],E,E,18,[[["self"]],[T]]],[11,R[8],E,E,18,[[["self"]],[R[9]]]],[11,"vzip",E,E,18,[[],["v"]]],[11,"into",E,E,19,[[],[U]]],[11,"from",E,E,19,[[[T]],[T]]],[11,R[46],E,E,19,[[["self"]],[T]]],[11,R[47],E,E,19,[[["self"],[T]]]],[11,R[4],E,E,19,[[[U]],[R[3]]]],[11,R[5],E,E,19,[[],[R[3]]]],[11,R[7],E,E,19,[[["self"]],[T]]],[11,R[6],E,E,19,[[["self"]],[T]]],[11,R[8],E,E,19,[[["self"]],[R[9]]]],[11,"vzip",E,E,19,[[],["v"]]],[11,"into",E,E,20,[[],[U]]],[11,"from",E,E,20,[[[T]],[T]]],[11,R[46],E,E,20,[[["self"]],[T]]],[11,R[47],E,E,20,[[["self"],[T]]]],[11,R[4],E,E,20,[[[U]],[R[3]]]],[11,R[5],E,E,20,[[],[R[3]]]],[11,R[7],E,E,20,[[["self"]],[T]]],[11,R[6],E,E,20,[[["self"]],[T]]],[11,R[8],E,E,20,[[["self"]],[R[9]]]],[11,"vzip",E,E,20,[[],["v"]]],[11,"into",E,E,44,[[],[U]]],[11,"from",E,E,44,[[[T]],[T]]],[11,R[46],E,E,44,[[["self"]],[T]]],[11,R[47],E,E,44,[[["self"],[T]]]],[11,R[4],E,E,44,[[[U]],[R[3]]]],[11,R[5],E,E,44,[[],[R[3]]]],[11,R[7],E,E,44,[[["self"]],[T]]],[11,R[6],E,E,44,[[["self"]],[T]]],[11,R[8],E,E,44,[[["self"]],[R[9]]]],[11,"vzip",E,E,44,[[],["v"]]],[11,"into",E,E,21,[[],[U]]],[11,"from",E,E,21,[[[T]],[T]]],[11,R[46],E,E,21,[[["self"]],[T]]],[11,R[47],E,E,21,[[["self"],[T]]]],[11,R[4],E,E,21,[[[U]],[R[3]]]],[11,R[5],E,E,21,[[],[R[3]]]],[11,R[7],E,E,21,[[["self"]],[T]]],[11,R[6],E,E,21,[[["self"]],[T]]],[11,R[8],E,E,21,[[["self"]],[R[9]]]],[11,"vzip",E,E,21,[[],["v"]]],[11,"into",E,E,45,[[],[U]]],[11,"from",E,E,45,[[[T]],[T]]],[11,R[46],E,E,45,[[["self"]],[T]]],[11,R[47],E,E,45,[[["self"],[T]]]],[11,R[4],E,E,45,[[[U]],[R[3]]]],[11,R[5],E,E,45,[[],[R[3]]]],[11,R[7],E,E,45,[[["self"]],[T]]],[11,R[6],E,E,45,[[["self"]],[T]]],[11,R[8],E,E,45,[[["self"]],[R[9]]]],[11,"vzip",E,E,45,[[],["v"]]],[11,"into",E,E,22,[[],[U]]],[11,"from",E,E,22,[[[T]],[T]]],[11,R[46],E,E,22,[[["self"]],[T]]],[11,R[47],E,E,22,[[["self"],[T]]]],[11,R[4],E,E,22,[[[U]],[R[3]]]],[11,R[5],E,E,22,[[],[R[3]]]],[11,R[7],E,E,22,[[["self"]],[T]]],[11,R[6],E,E,22,[[["self"]],[T]]],[11,R[8],E,E,22,[[["self"]],[R[9]]]],[11,"vzip",E,E,22,[[],["v"]]],[11,"into",E,E,23,[[],[U]]],[11,"from",E,E,23,[[[T]],[T]]],[11,R[46],E,E,23,[[["self"]],[T]]],[11,R[47],E,E,23,[[["self"],[T]]]],[11,R[4],E,E,23,[[[U]],[R[3]]]],[11,R[5],E,E,23,[[],[R[3]]]],[11,R[7],E,E,23,[[["self"]],[T]]],[11,R[6],E,E,23,[[["self"]],[T]]],[11,R[8],E,E,23,[[["self"]],[R[9]]]],[11,"vzip",E,E,23,[[],["v"]]],[11,"into",E,E,24,[[],[U]]],[11,"from",E,E,24,[[[T]],[T]]],[11,R[46],E,E,24,[[["self"]],[T]]],[11,R[47],E,E,24,[[["self"],[T]]]],[11,R[4],E,E,24,[[[U]],[R[3]]]],[11,R[5],E,E,24,[[],[R[3]]]],[11,R[7],E,E,24,[[["self"]],[T]]],[11,R[6],E,E,24,[[["self"]],[T]]],[11,R[8],E,E,24,[[["self"]],[R[9]]]],[11,"vzip",E,E,24,[[],["v"]]],[11,"into",E,E,25,[[],[U]]],[11,"from",E,E,25,[[[T]],[T]]],[11,R[46],E,E,25,[[["self"]],[T]]],[11,R[47],E,E,25,[[["self"],[T]]]],[11,R[4],E,E,25,[[[U]],[R[3]]]],[11,R[5],E,E,25,[[],[R[3]]]],[11,R[7],E,E,25,[[["self"]],[T]]],[11,R[6],E,E,25,[[["self"]],[T]]],[11,R[8],E,E,25,[[["self"]],[R[9]]]],[11,"vzip",E,E,25,[[],["v"]]],[11,"into",E,E,26,[[],[U]]],[11,"from",E,E,26,[[[T]],[T]]],[11,R[46],E,E,26,[[["self"]],[T]]],[11,R[47],E,E,26,[[["self"],[T]]]],[11,R[4],E,E,26,[[[U]],[R[3]]]],[11,R[5],E,E,26,[[],[R[3]]]],[11,R[7],E,E,26,[[["self"]],[T]]],[11,R[6],E,E,26,[[["self"]],[T]]],[11,R[8],E,E,26,[[["self"]],[R[9]]]],[11,"vzip",E,E,26,[[],["v"]]],[11,"into",E,E,27,[[],[U]]],[11,"from",E,E,27,[[[T]],[T]]],[11,R[46],E,E,27,[[["self"]],[T]]],[11,R[47],E,E,27,[[["self"],[T]]]],[11,R[4],E,E,27,[[[U]],[R[3]]]],[11,R[5],E,E,27,[[],[R[3]]]],[11,R[7],E,E,27,[[["self"]],[T]]],[11,R[6],E,E,27,[[["self"]],[T]]],[11,R[8],E,E,27,[[["self"]],[R[9]]]],[11,"vzip",E,E,27,[[],["v"]]],[11,"into",E,E,28,[[],[U]]],[11,"from",E,E,28,[[[T]],[T]]],[11,R[46],E,E,28,[[["self"]],[T]]],[11,R[47],E,E,28,[[["self"],[T]]]],[11,R[4],E,E,28,[[[U]],[R[3]]]],[11,R[5],E,E,28,[[],[R[3]]]],[11,R[7],E,E,28,[[["self"]],[T]]],[11,R[6],E,E,28,[[["self"]],[T]]],[11,R[8],E,E,28,[[["self"]],[R[9]]]],[11,"vzip",E,E,28,[[],["v"]]],[11,"into",E,E,46,[[],[U]]],[11,R[45],E,E,46,[[],["i"]]],[11,"from",E,E,46,[[[T]],[T]]],[11,R[4],E,E,46,[[[U]],[R[3]]]],[11,R[5],E,E,46,[[],[R[3]]]],[11,R[7],E,E,46,[[["self"]],[T]]],[11,R[6],E,E,46,[[["self"]],[T]]],[11,R[8],E,E,46,[[["self"]],[R[9]]]],[11,"vzip",E,E,46,[[],["v"]]],[11,"into",E,E,47,[[],[U]]],[11,"from",E,E,47,[[[T]],[T]]],[11,R[46],E,E,47,[[["self"]],[T]]],[11,R[47],E,E,47,[[["self"],[T]]]],[11,R[4],E,E,47,[[[U]],[R[3]]]],[11,R[5],E,E,47,[[],[R[3]]]],[11,R[7],E,E,47,[[["self"]],[T]]],[11,R[6],E,E,47,[[["self"]],[T]]],[11,R[8],E,E,47,[[["self"]],[R[9]]]],[11,"vzip",E,E,47,[[],["v"]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[46],E,E,2,[[["self"]],[T]]],[11,R[47],E,E,2,[[["self"],[T]]]],[11,R[4],E,E,2,[[[U]],[R[3]]]],[11,R[5],E,E,2,[[],[R[3]]]],[11,R[7],E,E,2,[[["self"]],[T]]],[11,R[6],E,E,2,[[["self"]],[T]]],[11,R[8],E,E,2,[[["self"]],[R[9]]]],[11,"vzip",E,E,2,[[],["v"]]],[11,"into",R[2858],E,48,[[],[U]]],[11,"from",E,E,48,[[[T]],[T]]],[11,R[46],E,E,48,[[["self"]],[T]]],[11,R[47],E,E,48,[[["self"],[T]]]],[11,R[4],E,E,48,[[[U]],[R[3]]]],[11,R[5],E,E,48,[[],[R[3]]]],[11,R[7],E,E,48,[[["self"]],[T]]],[11,R[6],E,E,48,[[["self"]],[T]]],[11,R[8],E,E,48,[[["self"]],[R[9]]]],[11,"vzip",E,E,48,[[],["v"]]],[11,"into",E,E,49,[[],[U]]],[11,"from",E,E,49,[[[T]],[T]]],[11,R[46],E,E,49,[[["self"]],[T]]],[11,R[47],E,E,49,[[["self"],[T]]]],[11,R[4],E,E,49,[[[U]],[R[3]]]],[11,R[5],E,E,49,[[],[R[3]]]],[11,R[7],E,E,49,[[["self"]],[T]]],[11,R[6],E,E,49,[[["self"]],[T]]],[11,R[8],E,E,49,[[["self"]],[R[9]]]],[11,"vzip",E,E,49,[[],["v"]]],[11,"into",E,E,50,[[],[U]]],[11,"from",E,E,50,[[[T]],[T]]],[11,R[46],E,E,50,[[["self"]],[T]]],[11,R[47],E,E,50,[[["self"],[T]]]],[11,R[4],E,E,50,[[[U]],[R[3]]]],[11,R[5],E,E,50,[[],[R[3]]]],[11,R[7],E,E,50,[[["self"]],[T]]],[11,R[6],E,E,50,[[["self"]],[T]]],[11,R[8],E,E,50,[[["self"]],[R[9]]]],[11,"vzip",E,E,50,[[],["v"]]],[11,"into",R[2852],E,11,[[],[U]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[46],E,E,11,[[["self"]],[T]]],[11,R[47],E,E,11,[[["self"],[T]]]],[11,R[4],E,E,11,[[[U]],[R[3]]]],[11,R[5],E,E,11,[[],[R[3]]]],[11,R[7],E,E,11,[[["self"]],[T]]],[11,R[6],E,E,11,[[["self"]],[T]]],[11,R[8],E,E,11,[[["self"]],[R[9]]]],[11,"vzip",E,E,11,[[],["v"]]],[11,"into",E,E,8,[[],[U]]],[11,R[113],E,E,8,[[["self"]],["string"]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[46],E,E,8,[[["self"]],[T]]],[11,R[47],E,E,8,[[["self"],[T]]]],[11,R[4],E,E,8,[[[U]],[R[3]]]],[11,R[5],E,E,8,[[],[R[3]]]],[11,R[7],E,E,8,[[["self"]],[T]]],[11,R[6],E,E,8,[[["self"]],[T]]],[11,R[8],E,E,8,[[["self"]],[R[9]]]],[11,"vzip",E,E,8,[[],["v"]]],[11,"into",R[2859],E,10,[[],[U]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[46],E,E,10,[[["self"]],[T]]],[11,R[47],E,E,10,[[["self"],[T]]]],[11,R[4],E,E,10,[[[U]],[R[3]]]],[11,R[5],E,E,10,[[],[R[3]]]],[11,R[7],E,E,10,[[["self"]],[T]]],[11,R[6],E,E,10,[[["self"]],[T]]],[11,R[8],E,E,10,[[["self"]],[R[9]]]],[11,"vzip",E,E,10,[[],["v"]]],[11,"into",R[2854],E,32,[[],[U]]],[11,"from",E,E,32,[[[T]],[T]]],[11,R[4],E,E,32,[[[U]],[R[3]]]],[11,R[5],E,E,32,[[],[R[3]]]],[11,R[7],E,E,32,[[["self"]],[T]]],[11,R[6],E,E,32,[[["self"]],[T]]],[11,R[8],E,E,32,[[["self"]],[R[9]]]],[11,"vzip",E,E,32,[[],["v"]]],[11,"into",E,E,51,[[],[U]]],[11,"from",E,E,51,[[[T]],[T]]],[11,R[46],E,E,51,[[["self"]],[T]]],[11,R[47],E,E,51,[[["self"],[T]]]],[11,R[4],E,E,51,[[[U]],[R[3]]]],[11,R[5],E,E,51,[[],[R[3]]]],[11,R[7],E,E,51,[[["self"]],[T]]],[11,R[6],E,E,51,[[["self"]],[T]]],[11,R[8],E,E,51,[[["self"]],[R[9]]]],[11,"vzip",E,E,51,[[],["v"]]],[11,"into",E,E,52,[[],[U]]],[11,"from",E,E,52,[[[T]],[T]]],[11,R[46],E,E,52,[[["self"]],[T]]],[11,R[47],E,E,52,[[["self"],[T]]]],[11,R[4],E,E,52,[[[U]],[R[3]]]],[11,R[5],E,E,52,[[],[R[3]]]],[11,R[7],E,E,52,[[["self"]],[T]]],[11,R[6],E,E,52,[[["self"]],[T]]],[11,R[8],E,E,52,[[["self"]],[R[9]]]],[11,"vzip",E,E,52,[[],["v"]]],[11,"into",E,E,34,[[],[U]]],[11,"from",E,E,34,[[[T]],[T]]],[11,R[46],E,E,34,[[["self"]],[T]]],[11,R[47],E,E,34,[[["self"],[T]]]],[11,R[4],E,E,34,[[[U]],[R[3]]]],[11,R[5],E,E,34,[[],[R[3]]]],[11,R[7],E,E,34,[[["self"]],[T]]],[11,R[6],E,E,34,[[["self"]],[T]]],[11,R[8],E,E,34,[[["self"]],[R[9]]]],[11,"vzip",E,E,34,[[],["v"]]],[11,"into",R[2860],E,30,[[],[U]]],[11,"from",E,E,30,[[[T]],[T]]],[11,R[4],E,E,30,[[[U]],[R[3]]]],[11,R[5],E,E,30,[[],[R[3]]]],[11,R[7],E,E,30,[[["self"]],[T]]],[11,R[6],E,E,30,[[["self"]],[T]]],[11,R[8],E,E,30,[[["self"]],[R[9]]]],[11,"vzip",E,E,30,[[],["v"]]],[11,"into",E,E,53,[[],[U]]],[11,R[113],E,E,53,[[["self"]],["string"]]],[11,"from",E,E,53,[[[T]],[T]]],[11,R[4],E,E,53,[[[U]],[R[3]]]],[11,R[5],E,E,53,[[],[R[3]]]],[11,R[7],E,E,53,[[["self"]],[T]]],[11,R[6],E,E,53,[[["self"]],[T]]],[11,R[8],E,E,53,[[["self"]],[R[9]]]],[11,"vzip",E,E,53,[[],["v"]]],[11,"into",E,E,31,[[],[U]]],[11,"from",E,E,31,[[[T]],[T]]],[11,R[46],E,E,31,[[["self"]],[T]]],[11,R[47],E,E,31,[[["self"],[T]]]],[11,R[4],E,E,31,[[[U]],[R[3]]]],[11,R[5],E,E,31,[[],[R[3]]]],[11,R[7],E,E,31,[[["self"]],[T]]],[11,R[6],E,E,31,[[["self"]],[T]]],[11,R[8],E,E,31,[[["self"]],[R[9]]]],[11,"vzip",E,E,31,[[],["v"]]],[11,"into",R[2861],E,33,[[],[U]]],[11,"from",E,E,33,[[[T]],[T]]],[11,R[46],E,E,33,[[["self"]],[T]]],[11,R[47],E,E,33,[[["self"],[T]]]],[11,R[4],E,E,33,[[[U]],[R[3]]]],[11,R[5],E,E,33,[[],[R[3]]]],[11,R[7],E,E,33,[[["self"]],[T]]],[11,R[6],E,E,33,[[["self"]],[T]]],[11,R[8],E,E,33,[[["self"]],[R[9]]]],[11,"vzip",E,E,33,[[],["v"]]],[11,"into",R[2864],E,54,[[],[U]]],[11,R[45],E,E,54,[[],["i"]]],[11,"from",E,E,54,[[[T]],[T]]],[11,R[4],E,E,54,[[[U]],[R[3]]]],[11,R[5],E,E,54,[[],[R[3]]]],[11,R[7],E,E,54,[[["self"]],[T]]],[11,R[6],E,E,54,[[["self"]],[T]]],[11,R[8],E,E,54,[[["self"]],[R[9]]]],[11,"vzip",E,E,54,[[],["v"]]],[11,"into",R[2862],E,35,[[],[U]]],[11,"from",E,E,35,[[[T]],[T]]],[11,R[46],E,E,35,[[["self"]],[T]]],[11,R[47],E,E,35,[[["self"],[T]]]],[11,R[4],E,E,35,[[[U]],[R[3]]]],[11,R[5],E,E,35,[[],[R[3]]]],[11,R[7],E,E,35,[[["self"]],[T]]],[11,R[6],E,E,35,[[["self"]],[T]]],[11,R[8],E,E,35,[[["self"]],[R[9]]]],[11,"vzip",E,E,35,[[],["v"]]],[11,"into",E,E,55,[[],[U]]],[11,R[45],E,E,55,[[],["i"]]],[11,"from",E,E,55,[[[T]],[T]]],[11,R[4],E,E,55,[[[U]],[R[3]]]],[11,R[5],E,E,55,[[],[R[3]]]],[11,R[7],E,E,55,[[["self"]],[T]]],[11,R[6],E,E,55,[[["self"]],[T]]],[11,R[8],E,E,55,[[["self"]],[R[9]]]],[11,"vzip",E,E,55,[[],["v"]]],[11,"into",E,E,56,[[],[U]]],[11,R[45],E,E,56,[[],["i"]]],[11,"from",E,E,56,[[[T]],[T]]],[11,R[46],E,E,56,[[["self"]],[T]]],[11,R[47],E,E,56,[[["self"],[T]]]],[11,R[4],E,E,56,[[[U]],[R[3]]]],[11,R[5],E,E,56,[[],[R[3]]]],[11,R[7],E,E,56,[[["self"]],[T]]],[11,R[6],E,E,56,[[["self"]],[T]]],[11,R[8],E,E,56,[[["self"]],[R[9]]]],[11,"vzip",E,E,56,[[],["v"]]],[11,"fmt","rand",E,40,[[["self"],[R[10]]],[[R[3],["error"]],["error"]]]],[11,"read",E,E,0,[[["self"]],[["error"],[R[3],["usize","error"]],["usize"]]]],[11,"fmt",E,E,40,[[["self"],[R[10]]],[[R[3],["error"]],["error"]]]],[11,"source",E,E,40,[[["self"]],[["error"],[R[23],["error"]]]]],[11,"from",E,E,40,[[["error"]],["error"]]],[11,"from",E,E,40,[[[R[1709]]],["error"]]],[11,"new",R[2858],E,48,[[["b2"],["b1"]],["self"]]],[11,R[2845],E,E,48,[[["b2"],["b1"]],["self"]]],[11,"sample",E,E,48,[[["self"],["r"]]]],[11,R[2863],E,E,48,[[["b2"],["b1"],["r"]]]],[11,"new",E,E,48,[[["b2"],["b1"]],["self"]]],[11,R[2845],E,E,48,[[["b2"],["b1"]],["self"]]],[11,"sample",E,E,48,[[["self"],["r"]]]],[11,R[2863],E,E,48,[[["b2"],["b1"],["r"]]]],[11,"new",E,E,48,[[["b2"],["b1"]],["self"]]],[11,R[2845],E,E,48,[[["b2"],["b1"]],["self"]]],[11,"sample",E,E,48,[[["self"],["r"]]]],[11,R[2863],E,E,48,[[["b2"],["b1"],["r"]]]],[11,"new",E,E,48,[[["b2"],["b1"]],["self"]]],[11,R[2845],E,E,48,[[["b2"],["b1"]],["self"]]],[11,"sample",E,E,48,[[["self"],["r"]]]],[11,R[2863],E,E,48,[[["b2"],["b1"],["r"]]]],[11,"new",E,E,48,[[["b2"],["b1"]],["self"]]],[11,R[2845],E,E,48,[[["b2"],["b1"]],["self"]]],[11,"sample",E,E,48,[[["self"],["r"]]]],[11,R[2863],E,E,48,[[["b2"],["b1"],["r"]]]],[11,"new",E,E,48,[[["b2"],["b1"]],["self"]]],[11,R[2845],E,E,48,[[["b2"],["b1"]],["self"]]],[11,"sample",E,E,48,[[["self"],["r"]]]],[11,R[2863],E,E,48,[[["b2"],["b1"],["r"]]]],[11,"new",E,E,48,[[["b2"],["b1"]],["self"]]],[11,R[2845],E,E,48,[[["b2"],["b1"]],["self"]]],[11,"sample",E,E,48,[[["self"],["r"]]]],[11,R[2863],E,E,48,[[["b2"],["b1"],["r"]]]],[11,"new",E,E,48,[[["b2"],["b1"]],["self"]]],[11,R[2845],E,E,48,[[["b2"],["b1"]],["self"]]],[11,"sample",E,E,48,[[["self"],["r"]]]],[11,R[2863],E,E,48,[[["b2"],["b1"],["r"]]]],[11,"new",E,E,48,[[["b2"],["b1"]],["self"]]],[11,R[2845],E,E,48,[[["b2"],["b1"]],["self"]]],[11,"sample",E,E,48,[[["self"],["r"]]]],[11,R[2863],E,E,48,[[["b2"],["b1"],["r"]]]],[11,"new",E,E,48,[[["b2"],["b1"]],["self"]]],[11,R[2845],E,E,48,[[["b2"],["b1"]],["self"]]],[11,"sample",E,E,48,[[["self"],["r"]]]],[11,R[2863],E,E,48,[[["b2"],["b1"],["r"]]]],[11,"new",E,E,48,[[["b2"],["b1"]],["self"]]],[11,R[2845],E,E,48,[[["b2"],["b1"]],["self"]]],[11,"sample",E,E,48,[[["self"],["r"]]]],[11,R[2863],E,E,48,[[["b2"],["b1"],["r"]]]],[11,"new",E,E,48,[[["b2"],["b1"]],["self"]]],[11,R[2845],E,E,48,[[["b2"],["b1"]],["self"]]],[11,"sample",E,E,48,[[["self"],["r"]]]],[11,R[2863],E,E,48,[[["b2"],["b1"],["r"]]]],[11,"new",E,E,49,[[["b2"],["b1"]],["self"]]],[11,R[2845],E,E,49,[[["b2"],["b1"]],["self"]]],[11,"sample",E,E,49,[[["self"],["r"]]]],[11,R[2863],E,E,49,[[["b2"],["b1"],["r"]]]],[11,"new",E,E,49,[[["b2"],["b1"]],["self"]]],[11,R[2845],E,E,49,[[["b2"],["b1"]],["self"]]],[11,"sample",E,E,49,[[["self"],["r"]]]],[11,R[2863],E,E,49,[[["b2"],["b1"],["r"]]]],[11,"new",E,E,50,[[["b2"],["b1"]],["self"]]],[11,R[2845],E,E,50,[[["b2"],["b1"]],["self"]]],[11,"sample",E,E,50,[[["self"],["r"]],[R[1205]]]],[11,"sample",E,E,6,[[["self"],["r"]],["x"]]],[11,"sample",R[1160],E,7,[[["self"],["r"]],["bool"]]],[11,"sample",R[2859],E,10,[[["self"],["r"]],["usize"]]],[11,"sample",R[2852],E,11,[[["self"],["r"]],["usize"]]],[11,"sample",R[1160],E,12,[[["self"],["r"]]]],[11,"sample",E,E,13,[[["self"],["r"]]]],[11,"sample",E,E,14,[[["self"],["r"]],["f64"]]],[11,"sample",E,E,15,[[["self"],["r"]],["f64"]]],[11,"sample",E,E,16,[[["self"],["r"]],["f64"]]],[11,"sample",E,E,17,[[["self"],["r"]],["f64"]]],[11,"sample",E,E,18,[[["self"],["r"]],["f64"]]],[11,"sample",E,E,44,[[["self"],["r"]],["f64"]]],[11,"sample",E,E,19,[[["self"],["r"]],["f64"]]],[11,"sample",E,E,20,[[["self"],["r"]],["f64"]]],[11,"sample",E,E,45,[[["self"],["r"]],["f64"]]],[11,"sample",E,E,21,[[["self"],["r"]],["f64"]]],[11,"sample",E,E,22,[[["self"],["r"]],["f64"]]],[11,"sample",E,E,23,[[["self"],["r"]],["u64"]]],[11,"sample",E,E,24,[[["self"],["r"]],["u64"]]],[11,"sample",E,E,25,[[["self"],["r"]],["f64"]]],[11,"sample",E,E,26,[[["self"],["r"]],[["vec",["f64"]],["f64"]]]],[11,"sample",E,E,27,[[["self"],["r"]],["f64"]]],[11,"sample",E,E,28,[[["self"],["r"]],["f64"]]],[11,"sample",E,E,47,[[["self"],["r"]],["f32"]]],[11,"sample",E,E,42,[[["self"],["r"]],["f32"]]],[11,"sample",E,E,43,[[["self"],["r"]],["f32"]]],[11,"sample",E,E,47,[[["self"],["r"]],["f64"]]],[11,"sample",E,E,42,[[["self"],["r"]],["f64"]]],[11,"sample",E,E,43,[[["self"],["r"]],["f64"]]],[11,"sample",E,E,47,[[["self"],["r"]],["u8"]]],[11,"sample",E,E,47,[[["self"],["r"]],["u16"]]],[11,"sample",E,E,47,[[["self"],["r"]],["u32"]]],[11,"sample",E,E,47,[[["self"],["r"]],["u64"]]],[11,"sample",E,E,47,[[["self"],["r"]],["u128"]]],[11,"sample",E,E,47,[[["self"],["r"]],["usize"]]],[11,"sample",E,E,47,[[["self"],["r"]],["i8"]]],[11,"sample",E,E,47,[[["self"],["r"]],["i16"]]],[11,"sample",E,E,47,[[["self"],["r"]],["i32"]]],[11,"sample",E,E,47,[[["self"],["r"]],["i64"]]],[11,"sample",E,E,47,[[["self"],["r"]],["i128"]]],[11,"sample",E,E,47,[[["self"],["r"]],["isize"]]],[11,"sample",E,E,47,[[["self"],["r"]],["nonzerou8"]]],[11,"sample",E,E,47,[[["self"],["r"]],["nonzerou16"]]],[11,"sample",E,E,47,[[["self"],["r"]],[R[1709]]]],[11,"sample",E,E,47,[[["self"],["r"]],["nonzerou64"]]],[11,"sample",E,E,47,[[["self"],["r"]],["nonzerou128"]]],[11,"sample",E,E,47,[[["self"],["r"]],[R[2023]]]],[11,"sample",E,E,47,[[["self"],["r"]],["char"]]],[11,"sample",E,E,41,[[["self"],["r"]],["char"]]],[11,"sample",E,E,47,[[["self"],["r"]],["bool"]]],[11,"sample",E,E,47,[[["self"],["r"]]]],[11,"sample",E,E,47,[[["self"],["r"]]]],[11,"sample",E,E,47,[[["self"],["r"]]]],[11,"sample",E,E,47,[[["self"],["r"]]]],[11,"sample",E,E,47,[[["self"],["r"]]]],[11,"sample",E,E,47,[[["self"],["r"]]]],[11,"sample",E,E,47,[[["self"],["r"]]]],[11,"sample",E,E,47,[[["self"],["r"]]]],[11,"sample",E,E,47,[[["self"],["r"]]]],[11,"sample",E,E,47,[[["self"],["r"]]]],[11,"sample",E,E,47,[[["self"],["r"]]]],[11,"sample",E,E,47,[[["self"],["r"]]]],[11,"sample",E,E,47,[[["self"],["r"]]]],[11,"sample",E,E,47,[[["self"],["r"]]]],[11,"sample",E,E,47,[[["self"],["r"]]]],[11,"sample",E,E,47,[[["self"],["r"]]]],[11,"sample",E,E,47,[[["self"],["r"]]]],[11,"sample",E,E,47,[[["self"],["r"]]]],[11,"sample",E,E,47,[[["self"],["r"]]]],[11,"sample",E,E,47,[[["self"],["r"]]]],[11,"sample",E,E,47,[[["self"],["r"]]]],[11,"sample",E,E,47,[[["self"],["r"]]]],[11,"sample",E,E,47,[[["self"],["r"]]]],[11,"sample",E,E,47,[[["self"],["r"]]]],[11,"sample",E,E,47,[[["self"],["r"]]]],[11,"sample",E,E,47,[[["self"],["r"]]]],[11,"sample",E,E,47,[[["self"],["r"]]]],[11,"sample",E,E,47,[[["self"],["r"]]]],[11,"sample",E,E,47,[[["self"],["r"]]]],[11,"sample",E,E,47,[[["self"],["r"]]]],[11,"sample",E,E,47,[[["self"],["r"]]]],[11,"sample",E,E,47,[[["self"],["r"]]]],[11,"sample",E,E,47,[[["self"],["r"]]]],[11,"sample",E,E,47,[[["self"],["r"]]]],[11,"sample",E,E,47,[[["self"],["r"]]]],[11,"sample",E,E,47,[[["self"],["r"]]]],[11,"sample",E,E,47,[[["self"],["r"]]]],[11,"sample",E,E,47,[[["self"],["r"]]]],[11,"sample",E,E,47,[[["self"],["r"]]]],[11,"sample",E,E,47,[[["self"],["r"]]]],[11,"sample",E,E,47,[[["self"],["r"]]]],[11,"sample",E,E,47,[[["self"],["r"]]]],[11,"sample",E,E,47,[[["self"],["r"]]]],[11,"sample",E,E,47,[[["self"],["r"]]]],[11,"sample",E,E,47,[[["self"],["r"]]]],[11,"sample",E,E,47,[[["self"],["r"]]]],[11,"sample",E,E,47,[[["self"],["r"]],[R[23]]]],[11,"sample",E,E,47,[[["self"],["r"]],["wrapping"]]],[11,"len",R[2864],E,54,[[["self"]],["usize"]]],[11,R[83],R[2854],E,32,[[],["self"]]],[11,R[83],E,E,52,[[],["threadrng"]]],[11,R[83],E,E,34,[[],["osrng"]]],[11,"clone",R[2858],E,6,[[["self"]],["uniform"]]],[11,"clone",E,E,48,[[["self"]],["uniformint"]]],[11,"clone",E,E,49,[[["self"]],["uniformfloat"]]],[11,"clone",E,E,50,[[["self"]],["uniformduration"]]],[11,"clone",R[1160],E,7,[[["self"]],[R[2848]]]],[11,"clone",E,E,2,[[["self"]],[R[2847]]]],[11,"clone",R[2859],E,10,[[["self"]],["self"]]],[11,"clone",R[2852],E,11,[[["self"]],[R[2853]]]],[11,"clone",E,E,8,[[["self"]],[R[2851]]]],[11,"clone",R[1160],E,12,[[["self"]],[R[2865]]]],[11,"clone",E,E,13,[[["self"]],["unitcircle"]]],[11,"clone",E,E,14,[[["self"]],["gamma"]]],[11,"clone",E,E,15,[[["self"]],["chisquared"]]],[11,"clone",E,E,16,[[["self"]],["fisherf"]]],[11,"clone",E,E,17,[[["self"]],["studentt"]]],[11,"clone",E,E,18,[[["self"]],["beta"]]],[11,"clone",E,E,44,[[["self"]],[R[1184]]]],[11,"clone",E,E,19,[[["self"]],["normal"]]],[11,"clone",E,E,20,[[["self"]],["lognormal"]]],[11,"clone",E,E,45,[[["self"]],["exp1"]]],[11,"clone",E,E,21,[[["self"]],["exp"]]],[11,"clone",E,E,22,[[["self"]],["pareto"]]],[11,"clone",E,E,23,[[["self"]],["poisson"]]],[11,"clone",E,E,24,[[["self"]],["binomial"]]],[11,"clone",E,E,25,[[["self"]],["cauchy"]]],[11,"clone",E,E,26,[[["self"]],["dirichlet"]]],[11,"clone",E,E,27,[[["self"]],["triangular"]]],[11,"clone",E,E,28,[[["self"]],["weibull"]]],[11,"clone",E,E,42,[[["self"]],["openclosed01"]]],[11,"clone",E,E,43,[[["self"]],["open01"]]],[11,"clone",E,E,47,[[["self"]],["standard"]]],[11,"clone",R[2860],E,31,[[["self"]],[R[1180]]]],[11,"clone",R[2861],E,33,[[["self"]],["steprng"]]],[11,"clone",R[2854],E,51,[[["self"]],["stdrng"]]],[11,"clone",E,E,52,[[["self"]],["threadrng"]]],[11,"clone",E,E,34,[[["self"]],["osrng"]]],[11,"clone",R[2862],E,35,[[["self"]],["indexvec"]]],[11,"clone",E,E,56,[[["self"]],[R[2866]]]],[11,"eq",R[1160],E,2,[[["self"],[R[2847]]],["bool"]]],[11,"eq",R[2852],E,8,[[["self"],[R[2851]]],["bool"]]],[11,"eq",R[2862],E,35,[[["self"],["indexvec"]],["bool"]]],[11,"from",R[2858],E,6,[[["range"]],["uniform"]]],[11,"from",E,E,6,[[["rangeinclusive"]],["uniform"]]],[11,"from",R[2862],E,35,[[["vec",["u32"]],["u32"]],["self"]]],[11,"from",E,E,35,[[["vec",["usize"]],["usize"]],["self"]]],[11,"next",R[1160],E,46,[[["self"]],[R[23]]]],[11,R[53],E,E,46,[[["self"]]]],[11,"next",R[2862],E,55,[[["self"]],[[R[23],["usize"]],["usize"]]]],[11,R[53],E,E,55,[[["self"]]]],[11,"next",E,E,56,[[["self"]],[R[23]]]],[11,R[53],E,E,56,[[["self"]]]],[11,"next",R[2864],E,54,[[["self"]],[R[23]]]],[11,R[53],E,E,54,[[["self"]]]],[11,"fmt",R[2858],E,6,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,48,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,49,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,50,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[1160],E,7,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,2,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[2859],E,10,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[2852],E,11,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,8,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[1160],E,12,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,13,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,14,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,15,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,16,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,17,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,18,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,44,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,19,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,20,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,45,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,21,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,22,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,23,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,24,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,25,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,26,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,27,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,28,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,42,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,43,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,41,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,46,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,47,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[2860],E,30,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,53,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,31,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[2854],E,32,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[2861],E,33,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[2854],E,51,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,52,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,34,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[2862],E,35,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,55,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,56,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[2864],E,54,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[2852],E,8,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[2860],E,53,[[["self"],[R[10]]],[R[3]]]],[11,R[157],R[2852],E,8,[[["self"]],["str"]]],[11,"cause",E,E,8,[[["self"]],[[R[23],["error"]],["error"]]]],[11,"source",R[2860],E,53,[[["self"]],[[R[23],["error"]],["error"]]]],[11,R[1178],E,E,30,[[["self"]],["u32"]]],[11,R[1179],E,E,30,[[["self"]],["u64"]]],[11,R[1176],E,E,30,[[["self"]]]],[11,R[1721],E,E,30,[[["self"]],[["error"],[R[3],["error"]]]]],[11,R[1178],E,E,31,[[["self"]],["u32"]]],[11,R[1179],E,E,31,[[["self"]],["u64"]]],[11,R[1176],E,E,31,[[["self"]]]],[11,R[1721],E,E,31,[[["self"]],[["error"],[R[3],["error"]]]]],[11,R[1178],R[2854],E,32,[[["self"]],["u32"]]],[11,R[1179],E,E,32,[[["self"]],["u64"]]],[11,R[1176],E,E,32,[[["self"]]]],[11,R[1721],E,E,32,[[["self"]],[["error"],[R[3],["error"]]]]],[11,R[1178],R[2861],E,33,[[["self"]],["u32"]]],[11,R[1179],E,E,33,[[["self"]],["u64"]]],[11,R[1176],E,E,33,[[["self"]]]],[11,R[1721],E,E,33,[[["self"]],[["error"],[R[3],["error"]]]]],[11,R[1178],R[2854],E,51,[[["self"]],["u32"]]],[11,R[1179],E,E,51,[[["self"]],["u64"]]],[11,R[1176],E,E,51,[[["self"]]]],[11,R[1721],E,E,51,[[["self"]],[["error"],[R[3],["error"]]]]],[11,R[1178],E,E,52,[[["self"]],["u32"]]],[11,R[1179],E,E,52,[[["self"]],["u64"]]],[11,R[1176],E,E,52,[[["self"]]]],[11,R[1721],E,E,52,[[["self"]],[["error"],[R[3],["error"]]]]],[11,R[1178],E,E,34,[[["self"]],["u32"]]],[11,R[1179],E,E,34,[[["self"]],["u64"]]],[11,R[1176],E,E,34,[[["self"]]]],[11,R[1721],E,E,34,[[["self"]],[["error"],[R[3],["error"]]]]],[11,R[1181],E,E,51,[[],["self"]]],[11,"from_rng",E,E,51,[[["rngcore"]],[["error"],[R[3],["error"]]]]],[11,"new","rand",R[2885],40,[[["e"]],["error"]]],[11,"inner",E,R[2886],40,[[["self"]],["error"]]],[11,"take_inner",E,R[2887],40,[[],[["error"],["box",["error"]]]]],[11,"code",E,R[2888],40,[[["self"]],[[R[1709]],[R[23],[R[1709]]]]]]],"p":[[8,"RngCore"],[8,R[1194]],[4,R[2867]],[8,R[2868]],[8,R[2869]],[8,R[2870]],[3,"Uniform"],[3,"Bernoulli"],[4,R[2871]],[8,"Weight"],[3,R[2849]],[3,R[2849]],[3,R[2872]],[3,"UnitCircle"],[3,"Gamma"],[3,"ChiSquared"],[3,"FisherF"],[3,"StudentT"],[3,"Beta"],[3,"Normal"],[3,"LogNormal"],[3,"Exp"],[3,"Pareto"],[3,"Poisson"],[3,"Binomial"],[3,"Cauchy"],[3,"Dirichlet"],[3,"Triangular"],[3,"Weibull"],[8,R[2873]],[3,"ReadRng"],[3,R[1191]],[3,"EntropyRng"],[3,"StepRng"],[3,"OsRng"],[4,"IndexVec"],[8,R[2874]],[8,R[2875]],[8,"Rng"],[8,R[2876]],[3,"Error"],[3,R[2877]],[3,R[2878]],[3,"Open01"],[3,R[1188]],[3,"Exp1"],[3,"DistIter"],[3,"Standard"],[3,"UniformInt"],[3,R[2879]],[3,R[2880]],[3,"StdRng"],[3,"ThreadRng"],[3,"ReadError"],[3,R[2881]],[4,R[2882]],[4,R[2883]]]};
searchIndex["rand_chacha"]={"doc":R[2049],"i":[[3,R[2064],"rand_chacha","ChaCha with 12 rounds",N,N],[3,R[2063],E,R[2050],N,N],[3,R[2065],E,R[2058],N,N],[3,R[2062],E,R[2050],N,N],[3,R[2066],E,"ChaCha with 8 rounds",N,N],[3,"ChaCha8Rng",E,R[2050],N,N],[11,R[2051],E,R[2052],0,[[["self"]],["u128"]]],[11,R[2053],E,R[2054],0,[[["self"],["u128"]]]],[11,R[2056],E,R[2055],0,[[["self"],["u64"]]]],[11,R[2051],E,R[2052],1,[[["self"]],["u128"]]],[11,R[2053],E,R[2054],1,[[["self"],["u128"]]]],[11,R[2056],E,R[2055],1,[[["self"],["u64"]]]],[11,R[2051],E,R[2052],2,[[["self"]],["u128"]]],[11,R[2053],E,R[2054],2,[[["self"],["u128"]]]],[11,R[2056],E,R[2055],2,[[["self"],["u64"]]]],[6,R[2057],E,R[2058],N,N],[6,"ChaChaCore",E,"ChaCha with 20 rounds, low-level interface",N,N],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[46],E,E,3,[[["self"]],[T]]],[11,R[47],E,E,3,[[["self"],[T]]]],[11,R[4],E,E,3,[[[U]],[R[3]]]],[11,R[5],E,E,3,[[],[R[3]]]],[11,R[7],E,E,3,[[["self"]],[T]]],[11,R[6],E,E,3,[[["self"]],[T]]],[11,R[8],E,E,3,[[["self"]],[R[9]]]],[11,"vzip",E,E,3,[[],["v"]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[46],E,E,1,[[["self"]],[T]]],[11,R[47],E,E,1,[[["self"],[T]]]],[11,R[4],E,E,1,[[[U]],[R[3]]]],[11,R[5],E,E,1,[[],[R[3]]]],[11,R[7],E,E,1,[[["self"]],[T]]],[11,R[6],E,E,1,[[["self"]],[T]]],[11,R[8],E,E,1,[[["self"]],[R[9]]]],[11,"vzip",E,E,1,[[],["v"]]],[11,"into",E,E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[46],E,E,4,[[["self"]],[T]]],[11,R[47],E,E,4,[[["self"],[T]]]],[11,R[4],E,E,4,[[[U]],[R[3]]]],[11,R[5],E,E,4,[[],[R[3]]]],[11,R[7],E,E,4,[[["self"]],[T]]],[11,R[6],E,E,4,[[["self"]],[T]]],[11,R[8],E,E,4,[[["self"]],[R[9]]]],[11,"vzip",E,E,4,[[],["v"]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[46],E,E,0,[[["self"]],[T]]],[11,R[47],E,E,0,[[["self"],[T]]]],[11,R[4],E,E,0,[[[U]],[R[3]]]],[11,R[5],E,E,0,[[],[R[3]]]],[11,R[7],E,E,0,[[["self"]],[T]]],[11,R[6],E,E,0,[[["self"]],[T]]],[11,R[8],E,E,0,[[["self"]],[R[9]]]],[11,"vzip",E,E,0,[[],["v"]]],[11,"into",E,E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[46],E,E,5,[[["self"]],[T]]],[11,R[47],E,E,5,[[["self"],[T]]]],[11,R[4],E,E,5,[[[U]],[R[3]]]],[11,R[5],E,E,5,[[],[R[3]]]],[11,R[7],E,E,5,[[["self"]],[T]]],[11,R[6],E,E,5,[[["self"]],[T]]],[11,R[8],E,E,5,[[["self"]],[R[9]]]],[11,"vzip",E,E,5,[[],["v"]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[46],E,E,2,[[["self"]],[T]]],[11,R[47],E,E,2,[[["self"],[T]]]],[11,R[4],E,E,2,[[[U]],[R[3]]]],[11,R[5],E,E,2,[[],[R[3]]]],[11,R[7],E,E,2,[[["self"]],[T]]],[11,R[6],E,E,2,[[["self"]],[T]]],[11,R[8],E,E,2,[[["self"]],[R[9]]]],[11,"vzip",E,E,2,[[],["v"]]],[11,"clone",E,E,4,[[["self"]],[R[2059]]]],[11,"clone",E,E,0,[[["self"]],["chacha20rng"]]],[11,"clone",E,E,3,[[["self"]],[R[2060]]]],[11,"clone",E,E,1,[[["self"]],["chacha12rng"]]],[11,"clone",E,E,5,[[["self"]],[R[2061]]]],[11,"clone",E,E,2,[[["self"]],["chacha8rng"]]],[11,"from",E,E,0,[[[R[2059]]],["self"]]],[11,"from",E,E,1,[[[R[2060]]],["self"]]],[11,"from",E,E,2,[[[R[2061]]],["self"]]],[11,"fmt",E,E,4,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,0,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,3,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,1,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,5,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,2,[[["self"],[R[10]]],[R[3]]]],[11,R[4714],E,E,4,[[["self"]]]],[11,R[4714],E,E,3,[[["self"]]]],[11,R[4714],E,E,5,[[["self"]]]],[11,R[1178],E,E,0,[[["self"]],["u32"]]],[11,R[1179],E,E,0,[[["self"]],["u64"]]],[11,R[1176],E,E,0,[[["self"]]]],[11,R[1721],E,E,0,[[["self"]],[[R[3],["error"]],["error"]]]],[11,R[1178],E,E,1,[[["self"]],["u32"]]],[11,R[1179],E,E,1,[[["self"]],["u64"]]],[11,R[1176],E,E,1,[[["self"]]]],[11,R[1721],E,E,1,[[["self"]],[[R[3],["error"]],["error"]]]],[11,R[1178],E,E,2,[[["self"]],["u32"]]],[11,R[1179],E,E,2,[[["self"]],["u64"]]],[11,R[1176],E,E,2,[[["self"]]]],[11,R[1721],E,E,2,[[["self"]],[[R[3],["error"]],["error"]]]],[11,R[1181],E,E,4,[[],["self"]]],[11,R[1181],E,E,0,[[],["self"]]],[11,R[1181],E,E,3,[[],["self"]]],[11,R[1181],E,E,1,[[],["self"]]],[11,R[1181],E,E,5,[[],["self"]]],[11,R[1181],E,E,2,[[],["self"]]]],"p":[[3,R[2062]],[3,R[2063]],[3,"ChaCha8Rng"],[3,R[2064]],[3,R[2065]],[3,R[2066]]]};
searchIndex["rand_core"]={"doc":"Random number generation traits","i":[[3,"Error",R[1718],R[2884],N,N],[11,"new",E,R[2885],0,[[["e"]],["self"]]],[11,"inner",E,R[2886],0,[[["self"]],["error"]]],[11,"take_inner",E,R[2887],0,[[],[["box",["error"]],["error"]]]],[11,"code",E,R[2888],0,[[["self"]],[[R[1709]],[R[23],[R[1709]]]]]],[0,"block",E,"The `BlockRngCore` trait and implementation helpers",N,N],[3,"BlockRng",R[1720],R[1710],N,N],[12,"core",E,R[1711],1,N],[3,"BlockRng64",E,R[1710],N,N],[12,"core",E,R[1711],2,N],[8,R[1723],E,"A trait for RNGs which do not generate random numbers…",N,N],[16,"Item",E,"Results element type, e.g. `u32`.",3,N],[16,"Results",E,"Results type. This is the 'block' an RNG implementing…",3,N],[10,R[4714],E,"Generate a new block of results.",3,[[["self"]]]],[11,"new",E,R[1712],1,[[["r"]],["blockrng"]]],[11,"index",E,R[1713],1,[[["self"]],["usize"]]],[11,"reset",E,R[1714],1,[[["self"]]]],[11,R[1715],E,R[1716],1,[[["self"],["usize"]]]],[11,"new",E,R[1712],2,[[["r"]],["blockrng64"]]],[11,"index",E,R[1713],2,[[["self"]],["usize"]]],[11,"reset",E,R[1714],2,[[["self"]]]],[11,R[1715],E,R[1716],2,[[["self"],["usize"]]]],[0,"impls",R[1718],"Helper functions for implementing `RngCore` functions.",N,N],[5,"next_u64_via_u32","rand_core::impls","Implement `next_u64` via `next_u32`, little-endian order.",N,[[["r"]],["u64"]]],[5,"fill_bytes_via_next",E,"Implement `fill_bytes` via `next_u64` and `next_u32`,…",N,[[["r"]]]],[5,"fill_via_u32_chunks",E,R[1717],N,[[]]],[5,"fill_via_u64_chunks",E,R[1717],N,[[]]],[5,"next_u32_via_fill",E,"Implement `next_u32` via `fill_bytes`, little-endian order.",N,[[["r"]],["u32"]]],[5,"next_u64_via_fill",E,"Implement `next_u64` via `fill_bytes`, little-endian order.",N,[[["r"]],["u64"]]],[0,"le",R[1718],"Little-Endian utilities",N,N],[5,R[873],"rand_core::le","Reads unsigned 32 bit integers from `src` into `dst`.…",N,[[]]],[5,R[874],E,"Reads unsigned 64 bit integers from `src` into `dst`.…",N,[[]]],[8,"RngCore",R[1718],R[2889],N,N],[10,R[1178],E,R[2890],4,[[["self"]],["u32"]]],[10,R[1179],E,R[2891],4,[[["self"]],["u64"]]],[10,R[1176],E,R[1719],4,[[["self"]]]],[10,R[1721],E,R[2892],4,[[["self"]],[[R[3],["error"]],["error"]]]],[8,"CryptoRng",E,R[2893],N,N],[8,R[1194],E,R[2894],N,N],[16,"Seed",E,R[2895],5,N],[10,R[1181],E,R[2896],5,[[],["self"]]],[11,R[1722],E,R[2897],5,[[["u64"]],["self"]]],[11,"from_rng",E,R[2898],5,[[["rngcore"]],[[R[3],["error"]],["error"]]]],[11,R[2899],E,R[2900],5,[[],["self"]]],[11,"into",E,E,0,[[],[U]]],[11,R[113],E,E,0,[[["self"]],["string"]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[4],E,E,0,[[[U]],[R[3]]]],[11,R[5],E,E,0,[[],[R[3]]]],[11,R[7],E,E,0,[[["self"]],[T]]],[11,R[6],E,E,0,[[["self"]],[T]]],[11,R[8],E,E,0,[[["self"]],[R[9]]]],[11,"into",R[1720],E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[46],E,E,1,[[["self"]],[T]]],[11,R[47],E,E,1,[[["self"],[T]]]],[11,R[4],E,E,1,[[[U]],[R[3]]]],[11,R[5],E,E,1,[[],[R[3]]]],[11,R[7],E,E,1,[[["self"]],[T]]],[11,R[6],E,E,1,[[["self"]],[T]]],[11,R[8],E,E,1,[[["self"]],[R[9]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[46],E,E,2,[[["self"]],[T]]],[11,R[47],E,E,2,[[["self"],[T]]]],[11,R[4],E,E,2,[[[U]],[R[3]]]],[11,R[5],E,E,2,[[],[R[3]]]],[11,R[7],E,E,2,[[["self"]],[T]]],[11,R[6],E,E,2,[[["self"]],[T]]],[11,R[8],E,E,2,[[["self"]],[R[9]]]],[11,R[1178],E,E,1,[[["self"]],["u32"]]],[11,R[1179],E,E,1,[[["self"]],["u64"]]],[11,R[1176],E,E,1,[[["self"]]]],[11,R[1721],E,E,1,[[["self"]],[[R[3],["error"]],["error"]]]],[11,R[1178],E,E,2,[[["self"]],["u32"]]],[11,R[1179],E,E,2,[[["self"]],["u64"]]],[11,R[1176],E,E,2,[[["self"]]]],[11,R[1721],E,E,2,[[["self"]],[[R[3],["error"]],["error"]]]],[11,R[1181],E,E,1,[[],["self"]]],[11,R[1722],E,E,1,[[["u64"]],["self"]]],[11,"from_rng",E,E,1,[[["rngcore"]],[[R[3],["error"]],["error"]]]],[11,R[1181],E,E,2,[[],["self"]]],[11,R[1722],E,E,2,[[["u64"]],["self"]]],[11,"from_rng",E,E,2,[[["rngcore"]],[[R[3],["error"]],["error"]]]],[11,"clone",E,E,1,[[["self"]],["blockrng"]]],[11,"clone",E,E,2,[[["self"]],["blockrng64"]]],[11,"from",R[1718],E,0,[[[R[1709]]],["self"]]],[11,"from",E,E,0,[[["error"]],["self"]]],[11,"fmt",E,E,0,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[1720],E,1,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,2,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[1718],E,0,[[["self"],[R[10]]],[R[3]]]],[11,"source",E,E,0,[[["self"]],[[R[23],["error"]],["error"]]]],[11,"read",E,E,4,[[["self"]],[["error"],["usize"],[R[3],["usize","error"]]]]]],"p":[[3,"Error"],[3,"BlockRng"],[3,"BlockRng64"],[8,R[1723]],[8,"RngCore"],[8,R[1194]]]};
searchIndex["raw_cpuid"]={"doc":E,"i":[[3,"CpuId","raw_cpuid","Main type used to query for information about the CPU…",N,N],[3,R[1880],E,"Low-level data-structure to store result of cpuid…",N,N],[12,"eax",E,"Return value EAX register",0,N],[12,"ebx",E,"Return value EBX register",0,N],[12,"ecx",E,"Return value ECX register",0,N],[12,"edx",E,"Return value EDX register",0,N],[3,"VendorInfo",E,E,N,N],[3,R[1906],E,"Used to iterate over cache information contained in cpuid…",N,N],[3,"CacheInfo",E,"Describes any kind of cache (TLB, Data and Instruction…",N,N],[12,"num",E,"Number as retrieved from cpuid",1,N],[12,"typ",E,"Cache type",1,N],[3,R[1886],E,E,N,N],[3,R[1887],E,E,N,N],[3,R[1907],E,E,N,N],[3,R[1888],E,E,N,N],[3,R[1889],E,E,N,N],[3,R[1890],E,E,N,N],[3,R[1891],E,E,N,N],[3,R[1892],E,E,N,N],[3,R[1893],E,E,N,N],[3,R[1908],E,E,N,N],[3,R[1894],E,E,N,N],[3,R[1895],E,E,N,N],[3,R[1909],E,E,N,N],[3,R[1881],E,E,N,N],[12,"subleaf",E,E,2,N],[3,R[1896],E,E,N,N],[3,R[1897],E,E,N,N],[3,R[1898],E,E,N,N],[3,"L3CatInfo",E,"L3 Cache Allocation Technology Enumeration Sub-leaf (EAX =…",N,N],[3,"L2CatInfo",E,"L2 Cache Allocation Technology Enumeration Sub-leaf (EAX =…",N,N],[3,R[1899],E,"Memory Bandwidth Allocation Enumeration Sub-leaf (EAX =…",N,N],[3,"SgxInfo",E,"Intel SGX Capability Enumeration Leaf, sub-leaf 0 (EAX =…",N,N],[3,R[1910],E,"Iterator over the SGX sub-leafs (ECX >= 2).",N,N],[3,"EpcSection",E,"EBX:EAX and EDX:ECX provide information on the Enclave…",N,N],[3,R[1900],E,E,N,N],[3,"TscInfo",E,"Time Stamp Counter and Nominal Core Crystal Clock…",N,N],[3,R[1901],E,"Processor Frequency Information",N,N],[3,"DatIter",E,"Deterministic Address Translation Structure Iterator",N,N],[3,"DatInfo",E,"Deterministic Address Translation Structure",N,N],[3,R[1902],E,E,N,N],[3,R[1911],E,E,N,N],[3,R[1903],E,E,N,N],[3,R[1904],E,"Information about Hypervisor…",N,N],[3,R[1905],E,E,N,N],[4,R[1882],E,E,N,N],[13,"GENERAL",E,E,3,N],[13,"CACHE",E,E,3,N],[13,"TLB",E,E,3,N],[13,"STLB",E,E,3,N],[13,"DTLB",E,E,3,N],[13,"PREFETCH",E,E,3,N],[4,"CacheType",E,E,N,N],[13,"NULL",E,"Null - No more caches",4,N],[13,"DATA",E,E,4,N],[13,"INSTRUCTION",E,E,4,N],[13,"UNIFIED",E,E,4,N],[13,"RESERVED",E,"4-31 = Reserved",4,N],[4,R[1883],E,E,N,N],[13,"INVALID",E,E,5,N],[13,"SMT",E,"Hyper-thread (Simultaneous multithreading)",5,N],[13,"CORE",E,E,5,N],[4,R[1884],E,"Intel SGX EPC Enumeration Leaf, sub-leaves (EAX = 12H, ECX…",N,N],[13,"Epc",E,E,6,N],[4,"DatType",E,"Deterministic Address Translation cache type (EDX bits 04…",N,N],[13,"Null",E,"Null (indicates this sub-leaf is not valid).",7,N],[13,"DataTLB",E,E,7,N],[13,"InstructionTLB",E,E,7,N],[13,"UnifiedTLB",E,"Some unified TLBs will allow a single TLB entry to satisfy…",7,N],[13,"Unknown",E,E,7,N],[4,"Hypervisor",E,"Identifies the different Hypervisor products.",N,N],[13,"Xen",E,E,8,N],[13,"VMware",E,E,8,N],[13,"HyperV",E,E,8,N],[13,"KVM",E,E,8,N],[13,"Unknown",E,E,8,N],[4,R[1885],E,E,N,N],[13,"Disabled",E,E,9,N],[13,"DirectMapped",E,E,9,N],[13,"TwoWay",E,E,9,N],[13,"FourWay",E,E,9,N],[13,"EightWay",E,E,9,N],[13,"SixteenWay",E,E,9,N],[13,"FullyAssiciative",E,E,9,N],[13,"Unknown",E,E,9,N],[0,"native_cpuid",E,"Uses Rust's `cpuid` function from the `arch` module.",N,N],[5,"cpuid_count","raw_cpuid::native_cpuid",E,N,[[["u32"]],[R[1873]]]],[17,"CACHE_INFO_TABLE","raw_cpuid","This table is taken from Intel manual (Section CPUID…",N,N],[11,"new",E,"Return new CPUID struct.",10,[[],["cpuid"]]],[11,"get_vendor_info",E,"Return information about vendor. This is typically a ASCII…",10,[[["self"]],[[R[23],[R[1874]]],[R[1874]]]]],[11,"get_feature_info",E,"Query a set of features that are available on this CPU.",10,[[["self"]],[[R[23],[R[1834]]],[R[1834]]]]],[11,"get_cache_info",E,"Query basic information about caches. This will just…",10,[[["self"]],[[R[23],[R[1835]]],[R[1835]]]]],[11,"get_processor_serial",E,"Retrieve serial number of processor.",10,[[["self"]],[[R[23],[R[1836]]],[R[1836]]]]],[11,"get_cache_parameters",E,"Retrieve more elaborate information about caches (as…",10,[[["self"]],[[R[1837]],[R[23],[R[1837]]]]]],[11,"get_monitor_mwait_info",E,"Information about how monitor/mwait works on this CPU.",10,[[["self"]],[[R[23],[R[1838]]],[R[1838]]]]],[11,"get_thermal_power_info",E,"Query information about thermal and power management…",10,[[["self"]],[[R[23],[R[1839]]],[R[1839]]]]],[11,"get_extended_feature_info",E,"Find out about more features supported by this CPU.",10,[[["self"]],[[R[23],[R[1840]]],[R[1840]]]]],[11,"get_direct_cache_access_info",E,"Direct cache access info.",10,[[["self"]],[[R[23],[R[1841]]],[R[1841]]]]],[11,"get_performance_monitoring_info",E,"Info about performance monitoring (how many counters etc.).",10,[[["self"]],[[R[1842]],[R[23],[R[1842]]]]]],[11,"get_extended_topology_info",E,"Information about topology (how many cores and what kind…",10,[[["self"]],[[R[23],[R[1843]]],[R[1843]]]]],[11,"get_extended_state_info",E,"Information for saving/restoring extended register state.",10,[[["self"]],[[R[23],[R[1844]]],[R[1844]]]]],[11,"get_rdt_monitoring_info",E,"Quality of service informations.",10,[[["self"]],[[R[1845]],[R[23],[R[1845]]]]]],[11,"get_rdt_allocation_info",E,"Quality of service enforcement information.",10,[[["self"]],[[R[23],[R[1846]]],[R[1846]]]]],[11,"get_sgx_info",E,E,10,[[["self"]],[[R[23],["sgxinfo"]],["sgxinfo"]]]],[11,"get_processor_trace_info",E,"Intel Processor Trace Enumeration Information.",10,[[["self"]],[[R[1847]],[R[23],[R[1847]]]]]],[11,"get_tsc_info",E,"Time Stamp Counter/Core Crystal Clock Information.",10,[[["self"]],[["tscinfo"],[R[23],["tscinfo"]]]]],[11,"get_processor_frequency_info",E,"Processor Frequency Information.",10,[[["self"]],[[R[23],[R[1848]]],[R[1848]]]]],[11,"deterministic_address_translation_info",E,E,10,[[["self"]],[[R[23],["datiter"]],["datiter"]]]],[11,"get_soc_vendor_info",E,E,10,[[["self"]],[[R[1849]],[R[23],[R[1849]]]]]],[11,"get_hypervisor_info",E,E,10,[[["self"]],[[R[1850]],[R[23],[R[1850]]]]]],[11,"get_extended_function_info",E,"Extended functionality of CPU described here (including…",10,[[["self"]],[[R[1851]],[R[23],[R[1851]]]]]],[11,"as_string",E,"Return vendor identification as human readable string.",11,[[["self"]],["str"]]],[11,"desc",E,"Description of the cache (from Intel Manual)",1,[[["self"]],["str"]]],[11,"serial_lower",E,"Bits 00-31 of 96 bit processor serial number. (Available…",12,[[["self"]],["u32"]]],[11,"serial_middle",E,"Bits 32-63 of 96 bit processor serial number. (Available…",12,[[["self"]],["u32"]]],[11,"extended_family_id",E,"Version Information: Extended Family",13,[[["self"]],["u8"]]],[11,"extended_model_id",E,"Version Information: Extended Model",13,[[["self"]],["u8"]]],[11,"family_id",E,"Version Information: Family",13,[[["self"]],["u8"]]],[11,"model_id",E,"Version Information: Model",13,[[["self"]],["u8"]]],[11,"stepping_id",E,"Version Information: Stepping ID",13,[[["self"]],["u8"]]],[11,"brand_index",E,"Brand Index",13,[[["self"]],["u8"]]],[11,"cflush_cache_line_size",E,"CLFLUSH line size (Value ∗ 8 = cache line size in bytes)",13,[[["self"]],["u8"]]],[11,"initial_local_apic_id",E,"Initial APIC ID",13,[[["self"]],["u8"]]],[11,"max_logical_processor_ids",E,R[1853],13,[[["self"]],["u8"]]],[11,"has_sse3",E,"Streaming SIMD Extensions 3 (SSE3). A value of 1 indicates…",13,[[["self"]],["bool"]]],[11,"has_pclmulqdq",E,"PCLMULQDQ. A value of 1 indicates the processor supports…",13,[[["self"]],["bool"]]],[11,"has_ds_area",E,"64-bit DS Area. A value of 1 indicates the processor…",13,[[["self"]],["bool"]]],[11,"has_monitor_mwait",E,"MONITOR/MWAIT. A value of 1 indicates the processor…",13,[[["self"]],["bool"]]],[11,"has_cpl",E,"CPL Qualified Debug Store. A value of 1 indicates the…",13,[[["self"]],["bool"]]],[11,"has_vmx",E,"Virtual Machine Extensions. A value of 1 indicates that…",13,[[["self"]],["bool"]]],[11,"has_smx",E,"Safer Mode Extensions. A value of 1 indicates that the…",13,[[["self"]],["bool"]]],[11,"has_eist",E,"Enhanced Intel SpeedStep® technology. A value of 1…",13,[[["self"]],["bool"]]],[11,"has_tm2",E,"Thermal Monitor 2. A value of 1 indicates whether the…",13,[[["self"]],["bool"]]],[11,"has_ssse3",E,"A value of 1 indicates the presence of the Supplemental…",13,[[["self"]],["bool"]]],[11,"has_cnxtid",E,"L1 Context ID. A value of 1 indicates the L1 data cache…",13,[[["self"]],["bool"]]],[11,"has_fma",E,"A value of 1 indicates the processor supports FMA…",13,[[["self"]],["bool"]]],[11,"has_cmpxchg16b",E,"CMPXCHG16B Available. A value of 1 indicates that the…",13,[[["self"]],["bool"]]],[11,"has_pdcm",E,"Perfmon and Debug Capability: A value of 1 indicates the…",13,[[["self"]],["bool"]]],[11,"has_pcid",E,"Process-context identifiers. A value of 1 indicates that…",13,[[["self"]],["bool"]]],[11,"has_dca",E,"A value of 1 indicates the processor supports the ability…",13,[[["self"]],["bool"]]],[11,"has_sse41",E,"A value of 1 indicates that the processor supports SSE4.1.",13,[[["self"]],["bool"]]],[11,"has_sse42",E,"A value of 1 indicates that the processor supports SSE4.2.",13,[[["self"]],["bool"]]],[11,"has_x2apic",E,"A value of 1 indicates that the processor supports x2APIC…",13,[[["self"]],["bool"]]],[11,"has_movbe",E,"A value of 1 indicates that the processor supports MOVBE…",13,[[["self"]],["bool"]]],[11,"has_popcnt",E,R[1852],13,[[["self"]],["bool"]]],[11,"has_tsc_deadline",E,"A value of 1 indicates that the processors local APIC…",13,[[["self"]],["bool"]]],[11,"has_aesni",E,R[1852],13,[[["self"]],["bool"]]],[11,"has_xsave",E,R[1852],13,[[["self"]],["bool"]]],[11,"has_oxsave",E,"A value of 1 indicates that the OS has enabled…",13,[[["self"]],["bool"]]],[11,"has_avx",E,"A value of 1 indicates the processor supports the AVX…",13,[[["self"]],["bool"]]],[11,"has_f16c",E,"A value of 1 indicates that processor supports 16-bit…",13,[[["self"]],["bool"]]],[11,"has_rdrand",E,"A value of 1 indicates that processor supports RDRAND…",13,[[["self"]],["bool"]]],[11,"has_fpu",E,"Floating Point Unit On-Chip. The processor contains an x87…",13,[[["self"]],["bool"]]],[11,"has_vme",E,"Virtual 8086 Mode Enhancements. Virtual 8086 mode…",13,[[["self"]],["bool"]]],[11,"has_de",E,"Debugging Extensions. Support for I/O breakpoints,…",13,[[["self"]],["bool"]]],[11,"has_pse",E,"Page Size Extension. Large pages of size 4 MByte are…",13,[[["self"]],["bool"]]],[11,"has_tsc",E,"Time Stamp Counter. The RDTSC instruction is supported,…",13,[[["self"]],["bool"]]],[11,"has_msr",E,"Model Specific Registers RDMSR and WRMSR Instructions. The…",13,[[["self"]],["bool"]]],[11,"has_pae",E,"Physical Address Extension. Physical addresses greater…",13,[[["self"]],["bool"]]],[11,"has_mce",E,"Machine Check Exception. Exception 18 is defined for…",13,[[["self"]],["bool"]]],[11,"has_cmpxchg8b",E,"CMPXCHG8B Instruction. The compare-and-exchange 8 bytes…",13,[[["self"]],["bool"]]],[11,"has_apic",E,"APIC On-Chip. The processor contains an Advanced…",13,[[["self"]],["bool"]]],[11,"has_sysenter_sysexit",E,"SYSENTER and SYSEXIT Instructions. The SYSENTER and…",13,[[["self"]],["bool"]]],[11,"has_mtrr",E,"Memory Type Range Registers. MTRRs are supported. The…",13,[[["self"]],["bool"]]],[11,"has_pge",E,"Page Global Bit. The global bit is supported in…",13,[[["self"]],["bool"]]],[11,"has_mca",E,"Machine Check Architecture. A value of 1 indicates the…",13,[[["self"]],["bool"]]],[11,"has_cmov",E,"Conditional Move Instructions. The conditional move…",13,[[["self"]],["bool"]]],[11,"has_pat",E,"Page Attribute Table. Page Attribute Table is supported.…",13,[[["self"]],["bool"]]],[11,"has_pse36",E,"36-Bit Page Size Extension. 4-MByte pages addressing…",13,[[["self"]],["bool"]]],[11,"has_psn",E,"Processor Serial Number. The processor supports the 96-bit…",13,[[["self"]],["bool"]]],[11,"has_clflush",E,"CLFLUSH Instruction. CLFLUSH Instruction is supported.",13,[[["self"]],["bool"]]],[11,"has_ds",E,"Debug Store. The processor supports the ability to write…",13,[[["self"]],["bool"]]],[11,"has_acpi",E,"Thermal Monitor and Software Controlled Clock Facilities.…",13,[[["self"]],["bool"]]],[11,"has_mmx",E,"Intel MMX Technology. The processor supports the Intel MMX…",13,[[["self"]],["bool"]]],[11,"has_fxsave_fxstor",E,"FXSAVE and FXRSTOR Instructions. The FXSAVE and FXRSTOR…",13,[[["self"]],["bool"]]],[11,"has_sse",E,"SSE. The processor supports the SSE extensions.",13,[[["self"]],["bool"]]],[11,"has_sse2",E,"SSE2. The processor supports the SSE2 extensions.",13,[[["self"]],["bool"]]],[11,"has_ss",E,"Self Snoop. The processor supports the management of…",13,[[["self"]],["bool"]]],[11,"has_htt",E,"Max APIC IDs reserved field is Valid. A value of 0 for HTT…",13,[[["self"]],["bool"]]],[11,"has_tm",E,"Thermal Monitor. The processor implements the thermal…",13,[[["self"]],["bool"]]],[11,"has_pbe",E,"Pending Break Enable. The processor supports the use of…",13,[[["self"]],["bool"]]],[11,"cache_type",E,"Cache Type",14,[[["self"]],["cachetype"]]],[11,"level",E,"Cache Level (starts at 1)",14,[[["self"]],["u8"]]],[11,"is_self_initializing",E,"Self Initializing cache level (does not need SW…",14,[[["self"]],["bool"]]],[11,R[1864],E,"Fully Associative cache",14,[[["self"]],["bool"]]],[11,"max_cores_for_cache",E,R[1853],14,[[["self"]],["usize"]]],[11,"max_cores_for_package",E,"Maximum number of addressable IDs for processor cores in…",14,[[["self"]],["usize"]]],[11,"coherency_line_size",E,"System Coherency Line Size (Bits 11-00)",14,[[["self"]],["usize"]]],[11,"physical_line_partitions",E,"Physical Line partitions (Bits 21-12)",14,[[["self"]],["usize"]]],[11,"associativity",E,"Ways of associativity (Bits 31-22)",14,[[["self"]],["usize"]]],[11,"sets",E,"Number of Sets (Bits 31-00)",14,[[["self"]],["usize"]]],[11,"is_write_back_invalidate",E,"Write-Back Invalidate/Invalidate (Bit 0) False:…",14,[[["self"]],["bool"]]],[11,"is_inclusive",E,"Cache Inclusiveness (Bit 1) False: Cache is not inclusive…",14,[[["self"]],["bool"]]],[11,"has_complex_indexing",E,"Complex Cache Indexing (Bit 2) False: Direct mapped cache.…",14,[[["self"]],["bool"]]],[11,"smallest_monitor_line",E,"Smallest monitor-line size in bytes (default is…",15,[[["self"]],["u16"]]],[11,"largest_monitor_line",E,"Largest monitor-line size in bytes (default is processor's…",15,[[["self"]],["u16"]]],[11,"extensions_supported",E,"Enumeration of Monitor-Mwait extensions (beyond EAX and…",15,[[["self"]],["bool"]]],[11,"interrupts_as_break_event",E,"Supports treating interrupts as break-event for MWAIT,…",15,[[["self"]],["bool"]]],[11,"supported_c0_states",E,"Number of C0 sub C-states supported using MWAIT (Bits 03 -…",15,[[["self"]],["u16"]]],[11,"supported_c1_states",E,"Number of C1 sub C-states supported using MWAIT (Bits 07 -…",15,[[["self"]],["u16"]]],[11,"supported_c2_states",E,"Number of C2 sub C-states supported using MWAIT (Bits 11 -…",15,[[["self"]],["u16"]]],[11,"supported_c3_states",E,"Number of C3 sub C-states supported using MWAIT (Bits 15 -…",15,[[["self"]],["u16"]]],[11,"supported_c4_states",E,"Number of C4 sub C-states supported using MWAIT (Bits 19 -…",15,[[["self"]],["u16"]]],[11,"supported_c5_states",E,"Number of C5 sub C-states supported using MWAIT (Bits 23 -…",15,[[["self"]],["u16"]]],[11,"supported_c6_states",E,"Number of C6 sub C-states supported using MWAIT (Bits 27 -…",15,[[["self"]],["u16"]]],[11,"supported_c7_states",E,"Number of C7 sub C-states supported using MWAIT (Bits 31 -…",15,[[["self"]],["u16"]]],[11,"dts_irq_threshold",E,"Number of Interrupt Thresholds in Digital Thermal Sensor",16,[[["self"]],["u8"]]],[11,"has_dts",E,"Digital temperature sensor is supported if set.",16,[[["self"]],["bool"]]],[11,"has_turbo_boost",E,"Intel Turbo Boost Technology Available (see description of…",16,[[["self"]],["bool"]]],[11,"has_arat",E,"ARAT. APIC-Timer-always-running feature is supported if set.",16,[[["self"]],["bool"]]],[11,"has_pln",E,"PLN. Power limit notification controls are supported if set.",16,[[["self"]],["bool"]]],[11,"has_ecmd",E,"ECMD. Clock modulation duty cycle extension is supported…",16,[[["self"]],["bool"]]],[11,"has_ptm",E,"PTM. Package thermal management is supported if set.",16,[[["self"]],["bool"]]],[11,"has_hwp",E,"HWP. HWP base registers (IA32_PM_ENABLE[bit 0],…",16,[[["self"]],["bool"]]],[11,"has_hwp_notification",E,"HWP Notification. IA32_HWP_INTERRUPT MSR is supported if…",16,[[["self"]],["bool"]]],[11,"has_hwp_activity_window",E,"HWP Activity Window. IA32_HWP_REQUEST[bits 41:32] is…",16,[[["self"]],["bool"]]],[11,"has_hwp_energy_performance_preference",E,"HWP Energy Performance Preference. IA32_HWP_REQUEST[bits…",16,[[["self"]],["bool"]]],[11,"has_hwp_package_level_request",E,"HWP Package Level Request. IA32_HWP_REQUEST_PKG MSR is…",16,[[["self"]],["bool"]]],[11,"has_hdc",E,"HDC. HDC base registers IA32_PKG_HDC_CTL, IA32_PM_CTL1,…",16,[[["self"]],["bool"]]],[11,"has_turbo_boost3",E,"Intel® Turbo Boost Max Technology 3.0 available.",16,[[["self"]],["bool"]]],[11,"has_hwp_capabilities",E,"HWP Capabilities. Highest Performance change is supported…",16,[[["self"]],["bool"]]],[11,"has_hwp_peci_override",E,"HWP PECI override is supported if set.",16,[[["self"]],["bool"]]],[11,"has_flexible_hwp",E,"Flexible HWP is supported if set.",16,[[["self"]],["bool"]]],[11,"has_hwp_fast_access_mode",E,"Fast access mode for the IA32_HWP_REQUEST MSR is supported…",16,[[["self"]],["bool"]]],[11,"has_ignore_idle_processor_hwp_request",E,"Ignoring Idle Logical Processor HWP request is supported…",16,[[["self"]],["bool"]]],[11,"has_hw_coord_feedback",E,"Hardware Coordination Feedback Capability (Presence of…",16,[[["self"]],["bool"]]],[11,"has_energy_bias_pref",E,"The processor supports performance-energy bias preference…",16,[[["self"]],["bool"]]],[11,"has_fsgsbase",E,"FSGSBASE. Supports RDFSBASE/RDGSBASE/WRFSBASE/WRGSBASE if 1.",17,[[["self"]],["bool"]]],[11,"has_tsc_adjust_msr",E,"IA32_TSC_ADJUST MSR is supported if 1.",17,[[["self"]],["bool"]]],[11,"has_bmi1",E,"BMI1",17,[[["self"]],["bool"]]],[11,"has_hle",E,"HLE",17,[[["self"]],["bool"]]],[11,"has_avx2",E,"AVX2",17,[[["self"]],["bool"]]],[11,"has_fdp",E,"FDP_EXCPTN_ONLY. x87 FPU Data Pointer updated only on x87…",17,[[["self"]],["bool"]]],[11,"has_smep",E,"SMEP. Supports Supervisor-Mode Execution Prevention if 1.",17,[[["self"]],["bool"]]],[11,"has_bmi2",E,"BMI2",17,[[["self"]],["bool"]]],[11,"has_rep_movsb_stosb",E,"Supports Enhanced REP MOVSB/STOSB if 1.",17,[[["self"]],["bool"]]],[11,"has_invpcid",E,"INVPCID. If 1, supports INVPCID instruction for system…",17,[[["self"]],["bool"]]],[11,"has_rtm",E,"RTM",17,[[["self"]],["bool"]]],[11,"has_rdtm",E,R[1854],17,[[["self"]],["bool"]]],[11,"has_fpu_cs_ds_deprecated",E,"Deprecates FPU CS and FPU DS values if 1.",17,[[["self"]],["bool"]]],[11,"has_mpx",E,"MPX. Supports Intel Memory Protection Extensions if 1.",17,[[["self"]],["bool"]]],[11,"has_rdta",E,R[1854],17,[[["self"]],["bool"]]],[11,"has_rdseed",E,"Supports RDSEED.",17,[[["self"]],["bool"]]],[11,"has_rdseet",E,"Supports RDSEED (deprecated alias).",17,[[["self"]],["bool"]]],[11,"has_adx",E,"Supports ADX.",17,[[["self"]],["bool"]]],[11,"has_smap",E,"SMAP. Supports Supervisor-Mode Access Prevention (and the…",17,[[["self"]],["bool"]]],[11,"has_clflushopt",E,"Supports CLFLUSHOPT.",17,[[["self"]],["bool"]]],[11,"has_processor_trace",E,"Supports Intel Processor Trace.",17,[[["self"]],["bool"]]],[11,"has_sha",E,"Supports SHA Instructions.",17,[[["self"]],["bool"]]],[11,"has_sgx",E,"Supports Intel® Software Guard Extensions (Intel® SGX…",17,[[["self"]],["bool"]]],[11,"has_avx512f",E,"Supports AVX512F.",17,[[["self"]],["bool"]]],[11,"has_avx512dq",E,"Supports AVX512DQ.",17,[[["self"]],["bool"]]],[11,"has_avx512_ifma",E,"AVX512_IFMA",17,[[["self"]],["bool"]]],[11,"has_avx512pf",E,"AVX512PF",17,[[["self"]],["bool"]]],[11,"has_avx512er",E,"AVX512ER",17,[[["self"]],["bool"]]],[11,"has_avx512cd",E,"AVX512CD",17,[[["self"]],["bool"]]],[11,"has_avx512bw",E,"AVX512BW",17,[[["self"]],["bool"]]],[11,"has_avx512vl",E,"AVX512VL",17,[[["self"]],["bool"]]],[11,"has_clwb",E,"CLWB",17,[[["self"]],["bool"]]],[11,"has_prefetchwt1",E,"Has PREFETCHWT1 (Intel® Xeon Phi™ only).",17,[[["self"]],["bool"]]],[11,"has_umip",E,"Supports user-mode instruction prevention if 1.",17,[[["self"]],["bool"]]],[11,"has_pku",E,"Supports protection keys for user-mode pages.",17,[[["self"]],["bool"]]],[11,"has_ospke",E,"OS has set CR4.PKE to enable protection keys (and the…",17,[[["self"]],["bool"]]],[11,"has_rdpid",E,"RDPID and IA32_TSC_AUX are available.",17,[[["self"]],["bool"]]],[11,"has_sgx_lc",E,"Supports SGX Launch Configuration.",17,[[["self"]],["bool"]]],[11,"mawau_value",E,"The value of MAWAU used by the BNDLDX and BNDSTX…",17,[[["self"]],["u8"]]],[11,"get_dca_cap_value",E,"Value of bits [31:0] of IA32_PLATFORM_DCA_CAP MSR (address…",18,[[["self"]],["u32"]]],[11,"version_id",E,"Version ID of architectural performance monitoring. (Bits…",19,[[["self"]],["u8"]]],[11,"number_of_counters",E,"Number of general-purpose performance monitoring counter…",19,[[["self"]],["u8"]]],[11,"counter_bit_width",E,"Bit width of general-purpose, performance monitoring…",19,[[["self"]],["u8"]]],[11,"ebx_length",E,"Length of EBX bit vector to enumerate architectural…",19,[[["self"]],["u8"]]],[11,"fixed_function_counters",E,"Number of fixed-function performance counters (if Version…",19,[[["self"]],["u8"]]],[11,"fixed_function_counters_bit_width",E,"Bit width of fixed-function performance counters (if…",19,[[["self"]],["u8"]]],[11,"has_any_thread_deprecation",E,"AnyThread deprecation",19,[[["self"]],["bool"]]],[11,"is_core_cyc_ev_unavailable",E,"Core cycle event not available if 1.",19,[[["self"]],["bool"]]],[11,"is_inst_ret_ev_unavailable",E,"Instruction retired event not available if 1.",19,[[["self"]],["bool"]]],[11,"is_ref_cycle_ev_unavailable",E,"Reference cycles event not available if 1.",19,[[["self"]],["bool"]]],[11,"is_cache_ref_ev_unavailable",E,"Last-level cache reference event not available if 1.",19,[[["self"]],["bool"]]],[11,"is_ll_cache_miss_ev_unavailable",E,"Last-level cache misses event not available if 1.",19,[[["self"]],["bool"]]],[11,"is_branch_inst_ret_ev_unavailable",E,"Branch instruction retired event not available if 1.",19,[[["self"]],["bool"]]],[11,"is_branch_midpred_ev_unavailable",E,"Branch mispredict retired event not available if 1.",19,[[["self"]],["bool"]]],[11,"processors",E,"Number of logical processors at this level type. The…",20,[[["self"]],["u16"]]],[11,"level_number",E,"Level number.",20,[[["self"]],["u8"]]],[11,"level_type",E,E,20,[[["self"]],[R[1868]]]],[11,"x2apic_id",E,"x2APIC ID the current logical processor. (Bits 31-00)",20,[[["self"]],["u32"]]],[11,"shift_right_for_next_apic_id",E,"Number of bits to shift right on x2APIC ID to get a unique…",20,[[["self"]],["u32"]]],[11,"xcr0_supports_legacy_x87",E,"Support for legacy x87 in XCR0.",21,[[["self"]],["bool"]]],[11,"xcr0_supports_sse_128",E,"Support for SSE 128-bit in XCR0.",21,[[["self"]],["bool"]]],[11,"xcr0_supports_avx_256",E,"Support for AVX 256-bit in XCR0.",21,[[["self"]],["bool"]]],[11,"xcr0_supports_mpx_bndregs",E,"Support for MPX BNDREGS in XCR0.",21,[[["self"]],["bool"]]],[11,"xcr0_supports_mpx_bndcsr",E,"Support for MPX BNDCSR in XCR0.",21,[[["self"]],["bool"]]],[11,"xcr0_supports_avx512_opmask",E,"Support for AVX512 OPMASK in XCR0.",21,[[["self"]],["bool"]]],[11,"xcr0_supports_avx512_zmm_hi256",E,"Support for AVX512 ZMM Hi256 XCR0.",21,[[["self"]],["bool"]]],[11,"xcr0_supports_avx512_zmm_hi16",E,"Support for AVX512 ZMM Hi16 in XCR0.",21,[[["self"]],["bool"]]],[11,"xcr0_supports_pkru",E,"Support for PKRU in XCR0.",21,[[["self"]],["bool"]]],[11,"ia32_xss_supports_pt",E,"Support for PT in IA32_XSS.",21,[[["self"]],["bool"]]],[11,"ia32_xss_supports_hdc",E,"Support for HDC in IA32_XSS.",21,[[["self"]],["bool"]]],[11,"xsave_area_size_enabled_features",E,R[1855],21,[[["self"]],["u32"]]],[11,"xsave_area_size_supported_features",E,R[1855],21,[[["self"]],["u32"]]],[11,"has_xsaveopt",E,"CPU has xsaveopt feature.",21,[[["self"]],["bool"]]],[11,"has_xsavec",E,"Supports XSAVEC and the compacted form of XRSTOR if set.",21,[[["self"]],["bool"]]],[11,"has_xgetbv",E,"Supports XGETBV with ECX = 1 if set.",21,[[["self"]],["bool"]]],[11,"has_xsaves_xrstors",E,"Supports XSAVES/XRSTORS and IA32_XSS if set.",21,[[["self"]],["bool"]]],[11,"xsave_size",E,"The size in bytes of the XSAVE area containing all states…",21,[[["self"]],["u32"]]],[11,"iter",E,"Iterator over extended state enumeration levels >= 2.",21,[[["self"]],[R[1877]]]],[11,"size",E,"The size in bytes (from the offset specified in EBX) of…",2,[[["self"]],["u32"]]],[11,"offset",E,"The offset in bytes of this extended state components save…",2,[[["self"]],["u32"]]],[11,"is_in_ia32_xss",E,"True if the bit n (corresponding to the sub-leaf index) is…",2,[[["self"]],["bool"]]],[11,"is_in_xcr0",E,"True if bit n is supported in XCR0.",2,[[["self"]],["bool"]]],[11,"is_compacted_format",E,"Returns true when the compacted format of an XSAVE area is…",2,[[["self"]],["bool"]]],[11,"rmid_range",E,"Maximum range (zero-based) of RMID within this physical…",22,[[["self"]],["u32"]]],[11,"has_l3_monitoring",E,"Supports L3 Cache Intel RDT Monitoring.",22,[[["self"]],["bool"]]],[11,"l3_monitoring",E,"L3 Cache Monitoring.",22,[[["self"]],[[R[23],[R[1856]]],[R[1856]]]]],[11,"conversion_factor",E,"Conversion factor from reported IA32_QM_CTR value to…",23,[[["self"]],["u32"]]],[11,"maximum_rmid_range",E,"Maximum range (zero-based) of RMID of L3.",23,[[["self"]],["u32"]]],[11,"has_occupancy_monitoring",E,"Supports occupancy monitoring.",23,[[["self"]],["bool"]]],[11,"has_total_bandwidth_monitoring",E,"Supports total bandwidth monitoring.",23,[[["self"]],["bool"]]],[11,"has_local_bandwidth_monitoring",E,"Supports local bandwidth monitoring.",23,[[["self"]],["bool"]]],[11,"has_l3_cat",E,"Supports L3 Cache Allocation.",24,[[["self"]],["bool"]]],[11,"has_l2_cat",E,"Supports L2 Cache Allocation.",24,[[["self"]],["bool"]]],[11,"has_memory_bandwidth_allocation",E,"Supports Memory Bandwidth Allocation.",24,[[["self"]],["bool"]]],[11,"l3_cat",E,"L3 Cache Allocation Information.",24,[[["self"]],[[R[23],["l3catinfo"]],["l3catinfo"]]]],[11,"l2_cat",E,"L2 Cache Allocation Information.",24,[[["self"]],[[R[23],["l2catinfo"]],["l2catinfo"]]]],[11,"memory_bandwidth_allocation",E,"Memory Bandwidth Allocation Information.",24,[[["self"]],[[R[23],[R[1857]]],[R[1857]]]]],[11,R[1858],E,R[1859],25,[[["self"]],["u8"]]],[11,R[1860],E,R[1861],25,[[["self"]],["u32"]]],[11,R[1862],E,R[1863],25,[[["self"]],["u16"]]],[11,"has_code_data_prioritization",E,"Is Code and Data Prioritization Technology supported?",25,[[["self"]],["bool"]]],[11,R[1858],E,R[1859],26,[[["self"]],["u8"]]],[11,R[1860],E,R[1861],26,[[["self"]],["u32"]]],[11,R[1862],E,R[1863],26,[[["self"]],["u16"]]],[11,"max_hba_throttling",E,"Reports the maximum MBA throttling value supported for the…",27,[[["self"]],["u16"]]],[11,R[1862],E,R[1863],27,[[["self"]],["u16"]]],[11,"has_linear_response_delay",E,"Reports whether the response of the delay values is linear.",27,[[["self"]],["bool"]]],[11,"has_sgx1",E,"Has SGX1 support.",28,[[["self"]],["bool"]]],[11,"has_sgx2",E,"Has SGX2 support.",28,[[["self"]],["bool"]]],[11,"has_enclv_leaves_einvirtchild_edecvirtchild_esetcontext",E,"Supports ENCLV instruction leaves EINCVIRTCHILD,…",28,[[["self"]],["bool"]]],[11,"has_encls_leaves_etrackc_erdinfo_eldbc_elduc",E,"Supports ENCLS instruction leaves ETRACKC, ERDINFO, ELDBC,…",28,[[["self"]],["bool"]]],[11,"miscselect",E,"Bit vector of supported extended SGX features.",28,[[["self"]],["u32"]]],[11,"max_enclave_size_non_64bit",E,"The maximum supported enclave size in non-64-bit mode is…",28,[[["self"]],["u8"]]],[11,"max_enclave_size_64bit",E,"The maximum supported enclave size in 64-bit mode is…",28,[[["self"]],["u8"]]],[11,"secs_attributes",E,"Reports the valid bits of SECS.ATTRIBUTES[127:0] that…",28,[[["self"]]]],[11,"iter",E,"Iterator over SGX sub-leafs.",28,[[["self"]],[R[1878]]]],[11,"physical_base",E,"The physical address of the base of the EPC section",29,[[["self"]],["u64"]]],[11,"size",E,"Size of the corresponding EPC section within the Processor…",29,[[["self"]],["u64"]]],[11,"has_rtit_cr3_match",E,"If true, Indicates that IA32_RTIT_CTL.CR3Filter can be set…",30,[[["self"]],["bool"]]],[11,"has_configurable_psb_and_cycle_accurate_mode",E,"If true, Indicates support of Configurable PSB and…",30,[[["self"]],["bool"]]],[11,"has_ip_tracestop_filtering",E,"If true, Indicates support of IP Filtering, TraceStop…",30,[[["self"]],["bool"]]],[11,"has_mtc_timing_packet_coefi_suppression",E,"If true, Indicates support of MTC timing packet and…",30,[[["self"]],["bool"]]],[11,"has_ptwrite",E,"Indicates support of PTWRITE. Writes can set…",30,[[["self"]],["bool"]]],[11,"has_power_event_trace",E,"Support of Power Event Trace. Writes can set…",30,[[["self"]],["bool"]]],[11,"has_topa",E,"If true, Tracing can be enabled with IA32_RTIT_CTL.ToPA =…",30,[[["self"]],["bool"]]],[11,"has_topa_maximum_entries",E,"If true, ToPA tables can hold any number of output…",30,[[["self"]],["bool"]]],[11,"has_single_range_output_scheme",E,"If true, Indicates support of Single-Range Output scheme.",30,[[["self"]],["bool"]]],[11,"has_trace_transport_subsystem",E,"If true, Indicates support of output to Trace Transport…",30,[[["self"]],["bool"]]],[11,"has_lip_with_cs_base",E,"If true, Generated packets which contain IP payloads have…",30,[[["self"]],["bool"]]],[11,"configurable_address_ranges",E,"Number of configurable Address Ranges for filtering (Bits…",30,[[["self"]],["u8"]]],[11,"supported_mtc_period_encodings",E,"Bitmap of supported MTC period encodings (Bit 31:16).",30,[[["self"]],["u16"]]],[11,"supported_cycle_threshold_value_encodings",E,"Bitmap of supported Cycle Threshold value encodings (Bits…",30,[[["self"]],["u16"]]],[11,"supported_psb_frequency_encodings",E,"Bitmap of supported Configurable PSB frequency encodings…",30,[[["self"]],["u16"]]],[11,"denominator",E,"An unsigned integer which is the denominator of the…",31,[[["self"]],["u32"]]],[11,"numerator",E,"An unsigned integer which is the numerator of the…",31,[[["self"]],["u32"]]],[11,"nominal_frequency",E,"An unsigned integer which is the nominal frequency of the…",31,[[["self"]],["u32"]]],[11,R[1866],E,"“TSC frequency” = “core crystal clock frequency” * EBX/EAX.",31,[[["self"]],["u64"]]],[11,"processor_base_frequency",E,"Processor Base Frequency (in MHz).",32,[[["self"]],["u16"]]],[11,"processor_max_frequency",E,"Maximum Frequency (in MHz).",32,[[["self"]],["u16"]]],[11,"bus_frequency",E,"Bus (Reference) Frequency (in MHz).",32,[[["self"]],["u16"]]],[11,"has_4k_entries",E,"4K page size entries supported by this structure",33,[[["self"]],["bool"]]],[11,"has_2mb_entries",E,"2MB page size entries supported by this structure",33,[[["self"]],["bool"]]],[11,"has_4mb_entries",E,"4MB page size entries supported by this structure",33,[[["self"]],["bool"]]],[11,"has_1gb_entries",E,"1GB page size entries supported by this structure",33,[[["self"]],["bool"]]],[11,R[1864],E,"Fully associative structure",33,[[["self"]],["bool"]]],[11,"partitioning",E,"Partitioning (0: Soft partitioning between the logical…",33,[[["self"]],["u8"]]],[11,"ways",E,"Ways of associativity.",33,[[["self"]],["u16"]]],[11,"sets",E,"Number of Sets.",33,[[["self"]],["u32"]]],[11,"cache_type",E,"Translation cache type field.",33,[[["self"]],["dattype"]]],[11,"cache_level",E,"Translation cache level (starts at 1)",33,[[["self"]],["u8"]]],[11,"max_addressable_ids",E,R[1853],33,[[["self"]],["u16"]]],[11,"get_soc_vendor_id",E,E,34,[[["self"]],["u16"]]],[11,"get_project_id",E,E,34,[[["self"]],["u32"]]],[11,"get_stepping_id",E,E,34,[[["self"]],["u32"]]],[11,"get_vendor_brand",E,E,34,[[["self"]],[R[1879]]]],[11,"get_vendor_attributes",E,E,34,[[["self"]],[[R[1865]],[R[23],[R[1865]]]]]],[11,"as_string",E,E,35,[[["self"]],["str"]]],[11,"identify",E,E,36,[[["self"]],["hypervisor"]]],[11,R[1866],E,"TSC frequency in kHz.",36,[[["self"]],[[R[23],["u32"]],["u32"]]]],[11,"apic_frequency",E,"(Virtual) Bus (local apic timer) frequency in kHz.",36,[[["self"]],[[R[23],["u32"]],["u32"]]]],[11,"processor_brand_string",E,"Retrieve processor brand string.",37,[[["self"]],[["str"],[R[23],["str"]]]]],[11,"extended_signature",E,"Extended Processor Signature and Feature Bits.",37,[[["self"]],[[R[23],["u32"]],["u32"]]]],[11,"cache_line_size",E,"Cache Line size in bytes",37,[[["self"]],[[R[23],["u8"]],["u8"]]]],[11,"l2_associativity",E,"L2 Associativity field",37,[[["self"]],[[R[1867]],[R[23],[R[1867]]]]]],[11,"cache_size",E,"Cache size in 1K units",37,[[["self"]],[["u16"],[R[23],["u16"]]]]],[11,"physical_address_bits",E,"#Physical Address Bits",37,[[["self"]],[[R[23],["u8"]],["u8"]]]],[11,"linear_address_bits",E,"#Linear Address Bits",37,[[["self"]],[[R[23],["u8"]],["u8"]]]],[11,"has_invariant_tsc",E,"Is Invariant TSC available?",37,[[["self"]],["bool"]]],[11,"has_lahf_sahf",E,"Is LAHF/SAHF available in 64-bit mode?",37,[[["self"]],["bool"]]],[11,"has_lzcnt",E,"Is LZCNT available?",37,[[["self"]],["bool"]]],[11,"has_prefetchw",E,"Is PREFETCHW available?",37,[[["self"]],["bool"]]],[11,"has_syscall_sysret",E,"Are fast system calls available.",37,[[["self"]],["bool"]]],[11,"has_execute_disable",E,"Is there support for execute disable bit.",37,[[["self"]],["bool"]]],[11,"has_1gib_pages",E,"Is there support for 1GiB pages.",37,[[["self"]],["bool"]]],[11,"has_rdtscp",E,"Check support for rdtscp instruction.",37,[[["self"]],["bool"]]],[11,"has_64bit_mode",E,"Check support for 64-bit mode.",37,[[["self"]],["bool"]]],[14,"cpuid",E,"Macro which queries cpuid directly.",N,N],[11,"from",E,E,10,[[[T]],[T]]],[11,R[4],E,E,10,[[[U]],[R[3]]]],[11,"into",E,E,10,[[],[U]]],[11,R[5],E,E,10,[[],[R[3]]]],[11,R[6],E,E,10,[[["self"]],[T]]],[11,R[7],E,E,10,[[["self"]],[T]]],[11,R[8],E,E,10,[[["self"]],[R[9]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[4],E,E,0,[[[U]],[R[3]]]],[11,"into",E,E,0,[[],[U]]],[11,R[5],E,E,0,[[],[R[3]]]],[11,R[6],E,E,0,[[["self"]],[T]]],[11,R[7],E,E,0,[[["self"]],[T]]],[11,R[8],E,E,0,[[["self"]],[R[9]]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[4],E,E,11,[[[U]],[R[3]]]],[11,"into",E,E,11,[[],[U]]],[11,R[5],E,E,11,[[],[R[3]]]],[11,R[6],E,E,11,[[["self"]],[T]]],[11,R[7],E,E,11,[[["self"]],[T]]],[11,R[8],E,E,11,[[["self"]],[R[9]]]],[11,"from",E,E,38,[[[T]],[T]]],[11,R[4],E,E,38,[[[U]],[R[3]]]],[11,R[45],E,E,38,[[],["i"]]],[11,"into",E,E,38,[[],[U]]],[11,R[5],E,E,38,[[],[R[3]]]],[11,R[6],E,E,38,[[["self"]],[T]]],[11,R[7],E,E,38,[[["self"]],[T]]],[11,R[8],E,E,38,[[["self"]],[R[9]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[4],E,E,1,[[[U]],[R[3]]]],[11,"into",E,E,1,[[],[U]]],[11,R[5],E,E,1,[[],[R[3]]]],[11,R[6],E,E,1,[[["self"]],[T]]],[11,R[7],E,E,1,[[["self"]],[T]]],[11,R[8],E,E,1,[[["self"]],[R[9]]]],[11,"from",E,E,12,[[[T]],[T]]],[11,R[4],E,E,12,[[[U]],[R[3]]]],[11,"into",E,E,12,[[],[U]]],[11,R[5],E,E,12,[[],[R[3]]]],[11,R[6],E,E,12,[[["self"]],[T]]],[11,R[7],E,E,12,[[["self"]],[T]]],[11,R[8],E,E,12,[[["self"]],[R[9]]]],[11,"from",E,E,13,[[[T]],[T]]],[11,R[4],E,E,13,[[[U]],[R[3]]]],[11,"into",E,E,13,[[],[U]]],[11,R[5],E,E,13,[[],[R[3]]]],[11,R[6],E,E,13,[[["self"]],[T]]],[11,R[7],E,E,13,[[["self"]],[T]]],[11,R[8],E,E,13,[[["self"]],[R[9]]]],[11,"from",E,E,39,[[[T]],[T]]],[11,R[4],E,E,39,[[[U]],[R[3]]]],[11,R[45],E,E,39,[[],["i"]]],[11,"into",E,E,39,[[],[U]]],[11,R[5],E,E,39,[[],[R[3]]]],[11,R[6],E,E,39,[[["self"]],[T]]],[11,R[7],E,E,39,[[["self"]],[T]]],[11,R[8],E,E,39,[[["self"]],[R[9]]]],[11,"from",E,E,14,[[[T]],[T]]],[11,R[4],E,E,14,[[[U]],[R[3]]]],[11,"into",E,E,14,[[],[U]]],[11,R[5],E,E,14,[[],[R[3]]]],[11,R[6],E,E,14,[[["self"]],[T]]],[11,R[7],E,E,14,[[["self"]],[T]]],[11,R[8],E,E,14,[[["self"]],[R[9]]]],[11,"from",E,E,15,[[[T]],[T]]],[11,R[4],E,E,15,[[[U]],[R[3]]]],[11,"into",E,E,15,[[],[U]]],[11,R[5],E,E,15,[[],[R[3]]]],[11,R[6],E,E,15,[[["self"]],[T]]],[11,R[7],E,E,15,[[["self"]],[T]]],[11,R[8],E,E,15,[[["self"]],[R[9]]]],[11,"from",E,E,16,[[[T]],[T]]],[11,R[4],E,E,16,[[[U]],[R[3]]]],[11,"into",E,E,16,[[],[U]]],[11,R[5],E,E,16,[[],[R[3]]]],[11,R[6],E,E,16,[[["self"]],[T]]],[11,R[7],E,E,16,[[["self"]],[T]]],[11,R[8],E,E,16,[[["self"]],[R[9]]]],[11,"from",E,E,17,[[[T]],[T]]],[11,R[4],E,E,17,[[[U]],[R[3]]]],[11,"into",E,E,17,[[],[U]]],[11,R[5],E,E,17,[[],[R[3]]]],[11,R[6],E,E,17,[[["self"]],[T]]],[11,R[7],E,E,17,[[["self"]],[T]]],[11,R[8],E,E,17,[[["self"]],[R[9]]]],[11,"from",E,E,18,[[[T]],[T]]],[11,R[4],E,E,18,[[[U]],[R[3]]]],[11,"into",E,E,18,[[],[U]]],[11,R[5],E,E,18,[[],[R[3]]]],[11,R[6],E,E,18,[[["self"]],[T]]],[11,R[7],E,E,18,[[["self"]],[T]]],[11,R[8],E,E,18,[[["self"]],[R[9]]]],[11,"from",E,E,19,[[[T]],[T]]],[11,R[4],E,E,19,[[[U]],[R[3]]]],[11,"into",E,E,19,[[],[U]]],[11,R[5],E,E,19,[[],[R[3]]]],[11,R[6],E,E,19,[[["self"]],[T]]],[11,R[7],E,E,19,[[["self"]],[T]]],[11,R[8],E,E,19,[[["self"]],[R[9]]]],[11,"from",E,E,40,[[[T]],[T]]],[11,R[4],E,E,40,[[[U]],[R[3]]]],[11,R[45],E,E,40,[[],["i"]]],[11,"into",E,E,40,[[],[U]]],[11,R[5],E,E,40,[[],[R[3]]]],[11,R[6],E,E,40,[[["self"]],[T]]],[11,R[7],E,E,40,[[["self"]],[T]]],[11,R[8],E,E,40,[[["self"]],[R[9]]]],[11,"from",E,E,20,[[[T]],[T]]],[11,R[4],E,E,20,[[[U]],[R[3]]]],[11,"into",E,E,20,[[],[U]]],[11,R[5],E,E,20,[[],[R[3]]]],[11,R[6],E,E,20,[[["self"]],[T]]],[11,R[7],E,E,20,[[["self"]],[T]]],[11,R[8],E,E,20,[[["self"]],[R[9]]]],[11,"from",E,E,21,[[[T]],[T]]],[11,R[4],E,E,21,[[[U]],[R[3]]]],[11,"into",E,E,21,[[],[U]]],[11,R[5],E,E,21,[[],[R[3]]]],[11,R[6],E,E,21,[[["self"]],[T]]],[11,R[7],E,E,21,[[["self"]],[T]]],[11,R[8],E,E,21,[[["self"]],[R[9]]]],[11,"from",E,E,41,[[[T]],[T]]],[11,R[4],E,E,41,[[[U]],[R[3]]]],[11,R[45],E,E,41,[[],["i"]]],[11,"into",E,E,41,[[],[U]]],[11,R[5],E,E,41,[[],[R[3]]]],[11,R[6],E,E,41,[[["self"]],[T]]],[11,R[7],E,E,41,[[["self"]],[T]]],[11,R[8],E,E,41,[[["self"]],[R[9]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[4],E,E,2,[[[U]],[R[3]]]],[11,"into",E,E,2,[[],[U]]],[11,R[5],E,E,2,[[],[R[3]]]],[11,R[6],E,E,2,[[["self"]],[T]]],[11,R[7],E,E,2,[[["self"]],[T]]],[11,R[8],E,E,2,[[["self"]],[R[9]]]],[11,"from",E,E,22,[[[T]],[T]]],[11,R[4],E,E,22,[[[U]],[R[3]]]],[11,"into",E,E,22,[[],[U]]],[11,R[5],E,E,22,[[],[R[3]]]],[11,R[6],E,E,22,[[["self"]],[T]]],[11,R[7],E,E,22,[[["self"]],[T]]],[11,R[8],E,E,22,[[["self"]],[R[9]]]],[11,"from",E,E,23,[[[T]],[T]]],[11,R[4],E,E,23,[[[U]],[R[3]]]],[11,"into",E,E,23,[[],[U]]],[11,R[5],E,E,23,[[],[R[3]]]],[11,R[6],E,E,23,[[["self"]],[T]]],[11,R[7],E,E,23,[[["self"]],[T]]],[11,R[8],E,E,23,[[["self"]],[R[9]]]],[11,"from",E,E,24,[[[T]],[T]]],[11,R[4],E,E,24,[[[U]],[R[3]]]],[11,"into",E,E,24,[[],[U]]],[11,R[5],E,E,24,[[],[R[3]]]],[11,R[6],E,E,24,[[["self"]],[T]]],[11,R[7],E,E,24,[[["self"]],[T]]],[11,R[8],E,E,24,[[["self"]],[R[9]]]],[11,"from",E,E,25,[[[T]],[T]]],[11,R[4],E,E,25,[[[U]],[R[3]]]],[11,"into",E,E,25,[[],[U]]],[11,R[5],E,E,25,[[],[R[3]]]],[11,R[6],E,E,25,[[["self"]],[T]]],[11,R[7],E,E,25,[[["self"]],[T]]],[11,R[8],E,E,25,[[["self"]],[R[9]]]],[11,"from",E,E,26,[[[T]],[T]]],[11,R[4],E,E,26,[[[U]],[R[3]]]],[11,"into",E,E,26,[[],[U]]],[11,R[5],E,E,26,[[],[R[3]]]],[11,R[6],E,E,26,[[["self"]],[T]]],[11,R[7],E,E,26,[[["self"]],[T]]],[11,R[8],E,E,26,[[["self"]],[R[9]]]],[11,"from",E,E,27,[[[T]],[T]]],[11,R[4],E,E,27,[[[U]],[R[3]]]],[11,"into",E,E,27,[[],[U]]],[11,R[5],E,E,27,[[],[R[3]]]],[11,R[6],E,E,27,[[["self"]],[T]]],[11,R[7],E,E,27,[[["self"]],[T]]],[11,R[8],E,E,27,[[["self"]],[R[9]]]],[11,"from",E,E,28,[[[T]],[T]]],[11,R[4],E,E,28,[[[U]],[R[3]]]],[11,"into",E,E,28,[[],[U]]],[11,R[5],E,E,28,[[],[R[3]]]],[11,R[6],E,E,28,[[["self"]],[T]]],[11,R[7],E,E,28,[[["self"]],[T]]],[11,R[8],E,E,28,[[["self"]],[R[9]]]],[11,"from",E,E,42,[[[T]],[T]]],[11,R[4],E,E,42,[[[U]],[R[3]]]],[11,R[45],E,E,42,[[],["i"]]],[11,"into",E,E,42,[[],[U]]],[11,R[5],E,E,42,[[],[R[3]]]],[11,R[6],E,E,42,[[["self"]],[T]]],[11,R[7],E,E,42,[[["self"]],[T]]],[11,R[8],E,E,42,[[["self"]],[R[9]]]],[11,"from",E,E,29,[[[T]],[T]]],[11,R[4],E,E,29,[[[U]],[R[3]]]],[11,"into",E,E,29,[[],[U]]],[11,R[5],E,E,29,[[],[R[3]]]],[11,R[6],E,E,29,[[["self"]],[T]]],[11,R[7],E,E,29,[[["self"]],[T]]],[11,R[8],E,E,29,[[["self"]],[R[9]]]],[11,"from",E,E,30,[[[T]],[T]]],[11,R[4],E,E,30,[[[U]],[R[3]]]],[11,"into",E,E,30,[[],[U]]],[11,R[5],E,E,30,[[],[R[3]]]],[11,R[6],E,E,30,[[["self"]],[T]]],[11,R[7],E,E,30,[[["self"]],[T]]],[11,R[8],E,E,30,[[["self"]],[R[9]]]],[11,"from",E,E,31,[[[T]],[T]]],[11,R[4],E,E,31,[[[U]],[R[3]]]],[11,"into",E,E,31,[[],[U]]],[11,R[5],E,E,31,[[],[R[3]]]],[11,R[6],E,E,31,[[["self"]],[T]]],[11,R[7],E,E,31,[[["self"]],[T]]],[11,R[8],E,E,31,[[["self"]],[R[9]]]],[11,"from",E,E,32,[[[T]],[T]]],[11,R[4],E,E,32,[[[U]],[R[3]]]],[11,"into",E,E,32,[[],[U]]],[11,R[5],E,E,32,[[],[R[3]]]],[11,R[6],E,E,32,[[["self"]],[T]]],[11,R[7],E,E,32,[[["self"]],[T]]],[11,R[8],E,E,32,[[["self"]],[R[9]]]],[11,"from",E,E,43,[[[T]],[T]]],[11,R[4],E,E,43,[[[U]],[R[3]]]],[11,R[45],E,E,43,[[],["i"]]],[11,"into",E,E,43,[[],[U]]],[11,R[5],E,E,43,[[],[R[3]]]],[11,R[6],E,E,43,[[["self"]],[T]]],[11,R[7],E,E,43,[[["self"]],[T]]],[11,R[8],E,E,43,[[["self"]],[R[9]]]],[11,"from",E,E,33,[[[T]],[T]]],[11,R[4],E,E,33,[[[U]],[R[3]]]],[11,"into",E,E,33,[[],[U]]],[11,R[5],E,E,33,[[],[R[3]]]],[11,R[6],E,E,33,[[["self"]],[T]]],[11,R[7],E,E,33,[[["self"]],[T]]],[11,R[8],E,E,33,[[["self"]],[R[9]]]],[11,"from",E,E,34,[[[T]],[T]]],[11,R[4],E,E,34,[[[U]],[R[3]]]],[11,"into",E,E,34,[[],[U]]],[11,R[5],E,E,34,[[],[R[3]]]],[11,R[6],E,E,34,[[["self"]],[T]]],[11,R[7],E,E,34,[[["self"]],[T]]],[11,R[8],E,E,34,[[["self"]],[R[9]]]],[11,"from",E,E,44,[[[T]],[T]]],[11,R[4],E,E,44,[[[U]],[R[3]]]],[11,R[45],E,E,44,[[],["i"]]],[11,"into",E,E,44,[[],[U]]],[11,R[5],E,E,44,[[],[R[3]]]],[11,R[6],E,E,44,[[["self"]],[T]]],[11,R[7],E,E,44,[[["self"]],[T]]],[11,R[8],E,E,44,[[["self"]],[R[9]]]],[11,"from",E,E,35,[[[T]],[T]]],[11,R[4],E,E,35,[[[U]],[R[3]]]],[11,"into",E,E,35,[[],[U]]],[11,R[5],E,E,35,[[],[R[3]]]],[11,R[6],E,E,35,[[["self"]],[T]]],[11,R[7],E,E,35,[[["self"]],[T]]],[11,R[8],E,E,35,[[["self"]],[R[9]]]],[11,"from",E,E,36,[[[T]],[T]]],[11,R[4],E,E,36,[[[U]],[R[3]]]],[11,"into",E,E,36,[[],[U]]],[11,R[5],E,E,36,[[],[R[3]]]],[11,R[6],E,E,36,[[["self"]],[T]]],[11,R[7],E,E,36,[[["self"]],[T]]],[11,R[8],E,E,36,[[["self"]],[R[9]]]],[11,"from",E,E,37,[[[T]],[T]]],[11,R[4],E,E,37,[[[U]],[R[3]]]],[11,"into",E,E,37,[[],[U]]],[11,R[5],E,E,37,[[],[R[3]]]],[11,R[6],E,E,37,[[["self"]],[T]]],[11,R[7],E,E,37,[[["self"]],[T]]],[11,R[8],E,E,37,[[["self"]],[R[9]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[4],E,E,3,[[[U]],[R[3]]]],[11,"into",E,E,3,[[],[U]]],[11,R[5],E,E,3,[[],[R[3]]]],[11,R[6],E,E,3,[[["self"]],[T]]],[11,R[7],E,E,3,[[["self"]],[T]]],[11,R[8],E,E,3,[[["self"]],[R[9]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[4],E,E,4,[[[U]],[R[3]]]],[11,"into",E,E,4,[[],[U]]],[11,R[5],E,E,4,[[],[R[3]]]],[11,R[6],E,E,4,[[["self"]],[T]]],[11,R[7],E,E,4,[[["self"]],[T]]],[11,R[8],E,E,4,[[["self"]],[R[9]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[4],E,E,5,[[[U]],[R[3]]]],[11,"into",E,E,5,[[],[U]]],[11,R[5],E,E,5,[[],[R[3]]]],[11,R[6],E,E,5,[[["self"]],[T]]],[11,R[7],E,E,5,[[["self"]],[T]]],[11,R[8],E,E,5,[[["self"]],[R[9]]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[4],E,E,6,[[[U]],[R[3]]]],[11,"into",E,E,6,[[],[U]]],[11,R[5],E,E,6,[[],[R[3]]]],[11,R[6],E,E,6,[[["self"]],[T]]],[11,R[7],E,E,6,[[["self"]],[T]]],[11,R[8],E,E,6,[[["self"]],[R[9]]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[4],E,E,7,[[[U]],[R[3]]]],[11,"into",E,E,7,[[],[U]]],[11,R[5],E,E,7,[[],[R[3]]]],[11,R[6],E,E,7,[[["self"]],[T]]],[11,R[7],E,E,7,[[["self"]],[T]]],[11,R[8],E,E,7,[[["self"]],[R[9]]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[4],E,E,8,[[[U]],[R[3]]]],[11,"into",E,E,8,[[],[U]]],[11,R[5],E,E,8,[[],[R[3]]]],[11,R[6],E,E,8,[[["self"]],[T]]],[11,R[7],E,E,8,[[["self"]],[T]]],[11,R[8],E,E,8,[[["self"]],[R[9]]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[4],E,E,9,[[[U]],[R[3]]]],[11,"into",E,E,9,[[],[U]]],[11,R[5],E,E,9,[[],[R[3]]]],[11,R[6],E,E,9,[[["self"]],[T]]],[11,R[7],E,E,9,[[["self"]],[T]]],[11,R[8],E,E,9,[[["self"]],[R[9]]]],[11,"eq",E,E,4,[[["self"],["cachetype"]],["bool"]]],[11,"eq",E,E,5,[[["self"],[R[1868]]],["bool"]]],[11,"eq",E,E,9,[[["self"],[R[1867]]],["bool"]]],[11,"fmt",E,E,10,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,0,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,11,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,38,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,3,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,1,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,12,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,13,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,39,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,14,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,4,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,15,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,16,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,17,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,18,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,19,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,40,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,20,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,5,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,21,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,41,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,2,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,22,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,23,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,24,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,25,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,26,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,27,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,28,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,42,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,6,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,29,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,30,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,31,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,32,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,43,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,33,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,7,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,34,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,44,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,35,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,37,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,9,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,1,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,11,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,35,[[["self"],[R[10]]],[R[3]]]],[11,"next",E,"Iterate over all cache information.",38,[[["self"]],[[R[1876]],[R[23],[R[1876]]]]]],[11,"next",E,"Iterate over all caches for this CPU. Note: cpuid is…",39,[[["self"]],[[R[23],[R[1869]]],[R[1869]]]]],[11,"next",E,E,40,[[["self"]],[[R[1870]],[R[23],[R[1870]]]]]],[11,"next",E,E,41,[[["self"]],[[R[23],[R[1871]]],[R[1871]]]]],[11,"next",E,E,42,[[["self"]],[[R[23],[R[1872]]],[R[1872]]]]],[11,"next",E,"Iterate over each sub-leaf with an address translation…",43,[[["self"]],[[R[23],["datinfo"]],["datinfo"]]]],[11,"next",E,"Iterate over all SoC vendor specific attributes.",44,[[["self"]],[[R[1873]],[R[23],[R[1873]]]]]],[11,"clone",E,E,0,[[["self"]],[R[1873]]]],[11,"clone",E,E,3,[[["self"]],[R[1875]]]],[11,"clone",E,E,1,[[["self"]],[R[1876]]]],[11,"clone",E,E,14,[[["self"]],[R[1869]]]],[11,R[83],E,E,10,[[],["cpuid"]]],[11,R[83],E,E,0,[[],[R[1873]]]],[11,R[83],E,E,11,[[],[R[1874]]]],[11,R[83],E,E,38,[[],[R[1835]]]],[11,R[83],E,E,3,[[],[R[1875]]]],[11,R[83],E,E,1,[[],[R[1876]]]],[11,R[83],E,E,12,[[],[R[1836]]]],[11,R[83],E,E,13,[[],[R[1834]]]],[11,R[83],E,E,39,[[],[R[1837]]]],[11,R[83],E,E,14,[[],[R[1869]]]],[11,R[83],E,E,4,[[],["cachetype"]]],[11,R[83],E,E,15,[[],[R[1838]]]],[11,R[83],E,E,16,[[],[R[1839]]]],[11,R[83],E,E,17,[[],[R[1840]]]],[11,R[83],E,E,18,[[],[R[1841]]]],[11,R[83],E,E,19,[[],[R[1842]]]],[11,R[83],E,E,40,[[],[R[1843]]]],[11,R[83],E,E,20,[[],[R[1870]]]],[11,R[83],E,E,5,[[],[R[1868]]]],[11,R[83],E,E,21,[[],[R[1844]]]],[11,R[83],E,E,41,[[],[R[1877]]]],[11,R[83],E,E,2,[[],[R[1871]]]],[11,R[83],E,E,22,[[],[R[1845]]]],[11,R[83],E,E,23,[[],[R[1856]]]],[11,R[83],E,E,24,[[],[R[1846]]]],[11,R[83],E,E,25,[[],["l3catinfo"]]],[11,R[83],E,E,26,[[],["l2catinfo"]]],[11,R[83],E,E,27,[[],[R[1857]]]],[11,R[83],E,E,28,[[],["sgxinfo"]]],[11,R[83],E,E,42,[[],[R[1878]]]],[11,R[83],E,E,6,[[],[R[1872]]]],[11,R[83],E,E,29,[[],["epcsection"]]],[11,R[83],E,E,30,[[],[R[1847]]]],[11,R[83],E,E,31,[[],["tscinfo"]]],[11,R[83],E,E,32,[[],[R[1848]]]],[11,R[83],E,E,43,[[],["datiter"]]],[11,R[83],E,E,33,[[],["datinfo"]]],[11,R[83],E,E,7,[[],["dattype"]]],[11,R[83],E,E,34,[[],[R[1849]]]],[11,R[83],E,E,44,[[],[R[1865]]]],[11,R[83],E,E,35,[[],[R[1879]]]],[11,R[83],E,E,37,[[],[R[1851]]]],[11,R[83],E,E,9,[[],[R[1867]]]]],"p":[[3,R[1880]],[3,"CacheInfo"],[3,R[1881]],[4,R[1882]],[4,"CacheType"],[4,R[1883]],[4,R[1884]],[4,"DatType"],[4,"Hypervisor"],[4,R[1885]],[3,"CpuId"],[3,"VendorInfo"],[3,R[1886]],[3,R[1887]],[3,R[1888]],[3,R[1889]],[3,R[1890]],[3,R[1891]],[3,R[1892]],[3,R[1893]],[3,R[1894]],[3,R[1895]],[3,R[1896]],[3,R[1897]],[3,R[1898]],[3,"L3CatInfo"],[3,"L2CatInfo"],[3,R[1899]],[3,"SgxInfo"],[3,"EpcSection"],[3,R[1900]],[3,"TscInfo"],[3,R[1901]],[3,"DatInfo"],[3,R[1902]],[3,R[1903]],[3,R[1904]],[3,R[1905]],[3,R[1906]],[3,R[1907]],[3,R[1908]],[3,R[1909]],[3,R[1910]],[3,"DatIter"],[3,R[1911]]]};
searchIndex["rayon"]={"doc":"Data-parallelism library that makes it easy to convert…","i":[[3,R[3473],"rayon",R[3438],N,N],[3,R[3129],E,R[3433],N,N],[3,R[3434],E,R[3435],N,N],[3,R[3132],E,R[3436],N,N],[3,R[3130],E,R[3437],N,N],[5,R[3112],E,R[3446],N,[[],["usize"]]],[5,R[3113],E,R[3445],N,[[],[[R[23],["usize"]],["usize"]]]],[5,"join",E,R[3439],N,[[["a"],["b"]]]],[5,R[3440],E,R[3441],N,[[["a"],["b"]]]],[5,"scope",E,R[3442],N,[[["op"]],["r"]]],[3,"Scope",E,R[3108],N,N],[5,R[3443],E,R[3444],N,[[["op"]],["r"]]],[3,R[3472],E,R[3108],N,N],[5,"spawn",E,R[3109],N,[[["f"]]]],[5,R[3116],E,R[3109],N,[[["f"]]]],[0,"collections",E,"Parallel iterator types for [standard…",N,N],[0,"binary_heap",R[3332],"This module contains the parallel iterator types for heaps…",N,N],[3,R[306],R[3359],"Parallel iterator over a binary heap",N,N],[3,"Iter",E,"Parallel iterator over an immutable reference to a binary…",N,N],[0,"btree_map",R[3332],R[3333],N,N],[3,R[306],R[3360],"Parallel iterator over a B-Tree map",N,N],[3,"Iter",E,R[3334],N,N],[3,R[631],E,"Parallel iterator over a mutable reference to a B-Tree map",N,N],[0,"btree_set",R[3332],R[3333],N,N],[3,R[306],R[3361],"Parallel iterator over a B-Tree set",N,N],[3,"Iter",E,R[3334],N,N],[0,"hash_map",R[3332],R[3335],N,N],[3,R[306],R[3362],"Parallel iterator over a hash map",N,N],[3,"Iter",E,"Parallel iterator over an immutable reference to a hash map",N,N],[3,R[631],E,"Parallel iterator over a mutable reference to a hash map",N,N],[0,"hash_set",R[3332],R[3335],N,N],[3,R[306],R[3363],"Parallel iterator over a hash set",N,N],[3,"Iter",E,"Parallel iterator over an immutable reference to a hash set",N,N],[0,"linked_list",R[3332],R[3333],N,N],[3,R[306],R[3364],"Parallel iterator over a linked list",N,N],[3,"Iter",E,"Parallel iterator over an immutable reference to a linked…",N,N],[3,R[631],E,"Parallel iterator over a mutable reference to a linked list",N,N],[0,"vec_deque",R[3332],R[3333],N,N],[3,R[306],R[3365],"Parallel iterator over a double-ended queue",N,N],[3,"Iter",E,"Parallel iterator over an immutable reference to a…",N,N],[3,R[631],E,"Parallel iterator over a mutable reference to a…",N,N],[0,"iter","rayon","Traits for writing parallel programs using an…",N,N],[4,"Either",R[3340],R[3336],N,N],[13,"Left",E,R[3337],0,N],[13,"Right",E,R[3338],0,N],[3,"IterBridge",E,"`IterBridge` is a parallel iterator that wraps a…",N,N],[3,"Chain",E,"`Chain` is an iterator that joins `b` after `a` in one…",N,N],[3,"Chunks",E,"`Chunks` is an iterator that groups elements of an…",N,N],[3,"Enumerate",E,"`Enumerate` is an iterator that returns the current count…",N,N],[3,"Filter",E,"`Filter` takes a predicate `filter_op` and filters out…",N,N],[3,"FilterMap",E,"`FilterMap` creates an iterator that uses `filter_op` to…",N,N],[3,"FlatMap",E,"`FlatMap` maps each element to an iterator, then flattens…",N,N],[3,"Flatten",E,"`Flatten` turns each element to an iterator, then flattens…",N,N],[3,"Fold",E,"`Fold` is an iterator that applies a function over an…",N,N],[3,"FoldWith",E,"`FoldWith` is an iterator that applies a function over an…",N,N],[3,"TryFold",E,"`TryFold` is an iterator that applies a function over an…",N,N],[3,R[3425],E,"`TryFoldWith` is an iterator that applies a function over…",N,N],[3,"Skip",E,"`Skip` is an iterator that skips over the first `n`…",N,N],[3,"Split",E,"`Split` is a parallel iterator using arbitrary data and a…",N,N],[3,"Take",E,"`Take` is an iterator that iterates over the first `n`…",N,N],[3,"Map",E,"`Map` is an iterator that transforms the elements of an…",N,N],[3,"MapInit",E,"`MapInit` is an iterator that transforms the elements of…",N,N],[3,"MapWith",E,"`MapWith` is an iterator that transforms the elements of…",N,N],[3,"Zip",E,"`Zip` is an iterator that zips up `a` and `b` into a…",N,N],[3,"ZipEq",E,"An [`IndexedParallelIterator`] that iterates over two…",N,N],[3,"Interleave",E,"`Interleave` is an iterator that interleaves elements of…",N,N],[3,R[3426],E,"`InterleaveShortest` is an iterator that works similarly…",N,N],[3,R[3427],E,"`Intersperse` is an iterator that inserts a particular…",N,N],[3,"Update",E,"`Update` is an iterator that mutates the elements of an…",N,N],[3,"Rev",E,"`Rev` is an iterator that produces elements in reverse…",N,N],[3,"MaxLen",E,"`MaxLen` is an iterator that imposes a maximum length on…",N,N],[3,"MinLen",E,"`MinLen` is an iterator that imposes a minimum length on…",N,N],[3,"Cloned",E,"`Cloned` is an iterator that clones the elements of an…",N,N],[3,"Inspect",E,"`Inspect` is an iterator that calls a function with a…",N,N],[3,"PanicFuse",E,"`PanicFuse` is an adaptor that wraps an iterator with a…",N,N],[3,"WhileSome",E,"`WhileSome` is an iterator that yields the `Some` elements…",N,N],[3,"Repeat",E,"Iterator adaptor for the `repeat()` function.",N,N],[3,"RepeatN",E,"Iterator adaptor for the `repeatn()` function.",N,N],[3,"Empty",E,"Iterator adaptor for the `empty()` function.",N,N],[3,"Once",E,"Iterator adaptor for the `once()` function.",N,N],[5,"split",E,"The `split` function takes arbitrary data and a closure…",N,[[["d"],["s"]],["split"]]],[5,"repeat",E,"Creates a parallel iterator that endlessly repeats `elt`…",N,[[["clone"],["send"]],[["send"],["clone"],["repeat"]]]],[5,"repeatn",E,"Creates a parallel iterator that produces `n` repeats of…",N,[[["clone"],["usize"],["send"]],[["clone"],["repeatn"],["send"]]]],[5,"empty",E,"Creates a parallel iterator that produces nothing.",N,[[],[["empty"],["send"]]]],[5,"once",E,"Creates a parallel iterator that produces an element…",N,[[["send"]],[["once"],["send"]]]],[0,"plumbing",E,"Traits and functions used to implement parallel iteration.…",N,N],[5,"bridge","rayon::iter::plumbing","This helper function is used to \"connect\" a parallel…",N,[[["c"],["i"]]]],[5,"bridge_producer_consumer",E,"This helper function is used to \"connect\" a producer and a…",N,[[["c"],["usize"],["p"]]]],[5,"bridge_unindexed",E,"A variant of [`bridge_producer_consumer`] where the…",N,[[["c"],["p"]]]],[8,R[3412],E,"The `ProducerCallback` trait is a kind of generic closure,…",N,N],[16,"Output",E,"The type of value returned by this callback. Analogous to…",1,N],[10,"callback",E,"Invokes the callback with the given producer as argument.…",1,[[["p"]]]],[8,"Producer",E,"A `Producer` is effectively a \"splittable `IntoIterator`\".…",N,N],[16,"Item",E,"The type of item that will be produced by this producer…",2,N],[16,R[306],E,"The type of iterator we will become.",2,N],[10,R[45],E,"Convert `self` into an iterator; at this point, no more…",2,[[]]],[11,"min_len",E,"The minimum number of items that we will process…",2,[[["self"]],["usize"]]],[11,"max_len",E,"The maximum number of items that we will process…",2,[[["self"]],["usize"]]],[10,"split_at",E,"Split into two producers; one produces items `0..index`,…",2,[[["usize"]]]],[11,"fold_with",E,R[3339],2,[[["f"]],["f"]]],[8,"Consumer",E,"A consumer is effectively a [generalized \"fold\"…",N,N],[16,"Folder",E,"The type of folder that this consumer can be converted into.",3,N],[16,"Reducer",E,"The type of reducer that is produced if this consumer is…",3,N],[16,"Result",E,"The type of result that this consumer will ultimately…",3,N],[10,"split_at",E,"Divide the consumer into two consumers, one processing…",3,[[["usize"]]]],[10,"into_folder",E,"Convert the consumer into a folder that can consume items…",3,[[]]],[10,"full",E,"Hint whether this `Consumer` would like to stop processing…",3,[[["self"]],["bool"]]],[8,"Folder",E,"The `Folder` trait encapsulates [the standard fold…",N,N],[16,"Result",E,"The type of result that will ultimately be produced by the…",4,N],[10,"consume",E,"Consume next item and return new sequential state.",4,[[["item"]],["self"]]],[11,"consume_iter",E,"Consume items from the iterator until full, and return new…",4,[[["i"]],["self"]]],[10,"complete",E,"Finish consuming items, produce final result.",4,[[]]],[10,"full",E,"Hint whether this `Folder` would like to stop processing…",4,[[["self"]],["bool"]]],[8,"Reducer",E,"The reducer is the final step of a `Consumer` -- after a…",N,N],[10,"reduce",E,"Reduce two final results into one; this is executed after…",5,[[[R[3]]],[R[3]]]],[8,R[3413],E,"A stateless consumer can be freely copied. These consumers…",N,N],[10,"split_off_left",E,"Splits off a \"left\" consumer and returns it. The `self`…",6,[[["self"]],["self"]]],[10,"to_reducer",E,"Creates a reducer that can be used to combine the results…",6,[[["self"]]]],[8,R[3414],E,"A variant on `Producer` which does not know its exact…",N,N],[16,"Item",E,"The type of item returned by this producer.",7,N],[10,"split",E,"Split midway into a new producer if possible, otherwise…",7,[[]]],[10,"fold_with",E,R[3339],7,[[["f"]],["f"]]],[11,"take",R[3340],"Take only `n` repeats of the element, similar to the…",8,[[["usize"]],["repeatn"]]],[11,"zip",E,"Iterate tuples repeating the element with items from…",8,[[["z"]],[["zip",["repeatn"]],["repeatn"]]]],[8,R[3353],E,R[3354],N,N],[10,"par_bridge",E,R[3355],9,[[],[R[3378]]]],[8,R[3415],E,"`IntoParallelIterator` implements the conversion to a…",N,N],[16,"Iter",E,"The parallel iterator type that will be created.",10,N],[16,"Item",E,"The type of item that the parallel iterator will produce.",10,N],[10,R[3358],E,R[3341],10,[[]]],[8,R[3416],E,"`IntoParallelRefIterator` implements the conversion to a…",N,N],[16,"Iter",E,"The type of the parallel iterator that will be returned.",11,N],[16,"Item",E,"The type of item that the parallel iterator will produce.…",11,N],[10,"par_iter",E,R[3341],11,[[["self"]]]],[8,R[3417],E,"`IntoParallelRefMutIterator` implements the conversion to…",N,N],[16,"Iter",E,"The type of iterator that will be created.",12,N],[16,"Item",E,"The type of item that will be produced; this is typically…",12,N],[10,"par_iter_mut",E,"Creates the parallel iterator from `self`.",12,[[["self"]]]],[8,R[3418],E,"Parallel version of the standard iterator trait.",N,N],[16,"Item",E,"The type of item that this parallel iterator produces. For…",13,N],[11,"for_each",E,"Executes `OP` on each item produced by the iterator, in…",13,[[["op"]]]],[11,"for_each_with",E,"Executes `OP` on the given `init` value with each item…",13,[[["op"],[T]]]],[11,"for_each_init",E,"Executes `OP` on a value returned by `init` with each item…",13,[[["op"],["init"]]]],[11,"try_for_each",E,"Executes a fallible `OP` on each item produced by the…",13,[[["op"]],["r"]]],[11,"try_for_each_with",E,"Executes a fallible `OP` on the given `init` value with…",13,[[["op"],[T]],["r"]]],[11,"try_for_each_init",E,"Executes a fallible `OP` on a value returned by `init`…",13,[[["op"],["init"]],["r"]]],[11,"count",E,"Counts the number of items in this parallel iterator.",13,[[],["usize"]]],[11,"map",E,"Applies `map_op` to each item of this iterator, producing…",13,[[["f"]],["map"]]],[11,"map_with",E,"Applies `map_op` to the given `init` value with each item…",13,[[[T],["f"]],["mapwith"]]],[11,"map_init",E,"Applies `map_op` to a value returned by `init` with each…",13,[[["init"],["f"]],["mapinit"]]],[11,"cloned",E,"Creates an iterator which clones all of its elements. This…",13,[[],["cloned"]]],[11,"inspect",E,"Applies `inspect_op` to a reference to each item of this…",13,[[["op"]],["inspect"]]],[11,"update",E,"Mutates each item of this iterator before yielding it.",13,[[["f"]],["update"]]],[11,"filter",E,"Applies `filter_op` to each item of this iterator,…",13,[[["p"]],["filter"]]],[11,"filter_map",E,"Applies `filter_op` to each item of this iterator to get…",13,[[["p"]],["filtermap"]]],[11,"flat_map",E,"Applies `map_op` to each item of this iterator to get…",13,[[["f"]],["flatmap"]]],[11,"flatten",E,"An adaptor that flattens iterable `Item`s into one large…",13,[[],["flatten"]]],[11,"reduce",E,R[3342],13,[[["op"],["id"]]]],[11,"reduce_with",E,R[3342],13,[[["op"]],[R[23]]]],[11,"try_reduce",E,R[3343],13,[[["op"],["id"]]]],[11,"try_reduce_with",E,R[3343],13,[[["op"]],[R[23]]]],[11,"fold",E,"Parallel fold is similar to sequential fold except that…",13,[[["id"],["f"]],["fold"]]],[11,"fold_with",E,"Applies `fold_op` to the given `init` value with each item…",13,[[[T],["f"]],["foldwith"]]],[11,"try_fold",E,"Perform a fallible parallel fold.",13,[[["id"],["f"]],["tryfold"]]],[11,"try_fold_with",E,"Perform a fallible parallel fold with a cloneable `init`…",13,[[[T],["f"]],[R[3379]]]],[11,"sum",E,"Sums up the items in the iterator.",13,[[],["s"]]],[11,"product",E,"Multiplies all the items in the iterator.",13,[[],["p"]]],[11,"min",E,"Computes the minimum of all the items in the iterator. If…",13,[[],[R[23]]]],[11,"min_by",E,"Computes the minimum of all the items in the iterator with…",13,[[["f"]],[R[23]]]],[11,"min_by_key",E,"Computes the item that yields the minimum value for the…",13,[[["f"]],[R[23]]]],[11,"max",E,"Computes the maximum of all the items in the iterator. If…",13,[[],[R[23]]]],[11,"max_by",E,"Computes the maximum of all the items in the iterator with…",13,[[["f"]],[R[23]]]],[11,"max_by_key",E,"Computes the item that yields the maximum value for the…",13,[[["f"]],[R[23]]]],[11,"chain",E,"Takes two iterators and creates a new iterator over both.",13,[[["c"]],["chain"]]],[11,"find_any",E,R[3345],13,[[["p"]],[R[23]]]],[11,"find_first",E,R[3351],13,[[["p"]],[R[23]]]],[11,"find_last",E,R[3352],13,[[["p"]],[R[23]]]],[11,"find_map_any",E,R[3344],13,[[["p"]],[R[23]]]],[11,"find_map_first",E,R[3344],13,[[["p"]],[R[23]]]],[11,"find_map_last",E,R[3344],13,[[["p"]],[R[23]]]],[11,"any",E,R[3345],13,[[["p"]],["bool"]]],[11,"all",E,"Tests that every item in the parallel iterator matches the…",13,[[["p"]],["bool"]]],[11,"while_some",E,"Creates an iterator over the `Some` items of this…",13,[[],["whilesome"]]],[11,"panic_fuse",E,"Wraps an iterator with a fuse in case of panics, to halt…",13,[[],["panicfuse"]]],[11,"collect",E,"Create a fresh collection containing all the element…",13,[[],["c"]]],[11,"unzip",E,"Unzips the items of a parallel iterator into a pair of…",13,[[]]],[11,"partition",E,"Partitions the items of a parallel iterator into a pair of…",13,[[["p"]]]],[11,"partition_map",E,"Partitions and maps the items of a parallel iterator into…",13,[[["p"]]]],[11,R[3346],E,"Intersperses clones of an element between items of this…",13,[[],[R[3346]]]],[10,R[3373],E,R[3347],13,[[["c"]]]],[11,"opt_len",E,R[3347],13,[[["self"]],[[R[23],["usize"]],["usize"]]]],[8,R[3419],E,"An iterator that supports \"random access\" to its data,…",N,N],[11,"collect_into_vec",E,"Collects the results of the iterator into the specified…",14,[[["vec"]]]],[11,"unzip_into_vecs",E,"Unzips the results of the iterator into the specified…",14,[[["vec"],["vec"]]]],[11,"zip",E,"Iterate over tuples `(A, B)`, where the items `A` are from…",14,[[["z"]],["zip"]]],[11,"zip_eq",E,"The same as `Zip`, but requires that both iterators have…",14,[[["z"]],["zipeq"]]],[11,R[3380],E,R[3348],14,[[["i"]],[R[3380]]]],[11,"interleave_shortest",E,R[3348],14,[[["i"]],[R[3381]]]],[11,"chunks",E,"Split an iterator up into fixed-size chunks.",14,[[["usize"]],["chunks"]]],[11,"cmp",E,R[3349],14,[[["i"]],[R[50]]]],[11,R[77],E,R[3349],14,[[["i"]],[[R[23],[R[50]]],[R[50]]]]],[11,"eq",E,R[3350],14,[[["i"]],["bool"]]],[11,"ne",E,R[3350],14,[[["i"]],["bool"]]],[11,"lt",E,R[3350],14,[[["i"]],["bool"]]],[11,"le",E,R[3350],14,[[["i"]],["bool"]]],[11,"gt",E,R[3350],14,[[["i"]],["bool"]]],[11,"ge",E,R[3350],14,[[["i"]],["bool"]]],[11,"enumerate",E,"Yields an index along with each item.",14,[[],["enumerate"]]],[11,"skip",E,"Creates an iterator that skips the first `n` elements.",14,[[["usize"]],["skip"]]],[11,"take",E,"Creates an iterator that yields the first `n` elements.",14,[[["usize"]],["take"]]],[11,"position_any",E,R[3345],14,[[["p"]],[[R[23],["usize"]],["usize"]]]],[11,"position_first",E,R[3351],14,[[["p"]],[[R[23],["usize"]],["usize"]]]],[11,"position_last",E,R[3352],14,[[["p"]],[[R[23],["usize"]],["usize"]]]],[11,"rev",E,"Produces a new iterator with the elements of this iterator…",14,[[],["rev"]]],[11,"with_min_len",E,"Sets the minimum length of iterators desired to process in…",14,[[["usize"]],["minlen"]]],[11,"with_max_len",E,"Sets the maximum length of iterators desired to process in…",14,[[["usize"]],["maxlen"]]],[10,"len",E,"Produces an exact count of how many items this iterator…",14,[[["self"]],["usize"]]],[10,"drive",E,R[3347],14,[[[R[3377]]]]],[10,R[3376],E,R[3347],14,[[["producercallback"]]]],[8,R[3420],E,"`FromParallelIterator` implements the creation of a…",N,N],[10,"from_par_iter",E,"Creates an instance of the collection from the parallel…",15,[[["i"]],["self"]]],[8,R[3421],E,"`ParallelExtend` extends an existing collection with items…",N,N],[10,"par_extend",E,"Extends an instance of the collection with the elements…",16,[[["self"],["i"]]]],[0,R[23],"rayon","Parallel iterator types for [options][std::option]",N,N],[3,R[306],R[3366],"A parallel iterator over the value in [`Some`] variant of…",N,N],[3,"Iter",E,"A parallel iterator over a reference to the [`Some`]…",N,N],[3,R[631],E,"A parallel iterator over a mutable reference to the…",N,N],[0,"prelude","rayon","The rayon prelude imports the various `ParallelIterator`…",N,N],[8,R[3353],"rayon::prelude",R[3354],N,N],[10,"par_bridge",E,R[3355],9,[[],[R[3378]]]],[0,"range","rayon","Parallel iterator types for [ranges][std::range], the type…",N,N],[3,"Iter",R[3367],"Parallel iterator over a range, implemented for all…",N,N],[0,"range_inclusive","rayon","Parallel iterator types for [inclusive…",N,N],[3,"Iter",R[3368],"Parallel iterator over an inclusive range, implemented for…",N,N],[0,R[3],"rayon","Parallel iterator types for [results][std::result]",N,N],[3,R[306],R[3369],"Parallel iterator over a result",N,N],[3,"Iter",E,"Parallel iterator over an immutable reference to a result",N,N],[3,R[631],E,"Parallel iterator over a mutable reference to a result",N,N],[0,"slice","rayon","Parallel iterator types for [slices][std::slice]",N,N],[3,"Iter",R[3370],"Parallel iterator over immutable items in a slice",N,N],[3,"Chunks",E,"Parallel iterator over immutable non-overlapping chunks of…",N,N],[3,"Windows",E,"Parallel iterator over immutable overlapping windows of a…",N,N],[3,R[631],E,"Parallel iterator over mutable items in a slice",N,N],[3,"ChunksMut",E,"Parallel iterator over mutable non-overlapping chunks of a…",N,N],[3,"Split",E,"Parallel iterator over slices separated by a predicate",N,N],[3,"SplitMut",E,"Parallel iterator over mutable slices separated by a…",N,N],[8,R[3422],E,"Parallel extensions for slices.",N,N],[10,"as_parallel_slice",E,"Returns a plain slice, which is used to implement the rest…",17,[[["self"]]]],[11,"par_split",E,"Returns a parallel iterator over subslices separated by…",17,[[["self"],["p"]],["split"]]],[11,"par_windows",E,"Returns a parallel iterator over all contiguous windows of…",17,[[["self"],["usize"]],["windows"]]],[11,"par_chunks",E,R[3356],17,[[["self"],["usize"]],["chunks"]]],[8,R[3423],E,"Parallel extensions for mutable slices.",N,N],[10,"as_parallel_slice_mut",E,"Returns a plain mutable slice, which is used to implement…",18,[[["self"]]]],[11,"par_split_mut",E,"Returns a parallel iterator over mutable subslices…",18,[[["self"],["p"]],["splitmut"]]],[11,"par_chunks_mut",E,R[3356],18,[[["self"],["usize"]],["chunksmut"]]],[11,"par_sort",E,"Sorts the slice in parallel.",18,[[["self"]]]],[11,"par_sort_by",E,"Sorts the slice in parallel with a comparator function.",18,[[["self"],["f"]]]],[11,"par_sort_by_key",E,"Sorts the slice in parallel with a key extraction function.",18,[[["self"],["f"]]]],[11,"par_sort_unstable",E,"Sorts the slice in parallel, but may not preserve the…",18,[[["self"]]]],[11,"par_sort_unstable_by",E,"Sorts the slice in parallel with a comparator function,…",18,[[["self"],["f"]]]],[11,"par_sort_unstable_by_key",E,"Sorts the slice in parallel with a key extraction…",18,[[["self"],["f"]]]],[0,"str","rayon","Parallel iterator types for [strings][std::str]",N,N],[3,"Chars",R[3374],"Parallel iterator over the characters of a string",N,N],[3,R[3428],E,"Parallel iterator over the characters of a string, with…",N,N],[3,"Bytes",E,"Parallel iterator over the bytes of a string",N,N],[3,R[3429],E,"Parallel iterator over a string encoded as UTF-16",N,N],[3,"Split",E,"Parallel iterator over substrings separated by a pattern",N,N],[3,R[3430],E,"Parallel iterator over substrings separated by a…",N,N],[3,"Lines",E,"Parallel iterator over lines in a string",N,N],[3,R[3431],E,"Parallel iterator over substrings separated by whitespace",N,N],[3,"Matches",E,"Parallel iterator over substrings that match a pattern",N,N],[3,R[3432],E,"Parallel iterator over substrings that match a pattern,…",N,N],[8,R[3424],E,"Parallel extensions for strings.",N,N],[10,"as_parallel_string",E,"Returns a plain string slice, which is used to implement…",19,[[["self"]],["str"]]],[11,"par_chars",E,"Returns a parallel iterator over the characters of a string.",19,[[["self"]],["chars"]]],[11,"par_char_indices",E,"Returns a parallel iterator over the characters of a…",19,[[["self"]],[R[3382]]]],[11,"par_bytes",E,"Returns a parallel iterator over the bytes of a string.",19,[[["self"]],["bytes"]]],[11,"par_encode_utf16",E,"Returns a parallel iterator over a string encoded as UTF-16.",19,[[["self"]],[R[3383]]]],[11,"par_split",E,"Returns a parallel iterator over substrings separated by a…",19,[[["self"],["pattern"]],[["split"],["pattern"]]]],[11,"par_split_terminator",E,"Returns a parallel iterator over substrings terminated by…",19,[[["self"],["pattern"]],[["pattern"],[R[3384]]]]],[11,"par_lines",E,"Returns a parallel iterator over the lines of a string,…",19,[[["self"]],["lines"]]],[11,"par_split_whitespace",E,"Returns a parallel iterator over the sub-slices of a…",19,[[["self"]],[R[3385]]]],[11,"par_matches",E,R[3357],19,[[["self"],["pattern"]],[["matches"],["pattern"]]]],[11,"par_match_indices",E,R[3357],19,[[["self"],["pattern"]],[[R[3386]],["pattern"]]]],[0,"vec","rayon","Parallel iterator types for [vectors][std::vec] (`Vec<T>`)",N,N],[3,R[306],R[3375],"Parallel iterator that moves out of a vector.",N,N],[11,"into","rayon",E,20,[[],[U]]],[11,"from",E,E,20,[[[T]],[T]]],[11,R[4],E,E,20,[[[U]],[R[3]]]],[11,R[5],E,E,20,[[],[R[3]]]],[11,R[7],E,E,20,[[["self"]],[T]]],[11,R[6],E,E,20,[[["self"]],[T]]],[11,R[8],E,E,20,[[["self"]],[R[9]]]],[11,"into",E,E,21,[[],[U]]],[11,"from",E,E,21,[[[T]],[T]]],[11,R[4],E,E,21,[[[U]],[R[3]]]],[11,R[5],E,E,21,[[],[R[3]]]],[11,R[7],E,E,21,[[["self"]],[T]]],[11,R[6],E,E,21,[[["self"]],[T]]],[11,R[8],E,E,21,[[["self"]],[R[9]]]],[11,"into",E,E,22,[[],[U]]],[11,"from",E,E,22,[[[T]],[T]]],[11,R[4],E,E,22,[[[U]],[R[3]]]],[11,R[5],E,E,22,[[],[R[3]]]],[11,R[7],E,E,22,[[["self"]],[T]]],[11,R[6],E,E,22,[[["self"]],[T]]],[11,R[8],E,E,22,[[["self"]],[R[9]]]],[11,"into",E,E,23,[[],[U]]],[11,R[113],E,E,23,[[["self"]],["string"]]],[11,"from",E,E,23,[[[T]],[T]]],[11,R[4],E,E,23,[[[U]],[R[3]]]],[11,R[5],E,E,23,[[],[R[3]]]],[11,R[7],E,E,23,[[["self"]],[T]]],[11,R[6],E,E,23,[[["self"]],[T]]],[11,R[8],E,E,23,[[["self"]],[R[9]]]],[11,"into",E,E,24,[[],[U]]],[11,"from",E,E,24,[[[T]],[T]]],[11,R[4],E,E,24,[[[U]],[R[3]]]],[11,R[5],E,E,24,[[],[R[3]]]],[11,R[7],E,E,24,[[["self"]],[T]]],[11,R[6],E,E,24,[[["self"]],[T]]],[11,R[8],E,E,24,[[["self"]],[R[9]]]],[11,"into",E,E,25,[[],[U]]],[11,"from",E,E,25,[[[T]],[T]]],[11,R[4],E,E,25,[[[U]],[R[3]]]],[11,R[5],E,E,25,[[],[R[3]]]],[11,R[7],E,E,25,[[["self"]],[T]]],[11,R[6],E,E,25,[[["self"]],[T]]],[11,R[8],E,E,25,[[["self"]],[R[9]]]],[11,"into",E,E,26,[[],[U]]],[11,"from",E,E,26,[[[T]],[T]]],[11,R[4],E,E,26,[[[U]],[R[3]]]],[11,R[5],E,E,26,[[],[R[3]]]],[11,R[7],E,E,26,[[["self"]],[T]]],[11,R[6],E,E,26,[[["self"]],[T]]],[11,R[8],E,E,26,[[["self"]],[R[9]]]],[11,R[3358],R[3359],E,27,[[],[T]]],[11,"into",E,E,27,[[],[U]]],[11,"from",E,E,27,[[[T]],[T]]],[11,R[46],E,E,27,[[["self"]],[T]]],[11,R[47],E,E,27,[[["self"],[T]]]],[11,R[4],E,E,27,[[[U]],[R[3]]]],[11,R[5],E,E,27,[[],[R[3]]]],[11,R[7],E,E,27,[[["self"]],[T]]],[11,R[6],E,E,27,[[["self"]],[T]]],[11,R[8],E,E,27,[[["self"]],[R[9]]]],[11,R[3358],E,E,28,[[],[T]]],[11,"into",E,E,28,[[],[U]]],[11,"from",E,E,28,[[[T]],[T]]],[11,R[46],E,E,28,[[["self"]],[T]]],[11,R[47],E,E,28,[[["self"],[T]]]],[11,R[4],E,E,28,[[[U]],[R[3]]]],[11,R[5],E,E,28,[[],[R[3]]]],[11,R[7],E,E,28,[[["self"]],[T]]],[11,R[6],E,E,28,[[["self"]],[T]]],[11,R[8],E,E,28,[[["self"]],[R[9]]]],[11,R[3358],R[3360],E,29,[[],[T]]],[11,"into",E,E,29,[[],[U]]],[11,"from",E,E,29,[[[T]],[T]]],[11,R[4],E,E,29,[[[U]],[R[3]]]],[11,R[5],E,E,29,[[],[R[3]]]],[11,R[7],E,E,29,[[["self"]],[T]]],[11,R[6],E,E,29,[[["self"]],[T]]],[11,R[8],E,E,29,[[["self"]],[R[9]]]],[11,R[3358],E,E,30,[[],[T]]],[11,"into",E,E,30,[[],[U]]],[11,"from",E,E,30,[[[T]],[T]]],[11,R[46],E,E,30,[[["self"]],[T]]],[11,R[47],E,E,30,[[["self"],[T]]]],[11,R[4],E,E,30,[[[U]],[R[3]]]],[11,R[5],E,E,30,[[],[R[3]]]],[11,R[7],E,E,30,[[["self"]],[T]]],[11,R[6],E,E,30,[[["self"]],[T]]],[11,R[8],E,E,30,[[["self"]],[R[9]]]],[11,R[3358],E,E,31,[[],[T]]],[11,"into",E,E,31,[[],[U]]],[11,"from",E,E,31,[[[T]],[T]]],[11,R[4],E,E,31,[[[U]],[R[3]]]],[11,R[5],E,E,31,[[],[R[3]]]],[11,R[7],E,E,31,[[["self"]],[T]]],[11,R[6],E,E,31,[[["self"]],[T]]],[11,R[8],E,E,31,[[["self"]],[R[9]]]],[11,R[3358],R[3361],E,32,[[],[T]]],[11,"into",E,E,32,[[],[U]]],[11,"from",E,E,32,[[[T]],[T]]],[11,R[4],E,E,32,[[[U]],[R[3]]]],[11,R[5],E,E,32,[[],[R[3]]]],[11,R[7],E,E,32,[[["self"]],[T]]],[11,R[6],E,E,32,[[["self"]],[T]]],[11,R[8],E,E,32,[[["self"]],[R[9]]]],[11,R[3358],E,E,33,[[],[T]]],[11,"into",E,E,33,[[],[U]]],[11,"from",E,E,33,[[[T]],[T]]],[11,R[46],E,E,33,[[["self"]],[T]]],[11,R[47],E,E,33,[[["self"],[T]]]],[11,R[4],E,E,33,[[[U]],[R[3]]]],[11,R[5],E,E,33,[[],[R[3]]]],[11,R[7],E,E,33,[[["self"]],[T]]],[11,R[6],E,E,33,[[["self"]],[T]]],[11,R[8],E,E,33,[[["self"]],[R[9]]]],[11,R[3358],R[3362],E,34,[[],[T]]],[11,"into",E,E,34,[[],[U]]],[11,"from",E,E,34,[[[T]],[T]]],[11,R[4],E,E,34,[[[U]],[R[3]]]],[11,R[5],E,E,34,[[],[R[3]]]],[11,R[7],E,E,34,[[["self"]],[T]]],[11,R[6],E,E,34,[[["self"]],[T]]],[11,R[8],E,E,34,[[["self"]],[R[9]]]],[11,R[3358],E,E,35,[[],[T]]],[11,"into",E,E,35,[[],[U]]],[11,"from",E,E,35,[[[T]],[T]]],[11,R[46],E,E,35,[[["self"]],[T]]],[11,R[47],E,E,35,[[["self"],[T]]]],[11,R[4],E,E,35,[[[U]],[R[3]]]],[11,R[5],E,E,35,[[],[R[3]]]],[11,R[7],E,E,35,[[["self"]],[T]]],[11,R[6],E,E,35,[[["self"]],[T]]],[11,R[8],E,E,35,[[["self"]],[R[9]]]],[11,R[3358],E,E,36,[[],[T]]],[11,"into",E,E,36,[[],[U]]],[11,"from",E,E,36,[[[T]],[T]]],[11,R[4],E,E,36,[[[U]],[R[3]]]],[11,R[5],E,E,36,[[],[R[3]]]],[11,R[7],E,E,36,[[["self"]],[T]]],[11,R[6],E,E,36,[[["self"]],[T]]],[11,R[8],E,E,36,[[["self"]],[R[9]]]],[11,R[3358],R[3363],E,37,[[],[T]]],[11,"into",E,E,37,[[],[U]]],[11,"from",E,E,37,[[[T]],[T]]],[11,R[4],E,E,37,[[[U]],[R[3]]]],[11,R[5],E,E,37,[[],[R[3]]]],[11,R[7],E,E,37,[[["self"]],[T]]],[11,R[6],E,E,37,[[["self"]],[T]]],[11,R[8],E,E,37,[[["self"]],[R[9]]]],[11,R[3358],E,E,38,[[],[T]]],[11,"into",E,E,38,[[],[U]]],[11,"from",E,E,38,[[[T]],[T]]],[11,R[46],E,E,38,[[["self"]],[T]]],[11,R[47],E,E,38,[[["self"],[T]]]],[11,R[4],E,E,38,[[[U]],[R[3]]]],[11,R[5],E,E,38,[[],[R[3]]]],[11,R[7],E,E,38,[[["self"]],[T]]],[11,R[6],E,E,38,[[["self"]],[T]]],[11,R[8],E,E,38,[[["self"]],[R[9]]]],[11,R[3358],R[3364],E,39,[[],[T]]],[11,"into",E,E,39,[[],[U]]],[11,"from",E,E,39,[[[T]],[T]]],[11,R[46],E,E,39,[[["self"]],[T]]],[11,R[47],E,E,39,[[["self"],[T]]]],[11,R[4],E,E,39,[[[U]],[R[3]]]],[11,R[5],E,E,39,[[],[R[3]]]],[11,R[7],E,E,39,[[["self"]],[T]]],[11,R[6],E,E,39,[[["self"]],[T]]],[11,R[8],E,E,39,[[["self"]],[R[9]]]],[11,R[3358],E,E,40,[[],[T]]],[11,"into",E,E,40,[[],[U]]],[11,"from",E,E,40,[[[T]],[T]]],[11,R[46],E,E,40,[[["self"]],[T]]],[11,R[47],E,E,40,[[["self"],[T]]]],[11,R[4],E,E,40,[[[U]],[R[3]]]],[11,R[5],E,E,40,[[],[R[3]]]],[11,R[7],E,E,40,[[["self"]],[T]]],[11,R[6],E,E,40,[[["self"]],[T]]],[11,R[8],E,E,40,[[["self"]],[R[9]]]],[11,R[3358],E,E,41,[[],[T]]],[11,"into",E,E,41,[[],[U]]],[11,"from",E,E,41,[[[T]],[T]]],[11,R[4],E,E,41,[[[U]],[R[3]]]],[11,R[5],E,E,41,[[],[R[3]]]],[11,R[7],E,E,41,[[["self"]],[T]]],[11,R[6],E,E,41,[[["self"]],[T]]],[11,R[8],E,E,41,[[["self"]],[R[9]]]],[11,R[3358],R[3365],E,42,[[],[T]]],[11,"into",E,E,42,[[],[U]]],[11,"from",E,E,42,[[[T]],[T]]],[11,R[46],E,E,42,[[["self"]],[T]]],[11,R[47],E,E,42,[[["self"],[T]]]],[11,R[4],E,E,42,[[[U]],[R[3]]]],[11,R[5],E,E,42,[[],[R[3]]]],[11,R[7],E,E,42,[[["self"]],[T]]],[11,R[6],E,E,42,[[["self"]],[T]]],[11,R[8],E,E,42,[[["self"]],[R[9]]]],[11,R[3358],E,E,43,[[],[T]]],[11,"into",E,E,43,[[],[U]]],[11,"from",E,E,43,[[[T]],[T]]],[11,R[46],E,E,43,[[["self"]],[T]]],[11,R[47],E,E,43,[[["self"],[T]]]],[11,R[4],E,E,43,[[[U]],[R[3]]]],[11,R[5],E,E,43,[[],[R[3]]]],[11,R[7],E,E,43,[[["self"]],[T]]],[11,R[6],E,E,43,[[["self"]],[T]]],[11,R[8],E,E,43,[[["self"]],[R[9]]]],[11,R[3358],E,E,44,[[],[T]]],[11,"into",E,E,44,[[],[U]]],[11,"from",E,E,44,[[[T]],[T]]],[11,R[4],E,E,44,[[[U]],[R[3]]]],[11,R[5],E,E,44,[[],[R[3]]]],[11,R[7],E,E,44,[[["self"]],[T]]],[11,R[6],E,E,44,[[["self"]],[T]]],[11,R[8],E,E,44,[[["self"]],[R[9]]]],[11,R[3358],R[3340],E,0,[[],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[45],E,E,0,[[],["i"]]],[11,R[113],E,E,0,[[["self"]],["string"]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[46],E,E,0,[[["self"]],[T]]],[11,R[47],E,E,0,[[["self"],[T]]]],[11,R[4],E,E,0,[[[U]],[R[3]]]],[11,R[5],E,E,0,[[],[R[3]]]],[11,R[7],E,E,0,[[["self"]],[T]]],[11,R[6],E,E,0,[[["self"]],[T]]],[11,R[8],E,E,0,[[["self"]],[R[9]]]],[11,R[3358],E,E,45,[[],[T]]],[11,"into",E,E,45,[[],[U]]],[11,"from",E,E,45,[[[T]],[T]]],[11,R[46],E,E,45,[[["self"]],[T]]],[11,R[47],E,E,45,[[["self"],[T]]]],[11,R[4],E,E,45,[[[U]],[R[3]]]],[11,R[5],E,E,45,[[],[R[3]]]],[11,R[7],E,E,45,[[["self"]],[T]]],[11,R[6],E,E,45,[[["self"]],[T]]],[11,R[8],E,E,45,[[["self"]],[R[9]]]],[11,R[3358],E,E,46,[[],[T]]],[11,"into",E,E,46,[[],[U]]],[11,"from",E,E,46,[[[T]],[T]]],[11,R[46],E,E,46,[[["self"]],[T]]],[11,R[47],E,E,46,[[["self"],[T]]]],[11,R[4],E,E,46,[[[U]],[R[3]]]],[11,R[5],E,E,46,[[],[R[3]]]],[11,R[7],E,E,46,[[["self"]],[T]]],[11,R[6],E,E,46,[[["self"]],[T]]],[11,R[8],E,E,46,[[["self"]],[R[9]]]],[11,R[3358],E,E,47,[[],[T]]],[11,"into",E,E,47,[[],[U]]],[11,"from",E,E,47,[[[T]],[T]]],[11,R[46],E,E,47,[[["self"]],[T]]],[11,R[47],E,E,47,[[["self"],[T]]]],[11,R[4],E,E,47,[[[U]],[R[3]]]],[11,R[5],E,E,47,[[],[R[3]]]],[11,R[7],E,E,47,[[["self"]],[T]]],[11,R[6],E,E,47,[[["self"]],[T]]],[11,R[8],E,E,47,[[["self"]],[R[9]]]],[11,R[3358],E,E,48,[[],[T]]],[11,"into",E,E,48,[[],[U]]],[11,"from",E,E,48,[[[T]],[T]]],[11,R[46],E,E,48,[[["self"]],[T]]],[11,R[47],E,E,48,[[["self"],[T]]]],[11,R[4],E,E,48,[[[U]],[R[3]]]],[11,R[5],E,E,48,[[],[R[3]]]],[11,R[7],E,E,48,[[["self"]],[T]]],[11,R[6],E,E,48,[[["self"]],[T]]],[11,R[8],E,E,48,[[["self"]],[R[9]]]],[11,R[3358],E,E,49,[[],[T]]],[11,"into",E,E,49,[[],[U]]],[11,"from",E,E,49,[[[T]],[T]]],[11,R[46],E,E,49,[[["self"]],[T]]],[11,R[47],E,E,49,[[["self"],[T]]]],[11,R[4],E,E,49,[[[U]],[R[3]]]],[11,R[5],E,E,49,[[],[R[3]]]],[11,R[7],E,E,49,[[["self"]],[T]]],[11,R[6],E,E,49,[[["self"]],[T]]],[11,R[8],E,E,49,[[["self"]],[R[9]]]],[11,R[3358],E,E,50,[[],[T]]],[11,"into",E,E,50,[[],[U]]],[11,"from",E,E,50,[[[T]],[T]]],[11,R[46],E,E,50,[[["self"]],[T]]],[11,R[47],E,E,50,[[["self"],[T]]]],[11,R[4],E,E,50,[[[U]],[R[3]]]],[11,R[5],E,E,50,[[],[R[3]]]],[11,R[7],E,E,50,[[["self"]],[T]]],[11,R[6],E,E,50,[[["self"]],[T]]],[11,R[8],E,E,50,[[["self"]],[R[9]]]],[11,R[3358],E,E,51,[[],[T]]],[11,"into",E,E,51,[[],[U]]],[11,"from",E,E,51,[[[T]],[T]]],[11,R[46],E,E,51,[[["self"]],[T]]],[11,R[47],E,E,51,[[["self"],[T]]]],[11,R[4],E,E,51,[[[U]],[R[3]]]],[11,R[5],E,E,51,[[],[R[3]]]],[11,R[7],E,E,51,[[["self"]],[T]]],[11,R[6],E,E,51,[[["self"]],[T]]],[11,R[8],E,E,51,[[["self"]],[R[9]]]],[11,R[3358],E,E,52,[[],[T]]],[11,"into",E,E,52,[[],[U]]],[11,"from",E,E,52,[[[T]],[T]]],[11,R[46],E,E,52,[[["self"]],[T]]],[11,R[47],E,E,52,[[["self"],[T]]]],[11,R[4],E,E,52,[[[U]],[R[3]]]],[11,R[5],E,E,52,[[],[R[3]]]],[11,R[7],E,E,52,[[["self"]],[T]]],[11,R[6],E,E,52,[[["self"]],[T]]],[11,R[8],E,E,52,[[["self"]],[R[9]]]],[11,R[3358],E,E,53,[[],[T]]],[11,"into",E,E,53,[[],[U]]],[11,"from",E,E,53,[[[T]],[T]]],[11,R[46],E,E,53,[[["self"]],[T]]],[11,R[47],E,E,53,[[["self"],[T]]]],[11,R[4],E,E,53,[[[U]],[R[3]]]],[11,R[5],E,E,53,[[],[R[3]]]],[11,R[7],E,E,53,[[["self"]],[T]]],[11,R[6],E,E,53,[[["self"]],[T]]],[11,R[8],E,E,53,[[["self"]],[R[9]]]],[11,R[3358],E,E,54,[[],[T]]],[11,"into",E,E,54,[[],[U]]],[11,"from",E,E,54,[[[T]],[T]]],[11,R[46],E,E,54,[[["self"]],[T]]],[11,R[47],E,E,54,[[["self"],[T]]]],[11,R[4],E,E,54,[[[U]],[R[3]]]],[11,R[5],E,E,54,[[],[R[3]]]],[11,R[7],E,E,54,[[["self"]],[T]]],[11,R[6],E,E,54,[[["self"]],[T]]],[11,R[8],E,E,54,[[["self"]],[R[9]]]],[11,R[3358],E,E,55,[[],[T]]],[11,"into",E,E,55,[[],[U]]],[11,"from",E,E,55,[[[T]],[T]]],[11,R[46],E,E,55,[[["self"]],[T]]],[11,R[47],E,E,55,[[["self"],[T]]]],[11,R[4],E,E,55,[[[U]],[R[3]]]],[11,R[5],E,E,55,[[],[R[3]]]],[11,R[7],E,E,55,[[["self"]],[T]]],[11,R[6],E,E,55,[[["self"]],[T]]],[11,R[8],E,E,55,[[["self"]],[R[9]]]],[11,R[3358],E,E,56,[[],[T]]],[11,"into",E,E,56,[[],[U]]],[11,"from",E,E,56,[[[T]],[T]]],[11,R[46],E,E,56,[[["self"]],[T]]],[11,R[47],E,E,56,[[["self"],[T]]]],[11,R[4],E,E,56,[[[U]],[R[3]]]],[11,R[5],E,E,56,[[],[R[3]]]],[11,R[7],E,E,56,[[["self"]],[T]]],[11,R[6],E,E,56,[[["self"]],[T]]],[11,R[8],E,E,56,[[["self"]],[R[9]]]],[11,R[3358],E,E,57,[[],[T]]],[11,"into",E,E,57,[[],[U]]],[11,"from",E,E,57,[[[T]],[T]]],[11,R[46],E,E,57,[[["self"]],[T]]],[11,R[47],E,E,57,[[["self"],[T]]]],[11,R[4],E,E,57,[[[U]],[R[3]]]],[11,R[5],E,E,57,[[],[R[3]]]],[11,R[7],E,E,57,[[["self"]],[T]]],[11,R[6],E,E,57,[[["self"]],[T]]],[11,R[8],E,E,57,[[["self"]],[R[9]]]],[11,R[3358],E,E,58,[[],[T]]],[11,"into",E,E,58,[[],[U]]],[11,"from",E,E,58,[[[T]],[T]]],[11,R[46],E,E,58,[[["self"]],[T]]],[11,R[47],E,E,58,[[["self"],[T]]]],[11,R[4],E,E,58,[[[U]],[R[3]]]],[11,R[5],E,E,58,[[],[R[3]]]],[11,R[7],E,E,58,[[["self"]],[T]]],[11,R[6],E,E,58,[[["self"]],[T]]],[11,R[8],E,E,58,[[["self"]],[R[9]]]],[11,R[3358],E,E,59,[[],[T]]],[11,"into",E,E,59,[[],[U]]],[11,"from",E,E,59,[[[T]],[T]]],[11,R[46],E,E,59,[[["self"]],[T]]],[11,R[47],E,E,59,[[["self"],[T]]]],[11,R[4],E,E,59,[[[U]],[R[3]]]],[11,R[5],E,E,59,[[],[R[3]]]],[11,R[7],E,E,59,[[["self"]],[T]]],[11,R[6],E,E,59,[[["self"]],[T]]],[11,R[8],E,E,59,[[["self"]],[R[9]]]],[11,R[3358],E,E,60,[[],[T]]],[11,"into",E,E,60,[[],[U]]],[11,"from",E,E,60,[[[T]],[T]]],[11,R[46],E,E,60,[[["self"]],[T]]],[11,R[47],E,E,60,[[["self"],[T]]]],[11,R[4],E,E,60,[[[U]],[R[3]]]],[11,R[5],E,E,60,[[],[R[3]]]],[11,R[7],E,E,60,[[["self"]],[T]]],[11,R[6],E,E,60,[[["self"]],[T]]],[11,R[8],E,E,60,[[["self"]],[R[9]]]],[11,R[3358],E,E,61,[[],[T]]],[11,"into",E,E,61,[[],[U]]],[11,"from",E,E,61,[[[T]],[T]]],[11,R[46],E,E,61,[[["self"]],[T]]],[11,R[47],E,E,61,[[["self"],[T]]]],[11,R[4],E,E,61,[[[U]],[R[3]]]],[11,R[5],E,E,61,[[],[R[3]]]],[11,R[7],E,E,61,[[["self"]],[T]]],[11,R[6],E,E,61,[[["self"]],[T]]],[11,R[8],E,E,61,[[["self"]],[R[9]]]],[11,R[3358],E,E,62,[[],[T]]],[11,"into",E,E,62,[[],[U]]],[11,"from",E,E,62,[[[T]],[T]]],[11,R[46],E,E,62,[[["self"]],[T]]],[11,R[47],E,E,62,[[["self"],[T]]]],[11,R[4],E,E,62,[[[U]],[R[3]]]],[11,R[5],E,E,62,[[],[R[3]]]],[11,R[7],E,E,62,[[["self"]],[T]]],[11,R[6],E,E,62,[[["self"]],[T]]],[11,R[8],E,E,62,[[["self"]],[R[9]]]],[11,R[3358],E,E,63,[[],[T]]],[11,"into",E,E,63,[[],[U]]],[11,"from",E,E,63,[[[T]],[T]]],[11,R[46],E,E,63,[[["self"]],[T]]],[11,R[47],E,E,63,[[["self"],[T]]]],[11,R[4],E,E,63,[[[U]],[R[3]]]],[11,R[5],E,E,63,[[],[R[3]]]],[11,R[7],E,E,63,[[["self"]],[T]]],[11,R[6],E,E,63,[[["self"]],[T]]],[11,R[8],E,E,63,[[["self"]],[R[9]]]],[11,R[3358],E,E,64,[[],[T]]],[11,"into",E,E,64,[[],[U]]],[11,"from",E,E,64,[[[T]],[T]]],[11,R[46],E,E,64,[[["self"]],[T]]],[11,R[47],E,E,64,[[["self"],[T]]]],[11,R[4],E,E,64,[[[U]],[R[3]]]],[11,R[5],E,E,64,[[],[R[3]]]],[11,R[7],E,E,64,[[["self"]],[T]]],[11,R[6],E,E,64,[[["self"]],[T]]],[11,R[8],E,E,64,[[["self"]],[R[9]]]],[11,R[3358],E,E,65,[[],[T]]],[11,"into",E,E,65,[[],[U]]],[11,"from",E,E,65,[[[T]],[T]]],[11,R[46],E,E,65,[[["self"]],[T]]],[11,R[47],E,E,65,[[["self"],[T]]]],[11,R[4],E,E,65,[[[U]],[R[3]]]],[11,R[5],E,E,65,[[],[R[3]]]],[11,R[7],E,E,65,[[["self"]],[T]]],[11,R[6],E,E,65,[[["self"]],[T]]],[11,R[8],E,E,65,[[["self"]],[R[9]]]],[11,R[3358],E,E,66,[[],[T]]],[11,"into",E,E,66,[[],[U]]],[11,"from",E,E,66,[[[T]],[T]]],[11,R[46],E,E,66,[[["self"]],[T]]],[11,R[47],E,E,66,[[["self"],[T]]]],[11,R[4],E,E,66,[[[U]],[R[3]]]],[11,R[5],E,E,66,[[],[R[3]]]],[11,R[7],E,E,66,[[["self"]],[T]]],[11,R[6],E,E,66,[[["self"]],[T]]],[11,R[8],E,E,66,[[["self"]],[R[9]]]],[11,R[3358],E,E,67,[[],[T]]],[11,"into",E,E,67,[[],[U]]],[11,"from",E,E,67,[[[T]],[T]]],[11,R[46],E,E,67,[[["self"]],[T]]],[11,R[47],E,E,67,[[["self"],[T]]]],[11,R[4],E,E,67,[[[U]],[R[3]]]],[11,R[5],E,E,67,[[],[R[3]]]],[11,R[7],E,E,67,[[["self"]],[T]]],[11,R[6],E,E,67,[[["self"]],[T]]],[11,R[8],E,E,67,[[["self"]],[R[9]]]],[11,R[3358],E,E,68,[[],[T]]],[11,"into",E,E,68,[[],[U]]],[11,"from",E,E,68,[[[T]],[T]]],[11,R[46],E,E,68,[[["self"]],[T]]],[11,R[47],E,E,68,[[["self"],[T]]]],[11,R[4],E,E,68,[[[U]],[R[3]]]],[11,R[5],E,E,68,[[],[R[3]]]],[11,R[7],E,E,68,[[["self"]],[T]]],[11,R[6],E,E,68,[[["self"]],[T]]],[11,R[8],E,E,68,[[["self"]],[R[9]]]],[11,R[3358],E,E,69,[[],[T]]],[11,"into",E,E,69,[[],[U]]],[11,"from",E,E,69,[[[T]],[T]]],[11,R[46],E,E,69,[[["self"]],[T]]],[11,R[47],E,E,69,[[["self"],[T]]]],[11,R[4],E,E,69,[[[U]],[R[3]]]],[11,R[5],E,E,69,[[],[R[3]]]],[11,R[7],E,E,69,[[["self"]],[T]]],[11,R[6],E,E,69,[[["self"]],[T]]],[11,R[8],E,E,69,[[["self"]],[R[9]]]],[11,R[3358],E,E,70,[[],[T]]],[11,"into",E,E,70,[[],[U]]],[11,"from",E,E,70,[[[T]],[T]]],[11,R[46],E,E,70,[[["self"]],[T]]],[11,R[47],E,E,70,[[["self"],[T]]]],[11,R[4],E,E,70,[[[U]],[R[3]]]],[11,R[5],E,E,70,[[],[R[3]]]],[11,R[7],E,E,70,[[["self"]],[T]]],[11,R[6],E,E,70,[[["self"]],[T]]],[11,R[8],E,E,70,[[["self"]],[R[9]]]],[11,R[3358],E,E,71,[[],[T]]],[11,"into",E,E,71,[[],[U]]],[11,"from",E,E,71,[[[T]],[T]]],[11,R[46],E,E,71,[[["self"]],[T]]],[11,R[47],E,E,71,[[["self"],[T]]]],[11,R[4],E,E,71,[[[U]],[R[3]]]],[11,R[5],E,E,71,[[],[R[3]]]],[11,R[7],E,E,71,[[["self"]],[T]]],[11,R[6],E,E,71,[[["self"]],[T]]],[11,R[8],E,E,71,[[["self"]],[R[9]]]],[11,R[3358],E,E,72,[[],[T]]],[11,"into",E,E,72,[[],[U]]],[11,"from",E,E,72,[[[T]],[T]]],[11,R[46],E,E,72,[[["self"]],[T]]],[11,R[47],E,E,72,[[["self"],[T]]]],[11,R[4],E,E,72,[[[U]],[R[3]]]],[11,R[5],E,E,72,[[],[R[3]]]],[11,R[7],E,E,72,[[["self"]],[T]]],[11,R[6],E,E,72,[[["self"]],[T]]],[11,R[8],E,E,72,[[["self"]],[R[9]]]],[11,R[3358],E,E,73,[[],[T]]],[11,"into",E,E,73,[[],[U]]],[11,"from",E,E,73,[[[T]],[T]]],[11,R[46],E,E,73,[[["self"]],[T]]],[11,R[47],E,E,73,[[["self"],[T]]]],[11,R[4],E,E,73,[[[U]],[R[3]]]],[11,R[5],E,E,73,[[],[R[3]]]],[11,R[7],E,E,73,[[["self"]],[T]]],[11,R[6],E,E,73,[[["self"]],[T]]],[11,R[8],E,E,73,[[["self"]],[R[9]]]],[11,R[3358],E,E,74,[[],[T]]],[11,"into",E,E,74,[[],[U]]],[11,"from",E,E,74,[[[T]],[T]]],[11,R[46],E,E,74,[[["self"]],[T]]],[11,R[47],E,E,74,[[["self"],[T]]]],[11,R[4],E,E,74,[[[U]],[R[3]]]],[11,R[5],E,E,74,[[],[R[3]]]],[11,R[7],E,E,74,[[["self"]],[T]]],[11,R[6],E,E,74,[[["self"]],[T]]],[11,R[8],E,E,74,[[["self"]],[R[9]]]],[11,R[3358],E,E,75,[[],[T]]],[11,"into",E,E,75,[[],[U]]],[11,"from",E,E,75,[[[T]],[T]]],[11,R[46],E,E,75,[[["self"]],[T]]],[11,R[47],E,E,75,[[["self"],[T]]]],[11,R[4],E,E,75,[[[U]],[R[3]]]],[11,R[5],E,E,75,[[],[R[3]]]],[11,R[7],E,E,75,[[["self"]],[T]]],[11,R[6],E,E,75,[[["self"]],[T]]],[11,R[8],E,E,75,[[["self"]],[R[9]]]],[11,R[3358],E,E,8,[[],[T]]],[11,"into",E,E,8,[[],[U]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[46],E,E,8,[[["self"]],[T]]],[11,R[47],E,E,8,[[["self"],[T]]]],[11,R[4],E,E,8,[[[U]],[R[3]]]],[11,R[5],E,E,8,[[],[R[3]]]],[11,R[7],E,E,8,[[["self"]],[T]]],[11,R[6],E,E,8,[[["self"]],[T]]],[11,R[8],E,E,8,[[["self"]],[R[9]]]],[11,R[3358],E,E,76,[[],[T]]],[11,"into",E,E,76,[[],[U]]],[11,"from",E,E,76,[[[T]],[T]]],[11,R[46],E,E,76,[[["self"]],[T]]],[11,R[47],E,E,76,[[["self"],[T]]]],[11,R[4],E,E,76,[[[U]],[R[3]]]],[11,R[5],E,E,76,[[],[R[3]]]],[11,R[7],E,E,76,[[["self"]],[T]]],[11,R[6],E,E,76,[[["self"]],[T]]],[11,R[8],E,E,76,[[["self"]],[R[9]]]],[11,R[3358],E,E,77,[[],[T]]],[11,"into",E,E,77,[[],[U]]],[11,"from",E,E,77,[[[T]],[T]]],[11,R[46],E,E,77,[[["self"]],[T]]],[11,R[47],E,E,77,[[["self"],[T]]]],[11,R[4],E,E,77,[[[U]],[R[3]]]],[11,R[5],E,E,77,[[],[R[3]]]],[11,R[7],E,E,77,[[["self"]],[T]]],[11,R[6],E,E,77,[[["self"]],[T]]],[11,R[8],E,E,77,[[["self"]],[R[9]]]],[11,R[3358],E,E,78,[[],[T]]],[11,"into",E,E,78,[[],[U]]],[11,"from",E,E,78,[[[T]],[T]]],[11,R[46],E,E,78,[[["self"]],[T]]],[11,R[47],E,E,78,[[["self"],[T]]]],[11,R[4],E,E,78,[[[U]],[R[3]]]],[11,R[5],E,E,78,[[],[R[3]]]],[11,R[7],E,E,78,[[["self"]],[T]]],[11,R[6],E,E,78,[[["self"]],[T]]],[11,R[8],E,E,78,[[["self"]],[R[9]]]],[11,R[3358],R[3366],E,79,[[],[T]]],[11,"into",E,E,79,[[],[U]]],[11,"from",E,E,79,[[[T]],[T]]],[11,R[46],E,E,79,[[["self"]],[T]]],[11,R[47],E,E,79,[[["self"],[T]]]],[11,R[4],E,E,79,[[[U]],[R[3]]]],[11,R[5],E,E,79,[[],[R[3]]]],[11,R[7],E,E,79,[[["self"]],[T]]],[11,R[6],E,E,79,[[["self"]],[T]]],[11,R[8],E,E,79,[[["self"]],[R[9]]]],[11,R[3358],E,E,80,[[],[T]]],[11,"into",E,E,80,[[],[U]]],[11,"from",E,E,80,[[[T]],[T]]],[11,R[46],E,E,80,[[["self"]],[T]]],[11,R[47],E,E,80,[[["self"],[T]]]],[11,R[4],E,E,80,[[[U]],[R[3]]]],[11,R[5],E,E,80,[[],[R[3]]]],[11,R[7],E,E,80,[[["self"]],[T]]],[11,R[6],E,E,80,[[["self"]],[T]]],[11,R[8],E,E,80,[[["self"]],[R[9]]]],[11,R[3358],E,E,81,[[],[T]]],[11,"into",E,E,81,[[],[U]]],[11,"from",E,E,81,[[[T]],[T]]],[11,R[4],E,E,81,[[[U]],[R[3]]]],[11,R[5],E,E,81,[[],[R[3]]]],[11,R[7],E,E,81,[[["self"]],[T]]],[11,R[6],E,E,81,[[["self"]],[T]]],[11,R[8],E,E,81,[[["self"]],[R[9]]]],[11,R[3358],R[3367],E,82,[[],[T]]],[11,"into",E,E,82,[[],[U]]],[11,"from",E,E,82,[[[T]],[T]]],[11,R[46],E,E,82,[[["self"]],[T]]],[11,R[47],E,E,82,[[["self"],[T]]]],[11,R[4],E,E,82,[[[U]],[R[3]]]],[11,R[5],E,E,82,[[],[R[3]]]],[11,R[7],E,E,82,[[["self"]],[T]]],[11,R[6],E,E,82,[[["self"]],[T]]],[11,R[8],E,E,82,[[["self"]],[R[9]]]],[11,R[3358],R[3368],E,83,[[],[T]]],[11,"into",E,E,83,[[],[U]]],[11,"from",E,E,83,[[[T]],[T]]],[11,R[46],E,E,83,[[["self"]],[T]]],[11,R[47],E,E,83,[[["self"],[T]]]],[11,R[4],E,E,83,[[[U]],[R[3]]]],[11,R[5],E,E,83,[[],[R[3]]]],[11,R[7],E,E,83,[[["self"]],[T]]],[11,R[6],E,E,83,[[["self"]],[T]]],[11,R[8],E,E,83,[[["self"]],[R[9]]]],[11,R[3358],R[3369],E,84,[[],[T]]],[11,"into",E,E,84,[[],[U]]],[11,"from",E,E,84,[[[T]],[T]]],[11,R[46],E,E,84,[[["self"]],[T]]],[11,R[47],E,E,84,[[["self"],[T]]]],[11,R[4],E,E,84,[[[U]],[R[3]]]],[11,R[5],E,E,84,[[],[R[3]]]],[11,R[7],E,E,84,[[["self"]],[T]]],[11,R[6],E,E,84,[[["self"]],[T]]],[11,R[8],E,E,84,[[["self"]],[R[9]]]],[11,R[3358],E,E,85,[[],[T]]],[11,"into",E,E,85,[[],[U]]],[11,"from",E,E,85,[[[T]],[T]]],[11,R[46],E,E,85,[[["self"]],[T]]],[11,R[47],E,E,85,[[["self"],[T]]]],[11,R[4],E,E,85,[[[U]],[R[3]]]],[11,R[5],E,E,85,[[],[R[3]]]],[11,R[7],E,E,85,[[["self"]],[T]]],[11,R[6],E,E,85,[[["self"]],[T]]],[11,R[8],E,E,85,[[["self"]],[R[9]]]],[11,R[3358],E,E,86,[[],[T]]],[11,"into",E,E,86,[[],[U]]],[11,"from",E,E,86,[[[T]],[T]]],[11,R[4],E,E,86,[[[U]],[R[3]]]],[11,R[5],E,E,86,[[],[R[3]]]],[11,R[7],E,E,86,[[["self"]],[T]]],[11,R[6],E,E,86,[[["self"]],[T]]],[11,R[8],E,E,86,[[["self"]],[R[9]]]],[11,R[3358],R[3370],E,87,[[],[T]]],[11,"into",E,E,87,[[],[U]]],[11,"from",E,E,87,[[[T]],[T]]],[11,R[46],E,E,87,[[["self"]],[T]]],[11,R[47],E,E,87,[[["self"],[T]]]],[11,R[4],E,E,87,[[[U]],[R[3]]]],[11,R[5],E,E,87,[[],[R[3]]]],[11,R[7],E,E,87,[[["self"]],[T]]],[11,R[6],E,E,87,[[["self"]],[T]]],[11,R[8],E,E,87,[[["self"]],[R[9]]]],[11,R[3358],E,E,88,[[],[T]]],[11,"into",E,E,88,[[],[U]]],[11,"from",E,E,88,[[[T]],[T]]],[11,R[46],E,E,88,[[["self"]],[T]]],[11,R[47],E,E,88,[[["self"],[T]]]],[11,R[4],E,E,88,[[[U]],[R[3]]]],[11,R[5],E,E,88,[[],[R[3]]]],[11,R[7],E,E,88,[[["self"]],[T]]],[11,R[6],E,E,88,[[["self"]],[T]]],[11,R[8],E,E,88,[[["self"]],[R[9]]]],[11,R[3358],E,E,89,[[],[T]]],[11,"into",E,E,89,[[],[U]]],[11,"from",E,E,89,[[[T]],[T]]],[11,R[46],E,E,89,[[["self"]],[T]]],[11,R[47],E,E,89,[[["self"],[T]]]],[11,R[4],E,E,89,[[[U]],[R[3]]]],[11,R[5],E,E,89,[[],[R[3]]]],[11,R[7],E,E,89,[[["self"]],[T]]],[11,R[6],E,E,89,[[["self"]],[T]]],[11,R[8],E,E,89,[[["self"]],[R[9]]]],[11,R[3358],E,E,90,[[],[T]]],[11,"into",E,E,90,[[],[U]]],[11,"from",E,E,90,[[[T]],[T]]],[11,R[4],E,E,90,[[[U]],[R[3]]]],[11,R[5],E,E,90,[[],[R[3]]]],[11,R[7],E,E,90,[[["self"]],[T]]],[11,R[6],E,E,90,[[["self"]],[T]]],[11,R[8],E,E,90,[[["self"]],[R[9]]]],[11,R[3358],E,E,91,[[],[T]]],[11,"into",E,E,91,[[],[U]]],[11,"from",E,E,91,[[[T]],[T]]],[11,R[4],E,E,91,[[[U]],[R[3]]]],[11,R[5],E,E,91,[[],[R[3]]]],[11,R[7],E,E,91,[[["self"]],[T]]],[11,R[6],E,E,91,[[["self"]],[T]]],[11,R[8],E,E,91,[[["self"]],[R[9]]]],[11,R[3358],E,E,92,[[],[T]]],[11,"into",E,E,92,[[],[U]]],[11,"from",E,E,92,[[[T]],[T]]],[11,R[46],E,E,92,[[["self"]],[T]]],[11,R[47],E,E,92,[[["self"],[T]]]],[11,R[4],E,E,92,[[[U]],[R[3]]]],[11,R[5],E,E,92,[[],[R[3]]]],[11,R[7],E,E,92,[[["self"]],[T]]],[11,R[6],E,E,92,[[["self"]],[T]]],[11,R[8],E,E,92,[[["self"]],[R[9]]]],[11,R[3358],E,E,93,[[],[T]]],[11,"into",E,E,93,[[],[U]]],[11,"from",E,E,93,[[[T]],[T]]],[11,R[4],E,E,93,[[[U]],[R[3]]]],[11,R[5],E,E,93,[[],[R[3]]]],[11,R[7],E,E,93,[[["self"]],[T]]],[11,R[6],E,E,93,[[["self"]],[T]]],[11,R[8],E,E,93,[[["self"]],[R[9]]]],[11,R[3358],R[3374],E,94,[[],[T]]],[11,"into",E,E,94,[[],[U]]],[11,"from",E,E,94,[[[T]],[T]]],[11,R[46],E,E,94,[[["self"]],[T]]],[11,R[47],E,E,94,[[["self"],[T]]]],[11,R[4],E,E,94,[[[U]],[R[3]]]],[11,R[5],E,E,94,[[],[R[3]]]],[11,R[7],E,E,94,[[["self"]],[T]]],[11,R[6],E,E,94,[[["self"]],[T]]],[11,R[8],E,E,94,[[["self"]],[R[9]]]],[11,R[3358],E,E,95,[[],[T]]],[11,"into",E,E,95,[[],[U]]],[11,"from",E,E,95,[[[T]],[T]]],[11,R[46],E,E,95,[[["self"]],[T]]],[11,R[47],E,E,95,[[["self"],[T]]]],[11,R[4],E,E,95,[[[U]],[R[3]]]],[11,R[5],E,E,95,[[],[R[3]]]],[11,R[7],E,E,95,[[["self"]],[T]]],[11,R[6],E,E,95,[[["self"]],[T]]],[11,R[8],E,E,95,[[["self"]],[R[9]]]],[11,R[3358],E,E,96,[[],[T]]],[11,"into",E,E,96,[[],[U]]],[11,"from",E,E,96,[[[T]],[T]]],[11,R[46],E,E,96,[[["self"]],[T]]],[11,R[47],E,E,96,[[["self"],[T]]]],[11,R[4],E,E,96,[[[U]],[R[3]]]],[11,R[5],E,E,96,[[],[R[3]]]],[11,R[7],E,E,96,[[["self"]],[T]]],[11,R[6],E,E,96,[[["self"]],[T]]],[11,R[8],E,E,96,[[["self"]],[R[9]]]],[11,R[3358],E,E,97,[[],[T]]],[11,"into",E,E,97,[[],[U]]],[11,"from",E,E,97,[[[T]],[T]]],[11,R[46],E,E,97,[[["self"]],[T]]],[11,R[47],E,E,97,[[["self"],[T]]]],[11,R[4],E,E,97,[[[U]],[R[3]]]],[11,R[5],E,E,97,[[],[R[3]]]],[11,R[7],E,E,97,[[["self"]],[T]]],[11,R[6],E,E,97,[[["self"]],[T]]],[11,R[8],E,E,97,[[["self"]],[R[9]]]],[11,R[3358],E,E,98,[[],[T]]],[11,"into",E,E,98,[[],[U]]],[11,"from",E,E,98,[[[T]],[T]]],[11,R[46],E,E,98,[[["self"]],[T]]],[11,R[47],E,E,98,[[["self"],[T]]]],[11,R[4],E,E,98,[[[U]],[R[3]]]],[11,R[5],E,E,98,[[],[R[3]]]],[11,R[7],E,E,98,[[["self"]],[T]]],[11,R[6],E,E,98,[[["self"]],[T]]],[11,R[8],E,E,98,[[["self"]],[R[9]]]],[11,R[3358],E,E,99,[[],[T]]],[11,"into",E,E,99,[[],[U]]],[11,"from",E,E,99,[[[T]],[T]]],[11,R[46],E,E,99,[[["self"]],[T]]],[11,R[47],E,E,99,[[["self"],[T]]]],[11,R[4],E,E,99,[[[U]],[R[3]]]],[11,R[5],E,E,99,[[],[R[3]]]],[11,R[7],E,E,99,[[["self"]],[T]]],[11,R[6],E,E,99,[[["self"]],[T]]],[11,R[8],E,E,99,[[["self"]],[R[9]]]],[11,R[3358],E,E,100,[[],[T]]],[11,"into",E,E,100,[[],[U]]],[11,"from",E,E,100,[[[T]],[T]]],[11,R[46],E,E,100,[[["self"]],[T]]],[11,R[47],E,E,100,[[["self"],[T]]]],[11,R[4],E,E,100,[[[U]],[R[3]]]],[11,R[5],E,E,100,[[],[R[3]]]],[11,R[7],E,E,100,[[["self"]],[T]]],[11,R[6],E,E,100,[[["self"]],[T]]],[11,R[8],E,E,100,[[["self"]],[R[9]]]],[11,R[3358],E,E,101,[[],[T]]],[11,"into",E,E,101,[[],[U]]],[11,"from",E,E,101,[[[T]],[T]]],[11,R[46],E,E,101,[[["self"]],[T]]],[11,R[47],E,E,101,[[["self"],[T]]]],[11,R[4],E,E,101,[[[U]],[R[3]]]],[11,R[5],E,E,101,[[],[R[3]]]],[11,R[7],E,E,101,[[["self"]],[T]]],[11,R[6],E,E,101,[[["self"]],[T]]],[11,R[8],E,E,101,[[["self"]],[R[9]]]],[11,R[3358],E,E,102,[[],[T]]],[11,"into",E,E,102,[[],[U]]],[11,"from",E,E,102,[[[T]],[T]]],[11,R[46],E,E,102,[[["self"]],[T]]],[11,R[47],E,E,102,[[["self"],[T]]]],[11,R[4],E,E,102,[[[U]],[R[3]]]],[11,R[5],E,E,102,[[],[R[3]]]],[11,R[7],E,E,102,[[["self"]],[T]]],[11,R[6],E,E,102,[[["self"]],[T]]],[11,R[8],E,E,102,[[["self"]],[R[9]]]],[11,R[3358],E,E,103,[[],[T]]],[11,"into",E,E,103,[[],[U]]],[11,"from",E,E,103,[[[T]],[T]]],[11,R[46],E,E,103,[[["self"]],[T]]],[11,R[47],E,E,103,[[["self"],[T]]]],[11,R[4],E,E,103,[[[U]],[R[3]]]],[11,R[5],E,E,103,[[],[R[3]]]],[11,R[7],E,E,103,[[["self"]],[T]]],[11,R[6],E,E,103,[[["self"]],[T]]],[11,R[8],E,E,103,[[["self"]],[R[9]]]],[11,R[3358],R[3375],E,104,[[],[T]]],[11,"into",E,E,104,[[],[U]]],[11,"from",E,E,104,[[[T]],[T]]],[11,R[46],E,E,104,[[["self"]],[T]]],[11,R[47],E,E,104,[[["self"],[T]]]],[11,R[4],E,E,104,[[[U]],[R[3]]]],[11,R[5],E,E,104,[[],[R[3]]]],[11,R[7],E,E,104,[[["self"]],[T]]],[11,R[6],E,E,104,[[["self"]],[T]]],[11,R[8],E,E,104,[[["self"]],[R[9]]]],[11,"eq",R[3340],E,0,[[["self"],["either"]],["bool"]]],[11,"ne",E,E,0,[[["self"],["either"]],["bool"]]],[11,"as_mut",E,E,0,[[["self"]]]],[11,"as_mut",E,E,0,[[["self"]],["str"]]],[11,"as_mut",E,E,0,[[["self"]],["target"]]],[11,"from",E,E,0,[[[R[3]]],["either"]]],[11,"fmt",E,E,0,[[["self"],[R[10]]],[[R[3],["error"]],["error"]]]],[11,"clone",E,E,0,[[["self"]],["either"]]],[11,R[77],E,E,0,[[["self"],["either"]],[[R[50]],[R[23],[R[50]]]]]],[11,"lt",E,E,0,[[["self"],["either"]],["bool"]]],[11,"le",E,E,0,[[["self"],["either"]],["bool"]]],[11,"gt",E,E,0,[[["self"],["either"]],["bool"]]],[11,"ge",E,E,0,[[["self"],["either"]],["bool"]]],[11,"into",E,E,0,[[],[R[3]]]],[11,"deref",E,E,0,[[["self"]]]],[11,R[52],E,E,0,[[["self"]],[R[23]]]],[11,"as_ref",E,E,0,[[["self"]]]],[11,"as_ref",E,E,0,[[["self"]],["str"]]],[11,"as_ref",E,E,0,[[["self"]],["target"]]],[11,"cmp",E,E,0,[[["self"],["either"]],[R[50]]]],[11,"extend",E,E,0,[[["self"],[T]]]],[11,R[17],E,E,0,[[["self"]]]],[11,"hash",E,E,0,[[["self"],["__h"]]]],[11,"next",E,E,0,[[["self"]],[R[23]]]],[11,R[53],E,E,0,[[["self"]]]],[11,"fold",E,E,0,[[["acc"],["g"]],["acc"]]],[11,"count",E,E,0,[[],["usize"]]],[11,"last",E,E,0,[[],[R[23]]]],[11,"nth",E,E,0,[[["self"],["usize"]],[R[23]]]],[11,"collect",E,E,0,[[],["b"]]],[11,"all",E,E,0,[[["self"],["f"]],["bool"]]],[11,"fmt",E,E,0,[[["self"],[R[10]]],[[R[3],["error"]],["error"]]]],[11,"fmt","rayon",E,23,[[["self"],[R[10]]],[[R[3],["error"]],["error"]]]],[11,R[157],E,E,23,[[["self"]],["str"]]],[11,"fmt",E,E,24,[[["self"],[R[10]]],[[R[3],["error"]],["error"]]]],[11,"fmt",E,E,25,[[["self"],[R[10]]],[[R[3],["error"]],["error"]]]],[11,"fmt",E,E,23,[[["self"],[R[10]]],[[R[3],["error"]],["error"]]]],[11,"fmt",E,E,26,[[["self"],[R[10]]],[[R[3],["error"]],["error"]]]],[11,"fmt",E,E,20,[[["self"],[R[10]]],[[R[3],["error"]],["error"]]]],[11,"fmt",E,E,21,[[["self"],[R[10]]],[[R[3],["error"]],["error"]]]],[11,"fmt",E,E,22,[[["self"],[R[10]]],[[R[3],["error"]],["error"]]]],[11,R[83],E,E,24,[[],[[R[3387],[R[3372]]],[R[3372]]]]],[11,"drop",E,E,22,[[["self"]]]],[11,R[3373],R[3359],E,27,[[["c"]]]],[11,"opt_len",E,E,27,[[["self"]],[[R[23],["usize"]],["usize"]]]],[11,R[3373],E,E,28,[[["c"]]]],[11,"opt_len",E,E,28,[[["self"]],[[R[23],["usize"]],["usize"]]]],[11,R[3373],R[3360],E,29,[[["c"]]]],[11,"opt_len",E,E,29,[[["self"]],[[R[23],["usize"]],["usize"]]]],[11,R[3373],E,E,30,[[["c"]]]],[11,"opt_len",E,E,30,[[["self"]],[[R[23],["usize"]],["usize"]]]],[11,R[3373],E,E,31,[[["c"]]]],[11,"opt_len",E,E,31,[[["self"]],[[R[23],["usize"]],["usize"]]]],[11,R[3373],R[3361],E,32,[[["c"]]]],[11,"opt_len",E,E,32,[[["self"]],[[R[23],["usize"]],["usize"]]]],[11,R[3373],E,E,33,[[["c"]]]],[11,"opt_len",E,E,33,[[["self"]],[[R[23],["usize"]],["usize"]]]],[11,R[3373],R[3362],E,34,[[["c"]]]],[11,"opt_len",E,E,34,[[["self"]],[[R[23],["usize"]],["usize"]]]],[11,R[3373],E,E,35,[[["c"]]]],[11,"opt_len",E,E,35,[[["self"]],[[R[23],["usize"]],["usize"]]]],[11,R[3373],E,E,36,[[["c"]]]],[11,"opt_len",E,E,36,[[["self"]],[[R[23],["usize"]],["usize"]]]],[11,R[3373],R[3363],E,37,[[["c"]]]],[11,"opt_len",E,E,37,[[["self"]],[[R[23],["usize"]],["usize"]]]],[11,R[3373],E,E,38,[[["c"]]]],[11,"opt_len",E,E,38,[[["self"]],[[R[23],["usize"]],["usize"]]]],[11,R[3373],R[3364],E,39,[[["c"]]]],[11,"opt_len",E,E,39,[[["self"]],[[R[23],["usize"]],["usize"]]]],[11,R[3373],E,E,40,[[["c"]]]],[11,"opt_len",E,E,40,[[["self"]],[[R[23],["usize"]],["usize"]]]],[11,R[3373],E,E,41,[[["c"]]]],[11,"opt_len",E,E,41,[[["self"]],[[R[23],["usize"]],["usize"]]]],[11,R[3373],R[3365],E,42,[[["c"]]]],[11,"opt_len",E,E,42,[[["self"]],[[R[23],["usize"]],["usize"]]]],[11,R[3373],E,E,43,[[["c"]]]],[11,"opt_len",E,E,43,[[["self"]],[[R[23],["usize"]],["usize"]]]],[11,R[3373],E,E,44,[[["c"]]]],[11,"opt_len",E,E,44,[[["self"]],[[R[23],["usize"]],["usize"]]]],[11,R[3373],R[3340],E,45,[[["c"]]]],[11,R[3373],E,E,46,[[["c"]]]],[11,"opt_len",E,E,46,[[["self"]],[[R[23],["usize"]],["usize"]]]],[11,R[3373],E,E,47,[[["c"]]]],[11,"opt_len",E,E,47,[[["self"]],[[R[23],["usize"]],["usize"]]]],[11,R[3373],E,E,48,[[["c"]]]],[11,"opt_len",E,E,48,[[["self"]],[[R[23],["usize"]],["usize"]]]],[11,R[3373],E,E,49,[[["c"]]]],[11,R[3373],E,E,50,[[["c"]]]],[11,R[3373],E,E,51,[[["c"]]]],[11,R[3373],E,E,52,[[["c"]]]],[11,R[3373],E,E,53,[[["c"]]]],[11,R[3373],E,E,54,[[["c"]]]],[11,R[3373],E,E,55,[[["c"]]]],[11,R[3373],E,E,56,[[["c"]]]],[11,R[3373],E,E,57,[[["c"]]]],[11,"opt_len",E,E,57,[[["self"]],[[R[23],["usize"]],["usize"]]]],[11,R[3373],E,E,58,[[["c"]]]],[11,R[3373],E,E,59,[[["c"]]]],[11,"opt_len",E,E,59,[[["self"]],[[R[23],["usize"]],["usize"]]]],[11,R[3373],E,E,60,[[["c"]]]],[11,"opt_len",E,E,60,[[["self"]],[[R[23],["usize"]],["usize"]]]],[11,R[3373],E,E,62,[[["c"]]]],[11,"opt_len",E,E,62,[[["self"]],[[R[23],["usize"]],["usize"]]]],[11,R[3373],E,E,61,[[["c"]]]],[11,"opt_len",E,E,61,[[["self"]],[[R[23],["usize"]],["usize"]]]],[11,R[3373],E,E,63,[[["c"]]]],[11,"opt_len",E,E,63,[[["self"]],[[R[23],["usize"]],["usize"]]]],[11,R[3373],E,E,64,[[["c"]]]],[11,"opt_len",E,E,64,[[["self"]],[[R[23],["usize"]],["usize"]]]],[11,R[3373],E,E,65,[[["c"]]]],[11,"opt_len",E,E,65,[[["self"]],[[R[23],["usize"]],["usize"]]]],[11,R[3373],E,E,66,[[["c"]]]],[11,"opt_len",E,E,66,[[["self"]],[[R[23],["usize"]],["usize"]]]],[11,R[3373],E,E,67,[[["c"]]]],[11,"opt_len",E,E,67,[[["self"]],[[R[23],["usize"]],["usize"]]]],[11,R[3373],E,E,68,[[["c"]]]],[11,"opt_len",E,E,68,[[["self"]],[[R[23],["usize"]],["usize"]]]],[11,R[3373],E,E,69,[[["c"]]]],[11,"opt_len",E,E,69,[[["self"]],[[R[23],["usize"]],["usize"]]]],[11,R[3373],E,E,71,[[["c"]]]],[11,"opt_len",E,E,71,[[["self"]],[[R[23],["usize"]],["usize"]]]],[11,R[3373],E,E,70,[[["c"]]]],[11,"opt_len",E,E,70,[[["self"]],[[R[23],["usize"]],["usize"]]]],[11,R[3373],E,E,72,[[["c"]]]],[11,"opt_len",E,E,72,[[["self"]],[[R[23],["usize"]],["usize"]]]],[11,R[3373],E,E,73,[[["c"]]]],[11,"opt_len",E,E,73,[[["self"]],[[R[23],["usize"]],["usize"]]]],[11,R[3373],E,E,74,[[["c"]]]],[11,"opt_len",E,E,74,[[["self"]],[[R[23],["usize"]],["usize"]]]],[11,R[3373],E,E,75,[[["c"]]]],[11,R[3373],E,E,8,[[["c"]]]],[11,R[3373],E,E,76,[[["c"]]]],[11,"opt_len",E,E,76,[[["self"]],[[R[23],["usize"]],["usize"]]]],[11,R[3373],E,E,77,[[["c"]]]],[11,"opt_len",E,E,77,[[["self"]],[[R[23],["usize"]],["usize"]]]],[11,R[3373],E,E,78,[[["c"]]]],[11,"opt_len",E,E,78,[[["self"]],[[R[23],["usize"]],["usize"]]]],[11,R[3373],R[3366],E,79,[[["c"]]]],[11,"opt_len",E,E,79,[[["self"]],[[R[23],["usize"]],["usize"]]]],[11,R[3373],E,E,80,[[["c"]]]],[11,"opt_len",E,E,80,[[["self"]],[[R[23],["usize"]],["usize"]]]],[11,R[3373],E,E,81,[[["c"]]]],[11,"opt_len",E,E,81,[[["self"]],[[R[23],["usize"]],["usize"]]]],[11,R[3373],R[3367],E,82,[[["c"]]]],[11,"opt_len",E,E,82,[[["self"]],[[R[23],["usize"]],["usize"]]]],[11,R[3373],E,E,82,[[["c"]]]],[11,"opt_len",E,E,82,[[["self"]],[[R[23],["usize"]],["usize"]]]],[11,R[3373],E,E,82,[[["c"]]]],[11,"opt_len",E,E,82,[[["self"]],[[R[23],["usize"]],["usize"]]]],[11,R[3373],E,E,82,[[["c"]]]],[11,"opt_len",E,E,82,[[["self"]],[[R[23],["usize"]],["usize"]]]],[11,R[3373],E,E,82,[[["c"]]]],[11,"opt_len",E,E,82,[[["self"]],[[R[23],["usize"]],["usize"]]]],[11,R[3373],E,E,82,[[["c"]]]],[11,"opt_len",E,E,82,[[["self"]],[[R[23],["usize"]],["usize"]]]],[11,R[3373],E,E,82,[[["c"]]]],[11,"opt_len",E,E,82,[[["self"]],[[R[23],["usize"]],["usize"]]]],[11,R[3373],E,E,82,[[["c"]]]],[11,"opt_len",E,E,82,[[["self"]],[[R[23],["usize"]],["usize"]]]],[11,R[3373],E,E,82,[[["c"]]]],[11,"opt_len",E,E,82,[[["self"]],[[R[23],["usize"]],["usize"]]]],[11,R[3373],E,E,82,[[["c"]]]],[11,"opt_len",E,E,82,[[["self"]],[[R[23],["usize"]],["usize"]]]],[11,R[3373],E,E,82,[[["c"]]]],[11,"opt_len",E,E,82,[[["self"]],[[R[23],["usize"]],["usize"]]]],[11,R[3373],E,E,82,[[["c"]]]],[11,"opt_len",E,E,82,[[["self"]],[[R[23],["usize"]],["usize"]]]],[11,R[3373],R[3368],E,83,[[["c"]]]],[11,"opt_len",E,E,83,[[["self"]],[[R[23],["usize"]],["usize"]]]],[11,R[3373],E,E,83,[[["c"]]]],[11,"opt_len",E,E,83,[[["self"]],[[R[23],["usize"]],["usize"]]]],[11,R[3373],E,E,83,[[["c"]]]],[11,"opt_len",E,E,83,[[["self"]],[[R[23],["usize"]],["usize"]]]],[11,R[3373],E,E,83,[[["c"]]]],[11,"opt_len",E,E,83,[[["self"]],[[R[23],["usize"]],["usize"]]]],[11,R[3373],E,E,83,[[["c"]]]],[11,"opt_len",E,E,83,[[["self"]],[[R[23],["usize"]],["usize"]]]],[11,R[3373],E,E,83,[[["c"]]]],[11,"opt_len",E,E,83,[[["self"]],[[R[23],["usize"]],["usize"]]]],[11,R[3373],E,E,83,[[["c"]]]],[11,"opt_len",E,E,83,[[["self"]],[[R[23],["usize"]],["usize"]]]],[11,R[3373],E,E,83,[[["c"]]]],[11,"opt_len",E,E,83,[[["self"]],[[R[23],["usize"]],["usize"]]]],[11,R[3373],E,E,83,[[["c"]]]],[11,"opt_len",E,E,83,[[["self"]],[[R[23],["usize"]],["usize"]]]],[11,R[3373],E,E,83,[[["c"]]]],[11,"opt_len",E,E,83,[[["self"]],[[R[23],["usize"]],["usize"]]]],[11,R[3373],E,E,83,[[["c"]]]],[11,"opt_len",E,E,83,[[["self"]],[[R[23],["usize"]],["usize"]]]],[11,R[3373],E,E,83,[[["c"]]]],[11,"opt_len",E,E,83,[[["self"]],[[R[23],["usize"]],["usize"]]]],[11,R[3373],R[3369],E,84,[[["c"]]]],[11,"opt_len",E,E,84,[[["self"]],[[R[23],["usize"]],["usize"]]]],[11,R[3373],E,E,85,[[["c"]]]],[11,"opt_len",E,E,85,[[["self"]],[[R[23],["usize"]],["usize"]]]],[11,R[3373],E,E,86,[[["c"]]]],[11,"opt_len",E,E,86,[[["self"]],[[R[23],["usize"]],["usize"]]]],[11,R[3373],R[3370],E,87,[[["c"]]]],[11,"opt_len",E,E,87,[[["self"]],[[R[23],["usize"]],["usize"]]]],[11,R[3373],E,E,88,[[["c"]]]],[11,"opt_len",E,E,88,[[["self"]],[[R[23],["usize"]],["usize"]]]],[11,R[3373],E,E,89,[[["c"]]]],[11,"opt_len",E,E,89,[[["self"]],[[R[23],["usize"]],["usize"]]]],[11,R[3373],E,E,90,[[["c"]]]],[11,"opt_len",E,E,90,[[["self"]],[[R[23],["usize"]],["usize"]]]],[11,R[3373],E,E,91,[[["c"]]]],[11,"opt_len",E,E,91,[[["self"]],[[R[23],["usize"]],["usize"]]]],[11,R[3373],E,E,92,[[["c"]]]],[11,R[3373],E,E,93,[[["c"]]]],[11,R[3373],R[3374],E,94,[[["c"]]]],[11,R[3373],E,E,95,[[["c"]]]],[11,R[3373],E,E,96,[[["c"]]]],[11,R[3373],E,E,97,[[["c"]]]],[11,R[3373],E,E,98,[[["c"]]]],[11,R[3373],E,E,99,[[["c"]]]],[11,R[3373],E,E,100,[[["c"]]]],[11,R[3373],E,E,101,[[["c"]]]],[11,R[3373],E,E,102,[[["c"]]]],[11,R[3373],E,E,103,[[["c"]]]],[11,R[3373],R[3375],E,104,[[["c"]]]],[11,"opt_len",E,E,104,[[["self"]],[[R[23],["usize"]],["usize"]]]],[11,R[3373],R[3340],E,0,[[["c"]]]],[11,"opt_len",E,E,0,[[["self"]],[[R[23],["usize"]],["usize"]]]],[11,"drive",R[3359],E,27,[[["c"]]]],[11,"len",E,E,27,[[["self"]],["usize"]]],[11,R[3376],E,E,27,[[["cb"]]]],[11,"drive",E,E,28,[[["c"]]]],[11,"len",E,E,28,[[["self"]],["usize"]]],[11,R[3376],E,E,28,[[["cb"]]]],[11,"drive",R[3365],E,42,[[["c"]]]],[11,"len",E,E,42,[[["self"]],["usize"]]],[11,R[3376],E,E,42,[[["cb"]]]],[11,"drive",E,E,43,[[["c"]]]],[11,"len",E,E,43,[[["self"]],["usize"]]],[11,R[3376],E,E,43,[[["cb"]]]],[11,"drive",E,E,44,[[["c"]]]],[11,"len",E,E,44,[[["self"]],["usize"]]],[11,R[3376],E,E,44,[[["cb"]]]],[11,"drive",R[3340],E,46,[[["c"]]]],[11,"len",E,E,46,[[["self"]],["usize"]]],[11,R[3376],E,E,46,[[["cb"]]]],[11,"drive",E,E,47,[[["c"]]]],[11,"len",E,E,47,[[["self"]],["usize"]]],[11,R[3376],E,E,47,[[["cb"]]]],[11,"drive",E,E,48,[[[R[3377]]]]],[11,"len",E,E,48,[[["self"]],["usize"]]],[11,R[3376],E,E,48,[[["cb"]]]],[11,"len",E,E,57,[[["self"]],["usize"]]],[11,"drive",E,E,57,[[[R[3377]]]]],[11,R[3376],E,E,57,[[["cb"]]]],[11,"len",E,E,59,[[["self"]],["usize"]]],[11,"drive",E,E,59,[[[R[3377]]]]],[11,R[3376],E,E,59,[[["cb"]]]],[11,"drive",E,E,60,[[["c"]]]],[11,"len",E,E,60,[[["self"]],["usize"]]],[11,R[3376],E,E,60,[[["cb"]]]],[11,"drive",E,E,62,[[["c"]]]],[11,"len",E,E,62,[[["self"]],["usize"]]],[11,R[3376],E,E,62,[[["cb"]]]],[11,"drive",E,E,61,[[["c"]]]],[11,"len",E,E,61,[[["self"]],["usize"]]],[11,R[3376],E,E,61,[[["cb"]]]],[11,"drive",E,E,63,[[["c"]]]],[11,"len",E,E,63,[[["self"]],["usize"]]],[11,R[3376],E,E,63,[[["cb"]]]],[11,"drive",E,E,64,[[["c"]]]],[11,"len",E,E,64,[[["self"]],["usize"]]],[11,R[3376],E,E,64,[[["cb"]]]],[11,"drive",E,E,65,[[["c"]]]],[11,"len",E,E,65,[[["self"]],["usize"]]],[11,R[3376],E,E,65,[[["cb"]]]],[11,"drive",E,E,66,[[["c"]]]],[11,"len",E,E,66,[[["self"]],["usize"]]],[11,R[3376],E,E,66,[[["cb"]]]],[11,"drive",E,E,67,[[["c"]]]],[11,"len",E,E,67,[[["self"]],["usize"]]],[11,R[3376],E,E,67,[[["cb"]]]],[11,"drive",E,E,68,[[["c"]]]],[11,"len",E,E,68,[[["self"]],["usize"]]],[11,R[3376],E,E,68,[[["cb"]]]],[11,"drive",E,E,69,[[[R[3377]]]]],[11,"len",E,E,69,[[["self"]],["usize"]]],[11,R[3376],E,E,69,[[["cb"]]]],[11,"drive",E,E,71,[[[R[3377]]]]],[11,"len",E,E,71,[[["self"]],["usize"]]],[11,R[3376],E,E,71,[[["cb"]]]],[11,"drive",E,E,70,[[[R[3377]]]]],[11,"len",E,E,70,[[["self"]],["usize"]]],[11,R[3376],E,E,70,[[["cb"]]]],[11,"drive",E,E,72,[[["c"]]]],[11,"len",E,E,72,[[["self"]],["usize"]]],[11,R[3376],E,E,72,[[["cb"]]]],[11,"drive",E,E,73,[[["c"]]]],[11,"len",E,E,73,[[["self"]],["usize"]]],[11,R[3376],E,E,73,[[["cb"]]]],[11,"drive",E,E,74,[[["c"]]]],[11,"len",E,E,74,[[["self"]],["usize"]]],[11,R[3376],E,E,74,[[["cb"]]]],[11,"drive",E,E,76,[[["c"]]]],[11,R[3376],E,E,76,[[["cb"]]]],[11,"len",E,E,76,[[["self"]],["usize"]]],[11,"drive",E,E,77,[[["c"]]]],[11,"len",E,E,77,[[["self"]],["usize"]]],[11,R[3376],E,E,77,[[["cb"]]]],[11,"drive",E,E,78,[[["c"]]]],[11,"len",E,E,78,[[["self"]],["usize"]]],[11,R[3376],E,E,78,[[["cb"]]]],[11,"drive",R[3366],E,79,[[["c"]]]],[11,"len",E,E,79,[[["self"]],["usize"]]],[11,R[3376],E,E,79,[[["cb"]]]],[11,"drive",E,E,80,[[["c"]]]],[11,"len",E,E,80,[[["self"]],["usize"]]],[11,R[3376],E,E,80,[[["cb"]]]],[11,"drive",E,E,81,[[["c"]]]],[11,"len",E,E,81,[[["self"]],["usize"]]],[11,R[3376],E,E,81,[[["cb"]]]],[11,"drive",R[3367],E,82,[[["c"]]]],[11,"len",E,E,82,[[["self"]],["usize"]]],[11,R[3376],E,E,82,[[["cb"]]]],[11,"drive",E,E,82,[[["c"]]]],[11,"len",E,E,82,[[["self"]],["usize"]]],[11,R[3376],E,E,82,[[["cb"]]]],[11,"drive",E,E,82,[[["c"]]]],[11,"len",E,E,82,[[["self"]],["usize"]]],[11,R[3376],E,E,82,[[["cb"]]]],[11,"drive",E,E,82,[[["c"]]]],[11,"len",E,E,82,[[["self"]],["usize"]]],[11,R[3376],E,E,82,[[["cb"]]]],[11,"drive",E,E,82,[[["c"]]]],[11,"len",E,E,82,[[["self"]],["usize"]]],[11,R[3376],E,E,82,[[["cb"]]]],[11,"drive",E,E,82,[[["c"]]]],[11,"len",E,E,82,[[["self"]],["usize"]]],[11,R[3376],E,E,82,[[["cb"]]]],[11,"drive",E,E,82,[[["c"]]]],[11,"len",E,E,82,[[["self"]],["usize"]]],[11,R[3376],E,E,82,[[["cb"]]]],[11,"drive",E,E,82,[[["c"]]]],[11,"len",E,E,82,[[["self"]],["usize"]]],[11,R[3376],E,E,82,[[["cb"]]]],[11,"drive",R[3368],E,83,[[["c"]]]],[11,"len",E,E,83,[[["self"]],["usize"]]],[11,R[3376],E,E,83,[[["cb"]]]],[11,"drive",E,E,83,[[["c"]]]],[11,"len",E,E,83,[[["self"]],["usize"]]],[11,R[3376],E,E,83,[[["cb"]]]],[11,"drive",E,E,83,[[["c"]]]],[11,"len",E,E,83,[[["self"]],["usize"]]],[11,R[3376],E,E,83,[[["cb"]]]],[11,"drive",E,E,83,[[["c"]]]],[11,"len",E,E,83,[[["self"]],["usize"]]],[11,R[3376],E,E,83,[[["cb"]]]],[11,"drive",R[3369],E,84,[[["c"]]]],[11,"len",E,E,84,[[["self"]],["usize"]]],[11,R[3376],E,E,84,[[["cb"]]]],[11,"drive",E,E,85,[[["c"]]]],[11,"len",E,E,85,[[["self"]],["usize"]]],[11,R[3376],E,E,85,[[["cb"]]]],[11,"drive",E,E,86,[[["c"]]]],[11,"len",E,E,86,[[["self"]],["usize"]]],[11,R[3376],E,E,86,[[["cb"]]]],[11,"drive",R[3370],E,87,[[["c"]]]],[11,"len",E,E,87,[[["self"]],["usize"]]],[11,R[3376],E,E,87,[[["cb"]]]],[11,"drive",E,E,88,[[["c"]]]],[11,"len",E,E,88,[[["self"]],["usize"]]],[11,R[3376],E,E,88,[[["cb"]]]],[11,"drive",E,E,89,[[["c"]]]],[11,"len",E,E,89,[[["self"]],["usize"]]],[11,R[3376],E,E,89,[[["cb"]]]],[11,"drive",E,E,90,[[["c"]]]],[11,"len",E,E,90,[[["self"]],["usize"]]],[11,R[3376],E,E,90,[[["cb"]]]],[11,"drive",E,E,91,[[["c"]]]],[11,"len",E,E,91,[[["self"]],["usize"]]],[11,R[3376],E,E,91,[[["cb"]]]],[11,"drive",R[3375],E,104,[[["c"]]]],[11,"len",E,E,104,[[["self"]],["usize"]]],[11,R[3376],E,E,104,[[["cb"]]]],[11,"drive",R[3340],E,0,[[["c"]]]],[11,"len",E,E,0,[[["self"]],["usize"]]],[11,R[3376],E,E,0,[[["cb"]]]],[11,"par_extend",E,E,0,[[["self"],["i"]]]],[11,"clone",R[3359],E,27,[[["self"]],[R[766]]]],[11,"clone",E,E,28,[[["self"]],["self"]]],[11,"clone",R[3360],E,30,[[["self"]],["self"]]],[11,"clone",R[3361],E,33,[[["self"]],["self"]]],[11,"clone",R[3362],E,35,[[["self"]],["self"]]],[11,"clone",R[3363],E,38,[[["self"]],["self"]]],[11,"clone",R[3364],E,39,[[["self"]],[R[766]]]],[11,"clone",E,E,40,[[["self"]],["self"]]],[11,"clone",R[3365],E,42,[[["self"]],[R[766]]]],[11,"clone",E,E,43,[[["self"]],["self"]]],[11,"clone",R[3340],E,45,[[["self"]],[R[3378]]]],[11,"clone",E,E,46,[[["self"]],["chain"]]],[11,"clone",E,E,47,[[["self"]],["chunks"]]],[11,"clone",E,E,48,[[["self"]],["enumerate"]]],[11,"clone",E,E,49,[[["self"]],["filter"]]],[11,"clone",E,E,50,[[["self"]],["filtermap"]]],[11,"clone",E,E,51,[[["self"]],["flatmap"]]],[11,"clone",E,E,52,[[["self"]],["flatten"]]],[11,"clone",E,E,53,[[["self"]],["fold"]]],[11,"clone",E,E,54,[[["self"]],["foldwith"]]],[11,"clone",E,E,55,[[["self"]],["tryfold"]]],[11,"clone",E,E,56,[[["self"]],[R[3379]]]],[11,"clone",E,E,57,[[["self"]],["skip"]]],[11,"clone",E,E,58,[[["self"]],["split"]]],[11,"clone",E,E,59,[[["self"]],["take"]]],[11,"clone",E,E,60,[[["self"]],["map"]]],[11,"clone",E,E,62,[[["self"]],["mapwith"]]],[11,"clone",E,E,61,[[["self"]],["mapinit"]]],[11,"clone",E,E,63,[[["self"]],["zip"]]],[11,"clone",E,E,64,[[["self"]],["zipeq"]]],[11,"clone",E,E,65,[[["self"]],[R[3380]]]],[11,"clone",E,E,66,[[["self"]],[R[3381]]]],[11,"clone",E,E,67,[[["self"]],[R[3346]]]],[11,"clone",E,E,68,[[["self"]],["update"]]],[11,"clone",E,E,69,[[["self"]],["rev"]]],[11,"clone",E,E,71,[[["self"]],["minlen"]]],[11,"clone",E,E,70,[[["self"]],["maxlen"]]],[11,"clone",E,E,72,[[["self"]],["cloned"]]],[11,"clone",E,E,73,[[["self"]],["inspect"]]],[11,"clone",E,E,74,[[["self"]],["panicfuse"]]],[11,"clone",E,E,75,[[["self"]],["whilesome"]]],[11,"clone",E,E,8,[[["self"]],["repeat"]]],[11,"clone",E,E,76,[[["self"]],["repeatn"]]],[11,"clone",E,E,77,[[["self"]],["self"]]],[11,"clone",E,E,78,[[["self"]],["once"]]],[11,"clone",R[3366],E,79,[[["self"]],[R[766]]]],[11,"clone",E,E,80,[[["self"]],["self"]]],[11,"clone",R[3367],E,82,[[["self"]],["iter"]]],[11,"clone",R[3368],E,83,[[["self"]],["iter"]]],[11,"clone",R[3369],E,84,[[["self"]],[R[766]]]],[11,"clone",E,E,85,[[["self"]],["self"]]],[11,"clone",R[3370],E,87,[[["self"]],["self"]]],[11,"clone",E,E,88,[[["self"]],["self"]]],[11,"clone",E,E,89,[[["self"]],["self"]]],[11,"clone",E,E,92,[[["self"]],["self"]]],[11,"clone",R[3374],E,94,[[["self"]],["chars"]]],[11,"clone",E,E,95,[[["self"]],[R[3382]]]],[11,"clone",E,E,96,[[["self"]],["bytes"]]],[11,"clone",E,E,97,[[["self"]],[R[3383]]]],[11,"clone",E,E,98,[[["self"]],["split"]]],[11,"clone",E,E,99,[[["self"]],[R[3384]]]],[11,"clone",E,E,100,[[["self"]],["lines"]]],[11,"clone",E,E,101,[[["self"]],[R[3385]]]],[11,"clone",E,E,102,[[["self"]],["matches"]]],[11,"clone",E,E,103,[[["self"]],[R[3386]]]],[11,"clone",R[3375],E,104,[[["self"]],[R[766]]]],[11,"fmt",R[3359],E,27,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,28,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[3360],E,29,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,30,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,31,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[3361],E,32,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,33,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[3362],E,34,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,35,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,36,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[3363],E,37,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,38,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[3364],E,39,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,40,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,41,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[3365],E,42,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,43,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,44,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[3340],E,45,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,46,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,47,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,48,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,49,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,50,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,51,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,52,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,53,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,54,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,55,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,56,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,57,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,58,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,59,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,60,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,62,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,61,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,63,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,64,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,65,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,66,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,67,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,68,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,69,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,71,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,70,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,72,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,73,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,74,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,75,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,8,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,76,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,77,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,78,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[3366],E,79,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,80,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,81,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[3367],E,82,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[3368],E,83,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[3369],E,84,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,85,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,86,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[3370],E,87,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,88,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,89,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,90,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,91,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,92,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,93,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[3374],E,94,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,95,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,96,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,97,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,98,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,99,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,100,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,101,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,102,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,103,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[3375],E,104,[[["self"],[R[10]]],[R[3]]]],[11,"migrated","rayon",R[3471],20,[[["self"]],["bool"]]],[11,"index",E,R[3447],21,[[["self"]],["usize"]]],[11,"name",E,R[3448],21,[[["self"]],[["str"],[R[23],["str"]]]]],[11,R[3121],E,R[3449],21,[[["self"]],[[R[23],["usize"]],["usize"]]]],[11,"run",E,R[3450],21,[[]]],[11,"new",E,R[3122],22,[[[R[3111]]],[[R[3],[R[3118],"box"]],[R[3118]],["box",["error"]]]]],[11,"install",E,R[3451],22,[[["self"],["op"]],["r"]]],[11,R[3112],E,R[3452],22,[[["self"]],["usize"]]],[11,R[3113],E,R[3453],22,[[["self"]],[[R[23],["usize"]],["usize"]]]],[11,R[3114],E,R[3454],22,[[["self"]],[[R[23],["bool"]],["bool"]]]],[11,"join",E,R[3455],22,[[["self"],["a"],["b"]]]],[11,"scope",E,R[3115],22,[[["self"],["op"]],["r"]]],[11,R[3443],E,R[3115],22,[[["self"],["op"]],["r"]]],[11,"spawn",E,R[3117],22,[[["self"],["op"]]]],[11,R[3116],E,R[3117],22,[[["self"],["op"]]]],[11,"new",E,R[3456],24,[[],[[R[3387],[R[3372]]],[R[3372]]]]],[11,"build",E,R[3457],24,[[],[[R[3],[R[3118],R[3119]]],[R[3118]],[R[3119]]]]],[11,R[3458],E,R[3459],24,[[],[[R[3],[R[3119]]],[R[3119]]]]],[11,R[3460],E,R[3461],24,[[["w"],["f"]],[[R[3],[R[3119]]],[R[3119]]]]],[11,R[3462],E,R[3463],24,[[["f"]],[[R[3120]],[R[3387],[R[3120]]]]]],[11,R[3123],E,R[3464],24,[[["f"]],[R[3387]]]],[11,R[3124],E,R[3465],24,[[["usize"]],[R[3387]]]],[11,R[3125],E,R[3466],24,[[["h"]],[R[3387]]]],[11,R[3121],E,R[3467],24,[[["usize"]],[R[3387]]]],[11,R[3126],E,R[3468],24,[[],[R[3387]]]],[11,R[3127],E,R[3469],24,[[["h"]],[R[3387]]]],[11,R[3128],E,R[3470],24,[[["h"]],[R[3387]]]],[11,"spawn",E,R[3110],25,[[["self"],["body"]]]],[11,R[3116],E,R[3110],26,[[["self"],["body"]]]],[11,"is_left",R[3340],R[3388],0,[[["self"]],["bool"]]],[11,"is_right",E,R[3389],0,[[["self"]],["bool"]]],[11,"left",E,R[3390],0,[[],[R[23]]]],[11,"right",E,R[3391],0,[[],[R[23]]]],[11,"as_ref",E,R[3392],0,[[["self"]],[["r"],["either"],["l"]]]],[11,"as_mut",E,R[3393],0,[[["self"]],[["r"],["either"],["l"]]]],[11,"flip",E,R[3394],0,[[],["either"]]],[11,"map_left",E,R[164],0,[[["f"]],["either"]]],[11,"map_right",E,R[165],0,[[["f"]],["either"]]],[11,"either",E,R[3395],0,[[["f"],["g"]],[T]]],[11,R[3396],E,R[3397],0,[[["ctx"],["f"],["g"]],[T]]],[11,R[3398],E,R[164],0,[[["f"]],["either"]]],[11,R[3399],E,R[165],0,[[["f"]],["either"]]],[11,R[45],E,R[3400],0,[[],["either"]]],[11,"left_or",E,R[3401],0,[[["l"]],["l"]]],[11,R[3402],E,R[3403],0,[[],["l"]]],[11,R[3404],E,R[166],0,[[["f"]],["l"]]],[11,"right_or",E,R[3405],0,[[["r"]],["r"]]],[11,R[3406],E,R[3407],0,[[],["r"]]],[11,R[3408],E,R[166],0,[[["f"]],["r"]]],[11,R[3409],E,R[167],0,[[]]],[11,R[3410],E,R[167],0,[[]]],[11,R[15],E,R[3411],0,[[],[T]]]],"p":[[4,"Either"],[8,R[3412]],[8,"Producer"],[8,"Consumer"],[8,"Folder"],[8,"Reducer"],[8,R[3413]],[8,R[3414]],[3,"Repeat"],[8,R[3353]],[8,R[3415]],[8,R[3416]],[8,R[3417]],[8,R[3418]],[8,R[3419]],[8,R[3420]],[8,R[3421]],[8,R[3422]],[8,R[3423]],[8,R[3424]],[3,R[3473]],[3,R[3129]],[3,R[3434]],[3,R[3132]],[3,R[3130]],[3,"Scope"],[3,R[3472]],[3,R[306]],[3,"Iter"],[3,R[306]],[3,"Iter"],[3,R[631]],[3,R[306]],[3,"Iter"],[3,R[306]],[3,"Iter"],[3,R[631]],[3,R[306]],[3,"Iter"],[3,R[306]],[3,"Iter"],[3,R[631]],[3,R[306]],[3,"Iter"],[3,R[631]],[3,"IterBridge"],[3,"Chain"],[3,"Chunks"],[3,"Enumerate"],[3,"Filter"],[3,"FilterMap"],[3,"FlatMap"],[3,"Flatten"],[3,"Fold"],[3,"FoldWith"],[3,"TryFold"],[3,R[3425]],[3,"Skip"],[3,"Split"],[3,"Take"],[3,"Map"],[3,"MapInit"],[3,"MapWith"],[3,"Zip"],[3,"ZipEq"],[3,"Interleave"],[3,R[3426]],[3,R[3427]],[3,"Update"],[3,"Rev"],[3,"MaxLen"],[3,"MinLen"],[3,"Cloned"],[3,"Inspect"],[3,"PanicFuse"],[3,"WhileSome"],[3,"RepeatN"],[3,"Empty"],[3,"Once"],[3,R[306]],[3,"Iter"],[3,R[631]],[3,"Iter"],[3,"Iter"],[3,R[306]],[3,"Iter"],[3,R[631]],[3,"Iter"],[3,"Chunks"],[3,"Windows"],[3,R[631]],[3,"ChunksMut"],[3,"Split"],[3,"SplitMut"],[3,"Chars"],[3,R[3428]],[3,"Bytes"],[3,R[3429]],[3,"Split"],[3,R[3430]],[3,"Lines"],[3,R[3431]],[3,"Matches"],[3,R[3432]],[3,R[306]]]};
searchIndex["rayon_core"]={"doc":"Under construction","i":[[3,R[3129],"rayon_core",R[3433],N,N],[3,"Scope",E,R[3108],N,N],[3,R[3472],E,R[3108],N,N],[3,R[3434],E,R[3435],N,N],[3,R[3132],E,R[3436],N,N],[3,R[3130],E,R[3437],N,N],[3,R[3131],E,"Contains the rayon thread pool configuration. Use…",N,N],[3,R[3473],E,R[3438],N,N],[5,"join",E,R[3439],N,[[["a"],["b"]]]],[5,R[3440],E,R[3441],N,[[["a"],["b"]]]],[5,"scope",E,R[3442],N,[[["op"]],["r"]]],[5,R[3443],E,R[3444],N,[[["op"]],["r"]]],[5,"spawn",E,R[3109],N,[[["f"]]]],[5,R[3116],E,R[3109],N,[[["f"]]]],[5,R[3114],E,"If called from a Rayon worker thread, indicates whether…",N,[[],[[R[23],["bool"]],["bool"]]]],[5,R[3113],E,R[3445],N,[[],[[R[23],["usize"]],["usize"]]]],[5,R[3112],E,R[3446],N,[[],["usize"]]],[5,R[3331],E,"Deprecated in favor of `ThreadPoolBuilder::build_global`.",N,[[[R[3111]]],[[R[3],["box"]],["box",["error"]]]]],[11,"index",E,R[3447],0,[[["self"]],["usize"]]],[11,"name",E,R[3448],0,[[["self"]],[["str"],[R[23],["str"]]]]],[11,R[3121],E,R[3449],0,[[["self"]],[[R[23],["usize"]],["usize"]]]],[11,"run",E,R[3450],0,[[]]],[11,"spawn",E,R[3110],1,[[["self"],["body"]]]],[11,R[3116],E,R[3110],2,[[["self"],["body"]]]],[11,"new",E,R[3122],3,[[[R[3111]]],[[R[3118]],["box",["error"]],[R[3],[R[3118],"box"]]]]],[11,"install",E,R[3451],3,[[["self"],["op"]],["r"]]],[11,R[3112],E,R[3452],3,[[["self"]],["usize"]]],[11,R[3113],E,R[3453],3,[[["self"]],[[R[23],["usize"]],["usize"]]]],[11,R[3114],E,R[3454],3,[[["self"]],[[R[23],["bool"]],["bool"]]]],[11,"join",E,R[3455],3,[[["self"],["a"],["b"]]]],[11,"scope",E,R[3115],3,[[["self"],["op"]],["r"]]],[11,R[3443],E,R[3115],3,[[["self"],["op"]],["r"]]],[11,"spawn",E,R[3117],3,[[["self"],["op"]]]],[11,R[3116],E,R[3117],3,[[["self"],["op"]]]],[11,"new",E,R[3456],4,[[],["self"]]],[11,"build",E,R[3457],4,[[],[[R[3118]],[R[3],[R[3118],R[3119]]],[R[3119]]]]],[11,R[3458],E,R[3459],4,[[],[[R[3],[R[3119]]],[R[3119]]]]],[11,R[3460],E,R[3461],4,[[["w"],["f"]],[[R[3],[R[3119]]],[R[3119]]]]],[11,R[3462],E,R[3463],4,[[["f"]],[[R[3387],[R[3120]]],[R[3120]]]]],[11,R[3123],E,R[3464],4,[[["f"]],["self"]]],[11,R[3124],E,R[3465],4,[[["usize"]],["self"]]],[11,R[3125],E,R[3466],4,[[["h"]],["self"]]],[11,R[3121],E,R[3467],4,[[["usize"]],["self"]]],[11,R[3126],E,R[3468],4,[[],["self"]]],[11,R[3127],E,R[3469],4,[[["h"]],["self"]]],[11,R[3128],E,R[3470],4,[[["h"]],["self"]]],[11,"new",E,"Creates and return a valid rayon thread pool…",5,[[],[R[3111]]]],[11,"build",E,R[3122],5,[[],[[R[3],[R[3118],"box"]],[R[3118]],["box",["error"]]]]],[11,R[3123],E,"Deprecated in favor of `ThreadPoolBuilder::thread_name`.",5,[[["f"]],["self"]]],[11,R[3124],E,"Deprecated in favor of `ThreadPoolBuilder::num_threads`.",5,[[["usize"]],[R[3111]]]],[11,R[3125],E,"Deprecated in favor of `ThreadPoolBuilder::panic_handler`.",5,[[["h"]],[R[3111]]]],[11,R[3121],E,"Deprecated in favor of `ThreadPoolBuilder::stack_size`.",5,[[["usize"]],["self"]]],[11,R[3126],E,"Deprecated in favor of `ThreadPoolBuilder::breadth_first`.",5,[[],["self"]]],[11,R[3127],E,"Deprecated in favor of `ThreadPoolBuilder::start_handler`.",5,[[["h"]],[R[3111]]]],[11,R[3128],E,"Deprecated in favor of `ThreadPoolBuilder::exit_handler`.",5,[[["h"]],[R[3111]]]],[11,"migrated",E,R[3471],6,[[["self"]],["bool"]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[4],E,E,0,[[[U]],[R[3]]]],[11,R[5],E,E,0,[[],[R[3]]]],[11,R[7],E,E,0,[[["self"]],[T]]],[11,R[6],E,E,0,[[["self"]],[T]]],[11,R[8],E,E,0,[[["self"]],[R[9]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[4],E,E,1,[[[U]],[R[3]]]],[11,R[5],E,E,1,[[],[R[3]]]],[11,R[7],E,E,1,[[["self"]],[T]]],[11,R[6],E,E,1,[[["self"]],[T]]],[11,R[8],E,E,1,[[["self"]],[R[9]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[4],E,E,2,[[[U]],[R[3]]]],[11,R[5],E,E,2,[[],[R[3]]]],[11,R[7],E,E,2,[[["self"]],[T]]],[11,R[6],E,E,2,[[["self"]],[T]]],[11,R[8],E,E,2,[[["self"]],[R[9]]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[4],E,E,3,[[[U]],[R[3]]]],[11,R[5],E,E,3,[[],[R[3]]]],[11,R[7],E,E,3,[[["self"]],[T]]],[11,R[6],E,E,3,[[["self"]],[T]]],[11,R[8],E,E,3,[[["self"]],[R[9]]]],[11,"into",E,E,7,[[],[U]]],[11,R[113],E,E,7,[[["self"]],["string"]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[4],E,E,7,[[[U]],[R[3]]]],[11,R[5],E,E,7,[[],[R[3]]]],[11,R[7],E,E,7,[[["self"]],[T]]],[11,R[6],E,E,7,[[["self"]],[T]]],[11,R[8],E,E,7,[[["self"]],[R[9]]]],[11,"into",E,E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[4],E,E,4,[[[U]],[R[3]]]],[11,R[5],E,E,4,[[],[R[3]]]],[11,R[7],E,E,4,[[["self"]],[T]]],[11,R[6],E,E,4,[[["self"]],[T]]],[11,R[8],E,E,4,[[["self"]],[R[9]]]],[11,"into",E,E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[4],E,E,5,[[[U]],[R[3]]]],[11,R[5],E,E,5,[[],[R[3]]]],[11,R[7],E,E,5,[[["self"]],[T]]],[11,R[6],E,E,5,[[["self"]],[T]]],[11,R[8],E,E,5,[[["self"]],[R[9]]]],[11,"into",E,E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[4],E,E,6,[[[U]],[R[3]]]],[11,R[5],E,E,6,[[],[R[3]]]],[11,R[7],E,E,6,[[["self"]],[T]]],[11,R[6],E,E,6,[[["self"]],[T]]],[11,R[8],E,E,6,[[["self"]],[R[9]]]],[11,R[83],E,E,4,[[],["self"]]],[11,R[83],E,E,5,[[],["self"]]],[11,"drop",E,E,3,[[["self"]]]],[11,"fmt",E,E,0,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,1,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,2,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,3,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,7,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,4,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,5,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,6,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,7,[[["self"],[R[10]]],[R[3]]]],[11,R[157],E,E,7,[[["self"]],["str"]]]],"p":[[3,R[3129]],[3,"Scope"],[3,R[3472]],[3,R[3434]],[3,R[3130]],[3,R[3131]],[3,R[3473]],[3,R[3132]]]};
searchIndex["regex"]={"doc":"This crate provides a library for parsing, compiling, and…","i":[[3,R[1726],"regex",R[1727],N,N],[3,R[1724],E,R[1725],N,N],[3,"RegexSet",E,R[1742],N,N],[3,R[1832],E,R[1743],N,N],[3,R[1744],E,R[1745],N,N],[3,R[1746],E,R[1747],N,N],[3,R[1736],E,R[1737],N,N],[3,R[1730],E,R[1731],N,N],[3,R[1734],E,R[1735],N,N],[3,"Captures",E,"Captures represents a group of captured strings for a…",N,N],[3,"Match",E,R[1728],N,N],[3,"Matches",E,R[1729],N,N],[3,"NoExpand",E,"`NoExpand` indicates literal string replacement.",N,N],[12,"0",E,E,0,N],[3,"Regex",E,"A compiled regular expression for matching Unicode strings.",N,N],[3,R[1740],E,R[1741],N,N],[3,"Split",E,R[1732],N,N],[3,"SplitN",E,R[1733],N,N],[3,R[1738],E,R[1739],N,N],[4,"Error",E,"An error that occurred during parsing or compiling a…",N,N],[13,"Syntax",E,"A syntax error.",1,N],[13,"CompiledTooBig",E,"The compiled program exceeded the set size limit. The…",1,N],[5,"escape",E,R[1833],N,[[["str"]],["string"]]],[0,"bytes",E,"Match regular expressions on arbitrary bytes.",N,N],[3,R[1724],R[1760],R[1725],N,N],[3,R[1726],E,R[1727],N,N],[3,"Match",E,R[1728],N,N],[3,"Regex",E,"A compiled regular expression for matching arbitrary bytes.",N,N],[3,"Matches",E,R[1729],N,N],[3,R[1730],E,R[1731],N,N],[3,"Split",E,R[1732],N,N],[3,"SplitN",E,R[1733],N,N],[3,R[1734],E,R[1735],N,N],[3,R[1736],E,R[1737],N,N],[3,"Captures",E,"Captures represents a group of captured byte strings for a…",N,N],[3,R[1738],E,R[1739],N,N],[3,R[1740],E,R[1741],N,N],[3,"NoExpand",E,"`NoExpand` indicates literal byte string replacement.",N,N],[12,"0",E,E,2,N],[3,"RegexSet",E,R[1742],N,N],[3,R[1832],E,R[1743],N,N],[3,R[1744],E,R[1745],N,N],[3,R[1746],E,R[1747],N,N],[8,"Replacer",E,R[1825],N,N],[10,R[1826],E,R[1827],3,[[["self"],[R[1791]],["vec"]]]],[11,R[1764],E,R[1765],3,[[["self"]],[["cow"],[R[23],["cow"]]]]],[11,"by_ref",E,R[1766],3,[[["self"]],[R[1767]]]],[11,"new",E,R[1749],4,[[["str"]],[R[1748]]]],[11,"build",E,R[1750],4,[[["self"]],[["error"],["regex"],[R[3],["regex","error"]]]]],[11,R[435],E,R[1751],4,[[["self"],["bool"]],[R[1748]]]],[11,R[436],E,R[1752],4,[[["self"],["bool"]],[R[1748]]]],[11,R[437],E,R[1753],4,[[["self"],["bool"]],[R[1748]]]],[11,R[438],E,R[1754],4,[[["self"],["bool"]],[R[1748]]]],[11,R[433],E,R[1755],4,[[["self"],["bool"]],[R[1748]]]],[11,"unicode",E,R[1756],4,[[["self"],["bool"]],[R[1748]]]],[11,"octal",E,R[431],4,[[["self"],["bool"]],[R[1748]]]],[11,R[1762],E,R[1757],4,[[["self"],["usize"]],[R[1748]]]],[11,R[1758],E,R[1759],4,[[["self"],["usize"]],[R[1748]]]],[11,R[429],E,R[430],4,[[["self"],["u32"]],[R[1748]]]],[11,"new","regex",R[1749],5,[[["str"]],[R[1748]]]],[11,"build",E,R[1750],5,[[["self"]],[["error"],["regex"],[R[3],["regex","error"]]]]],[11,R[435],E,R[1751],5,[[["self"],["bool"]],[R[1748]]]],[11,R[436],E,R[1752],5,[[["self"],["bool"]],[R[1748]]]],[11,R[437],E,R[1753],5,[[["self"],["bool"]],[R[1748]]]],[11,R[438],E,R[1754],5,[[["self"],["bool"]],[R[1748]]]],[11,R[433],E,R[1755],5,[[["self"],["bool"]],[R[1748]]]],[11,"unicode",E,R[1756],5,[[["self"],["bool"]],[R[1748]]]],[11,"octal",E,R[431],5,[[["self"],["bool"]],[R[1748]]]],[11,R[1762],E,R[1757],5,[[["self"],["usize"]],[R[1748]]]],[11,R[1758],E,R[1759],5,[[["self"],["usize"]],[R[1748]]]],[11,R[429],E,R[430],5,[[["self"],["u32"]],[R[1748]]]],[11,"new",R[1760],R[1749],6,[[["i"]],[R[1761]]]],[11,"build",E,R[1763],6,[[["self"]],[["error"],[R[1771]],[R[3],[R[1771],"error"]]]]],[11,R[435],E,R[1751],6,[[["self"],["bool"]],[R[1761]]]],[11,R[436],E,R[1752],6,[[["self"],["bool"]],[R[1761]]]],[11,R[437],E,R[1753],6,[[["self"],["bool"]],[R[1761]]]],[11,R[438],E,R[1754],6,[[["self"],["bool"]],[R[1761]]]],[11,R[433],E,R[1755],6,[[["self"],["bool"]],[R[1761]]]],[11,"unicode",E,R[1756],6,[[["self"],["bool"]],[R[1761]]]],[11,"octal",E,R[431],6,[[["self"],["bool"]],[R[1761]]]],[11,R[1762],E,R[1757],6,[[["self"],["usize"]],[R[1761]]]],[11,R[1758],E,R[1759],6,[[["self"],["usize"]],[R[1761]]]],[11,R[429],E,R[430],6,[[["self"],["u32"]],[R[1761]]]],[11,"new","regex",R[1749],7,[[["i"]],[R[1761]]]],[11,"build",E,R[1763],7,[[["self"]],[["error"],[R[1771]],[R[3],[R[1771],"error"]]]]],[11,R[435],E,R[1751],7,[[["self"],["bool"]],[R[1761]]]],[11,R[436],E,R[1752],7,[[["self"],["bool"]],[R[1761]]]],[11,R[437],E,R[1753],7,[[["self"],["bool"]],[R[1761]]]],[11,R[438],E,R[1754],7,[[["self"],["bool"]],[R[1761]]]],[11,R[433],E,R[1755],7,[[["self"],["bool"]],[R[1761]]]],[11,"unicode",E,R[1756],7,[[["self"],["bool"]],[R[1761]]]],[11,"octal",E,R[431],7,[[["self"],["bool"]],[R[1761]]]],[11,R[1762],E,R[1757],7,[[["self"],["usize"]],[R[1761]]]],[11,R[1758],E,R[1759],7,[[["self"],["usize"]],[R[1761]]]],[11,R[429],E,R[430],7,[[["self"],["u32"]],[R[1761]]]],[11,R[1764],R[1760],R[1765],3,[[["self"]],[["cow"],[R[23],["cow"]]]]],[11,"by_ref",E,R[1766],3,[[["self"]],[R[1767]]]],[11,"start",E,R[1782],8,[[["self"]],["usize"]]],[11,"end",E,R[1783],8,[[["self"]],["usize"]]],[11,R[84],E,R[1784],8,[[["self"]]]],[11,"new",E,R[1785],9,[[["str"]],[["error"],["regex"],[R[3],["regex","error"]]]]],[11,"is_match",E,R[1786],9,[[["self"]],["bool"]]],[11,"find",E,R[1787],9,[[["self"]],[["match"],[R[23],["match"]]]]],[11,R[1788],E,R[1789],9,[[["self"]],["matches"]]],[11,R[1791],E,R[1790],9,[[["self"]],[[R[1791]],[R[23],[R[1791]]]]]],[11,R[1792],E,R[1793],9,[[["self"]],[R[1794]]]],[11,"split",E,R[1795],9,[[["self"]],["split"]]],[11,"splitn",E,R[1796],9,[[["self"],["usize"]],["splitn"]]],[11,"replace",E,R[1797],9,[[["self"],["replacer"]],["cow"]]],[11,R[1768],E,R[1798],9,[[["self"],["replacer"]],["cow"]]],[11,"replacen",E,R[1799],9,[[["self"],["usize"],["replacer"]],["cow"]]],[11,R[1800],E,R[1801],9,[[["self"]],[[R[23],["usize"]],["usize"]]]],[11,R[1802],E,R[1803],9,[[["self"],["usize"]],[[R[23],["usize"]],["usize"]]]],[11,R[1804],E,R[1805],9,[[["self"],["usize"]],["bool"]]],[11,"find_at",E,R[1806],9,[[["self"],["usize"]],[["match"],[R[23],["match"]]]]],[11,R[1807],E,R[1808],9,[[["self"],[R[1769]]],[["match"],[R[23],["match"]]]]],[11,R[1809],E,"Returns the same as `captures_read`, but starts the search…",9,[[["self"],["usize"],[R[1769]]],[["match"],[R[23],["match"]]]]],[11,"as_str",E,R[1810],9,[[["self"]],["str"]]],[11,R[1811],E,R[1812],9,[[["self"]],[R[1813]]]],[11,R[1814],E,R[1815],9,[[["self"]],["usize"]]],[11,R[1816],E,R[1817],9,[[["self"]],[R[1769]]]],[11,"get",E,R[1818],10,[[["self"],["usize"]],[R[23]]]],[11,"len",E,R[1819],10,[[["self"]],["usize"]]],[11,"get",E,R[1820],11,[[["self"],["usize"]],[["match"],[R[23],["match"]]]]],[11,"name",E,R[1821],11,[[["self"],["str"]],[["match"],[R[23],["match"]]]]],[11,"iter",E,R[1739],11,[[["self"]],[R[1822]]]],[11,"expand",E,R[1823],11,[[["self"],["vec"]]]],[11,"len",E,R[1824],11,[[["self"]],["usize"]]],[11,"new","regex",R[1770],12,[[["i"]],[["error"],[R[1771]],[R[3],[R[1771],"error"]]]]],[11,"is_match",E,R[1772],12,[[["self"],["str"]],["bool"]]],[11,"matches",E,R[1773],12,[[["self"],["str"]],[R[1828]]]],[11,"len",E,R[1774],12,[[["self"]],["usize"]]],[11,"patterns",E,R[1775],12,[[["self"]]]],[11,R[1776],E,R[1777],13,[[["self"]],["bool"]]],[11,"matched",E,R[1778],13,[[["self"],["usize"]],["bool"]]],[11,"len",E,R[1779],13,[[["self"]],["usize"]]],[11,"iter",E,R[1780],13,[[["self"]],[R[1781]]]],[11,"new",R[1760],R[1770],14,[[["i"]],[["error"],[R[1771]],[R[3],[R[1771],"error"]]]]],[11,"is_match",E,R[1772],14,[[["self"]],["bool"]]],[11,"matches",E,R[1773],14,[[["self"]],[R[1828]]]],[11,"len",E,R[1774],14,[[["self"]],["usize"]]],[11,"patterns",E,R[1775],14,[[["self"]]]],[11,R[1776],E,R[1777],15,[[["self"]],["bool"]]],[11,"matched",E,R[1778],15,[[["self"],["usize"]],["bool"]]],[11,"len",E,R[1779],15,[[["self"]],["usize"]]],[11,"iter",E,R[1780],15,[[["self"]],[R[1781]]]],[11,"start","regex",R[1782],16,[[["self"]],["usize"]]],[11,"end",E,R[1783],16,[[["self"]],["usize"]]],[11,"as_str",E,R[1784],16,[[["self"]],["str"]]],[11,"new",E,R[1785],17,[[["str"]],[["error"],["regex"],[R[3],["regex","error"]]]]],[11,"is_match",E,R[1786],17,[[["self"],["str"]],["bool"]]],[11,"find",E,R[1787],17,[[["self"],["str"]],[[R[23],["match"]],["match"]]]],[11,R[1788],E,R[1789],17,[[["self"],["str"]],["matches"]]],[11,R[1791],E,R[1790],17,[[["self"],["str"]],[[R[23],[R[1791]]],[R[1791]]]]],[11,R[1792],E,R[1793],17,[[["self"],["str"]],[R[1794]]]],[11,"split",E,R[1795],17,[[["self"],["str"]],["split"]]],[11,"splitn",E,R[1796],17,[[["self"],["usize"],["str"]],["splitn"]]],[11,"replace",E,R[1797],17,[[["self"],["replacer"],["str"]],[["str"],["cow",["str"]]]]],[11,R[1768],E,R[1798],17,[[["self"],["replacer"],["str"]],[["str"],["cow",["str"]]]]],[11,"replacen",E,R[1799],17,[[["self"],["usize"],["str"],["replacer"]],[["str"],["cow",["str"]]]]],[11,R[1800],E,R[1801],17,[[["self"],["str"]],[[R[23],["usize"]],["usize"]]]],[11,R[1802],E,R[1803],17,[[["self"],["str"],["usize"]],[[R[23],["usize"]],["usize"]]]],[11,R[1804],E,R[1805],17,[[["self"],["str"],["usize"]],["bool"]]],[11,"find_at",E,R[1806],17,[[["self"],["usize"],["str"]],[[R[23],["match"]],["match"]]]],[11,R[1807],E,R[1808],17,[[["self"],[R[1769]],["str"]],[[R[23],["match"]],["match"]]]],[11,R[1809],E,"Returns the same as captures, but starts the search at the…",17,[[["self"],[R[1769]],["usize"],["str"]],[[R[23],["match"]],["match"]]]],[11,"as_str",E,R[1810],17,[[["self"]],["str"]]],[11,R[1811],E,R[1812],17,[[["self"]],[R[1813]]]],[11,R[1814],E,R[1815],17,[[["self"]],["usize"]]],[11,R[1816],E,R[1817],17,[[["self"]],[R[1769]]]],[11,"get",E,R[1818],18,[[["self"],["usize"]],[R[23]]]],[11,"len",E,R[1819],18,[[["self"]],["usize"]]],[11,"get",E,R[1820],19,[[["self"],["usize"]],[[R[23],["match"]],["match"]]]],[11,"name",E,R[1821],19,[[["self"],["str"]],[[R[23],["match"]],["match"]]]],[11,"iter",E,R[1739],19,[[["self"]],[R[1822]]]],[11,"expand",E,R[1823],19,[[["self"],["string"],["str"]]]],[11,"len",E,R[1824],19,[[["self"]],["usize"]]],[8,"Replacer",E,R[1825],N,N],[10,R[1826],E,R[1827],20,[[["self"],["string"],[R[1791]]]]],[11,R[1764],E,R[1831],20,[[["self"]],[[R[23],["cow"]],["cow",["str"]]]]],[11,"by_ref",E,R[1766],20,[[["self"]],[R[1767]]]],[11,"into",E,E,7,[[],[U]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[4],E,E,7,[[[U]],[R[3]]]],[11,R[5],E,E,7,[[],[R[3]]]],[11,R[7],E,E,7,[[["self"]],[T]]],[11,R[6],E,E,7,[[["self"]],[T]]],[11,R[8],E,E,7,[[["self"]],[R[9]]]],[11,"into",E,E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[4],E,E,5,[[[U]],[R[3]]]],[11,R[5],E,E,5,[[],[R[3]]]],[11,R[7],E,E,5,[[["self"]],[T]]],[11,R[6],E,E,5,[[["self"]],[T]]],[11,R[8],E,E,5,[[["self"]],[R[9]]]],[11,"into",E,E,12,[[],[U]]],[11,"from",E,E,12,[[[T]],[T]]],[11,R[46],E,E,12,[[["self"]],[T]]],[11,R[47],E,E,12,[[["self"],[T]]]],[11,R[4],E,E,12,[[[U]],[R[3]]]],[11,R[5],E,E,12,[[],[R[3]]]],[11,R[7],E,E,12,[[["self"]],[T]]],[11,R[6],E,E,12,[[["self"]],[T]]],[11,R[8],E,E,12,[[["self"]],[R[9]]]],[11,"into",E,E,13,[[],[U]]],[11,R[45],E,E,13,[[],["i"]]],[11,"from",E,E,13,[[[T]],[T]]],[11,R[46],E,E,13,[[["self"]],[T]]],[11,R[47],E,E,13,[[["self"],[T]]]],[11,R[4],E,E,13,[[[U]],[R[3]]]],[11,R[5],E,E,13,[[],[R[3]]]],[11,R[7],E,E,13,[[["self"]],[T]]],[11,R[6],E,E,13,[[["self"]],[T]]],[11,R[8],E,E,13,[[["self"]],[R[9]]]],[11,"into",E,E,21,[[],[U]]],[11,R[45],E,E,21,[[],["i"]]],[11,"from",E,E,21,[[[T]],[T]]],[11,R[4],E,E,21,[[[U]],[R[3]]]],[11,R[5],E,E,21,[[],[R[3]]]],[11,R[7],E,E,21,[[["self"]],[T]]],[11,R[6],E,E,21,[[["self"]],[T]]],[11,R[8],E,E,21,[[["self"]],[R[9]]]],[11,"into",E,E,22,[[],[U]]],[11,R[45],E,E,22,[[],["i"]]],[11,"from",E,E,22,[[[T]],[T]]],[11,R[46],E,E,22,[[["self"]],[T]]],[11,R[47],E,E,22,[[["self"],[T]]]],[11,R[4],E,E,22,[[[U]],[R[3]]]],[11,R[5],E,E,22,[[],[R[3]]]],[11,R[7],E,E,22,[[["self"]],[T]]],[11,R[6],E,E,22,[[["self"]],[T]]],[11,R[8],E,E,22,[[["self"]],[R[9]]]],[11,"into",E,E,18,[[],[U]]],[11,"from",E,E,18,[[[T]],[T]]],[11,R[46],E,E,18,[[["self"]],[T]]],[11,R[47],E,E,18,[[["self"],[T]]]],[11,R[4],E,E,18,[[[U]],[R[3]]]],[11,R[5],E,E,18,[[],[R[3]]]],[11,R[7],E,E,18,[[["self"]],[T]]],[11,R[6],E,E,18,[[["self"]],[T]]],[11,R[8],E,E,18,[[["self"]],[R[9]]]],[11,"into",E,E,23,[[],[U]]],[11,R[45],E,E,23,[[],["i"]]],[11,"from",E,E,23,[[[T]],[T]]],[11,R[4],E,E,23,[[[U]],[R[3]]]],[11,R[5],E,E,23,[[],[R[3]]]],[11,R[7],E,E,23,[[["self"]],[T]]],[11,R[6],E,E,23,[[["self"]],[T]]],[11,R[8],E,E,23,[[["self"]],[R[9]]]],[11,"into",E,E,24,[[],[U]]],[11,R[45],E,E,24,[[],["i"]]],[11,"from",E,E,24,[[[T]],[T]]],[11,R[4],E,E,24,[[[U]],[R[3]]]],[11,R[5],E,E,24,[[],[R[3]]]],[11,R[7],E,E,24,[[["self"]],[T]]],[11,R[6],E,E,24,[[["self"]],[T]]],[11,R[8],E,E,24,[[["self"]],[R[9]]]],[11,"into",E,E,19,[[],[U]]],[11,"from",E,E,19,[[[T]],[T]]],[11,R[4],E,E,19,[[[U]],[R[3]]]],[11,R[5],E,E,19,[[],[R[3]]]],[11,R[7],E,E,19,[[["self"]],[T]]],[11,R[6],E,E,19,[[["self"]],[T]]],[11,R[8],E,E,19,[[["self"]],[R[9]]]],[11,"into",E,E,16,[[],[U]]],[11,"from",E,E,16,[[[T]],[T]]],[11,R[46],E,E,16,[[["self"]],[T]]],[11,R[47],E,E,16,[[["self"],[T]]]],[11,R[4],E,E,16,[[[U]],[R[3]]]],[11,R[5],E,E,16,[[],[R[3]]]],[11,R[7],E,E,16,[[["self"]],[T]]],[11,R[6],E,E,16,[[["self"]],[T]]],[11,R[8],E,E,16,[[["self"]],[R[9]]]],[11,"into",E,E,25,[[],[U]]],[11,R[45],E,E,25,[[],["i"]]],[11,"from",E,E,25,[[[T]],[T]]],[11,R[4],E,E,25,[[[U]],[R[3]]]],[11,R[5],E,E,25,[[],[R[3]]]],[11,R[7],E,E,25,[[["self"]],[T]]],[11,R[6],E,E,25,[[["self"]],[T]]],[11,R[8],E,E,25,[[["self"]],[R[9]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[4],E,E,0,[[[U]],[R[3]]]],[11,R[5],E,E,0,[[],[R[3]]]],[11,R[7],E,E,0,[[["self"]],[T]]],[11,R[6],E,E,0,[[["self"]],[T]]],[11,R[8],E,E,0,[[["self"]],[R[9]]]],[11,"into",E,E,17,[[],[U]]],[11,R[113],E,E,17,[[["self"]],["string"]]],[11,"from",E,E,17,[[[T]],[T]]],[11,R[46],E,E,17,[[["self"]],[T]]],[11,R[47],E,E,17,[[["self"],[T]]]],[11,R[4],E,E,17,[[[U]],[R[3]]]],[11,R[5],E,E,17,[[],[R[3]]]],[11,R[7],E,E,17,[[["self"]],[T]]],[11,R[6],E,E,17,[[["self"]],[T]]],[11,R[8],E,E,17,[[["self"]],[R[9]]]],[11,"into",E,E,26,[[],[U]]],[11,"from",E,E,26,[[[T]],[T]]],[11,R[4],E,E,26,[[[U]],[R[3]]]],[11,R[5],E,E,26,[[],[R[3]]]],[11,R[7],E,E,26,[[["self"]],[T]]],[11,R[6],E,E,26,[[["self"]],[T]]],[11,R[8],E,E,26,[[["self"]],[R[9]]]],[11,"into",E,E,27,[[],[U]]],[11,R[45],E,E,27,[[],["i"]]],[11,"from",E,E,27,[[[T]],[T]]],[11,R[4],E,E,27,[[[U]],[R[3]]]],[11,R[5],E,E,27,[[],[R[3]]]],[11,R[7],E,E,27,[[["self"]],[T]]],[11,R[6],E,E,27,[[["self"]],[T]]],[11,R[8],E,E,27,[[["self"]],[R[9]]]],[11,"into",E,E,28,[[],[U]]],[11,R[45],E,E,28,[[],["i"]]],[11,"from",E,E,28,[[[T]],[T]]],[11,R[4],E,E,28,[[[U]],[R[3]]]],[11,R[5],E,E,28,[[],[R[3]]]],[11,R[7],E,E,28,[[["self"]],[T]]],[11,R[6],E,E,28,[[["self"]],[T]]],[11,R[8],E,E,28,[[["self"]],[R[9]]]],[11,"into",E,E,29,[[],[U]]],[11,R[45],E,E,29,[[],["i"]]],[11,"from",E,E,29,[[[T]],[T]]],[11,R[4],E,E,29,[[[U]],[R[3]]]],[11,R[5],E,E,29,[[],[R[3]]]],[11,R[7],E,E,29,[[["self"]],[T]]],[11,R[6],E,E,29,[[["self"]],[T]]],[11,R[8],E,E,29,[[["self"]],[R[9]]]],[11,"into",E,E,1,[[],[U]]],[11,R[113],E,E,1,[[["self"]],["string"]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[46],E,E,1,[[["self"]],[T]]],[11,R[47],E,E,1,[[["self"],[T]]]],[11,R[4],E,E,1,[[[U]],[R[3]]]],[11,R[5],E,E,1,[[],[R[3]]]],[11,R[7],E,E,1,[[["self"]],[T]]],[11,R[6],E,E,1,[[["self"]],[T]]],[11,R[8],E,E,1,[[["self"]],[R[9]]]],[11,"into",R[1760],E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[4],E,E,4,[[[U]],[R[3]]]],[11,R[5],E,E,4,[[],[R[3]]]],[11,R[7],E,E,4,[[["self"]],[T]]],[11,R[6],E,E,4,[[["self"]],[T]]],[11,R[8],E,E,4,[[["self"]],[R[9]]]],[11,"into",E,E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[4],E,E,6,[[[U]],[R[3]]]],[11,R[5],E,E,6,[[],[R[3]]]],[11,R[7],E,E,6,[[["self"]],[T]]],[11,R[6],E,E,6,[[["self"]],[T]]],[11,R[8],E,E,6,[[["self"]],[R[9]]]],[11,"into",E,E,8,[[],[U]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[46],E,E,8,[[["self"]],[T]]],[11,R[47],E,E,8,[[["self"],[T]]]],[11,R[4],E,E,8,[[[U]],[R[3]]]],[11,R[5],E,E,8,[[],[R[3]]]],[11,R[7],E,E,8,[[["self"]],[T]]],[11,R[6],E,E,8,[[["self"]],[T]]],[11,R[8],E,E,8,[[["self"]],[R[9]]]],[11,"into",E,E,9,[[],[U]]],[11,R[113],E,E,9,[[["self"]],["string"]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[46],E,E,9,[[["self"]],[T]]],[11,R[47],E,E,9,[[["self"],[T]]]],[11,R[4],E,E,9,[[[U]],[R[3]]]],[11,R[5],E,E,9,[[],[R[3]]]],[11,R[7],E,E,9,[[["self"]],[T]]],[11,R[6],E,E,9,[[["self"]],[T]]],[11,R[8],E,E,9,[[["self"]],[R[9]]]],[11,"into",E,E,30,[[],[U]]],[11,R[45],E,E,30,[[],["i"]]],[11,"from",E,E,30,[[[T]],[T]]],[11,R[4],E,E,30,[[[U]],[R[3]]]],[11,R[5],E,E,30,[[],[R[3]]]],[11,R[7],E,E,30,[[["self"]],[T]]],[11,R[6],E,E,30,[[["self"]],[T]]],[11,R[8],E,E,30,[[["self"]],[R[9]]]],[11,"into",E,E,31,[[],[U]]],[11,R[45],E,E,31,[[],["i"]]],[11,"from",E,E,31,[[[T]],[T]]],[11,R[4],E,E,31,[[[U]],[R[3]]]],[11,R[5],E,E,31,[[],[R[3]]]],[11,R[7],E,E,31,[[["self"]],[T]]],[11,R[6],E,E,31,[[["self"]],[T]]],[11,R[8],E,E,31,[[["self"]],[R[9]]]],[11,"into",E,E,32,[[],[U]]],[11,R[45],E,E,32,[[],["i"]]],[11,"from",E,E,32,[[[T]],[T]]],[11,R[4],E,E,32,[[[U]],[R[3]]]],[11,R[5],E,E,32,[[],[R[3]]]],[11,R[7],E,E,32,[[["self"]],[T]]],[11,R[6],E,E,32,[[["self"]],[T]]],[11,R[8],E,E,32,[[["self"]],[R[9]]]],[11,"into",E,E,33,[[],[U]]],[11,R[45],E,E,33,[[],["i"]]],[11,"from",E,E,33,[[[T]],[T]]],[11,R[4],E,E,33,[[[U]],[R[3]]]],[11,R[5],E,E,33,[[],[R[3]]]],[11,R[7],E,E,33,[[["self"]],[T]]],[11,R[6],E,E,33,[[["self"]],[T]]],[11,R[8],E,E,33,[[["self"]],[R[9]]]],[11,"into",E,E,34,[[],[U]]],[11,R[45],E,E,34,[[],["i"]]],[11,"from",E,E,34,[[[T]],[T]]],[11,R[4],E,E,34,[[[U]],[R[3]]]],[11,R[5],E,E,34,[[],[R[3]]]],[11,R[7],E,E,34,[[["self"]],[T]]],[11,R[6],E,E,34,[[["self"]],[T]]],[11,R[8],E,E,34,[[["self"]],[R[9]]]],[11,"into",E,E,10,[[],[U]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[46],E,E,10,[[["self"]],[T]]],[11,R[47],E,E,10,[[["self"],[T]]]],[11,R[4],E,E,10,[[[U]],[R[3]]]],[11,R[5],E,E,10,[[],[R[3]]]],[11,R[7],E,E,10,[[["self"]],[T]]],[11,R[6],E,E,10,[[["self"]],[T]]],[11,R[8],E,E,10,[[["self"]],[R[9]]]],[11,"into",E,E,11,[[],[U]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[4],E,E,11,[[[U]],[R[3]]]],[11,R[5],E,E,11,[[],[R[3]]]],[11,R[7],E,E,11,[[["self"]],[T]]],[11,R[6],E,E,11,[[["self"]],[T]]],[11,R[8],E,E,11,[[["self"]],[R[9]]]],[11,"into",E,E,35,[[],[U]]],[11,R[45],E,E,35,[[],["i"]]],[11,"from",E,E,35,[[[T]],[T]]],[11,R[4],E,E,35,[[[U]],[R[3]]]],[11,R[5],E,E,35,[[],[R[3]]]],[11,R[7],E,E,35,[[["self"]],[T]]],[11,R[6],E,E,35,[[["self"]],[T]]],[11,R[8],E,E,35,[[["self"]],[R[9]]]],[11,"into",E,E,36,[[],[U]]],[11,"from",E,E,36,[[[T]],[T]]],[11,R[4],E,E,36,[[[U]],[R[3]]]],[11,R[5],E,E,36,[[],[R[3]]]],[11,R[7],E,E,36,[[["self"]],[T]]],[11,R[6],E,E,36,[[["self"]],[T]]],[11,R[8],E,E,36,[[["self"]],[R[9]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[4],E,E,2,[[[U]],[R[3]]]],[11,R[5],E,E,2,[[],[R[3]]]],[11,R[7],E,E,2,[[["self"]],[T]]],[11,R[6],E,E,2,[[["self"]],[T]]],[11,R[8],E,E,2,[[["self"]],[R[9]]]],[11,"into",E,E,14,[[],[U]]],[11,"from",E,E,14,[[[T]],[T]]],[11,R[46],E,E,14,[[["self"]],[T]]],[11,R[47],E,E,14,[[["self"],[T]]]],[11,R[4],E,E,14,[[[U]],[R[3]]]],[11,R[5],E,E,14,[[],[R[3]]]],[11,R[7],E,E,14,[[["self"]],[T]]],[11,R[6],E,E,14,[[["self"]],[T]]],[11,R[8],E,E,14,[[["self"]],[R[9]]]],[11,"into",E,E,15,[[],[U]]],[11,R[45],E,E,15,[[],["i"]]],[11,"from",E,E,15,[[[T]],[T]]],[11,R[46],E,E,15,[[["self"]],[T]]],[11,R[47],E,E,15,[[["self"],[T]]]],[11,R[4],E,E,15,[[[U]],[R[3]]]],[11,R[5],E,E,15,[[],[R[3]]]],[11,R[7],E,E,15,[[["self"]],[T]]],[11,R[6],E,E,15,[[["self"]],[T]]],[11,R[8],E,E,15,[[["self"]],[R[9]]]],[11,"into",E,E,37,[[],[U]]],[11,R[45],E,E,37,[[],["i"]]],[11,"from",E,E,37,[[[T]],[T]]],[11,R[4],E,E,37,[[[U]],[R[3]]]],[11,R[5],E,E,37,[[],[R[3]]]],[11,R[7],E,E,37,[[["self"]],[T]]],[11,R[6],E,E,37,[[["self"]],[T]]],[11,R[8],E,E,37,[[["self"]],[R[9]]]],[11,"into",E,E,38,[[],[U]]],[11,R[45],E,E,38,[[],["i"]]],[11,"from",E,E,38,[[[T]],[T]]],[11,R[46],E,E,38,[[["self"]],[T]]],[11,R[47],E,E,38,[[["self"],[T]]]],[11,R[4],E,E,38,[[[U]],[R[3]]]],[11,R[5],E,E,38,[[],[R[3]]]],[11,R[7],E,E,38,[[["self"]],[T]]],[11,R[6],E,E,38,[[["self"]],[T]]],[11,R[8],E,E,38,[[["self"]],[R[9]]]],[11,R[1826],E,E,36,[[["self"],[R[1791]],["vec"]]]],[11,R[1764],E,E,36,[[["self"]],[["cow"],[R[23],["cow"]]]]],[11,R[1826],E,E,2,[[["self"],[R[1791]],["vec"]]]],[11,R[1764],E,E,2,[[["self"]],[["cow"],[R[23],["cow"]]]]],[11,R[1826],"regex",E,26,[[["self"],["string"],[R[1791]]]]],[11,R[1764],E,E,26,[[["self"]],[[R[23],["cow"]],["cow",["str"]]]]],[11,R[1826],E,E,0,[[["self"],["string"],[R[1791]]]]],[11,R[1764],E,E,0,[[["self"]],[[R[23],["cow"]],["cow",["str"]]]]],[11,"clone",E,E,1,[[["self"]],["error"]]],[11,"clone",R[1760],E,8,[[["self"]],["match"]]],[11,"clone",E,E,9,[[["self"]],["regex"]]],[11,"clone",E,E,10,[[["self"]],[R[1769]]]],[11,"clone","regex",E,12,[[["self"]],[R[1771]]]],[11,"clone",E,E,13,[[["self"]],[R[1828]]]],[11,"clone",E,E,22,[[["self"]],[R[1781]]]],[11,"clone",R[1760],E,14,[[["self"]],[R[1771]]]],[11,"clone",E,E,15,[[["self"]],[R[1828]]]],[11,"clone",E,E,38,[[["self"]],[R[1781]]]],[11,"clone","regex",E,16,[[["self"]],["match"]]],[11,"clone",E,E,17,[[["self"]],["regex"]]],[11,"clone",E,E,18,[[["self"]],[R[1769]]]],[11,"eq",E,E,1,[[["self"],["error"]],["bool"]]],[11,"ne",E,E,1,[[["self"],["error"]],["bool"]]],[11,"eq",R[1760],E,8,[[["self"],["match"]],["bool"]]],[11,"ne",E,E,8,[[["self"],["match"]],["bool"]]],[11,"eq","regex",E,16,[[["self"],["match"]],["bool"]]],[11,"ne",E,E,16,[[["self"],["match"]],["bool"]]],[11,R[45],E,E,13,[[]]],[11,R[45],R[1760],E,15,[[]]],[11,R[52],"regex",E,21,[[["self"]],[[R[23],["usize"]],["usize"]]]],[11,R[52],E,E,22,[[["self"]],[[R[23],["usize"]],["usize"]]]],[11,R[52],R[1760],E,37,[[["self"]],[[R[23],["usize"]],["usize"]]]],[11,R[52],E,E,38,[[["self"]],[[R[23],["usize"]],["usize"]]]],[11,"next",E,E,30,[[["self"]],[["match"],[R[23],["match"]]]]],[11,"next",E,E,31,[[["self"]],[[R[1791]],[R[23],[R[1791]]]]]],[11,"next",E,E,32,[[["self"]],[R[23]]]],[11,"next",E,E,33,[[["self"]],[R[23]]]],[11,"next",E,E,34,[[["self"]],[[R[23],["str"]],[R[23],[R[23]]]]]],[11,R[53],E,E,34,[[["self"]]]],[11,"next",E,E,35,[[["self"]],[[R[23],[R[23]]],[R[23],["match"]]]]],[11,"next","regex",E,21,[[["self"]],[[R[23],["usize"]],["usize"]]]],[11,R[53],E,E,21,[[["self"]]]],[11,"next",E,E,22,[[["self"]],[[R[23],["usize"]],["usize"]]]],[11,R[53],E,E,22,[[["self"]]]],[11,"next",R[1760],E,37,[[["self"]],[[R[23],["usize"]],["usize"]]]],[11,R[53],E,E,37,[[["self"]]]],[11,"next",E,E,38,[[["self"]],[[R[23],["usize"]],["usize"]]]],[11,R[53],E,E,38,[[["self"]]]],[11,"next","regex",E,24,[[["self"]],[[R[23],["str"]],[R[23],[R[23]]]]]],[11,R[53],E,E,24,[[["self"]]]],[11,"next",E,E,27,[[["self"]],[[R[23],["str"]],["str"]]]],[11,"next",E,E,28,[[["self"]],[[R[23],["str"]],["str"]]]],[11,"next",E,E,29,[[["self"]],[[R[23],[R[23]]],[R[23],["match"]]]]],[11,"next",E,E,23,[[["self"]],[[R[23],[R[1791]]],[R[1791]]]]],[11,"next",E,E,25,[[["self"]],[[R[23],["match"]],["match"]]]],[11,"fmt",E,E,1,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[1760],E,8,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,R[1829],9,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,10,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,11,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,36,[[["self"],[R[10]]],[R[3]]]],[11,"fmt","regex",E,13,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,12,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[1760],E,15,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,14,[[["self"],[R[10]]],[R[3]]]],[11,"fmt","regex",E,16,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,R[1829],17,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,18,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,19,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,26,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,1,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[1760],R[1829],9,[[["self"],[R[10]]],[R[3]]]],[11,"fmt","regex",R[1829],17,[[["self"],[R[10]]],[R[3]]]],[11,R[775],R[1760],R[1830],9,[[["str"]],[["error"],["regex"],[R[3],["regex","error"]]]]],[11,R[775],"regex",R[1830],17,[[["str"]],[["error"],["regex"],[R[3],["regex","error"]]]]],[11,"index",R[1760],E,11,[[["self"],["usize"]]]],[11,"index",E,E,11,[[["self"],["str"]]]],[11,"index","regex",E,19,[[["self"],["usize"]],["str"]]],[11,"index",E,E,19,[[["self"],["str"]],["str"]]],[11,R[157],E,E,1,[[["self"]],["str"]]],[11,R[1764],E,R[1831],20,[[["self"]],[[R[23],["cow"]],["cow",["str"]]]]],[11,"by_ref",E,R[1766],20,[[["self"]],[R[1767]]]]],"p":[[3,"NoExpand"],[4,"Error"],[3,"NoExpand"],[8,"Replacer"],[3,R[1724]],[3,R[1724]],[3,R[1726]],[3,R[1726]],[3,"Match"],[3,"Regex"],[3,R[1736]],[3,"Captures"],[3,"RegexSet"],[3,R[1832]],[3,"RegexSet"],[3,R[1832]],[3,"Match"],[3,"Regex"],[3,R[1736]],[3,"Captures"],[8,"Replacer"],[3,R[1744]],[3,R[1746]],[3,R[1730]],[3,R[1734]],[3,"Matches"],[3,R[1740]],[3,"Split"],[3,"SplitN"],[3,R[1738]],[3,"Matches"],[3,R[1730]],[3,"Split"],[3,"SplitN"],[3,R[1734]],[3,R[1738]],[3,R[1740]],[3,R[1744]],[3,R[1746]]]};
searchIndex["regex_syntax"]={"doc":"This crate provides a robust regular expression parser.","i":[[3,"Parser",R[370],"A convenience parser for regular expressions.",N,N],[3,R[362],E,R[363],N,N],[4,"Error",E,"This error type encompasses any error that can be returned…",N,N],[13,"Parse",E,"An error that occurred while translating concrete syntax…",0,N],[13,"Translate",E,"An error that occurred while translating abstract syntax…",0,N],[5,"escape",E,R[1833],N,[[["str"]],["string"]]],[5,"escape_into",E,"Escapes all meta characters in `text` and writes the…",N,[[["string"],["str"]]]],[5,"is_meta_character",E,"Returns true if the give character has significance in a…",N,[[["char"]],["bool"]]],[5,"is_word_character",E,"Returns true if and only if the given character is a…",N,[[["char"]],["bool"]]],[5,"is_word_byte",E,"Returns true if and only if the given character is an…",N,[[["u8"]],["bool"]]],[0,"ast",E,"Defines an abstract syntax for regular expressions.",N,N],[3,"Error",R[347],"An error that occurred while parsing a regular expression…",N,N],[3,"Span",E,"Span represents the position information of a single AST…",N,N],[12,"start",E,"The start byte offset.",1,N],[12,"end",E,"The end byte offset.",1,N],[3,"Position",E,"A single position in a regular expression.",N,N],[12,"offset",E,"The absolute offset of this position, starting at `0` from…",2,N],[12,"line",E,"The line number, starting at `1`.",2,N],[12,"column",E,"The approximate column number, starting at `1`.",2,N],[3,R[492],E,"An abstract syntax tree for a singular expression along…",N,N],[12,"ast",E,"The actual ast.",3,N],[12,"comments",E,"All comments found in the original regular expression.",3,N],[3,"Comment",E,"A comment from a regular expression with an associated span.",N,N],[12,"span",E,"The span of this comment, including the beginning `#` and…",4,N],[12,"comment",E,"The comment text, starting with the first character…",4,N],[3,R[354],E,R[355],N,N],[12,"span",E,"The span of this alternation.",5,N],[12,"asts",E,"The alternate regular expressions.",5,N],[3,"Concat",E,R[356],N,N],[12,"span",E,"The span of this concatenation.",6,N],[12,"asts",E,"The concatenation regular expressions.",6,N],[3,R[389],E,"A single literal expression.",N,N],[12,"span",E,"The span of this literal.",7,N],[12,"kind",E,"The kind of this literal.",7,N],[12,"c",E,"The Unicode scalar value corresponding to this literal.",7,N],[3,R[493],E,"A Perl character class.",N,N],[12,"span",E,R[346],8,N],[12,"kind",E,"The kind of Perl class.",8,N],[12,"negated",E,"Whether the class is negated or not. e.g., `\\d` is not…",8,N],[3,R[494],E,"An ASCII character class.",N,N],[12,"span",E,R[346],9,N],[12,"kind",E,"The kind of ASCII class.",9,N],[12,"negated",E,"Whether the class is negated or not. e.g., `[[:alpha:]]`…",9,N],[3,R[371],E,"A Unicode character class.",N,N],[12,"span",E,R[346],10,N],[12,"negated",E,"Whether this class is negated or not.",10,N],[12,"kind",E,"The kind of Unicode class.",10,N],[3,R[495],E,"A bracketed character class, e.g., `[a-z0-9]`.",N,N],[12,"span",E,R[346],11,N],[12,"negated",E,"Whether this class is negated or not. e.g., `[a]` is not…",11,N],[12,"kind",E,"The type of this set. A set is either a normal union of…",11,N],[3,R[496],E,"A single character class range in a set.",N,N],[12,"span",E,"The span of this range.",12,N],[12,"start",E,"The start of this range.",12,N],[12,"end",E,"The end of this range.",12,N],[3,R[497],E,"A union of items inside a character class set.",N,N],[12,"span",E,"The span of the items in this operation. e.g., the…",13,N],[12,"items",E,"The sequence of items that make up this union.",13,N],[3,R[498],E,"A Unicode character class set operation.",N,N],[12,"span",E,"The span of this operation. e.g., the `a-z--[h-p]` in…",14,N],[12,"kind",E,"The type of this set operation.",14,N],[12,"lhs",E,"The left hand side of the operation.",14,N],[12,"rhs",E,"The right hand side of the operation.",14,N],[3,R[350],E,R[351],N,N],[12,"span",E,"The span of this assertion.",15,N],[12,"kind",E,"The assertion kind, e.g., `\\b` or `^`.",15,N],[3,R[352],E,"A repetition operation applied to a regular expression.",N,N],[12,"span",E,"The span of this operation.",16,N],[12,"op",E,"The actual operation.",16,N],[12,"greedy",E,"Whether this operation was applied greedily or not.",16,N],[12,"ast",E,"The regular expression under repetition.",16,N],[3,R[499],E,"The repetition operator itself.",N,N],[12,"span",E,"The span of this operator. This includes things like `+`,…",17,N],[12,"kind",E,"The type of operation.",17,N],[3,"Group",E,R[353],N,N],[12,"span",E,"The span of this group.",18,N],[12,"kind",E,"The kind of this group.",18,N],[12,"ast",E,"The regular expression in this group.",18,N],[3,R[361],E,"A capture name.",N,N],[12,"span",E,"The span of this capture name.",19,N],[12,"name",E,"The capture name.",19,N],[12,"index",E,"The capture index.",19,N],[3,"SetFlags",E,"A group of flags that is not applied to a particular…",N,N],[12,"span",E,"The span of these flags, including the grouping parentheses.",20,N],[12,"flags",E,"The actual sequence of flags.",20,N],[3,"Flags",E,"A group of flags.",N,N],[12,"span",E,"The span of this group of flags.",21,N],[12,"items",E,"A sequence of flag items. Each item is either a flag or a…",21,N],[3,R[500],E,"A single item in a group of flags.",N,N],[12,"span",E,"The span of this item.",22,N],[12,"kind",E,"The kind of this item.",22,N],[4,R[372],E,"The type of an error that occurred while building an AST.",N,N],[13,"CaptureLimitExceeded",E,"The capturing group limit was exceeded.",23,N],[13,"ClassEscapeInvalid",E,"An invalid escape sequence was found in a character class…",23,N],[13,"ClassRangeInvalid",E,"An invalid character class range was found. An invalid…",23,N],[13,"ClassRangeLiteral",E,"An invalid range boundary was found in a character class.…",23,N],[13,"ClassUnclosed",E,"An opening `[` was found with no corresponding closing `]`.",23,N],[13,"DecimalEmpty",E,"Note that this error variant is no longer used. Namely, a…",23,N],[13,"DecimalInvalid",E,"An invalid decimal number was given where one was expected.",23,N],[13,"EscapeHexEmpty",E,"A bracketed hex literal was empty.",23,N],[13,"EscapeHexInvalid",E,"A bracketed hex literal did not correspond to a Unicode…",23,N],[13,"EscapeHexInvalidDigit",E,"An invalid hexadecimal digit was found.",23,N],[13,"EscapeUnexpectedEof",E,"EOF was found before an escape sequence was completed.",23,N],[13,"EscapeUnrecognized",E,"An unrecognized escape sequence.",23,N],[13,"FlagDanglingNegation",E,"A dangling negation was used when setting flags, e.g., `i-`.",23,N],[13,"FlagDuplicate",E,"A flag was used twice, e.g., `i-i`.",23,N],[12,R[349],R[348],"The position of the original flag. The error position…",23,N],[13,"FlagRepeatedNegation",R[347],"The negation operator was used twice, e.g., `-i-s`.",23,N],[12,R[349],R[348],"The position of the original negation operator. The error…",23,N],[13,"FlagUnexpectedEof",R[347],"Expected a flag but got EOF, e.g., `(?`.",23,N],[13,"FlagUnrecognized",E,"Unrecognized flag, e.g., `a`.",23,N],[13,"GroupNameDuplicate",E,"A duplicate capture name was found.",23,N],[12,R[349],R[348],"The position of the initial occurrence of the capture…",23,N],[13,"GroupNameEmpty",R[347],"A capture group name is empty, e.g., `(?P<>abc)`.",23,N],[13,"GroupNameInvalid",E,"An invalid character was seen for a capture group name.…",23,N],[13,"GroupNameUnexpectedEof",E,"A closing `>` could not be found for a capture group name.",23,N],[13,"GroupUnclosed",E,"An unclosed group, e.g., `(ab`.",23,N],[13,"GroupUnopened",E,"An unopened group, e.g., `ab)`.",23,N],[13,"NestLimitExceeded",E,"The nest limit was exceeded. The limit stored here is the…",23,N],[13,"RepetitionCountInvalid",E,"The range provided in a counted repetition operator is…",23,N],[13,"RepetitionCountDecimalEmpty",E,"An opening `{` was not followed by a valid decimal value.…",23,N],[13,"RepetitionCountUnclosed",E,"An opening `{` was found with no corresponding closing `}`.",23,N],[13,"RepetitionMissing",E,"A repetition operator was applied to a missing…",23,N],[13,"UnsupportedBackreference",E,"When octal support is disabled, this error is produced…",23,N],[13,"UnsupportedLookAround",E,"When syntax similar to PCRE's look-around is used, this…",23,N],[4,"Ast",E,"An abstract syntax tree for a single regular expression.",N,N],[13,"Empty",E,"An empty regex that matches everything.",24,N],[13,"Flags",E,"A set of flags, e.g., `(?is)`.",24,N],[13,R[389],E,"A single character literal, which includes escape sequences.",24,N],[13,"Dot",E,"The \"any character\" class.",24,N],[13,R[350],E,R[351],24,N],[13,"Class",E,"A single character class. This includes all forms of…",24,N],[13,R[352],E,"A repetition operator applied to an arbitrary regular…",24,N],[13,"Group",E,R[353],24,N],[13,R[354],E,R[355],24,N],[13,"Concat",E,R[356],24,N],[4,R[501],E,"The kind of a single literal expression.",N,N],[13,R[2197],E,"The literal is written verbatim, e.g., `a` or `☃`.",25,N],[13,"Punctuation",E,"The literal is written as an escape because it is…",25,N],[13,"Octal",E,"The literal is written as an octal escape, e.g., `\\141`.",25,N],[13,"HexFixed",E,"The literal is written as a hex code with a fixed number…",25,N],[13,"HexBrace",E,"The literal is written as a hex code with a bracketed…",25,N],[13,"Special",E,"The literal is written as a specially recognized escape,…",25,N],[4,R[502],E,"The type of a special literal.",N,N],[13,"Bell",E,"Bell, spelled `\\a` (`\\x07`).",26,N],[13,"FormFeed",E,"Form feed, spelled `\\f` (`\\x0C`).",26,N],[13,"Tab",E,"Tab, spelled `\\t` (`\\x09`).",26,N],[13,"LineFeed",E,"Line feed, spelled `\\n` (`\\x0A`).",26,N],[13,R[4594],E,"Carriage return, spelled `\\r` (`\\x0D`).",26,N],[13,"VerticalTab",E,"Vertical tab, spelled `\\v` (`\\x0B`).",26,N],[13,"Space",E,"Space, spelled `\\ ` (`\\x20`). Note that this can only…",26,N],[4,R[503],E,"The type of a Unicode hex literal.",N,N],[13,"X",E,"A `\\x` prefix. When used without brackets, this form is…",27,N],[13,"UnicodeShort",E,"A `\\u` prefix. When used without brackets, this form is…",27,N],[13,"UnicodeLong",E,"A `\\U` prefix. When used without brackets, this form is…",27,N],[4,"Class",E,"A single character class expression.",N,N],[13,R[377],E,R[357],28,N],[13,"Perl",E,R[358],28,N],[13,R[359],E,R[360],28,N],[4,R[504],E,"The available Perl character classes.",N,N],[13,"Digit",E,"Decimal numbers.",29,N],[13,"Space",E,"Whitespace.",29,N],[13,"Word",E,"Word characters.",29,N],[4,R[505],E,"The available ASCII character classes.",N,N],[13,"Alnum",E,"`[0-9A-Za-z]`",30,N],[13,"Alpha",E,"`[A-Za-z]`",30,N],[13,"Ascii",E,"`[\\x00-\\x7F]`",30,N],[13,"Blank",E,"`[ \\t]`",30,N],[13,"Cntrl",E,"`[\\x00-\\x1F\\x7F]`",30,N],[13,"Digit",E,"`[0-9]`",30,N],[13,"Graph",E,"`[!-~]`",30,N],[13,"Lower",E,"`[a-z]`",30,N],[13,"Print",E,"`[ -~]`",30,N],[13,"Punct",E,"`[!-/:-@\\[-`{-~]`",30,N],[13,"Space",E,"`[\\t\\n\\v\\f\\r ]`",30,N],[13,"Upper",E,"`[A-Z]`",30,N],[13,"Word",E,"`[0-9A-Za-z_]`",30,N],[13,"Xdigit",E,"`[0-9A-Fa-f]`",30,N],[4,R[506],E,"The available forms of Unicode character classes.",N,N],[13,"OneLetter",E,"A one letter abbreviated class, e.g., `\\pN`.",31,N],[13,"Named",E,"A binary property, general category or script. The string…",31,N],[13,"NamedValue",E,"A property name and an associated value.",31,N],[12,"op","regex_syntax::ast::ClassUnicodeKind","The type of Unicode op used to associate `name` with…",31,N],[12,"name",E,"The property name (which may be empty).",31,N],[12,"value",E,"The property value (which may be empty).",31,N],[4,R[507],R[347],"The type of op used in a Unicode character class.",N,N],[13,"Equal",E,"A property set to a specific value, e.g.,…",32,N],[13,"Colon",E,"A property set to a specific value using a colon, e.g.,…",32,N],[13,"NotEqual",E,"A property that isn't a particular value, e.g.,…",32,N],[4,"ClassSet",E,"A character class set.",N,N],[13,"Item",E,"An item, which can be a single literal, range, nested…",33,N],[13,"BinaryOp",E,"A single binary operation (i.e., &&, -- or ~~).",33,N],[4,R[508],E,"A single component of a character class set.",N,N],[13,"Empty",E,"An empty item.",34,N],[13,R[389],E,"A single literal.",34,N],[13,"Range",E,"A range between two literals.",34,N],[13,"Ascii",E,"An ASCII character class, e.g., `[:alnum:]` or `[:punct:]`.",34,N],[13,R[377],E,R[357],34,N],[13,"Perl",E,R[358],34,N],[13,R[359],E,R[360],34,N],[13,"Union",E,"A union of items.",34,N],[4,R[509],E,"The type of a Unicode character class set operation.",N,N],[13,R[4676],E,"The intersection of two sets, e.g., `\\pN&&[a-z]`.",35,N],[13,R[4678],E,"The difference of two sets, e.g., `\\pN--[0-9]`.",35,N],[13,R[4677],E,"The symmetric difference of two sets. The symmetric…",35,N],[4,R[510],E,"An assertion kind.",N,N],[13,R[375],E,"`^`",36,N],[13,"EndLine",E,"`$`",36,N],[13,R[376],E,"`\\A`",36,N],[13,"EndText",E,"`\\z`",36,N],[13,R[373],E,"`\\b`",36,N],[13,"NotWordBoundary",E,"`\\B`",36,N],[4,R[382],E,R[383],N,N],[13,R[384],E,"`?`",37,N],[13,R[385],E,"`*`",37,N],[13,R[386],E,"`+`",37,N],[13,"Range",E,"`{m,n}`",37,N],[4,R[387],E,"A range repetition operator.",N,N],[13,"Exactly",E,"`{m}`",38,N],[13,"AtLeast",E,"`{m,}`",38,N],[13,"Bounded",E,"`{m,n}`",38,N],[4,R[378],E,"The kind of a group.",N,N],[13,R[379],E,"`(a)`",39,N],[13,R[361],E,"`(?P<name>a)`",39,N],[13,R[380],E,"`(?:a)` and `(?i:a)`",39,N],[4,R[511],E,"The kind of an item in a group of flags.",N,N],[13,"Negation",E,"A negation operator applied to all subsequent flags in the…",40,N],[13,"Flag",E,"A single flag in a group.",40,N],[4,"Flag",E,"A single flag.",N,N],[13,R[1992],E,"`i`",41,N],[13,"MultiLine",E,"`m`",41,N],[13,"DotMatchesNewLine",E,"`s`",41,N],[13,"SwapGreed",E,"`U`",41,N],[13,R[377],E,"`u`",41,N],[13,"IgnoreWhitespace",E,"`x`",41,N],[5,"visit",E,R[388],N,[[["ast"],["visitor"]],[R[3]]]],[0,"parse",E,"This module provides a regular expression parser.",N,N],[3,R[362],R[441],R[363],N,N],[3,"Parser",E,"A regular expression parser.",N,N],[11,"new",E,R[427],42,[[],[R[364]]]],[11,"build",E,R[428],42,[[["self"]],["parser"]]],[11,R[429],E,R[430],42,[[["self"],["u32"]],[R[364]]]],[11,"octal",E,R[431],42,[[["self"],["bool"]],[R[364]]]],[11,R[433],E,R[434],42,[[["self"],["bool"]],[R[364]]]],[11,"new",E,R[440],43,[[],["parser"]]],[11,"parse",E,"Parse the regular expression into an abstract syntax tree.",43,[[["self"],["str"]],[["ast"],["error"],[R[3],["ast","error"]]]]],[11,"parse_with_comments",E,"Parse the regular expression and return an abstract syntax…",43,[[["self"],["str"]],[[R[365]],[R[3],[R[365],"error"]],["error"]]]],[0,"print",R[347],"This module provides a regular expression printer for `Ast`.",N,N],[3,"Printer",R[442],"A printer for a regular expression abstract syntax tree.",N,N],[11,"new",E,R[391],44,[[],["printer"]]],[11,"print",E,R[392],44,[[["self"],["ast"],["write"]],[R[3]]]],[8,"Visitor",R[347],"A trait for visiting an abstract syntax tree (AST) in…",N,N],[16,"Output",E,"The result of visiting an AST.",45,N],[16,"Err",E,"An error that visiting an AST might return.",45,N],[10,"finish",E,R[396],45,[[],[R[3]]]],[11,"start",E,R[474],45,[[["self"]]]],[11,R[397],E,R[475],45,[[["self"],["ast"]],[R[3]]]],[11,R[398],E,R[476],45,[[["self"],["ast"]],[R[3]]]],[11,R[399],E,R[477],45,[[["self"]],[R[3]]]],[11,R[478],E,R[479],45,[[["self"],[R[366]]],[R[3]]]],[11,R[480],E,R[481],45,[[["self"],[R[366]]],[R[3]]]],[11,R[482],E,R[483],45,[[["self"],[R[367]]],[R[3]]]],[11,R[484],E,R[485],45,[[["self"],[R[367]]],[R[3]]]],[11,R[486],E,R[487],45,[[["self"],[R[367]]],[R[3]]]],[11,"kind",E,R[400],46,[[["self"]],[R[401]]]],[11,"pattern",E,R[402],46,[[["self"]],["str"]]],[11,"span",E,R[403],46,[[["self"]],["span"]]],[11,"auxiliary_span",E,"Return an auxiliary span. This span exists only for some…",46,[[["self"]],[[R[23],["span"]],["span"]]]],[11,"new",E,"Create a new span with the given positions.",1,[[[R[368]]],["span"]]],[11,"splat",E,"Create a new span using the given position as the start…",1,[[[R[368]]],["span"]]],[11,"with_start",E,"Create a new span by replacing the starting the position…",1,[[[R[368]]],["span"]]],[11,"with_end",E,"Create a new span by replacing the ending the position…",1,[[[R[368]]],["span"]]],[11,"is_one_line",E,"Returns true if and only if this span occurs on a single…",1,[[["self"]],["bool"]]],[11,R[25],E,"Returns true if and only if this span is empty. That is,…",1,[[["self"]],["bool"]]],[11,"new",E,"Create a new position with the given information.",2,[[["usize"]],[R[368]]]],[11,"span",E,"Return the span of this abstract syntax tree.",24,[[["self"]],["span"]]],[11,R[25],E,"Return true if and only if this Ast is empty.",24,[[["self"]],["bool"]]],[11,"into_ast",E,"Return this alternation as an AST.",5,[[],["ast"]]],[11,"into_ast",E,"Return this concatenation as an AST.",6,[[],["ast"]]],[11,"byte",E,"If this literal was written as a `\\x` hex escape, then…",7,[[["self"]],[[R[23],["u8"]],["u8"]]]],[11,"digits",E,"The number of digits that must be used with this literal…",27,[[["self"]],["u32"]]],[11,"span",E,"Return the span of this character class.",28,[[["self"]],["span"]]],[11,"from_name",E,"Return the corresponding ClassAsciiKind variant for the…",30,[[["str"]],[[R[23],[R[369]]],[R[369]]]]],[11,R[425],E,"Returns true if this class has been negated.",10,[[["self"]],["bool"]]],[11,R[964],E,"Whether the op is an equality op or not.",32,[[["self"]],["bool"]]],[11,"union",E,"Build a set from a union.",33,[[[R[448]]],[R[463]]]],[11,"span",E,"Return the span of this character class set.",33,[[["self"]],["span"]]],[11,"span",E,"Return the span of this character class set item.",34,[[["self"]],["span"]]],[11,R[27],E,"Returns true if and only if this character class range is…",12,[[["self"]],["bool"]]],[11,"push",E,"Push a new item in this union.",13,[[["self"],[R[366]]]]],[11,"into_item",E,"Return this union as a character class set item.",13,[[],[R[366]]]],[11,R[27],E,"Returns true if and only if this repetition range is valid.",38,[[["self"]],["bool"]]],[11,"flags",E,"If this group is non-capturing, then this returns the…",18,[[["self"]],[[R[23],["flags"]],["flags"]]]],[11,"is_capturing",E,"Returns true if and only if this group is capturing.",18,[[["self"]],["bool"]]],[11,"capture_index",E,"Returns the capture index of this group, if this is a…",18,[[["self"]],[[R[23],["u32"]],["u32"]]]],[11,"add_item",E,"Add the given item to this sequence of flags.",21,[[["self"],[R[449]]],[[R[23],["usize"]],["usize"]]]],[11,"flag_state",E,"Returns the state of the given flag in this set.",21,[[["self"],["flag"]],[[R[23],["bool"]],["bool"]]]],[11,"is_negation",E,"Returns true if and only if this item is a negation…",40,[[["self"]],["bool"]]],[0,"hir",R[370],"Defines a high-level intermediate representation for…",N,N],[3,"Error",R[381],"An error that can occur while translating an `Ast` to a…",N,N],[3,"Hir",E,"A high-level intermediate representation (HIR) for a…",N,N],[3,R[371],E,R[374],N,N],[3,R[520],E,"An iterator over all ranges in a Unicode character class.",N,N],[3,R[514],E,"A single range of characters represented by Unicode scalar…",N,N],[3,R[515],E,"A set of characters represented by arbitrary bytes (where…",N,N],[3,R[521],E,"An iterator over all ranges in a byte character class.",N,N],[3,R[516],E,"A single range of characters represented by arbitrary bytes.",N,N],[3,"Group",E,"The high-level intermediate representation for a group.",N,N],[12,"kind",E,"The kind of this group. If it is a capturing group, then…",47,N],[12,"hir",E,"The expression inside the capturing group, which may be…",47,N],[3,R[352],E,"The high-level intermediate representation of a repetition…",N,N],[12,"kind",E,"The kind of this repetition operator.",48,N],[12,"greedy",E,"Whether this repetition operator is greedy or not. A…",48,N],[12,"hir",E,"The expression being repeated.",48,N],[4,R[372],E,"The type of an error that occurred while building an `Hir`.",N,N],[13,"UnicodeNotAllowed",E,"This error occurs when a Unicode feature is used when…",49,N],[13,R[1552],E,"This error occurs when translating a pattern that could…",49,N],[13,"UnicodePropertyNotFound",E,"This occurs when an unrecognized Unicode property name…",49,N],[13,"UnicodePropertyValueNotFound",E,"This occurs when an unrecognized Unicode property value…",49,N],[13,"EmptyClassNotAllowed",E,"This occurs when the translator attempts to construct a…",49,N],[4,"HirKind",E,"The kind of an arbitrary `Hir` expression.",N,N],[13,"Empty",E,"The empty regular expression, which matches everything,…",50,N],[13,R[389],E,"A single literal character that matches exactly this…",50,N],[13,"Class",E,"A single character class that matches any of the…",50,N],[13,"Anchor",E,"An anchor assertion. An anchor assertion match always has…",50,N],[13,R[373],E,"A word boundary assertion, which may or may not be Unicode…",50,N],[13,R[352],E,"A repetition operation applied to a child expression.",50,N],[13,"Group",E,"A possibly capturing group, which contains a child…",50,N],[13,"Concat",E,"A concatenation of expressions. A concatenation always has…",50,N],[13,R[354],E,"An alternation of expressions. An alternation always has…",50,N],[4,R[389],E,"The high-level intermediate representation of a literal.",N,N],[13,R[377],E,"A single character represented by a Unicode scalar value.",51,N],[13,"Byte",E,"A single character represented by an arbitrary byte.",51,N],[4,"Class",E,"The high-level intermediate representation of a character…",N,N],[13,R[377],E,R[374],52,N],[13,"Bytes",E,"A set of characters represented by arbitrary bytes (one…",52,N],[4,"Anchor",E,"The high-level intermediate representation for an anchor…",N,N],[13,R[375],E,"Match the beginning of a line or the beginning of text.…",53,N],[13,"EndLine",E,"Match the end of a line or the end of text. Specifically,…",53,N],[13,R[376],E,"Match the beginning of text. Specifically, this matches at…",53,N],[13,"EndText",E,"Match the end of text. Specifically, this matches at the…",53,N],[4,R[373],E,"The high-level intermediate representation for a…",N,N],[13,R[377],E,"Match a Unicode-aware word boundary. That is, this matches…",54,N],[13,"UnicodeNegate",E,"Match a Unicode-aware negation of a word boundary.",54,N],[13,"Ascii",E,"Match an ASCII-only word boundary. That is, this matches a…",54,N],[13,"AsciiNegate",E,"Match an ASCII-only negation of a word boundary.",54,N],[4,R[378],E,"The kind of group.",N,N],[13,R[379],E,"A normal unnamed capturing group.",55,N],[13,R[361],E,"A named capturing group.",55,N],[12,"name","regex_syntax::hir::GroupKind","The name of the group.",55,N],[12,"index",E,"The capture index of the group.",55,N],[13,R[380],R[381],"A non-capturing group.",55,N],[4,R[382],E,R[383],N,N],[13,R[384],E,"Matches a sub-expression zero or one times.",56,N],[13,R[385],E,"Matches a sub-expression zero or more times.",56,N],[13,R[386],E,"Matches a sub-expression one or more times.",56,N],[13,"Range",E,"Matches a sub-expression within a bounded range of times.",56,N],[4,R[387],E,"The kind of a counted repetition operator.",N,N],[13,"Exactly",E,"Matches a sub-expression exactly this many times.",57,N],[13,"AtLeast",E,"Matches a sub-expression at least this many times.",57,N],[13,"Bounded",E,"Matches a sub-expression at least `m` times and at most…",57,N],[5,"visit",E,R[388],N,[[["hir"],["visitor"]],[R[3]]]],[0,R[404],E,"Provides routines for extracting literal prefixes and…",N,N],[3,"Literals",R[443],"A set of literal byte strings extracted from a regular…",N,N],[3,R[389],E,"A single member of a set of literals extracted from a…",N,N],[11,"empty",E,"Returns a new empty set of literals using default limits.",58,[[],[R[390]]]],[11,"prefixes",E,"Returns a set of literal prefixes extracted from the given…",58,[[["hir"]],[R[390]]]],[11,"suffixes",E,"Returns a set of literal suffixes extracted from the given…",58,[[["hir"]],[R[390]]]],[11,"limit_size",E,"Get the approximate size limit (in bytes) of this set.",58,[[["self"]],["usize"]]],[11,"set_limit_size",E,"Set the approximate size limit (in bytes) of this set.",58,[[["self"],["usize"]],[R[390]]]],[11,"limit_class",E,"Get the character class size limit for this set.",58,[[["self"]],["usize"]]],[11,"set_limit_class",E,"Limits the size of character(or byte) classes considered.",58,[[["self"],["usize"]],[R[390]]]],[11,R[390],E,"Returns the set of literals as a slice. Its order is…",58,[[["self"]]]],[11,"min_len",E,"Returns the length of the smallest literal.",58,[[["self"]],[[R[23],["usize"]],["usize"]]]],[11,"all_complete",E,"Returns true if all members in this set are complete.",58,[[["self"]],["bool"]]],[11,"any_complete",E,"Returns true if any member in this set is complete.",58,[[["self"]],["bool"]]],[11,"contains_empty",E,"Returns true if this set contains an empty literal.",58,[[["self"]],["bool"]]],[11,R[25],E,"Returns true if this set is empty or if all of its members…",58,[[["self"]],["bool"]]],[11,"to_empty",E,"Returns a new empty set of literals using this set's limits.",58,[[["self"]],[R[390]]]],[11,"longest_common_prefix",E,"Returns the longest common prefix of all members in this…",58,[[["self"]]]],[11,"longest_common_suffix",E,"Returns the longest common suffix of all members in this…",58,[[["self"]]]],[11,"trim_suffix",E,"Returns a new set of literals with the given number of…",58,[[["self"],["usize"]],[[R[390]],[R[23],[R[390]]]]]],[11,"unambiguous_prefixes",E,"Returns a new set of prefixes of this set of literals that…",58,[[["self"]],[R[390]]]],[11,"unambiguous_suffixes",E,"Returns a new set of suffixes of this set of literals that…",58,[[["self"]],[R[390]]]],[11,"union_prefixes",E,"Unions the prefixes from the given expression to this set.",58,[[["self"],["hir"]],["bool"]]],[11,"union_suffixes",E,"Unions the suffixes from the given expression to this set.",58,[[["self"],["hir"]],["bool"]]],[11,"union",E,"Unions this set with another set.",58,[[["self"],[R[390]]],["bool"]]],[11,"cross_product",E,"Extends this set with another set.",58,[[["self"],[R[390]]],["bool"]]],[11,"cross_add",E,"Extends each literal in this set with the bytes given.",58,[[["self"]],["bool"]]],[11,"add",E,"Adds the given literal to this set.",58,[[["self"],[R[404]]],["bool"]]],[11,"add_char_class",E,"Extends each literal in this set with the character class…",58,[[["self"],[R[409]]],["bool"]]],[11,"add_byte_class",E,"Extends each literal in this set with the byte class given.",58,[[["self"],[R[413]]],["bool"]]],[11,"cut",E,"Cuts every member of this set. When a member is cut, it…",58,[[["self"]]]],[11,"reverse",E,"Reverses all members in place.",58,[[["self"]]]],[11,"clear",E,"Clears this set of all members.",58,[[["self"]]]],[11,"new",E,"Returns a new complete literal with the bytes given.",59,[[["vec",["u8"]],["u8"]],[R[404]]]],[11,"empty",E,"Returns a new complete empty literal.",59,[[],[R[404]]]],[11,"is_cut",E,"Returns true if this literal was \"cut.\"",59,[[["self"]],["bool"]]],[11,"cut",E,"Cuts this literal.",59,[[["self"]]]],[0,"print",R[381],"This module provides a regular expression printer for `Hir`.",N,N],[3,"Printer",R[444],"A printer for a regular expression's high-level…",N,N],[11,"new",E,R[391],60,[[],["printer"]]],[11,"print",E,R[392],60,[[["self"],["hir"],["write"]],[R[3]]]],[0,R[395],R[381],"Defines a translator that converts an `Ast` to an `Hir`.",N,N],[3,R[512],R[445],"A builder for constructing an AST->HIR translator.",N,N],[3,R[513],E,"A translator maps abstract syntax to a high level…",N,N],[11,"new",E,"Create a new translator builder with a default c…",61,[[],[R[393]]]],[11,"build",E,"Build a translator using the current configuration.",61,[[["self"]],[R[394]]]],[11,R[432],E,"When enabled, translation will permit the construction of…",61,[[["self"],["bool"]],[R[393]]]],[11,R[435],E,"Enable or disable the case insensitive flag (`i`) by…",61,[[["self"],["bool"]],[R[393]]]],[11,R[436],E,"Enable or disable the multi-line matching flag (`m`) by…",61,[[["self"],["bool"]],[R[393]]]],[11,R[437],E,"Enable or disable the \"dot matches any character\" flag…",61,[[["self"],["bool"]],[R[393]]]],[11,R[438],E,"Enable or disable the \"swap greed\" flag (`U`) by default.",61,[[["self"],["bool"]],[R[393]]]],[11,"unicode",E,R[439],61,[[["self"],["bool"]],[R[393]]]],[11,"new",E,"Create a new translator using the default configuration.",62,[[],[R[394]]]],[11,R[395],E,"Translate the given abstract syntax tree (AST) into a high…",62,[[["self"],["ast"],["str"]],[[R[3],["hir","error"]],["hir"],["error"]]]],[8,"Visitor",R[381],"A trait for visiting the high-level IR (HIR) in depth…",N,N],[16,"Output",E,"The result of visiting an HIR.",63,N],[16,"Err",E,"An error that visiting an HIR might return.",63,N],[10,"finish",E,R[396],63,[[],[R[3]]]],[11,"start",E,R[488],63,[[["self"]]]],[11,R[397],E,R[489],63,[[["self"],["hir"]],[R[3]]]],[11,R[398],E,R[490],63,[[["self"],["hir"]],[R[3]]]],[11,R[399],E,R[491],63,[[["self"]],[R[3]]]],[11,"kind",E,R[400],64,[[["self"]],[R[401]]]],[11,"pattern",E,R[402],64,[[["self"]],["str"]]],[11,"span",E,R[403],64,[[["self"]],["span"]]],[11,"kind",E,"Returns a reference to the underlying HIR kind.",65,[[["self"]],["hirkind"]]],[11,"into_kind",E,"Consumes ownership of this HIR expression and returns its…",65,[[],["hirkind"]]],[11,"empty",E,"Returns an empty HIR expression.",65,[[],["hir"]]],[11,R[404],E,"Creates a literal HIR expression.",65,[[[R[404]]],["hir"]]],[11,"class",E,"Creates a class HIR expression.",65,[[["class"]],["hir"]]],[11,"anchor",E,"Creates an anchor assertion HIR expression.",65,[[["anchor"]],["hir"]]],[11,"word_boundary",E,"Creates a word boundary assertion HIR expression.",65,[[[R[450]]],["hir"]]],[11,R[405],E,"Creates a repetition HIR expression.",65,[[[R[405]]],["hir"]]],[11,"group",E,"Creates a group HIR expression.",65,[[["group"]],["hir"]]],[11,"concat",E,"Returns the concatenation of the given expressions.",65,[[["hir"],["vec",["hir"]]],["hir"]]],[11,R[447],E,"Returns the alternation of the given expressions.",65,[[["hir"],["vec",["hir"]]],["hir"]]],[11,"dot",E,"Build an HIR expression for `.`.",65,[[["bool"]],["hir"]]],[11,"any",E,"Build an HIR expression for `(?s).`.",65,[[["bool"]],["hir"]]],[11,R[408],E,"Return true if and only if this HIR will always match…",65,[[["self"]],["bool"]]],[11,"is_all_assertions",E,"Returns true if and only if this entire HIR expression is…",65,[[["self"]],["bool"]]],[11,"is_anchored_start",E,R[406],65,[[["self"]],["bool"]]],[11,"is_anchored_end",E,R[406],65,[[["self"]],["bool"]]],[11,"is_line_anchored_start",E,R[406],65,[[["self"]],["bool"]]],[11,"is_line_anchored_end",E,R[406],65,[[["self"]],["bool"]]],[11,"is_any_anchored_start",E,R[407],65,[[["self"]],["bool"]]],[11,"is_any_anchored_end",E,R[407],65,[[["self"]],["bool"]]],[11,R[426],E,"Return true if and only if the empty string is part of the…",65,[[["self"]],["bool"]]],[11,"is_literal",E,"Return true if and only if this HIR is a simple literal.…",65,[[["self"]],["bool"]]],[11,"is_alternation_literal",E,"Return true if and only if this HIR is either a simple…",65,[[["self"]],["bool"]]],[11,R[25],E,"Return true if and only if this HIR is the empty regular…",50,[[["self"]],["bool"]]],[11,"has_subexprs",E,"Returns true if and only if this kind has any (including…",50,[[["self"]],["bool"]]],[11,"is_unicode",E,"Returns true if and only if this literal corresponds to a…",51,[[["self"]],["bool"]]],[11,R[410],E,"Apply Unicode simple case folding to this character class,…",52,[[["self"]]]],[11,"negate",E,"Negate this character class in place.",52,[[["self"]]]],[11,R[408],E,"Returns true if and only if this character class will only…",52,[[["self"]],["bool"]]],[11,"new",E,R[412],66,[[["i"]],[R[409]]]],[11,"empty",E,R[414],66,[[],[R[409]]]],[11,"push",E,R[415],66,[[["self"],[R[411]]]]],[11,"iter",E,R[416],66,[[["self"]],["classunicodeiter"]]],[11,"ranges",E,R[417],66,[[["self"]]]],[11,R[410],E,R[418],66,[[["self"]]]],[11,"negate",E,"Negate this character class.",66,[[["self"]]]],[11,"union",E,"Union this character class with the given character class,…",66,[[["self"],[R[409]]]]],[11,R[419],E,"Intersect this character class with the given character…",66,[[["self"],[R[409]]]]],[11,R[420],E,"Subtract the given character class from this character…",66,[[["self"],[R[409]]]]],[11,R[421],E,"Compute the symmetric difference of the given character…",66,[[["self"],[R[409]]]]],[11,"new",E,"Create a new Unicode scalar value range for a character…",67,[[["char"]],[R[411]]]],[11,"start",E,R[423],67,[[["self"]],["char"]]],[11,"end",E,R[424],67,[[["self"]],["char"]]],[11,"new",E,R[412],68,[[["i"]],[R[413]]]],[11,"empty",E,R[414],68,[[],[R[413]]]],[11,"push",E,R[415],68,[[["self"],[R[422]]]]],[11,"iter",E,R[416],68,[[["self"]],["classbytesiter"]]],[11,"ranges",E,R[417],68,[[["self"]]]],[11,R[410],E,R[418],68,[[["self"]]]],[11,"negate",E,"Negate this byte class.",68,[[["self"]]]],[11,"union",E,"Union this byte class with the given byte class, in place.",68,[[["self"],[R[413]]]]],[11,R[419],E,"Intersect this byte class with the given byte class, in…",68,[[["self"],[R[413]]]]],[11,R[420],E,"Subtract the given byte class from this byte class, in…",68,[[["self"],[R[413]]]]],[11,R[421],E,"Compute the symmetric difference of the given byte…",68,[[["self"],[R[413]]]]],[11,"is_all_ascii",E,"Returns true if and only if this character class will…",68,[[["self"]],["bool"]]],[11,"new",E,"Create a new byte range for a character class.",69,[[["u8"]],[R[422]]]],[11,"start",E,R[423],69,[[["self"]],["u8"]]],[11,"end",E,R[424],69,[[["self"]],["u8"]]],[11,R[425],E,"Returns true if and only if this word boundary assertion…",54,[[["self"]],["bool"]]],[11,R[426],E,"Returns true if and only if this repetition operator makes…",48,[[["self"]],["bool"]]],[11,"new",R[370],R[427],70,[[],[R[364]]]],[11,"build",E,R[428],70,[[["self"]],["parser"]]],[11,R[429],E,R[430],70,[[["self"],["u32"]],[R[364]]]],[11,"octal",E,R[431],70,[[["self"],["bool"]],[R[364]]]],[11,R[432],E,"When enabled, the parser will permit the construction of a…",70,[[["self"],["bool"]],[R[364]]]],[11,R[433],E,R[434],70,[[["self"],["bool"]],[R[364]]]],[11,R[435],E,"Enable or disable the case insensitive flag by default.",70,[[["self"],["bool"]],[R[364]]]],[11,R[436],E,"Enable or disable the multi-line matching flag by default.",70,[[["self"],["bool"]],[R[364]]]],[11,R[437],E,"Enable or disable the \"dot matches any character\" flag by…",70,[[["self"],["bool"]],[R[364]]]],[11,R[438],E,"Enable or disable the \"swap greed\" flag by default.",70,[[["self"],["bool"]],[R[364]]]],[11,"unicode",E,R[439],70,[[["self"],["bool"]],[R[364]]]],[11,"new",E,R[440],71,[[],["parser"]]],[11,"parse",E,"Parse the regular expression into a high level…",71,[[["self"],["str"]],[["hir"],[R[3],["hir"]]]]],[0,"utf8",E,"Converts ranges of Unicode scalar values to equivalent…",N,N],[3,R[517],R[446],"A single inclusive range of UTF-8 bytes.",N,N],[12,"start",E,"Start of byte range (inclusive).",72,N],[12,"end",E,"End of byte range (inclusive).",72,N],[3,R[519],E,"An iterator over ranges of matching UTF-8 byte sequences.",N,N],[4,R[518],E,"Utf8Sequence represents a sequence of byte ranges.",N,N],[13,"One",E,"One byte range.",73,N],[13,"Two",E,"Two successive byte ranges.",73,N],[13,"Three",E,"Three successive byte ranges.",73,N],[13,"Four",E,"Four successive byte ranges.",73,N],[11,R[44],E,"Returns the underlying sequence of byte ranges as a slice.",73,[[["self"]]]],[11,"len",E,"Returns the number of byte ranges in this sequence.",73,[[["self"]],["usize"]]],[11,"matches",E,"Returns true if and only if a prefix of `bytes` matches…",73,[[["self"]],["bool"]]],[11,"matches",E,"Returns true if and only if the given byte is in this range.",72,[[["self"],["u8"]],["bool"]]],[11,"new",E,"Create a new iterator over UTF-8 byte ranges for the…",74,[[["char"]],["self"]]],[6,"Result",R[370],"A type alias for dealing with errors returned by this crate.",N,N],[11,"into",E,E,71,[[],[U]]],[11,"from",E,E,71,[[[T]],[T]]],[11,R[46],E,E,71,[[["self"]],[T]]],[11,R[47],E,E,71,[[["self"],[T]]]],[11,R[4],E,E,71,[[[U]],[R[3]]]],[11,R[5],E,E,71,[[],[R[3]]]],[11,R[7],E,E,71,[[["self"]],[T]]],[11,R[6],E,E,71,[[["self"]],[T]]],[11,R[8],E,E,71,[[["self"]],[R[9]]]],[11,"into",E,E,70,[[],[U]]],[11,"from",E,E,70,[[[T]],[T]]],[11,R[46],E,E,70,[[["self"]],[T]]],[11,R[47],E,E,70,[[["self"],[T]]]],[11,R[4],E,E,70,[[[U]],[R[3]]]],[11,R[5],E,E,70,[[],[R[3]]]],[11,R[7],E,E,70,[[["self"]],[T]]],[11,R[6],E,E,70,[[["self"]],[T]]],[11,R[8],E,E,70,[[["self"]],[R[9]]]],[11,"into",E,E,0,[[],[U]]],[11,R[113],E,E,0,[[["self"]],["string"]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[46],E,E,0,[[["self"]],[T]]],[11,R[47],E,E,0,[[["self"],[T]]]],[11,R[4],E,E,0,[[[U]],[R[3]]]],[11,R[5],E,E,0,[[],[R[3]]]],[11,R[7],E,E,0,[[["self"]],[T]]],[11,R[6],E,E,0,[[["self"]],[T]]],[11,R[8],E,E,0,[[["self"]],[R[9]]]],[11,"into",R[347],E,46,[[],[U]]],[11,R[113],E,E,46,[[["self"]],["string"]]],[11,"from",E,E,46,[[[T]],[T]]],[11,R[46],E,E,46,[[["self"]],[T]]],[11,R[47],E,E,46,[[["self"],[T]]]],[11,R[4],E,E,46,[[[U]],[R[3]]]],[11,R[5],E,E,46,[[],[R[3]]]],[11,R[7],E,E,46,[[["self"]],[T]]],[11,R[6],E,E,46,[[["self"]],[T]]],[11,R[8],E,E,46,[[["self"]],[R[9]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[46],E,E,1,[[["self"]],[T]]],[11,R[47],E,E,1,[[["self"],[T]]]],[11,R[4],E,E,1,[[[U]],[R[3]]]],[11,R[5],E,E,1,[[],[R[3]]]],[11,R[7],E,E,1,[[["self"]],[T]]],[11,R[6],E,E,1,[[["self"]],[T]]],[11,R[8],E,E,1,[[["self"]],[R[9]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[46],E,E,2,[[["self"]],[T]]],[11,R[47],E,E,2,[[["self"],[T]]]],[11,R[4],E,E,2,[[[U]],[R[3]]]],[11,R[5],E,E,2,[[],[R[3]]]],[11,R[7],E,E,2,[[["self"]],[T]]],[11,R[6],E,E,2,[[["self"]],[T]]],[11,R[8],E,E,2,[[["self"]],[R[9]]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[46],E,E,3,[[["self"]],[T]]],[11,R[47],E,E,3,[[["self"],[T]]]],[11,R[4],E,E,3,[[[U]],[R[3]]]],[11,R[5],E,E,3,[[],[R[3]]]],[11,R[7],E,E,3,[[["self"]],[T]]],[11,R[6],E,E,3,[[["self"]],[T]]],[11,R[8],E,E,3,[[["self"]],[R[9]]]],[11,"into",E,E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[46],E,E,4,[[["self"]],[T]]],[11,R[47],E,E,4,[[["self"],[T]]]],[11,R[4],E,E,4,[[[U]],[R[3]]]],[11,R[5],E,E,4,[[],[R[3]]]],[11,R[7],E,E,4,[[["self"]],[T]]],[11,R[6],E,E,4,[[["self"]],[T]]],[11,R[8],E,E,4,[[["self"]],[R[9]]]],[11,"into",E,E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[46],E,E,5,[[["self"]],[T]]],[11,R[47],E,E,5,[[["self"],[T]]]],[11,R[4],E,E,5,[[[U]],[R[3]]]],[11,R[5],E,E,5,[[],[R[3]]]],[11,R[7],E,E,5,[[["self"]],[T]]],[11,R[6],E,E,5,[[["self"]],[T]]],[11,R[8],E,E,5,[[["self"]],[R[9]]]],[11,"into",E,E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[46],E,E,6,[[["self"]],[T]]],[11,R[47],E,E,6,[[["self"],[T]]]],[11,R[4],E,E,6,[[[U]],[R[3]]]],[11,R[5],E,E,6,[[],[R[3]]]],[11,R[7],E,E,6,[[["self"]],[T]]],[11,R[6],E,E,6,[[["self"]],[T]]],[11,R[8],E,E,6,[[["self"]],[R[9]]]],[11,"into",E,E,7,[[],[U]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[46],E,E,7,[[["self"]],[T]]],[11,R[47],E,E,7,[[["self"],[T]]]],[11,R[4],E,E,7,[[[U]],[R[3]]]],[11,R[5],E,E,7,[[],[R[3]]]],[11,R[7],E,E,7,[[["self"]],[T]]],[11,R[6],E,E,7,[[["self"]],[T]]],[11,R[8],E,E,7,[[["self"]],[R[9]]]],[11,"into",E,E,8,[[],[U]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[46],E,E,8,[[["self"]],[T]]],[11,R[47],E,E,8,[[["self"],[T]]]],[11,R[4],E,E,8,[[[U]],[R[3]]]],[11,R[5],E,E,8,[[],[R[3]]]],[11,R[7],E,E,8,[[["self"]],[T]]],[11,R[6],E,E,8,[[["self"]],[T]]],[11,R[8],E,E,8,[[["self"]],[R[9]]]],[11,"into",E,E,9,[[],[U]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[46],E,E,9,[[["self"]],[T]]],[11,R[47],E,E,9,[[["self"],[T]]]],[11,R[4],E,E,9,[[[U]],[R[3]]]],[11,R[5],E,E,9,[[],[R[3]]]],[11,R[7],E,E,9,[[["self"]],[T]]],[11,R[6],E,E,9,[[["self"]],[T]]],[11,R[8],E,E,9,[[["self"]],[R[9]]]],[11,"into",E,E,10,[[],[U]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[46],E,E,10,[[["self"]],[T]]],[11,R[47],E,E,10,[[["self"],[T]]]],[11,R[4],E,E,10,[[[U]],[R[3]]]],[11,R[5],E,E,10,[[],[R[3]]]],[11,R[7],E,E,10,[[["self"]],[T]]],[11,R[6],E,E,10,[[["self"]],[T]]],[11,R[8],E,E,10,[[["self"]],[R[9]]]],[11,"into",E,E,11,[[],[U]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[46],E,E,11,[[["self"]],[T]]],[11,R[47],E,E,11,[[["self"],[T]]]],[11,R[4],E,E,11,[[[U]],[R[3]]]],[11,R[5],E,E,11,[[],[R[3]]]],[11,R[7],E,E,11,[[["self"]],[T]]],[11,R[6],E,E,11,[[["self"]],[T]]],[11,R[8],E,E,11,[[["self"]],[R[9]]]],[11,"into",E,E,12,[[],[U]]],[11,"from",E,E,12,[[[T]],[T]]],[11,R[46],E,E,12,[[["self"]],[T]]],[11,R[47],E,E,12,[[["self"],[T]]]],[11,R[4],E,E,12,[[[U]],[R[3]]]],[11,R[5],E,E,12,[[],[R[3]]]],[11,R[7],E,E,12,[[["self"]],[T]]],[11,R[6],E,E,12,[[["self"]],[T]]],[11,R[8],E,E,12,[[["self"]],[R[9]]]],[11,"into",E,E,13,[[],[U]]],[11,"from",E,E,13,[[[T]],[T]]],[11,R[46],E,E,13,[[["self"]],[T]]],[11,R[47],E,E,13,[[["self"],[T]]]],[11,R[4],E,E,13,[[[U]],[R[3]]]],[11,R[5],E,E,13,[[],[R[3]]]],[11,R[7],E,E,13,[[["self"]],[T]]],[11,R[6],E,E,13,[[["self"]],[T]]],[11,R[8],E,E,13,[[["self"]],[R[9]]]],[11,"into",E,E,14,[[],[U]]],[11,"from",E,E,14,[[[T]],[T]]],[11,R[46],E,E,14,[[["self"]],[T]]],[11,R[47],E,E,14,[[["self"],[T]]]],[11,R[4],E,E,14,[[[U]],[R[3]]]],[11,R[5],E,E,14,[[],[R[3]]]],[11,R[7],E,E,14,[[["self"]],[T]]],[11,R[6],E,E,14,[[["self"]],[T]]],[11,R[8],E,E,14,[[["self"]],[R[9]]]],[11,"into",E,E,15,[[],[U]]],[11,"from",E,E,15,[[[T]],[T]]],[11,R[46],E,E,15,[[["self"]],[T]]],[11,R[47],E,E,15,[[["self"],[T]]]],[11,R[4],E,E,15,[[[U]],[R[3]]]],[11,R[5],E,E,15,[[],[R[3]]]],[11,R[7],E,E,15,[[["self"]],[T]]],[11,R[6],E,E,15,[[["self"]],[T]]],[11,R[8],E,E,15,[[["self"]],[R[9]]]],[11,"into",E,E,16,[[],[U]]],[11,"from",E,E,16,[[[T]],[T]]],[11,R[46],E,E,16,[[["self"]],[T]]],[11,R[47],E,E,16,[[["self"],[T]]]],[11,R[4],E,E,16,[[[U]],[R[3]]]],[11,R[5],E,E,16,[[],[R[3]]]],[11,R[7],E,E,16,[[["self"]],[T]]],[11,R[6],E,E,16,[[["self"]],[T]]],[11,R[8],E,E,16,[[["self"]],[R[9]]]],[11,"into",E,E,17,[[],[U]]],[11,"from",E,E,17,[[[T]],[T]]],[11,R[46],E,E,17,[[["self"]],[T]]],[11,R[47],E,E,17,[[["self"],[T]]]],[11,R[4],E,E,17,[[[U]],[R[3]]]],[11,R[5],E,E,17,[[],[R[3]]]],[11,R[7],E,E,17,[[["self"]],[T]]],[11,R[6],E,E,17,[[["self"]],[T]]],[11,R[8],E,E,17,[[["self"]],[R[9]]]],[11,"into",E,E,18,[[],[U]]],[11,"from",E,E,18,[[[T]],[T]]],[11,R[46],E,E,18,[[["self"]],[T]]],[11,R[47],E,E,18,[[["self"],[T]]]],[11,R[4],E,E,18,[[[U]],[R[3]]]],[11,R[5],E,E,18,[[],[R[3]]]],[11,R[7],E,E,18,[[["self"]],[T]]],[11,R[6],E,E,18,[[["self"]],[T]]],[11,R[8],E,E,18,[[["self"]],[R[9]]]],[11,"into",E,E,19,[[],[U]]],[11,"from",E,E,19,[[[T]],[T]]],[11,R[46],E,E,19,[[["self"]],[T]]],[11,R[47],E,E,19,[[["self"],[T]]]],[11,R[4],E,E,19,[[[U]],[R[3]]]],[11,R[5],E,E,19,[[],[R[3]]]],[11,R[7],E,E,19,[[["self"]],[T]]],[11,R[6],E,E,19,[[["self"]],[T]]],[11,R[8],E,E,19,[[["self"]],[R[9]]]],[11,"into",E,E,20,[[],[U]]],[11,"from",E,E,20,[[[T]],[T]]],[11,R[46],E,E,20,[[["self"]],[T]]],[11,R[47],E,E,20,[[["self"],[T]]]],[11,R[4],E,E,20,[[[U]],[R[3]]]],[11,R[5],E,E,20,[[],[R[3]]]],[11,R[7],E,E,20,[[["self"]],[T]]],[11,R[6],E,E,20,[[["self"]],[T]]],[11,R[8],E,E,20,[[["self"]],[R[9]]]],[11,"into",E,E,21,[[],[U]]],[11,"from",E,E,21,[[[T]],[T]]],[11,R[46],E,E,21,[[["self"]],[T]]],[11,R[47],E,E,21,[[["self"],[T]]]],[11,R[4],E,E,21,[[[U]],[R[3]]]],[11,R[5],E,E,21,[[],[R[3]]]],[11,R[7],E,E,21,[[["self"]],[T]]],[11,R[6],E,E,21,[[["self"]],[T]]],[11,R[8],E,E,21,[[["self"]],[R[9]]]],[11,"into",E,E,22,[[],[U]]],[11,"from",E,E,22,[[[T]],[T]]],[11,R[46],E,E,22,[[["self"]],[T]]],[11,R[47],E,E,22,[[["self"],[T]]]],[11,R[4],E,E,22,[[[U]],[R[3]]]],[11,R[5],E,E,22,[[],[R[3]]]],[11,R[7],E,E,22,[[["self"]],[T]]],[11,R[6],E,E,22,[[["self"]],[T]]],[11,R[8],E,E,22,[[["self"]],[R[9]]]],[11,"into",E,E,23,[[],[U]]],[11,R[113],E,E,23,[[["self"]],["string"]]],[11,"from",E,E,23,[[[T]],[T]]],[11,R[46],E,E,23,[[["self"]],[T]]],[11,R[47],E,E,23,[[["self"],[T]]]],[11,R[4],E,E,23,[[[U]],[R[3]]]],[11,R[5],E,E,23,[[],[R[3]]]],[11,R[7],E,E,23,[[["self"]],[T]]],[11,R[6],E,E,23,[[["self"]],[T]]],[11,R[8],E,E,23,[[["self"]],[R[9]]]],[11,"into",E,E,24,[[],[U]]],[11,R[113],E,E,24,[[["self"]],["string"]]],[11,"from",E,E,24,[[[T]],[T]]],[11,R[46],E,E,24,[[["self"]],[T]]],[11,R[47],E,E,24,[[["self"],[T]]]],[11,R[4],E,E,24,[[[U]],[R[3]]]],[11,R[5],E,E,24,[[],[R[3]]]],[11,R[7],E,E,24,[[["self"]],[T]]],[11,R[6],E,E,24,[[["self"]],[T]]],[11,R[8],E,E,24,[[["self"]],[R[9]]]],[11,"into",E,E,25,[[],[U]]],[11,"from",E,E,25,[[[T]],[T]]],[11,R[46],E,E,25,[[["self"]],[T]]],[11,R[47],E,E,25,[[["self"],[T]]]],[11,R[4],E,E,25,[[[U]],[R[3]]]],[11,R[5],E,E,25,[[],[R[3]]]],[11,R[7],E,E,25,[[["self"]],[T]]],[11,R[6],E,E,25,[[["self"]],[T]]],[11,R[8],E,E,25,[[["self"]],[R[9]]]],[11,"into",E,E,26,[[],[U]]],[11,"from",E,E,26,[[[T]],[T]]],[11,R[46],E,E,26,[[["self"]],[T]]],[11,R[47],E,E,26,[[["self"],[T]]]],[11,R[4],E,E,26,[[[U]],[R[3]]]],[11,R[5],E,E,26,[[],[R[3]]]],[11,R[7],E,E,26,[[["self"]],[T]]],[11,R[6],E,E,26,[[["self"]],[T]]],[11,R[8],E,E,26,[[["self"]],[R[9]]]],[11,"into",E,E,27,[[],[U]]],[11,"from",E,E,27,[[[T]],[T]]],[11,R[46],E,E,27,[[["self"]],[T]]],[11,R[47],E,E,27,[[["self"],[T]]]],[11,R[4],E,E,27,[[[U]],[R[3]]]],[11,R[5],E,E,27,[[],[R[3]]]],[11,R[7],E,E,27,[[["self"]],[T]]],[11,R[6],E,E,27,[[["self"]],[T]]],[11,R[8],E,E,27,[[["self"]],[R[9]]]],[11,"into",E,E,28,[[],[U]]],[11,"from",E,E,28,[[[T]],[T]]],[11,R[46],E,E,28,[[["self"]],[T]]],[11,R[47],E,E,28,[[["self"],[T]]]],[11,R[4],E,E,28,[[[U]],[R[3]]]],[11,R[5],E,E,28,[[],[R[3]]]],[11,R[7],E,E,28,[[["self"]],[T]]],[11,R[6],E,E,28,[[["self"]],[T]]],[11,R[8],E,E,28,[[["self"]],[R[9]]]],[11,"into",E,E,29,[[],[U]]],[11,"from",E,E,29,[[[T]],[T]]],[11,R[46],E,E,29,[[["self"]],[T]]],[11,R[47],E,E,29,[[["self"],[T]]]],[11,R[4],E,E,29,[[[U]],[R[3]]]],[11,R[5],E,E,29,[[],[R[3]]]],[11,R[7],E,E,29,[[["self"]],[T]]],[11,R[6],E,E,29,[[["self"]],[T]]],[11,R[8],E,E,29,[[["self"]],[R[9]]]],[11,"into",E,E,30,[[],[U]]],[11,"from",E,E,30,[[[T]],[T]]],[11,R[46],E,E,30,[[["self"]],[T]]],[11,R[47],E,E,30,[[["self"],[T]]]],[11,R[4],E,E,30,[[[U]],[R[3]]]],[11,R[5],E,E,30,[[],[R[3]]]],[11,R[7],E,E,30,[[["self"]],[T]]],[11,R[6],E,E,30,[[["self"]],[T]]],[11,R[8],E,E,30,[[["self"]],[R[9]]]],[11,"into",E,E,31,[[],[U]]],[11,"from",E,E,31,[[[T]],[T]]],[11,R[46],E,E,31,[[["self"]],[T]]],[11,R[47],E,E,31,[[["self"],[T]]]],[11,R[4],E,E,31,[[[U]],[R[3]]]],[11,R[5],E,E,31,[[],[R[3]]]],[11,R[7],E,E,31,[[["self"]],[T]]],[11,R[6],E,E,31,[[["self"]],[T]]],[11,R[8],E,E,31,[[["self"]],[R[9]]]],[11,"into",E,E,32,[[],[U]]],[11,"from",E,E,32,[[[T]],[T]]],[11,R[46],E,E,32,[[["self"]],[T]]],[11,R[47],E,E,32,[[["self"],[T]]]],[11,R[4],E,E,32,[[[U]],[R[3]]]],[11,R[5],E,E,32,[[],[R[3]]]],[11,R[7],E,E,32,[[["self"]],[T]]],[11,R[6],E,E,32,[[["self"]],[T]]],[11,R[8],E,E,32,[[["self"]],[R[9]]]],[11,"into",E,E,33,[[],[U]]],[11,"from",E,E,33,[[[T]],[T]]],[11,R[46],E,E,33,[[["self"]],[T]]],[11,R[47],E,E,33,[[["self"],[T]]]],[11,R[4],E,E,33,[[[U]],[R[3]]]],[11,R[5],E,E,33,[[],[R[3]]]],[11,R[7],E,E,33,[[["self"]],[T]]],[11,R[6],E,E,33,[[["self"]],[T]]],[11,R[8],E,E,33,[[["self"]],[R[9]]]],[11,"into",E,E,34,[[],[U]]],[11,"from",E,E,34,[[[T]],[T]]],[11,R[46],E,E,34,[[["self"]],[T]]],[11,R[47],E,E,34,[[["self"],[T]]]],[11,R[4],E,E,34,[[[U]],[R[3]]]],[11,R[5],E,E,34,[[],[R[3]]]],[11,R[7],E,E,34,[[["self"]],[T]]],[11,R[6],E,E,34,[[["self"]],[T]]],[11,R[8],E,E,34,[[["self"]],[R[9]]]],[11,"into",E,E,35,[[],[U]]],[11,"from",E,E,35,[[[T]],[T]]],[11,R[46],E,E,35,[[["self"]],[T]]],[11,R[47],E,E,35,[[["self"],[T]]]],[11,R[4],E,E,35,[[[U]],[R[3]]]],[11,R[5],E,E,35,[[],[R[3]]]],[11,R[7],E,E,35,[[["self"]],[T]]],[11,R[6],E,E,35,[[["self"]],[T]]],[11,R[8],E,E,35,[[["self"]],[R[9]]]],[11,"into",E,E,36,[[],[U]]],[11,"from",E,E,36,[[[T]],[T]]],[11,R[46],E,E,36,[[["self"]],[T]]],[11,R[47],E,E,36,[[["self"],[T]]]],[11,R[4],E,E,36,[[[U]],[R[3]]]],[11,R[5],E,E,36,[[],[R[3]]]],[11,R[7],E,E,36,[[["self"]],[T]]],[11,R[6],E,E,36,[[["self"]],[T]]],[11,R[8],E,E,36,[[["self"]],[R[9]]]],[11,"into",E,E,37,[[],[U]]],[11,"from",E,E,37,[[[T]],[T]]],[11,R[46],E,E,37,[[["self"]],[T]]],[11,R[47],E,E,37,[[["self"],[T]]]],[11,R[4],E,E,37,[[[U]],[R[3]]]],[11,R[5],E,E,37,[[],[R[3]]]],[11,R[7],E,E,37,[[["self"]],[T]]],[11,R[6],E,E,37,[[["self"]],[T]]],[11,R[8],E,E,37,[[["self"]],[R[9]]]],[11,"into",E,E,38,[[],[U]]],[11,"from",E,E,38,[[[T]],[T]]],[11,R[46],E,E,38,[[["self"]],[T]]],[11,R[47],E,E,38,[[["self"],[T]]]],[11,R[4],E,E,38,[[[U]],[R[3]]]],[11,R[5],E,E,38,[[],[R[3]]]],[11,R[7],E,E,38,[[["self"]],[T]]],[11,R[6],E,E,38,[[["self"]],[T]]],[11,R[8],E,E,38,[[["self"]],[R[9]]]],[11,"into",E,E,39,[[],[U]]],[11,"from",E,E,39,[[[T]],[T]]],[11,R[46],E,E,39,[[["self"]],[T]]],[11,R[47],E,E,39,[[["self"],[T]]]],[11,R[4],E,E,39,[[[U]],[R[3]]]],[11,R[5],E,E,39,[[],[R[3]]]],[11,R[7],E,E,39,[[["self"]],[T]]],[11,R[6],E,E,39,[[["self"]],[T]]],[11,R[8],E,E,39,[[["self"]],[R[9]]]],[11,"into",E,E,40,[[],[U]]],[11,"from",E,E,40,[[[T]],[T]]],[11,R[46],E,E,40,[[["self"]],[T]]],[11,R[47],E,E,40,[[["self"],[T]]]],[11,R[4],E,E,40,[[[U]],[R[3]]]],[11,R[5],E,E,40,[[],[R[3]]]],[11,R[7],E,E,40,[[["self"]],[T]]],[11,R[6],E,E,40,[[["self"]],[T]]],[11,R[8],E,E,40,[[["self"]],[R[9]]]],[11,"into",E,E,41,[[],[U]]],[11,"from",E,E,41,[[[T]],[T]]],[11,R[46],E,E,41,[[["self"]],[T]]],[11,R[47],E,E,41,[[["self"],[T]]]],[11,R[4],E,E,41,[[[U]],[R[3]]]],[11,R[5],E,E,41,[[],[R[3]]]],[11,R[7],E,E,41,[[["self"]],[T]]],[11,R[6],E,E,41,[[["self"]],[T]]],[11,R[8],E,E,41,[[["self"]],[R[9]]]],[11,"into",R[441],E,42,[[],[U]]],[11,"from",E,E,42,[[[T]],[T]]],[11,R[46],E,E,42,[[["self"]],[T]]],[11,R[47],E,E,42,[[["self"],[T]]]],[11,R[4],E,E,42,[[[U]],[R[3]]]],[11,R[5],E,E,42,[[],[R[3]]]],[11,R[7],E,E,42,[[["self"]],[T]]],[11,R[6],E,E,42,[[["self"]],[T]]],[11,R[8],E,E,42,[[["self"]],[R[9]]]],[11,"into",E,E,43,[[],[U]]],[11,"from",E,E,43,[[[T]],[T]]],[11,R[46],E,E,43,[[["self"]],[T]]],[11,R[47],E,E,43,[[["self"],[T]]]],[11,R[4],E,E,43,[[[U]],[R[3]]]],[11,R[5],E,E,43,[[],[R[3]]]],[11,R[7],E,E,43,[[["self"]],[T]]],[11,R[6],E,E,43,[[["self"]],[T]]],[11,R[8],E,E,43,[[["self"]],[R[9]]]],[11,"into",R[442],E,44,[[],[U]]],[11,"from",E,E,44,[[[T]],[T]]],[11,R[4],E,E,44,[[[U]],[R[3]]]],[11,R[5],E,E,44,[[],[R[3]]]],[11,R[7],E,E,44,[[["self"]],[T]]],[11,R[6],E,E,44,[[["self"]],[T]]],[11,R[8],E,E,44,[[["self"]],[R[9]]]],[11,"into",R[381],E,64,[[],[U]]],[11,R[113],E,E,64,[[["self"]],["string"]]],[11,"from",E,E,64,[[[T]],[T]]],[11,R[46],E,E,64,[[["self"]],[T]]],[11,R[47],E,E,64,[[["self"],[T]]]],[11,R[4],E,E,64,[[[U]],[R[3]]]],[11,R[5],E,E,64,[[],[R[3]]]],[11,R[7],E,E,64,[[["self"]],[T]]],[11,R[6],E,E,64,[[["self"]],[T]]],[11,R[8],E,E,64,[[["self"]],[R[9]]]],[11,"into",E,E,65,[[],[U]]],[11,R[113],E,E,65,[[["self"]],["string"]]],[11,"from",E,E,65,[[[T]],[T]]],[11,R[46],E,E,65,[[["self"]],[T]]],[11,R[47],E,E,65,[[["self"],[T]]]],[11,R[4],E,E,65,[[[U]],[R[3]]]],[11,R[5],E,E,65,[[],[R[3]]]],[11,R[7],E,E,65,[[["self"]],[T]]],[11,R[6],E,E,65,[[["self"]],[T]]],[11,R[8],E,E,65,[[["self"]],[R[9]]]],[11,"into",E,E,66,[[],[U]]],[11,"from",E,E,66,[[[T]],[T]]],[11,R[46],E,E,66,[[["self"]],[T]]],[11,R[47],E,E,66,[[["self"],[T]]]],[11,R[4],E,E,66,[[[U]],[R[3]]]],[11,R[5],E,E,66,[[],[R[3]]]],[11,R[7],E,E,66,[[["self"]],[T]]],[11,R[6],E,E,66,[[["self"]],[T]]],[11,R[8],E,E,66,[[["self"]],[R[9]]]],[11,"into",E,E,75,[[],[U]]],[11,R[45],E,E,75,[[],["i"]]],[11,"from",E,E,75,[[[T]],[T]]],[11,R[4],E,E,75,[[[U]],[R[3]]]],[11,R[5],E,E,75,[[],[R[3]]]],[11,R[7],E,E,75,[[["self"]],[T]]],[11,R[6],E,E,75,[[["self"]],[T]]],[11,R[8],E,E,75,[[["self"]],[R[9]]]],[11,"into",E,E,67,[[],[U]]],[11,"from",E,E,67,[[[T]],[T]]],[11,R[46],E,E,67,[[["self"]],[T]]],[11,R[47],E,E,67,[[["self"],[T]]]],[11,R[4],E,E,67,[[[U]],[R[3]]]],[11,R[5],E,E,67,[[],[R[3]]]],[11,R[7],E,E,67,[[["self"]],[T]]],[11,R[6],E,E,67,[[["self"]],[T]]],[11,R[8],E,E,67,[[["self"]],[R[9]]]],[11,"into",E,E,68,[[],[U]]],[11,"from",E,E,68,[[[T]],[T]]],[11,R[46],E,E,68,[[["self"]],[T]]],[11,R[47],E,E,68,[[["self"],[T]]]],[11,R[4],E,E,68,[[[U]],[R[3]]]],[11,R[5],E,E,68,[[],[R[3]]]],[11,R[7],E,E,68,[[["self"]],[T]]],[11,R[6],E,E,68,[[["self"]],[T]]],[11,R[8],E,E,68,[[["self"]],[R[9]]]],[11,"into",E,E,76,[[],[U]]],[11,R[45],E,E,76,[[],["i"]]],[11,"from",E,E,76,[[[T]],[T]]],[11,R[4],E,E,76,[[[U]],[R[3]]]],[11,R[5],E,E,76,[[],[R[3]]]],[11,R[7],E,E,76,[[["self"]],[T]]],[11,R[6],E,E,76,[[["self"]],[T]]],[11,R[8],E,E,76,[[["self"]],[R[9]]]],[11,"into",E,E,69,[[],[U]]],[11,"from",E,E,69,[[[T]],[T]]],[11,R[46],E,E,69,[[["self"]],[T]]],[11,R[47],E,E,69,[[["self"],[T]]]],[11,R[4],E,E,69,[[[U]],[R[3]]]],[11,R[5],E,E,69,[[],[R[3]]]],[11,R[7],E,E,69,[[["self"]],[T]]],[11,R[6],E,E,69,[[["self"]],[T]]],[11,R[8],E,E,69,[[["self"]],[R[9]]]],[11,"into",E,E,47,[[],[U]]],[11,"from",E,E,47,[[[T]],[T]]],[11,R[46],E,E,47,[[["self"]],[T]]],[11,R[47],E,E,47,[[["self"],[T]]]],[11,R[4],E,E,47,[[[U]],[R[3]]]],[11,R[5],E,E,47,[[],[R[3]]]],[11,R[7],E,E,47,[[["self"]],[T]]],[11,R[6],E,E,47,[[["self"]],[T]]],[11,R[8],E,E,47,[[["self"]],[R[9]]]],[11,"into",E,E,48,[[],[U]]],[11,"from",E,E,48,[[[T]],[T]]],[11,R[46],E,E,48,[[["self"]],[T]]],[11,R[47],E,E,48,[[["self"],[T]]]],[11,R[4],E,E,48,[[[U]],[R[3]]]],[11,R[5],E,E,48,[[],[R[3]]]],[11,R[7],E,E,48,[[["self"]],[T]]],[11,R[6],E,E,48,[[["self"]],[T]]],[11,R[8],E,E,48,[[["self"]],[R[9]]]],[11,"into",E,E,49,[[],[U]]],[11,R[113],E,E,49,[[["self"]],["string"]]],[11,"from",E,E,49,[[[T]],[T]]],[11,R[46],E,E,49,[[["self"]],[T]]],[11,R[47],E,E,49,[[["self"],[T]]]],[11,R[4],E,E,49,[[[U]],[R[3]]]],[11,R[5],E,E,49,[[],[R[3]]]],[11,R[7],E,E,49,[[["self"]],[T]]],[11,R[6],E,E,49,[[["self"]],[T]]],[11,R[8],E,E,49,[[["self"]],[R[9]]]],[11,"into",E,E,50,[[],[U]]],[11,"from",E,E,50,[[[T]],[T]]],[11,R[46],E,E,50,[[["self"]],[T]]],[11,R[47],E,E,50,[[["self"],[T]]]],[11,R[4],E,E,50,[[[U]],[R[3]]]],[11,R[5],E,E,50,[[],[R[3]]]],[11,R[7],E,E,50,[[["self"]],[T]]],[11,R[6],E,E,50,[[["self"]],[T]]],[11,R[8],E,E,50,[[["self"]],[R[9]]]],[11,"into",E,E,51,[[],[U]]],[11,"from",E,E,51,[[[T]],[T]]],[11,R[46],E,E,51,[[["self"]],[T]]],[11,R[47],E,E,51,[[["self"],[T]]]],[11,R[4],E,E,51,[[[U]],[R[3]]]],[11,R[5],E,E,51,[[],[R[3]]]],[11,R[7],E,E,51,[[["self"]],[T]]],[11,R[6],E,E,51,[[["self"]],[T]]],[11,R[8],E,E,51,[[["self"]],[R[9]]]],[11,"into",E,E,52,[[],[U]]],[11,"from",E,E,52,[[[T]],[T]]],[11,R[46],E,E,52,[[["self"]],[T]]],[11,R[47],E,E,52,[[["self"],[T]]]],[11,R[4],E,E,52,[[[U]],[R[3]]]],[11,R[5],E,E,52,[[],[R[3]]]],[11,R[7],E,E,52,[[["self"]],[T]]],[11,R[6],E,E,52,[[["self"]],[T]]],[11,R[8],E,E,52,[[["self"]],[R[9]]]],[11,"into",E,E,53,[[],[U]]],[11,"from",E,E,53,[[[T]],[T]]],[11,R[46],E,E,53,[[["self"]],[T]]],[11,R[47],E,E,53,[[["self"],[T]]]],[11,R[4],E,E,53,[[[U]],[R[3]]]],[11,R[5],E,E,53,[[],[R[3]]]],[11,R[7],E,E,53,[[["self"]],[T]]],[11,R[6],E,E,53,[[["self"]],[T]]],[11,R[8],E,E,53,[[["self"]],[R[9]]]],[11,"into",E,E,54,[[],[U]]],[11,"from",E,E,54,[[[T]],[T]]],[11,R[46],E,E,54,[[["self"]],[T]]],[11,R[47],E,E,54,[[["self"],[T]]]],[11,R[4],E,E,54,[[[U]],[R[3]]]],[11,R[5],E,E,54,[[],[R[3]]]],[11,R[7],E,E,54,[[["self"]],[T]]],[11,R[6],E,E,54,[[["self"]],[T]]],[11,R[8],E,E,54,[[["self"]],[R[9]]]],[11,"into",E,E,55,[[],[U]]],[11,"from",E,E,55,[[[T]],[T]]],[11,R[46],E,E,55,[[["self"]],[T]]],[11,R[47],E,E,55,[[["self"],[T]]]],[11,R[4],E,E,55,[[[U]],[R[3]]]],[11,R[5],E,E,55,[[],[R[3]]]],[11,R[7],E,E,55,[[["self"]],[T]]],[11,R[6],E,E,55,[[["self"]],[T]]],[11,R[8],E,E,55,[[["self"]],[R[9]]]],[11,"into",E,E,56,[[],[U]]],[11,"from",E,E,56,[[[T]],[T]]],[11,R[46],E,E,56,[[["self"]],[T]]],[11,R[47],E,E,56,[[["self"],[T]]]],[11,R[4],E,E,56,[[[U]],[R[3]]]],[11,R[5],E,E,56,[[],[R[3]]]],[11,R[7],E,E,56,[[["self"]],[T]]],[11,R[6],E,E,56,[[["self"]],[T]]],[11,R[8],E,E,56,[[["self"]],[R[9]]]],[11,"into",E,E,57,[[],[U]]],[11,"from",E,E,57,[[[T]],[T]]],[11,R[46],E,E,57,[[["self"]],[T]]],[11,R[47],E,E,57,[[["self"],[T]]]],[11,R[4],E,E,57,[[[U]],[R[3]]]],[11,R[5],E,E,57,[[],[R[3]]]],[11,R[7],E,E,57,[[["self"]],[T]]],[11,R[6],E,E,57,[[["self"]],[T]]],[11,R[8],E,E,57,[[["self"]],[R[9]]]],[11,"into",R[443],E,58,[[],[U]]],[11,"from",E,E,58,[[[T]],[T]]],[11,R[46],E,E,58,[[["self"]],[T]]],[11,R[47],E,E,58,[[["self"],[T]]]],[11,R[4],E,E,58,[[[U]],[R[3]]]],[11,R[5],E,E,58,[[],[R[3]]]],[11,R[7],E,E,58,[[["self"]],[T]]],[11,R[6],E,E,58,[[["self"]],[T]]],[11,R[8],E,E,58,[[["self"]],[R[9]]]],[11,"into",E,E,59,[[],[U]]],[11,"from",E,E,59,[[[T]],[T]]],[11,R[46],E,E,59,[[["self"]],[T]]],[11,R[47],E,E,59,[[["self"],[T]]]],[11,R[4],E,E,59,[[[U]],[R[3]]]],[11,R[5],E,E,59,[[],[R[3]]]],[11,R[7],E,E,59,[[["self"]],[T]]],[11,R[6],E,E,59,[[["self"]],[T]]],[11,R[8],E,E,59,[[["self"]],[R[9]]]],[11,"into",R[444],E,60,[[],[U]]],[11,"from",E,E,60,[[[T]],[T]]],[11,R[4],E,E,60,[[[U]],[R[3]]]],[11,R[5],E,E,60,[[],[R[3]]]],[11,R[7],E,E,60,[[["self"]],[T]]],[11,R[6],E,E,60,[[["self"]],[T]]],[11,R[8],E,E,60,[[["self"]],[R[9]]]],[11,"into",R[445],E,61,[[],[U]]],[11,"from",E,E,61,[[[T]],[T]]],[11,R[46],E,E,61,[[["self"]],[T]]],[11,R[47],E,E,61,[[["self"],[T]]]],[11,R[4],E,E,61,[[[U]],[R[3]]]],[11,R[5],E,E,61,[[],[R[3]]]],[11,R[7],E,E,61,[[["self"]],[T]]],[11,R[6],E,E,61,[[["self"]],[T]]],[11,R[8],E,E,61,[[["self"]],[R[9]]]],[11,"into",E,E,62,[[],[U]]],[11,"from",E,E,62,[[[T]],[T]]],[11,R[46],E,E,62,[[["self"]],[T]]],[11,R[47],E,E,62,[[["self"],[T]]]],[11,R[4],E,E,62,[[[U]],[R[3]]]],[11,R[5],E,E,62,[[],[R[3]]]],[11,R[7],E,E,62,[[["self"]],[T]]],[11,R[6],E,E,62,[[["self"]],[T]]],[11,R[8],E,E,62,[[["self"]],[R[9]]]],[11,"into",R[446],E,72,[[],[U]]],[11,"from",E,E,72,[[[T]],[T]]],[11,R[46],E,E,72,[[["self"]],[T]]],[11,R[47],E,E,72,[[["self"],[T]]]],[11,R[4],E,E,72,[[[U]],[R[3]]]],[11,R[5],E,E,72,[[],[R[3]]]],[11,R[7],E,E,72,[[["self"]],[T]]],[11,R[6],E,E,72,[[["self"]],[T]]],[11,R[8],E,E,72,[[["self"]],[R[9]]]],[11,"into",E,E,74,[[],[U]]],[11,R[45],E,E,74,[[],["i"]]],[11,"from",E,E,74,[[[T]],[T]]],[11,R[4],E,E,74,[[[U]],[R[3]]]],[11,R[5],E,E,74,[[],[R[3]]]],[11,R[7],E,E,74,[[["self"]],[T]]],[11,R[6],E,E,74,[[["self"]],[T]]],[11,R[8],E,E,74,[[["self"]],[R[9]]]],[11,"into",E,E,73,[[],[U]]],[11,"from",E,E,73,[[[T]],[T]]],[11,R[46],E,E,73,[[["self"]],[T]]],[11,R[47],E,E,73,[[["self"],[T]]]],[11,R[4],E,E,73,[[[U]],[R[3]]]],[11,R[5],E,E,73,[[],[R[3]]]],[11,R[7],E,E,73,[[["self"]],[T]]],[11,R[6],E,E,73,[[["self"]],[T]]],[11,R[8],E,E,73,[[["self"]],[R[9]]]],[11,"as_ref",R[443],E,59,[[["self"]]]],[11,R[83],R[441],E,42,[[],[R[364]]]],[11,R[83],R[445],E,61,[[],[R[393]]]],[11,R[83],R[381],E,67,[[],[R[411]]]],[11,R[83],E,E,69,[[],[R[422]]]],[11,R[83],R[370],E,70,[[],[R[364]]]],[11,"clone",R[441],E,42,[[["self"]],[R[364]]]],[11,"clone",E,E,43,[[["self"]],["parser"]]],[11,"clone",R[347],E,46,[[["self"]],["error"]]],[11,"clone",E,E,23,[[["self"]],[R[401]]]],[11,"clone",E,E,1,[[["self"]],["span"]]],[11,"clone",E,E,2,[[["self"]],[R[368]]]],[11,"clone",E,E,3,[[["self"]],[R[365]]]],[11,"clone",E,E,4,[[["self"]],["comment"]]],[11,"clone",E,E,24,[[["self"]],["ast"]]],[11,"clone",E,E,5,[[["self"]],[R[447]]]],[11,"clone",E,E,6,[[["self"]],["concat"]]],[11,"clone",E,E,7,[[["self"]],[R[404]]]],[11,"clone",E,E,25,[[["self"]],[R[454]]]],[11,"clone",E,E,26,[[["self"]],[R[455]]]],[11,"clone",E,E,27,[[["self"]],[R[456]]]],[11,"clone",E,E,28,[[["self"]],["class"]]],[11,"clone",E,E,8,[[["self"]],[R[457]]]],[11,"clone",E,E,29,[[["self"]],[R[458]]]],[11,"clone",E,E,9,[[["self"]],[R[459]]]],[11,"clone",E,E,30,[[["self"]],[R[369]]]],[11,"clone",E,E,10,[[["self"]],[R[409]]]],[11,"clone",E,E,31,[[["self"]],[R[460]]]],[11,"clone",E,E,32,[[["self"]],[R[461]]]],[11,"clone",E,E,11,[[["self"]],[R[462]]]],[11,"clone",E,E,33,[[["self"]],[R[463]]]],[11,"clone",E,E,34,[[["self"]],[R[366]]]],[11,"clone",E,E,12,[[["self"]],[R[464]]]],[11,"clone",E,E,13,[[["self"]],[R[448]]]],[11,"clone",E,E,14,[[["self"]],[R[367]]]],[11,"clone",E,E,35,[[["self"]],[R[465]]]],[11,"clone",E,E,15,[[["self"]],[R[466]]]],[11,"clone",E,E,36,[[["self"]],[R[467]]]],[11,"clone",E,E,16,[[["self"]],[R[405]]]],[11,"clone",E,E,17,[[["self"]],[R[468]]]],[11,"clone",E,E,37,[[["self"]],[R[452]]]],[11,"clone",E,E,38,[[["self"]],[R[453]]]],[11,"clone",E,E,18,[[["self"]],["group"]]],[11,"clone",E,E,39,[[["self"]],[R[451]]]],[11,"clone",E,E,19,[[["self"]],[R[469]]]],[11,"clone",E,E,20,[[["self"]],[R[470]]]],[11,"clone",E,E,21,[[["self"]],["flags"]]],[11,"clone",E,E,22,[[["self"]],[R[449]]]],[11,"clone",E,E,40,[[["self"]],[R[471]]]],[11,"clone",E,E,41,[[["self"]],["flag"]]],[11,"clone",R[370],E,0,[[["self"]],["error"]]],[11,"clone",R[443],E,58,[[["self"]],[R[390]]]],[11,"clone",E,E,59,[[["self"]],[R[404]]]],[11,"clone",R[445],E,61,[[["self"]],[R[393]]]],[11,"clone",E,E,62,[[["self"]],[R[394]]]],[11,"clone",R[381],E,64,[[["self"]],["error"]]],[11,"clone",E,E,49,[[["self"]],[R[401]]]],[11,"clone",E,E,65,[[["self"]],["hir"]]],[11,"clone",E,E,50,[[["self"]],["hirkind"]]],[11,"clone",E,E,51,[[["self"]],[R[404]]]],[11,"clone",E,E,52,[[["self"]],["class"]]],[11,"clone",E,E,66,[[["self"]],[R[409]]]],[11,"clone",E,E,67,[[["self"]],[R[411]]]],[11,"clone",E,E,68,[[["self"]],[R[413]]]],[11,"clone",E,E,69,[[["self"]],[R[422]]]],[11,"clone",E,E,53,[[["self"]],["anchor"]]],[11,"clone",E,E,54,[[["self"]],[R[450]]]],[11,"clone",E,E,47,[[["self"]],["group"]]],[11,"clone",E,E,55,[[["self"]],[R[451]]]],[11,"clone",E,E,48,[[["self"]],[R[405]]]],[11,"clone",E,E,56,[[["self"]],[R[452]]]],[11,"clone",E,E,57,[[["self"]],[R[453]]]],[11,"clone",R[370],E,70,[[["self"]],[R[364]]]],[11,"clone",E,E,71,[[["self"]],["parser"]]],[11,"clone",R[446],E,73,[[["self"]],[R[472]]]],[11,"clone",E,E,72,[[["self"]],[R[473]]]],[11,R[77],R[347],E,1,[[["self"],["span"]],[[R[23],[R[50]]],[R[50]]]]],[11,R[77],E,E,2,[[["self"],[R[368]]],[[R[23],[R[50]]],[R[50]]]]],[11,R[77],R[443],E,59,[[["self"],[R[404]]],[[R[50]],[R[23],[R[50]]]]]],[11,R[77],R[381],E,67,[[["self"],[R[411]]],[[R[50]],[R[23],[R[50]]]]]],[11,"lt",E,E,67,[[["self"],[R[411]]],["bool"]]],[11,"le",E,E,67,[[["self"],[R[411]]],["bool"]]],[11,"gt",E,E,67,[[["self"],[R[411]]],["bool"]]],[11,"ge",E,E,67,[[["self"],[R[411]]],["bool"]]],[11,R[77],E,E,69,[[["self"],[R[422]]],[[R[50]],[R[23],[R[50]]]]]],[11,"lt",E,E,69,[[["self"],[R[422]]],["bool"]]],[11,"le",E,E,69,[[["self"],[R[422]]],["bool"]]],[11,"gt",E,E,69,[[["self"],[R[422]]],["bool"]]],[11,"ge",E,E,69,[[["self"],[R[422]]],["bool"]]],[11,"cmp",R[347],E,1,[[["self"],["span"]],[R[50]]]],[11,"cmp",E,E,2,[[["self"],[R[368]]],[R[50]]]],[11,"cmp",R[443],E,59,[[["self"],[R[404]]],[R[50]]]],[11,"cmp",R[381],E,67,[[["self"],[R[411]]],[R[50]]]],[11,"cmp",E,E,69,[[["self"],[R[422]]],[R[50]]]],[11,"eq",R[347],E,46,[[["self"],["error"]],["bool"]]],[11,"ne",E,E,46,[[["self"],["error"]],["bool"]]],[11,"eq",E,E,23,[[["self"],[R[401]]],["bool"]]],[11,"ne",E,E,23,[[["self"],[R[401]]],["bool"]]],[11,"eq",E,E,1,[[["self"],["span"]],["bool"]]],[11,"ne",E,E,1,[[["self"],["span"]],["bool"]]],[11,"eq",E,E,2,[[["self"],[R[368]]],["bool"]]],[11,"ne",E,E,2,[[["self"],[R[368]]],["bool"]]],[11,"eq",E,E,3,[[["self"],[R[365]]],["bool"]]],[11,"ne",E,E,3,[[["self"],[R[365]]],["bool"]]],[11,"eq",E,E,4,[[["self"],["comment"]],["bool"]]],[11,"ne",E,E,4,[[["self"],["comment"]],["bool"]]],[11,"eq",E,E,24,[[["self"],["ast"]],["bool"]]],[11,"ne",E,E,24,[[["self"],["ast"]],["bool"]]],[11,"eq",E,E,5,[[["self"],[R[447]]],["bool"]]],[11,"ne",E,E,5,[[["self"],[R[447]]],["bool"]]],[11,"eq",E,E,6,[[["self"],["concat"]],["bool"]]],[11,"ne",E,E,6,[[["self"],["concat"]],["bool"]]],[11,"eq",E,E,7,[[["self"],[R[404]]],["bool"]]],[11,"ne",E,E,7,[[["self"],[R[404]]],["bool"]]],[11,"eq",E,E,25,[[["self"],[R[454]]],["bool"]]],[11,"ne",E,E,25,[[["self"],[R[454]]],["bool"]]],[11,"eq",E,E,26,[[["self"],[R[455]]],["bool"]]],[11,"eq",E,E,27,[[["self"],[R[456]]],["bool"]]],[11,"eq",E,E,28,[[["self"],["class"]],["bool"]]],[11,"ne",E,E,28,[[["self"],["class"]],["bool"]]],[11,"eq",E,E,8,[[["self"],[R[457]]],["bool"]]],[11,"ne",E,E,8,[[["self"],[R[457]]],["bool"]]],[11,"eq",E,E,29,[[["self"],[R[458]]],["bool"]]],[11,"eq",E,E,9,[[["self"],[R[459]]],["bool"]]],[11,"ne",E,E,9,[[["self"],[R[459]]],["bool"]]],[11,"eq",E,E,30,[[["self"],[R[369]]],["bool"]]],[11,"eq",E,E,10,[[["self"],[R[409]]],["bool"]]],[11,"ne",E,E,10,[[["self"],[R[409]]],["bool"]]],[11,"eq",E,E,31,[[["self"],[R[460]]],["bool"]]],[11,"ne",E,E,31,[[["self"],[R[460]]],["bool"]]],[11,"eq",E,E,32,[[["self"],[R[461]]],["bool"]]],[11,"eq",E,E,11,[[["self"],[R[462]]],["bool"]]],[11,"ne",E,E,11,[[["self"],[R[462]]],["bool"]]],[11,"eq",E,E,33,[[["self"],[R[463]]],["bool"]]],[11,"ne",E,E,33,[[["self"],[R[463]]],["bool"]]],[11,"eq",E,E,34,[[["self"],[R[366]]],["bool"]]],[11,"ne",E,E,34,[[["self"],[R[366]]],["bool"]]],[11,"eq",E,E,12,[[["self"],[R[464]]],["bool"]]],[11,"ne",E,E,12,[[["self"],[R[464]]],["bool"]]],[11,"eq",E,E,13,[[["self"],[R[448]]],["bool"]]],[11,"ne",E,E,13,[[["self"],[R[448]]],["bool"]]],[11,"eq",E,E,14,[[["self"],[R[367]]],["bool"]]],[11,"ne",E,E,14,[[["self"],[R[367]]],["bool"]]],[11,"eq",E,E,35,[[["self"],[R[465]]],["bool"]]],[11,"eq",E,E,15,[[["self"],[R[466]]],["bool"]]],[11,"ne",E,E,15,[[["self"],[R[466]]],["bool"]]],[11,"eq",E,E,36,[[["self"],[R[467]]],["bool"]]],[11,"eq",E,E,16,[[["self"],[R[405]]],["bool"]]],[11,"ne",E,E,16,[[["self"],[R[405]]],["bool"]]],[11,"eq",E,E,17,[[["self"],[R[468]]],["bool"]]],[11,"ne",E,E,17,[[["self"],[R[468]]],["bool"]]],[11,"eq",E,E,37,[[["self"],[R[452]]],["bool"]]],[11,"ne",E,E,37,[[["self"],[R[452]]],["bool"]]],[11,"eq",E,E,38,[[["self"],[R[453]]],["bool"]]],[11,"ne",E,E,38,[[["self"],[R[453]]],["bool"]]],[11,"eq",E,E,18,[[["self"],["group"]],["bool"]]],[11,"ne",E,E,18,[[["self"],["group"]],["bool"]]],[11,"eq",E,E,39,[[["self"],[R[451]]],["bool"]]],[11,"ne",E,E,39,[[["self"],[R[451]]],["bool"]]],[11,"eq",E,E,19,[[["self"],[R[469]]],["bool"]]],[11,"ne",E,E,19,[[["self"],[R[469]]],["bool"]]],[11,"eq",E,E,20,[[["self"],[R[470]]],["bool"]]],[11,"ne",E,E,20,[[["self"],[R[470]]],["bool"]]],[11,"eq",E,E,21,[[["self"],["flags"]],["bool"]]],[11,"ne",E,E,21,[[["self"],["flags"]],["bool"]]],[11,"eq",E,E,22,[[["self"],[R[449]]],["bool"]]],[11,"ne",E,E,22,[[["self"],[R[449]]],["bool"]]],[11,"eq",E,E,40,[[["self"],[R[471]]],["bool"]]],[11,"ne",E,E,40,[[["self"],[R[471]]],["bool"]]],[11,"eq",E,E,41,[[["self"],["flag"]],["bool"]]],[11,"eq",R[370],E,0,[[["self"],["error"]],["bool"]]],[11,"ne",E,E,0,[[["self"],["error"]],["bool"]]],[11,"eq",R[443],E,58,[[["self"],[R[390]]],["bool"]]],[11,"ne",E,E,58,[[["self"],[R[390]]],["bool"]]],[11,"eq",E,E,59,[[["self"],[R[404]]],["bool"]]],[11,"eq",R[381],E,64,[[["self"],["error"]],["bool"]]],[11,"ne",E,E,64,[[["self"],["error"]],["bool"]]],[11,"eq",E,E,49,[[["self"],[R[401]]],["bool"]]],[11,"eq",E,E,65,[[["self"],["hir"]],["bool"]]],[11,"ne",E,E,65,[[["self"],["hir"]],["bool"]]],[11,"eq",E,E,50,[[["self"],["hirkind"]],["bool"]]],[11,"ne",E,E,50,[[["self"],["hirkind"]],["bool"]]],[11,"eq",E,E,51,[[["self"],[R[404]]],["bool"]]],[11,"ne",E,E,51,[[["self"],[R[404]]],["bool"]]],[11,"eq",E,E,52,[[["self"],["class"]],["bool"]]],[11,"ne",E,E,52,[[["self"],["class"]],["bool"]]],[11,"eq",E,E,66,[[["self"],[R[409]]],["bool"]]],[11,"ne",E,E,66,[[["self"],[R[409]]],["bool"]]],[11,"eq",E,E,67,[[["self"],[R[411]]],["bool"]]],[11,"ne",E,E,67,[[["self"],[R[411]]],["bool"]]],[11,"eq",E,E,68,[[["self"],[R[413]]],["bool"]]],[11,"ne",E,E,68,[[["self"],[R[413]]],["bool"]]],[11,"eq",E,E,69,[[["self"],[R[422]]],["bool"]]],[11,"ne",E,E,69,[[["self"],[R[422]]],["bool"]]],[11,"eq",E,E,53,[[["self"],["anchor"]],["bool"]]],[11,"eq",E,E,54,[[["self"],[R[450]]],["bool"]]],[11,"eq",E,E,47,[[["self"],["group"]],["bool"]]],[11,"ne",E,E,47,[[["self"],["group"]],["bool"]]],[11,"eq",E,E,55,[[["self"],[R[451]]],["bool"]]],[11,"ne",E,E,55,[[["self"],[R[451]]],["bool"]]],[11,"eq",E,E,48,[[["self"],[R[405]]],["bool"]]],[11,"ne",E,E,48,[[["self"],[R[405]]],["bool"]]],[11,"eq",E,E,56,[[["self"],[R[452]]],["bool"]]],[11,"ne",E,E,56,[[["self"],[R[452]]],["bool"]]],[11,"eq",E,E,57,[[["self"],[R[453]]],["bool"]]],[11,"ne",E,E,57,[[["self"],[R[453]]],["bool"]]],[11,"eq",R[446],E,73,[[["self"],[R[472]]],["bool"]]],[11,"ne",E,E,73,[[["self"],[R[472]]],["bool"]]],[11,"eq",E,E,72,[[["self"],[R[473]]],["bool"]]],[11,"ne",E,E,72,[[["self"],[R[473]]],["bool"]]],[11,"drop",R[347],E,24,[[["self"]]]],[11,"drop",E,E,33,[[["self"]]]],[11,"drop",R[381],E,65,[[["self"]]]],[11,"from",R[370],E,0,[[["error"]],["error"]]],[11,"from",E,E,0,[[["error"]],["error"]]],[11,"next",R[381],E,75,[[["self"]],[[R[23],[R[411]]],[R[411]]]]],[11,"next",E,E,76,[[["self"]],[[R[23],[R[422]]],[R[422]]]]],[11,"next",R[446],E,74,[[["self"]],[R[23]]]],[11,"deref",R[443],E,59,[[["self"]],["vec"]]],[11,R[17],E,E,59,[[["self"]],["vec"]]],[11,"fmt",R[441],E,42,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,43,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[442],E,44,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[347],E,46,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,23,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,1,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,2,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,3,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,4,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,24,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,5,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,6,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,7,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,25,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,26,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,27,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,28,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,8,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,29,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,9,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,30,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,10,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,31,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,32,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,11,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,33,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,34,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,12,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,13,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,14,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,35,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,15,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,36,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,16,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,17,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,37,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,38,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,18,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,39,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,19,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,20,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,21,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,22,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,40,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,41,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[370],E,0,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[443],E,58,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,59,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[444],E,60,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[445],E,61,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,62,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[381],E,64,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,49,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,65,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,50,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,51,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,52,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,66,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,75,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,67,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,68,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,76,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,69,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,53,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,54,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,47,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,55,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,48,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,56,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,57,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[370],E,70,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,71,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[446],E,73,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,72,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[347],E,46,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,23,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,24,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[370],E,0,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[381],E,64,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,49,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,65,[[["self"],[R[10]]],[R[3]]]],[11,R[157],R[347],E,46,[[["self"]],["str"]]],[11,R[157],R[370],E,0,[[["self"]],["str"]]],[11,R[157],R[381],E,64,[[["self"]],["str"]]],[11,"start",R[347],R[474],45,[[["self"]]]],[11,R[397],E,R[475],45,[[["self"],["ast"]],[R[3]]]],[11,R[398],E,R[476],45,[[["self"],["ast"]],[R[3]]]],[11,R[399],E,R[477],45,[[["self"]],[R[3]]]],[11,R[478],E,R[479],45,[[["self"],[R[366]]],[R[3]]]],[11,R[480],E,R[481],45,[[["self"],[R[366]]],[R[3]]]],[11,R[482],E,R[483],45,[[["self"],[R[367]]],[R[3]]]],[11,R[484],E,R[485],45,[[["self"],[R[367]]],[R[3]]]],[11,R[486],E,R[487],45,[[["self"],[R[367]]],[R[3]]]],[11,"start",R[381],R[488],63,[[["self"]]]],[11,R[397],E,R[489],63,[[["self"],["hir"]],[R[3]]]],[11,R[398],E,R[490],63,[[["self"],["hir"]],[R[3]]]],[11,R[399],E,R[491],63,[[["self"]],[R[3]]]]],"p":[[4,"Error"],[3,"Span"],[3,"Position"],[3,R[492]],[3,"Comment"],[3,R[354]],[3,"Concat"],[3,R[389]],[3,R[493]],[3,R[494]],[3,R[371]],[3,R[495]],[3,R[496]],[3,R[497]],[3,R[498]],[3,R[350]],[3,R[352]],[3,R[499]],[3,"Group"],[3,R[361]],[3,"SetFlags"],[3,"Flags"],[3,R[500]],[4,R[372]],[4,"Ast"],[4,R[501]],[4,R[502]],[4,R[503]],[4,"Class"],[4,R[504]],[4,R[505]],[4,R[506]],[4,R[507]],[4,"ClassSet"],[4,R[508]],[4,R[509]],[4,R[510]],[4,R[382]],[4,R[387]],[4,R[378]],[4,R[511]],[4,"Flag"],[3,R[362]],[3,"Parser"],[3,"Printer"],[8,"Visitor"],[3,"Error"],[3,"Group"],[3,R[352]],[4,R[372]],[4,"HirKind"],[4,R[389]],[4,"Class"],[4,"Anchor"],[4,R[373]],[4,R[378]],[4,R[382]],[4,R[387]],[3,"Literals"],[3,R[389]],[3,"Printer"],[3,R[512]],[3,R[513]],[8,"Visitor"],[3,"Error"],[3,"Hir"],[3,R[371]],[3,R[514]],[3,R[515]],[3,R[516]],[3,R[362]],[3,"Parser"],[3,R[517]],[4,R[518]],[3,R[519]],[3,R[520]],[3,R[521]]]};
searchIndex["rgb"]={"doc":"Basic struct for `RGB` and `RGBA` pixels. Packed, with red…","i":[[3,"RGB","rgb","The RGB pixel",N,N],[12,"r",E,"Red",0,N],[12,"g",E,"Green",0,N],[12,"b",E,"Blue",0,N],[3,"RGBA",E,"The RGBA pixel",N,N],[12,"r",E,"Red",1,N],[12,"g",E,"Green",1,N],[12,"b",E,"Blue",1,N],[12,"a",E,"Alpha",1,N],[11,"new",E,R[66],0,[[[T]],["self"]]],[11,"iter",E,R[86],0,[[["self"]],[["iter"],["cloned",["iter"]]]]],[11,"alpha",E,E,0,[[["self"],[T]],["rgba"]]],[11,R[67],E,E,0,[[["self"],["a"]],["rgba"]]],[11,"new",E,R[66],1,[[[T]],["self"]]],[11,R[67],E,R[66],1,[[["a"],[T]],["self"]]],[11,"iter",E,R[87],1,[[["self"]],[["iter"],["cloned",["iter"]]]]],[11,"rgb",E,R[88],1,[[["self"]],["rgb"]]],[11,"rgb_mut",E,R[89],1,[[["self"]],["rgb"]]],[11,"map_rgb",E,R[90],1,[[["self"],["f"]],["rgba"]]],[11,"alpha",E,R[91],1,[[["self"],["a"]],["self"]]],[11,R[72],E,R[92],1,[[["self"],["f"]],["rgba"]]],[0,"alt",E,"BGR/BGRA alernative layouts & grayscale",N,N],[3,"BGR",R[76],"RGB in reverse byte order",N,N],[12,"b",E,R[68],2,N],[12,"g",E,"Green",2,N],[12,"r",E,"Red last",2,N],[3,"BGRA",E,"BGR+A",N,N],[12,"b",E,R[68],3,N],[12,"g",E,"Green",3,N],[12,"r",E,"Red",3,N],[12,"a",E,"Alpha last",3,N],[3,"Gray",E,"Grayscale. Use `.0` or `*` (deref) to access the value.",N,N],[12,"0",E,R[69],4,N],[3,R[93],E,"Grayscale with alpha. Use `.0`/`.1` to access.",N,N],[12,"0",E,R[69],5,N],[12,"1",E,"alpha",5,N],[6,"BGR8",E,E,N,N],[6,"BGR16",E,R[70],N,N],[6,"BGRA8",E,E,N,N],[6,"BGRA16",E,R[70],N,N],[6,"GRAY8",E,E,N,N],[6,"GRAY16",E,R[71],N,N],[6,"GRAYA8",E,E,N,N],[6,"GRAYA16",E,R[71],N,N],[11,"gray",E,"Copy `Gray` component out of the `GrayAlpha` struct",5,[[["self"]],["gray"]]],[11,"gray_mut",E,"Provide a mutable view of only `Gray` component (leaving…",5,[[["self"]],["gray"]]],[11,"alpha",E,"Create a new `GrayAlpha` with the new alpha value, but…",5,[[["self"],["a"]],["self"]]],[11,R[72],E,"Create a new `GrayAlpha` with a new alpha value created by…",5,[[["self"],["f"]],[R[73]]]],[11,"map_gray",E,"Create new `GrayAlpha` with the same alpha value, but…",5,[[["self"],["f"]],[R[73]]]],[6,"RGB8","rgb","8-bit RGB",N,N],[6,"RGB16",E,"16-bit RGB in machine's native endian",N,N],[6,"RGBA8",E,"8-bit RGBA, alpha is last. 0 = transparent, 255 = opaque.",N,N],[6,"RGBA16",E,"16-bit RGB in machine's native endian. 0 = transparent,…",N,N],[8,R[94],E,"Casts a slice of bytes into a slice of pixels, e.g. `[u8]`…",N,N],[10,"as_pixels",E,"Reinterpret the slice as a read-only/shared slice of…",6,[[["self"]]]],[10,"as_pixels_mut",E,"Reinterpret the slice as a mutable/exclusive slice of…",6,[[["self"]]]],[8,R[95],E,"Cast a slice of component values (bytes) as a slice of…",N,N],[10,"as_rgb",E,"Reinterpert slice as RGB pixels",7,[[["self"]]]],[10,"as_rgba",E,"Reinterpert slice as RGBA pixels",7,[[["self"]]]],[10,"as_rgb_mut",E,"Reinterpert mutable slice as RGB pixels",7,[[["self"]]]],[10,"as_rgba_mut",E,"Reinterpert mutable slice as RGBA pixels",7,[[["self"]]]],[10,"as_bgr",E,"Reinterpert slice as reverse-order BGR pixels",7,[[["self"]]]],[10,"as_bgra",E,"Reinterpert slice as reverse-order BGRA pixels",7,[[["self"]]]],[10,"as_bgr_mut",E,"Reinterpert ntable slice as reverse-order BGR pixels",7,[[["self"]]]],[10,"as_bgra_mut",E,"Reinterpert mutable slice as reverse-order BGRA pixels",7,[[["self"]]]],[8,R[96],E,"Casting the struct to slices of its components",N,N],[10,R[44],E,"The components interpreted as an array, e.g. one `RGB`…",8,[[["self"]]]],[10,R[74],E,E,8,[[["self"]]]],[8,R[97],E,"Casting a slice of `RGB/A` values to a slice of `u8`",N,N],[11,R[84],E,R[75],9,[[["self"]]]],[11,R[85],E,R[75],9,[[["self"]]]],[8,R[98],E,"Applying operation to every component",N,N],[10,"map",E,"Convenience function (equivalent of…",10,[[["self"],["callback"]],["destpixel"]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[4],E,E,0,[[[U]],[R[3]]]],[11,"into",E,E,0,[[],[U]]],[11,R[5],E,E,0,[[],[R[3]]]],[11,R[6],E,E,0,[[["self"]],[T]]],[11,R[7],E,E,0,[[["self"]],[T]]],[11,R[8],E,E,0,[[["self"]],[R[9]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[4],E,E,1,[[[U]],[R[3]]]],[11,"into",E,E,1,[[],[U]]],[11,R[5],E,E,1,[[],[R[3]]]],[11,R[6],E,E,1,[[["self"]],[T]]],[11,R[7],E,E,1,[[["self"]],[T]]],[11,R[8],E,E,1,[[["self"]],[R[9]]]],[11,"from",R[76],E,2,[[[T]],[T]]],[11,R[4],E,E,2,[[[U]],[R[3]]]],[11,"into",E,E,2,[[],[U]]],[11,R[5],E,E,2,[[],[R[3]]]],[11,R[6],E,E,2,[[["self"]],[T]]],[11,R[7],E,E,2,[[["self"]],[T]]],[11,R[8],E,E,2,[[["self"]],[R[9]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[4],E,E,3,[[[U]],[R[3]]]],[11,"into",E,E,3,[[],[U]]],[11,R[5],E,E,3,[[],[R[3]]]],[11,R[6],E,E,3,[[["self"]],[T]]],[11,R[7],E,E,3,[[["self"]],[T]]],[11,R[8],E,E,3,[[["self"]],[R[9]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[4],E,E,4,[[[U]],[R[3]]]],[11,"into",E,E,4,[[],[U]]],[11,R[5],E,E,4,[[],[R[3]]]],[11,R[6],E,E,4,[[["self"]],[T]]],[11,R[7],E,E,4,[[["self"]],[T]]],[11,R[8],E,E,4,[[["self"]],[R[9]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[4],E,E,5,[[[U]],[R[3]]]],[11,"into",E,E,5,[[],[U]]],[11,R[5],E,E,5,[[],[R[3]]]],[11,R[6],E,E,5,[[["self"]],[T]]],[11,R[7],E,E,5,[[["self"]],[T]]],[11,R[8],E,E,5,[[["self"]],[R[9]]]],[11,R[44],"rgb",E,0,[[["self"]]]],[11,R[74],E,E,0,[[["self"]]]],[11,R[44],R[76],E,2,[[["self"]]]],[11,R[74],E,E,2,[[["self"]]]],[11,R[44],"rgb",E,1,[[["self"]]]],[11,R[74],E,E,1,[[["self"]]]],[11,R[44],R[76],E,3,[[["self"]]]],[11,R[74],E,E,3,[[["self"]]]],[11,R[44],E,E,5,[[["self"]]]],[11,R[74],E,E,5,[[["self"]]]],[11,R[44],E,E,4,[[["self"]]]],[11,R[74],E,E,4,[[["self"]]]],[11,"map","rgb",E,0,[[["self"],["f"]],["rgb"]]],[11,"map",R[76],E,2,[[["self"],["f"]],["bgr"]]],[11,"map","rgb",E,1,[[["self"],["f"]],["rgba"]]],[11,"map",R[76],E,3,[[["self"],["f"]],["bgra"]]],[11,"map",E,E,5,[[["self"],["f"]],[R[73]]]],[11,"deref",E,E,4,[[["self"]],[T]]],[11,"from","rgb",E,0,[[],["self"]]],[11,"from",E,E,1,[[],["self"]]],[11,"from",R[76],E,2,[[],["self"]]],[11,"from",E,E,3,[[],["self"]]],[11,"from","rgb",E,0,[[],["self"]]],[11,"from",E,E,1,[[],["self"]]],[11,"from",R[76],E,2,[[],["self"]]],[11,"from",E,E,3,[[],["self"]]],[11,"from","rgb",E,0,[[["rgb",["u8"]],["u8"]],["self"]]],[11,"from",E,E,0,[[["u16"],["rgb",["u16"]]],["self"]]],[11,"from",E,E,0,[[["rgb",["u8"]],["u8"]],["self"]]],[11,"from",E,E,0,[[["rgb",["u8"]],["u8"]],["self"]]],[11,"from",E,E,0,[[["u16"],["rgb",["u16"]]],["self"]]],[11,"from",E,E,0,[[["u16"],["rgb",["u16"]]],["self"]]],[11,"from",E,E,0,[[["rgb",["i16"]],["i16"]],["self"]]],[11,"from",E,E,0,[[["rgb",["i16"]],["i16"]],["self"]]],[11,"from",E,E,0,[[["rgb",["i32"]],["i32"]],["self"]]],[11,"from",E,E,0,[[["f32"],["rgb",["f32"]]],["self"]]],[11,"from",E,E,1,[[["u16"],["rgba",["u16"]]],["self"]]],[11,"from",E,E,1,[[["rgba",["u8"]],["u8"]],["self"]]],[11,"from",E,E,1,[[["rgba",["u8"]],["u8"]],["self"]]],[11,"from",E,E,1,[[["u16"],["rgba",["u16"]]],["self"]]],[11,"from",E,E,1,[[["u16"],["rgba",["u16"]]],["self"]]],[11,"from",E,E,1,[[["rgba",["i16"]],["i16"]],["self"]]],[11,"from",E,E,1,[[["rgba",["i16"]],["i16"]],["self"]]],[11,"from",E,E,1,[[["rgba",["i32"]],["i32"]],["self"]]],[11,"from",E,E,1,[[["f32"],["rgba",["f32"]]],["self"]]],[11,"from",E,E,0,[[["gray"]],["self"]]],[11,"from",E,E,1,[[[R[73]]],["self"]]],[11,"from",R[76],E,2,[[["rgb"]],["self"]]],[11,"from",E,E,3,[[["rgba"]],["self"]]],[11,"from","rgb",E,0,[[["bgr"]],["self"]]],[11,"from",E,E,1,[[["bgra"]],["self"]]],[11,"from",E,E,1,[[["rgb"]],["self"]]],[11,"from",R[76],E,3,[[["rgb"]],["self"]]],[11,"from","rgb",E,1,[[["rgb"]],["self"]]],[11,"from",R[76],E,3,[[["rgb"]],["self"]]],[11,"from",E,E,3,[[["bgr"]],["self"]]],[11,"from","rgb",E,1,[[["bgr"]],["self"]]],[11,"from",R[76],E,3,[[["bgr"]],["self"]]],[11,"from","rgb",E,1,[[["bgr"]],["self"]]],[11,"from",R[76],E,4,[[[T]],["self"]]],[11,"from",E,E,5,[[["gray"]],["self"]]],[11,"from",E,E,5,[[["gray"]],["self"]]],[11,"eq",E,E,2,[[["self"],["bgr"]],["bool"]]],[11,"ne",E,E,2,[[["self"],["bgr"]],["bool"]]],[11,"eq",E,E,3,[[["self"],["bgra"]],["bool"]]],[11,"ne",E,E,3,[[["self"],["bgra"]],["bool"]]],[11,"eq",E,E,4,[[["self"],["gray"]],["bool"]]],[11,"ne",E,E,4,[[["self"],["gray"]],["bool"]]],[11,"eq",E,E,5,[[["self"],[R[73]]],["bool"]]],[11,"ne",E,E,5,[[["self"],[R[73]]],["bool"]]],[11,"eq","rgb",E,0,[[["self"],["rgb"]],["bool"]]],[11,"ne",E,E,0,[[["self"],["rgb"]],["bool"]]],[11,"eq",E,E,1,[[["self"],["rgba"]],["bool"]]],[11,"ne",E,E,1,[[["self"],["rgba"]],["bool"]]],[11,"cmp",R[76],E,2,[[["self"],["bgr"]],[R[50]]]],[11,"cmp",E,E,3,[[["self"],["bgra"]],[R[50]]]],[11,"cmp",E,E,4,[[["self"],["gray"]],[R[50]]]],[11,"cmp",E,E,5,[[["self"],[R[73]]],[R[50]]]],[11,"cmp","rgb",E,0,[[["self"],["rgb"]],[R[50]]]],[11,"cmp",E,E,1,[[["self"],["rgba"]],[R[50]]]],[11,R[77],R[76],E,2,[[["self"],["bgr"]],[[R[23],[R[50]]],[R[50]]]]],[11,"lt",E,E,2,[[["self"],["bgr"]],["bool"]]],[11,"le",E,E,2,[[["self"],["bgr"]],["bool"]]],[11,"gt",E,E,2,[[["self"],["bgr"]],["bool"]]],[11,"ge",E,E,2,[[["self"],["bgr"]],["bool"]]],[11,R[77],E,E,3,[[["self"],["bgra"]],[[R[23],[R[50]]],[R[50]]]]],[11,"lt",E,E,3,[[["self"],["bgra"]],["bool"]]],[11,"le",E,E,3,[[["self"],["bgra"]],["bool"]]],[11,"gt",E,E,3,[[["self"],["bgra"]],["bool"]]],[11,"ge",E,E,3,[[["self"],["bgra"]],["bool"]]],[11,R[77],E,E,4,[[["self"],["gray"]],[[R[23],[R[50]]],[R[50]]]]],[11,"lt",E,E,4,[[["self"],["gray"]],["bool"]]],[11,"le",E,E,4,[[["self"],["gray"]],["bool"]]],[11,"gt",E,E,4,[[["self"],["gray"]],["bool"]]],[11,"ge",E,E,4,[[["self"],["gray"]],["bool"]]],[11,R[77],E,E,5,[[["self"],[R[73]]],[[R[23],[R[50]]],[R[50]]]]],[11,"lt",E,E,5,[[["self"],[R[73]]],["bool"]]],[11,"le",E,E,5,[[["self"],[R[73]]],["bool"]]],[11,"gt",E,E,5,[[["self"],[R[73]]],["bool"]]],[11,"ge",E,E,5,[[["self"],[R[73]]],["bool"]]],[11,R[77],"rgb",E,0,[[["self"],["rgb"]],[[R[23],[R[50]]],[R[50]]]]],[11,"lt",E,E,0,[[["self"],["rgb"]],["bool"]]],[11,"le",E,E,0,[[["self"],["rgb"]],["bool"]]],[11,"gt",E,E,0,[[["self"],["rgb"]],["bool"]]],[11,"ge",E,E,0,[[["self"],["rgb"]],["bool"]]],[11,R[77],E,E,1,[[["self"],["rgba"]],[[R[23],[R[50]]],[R[50]]]]],[11,"lt",E,E,1,[[["self"],["rgba"]],["bool"]]],[11,"le",E,E,1,[[["self"],["rgba"]],["bool"]]],[11,"gt",E,E,1,[[["self"],["rgba"]],["bool"]]],[11,"ge",E,E,1,[[["self"],["rgba"]],["bool"]]],[11,"hash",R[76],E,2,[[["self"],["__h"]]]],[11,"hash",E,E,3,[[["self"],["__h"]]]],[11,"hash",E,E,4,[[["self"],["__h"]]]],[11,"hash",E,E,5,[[["self"],["__h"]]]],[11,"hash","rgb",E,0,[[["self"],["__h"]]]],[11,"hash",E,E,1,[[["self"],["__h"]]]],[11,"fmt",R[76],E,2,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,3,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,4,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,5,[[["self"],[R[10]]],[R[3]]]],[11,"fmt","rgb",E,0,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,1,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,0,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[76],E,2,[[["self"],[R[10]]],[R[3]]]],[11,"fmt","rgb",E,1,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[76],E,3,[[["self"],[R[10]]],[R[3]]]],[11,"add","rgb",E,0,[[["rgb"]]]],[11,"add",E,E,0,[[[T]]]],[11,"add",E,E,1,[[["rgba"]]]],[11,"add",E,E,1,[[[T]]]],[11,"sub",E,E,0,[[["rgb"]]]],[11,"sub",E,E,0,[[[T]]]],[11,"sub",E,E,1,[[["rgba"]]]],[11,"sub",E,E,1,[[[T]]]],[11,"mul",E,E,0,[[[T]]]],[11,"mul",E,E,1,[[[T]]]],[11,R[78],E,E,0,[[["self"],["rgb"]]]],[11,R[78],E,E,0,[[["self"],[T]]]],[11,R[78],E,E,1,[[["self"],["rgba"]]]],[11,R[78],E,E,1,[[["self"],[T]]]],[11,R[79],E,E,0,[[["self"],["rgb"]]]],[11,R[79],E,E,0,[[["self"],[T]]]],[11,R[79],E,E,1,[[["self"],["rgba"]]]],[11,R[79],E,E,1,[[["self"],[T]]]],[11,R[80],E,E,0,[[["self"],[T]]]],[11,R[80],E,E,1,[[["self"],[T]]]],[11,R[81],E,"Takes exactly 3 elements from the iterator and creates a…",0,[[[R[82]]],["self"]]],[11,R[81],E,"Takes exactly 4 elements from the iterator and creates a…",1,[[[R[82]]],["self"]]],[11,"as_ref",R[76],E,4,[[["self"]],[T]]],[11,"as_ref","rgb",E,0,[[["self"]]]],[11,"as_ref",E,E,1,[[["self"]]]],[11,"as_ref",R[76],E,5,[[["self"]],[T]]],[11,"as_mut",E,E,4,[[["self"]],[T]]],[11,"as_mut","rgb",E,0,[[["self"]]]],[11,"as_mut",E,E,1,[[["self"]]]],[11,"as_mut",R[76],E,5,[[["self"]],[T]]],[11,"into","rgb",E,0,[[]]],[11,"into",E,E,1,[[]]],[11,"into",R[76],E,2,[[]]],[11,"into",E,E,3,[[]]],[11,"into","rgb",E,0,[[]]],[11,"into",E,E,1,[[]]],[11,"into",R[76],E,2,[[]]],[11,"into",E,E,3,[[]]],[11,"fmt","rgb",E,0,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[76],E,2,[[["self"],[R[10]]],[R[3]]]],[11,"fmt","rgb",E,0,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[76],E,2,[[["self"],[R[10]]],[R[3]]]],[11,"clone",E,E,2,[[["self"]],["bgr"]]],[11,"clone",E,E,3,[[["self"]],["bgra"]]],[11,"clone",E,E,4,[[["self"]],["gray"]]],[11,"clone",E,E,5,[[["self"]],[R[73]]]],[11,"clone","rgb",E,0,[[["self"]],["rgb"]]],[11,"clone",E,E,1,[[["self"]],["rgba"]]],[11,R[83],R[76],E,2,[[],["bgr"]]],[11,R[83],E,E,3,[[],["bgra"]]],[11,R[83],E,E,4,[[],["gray"]]],[11,R[83],E,E,5,[[],[R[73]]]],[11,R[83],"rgb",E,0,[[],["rgb"]]],[11,R[83],E,E,1,[[],["rgba"]]],[11,R[84],E,R[75],9,[[["self"]]]],[11,R[85],E,R[75],9,[[["self"]]]],[11,"new",R[76],R[66],2,[[[T]],["self"]]],[11,"iter",E,R[86],2,[[["self"]],[["iter"],["cloned",["iter"]]]]],[11,"alpha",E,E,2,[[["self"],[T]],["bgra"]]],[11,R[67],E,E,2,[[["self"],["a"]],["bgra"]]],[11,"new",E,R[66],3,[[[T]],["self"]]],[11,R[67],E,R[66],3,[[["a"],[T]],["self"]]],[11,"iter",E,R[87],3,[[["self"]],[["iter"],["cloned",["iter"]]]]],[11,"rgb",E,R[88],3,[[["self"]],["bgr"]]],[11,"rgb_mut",E,R[89],3,[[["self"]],["bgr"]]],[11,"map_rgb",E,R[90],3,[[["self"],["f"]],["bgra"]]],[11,"alpha",E,R[91],3,[[["self"],["a"]],["self"]]],[11,R[72],E,R[92],3,[[["self"],["f"]],["bgra"]]]],"p":[[3,"RGB"],[3,"RGBA"],[3,"BGR"],[3,"BGRA"],[3,"Gray"],[3,R[93]],[8,R[94]],[8,R[95]],[8,R[96]],[8,R[97]],[8,R[98]]]};
searchIndex["rustc_demangle"]={"doc":"Demangle Rust compiler symbol names.","i":[[3,R[11],"rustc_demangle","Representation of a demangled symbol name.",N,N],[3,R[12],E,"Error returned from the `try_demangle` function below when…",N,N],[5,R[1],E,"De-mangles a Rust symbol into a more readable version",N,[[["str"]],[R[1]]]],[5,"try_demangle",E,"The same as `demangle`, except return an `Err` if the…",N,[[["str"]],[[R[1]],[R[2]],[R[3],[R[1],R[2]]]]]],[11,"as_str",E,"Returns the underlying string that's being demangled.",0,[[["self"]],["str"]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[4],E,E,0,[[[U]],[R[3]]]],[11,"into",E,E,0,[[],[U]]],[11,R[5],E,E,0,[[],[R[3]]]],[11,R[6],E,E,0,[[["self"]],[T]]],[11,R[7],E,E,0,[[["self"]],[T]]],[11,R[8],E,E,0,[[["self"]],[R[9]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[4],E,E,1,[[[U]],[R[3]]]],[11,"into",E,E,1,[[],[U]]],[11,R[5],E,E,1,[[],[R[3]]]],[11,R[6],E,E,1,[[["self"]],[T]]],[11,R[7],E,E,1,[[["self"]],[T]]],[11,R[8],E,E,1,[[["self"]],[R[9]]]],[11,"fmt",E,E,1,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,0,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,0,[[["self"],[R[10]]],[R[3]]]],[11,"clone",E,E,1,[[["self"]],[R[2]]]]],"p":[[3,R[11]],[3,R[12]]]};
searchIndex["ryu"]={"doc":"Pure Rust implementation of Ryū, an algorithm to quickly…","i":[[3,"Buffer","ryu","Safe API for formatting floating point numbers to text.",N,N],[11,"new",E,R[727],0,[[],["self"]]],[11,"format",E,R[728],0,[[["self"],["float"]],["str"]]],[11,"format_finite",E,R[728],0,[[["self"],["float"]],["str"]]],[0,"raw",E,"Unsafe functions that mirror the API of the C…",N,N],[5,"format32","ryu::raw","Print f32 to the given buffer and return number of bytes…",N,[[["f32"]],["usize"]]],[5,"format64",E,"Print f64 to the given buffer and return number of bytes…",N,[[["f64"]],["usize"]]],[8,"Float","ryu","A floating point number, f32 or f64, that can be written…",N,N],[11,"from",E,E,0,[[[T]],[T]]],[11,R[4],E,E,0,[[[U]],[R[3]]]],[11,"into",E,E,0,[[],[U]]],[11,R[5],E,E,0,[[],[R[3]]]],[11,R[6],E,E,0,[[["self"]],[T]]],[11,R[7],E,E,0,[[["self"]],[T]]],[11,R[8],E,E,0,[[["self"]],[R[9]]]],[11,"clone",E,E,0,[[["self"]],["buffer"]]],[11,R[83],E,E,0,[[],["self"]]]],"p":[[3,"Buffer"]]};
searchIndex["scopeguard"]={"doc":"A scope guard will run a given closure when it goes out of…","i":[[3,R[19],R[14],"`ScopeGuard` is a scope guard that may own a protected…",N,N],[4,"Always",E,"Always run on scope exit.",N,N],[5,"guard",E,"Create a new `ScopeGuard` owning `v` and with deferred…",N,[[[T],["f"]],[[R[14],["always"]],["always"]]]],[8,R[18],E,"Controls in which cases the associated code should be run",N,N],[10,R[16],E,"Return `true` if the guard’s associated code should run…",0,[[],["bool"]]],[11,"with_strategy",E,"Create a `ScopeGuard` that owns `v` (accessible through…",1,[[[T],["f"]],[R[14]]]],[11,R[15],E,"“Defuse” the guard and extract the value without calling…",1,[[],[T]]],[14,"defer",E,"Macro to create a `ScopeGuard` (always run).",N,N],[11,"from",E,E,1,[[[T]],[T]]],[11,R[4],E,E,1,[[[U]],[R[3]]]],[11,"into",E,E,1,[[],[U]]],[11,R[5],E,E,1,[[],[R[3]]]],[11,R[6],E,E,1,[[["self"]],[T]]],[11,R[7],E,E,1,[[["self"]],[T]]],[11,R[8],E,E,1,[[["self"]],[R[9]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[4],E,E,2,[[[U]],[R[3]]]],[11,"into",E,E,2,[[],[U]]],[11,R[5],E,E,2,[[],[R[3]]]],[11,R[6],E,E,2,[[["self"]],[T]]],[11,R[7],E,E,2,[[["self"]],[T]]],[11,R[8],E,E,2,[[["self"]],[R[9]]]],[11,R[16],E,E,2,[[],["bool"]]],[11,"deref",E,E,1,[[["self"]],[T]]],[11,R[17],E,E,1,[[["self"]],[T]]],[11,"fmt",E,E,2,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,1,[[["self"],[R[10]]],[R[3]]]],[11,"drop",E,E,1,[[["self"]]]]],"p":[[8,R[18]],[3,R[19]],[4,"Always"]]};
searchIndex["scroll"]={"doc":"Scroll","i":[[3,"Uleb128","scroll","An unsigned leb128 integer",N,N],[3,"Sleb128",E,"An signed leb128 integer",N,N],[4,"Endian",E,R[4352],N,N],[13,"Little",E,E,0,N],[13,"Big",E,E,0,N],[4,"Error",E,"A custom Scroll error",N,N],[13,"TooBig",E,"The type you tried to read was too big",1,N],[12,"size",R[3475],E,1,N],[12,"len",E,E,1,N],[13,"BadOffset","scroll","The requested offset to read/write at is invalid",1,N],[13,"BadInput",E,E,1,N],[12,"size",R[3475],E,1,N],[12,"msg",E,E,1,N],[13,"Custom","scroll","A custom Scroll error for reporting messages to clients",1,N],[13,"IO",E,"Returned when IO based errors are encountered",1,N],[0,"ctx",E,"Generic context-aware conversion traits, for automatic…",N,N],[4,"StrCtx",R[3481],"The parsing context for converting a byte sequence to a…",N,N],[13,R[777],E,E,2,N],[13,"DelimiterUntil",E,E,2,N],[13,"Length",E,E,2,N],[17,"NULL",E,"A C-style, null terminator based delimiter",N,N],[17,"SPACE",E,"A space-based delimiter",N,N],[17,"RET",E,"A newline-based delimiter",N,N],[17,"TAB",E,"A tab-based delimiter",N,N],[8,R[3502],E,"A trait for measuring how large something is; for a byte…",N,N],[16,"Units",E,E,3,N],[10,"measure_with",E,"How large is `Self`, given the `ctx`?",3,[[["self"],["ctx"]]]],[8,"FromCtx",E,"Reads `Self` from `This` using the context `Ctx`; must not…",N,N],[10,R[4262],E,E,4,[[["this"],["ctx"]],["self"]]],[8,"TryFromCtx",E,"Tries to read `Self` from `This` using the context `Ctx`",N,N],[16,"Error",E,E,5,N],[16,"Size",E,E,5,N],[10,R[3482],E,E,5,[[["this"],["ctx"]],[R[3]]]],[8,"IntoCtx",E,"Writes `Self` into `This` using the context `Ctx`",N,N],[10,R[4264],E,E,6,[[["this"],["ctx"]]]],[8,"TryIntoCtx",E,"Tries to write `Self` into `This` using the context `Ctx`",N,N],[16,"Error",E,E,7,N],[16,"Size",E,E,7,N],[10,R[4265],E,E,7,[[["this"],["ctx"]],[R[3]]]],[8,"SizeWith",E,"Gets the size of `Self` with a `Ctx`, and in…",N,N],[16,"Units",E,E,8,N],[10,R[4268],E,E,8,[[["ctx"]]]],[11,"len",E,E,2,[[["self"]],["usize"]]],[11,"network","scroll",E,0,[[],["endian"]]],[11,"is_little",E,E,0,[[["self"]],["bool"]]],[11,"size",E,"Return how many bytes this Uleb128 takes up in memory",9,[[["self"]],["usize"]]],[11,"read",E,"Read a variable length u64 from `bytes` at `offset`",9,[[["usize"]],[[R[3],["u64"]],["u64"]]]],[11,"size",E,"Return how many bytes this Sleb128 takes up in memory",10,[[["self"]],["usize"]]],[11,"read",E,"Read a variable length i64 from `bytes` at `offset`",10,[[["usize"]],[["i64"],[R[3],["i64"]]]]],[6,"Result",E,E,N,N],[17,"LE",E,"Little Endian byte order context",N,N],[17,"BE",E,"Big Endian byte order context",N,N],[17,"NETWORK",E,"Network byte order context",N,N],[17,"NATIVE",E,"The machine's native byte order",N,N],[8,"Pread",E,"A very generic, contextual pread interface in Rust. Allows…",N,N],[11,"pread",E,R[3476],11,[[["self"],["i"]],[[R[3477]],[R[3]]]]],[11,"pread_with",E,R[3483],11,[[["self"],["i"],["ctx"]],[[R[3477]],[R[3]]]]],[11,"gread",E,R[3476],11,[[["self"],["i"]],[[R[3477]],[R[3]]]]],[11,"gread_with",E,R[3484],11,[[["self"],["ctx"],["i"]],[[R[3477]],[R[3]]]]],[11,R[3485],E,R[3478],11,[[["self"],["i"]],[R[3]]]],[11,R[3486],E,R[3478],11,[[["ctx"],["self"],["i"]],[R[3]]]],[8,"Pwrite",E,"Writes into `Self` at an offset of type `I` using a `Ctx`",N,N],[11,"pwrite",E,E,12,[[["self"],["i"],[R[3479]]],[R[3]]]],[11,R[3487],E,R[3488],12,[[["self"],["ctx"],["i"],[R[3479]]],[R[3]]]],[11,"gwrite",E,R[3489],12,[[["self"],["i"],[R[3479]]],[R[3]]]],[11,R[3490],E,R[3491],12,[[["self"],["i"],["ctx"],[R[3479]]],[R[3]]]],[8,"Cread",E,"Core-read - core, no_std friendly trait for reading basic…",N,N],[11,"cread_with",E,R[3492],13,[[["self"],["i"],["ctx"]],["fromctx"]]],[11,"cread",E,R[3493],13,[[["self"],["i"]],["fromctx"]]],[8,"Cwrite",E,"Core-write - core, no_std friendly trait for writing basic…",N,N],[11,"cwrite",E,R[3494],14,[[["self"],["intoctx"],["i"]]]],[11,R[3495],E,R[3496],14,[[["self"],["intoctx"],["ctx"],["i"]]]],[8,"IOread",E,"An extension trait to `std::io::Read` streams; this only…",N,N],[11,"ioread",E,R[3497],15,[[["self"]],[["fromctx"],[R[3]],[R[3500]]]]],[11,R[3498],E,R[3499],15,[[["self"],["ctx"]],[["fromctx"],[R[3]],[R[3500]]]]],[8,"IOwrite",E,"An extension trait to `std::io::Write` streams; this only…",N,N],[11,"iowrite",E,R[3480],16,[[["self"],["intoctx"],[R[3500]]],[R[3]]]],[11,R[3501],E,R[3480],16,[[["self"],["ctx"],[R[3500]],["intoctx"]],[R[3]]]],[11,"into",E,E,9,[[],[U]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[46],E,E,9,[[["self"]],[T]]],[11,R[47],E,E,9,[[["self"],[T]]]],[11,R[4],E,E,9,[[[U]],[R[3]]]],[11,R[5],E,E,9,[[],[R[3]]]],[11,R[7],E,E,9,[[["self"]],[T]]],[11,R[6],E,E,9,[[["self"]],[T]]],[11,R[8],E,E,9,[[["self"]],[R[9]]]],[11,"into",E,E,10,[[],[U]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[46],E,E,10,[[["self"]],[T]]],[11,R[47],E,E,10,[[["self"],[T]]]],[11,R[4],E,E,10,[[[U]],[R[3]]]],[11,R[5],E,E,10,[[],[R[3]]]],[11,R[7],E,E,10,[[["self"]],[T]]],[11,R[6],E,E,10,[[["self"]],[T]]],[11,R[8],E,E,10,[[["self"]],[R[9]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[46],E,E,0,[[["self"]],[T]]],[11,R[47],E,E,0,[[["self"],[T]]]],[11,R[4],E,E,0,[[[U]],[R[3]]]],[11,R[5],E,E,0,[[],[R[3]]]],[11,R[7],E,E,0,[[["self"]],[T]]],[11,R[6],E,E,0,[[["self"]],[T]]],[11,R[8],E,E,0,[[["self"]],[R[9]]]],[11,"into",E,E,1,[[],[U]]],[11,R[113],E,E,1,[[["self"]],["string"]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[4],E,E,1,[[[U]],[R[3]]]],[11,R[5],E,E,1,[[],[R[3]]]],[11,R[7],E,E,1,[[["self"]],[T]]],[11,R[6],E,E,1,[[["self"]],[T]]],[11,R[8],E,E,1,[[["self"]],[R[9]]]],[11,"into",R[3481],E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[46],E,E,2,[[["self"]],[T]]],[11,R[47],E,E,2,[[["self"],[T]]]],[11,R[4],E,E,2,[[[U]],[R[3]]]],[11,R[5],E,E,2,[[],[R[3]]]],[11,R[7],E,E,2,[[["self"]],[T]]],[11,R[6],E,E,2,[[["self"]],[T]]],[11,R[8],E,E,2,[[["self"]],[R[9]]]],[11,R[3482],"scroll",E,9,[[],[R[3]]]],[11,R[3482],E,E,10,[[],[R[3]]]],[11,"as_ref",E,E,9,[[["self"]],["u64"]]],[11,"as_ref",E,E,10,[[["self"]],["i64"]]],[11,R[83],R[3481],E,2,[[],["self"]]],[11,R[83],"scroll",E,0,[[],["self"]]],[11,"clone",R[3481],E,2,[[["self"]],["strctx"]]],[11,"clone","scroll",E,0,[[["self"]],["endian"]]],[11,"clone",E,E,9,[[["self"]],["uleb128"]]],[11,"clone",E,E,10,[[["self"]],["sleb128"]]],[11,"eq",E,E,0,[[["self"],["endian"]],["bool"]]],[11,"eq",E,E,9,[[["self"],["uleb128"]],["bool"]]],[11,"ne",E,E,9,[[["self"],["uleb128"]],["bool"]]],[11,"eq",E,E,10,[[["self"],["sleb128"]],["bool"]]],[11,"ne",E,E,10,[[["self"],["sleb128"]],["bool"]]],[11,"from",E,E,1,[[["error"]],["error"]]],[11,"from",E,E,0,[[["bool"]],["self"]]],[11,"fmt",R[3481],E,2,[[["self"],[R[10]]],[R[3]]]],[11,"fmt","scroll",E,1,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,0,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,9,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,10,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,1,[[["self"],[R[10]]],[R[3]]]],[11,R[157],E,E,1,[[["self"]],["str"]]],[11,"cause",E,E,1,[[["self"]],[[R[23],["error"]],["error"]]]],[11,"pread",E,R[3476],11,[[["self"],["i"]],[[R[3477]],[R[3]]]]],[11,"pread_with",E,R[3483],11,[[["self"],["i"],["ctx"]],[[R[3477]],[R[3]]]]],[11,"gread",E,R[3476],11,[[["self"],["i"]],[[R[3477]],[R[3]]]]],[11,"gread_with",E,R[3484],11,[[["self"],["ctx"],["i"]],[[R[3477]],[R[3]]]]],[11,R[3485],E,R[3478],11,[[["self"],["i"]],[R[3]]]],[11,R[3486],E,R[3478],11,[[["ctx"],["self"],["i"]],[R[3]]]],[11,"pwrite",E,E,12,[[["self"],["i"],[R[3479]]],[R[3]]]],[11,R[3487],E,R[3488],12,[[["self"],["ctx"],["i"],[R[3479]]],[R[3]]]],[11,"gwrite",E,R[3489],12,[[["self"],["i"],[R[3479]]],[R[3]]]],[11,R[3490],E,R[3491],12,[[["self"],["i"],["ctx"],[R[3479]]],[R[3]]]],[11,"cread_with",E,R[3492],13,[[["self"],["i"],["ctx"]],["fromctx"]]],[11,"cread",E,R[3493],13,[[["self"],["i"]],["fromctx"]]],[11,"cwrite",E,R[3494],14,[[["self"],["intoctx"],["i"]]]],[11,R[3495],E,R[3496],14,[[["self"],["intoctx"],["ctx"],["i"]]]],[11,"ioread",E,R[3497],15,[[["self"]],[["fromctx"],[R[3]],[R[3500]]]]],[11,R[3498],E,R[3499],15,[[["self"],["ctx"]],[["fromctx"],[R[3]],[R[3500]]]]],[11,"iowrite",E,R[3480],16,[[["self"],["intoctx"],[R[3500]]],[R[3]]]],[11,R[3501],E,R[3480],16,[[["self"],["ctx"],[R[3500]],["intoctx"]],[R[3]]]]],"p":[[4,"Endian"],[4,"Error"],[4,"StrCtx"],[8,R[3502]],[8,"FromCtx"],[8,"TryFromCtx"],[8,"IntoCtx"],[8,"TryIntoCtx"],[8,"SizeWith"],[3,"Uleb128"],[3,"Sleb128"],[8,"Pread"],[8,"Pwrite"],[8,"Cread"],[8,"Cwrite"],[8,"IOread"],[8,"IOwrite"]]};
searchIndex["scroll_derive"]={"doc":E,"i":[[24,"Pread","scroll_derive",E,N,N],[24,"Pwrite",E,E,N,N],[24,"SizeWith",E,E,N,N],[24,"IOread",E,E,N,N],[24,"IOwrite",E,E,N,N]],"p":[]};
searchIndex["serde"]={"doc":"Serde","i":[[0,"de","serde","Generic data structure deserialization framework.",N,N],[3,"IgnoredAny",R[4519],"An efficient way of discarding data from a deserializer.",N,N],[4,"Unexpected",E,"`Unexpected` represents an unexpected invocation of any…",N,N],[13,"Bool",E,"The input contained a boolean value that was not expected.",0,N],[13,"Unsigned",E,"The input contained an unsigned integer `u8`, `u16`, `u32`…",0,N],[13,"Signed",E,"The input contained a signed integer `i8`, `i16`, `i32` or…",0,N],[13,"Float",E,"The input contained a floating point `f32` or `f64` that…",0,N],[13,"Char",E,"The input contained a `char` that was not expected.",0,N],[13,"Str",E,"The input contained a `&str` or `String` that was not…",0,N],[13,"Bytes",E,"The input contained a `&[u8]` or `Vec<u8>` that was not…",0,N],[13,"Unit",E,"The input contained a unit `()` that was not expected.",0,N],[13,"Option",E,"The input contained an `Option<T>` that was not expected.",0,N],[13,"NewtypeStruct",E,"The input contained a newtype struct that was not expected.",0,N],[13,"Seq",E,"The input contained a sequence that was not expected.",0,N],[13,"Map",E,"The input contained a map that was not expected.",0,N],[13,"Enum",E,"The input contained an enum that was not expected.",0,N],[13,"UnitVariant",E,"The input contained a unit variant that was not expected.",0,N],[13,"NewtypeVariant",E,"The input contained a newtype variant that was not expected.",0,N],[13,"TupleVariant",E,"The input contained a tuple variant that was not expected.",0,N],[13,"StructVariant",E,"The input contained a struct variant that was not expected.",0,N],[13,"Other",E,"A message stating what uncategorized thing the input…",0,N],[0,"value",E,"Building blocks for deserializing basic values using the…",N,N],[3,"Error",R[4518],"A minimal representation of all possible errors that can…",N,N],[3,R[4542],E,"A deserializer holding a `()`.",N,N],[3,R[4543],E,"A deserializer holding a `bool`.",N,N],[3,R[4544],E,"A deserializer holding an `i8`.",N,N],[3,R[4545],E,"A deserializer holding an `i16`.",N,N],[3,R[4546],E,"A deserializer holding an `i32`.",N,N],[3,R[4547],E,"A deserializer holding an `i64`.",N,N],[3,R[4548],E,"A deserializer holding an `isize`.",N,N],[3,R[4549],E,"A deserializer holding a `u8`.",N,N],[3,R[4550],E,"A deserializer holding a `u16`.",N,N],[3,R[4551],E,"A deserializer holding a `u64`.",N,N],[3,R[4552],E,"A deserializer holding a `usize`.",N,N],[3,R[4553],E,"A deserializer holding an `f32`.",N,N],[3,R[4554],E,"A deserializer holding an `f64`.",N,N],[3,R[4555],E,"A deserializer holding a `char`.",N,N],[3,R[4556],E,"A deserializer holding an `i128`.",N,N],[3,R[4557],E,"A deserializer holding a `u128`.",N,N],[3,R[4558],E,"A deserializer holding a `u32`.",N,N],[3,R[4559],E,"A deserializer holding a `&str`.",N,N],[3,R[4532],E,"A deserializer holding a `&str` with a lifetime tied to…",N,N],[3,R[4560],E,"A deserializer holding a `String`.",N,N],[3,R[4561],E,"A deserializer holding a `Cow<str>`.",N,N],[3,R[4533],E,"A deserializer holding a `&[u8]` with a lifetime tied to…",N,N],[3,R[4534],E,"A deserializer that iterates over a sequence.",N,N],[3,R[4535],E,"A deserializer holding a `SeqAccess`.",N,N],[3,R[4536],E,"A deserializer that iterates over a map.",N,N],[3,R[4537],E,"A deserializer holding a `MapAccess`.",N,N],[11,"new",E,"Create a new borrowed deserializer from the given string.",1,[[["str"]],["borrowedstrdeserializer"]]],[11,"new",E,"Create a new borrowed deserializer from the given byte…",2,[[],["borrowedbytesdeserializer"]]],[11,"new",E,"Construct a new `SeqDeserializer<I, E>`.",3,[[["i"]],["self"]]],[11,"end",E,R[4353],3,[[],[R[3]]]],[11,"new",E,"Construct a new `SeqAccessDeserializer<A>`.",4,[[["a"]],["self"]]],[11,"new",E,"Construct a new `MapDeserializer<I, E>`.",5,[[["i"]],["self"]]],[11,"end",E,R[4353],5,[[],[R[3]]]],[11,"new",E,"Construct a new `MapAccessDeserializer<A>`.",6,[[["a"]],["self"]]],[8,"Error",R[4519],"The `Error` trait allows `Deserialize` implementations to…",N,N],[10,"custom",E,"Raised when there is general error when deserializing a…",7,[[[T]],["self"]]],[11,R[4632],E,"Raised when a `Deserialize` receives a type different from…",7,[[[R[4723]],[R[4531]]],["self"]]],[11,"invalid_value",E,"Raised when a `Deserialize` receives a value of the right…",7,[[[R[4723]],[R[4531]]],["self"]]],[11,"invalid_length",E,"Raised when deserializing a sequence or map and the input…",7,[[[R[4723]],["usize"]],["self"]]],[11,"unknown_variant",E,"Raised when a `Deserialize` enum type received a variant…",7,[[["str"]],["self"]]],[11,"unknown_field",E,"Raised when a `Deserialize` struct type received a field…",7,[[["str"]],["self"]]],[11,"missing_field",E,"Raised when a `Deserialize` struct type expected to…",7,[[["str"]],["self"]]],[11,"duplicate_field",E,"Raised when a `Deserialize` struct type received more than…",7,[[["str"]],["self"]]],[8,"Expected",E,"`Expected` represents an explanation of what data a…",N,N],[10,"fmt",E,"Format an explanation of what data was being expected.…",8,[[["self"],[R[10]]],[R[3]]]],[8,R[4378],E,R[4379],N,N],[10,R[4354],E,R[4380],9,[[["d"]],[R[3]]]],[8,"DeserializeOwned",E,"A data structure that can be deserialized without…",N,N],[8,R[4538],E,"`DeserializeSeed` is the stateful form of the…",N,N],[16,"Value",E,"The type produced by using this seed.",10,N],[10,R[4354],E,"Equivalent to the more common `Deserialize::deserialize`…",10,[[["d"]],[R[3]]]],[8,R[4365],E,R[4381],N,N],[16,"Error",E,R[4358],11,N],[10,R[4382],E,R[4383],11,[[["v"]],[R[3]]]],[10,R[4384],E,R[4385],11,[[["v"]],[R[3]]]],[10,R[4386],E,R[4387],11,[[["v"]],[R[3]]]],[10,R[4388],E,R[4389],11,[[["v"]],[R[3]]]],[10,R[4390],E,R[4391],11,[[["v"]],[R[3]]]],[10,R[4392],E,R[4393],11,[[["v"]],[R[3]]]],[11,R[4394],E,R[4395],11,[[["v"]],[R[3]]]],[10,R[4396],E,R[4397],11,[[["v"]],[R[3]]]],[10,R[4398],E,R[4399],11,[[["v"]],[R[3]]]],[10,R[4400],E,R[4401],11,[[["v"]],[R[3]]]],[10,R[4402],E,R[4403],11,[[["v"]],[R[3]]]],[11,R[4404],E,R[4405],11,[[["v"]],[R[3]]]],[10,R[4406],E,R[4407],11,[[["v"]],[R[3]]]],[10,R[4408],E,R[4409],11,[[["v"]],[R[3]]]],[10,R[4410],E,R[4411],11,[[["v"]],[R[3]]]],[10,R[4412],E,R[4355],11,[[["v"]],[R[3]]]],[10,R[4413],E,R[4355],11,[[["v"]],[R[3]]]],[10,R[4414],E,R[4356],11,[[["v"]],[R[3]]]],[10,R[4415],E,R[4356],11,[[["v"]],[R[3]]]],[10,R[4416],E,R[4417],11,[[["v"]],[R[3]]]],[10,R[4418],E,R[4419],11,[[["v"]],[R[3]]]],[10,R[4420],E,R[4421],11,[[["v"],["str"]],[R[3]]]],[10,R[4422],E,R[4423],11,[[["v"],["str"]],[R[3]]]],[10,R[4424],E,R[4357],11,[[["v"]],[R[3]]]],[10,R[4425],E,R[4357],11,[[["usize"],["v"]],[R[3]]]],[10,R[4426],E,R[4427],11,[[["v"],["usize"],["str"]],[R[3]]]],[10,R[4428],E,R[4429],11,[[["v"]],[R[3]]]],[10,R[4430],E,R[4431],11,[[["v"],["str"]],[R[3]]]],[10,R[4432],E,R[4433],11,[[["v"],["str"]],[R[3]]]],[10,R[4434],E,R[4435],11,[[["v"]],[R[3]]]],[10,R[4436],E,R[4437],11,[[["v"]],[R[3]]]],[11,R[4366],E,R[4438],11,[[["self"]],["bool"]]],[8,"Visitor",E,"This trait represents a visitor that walks through a…",N,N],[16,"Value",E,"The value produced by this visitor.",12,N],[10,"expecting",E,"Format a message stating what data this Visitor expects to…",12,[[["self"],[R[10]]],[R[3]]]],[11,"visit_bool",E,"The input contains a boolean.",12,[[["bool"]],[R[3]]]],[11,"visit_i8",E,"The input contains an `i8`.",12,[[["i8"]],[R[3]]]],[11,"visit_i16",E,"The input contains an `i16`.",12,[[["i16"]],[R[3]]]],[11,"visit_i32",E,"The input contains an `i32`.",12,[[["i32"]],[R[3]]]],[11,"visit_i64",E,"The input contains an `i64`.",12,[[["i64"]],[R[3]]]],[11,"visit_i128",E,"The input contains a `i128`.",12,[[["i128"]],[R[3]]]],[11,"visit_u8",E,"The input contains a `u8`.",12,[[["u8"]],[R[3]]]],[11,"visit_u16",E,"The input contains a `u16`.",12,[[["u16"]],[R[3]]]],[11,"visit_u32",E,"The input contains a `u32`.",12,[[["u32"]],[R[3]]]],[11,"visit_u64",E,"The input contains a `u64`.",12,[[["u64"]],[R[3]]]],[11,"visit_u128",E,"The input contains a `u128`.",12,[[["u128"]],[R[3]]]],[11,"visit_f32",E,"The input contains an `f32`.",12,[[["f32"]],[R[3]]]],[11,"visit_f64",E,"The input contains an `f64`.",12,[[["f64"]],[R[3]]]],[11,"visit_char",E,"The input contains a `char`.",12,[[["char"]],[R[3]]]],[11,"visit_str",E,"The input contains a string. The lifetime of the string is…",12,[[["str"]],[R[3]]]],[11,"visit_borrowed_str",E,"The input contains a string that lives at least as long as…",12,[[["str"]],[R[3]]]],[11,"visit_string",E,"The input contains a string and ownership of the string is…",12,[[["string"]],[R[3]]]],[11,R[4521],E,"The input contains a byte array. The lifetime of the byte…",12,[[],[R[3]]]],[11,"visit_borrowed_bytes",E,"The input contains a byte array that lives at least as…",12,[[],[R[3]]]],[11,"visit_byte_buf",E,"The input contains a byte array and ownership of the byte…",12,[[["vec",["u8"]],["u8"]],[R[3]]]],[11,"visit_none",E,"The input contains an optional that is absent.",12,[[],[R[3]]]],[11,"visit_some",E,"The input contains an optional that is present.",12,[[["d"]],[R[3]]]],[11,"visit_unit",E,"The input contains a unit `()`.",12,[[],[R[3]]]],[11,R[4520],E,"The input contains a newtype struct.",12,[[["d"]],[R[3]]]],[11,"visit_seq",E,"The input contains a sequence of elements.",12,[[["a"]],[R[3]]]],[11,"visit_map",E,"The input contains a key-value map.",12,[[["a"]],[R[3]]]],[11,"visit_enum",E,"The input contains an enum.",12,[[["a"]],[R[3]]]],[8,"SeqAccess",E,"Provides a `Visitor` access to each element of a sequence…",N,N],[16,"Error",E,R[4358],13,N],[10,R[4522],E,R[4359],13,[[["self"],[T]],[[R[23]],[R[3],[R[23]]]]]],[11,"next_element",E,R[4359],13,[[["self"]],[[R[23]],[R[3],[R[23]]]]]],[11,R[53],E,"Returns the number of elements remaining in the sequence,…",13,[[["self"]],[[R[23],["usize"]],["usize"]]]],[8,"MapAccess",E,"Provides a `Visitor` access to each entry of a map in the…",N,N],[16,"Error",E,R[4358],14,N],[10,R[4523],E,R[4360],14,[[["self"],["k"]],[[R[23]],[R[3],[R[23]]]]]],[10,R[4524],E,R[4361],14,[[["self"],["v"]],[R[3]]]],[11,R[4525],E,R[4362],14,[[["self"],["k"],["v"]],[[R[3],[R[23]]],[R[23]]]]],[11,"next_key",E,R[4360],14,[[["self"]],[[R[23]],[R[3],[R[23]]]]]],[11,"next_value",E,R[4361],14,[[["self"]],[R[3]]]],[11,"next_entry",E,R[4362],14,[[["self"]],[[R[23]],[R[3],[R[23]]]]]],[11,R[53],E,"Returns the number of entries remaining in the map, if…",14,[[["self"]],[[R[23],["usize"]],["usize"]]]],[8,"EnumAccess",E,"Provides a `Visitor` access to the data of an enum in the…",N,N],[16,"Error",E,R[4358],15,N],[16,"Variant",E,"The `Visitor` that will be used to deserialize the content…",15,N],[10,R[4526],E,R[4363],15,[[["v"]],[R[3]]]],[11,"variant",E,R[4363],15,[[],[R[3]]]],[8,R[4539],E,"`VariantAccess` is a visitor that is created by the…",N,N],[16,"Error",E,R[4358],16,N],[10,"unit_variant",E,"Called when deserializing a variant with no values.",16,[[],[R[3]]]],[10,"newtype_variant_seed",E,R[4364],16,[[[T]],[R[3]]]],[11,"newtype_variant",E,R[4364],16,[[],[R[3]]]],[10,"tuple_variant",E,"Called when deserializing a tuple-like variant.",16,[[["usize"],["v"]],[R[3]]]],[10,"struct_variant",E,"Called when deserializing a struct-like variant.",16,[[["v"]],[R[3]]]],[8,R[4540],E,"Converts an existing value into a `Deserializer` from…",N,N],[16,R[4365],E,"The type of the deserializer being converted into.",17,N],[10,R[4674],E,"Convert this value into a deserializer.",17,[[]]],[0,"ser","serde","Generic data structure serialization framework.",N,N],[3,"Impossible",R[4527],"Helper type for implementing a `Serializer` that does not…",N,N],[8,"Error",E,"Trait used by `Serialize` implementations to generically…",N,N],[10,"custom",E,"Used when a [`Serialize`] implementation encounters any…",18,[[[T]],["self"]]],[8,R[4562],E,R[4439],N,N],[10,R[4563],E,R[4440],19,[[["self"],["s"]],[R[3]]]],[8,R[4541],E,R[4441],N,N],[16,"Ok",E,R[4442],20,N],[16,"Error",E,R[4443],20,N],[16,R[4367],E,R[4444],20,N],[16,R[4368],E,R[4445],20,N],[16,R[4372],E,R[4446],20,N],[16,R[4373],E,R[4447],20,N],[16,R[4375],E,R[4448],20,N],[16,R[4376],E,R[4449],20,N],[16,R[4377],E,R[4450],20,N],[10,R[4451],E,R[4452],20,[[["bool"]],[R[3]]]],[10,R[4453],E,R[4454],20,[[["i8"]],[R[3]]]],[10,R[4455],E,R[4456],20,[[["i16"]],[R[3]]]],[10,R[4457],E,R[4458],20,[[["i32"]],[R[3]]]],[10,R[4459],E,R[4460],20,[[["i64"]],[R[3]]]],[11,R[4461],E,R[4462],20,[[["i128"]],[R[3]]]],[10,R[4463],E,R[4464],20,[[["u8"]],[R[3]]]],[10,R[4465],E,R[4466],20,[[["u16"]],[R[3]]]],[10,R[4467],E,R[4468],20,[[["u32"]],[R[3]]]],[10,R[4469],E,R[4470],20,[[["u64"]],[R[3]]]],[11,R[4471],E,R[4472],20,[[["u128"]],[R[3]]]],[10,R[4473],E,R[4474],20,[[["f32"]],[R[3]]]],[10,R[4475],E,R[4476],20,[[["f64"]],[R[3]]]],[10,R[4477],E,R[4478],20,[[["char"]],[R[3]]]],[10,R[4479],E,R[4480],20,[[["str"]],[R[3]]]],[10,R[4481],E,R[4482],20,[[],[R[3]]]],[10,R[4483],E,R[4484],20,[[],[R[3]]]],[10,R[4485],E,R[4486],20,[[[T]],[R[3]]]],[10,R[4487],E,R[4488],20,[[],[R[3]]]],[10,R[4489],E,R[4490],20,[[["str"]],[R[3]]]],[10,R[4491],E,R[4492],20,[[["u32"],["str"]],[R[3]]]],[10,R[4493],E,R[4494],20,[[[T],["str"]],[R[3]]]],[10,R[4495],E,R[4496],20,[[[T],["u32"],["str"]],[R[3]]]],[10,R[4497],E,R[4498],20,[[[R[23],["usize"]],["usize"]],[R[3]]]],[10,R[4499],E,R[4500],20,[[["usize"]],[R[3]]]],[10,R[4501],E,R[4502],20,[[["usize"],["str"]],[R[3]]]],[10,R[4503],E,R[4504],20,[[["u32"],["usize"],["str"]],[R[3]]]],[10,R[4505],E,R[4506],20,[[[R[23],["usize"]],["usize"]],[R[3]]]],[10,R[4507],E,R[4508],20,[[["usize"],["str"]],[R[3]]]],[10,R[4509],E,R[4510],20,[[["u32"],["usize"],["str"]],[R[3]]]],[11,R[4511],E,R[4512],20,[[["i"]],[R[3]]]],[11,R[4513],E,R[4514],20,[[["i"]],[R[3]]]],[11,R[4515],E,R[4516],20,[[[T]],[R[3]]]],[11,R[4366],E,R[4517],20,[[["self"]],["bool"]]],[8,R[4367],E,"Returned from `Serializer::serialize_seq`.",N,N],[16,"Ok",E,R[4369],21,N],[16,"Error",E,R[4370],21,N],[10,R[4371],E,"Serialize a sequence element.",21,[[["self"],[T]],[R[3]]]],[10,"end",E,"Finish serializing a sequence.",21,[[],[R[3]]]],[8,R[4368],E,"Returned from `Serializer::serialize_tuple`.",N,N],[16,"Ok",E,R[4369],22,N],[16,"Error",E,R[4370],22,N],[10,R[4371],E,"Serialize a tuple element.",22,[[["self"],[T]],[R[3]]]],[10,"end",E,"Finish serializing a tuple.",22,[[],[R[3]]]],[8,R[4372],E,"Returned from `Serializer::serialize_tuple_struct`.",N,N],[16,"Ok",E,R[4369],23,N],[16,"Error",E,R[4370],23,N],[10,R[4374],E,"Serialize a tuple struct field.",23,[[["self"],[T]],[R[3]]]],[10,"end",E,"Finish serializing a tuple struct.",23,[[],[R[3]]]],[8,R[4373],E,"Returned from `Serializer::serialize_tuple_variant`.",N,N],[16,"Ok",E,R[4369],24,N],[16,"Error",E,R[4370],24,N],[10,R[4374],E,"Serialize a tuple variant field.",24,[[["self"],[T]],[R[3]]]],[10,"end",E,"Finish serializing a tuple variant.",24,[[],[R[3]]]],[8,R[4375],E,"Returned from `Serializer::serialize_map`.",N,N],[16,"Ok",E,R[4369],25,N],[16,"Error",E,R[4370],25,N],[10,R[4528],E,"Serialize a map key.",25,[[["self"],[T]],[R[3]]]],[10,R[4529],E,"Serialize a map value.",25,[[["self"],[T]],[R[3]]]],[11,"serialize_entry",E,"Serialize a map entry consisting of a key and a value.",25,[[["self"],["k"],["v"]],[R[3]]]],[10,"end",E,"Finish serializing a map.",25,[[],[R[3]]]],[8,R[4376],E,"Returned from `Serializer::serialize_struct`.",N,N],[16,"Ok",E,R[4369],26,N],[16,"Error",E,R[4370],26,N],[10,R[4374],E,"Serialize a struct field.",26,[[["self"],[T],["str"]],[R[3]]]],[11,"skip_field",E,"Indicate that a struct field has been skipped.",26,[[["self"],["str"]],[R[3]]]],[10,"end",E,"Finish serializing a struct.",26,[[],[R[3]]]],[8,R[4377],E,"Returned from `Serializer::serialize_struct_variant`.",N,N],[16,"Ok",E,R[4369],27,N],[16,"Error",E,R[4370],27,N],[10,R[4374],E,"Serialize a struct variant field.",27,[[["self"],[T],["str"]],[R[3]]]],[11,"skip_field",E,"Indicate that a struct variant field has been skipped.",27,[[["self"],["str"]],[R[3]]]],[10,"end",E,"Finish serializing a struct variant.",27,[[],[R[3]]]],[8,R[4378],"serde",R[4379],N,N],[10,R[4354],E,R[4380],9,[[["d"]],[R[3]]]],[8,R[4365],E,R[4381],N,N],[16,"Error",E,R[4358],11,N],[10,R[4382],E,R[4383],11,[[["v"]],[R[3]]]],[10,R[4384],E,R[4385],11,[[["v"]],[R[3]]]],[10,R[4386],E,R[4387],11,[[["v"]],[R[3]]]],[10,R[4388],E,R[4389],11,[[["v"]],[R[3]]]],[10,R[4390],E,R[4391],11,[[["v"]],[R[3]]]],[10,R[4392],E,R[4393],11,[[["v"]],[R[3]]]],[11,R[4394],E,R[4395],11,[[["v"]],[R[3]]]],[10,R[4396],E,R[4397],11,[[["v"]],[R[3]]]],[10,R[4398],E,R[4399],11,[[["v"]],[R[3]]]],[10,R[4400],E,R[4401],11,[[["v"]],[R[3]]]],[10,R[4402],E,R[4403],11,[[["v"]],[R[3]]]],[11,R[4404],E,R[4405],11,[[["v"]],[R[3]]]],[10,R[4406],E,R[4407],11,[[["v"]],[R[3]]]],[10,R[4408],E,R[4409],11,[[["v"]],[R[3]]]],[10,R[4410],E,R[4411],11,[[["v"]],[R[3]]]],[10,R[4412],E,R[4355],11,[[["v"]],[R[3]]]],[10,R[4413],E,R[4355],11,[[["v"]],[R[3]]]],[10,R[4414],E,R[4356],11,[[["v"]],[R[3]]]],[10,R[4415],E,R[4356],11,[[["v"]],[R[3]]]],[10,R[4416],E,R[4417],11,[[["v"]],[R[3]]]],[10,R[4418],E,R[4419],11,[[["v"]],[R[3]]]],[10,R[4420],E,R[4421],11,[[["v"],["str"]],[R[3]]]],[10,R[4422],E,R[4423],11,[[["v"],["str"]],[R[3]]]],[10,R[4424],E,R[4357],11,[[["v"]],[R[3]]]],[10,R[4425],E,R[4357],11,[[["usize"],["v"]],[R[3]]]],[10,R[4426],E,R[4427],11,[[["v"],["usize"],["str"]],[R[3]]]],[10,R[4428],E,R[4429],11,[[["v"]],[R[3]]]],[10,R[4430],E,R[4431],11,[[["v"],["str"]],[R[3]]]],[10,R[4432],E,R[4433],11,[[["v"],["str"]],[R[3]]]],[10,R[4434],E,R[4435],11,[[["v"]],[R[3]]]],[10,R[4436],E,R[4437],11,[[["v"]],[R[3]]]],[11,R[4366],E,R[4438],11,[[["self"]],["bool"]]],[8,R[4562],E,R[4439],N,N],[10,R[4563],E,R[4440],19,[[["self"],["s"]],[R[3]]]],[8,R[4541],E,R[4441],N,N],[16,"Ok",E,R[4442],20,N],[16,"Error",E,R[4443],20,N],[16,R[4367],E,R[4444],20,N],[16,R[4368],E,R[4445],20,N],[16,R[4372],E,R[4446],20,N],[16,R[4373],E,R[4447],20,N],[16,R[4375],E,R[4448],20,N],[16,R[4376],E,R[4449],20,N],[16,R[4377],E,R[4450],20,N],[10,R[4451],E,R[4452],20,[[["bool"]],[R[3]]]],[10,R[4453],E,R[4454],20,[[["i8"]],[R[3]]]],[10,R[4455],E,R[4456],20,[[["i16"]],[R[3]]]],[10,R[4457],E,R[4458],20,[[["i32"]],[R[3]]]],[10,R[4459],E,R[4460],20,[[["i64"]],[R[3]]]],[11,R[4461],E,R[4462],20,[[["i128"]],[R[3]]]],[10,R[4463],E,R[4464],20,[[["u8"]],[R[3]]]],[10,R[4465],E,R[4466],20,[[["u16"]],[R[3]]]],[10,R[4467],E,R[4468],20,[[["u32"]],[R[3]]]],[10,R[4469],E,R[4470],20,[[["u64"]],[R[3]]]],[11,R[4471],E,R[4472],20,[[["u128"]],[R[3]]]],[10,R[4473],E,R[4474],20,[[["f32"]],[R[3]]]],[10,R[4475],E,R[4476],20,[[["f64"]],[R[3]]]],[10,R[4477],E,R[4478],20,[[["char"]],[R[3]]]],[10,R[4479],E,R[4480],20,[[["str"]],[R[3]]]],[10,R[4481],E,R[4482],20,[[],[R[3]]]],[10,R[4483],E,R[4484],20,[[],[R[3]]]],[10,R[4485],E,R[4486],20,[[[T]],[R[3]]]],[10,R[4487],E,R[4488],20,[[],[R[3]]]],[10,R[4489],E,R[4490],20,[[["str"]],[R[3]]]],[10,R[4491],E,R[4492],20,[[["u32"],["str"]],[R[3]]]],[10,R[4493],E,R[4494],20,[[[T],["str"]],[R[3]]]],[10,R[4495],E,R[4496],20,[[[T],["u32"],["str"]],[R[3]]]],[10,R[4497],E,R[4498],20,[[[R[23],["usize"]],["usize"]],[R[3]]]],[10,R[4499],E,R[4500],20,[[["usize"]],[R[3]]]],[10,R[4501],E,R[4502],20,[[["usize"],["str"]],[R[3]]]],[10,R[4503],E,R[4504],20,[[["u32"],["usize"],["str"]],[R[3]]]],[10,R[4505],E,R[4506],20,[[[R[23],["usize"]],["usize"]],[R[3]]]],[10,R[4507],E,R[4508],20,[[["usize"],["str"]],[R[3]]]],[10,R[4509],E,R[4510],20,[[["u32"],["usize"],["str"]],[R[3]]]],[11,R[4511],E,R[4512],20,[[["i"]],[R[3]]]],[11,R[4513],E,R[4514],20,[[["i"]],[R[3]]]],[11,R[4515],E,R[4516],20,[[[T]],[R[3]]]],[11,R[4366],E,R[4517],20,[[["self"]],["bool"]]],[14,"forward_to_deserialize_any",E,"Helper macro when implementing the `Deserializer` part of…",N,N],[14,"serde_if_integer128",E,"Conditional compilation depending on whether Serde is…",N,N],[11,"fmt",R[4519],E,28,[[["self"],[R[10]]],[[R[3],["error"]],["error"]]]],[11,"into",E,E,28,[[],[U]]],[11,"from",E,E,28,[[[T]],[T]]],[11,R[46],E,E,28,[[["self"]],[T]]],[11,R[47],E,E,28,[[["self"],[T]]]],[11,R[4],E,E,28,[[[U]],[R[3]]]],[11,R[5],E,E,28,[[],[R[3]]]],[11,R[7],E,E,28,[[["self"]],[T]]],[11,R[6],E,E,28,[[["self"]],[T]]],[11,R[8],E,E,28,[[["self"]],[R[9]]]],[11,"into",E,E,0,[[],[U]]],[11,R[113],E,E,0,[[["self"]],["string"]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[46],E,E,0,[[["self"]],[T]]],[11,R[47],E,E,0,[[["self"],[T]]]],[11,R[4],E,E,0,[[[U]],[R[3]]]],[11,R[5],E,E,0,[[],[R[3]]]],[11,R[7],E,E,0,[[["self"]],[T]]],[11,R[6],E,E,0,[[["self"]],[T]]],[11,R[8],E,E,0,[[["self"]],[R[9]]]],[11,"into",R[4518],E,29,[[],[U]]],[11,R[113],E,E,29,[[["self"]],["string"]]],[11,"from",E,E,29,[[[T]],[T]]],[11,R[46],E,E,29,[[["self"]],[T]]],[11,R[47],E,E,29,[[["self"],[T]]]],[11,R[4],E,E,29,[[[U]],[R[3]]]],[11,R[5],E,E,29,[[],[R[3]]]],[11,R[7],E,E,29,[[["self"]],[T]]],[11,R[6],E,E,29,[[["self"]],[T]]],[11,R[8],E,E,29,[[["self"]],[R[9]]]],[11,"into",E,E,30,[[],[U]]],[11,"from",E,E,30,[[[T]],[T]]],[11,R[46],E,E,30,[[["self"]],[T]]],[11,R[47],E,E,30,[[["self"],[T]]]],[11,R[4],E,E,30,[[[U]],[R[3]]]],[11,R[5],E,E,30,[[],[R[3]]]],[11,R[7],E,E,30,[[["self"]],[T]]],[11,R[6],E,E,30,[[["self"]],[T]]],[11,R[8],E,E,30,[[["self"]],[R[9]]]],[11,"into",E,E,31,[[],[U]]],[11,"from",E,E,31,[[[T]],[T]]],[11,R[46],E,E,31,[[["self"]],[T]]],[11,R[47],E,E,31,[[["self"],[T]]]],[11,R[4],E,E,31,[[[U]],[R[3]]]],[11,R[5],E,E,31,[[],[R[3]]]],[11,R[7],E,E,31,[[["self"]],[T]]],[11,R[6],E,E,31,[[["self"]],[T]]],[11,R[8],E,E,31,[[["self"]],[R[9]]]],[11,"into",E,E,32,[[],[U]]],[11,"from",E,E,32,[[[T]],[T]]],[11,R[46],E,E,32,[[["self"]],[T]]],[11,R[47],E,E,32,[[["self"],[T]]]],[11,R[4],E,E,32,[[[U]],[R[3]]]],[11,R[5],E,E,32,[[],[R[3]]]],[11,R[7],E,E,32,[[["self"]],[T]]],[11,R[6],E,E,32,[[["self"]],[T]]],[11,R[8],E,E,32,[[["self"]],[R[9]]]],[11,"into",E,E,33,[[],[U]]],[11,"from",E,E,33,[[[T]],[T]]],[11,R[46],E,E,33,[[["self"]],[T]]],[11,R[47],E,E,33,[[["self"],[T]]]],[11,R[4],E,E,33,[[[U]],[R[3]]]],[11,R[5],E,E,33,[[],[R[3]]]],[11,R[7],E,E,33,[[["self"]],[T]]],[11,R[6],E,E,33,[[["self"]],[T]]],[11,R[8],E,E,33,[[["self"]],[R[9]]]],[11,"into",E,E,34,[[],[U]]],[11,"from",E,E,34,[[[T]],[T]]],[11,R[46],E,E,34,[[["self"]],[T]]],[11,R[47],E,E,34,[[["self"],[T]]]],[11,R[4],E,E,34,[[[U]],[R[3]]]],[11,R[5],E,E,34,[[],[R[3]]]],[11,R[7],E,E,34,[[["self"]],[T]]],[11,R[6],E,E,34,[[["self"]],[T]]],[11,R[8],E,E,34,[[["self"]],[R[9]]]],[11,"into",E,E,35,[[],[U]]],[11,"from",E,E,35,[[[T]],[T]]],[11,R[46],E,E,35,[[["self"]],[T]]],[11,R[47],E,E,35,[[["self"],[T]]]],[11,R[4],E,E,35,[[[U]],[R[3]]]],[11,R[5],E,E,35,[[],[R[3]]]],[11,R[7],E,E,35,[[["self"]],[T]]],[11,R[6],E,E,35,[[["self"]],[T]]],[11,R[8],E,E,35,[[["self"]],[R[9]]]],[11,"into",E,E,36,[[],[U]]],[11,"from",E,E,36,[[[T]],[T]]],[11,R[46],E,E,36,[[["self"]],[T]]],[11,R[47],E,E,36,[[["self"],[T]]]],[11,R[4],E,E,36,[[[U]],[R[3]]]],[11,R[5],E,E,36,[[],[R[3]]]],[11,R[7],E,E,36,[[["self"]],[T]]],[11,R[6],E,E,36,[[["self"]],[T]]],[11,R[8],E,E,36,[[["self"]],[R[9]]]],[11,"into",E,E,37,[[],[U]]],[11,"from",E,E,37,[[[T]],[T]]],[11,R[46],E,E,37,[[["self"]],[T]]],[11,R[47],E,E,37,[[["self"],[T]]]],[11,R[4],E,E,37,[[[U]],[R[3]]]],[11,R[5],E,E,37,[[],[R[3]]]],[11,R[7],E,E,37,[[["self"]],[T]]],[11,R[6],E,E,37,[[["self"]],[T]]],[11,R[8],E,E,37,[[["self"]],[R[9]]]],[11,"into",E,E,38,[[],[U]]],[11,"from",E,E,38,[[[T]],[T]]],[11,R[46],E,E,38,[[["self"]],[T]]],[11,R[47],E,E,38,[[["self"],[T]]]],[11,R[4],E,E,38,[[[U]],[R[3]]]],[11,R[5],E,E,38,[[],[R[3]]]],[11,R[7],E,E,38,[[["self"]],[T]]],[11,R[6],E,E,38,[[["self"]],[T]]],[11,R[8],E,E,38,[[["self"]],[R[9]]]],[11,"into",E,E,39,[[],[U]]],[11,"from",E,E,39,[[[T]],[T]]],[11,R[46],E,E,39,[[["self"]],[T]]],[11,R[47],E,E,39,[[["self"],[T]]]],[11,R[4],E,E,39,[[[U]],[R[3]]]],[11,R[5],E,E,39,[[],[R[3]]]],[11,R[7],E,E,39,[[["self"]],[T]]],[11,R[6],E,E,39,[[["self"]],[T]]],[11,R[8],E,E,39,[[["self"]],[R[9]]]],[11,"into",E,E,40,[[],[U]]],[11,"from",E,E,40,[[[T]],[T]]],[11,R[46],E,E,40,[[["self"]],[T]]],[11,R[47],E,E,40,[[["self"],[T]]]],[11,R[4],E,E,40,[[[U]],[R[3]]]],[11,R[5],E,E,40,[[],[R[3]]]],[11,R[7],E,E,40,[[["self"]],[T]]],[11,R[6],E,E,40,[[["self"]],[T]]],[11,R[8],E,E,40,[[["self"]],[R[9]]]],[11,"into",E,E,41,[[],[U]]],[11,"from",E,E,41,[[[T]],[T]]],[11,R[46],E,E,41,[[["self"]],[T]]],[11,R[47],E,E,41,[[["self"],[T]]]],[11,R[4],E,E,41,[[[U]],[R[3]]]],[11,R[5],E,E,41,[[],[R[3]]]],[11,R[7],E,E,41,[[["self"]],[T]]],[11,R[6],E,E,41,[[["self"]],[T]]],[11,R[8],E,E,41,[[["self"]],[R[9]]]],[11,"into",E,E,42,[[],[U]]],[11,"from",E,E,42,[[[T]],[T]]],[11,R[46],E,E,42,[[["self"]],[T]]],[11,R[47],E,E,42,[[["self"],[T]]]],[11,R[4],E,E,42,[[[U]],[R[3]]]],[11,R[5],E,E,42,[[],[R[3]]]],[11,R[7],E,E,42,[[["self"]],[T]]],[11,R[6],E,E,42,[[["self"]],[T]]],[11,R[8],E,E,42,[[["self"]],[R[9]]]],[11,"into",E,E,43,[[],[U]]],[11,"from",E,E,43,[[[T]],[T]]],[11,R[46],E,E,43,[[["self"]],[T]]],[11,R[47],E,E,43,[[["self"],[T]]]],[11,R[4],E,E,43,[[[U]],[R[3]]]],[11,R[5],E,E,43,[[],[R[3]]]],[11,R[7],E,E,43,[[["self"]],[T]]],[11,R[6],E,E,43,[[["self"]],[T]]],[11,R[8],E,E,43,[[["self"]],[R[9]]]],[11,"into",E,E,44,[[],[U]]],[11,"from",E,E,44,[[[T]],[T]]],[11,R[46],E,E,44,[[["self"]],[T]]],[11,R[47],E,E,44,[[["self"],[T]]]],[11,R[4],E,E,44,[[[U]],[R[3]]]],[11,R[5],E,E,44,[[],[R[3]]]],[11,R[7],E,E,44,[[["self"]],[T]]],[11,R[6],E,E,44,[[["self"]],[T]]],[11,R[8],E,E,44,[[["self"]],[R[9]]]],[11,"into",E,E,45,[[],[U]]],[11,"from",E,E,45,[[[T]],[T]]],[11,R[46],E,E,45,[[["self"]],[T]]],[11,R[47],E,E,45,[[["self"],[T]]]],[11,R[4],E,E,45,[[[U]],[R[3]]]],[11,R[5],E,E,45,[[],[R[3]]]],[11,R[7],E,E,45,[[["self"]],[T]]],[11,R[6],E,E,45,[[["self"]],[T]]],[11,R[8],E,E,45,[[["self"]],[R[9]]]],[11,"into",E,E,46,[[],[U]]],[11,"from",E,E,46,[[[T]],[T]]],[11,R[46],E,E,46,[[["self"]],[T]]],[11,R[47],E,E,46,[[["self"],[T]]]],[11,R[4],E,E,46,[[[U]],[R[3]]]],[11,R[5],E,E,46,[[],[R[3]]]],[11,R[7],E,E,46,[[["self"]],[T]]],[11,R[6],E,E,46,[[["self"]],[T]]],[11,R[8],E,E,46,[[["self"]],[R[9]]]],[11,"into",E,E,47,[[],[U]]],[11,"from",E,E,47,[[[T]],[T]]],[11,R[46],E,E,47,[[["self"]],[T]]],[11,R[47],E,E,47,[[["self"],[T]]]],[11,R[4],E,E,47,[[[U]],[R[3]]]],[11,R[5],E,E,47,[[],[R[3]]]],[11,R[7],E,E,47,[[["self"]],[T]]],[11,R[6],E,E,47,[[["self"]],[T]]],[11,R[8],E,E,47,[[["self"]],[R[9]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[46],E,E,1,[[["self"]],[T]]],[11,R[47],E,E,1,[[["self"],[T]]]],[11,R[4],E,E,1,[[[U]],[R[3]]]],[11,R[5],E,E,1,[[],[R[3]]]],[11,R[7],E,E,1,[[["self"]],[T]]],[11,R[6],E,E,1,[[["self"]],[T]]],[11,R[8],E,E,1,[[["self"]],[R[9]]]],[11,"into",E,E,48,[[],[U]]],[11,"from",E,E,48,[[[T]],[T]]],[11,R[46],E,E,48,[[["self"]],[T]]],[11,R[47],E,E,48,[[["self"],[T]]]],[11,R[4],E,E,48,[[[U]],[R[3]]]],[11,R[5],E,E,48,[[],[R[3]]]],[11,R[7],E,E,48,[[["self"]],[T]]],[11,R[6],E,E,48,[[["self"]],[T]]],[11,R[8],E,E,48,[[["self"]],[R[9]]]],[11,"into",E,E,49,[[],[U]]],[11,"from",E,E,49,[[[T]],[T]]],[11,R[46],E,E,49,[[["self"]],[T]]],[11,R[47],E,E,49,[[["self"],[T]]]],[11,R[4],E,E,49,[[[U]],[R[3]]]],[11,R[5],E,E,49,[[],[R[3]]]],[11,R[7],E,E,49,[[["self"]],[T]]],[11,R[6],E,E,49,[[["self"]],[T]]],[11,R[8],E,E,49,[[["self"]],[R[9]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[46],E,E,2,[[["self"]],[T]]],[11,R[47],E,E,2,[[["self"],[T]]]],[11,R[4],E,E,2,[[[U]],[R[3]]]],[11,R[5],E,E,2,[[],[R[3]]]],[11,R[7],E,E,2,[[["self"]],[T]]],[11,R[6],E,E,2,[[["self"]],[T]]],[11,R[8],E,E,2,[[["self"]],[R[9]]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[46],E,E,3,[[["self"]],[T]]],[11,R[47],E,E,3,[[["self"],[T]]]],[11,R[4],E,E,3,[[[U]],[R[3]]]],[11,R[5],E,E,3,[[],[R[3]]]],[11,R[7],E,E,3,[[["self"]],[T]]],[11,R[6],E,E,3,[[["self"]],[T]]],[11,R[8],E,E,3,[[["self"]],[R[9]]]],[11,"into",E,E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[46],E,E,4,[[["self"]],[T]]],[11,R[47],E,E,4,[[["self"],[T]]]],[11,R[4],E,E,4,[[[U]],[R[3]]]],[11,R[5],E,E,4,[[],[R[3]]]],[11,R[7],E,E,4,[[["self"]],[T]]],[11,R[6],E,E,4,[[["self"]],[T]]],[11,R[8],E,E,4,[[["self"]],[R[9]]]],[11,"into",E,E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[46],E,E,5,[[["self"]],[T]]],[11,R[47],E,E,5,[[["self"],[T]]]],[11,R[4],E,E,5,[[[U]],[R[3]]]],[11,R[5],E,E,5,[[],[R[3]]]],[11,R[7],E,E,5,[[["self"]],[T]]],[11,R[6],E,E,5,[[["self"]],[T]]],[11,R[8],E,E,5,[[["self"]],[R[9]]]],[11,"into",E,E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[46],E,E,6,[[["self"]],[T]]],[11,R[47],E,E,6,[[["self"],[T]]]],[11,R[4],E,E,6,[[[U]],[R[3]]]],[11,R[5],E,E,6,[[],[R[3]]]],[11,R[7],E,E,6,[[["self"]],[T]]],[11,R[6],E,E,6,[[["self"]],[T]]],[11,R[8],E,E,6,[[["self"]],[R[9]]]],[11,"into",R[4527],E,50,[[],[U]]],[11,"from",E,E,50,[[[T]],[T]]],[11,R[4],E,E,50,[[[U]],[R[3]]]],[11,R[5],E,E,50,[[],[R[3]]]],[11,R[7],E,E,50,[[["self"]],[T]]],[11,R[6],E,E,50,[[["self"]],[T]]],[11,R[8],E,E,50,[[["self"]],[R[9]]]],[11,R[4354],R[4519],E,28,[[["d"]],[[R[3],[R[4530]]],[R[4530]]]]],[11,R[4384],R[4518],E,30,[[["v"]],[R[3]]]],[11,R[4386],E,E,30,[[["v"]],[R[3]]]],[11,R[4388],E,E,30,[[["v"]],[R[3]]]],[11,R[4390],E,E,30,[[["v"]],[R[3]]]],[11,R[4392],E,E,30,[[["v"]],[R[3]]]],[11,R[4394],E,E,30,[[["v"]],[R[3]]]],[11,R[4396],E,E,30,[[["v"]],[R[3]]]],[11,R[4398],E,E,30,[[["v"]],[R[3]]]],[11,R[4400],E,E,30,[[["v"]],[R[3]]]],[11,R[4402],E,E,30,[[["v"]],[R[3]]]],[11,R[4404],E,E,30,[[["v"]],[R[3]]]],[11,R[4406],E,E,30,[[["v"]],[R[3]]]],[11,R[4408],E,E,30,[[["v"]],[R[3]]]],[11,R[4410],E,E,30,[[["v"]],[R[3]]]],[11,R[4412],E,E,30,[[["v"]],[R[3]]]],[11,R[4413],E,E,30,[[["v"]],[R[3]]]],[11,R[4414],E,E,30,[[["v"]],[R[3]]]],[11,R[4415],E,E,30,[[["v"]],[R[3]]]],[11,R[4418],E,E,30,[[["v"]],[R[3]]]],[11,R[4420],E,E,30,[[["v"],["str"]],[R[3]]]],[11,R[4422],E,E,30,[[["v"],["str"]],[R[3]]]],[11,R[4424],E,E,30,[[["v"]],[R[3]]]],[11,R[4425],E,E,30,[[["usize"],["v"]],[R[3]]]],[11,R[4426],E,E,30,[[["v"],["usize"],["str"]],[R[3]]]],[11,R[4428],E,E,30,[[["v"]],[R[3]]]],[11,R[4430],E,E,30,[[["v"],["str"]],[R[3]]]],[11,R[4432],E,E,30,[[["v"],["str"]],[R[3]]]],[11,R[4434],E,E,30,[[["v"]],[R[3]]]],[11,R[4436],E,E,30,[[["v"]],[R[3]]]],[11,R[4382],E,E,30,[[["v"]],[R[3]]]],[11,R[4416],E,E,30,[[["v"]],[R[3]]]],[11,R[4384],E,E,31,[[["v"]],[R[3]]]],[11,R[4386],E,E,31,[[["v"]],[R[3]]]],[11,R[4388],E,E,31,[[["v"]],[R[3]]]],[11,R[4390],E,E,31,[[["v"]],[R[3]]]],[11,R[4392],E,E,31,[[["v"]],[R[3]]]],[11,R[4394],E,E,31,[[["v"]],[R[3]]]],[11,R[4396],E,E,31,[[["v"]],[R[3]]]],[11,R[4398],E,E,31,[[["v"]],[R[3]]]],[11,R[4400],E,E,31,[[["v"]],[R[3]]]],[11,R[4402],E,E,31,[[["v"]],[R[3]]]],[11,R[4404],E,E,31,[[["v"]],[R[3]]]],[11,R[4406],E,E,31,[[["v"]],[R[3]]]],[11,R[4408],E,E,31,[[["v"]],[R[3]]]],[11,R[4410],E,E,31,[[["v"]],[R[3]]]],[11,R[4412],E,E,31,[[["v"]],[R[3]]]],[11,R[4413],E,E,31,[[["v"]],[R[3]]]],[11,R[4414],E,E,31,[[["v"]],[R[3]]]],[11,R[4415],E,E,31,[[["v"]],[R[3]]]],[11,R[4416],E,E,31,[[["v"]],[R[3]]]],[11,R[4418],E,E,31,[[["v"]],[R[3]]]],[11,R[4420],E,E,31,[[["v"],["str"]],[R[3]]]],[11,R[4422],E,E,31,[[["v"],["str"]],[R[3]]]],[11,R[4424],E,E,31,[[["v"]],[R[3]]]],[11,R[4425],E,E,31,[[["usize"],["v"]],[R[3]]]],[11,R[4426],E,E,31,[[["v"],["usize"],["str"]],[R[3]]]],[11,R[4428],E,E,31,[[["v"]],[R[3]]]],[11,R[4430],E,E,31,[[["v"],["str"]],[R[3]]]],[11,R[4432],E,E,31,[[["v"],["str"]],[R[3]]]],[11,R[4434],E,E,31,[[["v"]],[R[3]]]],[11,R[4436],E,E,31,[[["v"]],[R[3]]]],[11,R[4382],E,E,31,[[["v"]],[R[3]]]],[11,R[4384],E,E,32,[[["v"]],[R[3]]]],[11,R[4386],E,E,32,[[["v"]],[R[3]]]],[11,R[4388],E,E,32,[[["v"]],[R[3]]]],[11,R[4390],E,E,32,[[["v"]],[R[3]]]],[11,R[4392],E,E,32,[[["v"]],[R[3]]]],[11,R[4394],E,E,32,[[["v"]],[R[3]]]],[11,R[4396],E,E,32,[[["v"]],[R[3]]]],[11,R[4398],E,E,32,[[["v"]],[R[3]]]],[11,R[4400],E,E,32,[[["v"]],[R[3]]]],[11,R[4402],E,E,32,[[["v"]],[R[3]]]],[11,R[4404],E,E,32,[[["v"]],[R[3]]]],[11,R[4406],E,E,32,[[["v"]],[R[3]]]],[11,R[4408],E,E,32,[[["v"]],[R[3]]]],[11,R[4410],E,E,32,[[["v"]],[R[3]]]],[11,R[4412],E,E,32,[[["v"]],[R[3]]]],[11,R[4413],E,E,32,[[["v"]],[R[3]]]],[11,R[4414],E,E,32,[[["v"]],[R[3]]]],[11,R[4415],E,E,32,[[["v"]],[R[3]]]],[11,R[4416],E,E,32,[[["v"]],[R[3]]]],[11,R[4418],E,E,32,[[["v"]],[R[3]]]],[11,R[4420],E,E,32,[[["v"],["str"]],[R[3]]]],[11,R[4422],E,E,32,[[["v"],["str"]],[R[3]]]],[11,R[4424],E,E,32,[[["v"]],[R[3]]]],[11,R[4425],E,E,32,[[["usize"],["v"]],[R[3]]]],[11,R[4426],E,E,32,[[["v"],["usize"],["str"]],[R[3]]]],[11,R[4428],E,E,32,[[["v"]],[R[3]]]],[11,R[4430],E,E,32,[[["v"],["str"]],[R[3]]]],[11,R[4432],E,E,32,[[["v"],["str"]],[R[3]]]],[11,R[4434],E,E,32,[[["v"]],[R[3]]]],[11,R[4436],E,E,32,[[["v"]],[R[3]]]],[11,R[4382],E,E,32,[[["v"]],[R[3]]]],[11,R[4384],E,E,33,[[["v"]],[R[3]]]],[11,R[4386],E,E,33,[[["v"]],[R[3]]]],[11,R[4388],E,E,33,[[["v"]],[R[3]]]],[11,R[4390],E,E,33,[[["v"]],[R[3]]]],[11,R[4392],E,E,33,[[["v"]],[R[3]]]],[11,R[4394],E,E,33,[[["v"]],[R[3]]]],[11,R[4396],E,E,33,[[["v"]],[R[3]]]],[11,R[4398],E,E,33,[[["v"]],[R[3]]]],[11,R[4400],E,E,33,[[["v"]],[R[3]]]],[11,R[4402],E,E,33,[[["v"]],[R[3]]]],[11,R[4404],E,E,33,[[["v"]],[R[3]]]],[11,R[4406],E,E,33,[[["v"]],[R[3]]]],[11,R[4408],E,E,33,[[["v"]],[R[3]]]],[11,R[4410],E,E,33,[[["v"]],[R[3]]]],[11,R[4412],E,E,33,[[["v"]],[R[3]]]],[11,R[4413],E,E,33,[[["v"]],[R[3]]]],[11,R[4414],E,E,33,[[["v"]],[R[3]]]],[11,R[4415],E,E,33,[[["v"]],[R[3]]]],[11,R[4416],E,E,33,[[["v"]],[R[3]]]],[11,R[4418],E,E,33,[[["v"]],[R[3]]]],[11,R[4420],E,E,33,[[["v"],["str"]],[R[3]]]],[11,R[4422],E,E,33,[[["v"],["str"]],[R[3]]]],[11,R[4424],E,E,33,[[["v"]],[R[3]]]],[11,R[4425],E,E,33,[[["usize"],["v"]],[R[3]]]],[11,R[4426],E,E,33,[[["v"],["usize"],["str"]],[R[3]]]],[11,R[4428],E,E,33,[[["v"]],[R[3]]]],[11,R[4430],E,E,33,[[["v"],["str"]],[R[3]]]],[11,R[4432],E,E,33,[[["v"],["str"]],[R[3]]]],[11,R[4434],E,E,33,[[["v"]],[R[3]]]],[11,R[4436],E,E,33,[[["v"]],[R[3]]]],[11,R[4382],E,E,33,[[["v"]],[R[3]]]],[11,R[4384],E,E,34,[[["v"]],[R[3]]]],[11,R[4386],E,E,34,[[["v"]],[R[3]]]],[11,R[4388],E,E,34,[[["v"]],[R[3]]]],[11,R[4390],E,E,34,[[["v"]],[R[3]]]],[11,R[4392],E,E,34,[[["v"]],[R[3]]]],[11,R[4394],E,E,34,[[["v"]],[R[3]]]],[11,R[4396],E,E,34,[[["v"]],[R[3]]]],[11,R[4398],E,E,34,[[["v"]],[R[3]]]],[11,R[4400],E,E,34,[[["v"]],[R[3]]]],[11,R[4402],E,E,34,[[["v"]],[R[3]]]],[11,R[4404],E,E,34,[[["v"]],[R[3]]]],[11,R[4406],E,E,34,[[["v"]],[R[3]]]],[11,R[4408],E,E,34,[[["v"]],[R[3]]]],[11,R[4410],E,E,34,[[["v"]],[R[3]]]],[11,R[4412],E,E,34,[[["v"]],[R[3]]]],[11,R[4413],E,E,34,[[["v"]],[R[3]]]],[11,R[4414],E,E,34,[[["v"]],[R[3]]]],[11,R[4415],E,E,34,[[["v"]],[R[3]]]],[11,R[4416],E,E,34,[[["v"]],[R[3]]]],[11,R[4418],E,E,34,[[["v"]],[R[3]]]],[11,R[4420],E,E,34,[[["v"],["str"]],[R[3]]]],[11,R[4422],E,E,34,[[["v"],["str"]],[R[3]]]],[11,R[4424],E,E,34,[[["v"]],[R[3]]]],[11,R[4425],E,E,34,[[["usize"],["v"]],[R[3]]]],[11,R[4426],E,E,34,[[["v"],["usize"],["str"]],[R[3]]]],[11,R[4428],E,E,34,[[["v"]],[R[3]]]],[11,R[4430],E,E,34,[[["v"],["str"]],[R[3]]]],[11,R[4432],E,E,34,[[["v"],["str"]],[R[3]]]],[11,R[4434],E,E,34,[[["v"]],[R[3]]]],[11,R[4436],E,E,34,[[["v"]],[R[3]]]],[11,R[4382],E,E,34,[[["v"]],[R[3]]]],[11,R[4384],E,E,35,[[["v"]],[R[3]]]],[11,R[4386],E,E,35,[[["v"]],[R[3]]]],[11,R[4388],E,E,35,[[["v"]],[R[3]]]],[11,R[4390],E,E,35,[[["v"]],[R[3]]]],[11,R[4392],E,E,35,[[["v"]],[R[3]]]],[11,R[4394],E,E,35,[[["v"]],[R[3]]]],[11,R[4396],E,E,35,[[["v"]],[R[3]]]],[11,R[4398],E,E,35,[[["v"]],[R[3]]]],[11,R[4400],E,E,35,[[["v"]],[R[3]]]],[11,R[4402],E,E,35,[[["v"]],[R[3]]]],[11,R[4404],E,E,35,[[["v"]],[R[3]]]],[11,R[4406],E,E,35,[[["v"]],[R[3]]]],[11,R[4408],E,E,35,[[["v"]],[R[3]]]],[11,R[4410],E,E,35,[[["v"]],[R[3]]]],[11,R[4412],E,E,35,[[["v"]],[R[3]]]],[11,R[4413],E,E,35,[[["v"]],[R[3]]]],[11,R[4414],E,E,35,[[["v"]],[R[3]]]],[11,R[4415],E,E,35,[[["v"]],[R[3]]]],[11,R[4416],E,E,35,[[["v"]],[R[3]]]],[11,R[4418],E,E,35,[[["v"]],[R[3]]]],[11,R[4420],E,E,35,[[["v"],["str"]],[R[3]]]],[11,R[4422],E,E,35,[[["v"],["str"]],[R[3]]]],[11,R[4424],E,E,35,[[["v"]],[R[3]]]],[11,R[4425],E,E,35,[[["usize"],["v"]],[R[3]]]],[11,R[4426],E,E,35,[[["v"],["usize"],["str"]],[R[3]]]],[11,R[4428],E,E,35,[[["v"]],[R[3]]]],[11,R[4430],E,E,35,[[["v"],["str"]],[R[3]]]],[11,R[4432],E,E,35,[[["v"],["str"]],[R[3]]]],[11,R[4434],E,E,35,[[["v"]],[R[3]]]],[11,R[4436],E,E,35,[[["v"]],[R[3]]]],[11,R[4382],E,E,35,[[["v"]],[R[3]]]],[11,R[4384],E,E,36,[[["v"]],[R[3]]]],[11,R[4386],E,E,36,[[["v"]],[R[3]]]],[11,R[4388],E,E,36,[[["v"]],[R[3]]]],[11,R[4390],E,E,36,[[["v"]],[R[3]]]],[11,R[4392],E,E,36,[[["v"]],[R[3]]]],[11,R[4394],E,E,36,[[["v"]],[R[3]]]],[11,R[4396],E,E,36,[[["v"]],[R[3]]]],[11,R[4398],E,E,36,[[["v"]],[R[3]]]],[11,R[4400],E,E,36,[[["v"]],[R[3]]]],[11,R[4402],E,E,36,[[["v"]],[R[3]]]],[11,R[4404],E,E,36,[[["v"]],[R[3]]]],[11,R[4406],E,E,36,[[["v"]],[R[3]]]],[11,R[4408],E,E,36,[[["v"]],[R[3]]]],[11,R[4410],E,E,36,[[["v"]],[R[3]]]],[11,R[4412],E,E,36,[[["v"]],[R[3]]]],[11,R[4413],E,E,36,[[["v"]],[R[3]]]],[11,R[4414],E,E,36,[[["v"]],[R[3]]]],[11,R[4415],E,E,36,[[["v"]],[R[3]]]],[11,R[4416],E,E,36,[[["v"]],[R[3]]]],[11,R[4418],E,E,36,[[["v"]],[R[3]]]],[11,R[4420],E,E,36,[[["v"],["str"]],[R[3]]]],[11,R[4422],E,E,36,[[["v"],["str"]],[R[3]]]],[11,R[4424],E,E,36,[[["v"]],[R[3]]]],[11,R[4425],E,E,36,[[["usize"],["v"]],[R[3]]]],[11,R[4426],E,E,36,[[["v"],["usize"],["str"]],[R[3]]]],[11,R[4428],E,E,36,[[["v"]],[R[3]]]],[11,R[4430],E,E,36,[[["v"],["str"]],[R[3]]]],[11,R[4432],E,E,36,[[["v"],["str"]],[R[3]]]],[11,R[4434],E,E,36,[[["v"]],[R[3]]]],[11,R[4436],E,E,36,[[["v"]],[R[3]]]],[11,R[4382],E,E,36,[[["v"]],[R[3]]]],[11,R[4384],E,E,37,[[["v"]],[R[3]]]],[11,R[4386],E,E,37,[[["v"]],[R[3]]]],[11,R[4388],E,E,37,[[["v"]],[R[3]]]],[11,R[4390],E,E,37,[[["v"]],[R[3]]]],[11,R[4392],E,E,37,[[["v"]],[R[3]]]],[11,R[4394],E,E,37,[[["v"]],[R[3]]]],[11,R[4396],E,E,37,[[["v"]],[R[3]]]],[11,R[4398],E,E,37,[[["v"]],[R[3]]]],[11,R[4400],E,E,37,[[["v"]],[R[3]]]],[11,R[4402],E,E,37,[[["v"]],[R[3]]]],[11,R[4404],E,E,37,[[["v"]],[R[3]]]],[11,R[4406],E,E,37,[[["v"]],[R[3]]]],[11,R[4408],E,E,37,[[["v"]],[R[3]]]],[11,R[4410],E,E,37,[[["v"]],[R[3]]]],[11,R[4412],E,E,37,[[["v"]],[R[3]]]],[11,R[4413],E,E,37,[[["v"]],[R[3]]]],[11,R[4414],E,E,37,[[["v"]],[R[3]]]],[11,R[4415],E,E,37,[[["v"]],[R[3]]]],[11,R[4416],E,E,37,[[["v"]],[R[3]]]],[11,R[4418],E,E,37,[[["v"]],[R[3]]]],[11,R[4420],E,E,37,[[["v"],["str"]],[R[3]]]],[11,R[4422],E,E,37,[[["v"],["str"]],[R[3]]]],[11,R[4424],E,E,37,[[["v"]],[R[3]]]],[11,R[4425],E,E,37,[[["usize"],["v"]],[R[3]]]],[11,R[4426],E,E,37,[[["v"],["usize"],["str"]],[R[3]]]],[11,R[4428],E,E,37,[[["v"]],[R[3]]]],[11,R[4430],E,E,37,[[["v"],["str"]],[R[3]]]],[11,R[4432],E,E,37,[[["v"],["str"]],[R[3]]]],[11,R[4434],E,E,37,[[["v"]],[R[3]]]],[11,R[4436],E,E,37,[[["v"]],[R[3]]]],[11,R[4382],E,E,37,[[["v"]],[R[3]]]],[11,R[4384],E,E,38,[[["v"]],[R[3]]]],[11,R[4386],E,E,38,[[["v"]],[R[3]]]],[11,R[4388],E,E,38,[[["v"]],[R[3]]]],[11,R[4390],E,E,38,[[["v"]],[R[3]]]],[11,R[4392],E,E,38,[[["v"]],[R[3]]]],[11,R[4394],E,E,38,[[["v"]],[R[3]]]],[11,R[4396],E,E,38,[[["v"]],[R[3]]]],[11,R[4398],E,E,38,[[["v"]],[R[3]]]],[11,R[4400],E,E,38,[[["v"]],[R[3]]]],[11,R[4402],E,E,38,[[["v"]],[R[3]]]],[11,R[4404],E,E,38,[[["v"]],[R[3]]]],[11,R[4406],E,E,38,[[["v"]],[R[3]]]],[11,R[4408],E,E,38,[[["v"]],[R[3]]]],[11,R[4410],E,E,38,[[["v"]],[R[3]]]],[11,R[4412],E,E,38,[[["v"]],[R[3]]]],[11,R[4413],E,E,38,[[["v"]],[R[3]]]],[11,R[4414],E,E,38,[[["v"]],[R[3]]]],[11,R[4415],E,E,38,[[["v"]],[R[3]]]],[11,R[4416],E,E,38,[[["v"]],[R[3]]]],[11,R[4418],E,E,38,[[["v"]],[R[3]]]],[11,R[4420],E,E,38,[[["v"],["str"]],[R[3]]]],[11,R[4422],E,E,38,[[["v"],["str"]],[R[3]]]],[11,R[4424],E,E,38,[[["v"]],[R[3]]]],[11,R[4425],E,E,38,[[["usize"],["v"]],[R[3]]]],[11,R[4426],E,E,38,[[["v"],["usize"],["str"]],[R[3]]]],[11,R[4428],E,E,38,[[["v"]],[R[3]]]],[11,R[4430],E,E,38,[[["v"],["str"]],[R[3]]]],[11,R[4432],E,E,38,[[["v"],["str"]],[R[3]]]],[11,R[4434],E,E,38,[[["v"]],[R[3]]]],[11,R[4436],E,E,38,[[["v"]],[R[3]]]],[11,R[4382],E,E,38,[[["v"]],[R[3]]]],[11,R[4384],E,E,39,[[["v"]],[R[3]]]],[11,R[4386],E,E,39,[[["v"]],[R[3]]]],[11,R[4388],E,E,39,[[["v"]],[R[3]]]],[11,R[4390],E,E,39,[[["v"]],[R[3]]]],[11,R[4392],E,E,39,[[["v"]],[R[3]]]],[11,R[4394],E,E,39,[[["v"]],[R[3]]]],[11,R[4396],E,E,39,[[["v"]],[R[3]]]],[11,R[4398],E,E,39,[[["v"]],[R[3]]]],[11,R[4400],E,E,39,[[["v"]],[R[3]]]],[11,R[4402],E,E,39,[[["v"]],[R[3]]]],[11,R[4404],E,E,39,[[["v"]],[R[3]]]],[11,R[4406],E,E,39,[[["v"]],[R[3]]]],[11,R[4408],E,E,39,[[["v"]],[R[3]]]],[11,R[4410],E,E,39,[[["v"]],[R[3]]]],[11,R[4412],E,E,39,[[["v"]],[R[3]]]],[11,R[4413],E,E,39,[[["v"]],[R[3]]]],[11,R[4414],E,E,39,[[["v"]],[R[3]]]],[11,R[4415],E,E,39,[[["v"]],[R[3]]]],[11,R[4416],E,E,39,[[["v"]],[R[3]]]],[11,R[4418],E,E,39,[[["v"]],[R[3]]]],[11,R[4420],E,E,39,[[["v"],["str"]],[R[3]]]],[11,R[4422],E,E,39,[[["v"],["str"]],[R[3]]]],[11,R[4424],E,E,39,[[["v"]],[R[3]]]],[11,R[4425],E,E,39,[[["usize"],["v"]],[R[3]]]],[11,R[4426],E,E,39,[[["v"],["usize"],["str"]],[R[3]]]],[11,R[4428],E,E,39,[[["v"]],[R[3]]]],[11,R[4430],E,E,39,[[["v"],["str"]],[R[3]]]],[11,R[4432],E,E,39,[[["v"],["str"]],[R[3]]]],[11,R[4434],E,E,39,[[["v"]],[R[3]]]],[11,R[4436],E,E,39,[[["v"]],[R[3]]]],[11,R[4382],E,E,39,[[["v"]],[R[3]]]],[11,R[4384],E,E,40,[[["v"]],[R[3]]]],[11,R[4386],E,E,40,[[["v"]],[R[3]]]],[11,R[4388],E,E,40,[[["v"]],[R[3]]]],[11,R[4390],E,E,40,[[["v"]],[R[3]]]],[11,R[4392],E,E,40,[[["v"]],[R[3]]]],[11,R[4394],E,E,40,[[["v"]],[R[3]]]],[11,R[4396],E,E,40,[[["v"]],[R[3]]]],[11,R[4398],E,E,40,[[["v"]],[R[3]]]],[11,R[4400],E,E,40,[[["v"]],[R[3]]]],[11,R[4402],E,E,40,[[["v"]],[R[3]]]],[11,R[4404],E,E,40,[[["v"]],[R[3]]]],[11,R[4406],E,E,40,[[["v"]],[R[3]]]],[11,R[4408],E,E,40,[[["v"]],[R[3]]]],[11,R[4410],E,E,40,[[["v"]],[R[3]]]],[11,R[4412],E,E,40,[[["v"]],[R[3]]]],[11,R[4413],E,E,40,[[["v"]],[R[3]]]],[11,R[4414],E,E,40,[[["v"]],[R[3]]]],[11,R[4415],E,E,40,[[["v"]],[R[3]]]],[11,R[4416],E,E,40,[[["v"]],[R[3]]]],[11,R[4418],E,E,40,[[["v"]],[R[3]]]],[11,R[4420],E,E,40,[[["v"],["str"]],[R[3]]]],[11,R[4422],E,E,40,[[["v"],["str"]],[R[3]]]],[11,R[4424],E,E,40,[[["v"]],[R[3]]]],[11,R[4425],E,E,40,[[["usize"],["v"]],[R[3]]]],[11,R[4426],E,E,40,[[["v"],["usize"],["str"]],[R[3]]]],[11,R[4428],E,E,40,[[["v"]],[R[3]]]],[11,R[4430],E,E,40,[[["v"],["str"]],[R[3]]]],[11,R[4432],E,E,40,[[["v"],["str"]],[R[3]]]],[11,R[4434],E,E,40,[[["v"]],[R[3]]]],[11,R[4436],E,E,40,[[["v"]],[R[3]]]],[11,R[4382],E,E,40,[[["v"]],[R[3]]]],[11,R[4384],E,E,41,[[["v"]],[R[3]]]],[11,R[4386],E,E,41,[[["v"]],[R[3]]]],[11,R[4388],E,E,41,[[["v"]],[R[3]]]],[11,R[4390],E,E,41,[[["v"]],[R[3]]]],[11,R[4392],E,E,41,[[["v"]],[R[3]]]],[11,R[4394],E,E,41,[[["v"]],[R[3]]]],[11,R[4396],E,E,41,[[["v"]],[R[3]]]],[11,R[4398],E,E,41,[[["v"]],[R[3]]]],[11,R[4400],E,E,41,[[["v"]],[R[3]]]],[11,R[4402],E,E,41,[[["v"]],[R[3]]]],[11,R[4404],E,E,41,[[["v"]],[R[3]]]],[11,R[4406],E,E,41,[[["v"]],[R[3]]]],[11,R[4408],E,E,41,[[["v"]],[R[3]]]],[11,R[4410],E,E,41,[[["v"]],[R[3]]]],[11,R[4412],E,E,41,[[["v"]],[R[3]]]],[11,R[4413],E,E,41,[[["v"]],[R[3]]]],[11,R[4414],E,E,41,[[["v"]],[R[3]]]],[11,R[4415],E,E,41,[[["v"]],[R[3]]]],[11,R[4416],E,E,41,[[["v"]],[R[3]]]],[11,R[4418],E,E,41,[[["v"]],[R[3]]]],[11,R[4420],E,E,41,[[["v"],["str"]],[R[3]]]],[11,R[4422],E,E,41,[[["v"],["str"]],[R[3]]]],[11,R[4424],E,E,41,[[["v"]],[R[3]]]],[11,R[4425],E,E,41,[[["usize"],["v"]],[R[3]]]],[11,R[4426],E,E,41,[[["v"],["usize"],["str"]],[R[3]]]],[11,R[4428],E,E,41,[[["v"]],[R[3]]]],[11,R[4430],E,E,41,[[["v"],["str"]],[R[3]]]],[11,R[4432],E,E,41,[[["v"],["str"]],[R[3]]]],[11,R[4434],E,E,41,[[["v"]],[R[3]]]],[11,R[4436],E,E,41,[[["v"]],[R[3]]]],[11,R[4382],E,E,41,[[["v"]],[R[3]]]],[11,R[4384],E,E,42,[[["v"]],[R[3]]]],[11,R[4386],E,E,42,[[["v"]],[R[3]]]],[11,R[4388],E,E,42,[[["v"]],[R[3]]]],[11,R[4390],E,E,42,[[["v"]],[R[3]]]],[11,R[4392],E,E,42,[[["v"]],[R[3]]]],[11,R[4394],E,E,42,[[["v"]],[R[3]]]],[11,R[4396],E,E,42,[[["v"]],[R[3]]]],[11,R[4398],E,E,42,[[["v"]],[R[3]]]],[11,R[4400],E,E,42,[[["v"]],[R[3]]]],[11,R[4402],E,E,42,[[["v"]],[R[3]]]],[11,R[4404],E,E,42,[[["v"]],[R[3]]]],[11,R[4406],E,E,42,[[["v"]],[R[3]]]],[11,R[4408],E,E,42,[[["v"]],[R[3]]]],[11,R[4410],E,E,42,[[["v"]],[R[3]]]],[11,R[4412],E,E,42,[[["v"]],[R[3]]]],[11,R[4413],E,E,42,[[["v"]],[R[3]]]],[11,R[4414],E,E,42,[[["v"]],[R[3]]]],[11,R[4415],E,E,42,[[["v"]],[R[3]]]],[11,R[4416],E,E,42,[[["v"]],[R[3]]]],[11,R[4418],E,E,42,[[["v"]],[R[3]]]],[11,R[4420],E,E,42,[[["v"],["str"]],[R[3]]]],[11,R[4422],E,E,42,[[["v"],["str"]],[R[3]]]],[11,R[4424],E,E,42,[[["v"]],[R[3]]]],[11,R[4425],E,E,42,[[["usize"],["v"]],[R[3]]]],[11,R[4426],E,E,42,[[["v"],["usize"],["str"]],[R[3]]]],[11,R[4428],E,E,42,[[["v"]],[R[3]]]],[11,R[4430],E,E,42,[[["v"],["str"]],[R[3]]]],[11,R[4432],E,E,42,[[["v"],["str"]],[R[3]]]],[11,R[4434],E,E,42,[[["v"]],[R[3]]]],[11,R[4436],E,E,42,[[["v"]],[R[3]]]],[11,R[4382],E,E,42,[[["v"]],[R[3]]]],[11,R[4384],E,E,43,[[["v"]],[R[3]]]],[11,R[4386],E,E,43,[[["v"]],[R[3]]]],[11,R[4388],E,E,43,[[["v"]],[R[3]]]],[11,R[4390],E,E,43,[[["v"]],[R[3]]]],[11,R[4392],E,E,43,[[["v"]],[R[3]]]],[11,R[4394],E,E,43,[[["v"]],[R[3]]]],[11,R[4396],E,E,43,[[["v"]],[R[3]]]],[11,R[4398],E,E,43,[[["v"]],[R[3]]]],[11,R[4400],E,E,43,[[["v"]],[R[3]]]],[11,R[4402],E,E,43,[[["v"]],[R[3]]]],[11,R[4404],E,E,43,[[["v"]],[R[3]]]],[11,R[4406],E,E,43,[[["v"]],[R[3]]]],[11,R[4408],E,E,43,[[["v"]],[R[3]]]],[11,R[4410],E,E,43,[[["v"]],[R[3]]]],[11,R[4412],E,E,43,[[["v"]],[R[3]]]],[11,R[4413],E,E,43,[[["v"]],[R[3]]]],[11,R[4414],E,E,43,[[["v"]],[R[3]]]],[11,R[4415],E,E,43,[[["v"]],[R[3]]]],[11,R[4416],E,E,43,[[["v"]],[R[3]]]],[11,R[4418],E,E,43,[[["v"]],[R[3]]]],[11,R[4420],E,E,43,[[["v"],["str"]],[R[3]]]],[11,R[4422],E,E,43,[[["v"],["str"]],[R[3]]]],[11,R[4424],E,E,43,[[["v"]],[R[3]]]],[11,R[4425],E,E,43,[[["usize"],["v"]],[R[3]]]],[11,R[4426],E,E,43,[[["v"],["usize"],["str"]],[R[3]]]],[11,R[4428],E,E,43,[[["v"]],[R[3]]]],[11,R[4430],E,E,43,[[["v"],["str"]],[R[3]]]],[11,R[4432],E,E,43,[[["v"],["str"]],[R[3]]]],[11,R[4434],E,E,43,[[["v"]],[R[3]]]],[11,R[4436],E,E,43,[[["v"]],[R[3]]]],[11,R[4382],E,E,43,[[["v"]],[R[3]]]],[11,R[4384],E,E,44,[[["v"]],[R[3]]]],[11,R[4386],E,E,44,[[["v"]],[R[3]]]],[11,R[4388],E,E,44,[[["v"]],[R[3]]]],[11,R[4390],E,E,44,[[["v"]],[R[3]]]],[11,R[4392],E,E,44,[[["v"]],[R[3]]]],[11,R[4394],E,E,44,[[["v"]],[R[3]]]],[11,R[4396],E,E,44,[[["v"]],[R[3]]]],[11,R[4398],E,E,44,[[["v"]],[R[3]]]],[11,R[4400],E,E,44,[[["v"]],[R[3]]]],[11,R[4402],E,E,44,[[["v"]],[R[3]]]],[11,R[4404],E,E,44,[[["v"]],[R[3]]]],[11,R[4406],E,E,44,[[["v"]],[R[3]]]],[11,R[4408],E,E,44,[[["v"]],[R[3]]]],[11,R[4410],E,E,44,[[["v"]],[R[3]]]],[11,R[4412],E,E,44,[[["v"]],[R[3]]]],[11,R[4413],E,E,44,[[["v"]],[R[3]]]],[11,R[4414],E,E,44,[[["v"]],[R[3]]]],[11,R[4415],E,E,44,[[["v"]],[R[3]]]],[11,R[4416],E,E,44,[[["v"]],[R[3]]]],[11,R[4418],E,E,44,[[["v"]],[R[3]]]],[11,R[4420],E,E,44,[[["v"],["str"]],[R[3]]]],[11,R[4422],E,E,44,[[["v"],["str"]],[R[3]]]],[11,R[4424],E,E,44,[[["v"]],[R[3]]]],[11,R[4425],E,E,44,[[["usize"],["v"]],[R[3]]]],[11,R[4426],E,E,44,[[["v"],["usize"],["str"]],[R[3]]]],[11,R[4428],E,E,44,[[["v"]],[R[3]]]],[11,R[4430],E,E,44,[[["v"],["str"]],[R[3]]]],[11,R[4432],E,E,44,[[["v"],["str"]],[R[3]]]],[11,R[4434],E,E,44,[[["v"]],[R[3]]]],[11,R[4436],E,E,44,[[["v"]],[R[3]]]],[11,R[4382],E,E,44,[[["v"]],[R[3]]]],[11,R[4384],E,E,45,[[["v"]],[R[3]]]],[11,R[4386],E,E,45,[[["v"]],[R[3]]]],[11,R[4388],E,E,45,[[["v"]],[R[3]]]],[11,R[4390],E,E,45,[[["v"]],[R[3]]]],[11,R[4392],E,E,45,[[["v"]],[R[3]]]],[11,R[4394],E,E,45,[[["v"]],[R[3]]]],[11,R[4396],E,E,45,[[["v"]],[R[3]]]],[11,R[4398],E,E,45,[[["v"]],[R[3]]]],[11,R[4400],E,E,45,[[["v"]],[R[3]]]],[11,R[4402],E,E,45,[[["v"]],[R[3]]]],[11,R[4404],E,E,45,[[["v"]],[R[3]]]],[11,R[4406],E,E,45,[[["v"]],[R[3]]]],[11,R[4408],E,E,45,[[["v"]],[R[3]]]],[11,R[4410],E,E,45,[[["v"]],[R[3]]]],[11,R[4412],E,E,45,[[["v"]],[R[3]]]],[11,R[4413],E,E,45,[[["v"]],[R[3]]]],[11,R[4414],E,E,45,[[["v"]],[R[3]]]],[11,R[4415],E,E,45,[[["v"]],[R[3]]]],[11,R[4416],E,E,45,[[["v"]],[R[3]]]],[11,R[4418],E,E,45,[[["v"]],[R[3]]]],[11,R[4420],E,E,45,[[["v"],["str"]],[R[3]]]],[11,R[4422],E,E,45,[[["v"],["str"]],[R[3]]]],[11,R[4424],E,E,45,[[["v"]],[R[3]]]],[11,R[4425],E,E,45,[[["usize"],["v"]],[R[3]]]],[11,R[4426],E,E,45,[[["v"],["usize"],["str"]],[R[3]]]],[11,R[4428],E,E,45,[[["v"]],[R[3]]]],[11,R[4430],E,E,45,[[["v"],["str"]],[R[3]]]],[11,R[4432],E,E,45,[[["v"],["str"]],[R[3]]]],[11,R[4434],E,E,45,[[["v"]],[R[3]]]],[11,R[4436],E,E,45,[[["v"]],[R[3]]]],[11,R[4382],E,E,45,[[["v"]],[R[3]]]],[11,R[4384],E,E,46,[[["v"]],[R[3]]]],[11,R[4386],E,E,46,[[["v"]],[R[3]]]],[11,R[4388],E,E,46,[[["v"]],[R[3]]]],[11,R[4390],E,E,46,[[["v"]],[R[3]]]],[11,R[4392],E,E,46,[[["v"]],[R[3]]]],[11,R[4394],E,E,46,[[["v"]],[R[3]]]],[11,R[4396],E,E,46,[[["v"]],[R[3]]]],[11,R[4398],E,E,46,[[["v"]],[R[3]]]],[11,R[4400],E,E,46,[[["v"]],[R[3]]]],[11,R[4402],E,E,46,[[["v"]],[R[3]]]],[11,R[4404],E,E,46,[[["v"]],[R[3]]]],[11,R[4406],E,E,46,[[["v"]],[R[3]]]],[11,R[4408],E,E,46,[[["v"]],[R[3]]]],[11,R[4410],E,E,46,[[["v"]],[R[3]]]],[11,R[4412],E,E,46,[[["v"]],[R[3]]]],[11,R[4413],E,E,46,[[["v"]],[R[3]]]],[11,R[4414],E,E,46,[[["v"]],[R[3]]]],[11,R[4415],E,E,46,[[["v"]],[R[3]]]],[11,R[4416],E,E,46,[[["v"]],[R[3]]]],[11,R[4418],E,E,46,[[["v"]],[R[3]]]],[11,R[4420],E,E,46,[[["v"],["str"]],[R[3]]]],[11,R[4422],E,E,46,[[["v"],["str"]],[R[3]]]],[11,R[4424],E,E,46,[[["v"]],[R[3]]]],[11,R[4425],E,E,46,[[["usize"],["v"]],[R[3]]]],[11,R[4426],E,E,46,[[["v"],["usize"],["str"]],[R[3]]]],[11,R[4428],E,E,46,[[["v"]],[R[3]]]],[11,R[4430],E,E,46,[[["v"],["str"]],[R[3]]]],[11,R[4434],E,E,46,[[["v"]],[R[3]]]],[11,R[4436],E,E,46,[[["v"]],[R[3]]]],[11,R[4382],E,E,46,[[["v"]],[R[3]]]],[11,R[4432],E,E,46,[[["v"],["str"]],[R[3]]]],[11,R[4382],E,E,47,[[["v"]],[R[3]]]],[11,R[4432],E,E,47,[[["v"],["str"]],[R[3]]]],[11,R[4384],E,E,47,[[["v"]],[R[3]]]],[11,R[4386],E,E,47,[[["v"]],[R[3]]]],[11,R[4388],E,E,47,[[["v"]],[R[3]]]],[11,R[4390],E,E,47,[[["v"]],[R[3]]]],[11,R[4392],E,E,47,[[["v"]],[R[3]]]],[11,R[4394],E,E,47,[[["v"]],[R[3]]]],[11,R[4396],E,E,47,[[["v"]],[R[3]]]],[11,R[4398],E,E,47,[[["v"]],[R[3]]]],[11,R[4400],E,E,47,[[["v"]],[R[3]]]],[11,R[4402],E,E,47,[[["v"]],[R[3]]]],[11,R[4404],E,E,47,[[["v"]],[R[3]]]],[11,R[4406],E,E,47,[[["v"]],[R[3]]]],[11,R[4408],E,E,47,[[["v"]],[R[3]]]],[11,R[4410],E,E,47,[[["v"]],[R[3]]]],[11,R[4412],E,E,47,[[["v"]],[R[3]]]],[11,R[4413],E,E,47,[[["v"]],[R[3]]]],[11,R[4414],E,E,47,[[["v"]],[R[3]]]],[11,R[4415],E,E,47,[[["v"]],[R[3]]]],[11,R[4416],E,E,47,[[["v"]],[R[3]]]],[11,R[4418],E,E,47,[[["v"]],[R[3]]]],[11,R[4420],E,E,47,[[["v"],["str"]],[R[3]]]],[11,R[4422],E,E,47,[[["v"],["str"]],[R[3]]]],[11,R[4424],E,E,47,[[["v"]],[R[3]]]],[11,R[4425],E,E,47,[[["usize"],["v"]],[R[3]]]],[11,R[4426],E,E,47,[[["v"],["usize"],["str"]],[R[3]]]],[11,R[4428],E,E,47,[[["v"]],[R[3]]]],[11,R[4430],E,E,47,[[["v"],["str"]],[R[3]]]],[11,R[4434],E,E,47,[[["v"]],[R[3]]]],[11,R[4436],E,E,47,[[["v"]],[R[3]]]],[11,R[4382],E,E,1,[[["v"]],[R[3]]]],[11,R[4432],E,E,1,[[["v"],["str"]],[R[3]]]],[11,R[4384],E,E,1,[[["v"]],[R[3]]]],[11,R[4386],E,E,1,[[["v"]],[R[3]]]],[11,R[4388],E,E,1,[[["v"]],[R[3]]]],[11,R[4390],E,E,1,[[["v"]],[R[3]]]],[11,R[4392],E,E,1,[[["v"]],[R[3]]]],[11,R[4394],E,E,1,[[["v"]],[R[3]]]],[11,R[4396],E,E,1,[[["v"]],[R[3]]]],[11,R[4398],E,E,1,[[["v"]],[R[3]]]],[11,R[4400],E,E,1,[[["v"]],[R[3]]]],[11,R[4402],E,E,1,[[["v"]],[R[3]]]],[11,R[4404],E,E,1,[[["v"]],[R[3]]]],[11,R[4406],E,E,1,[[["v"]],[R[3]]]],[11,R[4408],E,E,1,[[["v"]],[R[3]]]],[11,R[4410],E,E,1,[[["v"]],[R[3]]]],[11,R[4412],E,E,1,[[["v"]],[R[3]]]],[11,R[4413],E,E,1,[[["v"]],[R[3]]]],[11,R[4414],E,E,1,[[["v"]],[R[3]]]],[11,R[4415],E,E,1,[[["v"]],[R[3]]]],[11,R[4416],E,E,1,[[["v"]],[R[3]]]],[11,R[4418],E,E,1,[[["v"]],[R[3]]]],[11,R[4420],E,E,1,[[["v"],["str"]],[R[3]]]],[11,R[4422],E,E,1,[[["v"],["str"]],[R[3]]]],[11,R[4424],E,E,1,[[["v"]],[R[3]]]],[11,R[4425],E,E,1,[[["usize"],["v"]],[R[3]]]],[11,R[4426],E,E,1,[[["v"],["usize"],["str"]],[R[3]]]],[11,R[4428],E,E,1,[[["v"]],[R[3]]]],[11,R[4430],E,E,1,[[["v"],["str"]],[R[3]]]],[11,R[4434],E,E,1,[[["v"]],[R[3]]]],[11,R[4436],E,E,1,[[["v"]],[R[3]]]],[11,R[4382],E,E,48,[[["v"]],[R[3]]]],[11,R[4432],E,E,48,[[["v"],["str"]],[R[3]]]],[11,R[4384],E,E,48,[[["v"]],[R[3]]]],[11,R[4386],E,E,48,[[["v"]],[R[3]]]],[11,R[4388],E,E,48,[[["v"]],[R[3]]]],[11,R[4390],E,E,48,[[["v"]],[R[3]]]],[11,R[4392],E,E,48,[[["v"]],[R[3]]]],[11,R[4394],E,E,48,[[["v"]],[R[3]]]],[11,R[4396],E,E,48,[[["v"]],[R[3]]]],[11,R[4398],E,E,48,[[["v"]],[R[3]]]],[11,R[4400],E,E,48,[[["v"]],[R[3]]]],[11,R[4402],E,E,48,[[["v"]],[R[3]]]],[11,R[4404],E,E,48,[[["v"]],[R[3]]]],[11,R[4406],E,E,48,[[["v"]],[R[3]]]],[11,R[4408],E,E,48,[[["v"]],[R[3]]]],[11,R[4410],E,E,48,[[["v"]],[R[3]]]],[11,R[4412],E,E,48,[[["v"]],[R[3]]]],[11,R[4413],E,E,48,[[["v"]],[R[3]]]],[11,R[4414],E,E,48,[[["v"]],[R[3]]]],[11,R[4415],E,E,48,[[["v"]],[R[3]]]],[11,R[4416],E,E,48,[[["v"]],[R[3]]]],[11,R[4418],E,E,48,[[["v"]],[R[3]]]],[11,R[4420],E,E,48,[[["v"],["str"]],[R[3]]]],[11,R[4422],E,E,48,[[["v"],["str"]],[R[3]]]],[11,R[4424],E,E,48,[[["v"]],[R[3]]]],[11,R[4425],E,E,48,[[["usize"],["v"]],[R[3]]]],[11,R[4426],E,E,48,[[["v"],["usize"],["str"]],[R[3]]]],[11,R[4428],E,E,48,[[["v"]],[R[3]]]],[11,R[4430],E,E,48,[[["v"],["str"]],[R[3]]]],[11,R[4434],E,E,48,[[["v"]],[R[3]]]],[11,R[4436],E,E,48,[[["v"]],[R[3]]]],[11,R[4382],E,E,49,[[["v"]],[R[3]]]],[11,R[4432],E,E,49,[[["v"],["str"]],[R[3]]]],[11,R[4384],E,E,49,[[["v"]],[R[3]]]],[11,R[4386],E,E,49,[[["v"]],[R[3]]]],[11,R[4388],E,E,49,[[["v"]],[R[3]]]],[11,R[4390],E,E,49,[[["v"]],[R[3]]]],[11,R[4392],E,E,49,[[["v"]],[R[3]]]],[11,R[4394],E,E,49,[[["v"]],[R[3]]]],[11,R[4396],E,E,49,[[["v"]],[R[3]]]],[11,R[4398],E,E,49,[[["v"]],[R[3]]]],[11,R[4400],E,E,49,[[["v"]],[R[3]]]],[11,R[4402],E,E,49,[[["v"]],[R[3]]]],[11,R[4404],E,E,49,[[["v"]],[R[3]]]],[11,R[4406],E,E,49,[[["v"]],[R[3]]]],[11,R[4408],E,E,49,[[["v"]],[R[3]]]],[11,R[4410],E,E,49,[[["v"]],[R[3]]]],[11,R[4412],E,E,49,[[["v"]],[R[3]]]],[11,R[4413],E,E,49,[[["v"]],[R[3]]]],[11,R[4414],E,E,49,[[["v"]],[R[3]]]],[11,R[4415],E,E,49,[[["v"]],[R[3]]]],[11,R[4416],E,E,49,[[["v"]],[R[3]]]],[11,R[4418],E,E,49,[[["v"]],[R[3]]]],[11,R[4420],E,E,49,[[["v"],["str"]],[R[3]]]],[11,R[4422],E,E,49,[[["v"],["str"]],[R[3]]]],[11,R[4424],E,E,49,[[["v"]],[R[3]]]],[11,R[4425],E,E,49,[[["usize"],["v"]],[R[3]]]],[11,R[4426],E,E,49,[[["v"],["usize"],["str"]],[R[3]]]],[11,R[4428],E,E,49,[[["v"]],[R[3]]]],[11,R[4430],E,E,49,[[["v"],["str"]],[R[3]]]],[11,R[4434],E,E,49,[[["v"]],[R[3]]]],[11,R[4436],E,E,49,[[["v"]],[R[3]]]],[11,R[4382],E,E,2,[[["v"]],[R[3]]]],[11,R[4384],E,E,2,[[["v"]],[R[3]]]],[11,R[4386],E,E,2,[[["v"]],[R[3]]]],[11,R[4388],E,E,2,[[["v"]],[R[3]]]],[11,R[4390],E,E,2,[[["v"]],[R[3]]]],[11,R[4392],E,E,2,[[["v"]],[R[3]]]],[11,R[4394],E,E,2,[[["v"]],[R[3]]]],[11,R[4396],E,E,2,[[["v"]],[R[3]]]],[11,R[4398],E,E,2,[[["v"]],[R[3]]]],[11,R[4400],E,E,2,[[["v"]],[R[3]]]],[11,R[4402],E,E,2,[[["v"]],[R[3]]]],[11,R[4404],E,E,2,[[["v"]],[R[3]]]],[11,R[4406],E,E,2,[[["v"]],[R[3]]]],[11,R[4408],E,E,2,[[["v"]],[R[3]]]],[11,R[4410],E,E,2,[[["v"]],[R[3]]]],[11,R[4412],E,E,2,[[["v"]],[R[3]]]],[11,R[4413],E,E,2,[[["v"]],[R[3]]]],[11,R[4414],E,E,2,[[["v"]],[R[3]]]],[11,R[4415],E,E,2,[[["v"]],[R[3]]]],[11,R[4416],E,E,2,[[["v"]],[R[3]]]],[11,R[4418],E,E,2,[[["v"]],[R[3]]]],[11,R[4420],E,E,2,[[["v"],["str"]],[R[3]]]],[11,R[4422],E,E,2,[[["v"],["str"]],[R[3]]]],[11,R[4424],E,E,2,[[["v"]],[R[3]]]],[11,R[4425],E,E,2,[[["usize"],["v"]],[R[3]]]],[11,R[4426],E,E,2,[[["v"],["usize"],["str"]],[R[3]]]],[11,R[4428],E,E,2,[[["v"]],[R[3]]]],[11,R[4430],E,E,2,[[["v"],["str"]],[R[3]]]],[11,R[4434],E,E,2,[[["v"]],[R[3]]]],[11,R[4436],E,E,2,[[["v"]],[R[3]]]],[11,R[4432],E,E,2,[[["v"],["str"]],[R[3]]]],[11,R[4382],E,E,3,[[["v"]],[R[3]]]],[11,R[4384],E,E,3,[[["v"]],[R[3]]]],[11,R[4386],E,E,3,[[["v"]],[R[3]]]],[11,R[4388],E,E,3,[[["v"]],[R[3]]]],[11,R[4390],E,E,3,[[["v"]],[R[3]]]],[11,R[4392],E,E,3,[[["v"]],[R[3]]]],[11,R[4394],E,E,3,[[["v"]],[R[3]]]],[11,R[4396],E,E,3,[[["v"]],[R[3]]]],[11,R[4398],E,E,3,[[["v"]],[R[3]]]],[11,R[4400],E,E,3,[[["v"]],[R[3]]]],[11,R[4402],E,E,3,[[["v"]],[R[3]]]],[11,R[4404],E,E,3,[[["v"]],[R[3]]]],[11,R[4406],E,E,3,[[["v"]],[R[3]]]],[11,R[4408],E,E,3,[[["v"]],[R[3]]]],[11,R[4410],E,E,3,[[["v"]],[R[3]]]],[11,R[4412],E,E,3,[[["v"]],[R[3]]]],[11,R[4413],E,E,3,[[["v"]],[R[3]]]],[11,R[4414],E,E,3,[[["v"]],[R[3]]]],[11,R[4415],E,E,3,[[["v"]],[R[3]]]],[11,R[4416],E,E,3,[[["v"]],[R[3]]]],[11,R[4418],E,E,3,[[["v"]],[R[3]]]],[11,R[4420],E,E,3,[[["v"],["str"]],[R[3]]]],[11,R[4422],E,E,3,[[["v"],["str"]],[R[3]]]],[11,R[4424],E,E,3,[[["v"]],[R[3]]]],[11,R[4425],E,E,3,[[["usize"],["v"]],[R[3]]]],[11,R[4426],E,E,3,[[["v"],["usize"],["str"]],[R[3]]]],[11,R[4428],E,E,3,[[["v"]],[R[3]]]],[11,R[4430],E,E,3,[[["v"],["str"]],[R[3]]]],[11,R[4432],E,E,3,[[["v"],["str"]],[R[3]]]],[11,R[4434],E,E,3,[[["v"]],[R[3]]]],[11,R[4436],E,E,3,[[["v"]],[R[3]]]],[11,R[4382],E,E,4,[[["v"]],[R[3]]]],[11,R[4384],E,E,4,[[["v"]],[R[3]]]],[11,R[4386],E,E,4,[[["v"]],[R[3]]]],[11,R[4388],E,E,4,[[["v"]],[R[3]]]],[11,R[4390],E,E,4,[[["v"]],[R[3]]]],[11,R[4392],E,E,4,[[["v"]],[R[3]]]],[11,R[4394],E,E,4,[[["v"]],[R[3]]]],[11,R[4396],E,E,4,[[["v"]],[R[3]]]],[11,R[4398],E,E,4,[[["v"]],[R[3]]]],[11,R[4400],E,E,4,[[["v"]],[R[3]]]],[11,R[4402],E,E,4,[[["v"]],[R[3]]]],[11,R[4404],E,E,4,[[["v"]],[R[3]]]],[11,R[4406],E,E,4,[[["v"]],[R[3]]]],[11,R[4408],E,E,4,[[["v"]],[R[3]]]],[11,R[4410],E,E,4,[[["v"]],[R[3]]]],[11,R[4412],E,E,4,[[["v"]],[R[3]]]],[11,R[4413],E,E,4,[[["v"]],[R[3]]]],[11,R[4414],E,E,4,[[["v"]],[R[3]]]],[11,R[4415],E,E,4,[[["v"]],[R[3]]]],[11,R[4416],E,E,4,[[["v"]],[R[3]]]],[11,R[4418],E,E,4,[[["v"]],[R[3]]]],[11,R[4420],E,E,4,[[["v"],["str"]],[R[3]]]],[11,R[4422],E,E,4,[[["v"],["str"]],[R[3]]]],[11,R[4424],E,E,4,[[["v"]],[R[3]]]],[11,R[4425],E,E,4,[[["usize"],["v"]],[R[3]]]],[11,R[4426],E,E,4,[[["v"],["usize"],["str"]],[R[3]]]],[11,R[4428],E,E,4,[[["v"]],[R[3]]]],[11,R[4430],E,E,4,[[["v"],["str"]],[R[3]]]],[11,R[4432],E,E,4,[[["v"],["str"]],[R[3]]]],[11,R[4434],E,E,4,[[["v"]],[R[3]]]],[11,R[4436],E,E,4,[[["v"]],[R[3]]]],[11,R[4382],E,E,5,[[["v"]],[R[3]]]],[11,R[4424],E,E,5,[[["v"]],[R[3]]]],[11,R[4425],E,E,5,[[["usize"],["v"]],[R[3]]]],[11,R[4384],E,E,5,[[["v"]],[R[3]]]],[11,R[4386],E,E,5,[[["v"]],[R[3]]]],[11,R[4388],E,E,5,[[["v"]],[R[3]]]],[11,R[4390],E,E,5,[[["v"]],[R[3]]]],[11,R[4392],E,E,5,[[["v"]],[R[3]]]],[11,R[4394],E,E,5,[[["v"]],[R[3]]]],[11,R[4396],E,E,5,[[["v"]],[R[3]]]],[11,R[4398],E,E,5,[[["v"]],[R[3]]]],[11,R[4400],E,E,5,[[["v"]],[R[3]]]],[11,R[4402],E,E,5,[[["v"]],[R[3]]]],[11,R[4404],E,E,5,[[["v"]],[R[3]]]],[11,R[4406],E,E,5,[[["v"]],[R[3]]]],[11,R[4408],E,E,5,[[["v"]],[R[3]]]],[11,R[4410],E,E,5,[[["v"]],[R[3]]]],[11,R[4412],E,E,5,[[["v"]],[R[3]]]],[11,R[4413],E,E,5,[[["v"]],[R[3]]]],[11,R[4414],E,E,5,[[["v"]],[R[3]]]],[11,R[4415],E,E,5,[[["v"]],[R[3]]]],[11,R[4416],E,E,5,[[["v"]],[R[3]]]],[11,R[4418],E,E,5,[[["v"]],[R[3]]]],[11,R[4420],E,E,5,[[["v"],["str"]],[R[3]]]],[11,R[4422],E,E,5,[[["v"],["str"]],[R[3]]]],[11,R[4426],E,E,5,[[["v"],["usize"],["str"]],[R[3]]]],[11,R[4428],E,E,5,[[["v"]],[R[3]]]],[11,R[4430],E,E,5,[[["v"],["str"]],[R[3]]]],[11,R[4432],E,E,5,[[["v"],["str"]],[R[3]]]],[11,R[4434],E,E,5,[[["v"]],[R[3]]]],[11,R[4436],E,E,5,[[["v"]],[R[3]]]],[11,R[4382],E,E,6,[[["v"]],[R[3]]]],[11,R[4432],E,E,6,[[["v"],["str"]],[R[3]]]],[11,R[4384],E,E,6,[[["v"]],[R[3]]]],[11,R[4386],E,E,6,[[["v"]],[R[3]]]],[11,R[4388],E,E,6,[[["v"]],[R[3]]]],[11,R[4390],E,E,6,[[["v"]],[R[3]]]],[11,R[4392],E,E,6,[[["v"]],[R[3]]]],[11,R[4394],E,E,6,[[["v"]],[R[3]]]],[11,R[4396],E,E,6,[[["v"]],[R[3]]]],[11,R[4398],E,E,6,[[["v"]],[R[3]]]],[11,R[4400],E,E,6,[[["v"]],[R[3]]]],[11,R[4402],E,E,6,[[["v"]],[R[3]]]],[11,R[4404],E,E,6,[[["v"]],[R[3]]]],[11,R[4406],E,E,6,[[["v"]],[R[3]]]],[11,R[4408],E,E,6,[[["v"]],[R[3]]]],[11,R[4410],E,E,6,[[["v"]],[R[3]]]],[11,R[4412],E,E,6,[[["v"]],[R[3]]]],[11,R[4413],E,E,6,[[["v"]],[R[3]]]],[11,R[4414],E,E,6,[[["v"]],[R[3]]]],[11,R[4415],E,E,6,[[["v"]],[R[3]]]],[11,R[4416],E,E,6,[[["v"]],[R[3]]]],[11,R[4418],E,E,6,[[["v"]],[R[3]]]],[11,R[4420],E,E,6,[[["v"],["str"]],[R[3]]]],[11,R[4422],E,E,6,[[["v"],["str"]],[R[3]]]],[11,R[4424],E,E,6,[[["v"]],[R[3]]]],[11,R[4425],E,E,6,[[["usize"],["v"]],[R[3]]]],[11,R[4426],E,E,6,[[["v"],["usize"],["str"]],[R[3]]]],[11,R[4428],E,E,6,[[["v"]],[R[3]]]],[11,R[4430],E,E,6,[[["v"],["str"]],[R[3]]]],[11,R[4434],E,E,6,[[["v"]],[R[3]]]],[11,R[4436],E,E,6,[[["v"]],[R[3]]]],[11,"expecting",R[4519],E,28,[[["self"],[R[10]]],[R[3]]]],[11,"visit_bool",E,E,28,[[["bool"]],[R[3]]]],[11,"visit_i64",E,E,28,[[["i64"]],[R[3]]]],[11,"visit_u64",E,E,28,[[["u64"]],[R[3]]]],[11,"visit_f64",E,E,28,[[["f64"]],[R[3]]]],[11,"visit_str",E,E,28,[[["str"]],[R[3]]]],[11,"visit_none",E,E,28,[[],[R[3]]]],[11,"visit_some",E,E,28,[[["d"]],[R[3]]]],[11,R[4520],E,E,28,[[["d"]],[R[3]]]],[11,"visit_unit",E,E,28,[[],[R[3]]]],[11,"visit_seq",E,E,28,[[["a"]],[R[3]]]],[11,"visit_map",E,E,28,[[["a"]],[R[3]]]],[11,R[4521],E,E,28,[[],[R[3]]]],[11,"visit_enum",E,E,28,[[["a"]],[R[3]]]],[11,R[4522],R[4518],E,3,[[["self"],["v"]],[[R[3],[R[23]]],[R[23]]]]],[11,R[53],E,E,3,[[["self"]],[[R[23],["usize"]],["usize"]]]],[11,R[4522],E,E,5,[[["self"],[T]],[[R[23]],[R[3],[R[23]]]]]],[11,R[53],E,E,5,[[["self"]],[[R[23],["usize"]],["usize"]]]],[11,R[4523],E,E,5,[[["self"],[T]],[[R[3],[R[23]]],[R[23]]]]],[11,R[4524],E,E,5,[[["self"],[T]],[R[3]]]],[11,R[4525],E,E,5,[[["self"],["tv"],["tk"]],[[R[3],[R[23]]],[R[23]]]]],[11,R[53],E,E,5,[[["self"]],[[R[23],["usize"]],["usize"]]]],[11,R[4526],E,E,46,[[[T]],[R[3]]]],[11,R[4526],E,E,47,[[[T]],[R[3]]]],[11,R[4526],E,E,1,[[[T]],[R[3]]]],[11,R[4526],E,E,48,[[[T]],[R[3]]]],[11,R[4526],E,E,49,[[[T]],[R[3]]]],[11,R[4526],E,E,6,[[[T]],[R[3]]]],[11,R[4371],R[4527],E,50,[[["self"],[T]],[R[3]]]],[11,"end",E,E,50,[[],[R[3]]]],[11,R[4371],E,E,50,[[["self"],[T]],[R[3]]]],[11,"end",E,E,50,[[],[R[3]]]],[11,R[4374],E,E,50,[[["self"],[T]],[R[3]]]],[11,"end",E,E,50,[[],[R[3]]]],[11,R[4374],E,E,50,[[["self"],[T]],[R[3]]]],[11,"end",E,E,50,[[],[R[3]]]],[11,R[4528],E,E,50,[[["self"],[T]],[R[3]]]],[11,R[4529],E,E,50,[[["self"],[T]],[R[3]]]],[11,"end",E,E,50,[[],[R[3]]]],[11,R[4374],E,E,50,[[["self"],[T],["str"]],[R[3]]]],[11,"end",E,E,50,[[],[R[3]]]],[11,R[4374],E,E,50,[[["self"],[T],["str"]],[R[3]]]],[11,"end",E,E,50,[[],[R[3]]]],[11,"custom",R[4518],E,29,[[[T]],["self"]]],[11,"custom",E,E,29,[[[T]],["self"]]],[11,R[83],R[4519],E,28,[[],[R[4530]]]],[11,"clone",R[4518],E,29,[[["self"]],["error"]]],[11,"clone",E,E,30,[[["self"]],["self"]]],[11,"clone",E,E,31,[[["self"]],["self"]]],[11,"clone",E,E,32,[[["self"]],["self"]]],[11,"clone",E,E,33,[[["self"]],["self"]]],[11,"clone",E,E,34,[[["self"]],["self"]]],[11,"clone",E,E,35,[[["self"]],["self"]]],[11,"clone",E,E,36,[[["self"]],["self"]]],[11,"clone",E,E,37,[[["self"]],["self"]]],[11,"clone",E,E,38,[[["self"]],["self"]]],[11,"clone",E,E,39,[[["self"]],["self"]]],[11,"clone",E,E,40,[[["self"]],["self"]]],[11,"clone",E,E,41,[[["self"]],["self"]]],[11,"clone",E,E,42,[[["self"]],["self"]]],[11,"clone",E,E,43,[[["self"]],["self"]]],[11,"clone",E,E,44,[[["self"]],["self"]]],[11,"clone",E,E,45,[[["self"]],["self"]]],[11,"clone",E,E,46,[[["self"]],["self"]]],[11,"clone",E,E,47,[[["self"]],["self"]]],[11,"clone",E,E,1,[[["self"]],["self"]]],[11,"clone",E,E,48,[[["self"]],["self"]]],[11,"clone",E,E,49,[[["self"]],["self"]]],[11,"clone",E,E,2,[[["self"]],["self"]]],[11,"clone",E,E,3,[[["self"]],["seqdeserializer"]]],[11,"clone",E,E,4,[[["self"]],["seqaccessdeserializer"]]],[11,"clone",E,E,5,[[["self"]],["self"]]],[11,"clone",E,E,6,[[["self"]],["mapaccessdeserializer"]]],[11,"clone",R[4519],E,28,[[["self"]],[R[4530]]]],[11,"clone",E,E,0,[[["self"]],[R[4531]]]],[11,"eq",R[4518],E,29,[[["self"],["error"]],["bool"]]],[11,"ne",E,E,29,[[["self"],["error"]],["bool"]]],[11,"eq",R[4519],E,0,[[["self"],[R[4531]]],["bool"]]],[11,"ne",E,E,0,[[["self"],[R[4531]]],["bool"]]],[11,"fmt",R[4518],E,29,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,30,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,31,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,32,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,33,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,34,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,35,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,36,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,37,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,38,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,39,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,40,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,41,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,42,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,43,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,44,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,45,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,46,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,47,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,1,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,48,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,49,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,2,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,3,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,4,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,5,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,6,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[4519],E,28,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,0,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[4518],E,29,[[["self"],[R[10]]],[["error"],[R[3],["error"]]]]],[11,"fmt",R[4519],E,0,[[["self"],[R[10]]],[["error"],[R[3],["error"]]]]],[11,"fmt",E,E,8,[[["self"],[R[10]]],[R[3]]]],[11,R[157],R[4518],E,29,[[["self"]],["str"]]]],"p":[[4,"Unexpected"],[3,R[4532]],[3,R[4533]],[3,R[4534]],[3,R[4535]],[3,R[4536]],[3,R[4537]],[8,"Error"],[8,"Expected"],[8,R[4378]],[8,R[4538]],[8,R[4365]],[8,"Visitor"],[8,"SeqAccess"],[8,"MapAccess"],[8,"EnumAccess"],[8,R[4539]],[8,R[4540]],[8,"Error"],[8,R[4562]],[8,R[4541]],[8,R[4367]],[8,R[4368]],[8,R[4372]],[8,R[4373]],[8,R[4375]],[8,R[4376]],[8,R[4377]],[3,"IgnoredAny"],[3,"Error"],[3,R[4542]],[3,R[4543]],[3,R[4544]],[3,R[4545]],[3,R[4546]],[3,R[4547]],[3,R[4548]],[3,R[4549]],[3,R[4550]],[3,R[4551]],[3,R[4552]],[3,R[4553]],[3,R[4554]],[3,R[4555]],[3,R[4556]],[3,R[4557]],[3,R[4558]],[3,R[4559]],[3,R[4560]],[3,R[4561]],[3,"Impossible"]]};
searchIndex["serde_bench"]={"doc":E,"i":[[3,"Error","serde_bench",E,N,N],[5,R[4563],E,E,N,[[["vec"],[T]],[R[3]]]],[5,R[4354],E,E,N,[[],[R[3]]]],[11,"new",E,E,0,[[["display"]],["self"]]],[6,"Result",E,E,N,N],[11,"into",E,E,0,[[],[U]]],[11,R[113],E,E,0,[[["self"]],["string"]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[4],E,E,0,[[[U]],[R[3]]]],[11,R[5],E,E,0,[[],[R[3]]]],[11,R[7],E,E,0,[[["self"]],[T]]],[11,R[6],E,E,0,[[["self"]],[T]]],[11,R[8],E,E,0,[[["self"]],[R[9]]]],[11,"from",E,E,0,[[["error"]],["self"]]],[11,"from",E,E,0,[[[R[749]]],["self"]]],[11,"from",E,E,0,[[[R[4564]]],["self"]]],[11,"fmt",E,E,0,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,0,[[["self"],[R[10]]],[R[3]]]],[11,R[157],E,E,0,[[["self"]],["str"]]],[11,"custom",E,E,0,[[["display"]],["self"]]],[11,"custom",E,E,0,[[["display"]],["self"]]]],"p":[[3,"Error"]]};
searchIndex["serde_bytes"]={"doc":"Wrapper types to enable optimized handling of `&[u8]` and…","i":[[3,"Bytes","serde_bytes","Wrapper around `&[u8]` to serialize and deserialize…",N,N],[3,"ByteBuf",E,"Wrapper around `Vec<u8>` to serialize and deserialize…",N,N],[5,R[4563],E,"Serde `serialize_with` function to serialize bytes…",N,[[["s"],[T]],[R[3]]]],[5,R[4354],E,"Serde `deserialize_with` function to deserialize bytes…",N,[[["d"]],[R[3]]]],[11,"new",E,"Wrap an existing `&[u8]`.",0,[[],["self"]]],[11,"new",E,"Construct a new, empty `ByteBuf`.",1,[[],["self"]]],[11,R[115],E,"Construct a new, empty `ByteBuf` with the specified…",1,[[["usize"]],["self"]]],[11,"from",E,"Wrap existing bytes in a `ByteBuf`.",1,[[["into",["vec"]],["vec",["u8"]]],["self"]]],[11,"into_vec",E,"Unwrap the vector of byte underlying this `ByteBuf`.",1,[[],[["u8"],["vec",["u8"]]]]],[11,"into_boxed_bytes",E,E,1,[[],[["bytes"],["box",["bytes"]]]]],[8,R[4378],E,"Types that can be deserialized via `#[serde(with =…",N,N],[10,R[4354],E,E,2,[[["d"]],[R[3]]]],[8,R[4562],E,"Types that can be serialized via `#[serde(with =…",N,N],[10,R[4563],E,E,3,[[["self"],["s"]],[R[3]]]],[11,R[46],E,E,0,[[["self"]],[T]]],[11,R[47],E,E,0,[[["self"],[T]]]],[11,R[7],E,E,0,[[["self"]],[T]]],[11,R[6],E,E,0,[[["self"]],[T]]],[11,R[8],E,E,0,[[["self"]],[R[9]]]],[11,"into",E,E,1,[[],[U]]],[11,R[45],E,E,1,[[],["i"]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[46],E,E,1,[[["self"]],[T]]],[11,R[47],E,E,1,[[["self"],[T]]]],[11,R[4],E,E,1,[[[U]],[R[3]]]],[11,R[5],E,E,1,[[],[R[3]]]],[11,R[7],E,E,1,[[["self"]],[T]]],[11,R[6],E,E,1,[[["self"]],[T]]],[11,R[8],E,E,1,[[["self"]],[R[9]]]],[11,R[4354],E,E,1,[[["d"]],[R[3]]]],[11,R[4563],E,E,0,[[["self"],["s"]],[R[3]]]],[11,R[4563],E,E,1,[[["self"],["s"]],[R[3]]]],[11,"as_ref",E,E,0,[[["self"]]]],[11,"as_ref",E,E,1,[[["self"]]]],[11,R[83],E,E,1,[[],["bytebuf"]]],[11,"clone",E,E,1,[[["self"]],["bytebuf"]]],[11,R[77],E,E,0,[[["self"],["rhs"]],[[R[23],[R[50]]],[R[50]]]]],[11,R[77],E,E,1,[[["self"],["rhs"]],[[R[23],[R[50]]],[R[50]]]]],[11,"as_mut",E,E,0,[[["self"]]]],[11,"as_mut",E,E,1,[[["self"]]]],[11,"cmp",E,E,0,[[["self"],["bytes"]],[R[50]]]],[11,"cmp",E,E,1,[[["self"],["bytebuf"]],[R[50]]]],[11,"eq",E,E,0,[[["self"],["rhs"]],["bool"]]],[11,"eq",E,E,1,[[["self"],["rhs"]],["bool"]]],[11,R[45],E,E,1,[[]]],[11,R[46],E,E,0,[[["self"]]]],[11,"deref",E,E,0,[[["self"]]]],[11,"deref",E,E,1,[[["self"]]]],[11,R[17],E,E,0,[[["self"]]]],[11,R[17],E,E,1,[[["self"]]]],[11,"hash",E,E,0,[[["self"],["h"]]]],[11,"hash",E,E,1,[[["self"],["h"]]]],[11,"fmt",E,E,0,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,1,[[["self"],[R[10]]],[R[3]]]],[11,R[7],E,E,1,[[["self"]],["bytes"]]],[11,R[6],E,E,1,[[["self"]],["bytes"]]],[11,R[4563],E,E,0,[[["self"],["s"]],[R[3]]]],[11,R[4563],E,E,1,[[["self"],["s"]],[R[3]]]],[11,R[4354],E,E,1,[[["d"]],[[R[3],["bytebuf"]],["bytebuf"]]]]],"p":[[3,"Bytes"],[3,"ByteBuf"],[8,R[4378]],[8,R[4562]]]};
searchIndex["serde_derive"]={"doc":"This crate provides Serde's two derive macros.","i":[[24,R[4562],"serde_derive",E,N,N],[24,R[4378],E,E,N,N]],"p":[]};
searchIndex["serde_json"]={"doc":"Serde JSON","i":[[3,R[4365],R[4591],R[4583],N,N],[3,R[4584],E,R[4585],N,N],[3,"Error",E,R[4590],N,N],[3,R[4541],E,R[4593],N,N],[3,"Map",E,R[4592],N,N],[3,"Number",E,R[4581],N,N],[4,"Value",E,R[4605],N,N],[13,"Null",E,R[4606],0,N],[13,"Bool",E,R[4607],0,N],[13,"Number",E,R[4581],0,N],[13,"String",E,R[4608],0,N],[13,"Array",E,R[4609],0,N],[13,"Object",E,R[4610],0,N],[5,R[4586],E,R[4587],N,[[["r"]],[R[3]]]],[5,R[121],E,R[4588],N,[[],[R[3]]]],[5,R[775],E,R[4589],N,[[["str"]],[R[3]]]],[5,R[113],E,R[4600],N,[[[T]],[["string"],[R[3],["string"]]]]],[5,R[4601],E,R[4582],N,[[[T]],[["string"],[R[3],["string"]]]]],[5,"to_vec",E,R[4598],N,[[[T]],[["vec",["u8"]],[R[3],["vec"]]]]],[5,R[4599],E,R[4582],N,[[[T]],[["vec",["u8"]],[R[3],["vec"]]]]],[5,"to_writer",E,R[4595],N,[[["w"],[T]],[R[3]]]],[5,R[4596],E,R[4597],N,[[["w"],[T]],[R[3]]]],[5,R[2995],E,R[4612],N,[[["value"]],[[R[3],["error"]],["error"]]]],[5,"to_value",E,R[4611],N,[[[T]],[["value"],["error"],[R[3],["value","error"]]]]],[0,"de",E,"Deserialize JSON data to a Rust data structure.",N,N],[3,"IoRead",R[4613],"JSON input source that reads from a std::io input stream.",N,N],[3,"SliceRead",E,"JSON input source that reads from a slice of bytes.",N,N],[3,"StrRead",E,"JSON input source that reads from a UTF-8 string.",N,N],[3,R[4365],E,R[4583],N,N],[3,R[4584],E,R[4585],N,N],[5,R[4586],E,R[4587],N,[[["r"]],[R[3]]]],[5,R[121],E,R[4588],N,[[],[R[3]]]],[5,R[775],E,R[4589],N,[[["str"]],[R[3]]]],[8,"Read",E,"Trait used by the deserializer for iterating over input.…",N,N],[11,"new",E,"Create a JSON deserializer from one of the possible…",1,[[["r"]],["self"]]],[11,R[4586],E,"Creates a JSON deserializer from an `io::Read`.",1,[[["r"]],["self"]]],[11,R[121],E,"Creates a JSON deserializer from a `&[u8]`.",1,[[],["self"]]],[11,R[775],E,"Creates a JSON deserializer from a `&str`.",1,[[["str"]],["self"]]],[11,"end",E,"The `Deserializer::end` method should be called after a…",1,[[["self"]],[R[3]]]],[11,R[45],E,"Turn a JSON deserializer into an iterator over values of…",1,[[],["streamdeserializer"]]],[11,"new",E,"Create a JSON stream deserializer from one of the possible…",2,[[["r"]],["self"]]],[11,R[4626],E,"Returns the number of bytes so far deserialized into a…",2,[[["self"]],["usize"]]],[0,"error",R[4591],"When serializing or deserializing JSON goes wrong.",N,N],[3,"Error",R[4615],R[4590],N,N],[4,"Category",E,"Categorizes the cause of a `serde_json::Error`.",N,N],[13,"Io",E,"The error was caused by a failure to read or write bytes…",3,N],[13,"Syntax",E,"The error was caused by input that was not syntactically…",3,N],[13,"Data",E,"The error was caused by input data that was semantically…",3,N],[13,"Eof",E,"The error was caused by prematurely reaching the end of…",3,N],[6,"Result",E,R[4614],N,N],[11,"line",E,"One-based line number at which the error was detected.",4,[[["self"]],["usize"]]],[11,"column",E,"One-based column number at which the error was detected.",4,[[["self"]],["usize"]]],[11,"classify",E,"Categorizes the cause of this error.",4,[[["self"]],["category"]]],[11,"is_io",E,"Returns true if this error was caused by a failure to read…",4,[[["self"]],["bool"]]],[11,"is_syntax",E,"Returns true if this error was caused by input that was…",4,[[["self"]],["bool"]]],[11,"is_data",E,"Returns true if this error was caused by input data that…",4,[[["self"]],["bool"]]],[11,"is_eof",E,"Returns true if this error was caused by prematurely…",4,[[["self"]],["bool"]]],[0,"map",R[4591],"A map of String to serde_json::Value.",N,N],[3,"Map",R[4617],R[4592],N,N],[3,R[314],E,"A vacant Entry. It is part of the [`Entry`] enum.",N,N],[3,R[315],E,"An occupied Entry. It is part of the [`Entry`] enum.",N,N],[3,"Iter",E,"An iterator over a serde_json::Map's entries.",N,N],[3,R[631],E,"A mutable iterator over a serde_json::Map's entries.",N,N],[3,R[306],E,"An owning iterator over a serde_json::Map's entries.",N,N],[3,"Keys",E,"An iterator over a serde_json::Map's keys.",N,N],[3,"Values",E,"An iterator over a serde_json::Map's values.",N,N],[3,R[316],E,"A mutable iterator over a serde_json::Map's values.",N,N],[4,"Entry",E,R[4638],N,N],[13,"Vacant",E,R[4636],5,N],[13,"Occupied",E,R[4637],5,N],[11,"new",E,"Makes a new empty Map.",6,[[],["self"]]],[11,R[115],E,"Makes a new empty Map with the given initial capacity.",6,[[["usize"]],["self"]]],[11,"clear",E,"Clears the map, removing all values.",6,[[["self"]]]],[11,"get",E,R[310],6,[[["self"],["q"]],[[R[23],["value"]],["value"]]]],[11,R[311],E,R[4640],6,[[["self"],["q"]],["bool"]]],[11,R[39],E,R[312],6,[[["self"],["q"]],[["value"],[R[23],["value"]]]]],[11,"insert",E,"Inserts a key-value pair into the map.",6,[[["self"],["value"],["string"]],[[R[23],["value"]],["value"]]]],[11,"remove",E,R[4641],6,[[["self"],["q"]],[[R[23],["value"]],["value"]]]],[11,"entry",E,R[4642],6,[[["self"],["s"]],["entry"]]],[11,"len",E,R[309],6,[[["self"]],["usize"]]],[11,R[25],E,R[4639],6,[[["self"]],["bool"]]],[11,"iter",E,"Gets an iterator over the entries of the map.",6,[[["self"]],["iter"]]],[11,R[31],E,"Gets a mutable iterator over the entries of the map.",6,[[["self"]],[R[24]]]],[11,"keys",E,"Gets an iterator over the keys of the map.",6,[[["self"]],["keys"]]],[11,"values",E,"Gets an iterator over the values of the map.",6,[[["self"]],["values"]]],[11,R[35],E,"Gets an iterator over mutable values of the map.",6,[[["self"]],["valuesmut"]]],[11,"key",E,"Returns a reference to this entry's key.",5,[[["self"]],["string"]]],[11,"or_insert",E,R[4643],5,[[["value"]],["value"]]],[11,R[4644],E,R[4645],5,[[["f"]],["value"]]],[11,"key",E,"Gets a reference to the key that would be used when…",7,[[["self"]],["string"]]],[11,"insert",E,R[4646],7,[[["value"]],["value"]]],[11,"key",E,"Gets a reference to the key in the entry.",8,[[["self"]],["string"]]],[11,"get",E,R[4647],8,[[["self"]],["value"]]],[11,R[39],E,R[4648],8,[[["self"]],["value"]]],[11,"into_mut",E,R[4649],8,[[],["value"]]],[11,"insert",E,"Sets the value of the entry with the `OccupiedEntry`'s…",8,[[["self"],["value"]],["value"]]],[11,"remove",E,R[4650],8,[[],["value"]]],[0,"ser",R[4591],"Serialize a Rust data structure into JSON data.",N,N],[3,R[4541],R[4616],R[4593],N,N],[3,R[4634],E,"This structure compacts a JSON value with no extra…",N,N],[3,R[4633],E,"This structure pretty prints a JSON value to make it human…",N,N],[4,"CharEscape",E,"Represents a character escape code in a type-safe manner.",N,N],[13,"Quote",E,"An escaped quote `\"`",9,N],[13,"ReverseSolidus",E,"An escaped reverse solidus `\\`",9,N],[13,"Solidus",E,"An escaped solidus `/`",9,N],[13,"Backspace",E,"An escaped backspace character (usually escaped as `\\b`)",9,N],[13,"FormFeed",E,"An escaped form feed character (usually escaped as `\\f`)",9,N],[13,"LineFeed",E,"An escaped line feed character (usually escaped as `\\n`)",9,N],[13,R[4594],E,"An escaped carriage return character (usually escaped as…",9,N],[13,"Tab",E,"An escaped tab character (usually escaped as `\\t`)",9,N],[13,"AsciiControl",E,"An escaped ASCII plane control character (usually escaped…",9,N],[5,"to_writer",E,R[4595],N,[[["w"],[T]],[R[3]]]],[5,R[4596],E,R[4597],N,[[["w"],[T]],[R[3]]]],[5,"to_vec",E,R[4598],N,[[[T]],[["vec",["u8"]],[R[3],["vec"]]]]],[5,R[4599],E,R[4582],N,[[[T]],[["vec",["u8"]],[R[3],["vec"]]]]],[5,R[113],E,R[4600],N,[[[T]],[["string"],[R[3],["string"]]]]],[5,R[4601],E,R[4582],N,[[[T]],[["string"],[R[3],["string"]]]]],[8,"Formatter",E,"This trait abstracts away serializing the JSON control…",N,N],[11,"write_null",E,"Writes a `null` value to the specified writer.",10,[[["self"],["w"]],[R[3]]]],[11,"write_bool",E,"Writes a `true` or `false` value to the specified writer.",10,[[["self"],["w"],["bool"]],[R[3]]]],[11,"write_i8",E,R[4602],10,[[["self"],["w"],["i8"]],[R[3]]]],[11,R[859],E,R[4602],10,[[["self"],["w"],["i16"]],[R[3]]]],[11,R[861],E,R[4602],10,[[["self"],["w"],["i32"]],[R[3]]]],[11,R[863],E,R[4602],10,[[["self"],["w"],["i64"]],[R[3]]]],[11,"write_u8",E,R[4603],10,[[["self"],["w"],["u8"]],[R[3]]]],[11,R[845],E,R[4603],10,[[["self"],["w"],["u16"]],[R[3]]]],[11,R[847],E,R[4603],10,[[["self"],["w"],["u32"]],[R[3]]]],[11,R[849],E,R[4603],10,[[["self"],["w"],["u64"]],[R[3]]]],[11,R[868],E,R[4604],10,[[["self"],["w"],["f32"]],[R[3]]]],[11,R[870],E,R[4604],10,[[["self"],["w"],["f64"]],[R[3]]]],[11,"write_number_str",E,"Writes a number that has already been rendered to a string.",10,[[["self"],["w"],["str"]],[R[3]]]],[11,"begin_string",E,"Called before each series of `write_string_fragment` and…",10,[[["self"],["w"]],[R[3]]]],[11,"end_string",E,"Called after each series of `write_string_fragment` and…",10,[[["self"],["w"]],[R[3]]]],[11,"write_string_fragment",E,"Writes a string fragment that doesn't need any escaping to…",10,[[["self"],["w"],["str"]],[R[3]]]],[11,"write_char_escape",E,"Writes a character escape code to the specified writer.",10,[[["self"],["w"],["charescape"]],[R[3]]]],[11,R[4619],E,"Called before every array. Writes a `[` to the specified…",10,[[["self"],["w"]],[R[3]]]],[11,"end_array",E,"Called after every array. Writes a `]` to the specified…",10,[[["self"],["w"]],[R[3]]]],[11,R[4620],E,"Called before every array value. Writes a `,` if needed to…",10,[[["self"],["w"],["bool"]],[R[3]]]],[11,R[4621],E,"Called after every array value.",10,[[["self"],["w"]],[R[3]]]],[11,R[4622],E,"Called before every object. Writes a `{` to the specified…",10,[[["self"],["w"]],[R[3]]]],[11,"end_object",E,"Called after every object. Writes a `}` to the specified…",10,[[["self"],["w"]],[R[3]]]],[11,R[4623],E,"Called before every object key.",10,[[["self"],["w"],["bool"]],[R[3]]]],[11,"end_object_key",E,"Called after every object key. A `:` should be written to…",10,[[["self"],["w"]],[R[3]]]],[11,R[4624],E,"Called before every object value. A `:` should be written…",10,[[["self"],["w"]],[R[3]]]],[11,R[4625],E,"Called after every object value.",10,[[["self"],["w"]],[R[3]]]],[11,"write_raw_fragment",E,"Writes a raw JSON fragment that doesn't need any escaping…",10,[[["self"],["w"],["str"]],[R[3]]]],[11,"new",E,"Creates a new JSON serializer.",11,[[["w"]],["self"]]],[11,"pretty",E,"Creates a new JSON pretty print serializer.",11,[[["w"]],["self"]]],[11,"with_formatter",E,"Creates a new JSON visitor whose output will be written to…",11,[[["w"],["f"]],["self"]]],[11,R[15],E,"Unwrap the `Writer` from the `Serializer`.",11,[[],["w"]]],[11,"new",E,"Construct a pretty printer formatter that defaults to…",12,[[],["self"]]],[11,"with_indent",E,"Construct a pretty printer formatter that uses the…",12,[[],["self"]]],[0,"value",R[4591],"The Value enum, a loosely typed way of representing any…",N,N],[3,"Number",R[4618],R[4581],N,N],[4,"Value",E,R[4605],N,N],[13,"Null",E,R[4606],0,N],[13,"Bool",E,R[4607],0,N],[13,"Number",E,R[4581],0,N],[13,"String",E,R[4608],0,N],[13,"Array",E,R[4609],0,N],[13,"Object",E,R[4610],0,N],[5,"to_value",E,R[4611],N,[[[T]],[["value"],["error"],[R[3],["value","error"]]]]],[5,R[2995],E,R[4612],N,[[["value"]],[[R[3],["error"]],["error"]]]],[8,"Index",E,"A type that can be used to index into a `serde_json::Value`.",N,N],[11,"get",E,"Index into a JSON array or map. A string index can be used…",0,[[["self"],["index"]],[[R[23],["value"]],["value"]]]],[11,R[39],E,"Mutably index into a JSON array or map. A string index can…",0,[[["self"],["index"]],[["value"],[R[23],["value"]]]]],[11,"is_object",E,"Returns true if the `Value` is an Object. Returns false…",0,[[["self"]],["bool"]]],[11,"as_object",E,"If the `Value` is an Object, returns the associated Map.…",0,[[["self"]],[[R[23],["map"]],["map"]]]],[11,"as_object_mut",E,"If the `Value` is an Object, returns the associated…",0,[[["self"]],[["map"],[R[23],["map"]]]]],[11,"is_array",E,"Returns true if the `Value` is an Array. Returns false…",0,[[["self"]],["bool"]]],[11,"as_array",E,"If the `Value` is an Array, returns the associated vector.…",0,[[["self"]],[[R[23],["vec"]],["vec"]]]],[11,"as_array_mut",E,"If the `Value` is an Array, returns the associated mutable…",0,[[["self"]],[["vec"],[R[23],["vec"]]]]],[11,"is_string",E,"Returns true if the `Value` is a String. Returns false…",0,[[["self"]],["bool"]]],[11,"as_str",E,"If the `Value` is a String, returns the associated str.…",0,[[["self"]],[["str"],[R[23],["str"]]]]],[11,"is_number",E,"Returns true if the `Value` is a Number. Returns false…",0,[[["self"]],["bool"]]],[11,"is_i64",E,"Returns true if the `Value` is an integer between…",0,[[["self"]],["bool"]]],[11,"is_u64",E,"Returns true if the `Value` is an integer between zero and…",0,[[["self"]],["bool"]]],[11,"is_f64",E,"Returns true if the `Value` is a number that can be…",0,[[["self"]],["bool"]]],[11,"as_i64",E,"If the `Value` is an integer, represent it as i64 if…",0,[[["self"]],[[R[23],["i64"]],["i64"]]]],[11,"as_u64",E,"If the `Value` is an integer, represent it as u64 if…",0,[[["self"]],[["u64"],[R[23],["u64"]]]]],[11,"as_f64",E,"If the `Value` is a number, represent it as f64 if…",0,[[["self"]],[[R[23],["f64"]],["f64"]]]],[11,"is_boolean",E,"Returns true if the `Value` is a Boolean. Returns false…",0,[[["self"]],["bool"]]],[11,"as_bool",E,"If the `Value` is a Boolean, returns the associated bool.…",0,[[["self"]],[[R[23],["bool"]],["bool"]]]],[11,"is_null",E,"Returns true if the `Value` is a Null. Returns false…",0,[[["self"]],["bool"]]],[11,"as_null",E,"If the `Value` is a Null, returns (). Returns None…",0,[[["self"]],[R[23]]]],[11,"pointer",E,"Looks up a value by a JSON Pointer.",0,[[["self"],["str"]],[[R[23],["value"]],["value"]]]],[11,"pointer_mut",E,"Looks up a value by a JSON Pointer and returns a mutable…",0,[[["self"],["str"]],[[R[23],["value"]],["value"]]]],[11,"take",E,"Takes the value out of the `Value`, leaving a `Null` in…",0,[[["self"]],["value"]]],[11,"is_i64",R[4591],"Returns true if the `Number` is an integer between…",13,[[["self"]],["bool"]]],[11,"is_u64",E,"Returns true if the `Number` is an integer between zero…",13,[[["self"]],["bool"]]],[11,"is_f64",E,"Returns true if the `Number` can be represented by f64.",13,[[["self"]],["bool"]]],[11,"as_i64",E,"If the `Number` is an integer, represent it as i64 if…",13,[[["self"]],[[R[23],["i64"]],["i64"]]]],[11,"as_u64",E,"If the `Number` is an integer, represent it as u64 if…",13,[[["self"]],[["u64"],[R[23],["u64"]]]]],[11,"as_f64",E,"Represents the number as f64 if possible. Returns None…",13,[[["self"]],[[R[23],["f64"]],["f64"]]]],[11,"from_f64",E,"Converts a finite `f64` to a `Number`. Infinite or NaN…",13,[[["f64"]],[[R[23],["number"]],["number"]]]],[11,"new",R[4613],"Create a JSON input source to read from a std::io input…",14,[[["r"]],["self"]]],[11,"new",E,"Create a JSON input source to read from a slice of bytes.",15,[[],["self"]]],[11,"new",E,"Create a JSON input source to read from a UTF-8 string.",16,[[["str"]],["self"]]],[6,"Result",R[4591],R[4614],N,N],[14,"json",E,"Construct a `serde_json::Value` from a JSON literal.",N,N],[11,"into",R[4613],E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[4],E,E,1,[[[U]],[R[3]]]],[11,R[5],E,E,1,[[],[R[3]]]],[11,R[7],E,E,1,[[["self"]],[T]]],[11,R[6],E,E,1,[[["self"]],[T]]],[11,R[8],E,E,1,[[["self"]],[R[9]]]],[11,"into",E,E,2,[[],[U]]],[11,R[45],E,E,2,[[],["i"]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[4],E,E,2,[[[U]],[R[3]]]],[11,R[5],E,E,2,[[],[R[3]]]],[11,R[7],E,E,2,[[["self"]],[T]]],[11,R[6],E,E,2,[[["self"]],[T]]],[11,R[8],E,E,2,[[["self"]],[R[9]]]],[11,"into",R[4615],E,4,[[],[U]]],[11,R[113],E,E,4,[[["self"]],["string"]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[4],E,E,4,[[[U]],[R[3]]]],[11,R[5],E,E,4,[[],[R[3]]]],[11,R[7],E,E,4,[[["self"]],[T]]],[11,R[6],E,E,4,[[["self"]],[T]]],[11,R[8],E,E,4,[[["self"]],[R[9]]]],[11,"into",R[4616],E,11,[[],[U]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[4],E,E,11,[[[U]],[R[3]]]],[11,R[5],E,E,11,[[],[R[3]]]],[11,R[7],E,E,11,[[["self"]],[T]]],[11,R[6],E,E,11,[[["self"]],[T]]],[11,R[8],E,E,11,[[["self"]],[R[9]]]],[11,"into",R[4617],E,6,[[],[U]]],[11,R[45],E,E,6,[[],["i"]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[46],E,E,6,[[["self"]],[T]]],[11,R[47],E,E,6,[[["self"],[T]]]],[11,R[4],E,E,6,[[[U]],[R[3]]]],[11,R[5],E,E,6,[[],[R[3]]]],[11,R[7],E,E,6,[[["self"]],[T]]],[11,R[6],E,E,6,[[["self"]],[T]]],[11,R[8],E,E,6,[[["self"]],[R[9]]]],[11,"into",R[4591],E,13,[[],[U]]],[11,R[113],E,E,13,[[["self"]],["string"]]],[11,"from",E,E,13,[[[T]],[T]]],[11,R[46],E,E,13,[[["self"]],[T]]],[11,R[47],E,E,13,[[["self"],[T]]]],[11,R[4],E,E,13,[[[U]],[R[3]]]],[11,R[5],E,E,13,[[],[R[3]]]],[11,R[7],E,E,13,[[["self"]],[T]]],[11,R[6],E,E,13,[[["self"]],[T]]],[11,R[8],E,E,13,[[["self"]],[R[9]]]],[11,"into",R[4618],E,0,[[],[U]]],[11,R[113],E,E,0,[[["self"]],["string"]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[46],E,E,0,[[["self"]],[T]]],[11,R[47],E,E,0,[[["self"],[T]]]],[11,R[4],E,E,0,[[[U]],[R[3]]]],[11,R[5],E,E,0,[[],[R[3]]]],[11,R[7],E,E,0,[[["self"]],[T]]],[11,R[6],E,E,0,[[["self"]],[T]]],[11,R[8],E,E,0,[[["self"]],[R[9]]]],[11,"into",R[4613],E,14,[[],[U]]],[11,"from",E,E,14,[[[T]],[T]]],[11,R[4],E,E,14,[[[U]],[R[3]]]],[11,R[5],E,E,14,[[],[R[3]]]],[11,R[7],E,E,14,[[["self"]],[T]]],[11,R[6],E,E,14,[[["self"]],[T]]],[11,R[8],E,E,14,[[["self"]],[R[9]]]],[11,"into",E,E,15,[[],[U]]],[11,"from",E,E,15,[[[T]],[T]]],[11,R[4],E,E,15,[[[U]],[R[3]]]],[11,R[5],E,E,15,[[],[R[3]]]],[11,R[7],E,E,15,[[["self"]],[T]]],[11,R[6],E,E,15,[[["self"]],[T]]],[11,R[8],E,E,15,[[["self"]],[R[9]]]],[11,"into",E,E,16,[[],[U]]],[11,"from",E,E,16,[[[T]],[T]]],[11,R[4],E,E,16,[[[U]],[R[3]]]],[11,R[5],E,E,16,[[],[R[3]]]],[11,R[7],E,E,16,[[["self"]],[T]]],[11,R[6],E,E,16,[[["self"]],[T]]],[11,R[8],E,E,16,[[["self"]],[R[9]]]],[11,"into",R[4615],E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[46],E,E,3,[[["self"]],[T]]],[11,R[47],E,E,3,[[["self"],[T]]]],[11,R[4],E,E,3,[[[U]],[R[3]]]],[11,R[5],E,E,3,[[],[R[3]]]],[11,R[7],E,E,3,[[["self"]],[T]]],[11,R[6],E,E,3,[[["self"]],[T]]],[11,R[8],E,E,3,[[["self"]],[R[9]]]],[11,"into",R[4617],E,7,[[],[U]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[4],E,E,7,[[[U]],[R[3]]]],[11,R[5],E,E,7,[[],[R[3]]]],[11,R[7],E,E,7,[[["self"]],[T]]],[11,R[6],E,E,7,[[["self"]],[T]]],[11,R[8],E,E,7,[[["self"]],[R[9]]]],[11,"into",E,E,8,[[],[U]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[4],E,E,8,[[[U]],[R[3]]]],[11,R[5],E,E,8,[[],[R[3]]]],[11,R[7],E,E,8,[[["self"]],[T]]],[11,R[6],E,E,8,[[["self"]],[T]]],[11,R[8],E,E,8,[[["self"]],[R[9]]]],[11,"into",E,E,17,[[],[U]]],[11,R[45],E,E,17,[[],["i"]]],[11,"from",E,E,17,[[[T]],[T]]],[11,R[4],E,E,17,[[[U]],[R[3]]]],[11,R[5],E,E,17,[[],[R[3]]]],[11,R[7],E,E,17,[[["self"]],[T]]],[11,R[6],E,E,17,[[["self"]],[T]]],[11,R[8],E,E,17,[[["self"]],[R[9]]]],[11,"into",E,E,18,[[],[U]]],[11,R[45],E,E,18,[[],["i"]]],[11,"from",E,E,18,[[[T]],[T]]],[11,R[4],E,E,18,[[[U]],[R[3]]]],[11,R[5],E,E,18,[[],[R[3]]]],[11,R[7],E,E,18,[[["self"]],[T]]],[11,R[6],E,E,18,[[["self"]],[T]]],[11,R[8],E,E,18,[[["self"]],[R[9]]]],[11,"into",E,E,19,[[],[U]]],[11,R[45],E,E,19,[[],["i"]]],[11,"from",E,E,19,[[[T]],[T]]],[11,R[4],E,E,19,[[[U]],[R[3]]]],[11,R[5],E,E,19,[[],[R[3]]]],[11,R[7],E,E,19,[[["self"]],[T]]],[11,R[6],E,E,19,[[["self"]],[T]]],[11,R[8],E,E,19,[[["self"]],[R[9]]]],[11,"into",E,E,20,[[],[U]]],[11,R[45],E,E,20,[[],["i"]]],[11,"from",E,E,20,[[[T]],[T]]],[11,R[4],E,E,20,[[[U]],[R[3]]]],[11,R[5],E,E,20,[[],[R[3]]]],[11,R[7],E,E,20,[[["self"]],[T]]],[11,R[6],E,E,20,[[["self"]],[T]]],[11,R[8],E,E,20,[[["self"]],[R[9]]]],[11,"into",E,E,21,[[],[U]]],[11,R[45],E,E,21,[[],["i"]]],[11,"from",E,E,21,[[[T]],[T]]],[11,R[4],E,E,21,[[[U]],[R[3]]]],[11,R[5],E,E,21,[[],[R[3]]]],[11,R[7],E,E,21,[[["self"]],[T]]],[11,R[6],E,E,21,[[["self"]],[T]]],[11,R[8],E,E,21,[[["self"]],[R[9]]]],[11,"into",E,E,22,[[],[U]]],[11,R[45],E,E,22,[[],["i"]]],[11,"from",E,E,22,[[[T]],[T]]],[11,R[4],E,E,22,[[[U]],[R[3]]]],[11,R[5],E,E,22,[[],[R[3]]]],[11,R[7],E,E,22,[[["self"]],[T]]],[11,R[6],E,E,22,[[["self"]],[T]]],[11,R[8],E,E,22,[[["self"]],[R[9]]]],[11,"into",E,E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[4],E,E,5,[[[U]],[R[3]]]],[11,R[5],E,E,5,[[],[R[3]]]],[11,R[7],E,E,5,[[["self"]],[T]]],[11,R[6],E,E,5,[[["self"]],[T]]],[11,R[8],E,E,5,[[["self"]],[R[9]]]],[11,"into",R[4616],E,23,[[],[U]]],[11,"from",E,E,23,[[[T]],[T]]],[11,R[46],E,E,23,[[["self"]],[T]]],[11,R[47],E,E,23,[[["self"],[T]]]],[11,R[4],E,E,23,[[[U]],[R[3]]]],[11,R[5],E,E,23,[[],[R[3]]]],[11,R[7],E,E,23,[[["self"]],[T]]],[11,R[6],E,E,23,[[["self"]],[T]]],[11,R[8],E,E,23,[[["self"]],[R[9]]]],[11,"into",E,E,12,[[],[U]]],[11,"from",E,E,12,[[[T]],[T]]],[11,R[46],E,E,12,[[["self"]],[T]]],[11,R[47],E,E,12,[[["self"],[T]]]],[11,R[4],E,E,12,[[[U]],[R[3]]]],[11,R[5],E,E,12,[[],[R[3]]]],[11,R[7],E,E,12,[[["self"]],[T]]],[11,R[6],E,E,12,[[["self"]],[T]]],[11,R[8],E,E,12,[[["self"]],[R[9]]]],[11,"into",E,E,9,[[],[U]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[4],E,E,9,[[[U]],[R[3]]]],[11,R[5],E,E,9,[[],[R[3]]]],[11,R[7],E,E,9,[[["self"]],[T]]],[11,R[6],E,E,9,[[["self"]],[T]]],[11,R[8],E,E,9,[[["self"]],[R[9]]]],[11,R[4619],E,E,12,[[["self"],["w"]],[R[3]]]],[11,"end_array",E,E,12,[[["self"],["w"]],[R[3]]]],[11,R[4620],E,E,12,[[["self"],["w"],["bool"]],[R[3]]]],[11,R[4621],E,E,12,[[["self"],["w"]],[R[3]]]],[11,R[4622],E,E,12,[[["self"],["w"]],[R[3]]]],[11,"end_object",E,E,12,[[["self"],["w"]],[R[3]]]],[11,R[4623],E,E,12,[[["self"],["w"],["bool"]],[R[3]]]],[11,R[4624],E,E,12,[[["self"],["w"]],[R[3]]]],[11,R[4625],E,E,12,[[["self"],["w"]],[R[3]]]],[11,"next",R[4613],E,14,[[["self"]],[[R[3],[R[23]]],[R[23],["u8"]]]]],[11,"peek",E,E,14,[[["self"]],[[R[3],[R[23]]],[R[23],["u8"]]]]],[11,"discard",E,E,14,[[["self"]]]],[11,R[368],E,E,14,[[["self"]],[R[368]]]],[11,R[4628],E,E,14,[[["self"]],[R[368]]]],[11,R[4626],E,E,14,[[["self"]],["usize"]]],[11,R[4635],E,E,14,[[["self"],["vec"]],[[R[3],[R[4627]]],[R[4627],["str"]]]]],[11,R[4629],E,E,14,[[["self"],["vec"]],[[R[3],[R[4627]]],[R[4627]]]]],[11,R[4631],E,E,14,[[["self"]],[R[3]]]],[11,R[4630],E,E,14,[[["self"]],[["u16"],[R[3],["u16"]]]]],[11,"next",E,E,15,[[["self"]],[[R[3],[R[23]]],[R[23],["u8"]]]]],[11,"peek",E,E,15,[[["self"]],[[R[3],[R[23]]],[R[23],["u8"]]]]],[11,"discard",E,E,15,[[["self"]]]],[11,R[368],E,E,15,[[["self"]],[R[368]]]],[11,R[4628],E,E,15,[[["self"]],[R[368]]]],[11,R[4626],E,E,15,[[["self"]],["usize"]]],[11,R[4635],E,E,15,[[["self"],["vec"]],[[R[3],[R[4627]]],[R[4627],["str"]]]]],[11,R[4629],E,E,15,[[["self"],["vec"]],[[R[4627]],[R[3],[R[4627]]]]]],[11,R[4631],E,E,15,[[["self"]],[R[3]]]],[11,R[4630],E,E,15,[[["self"]],[["u16"],[R[3],["u16"]]]]],[11,"next",E,E,16,[[["self"]],[[R[3],[R[23]]],[R[23],["u8"]]]]],[11,"peek",E,E,16,[[["self"]],[[R[3],[R[23]]],[R[23],["u8"]]]]],[11,"discard",E,E,16,[[["self"]]]],[11,R[368],E,E,16,[[["self"]],[R[368]]]],[11,R[4628],E,E,16,[[["self"]],[R[368]]]],[11,R[4626],E,E,16,[[["self"]],["usize"]]],[11,R[4635],E,E,16,[[["self"],["vec"]],[[R[3],[R[4627]]],[R[4627],["str"]]]]],[11,R[4629],E,E,16,[[["self"],["vec"]],[[R[4627]],[R[3],[R[4627]]]]]],[11,R[4631],E,E,16,[[["self"]],[R[3]]]],[11,R[4630],E,E,16,[[["self"]],[["u16"],[R[3],["u16"]]]]],[11,"len",R[4617],E,17,[[["self"]],["usize"]]],[11,"len",E,E,18,[[["self"]],["usize"]]],[11,"len",E,E,19,[[["self"]],["usize"]]],[11,"len",E,E,20,[[["self"]],["usize"]]],[11,"len",E,E,21,[[["self"]],["usize"]]],[11,"len",E,E,22,[[["self"]],["usize"]]],[11,R[83],E,E,6,[[],["self"]]],[11,R[83],R[4616],E,12,[[],["self"]]],[11,R[83],R[4618],E,0,[[],["value"]]],[11,"extend",R[4617],E,6,[[["self"],[T]]]],[11,"clone",R[4615],E,3,[[["self"]],["category"]]],[11,"clone",R[4617],E,6,[[["self"]],["self"]]],[11,"clone",R[4616],E,23,[[["self"]],["compactformatter"]]],[11,"clone",E,E,12,[[["self"]],["prettyformatter"]]],[11,"clone",R[4618],E,0,[[["self"]],["value"]]],[11,"clone",R[4591],E,13,[[["self"]],["number"]]],[11,"eq",R[4615],E,3,[[["self"],["category"]],["bool"]]],[11,"eq",R[4617],E,6,[[["self"]],["bool"]]],[11,"eq",R[4618],E,0,[[["self"],["value"]],["bool"]]],[11,"ne",E,E,0,[[["self"],["value"]],["bool"]]],[11,"eq",E,E,0,[[["self"],["str"]],["bool"]]],[11,"eq",E,E,0,[[["self"],["str"]],["bool"]]],[11,"eq",E,E,0,[[["self"],["string"]],["bool"]]],[11,"eq",E,E,0,[[["self"],["i8"]],["bool"]]],[11,"eq",E,E,0,[[["self"],["i16"]],["bool"]]],[11,"eq",E,E,0,[[["self"],["i32"]],["bool"]]],[11,"eq",E,E,0,[[["self"],["i64"]],["bool"]]],[11,"eq",E,E,0,[[["self"],["isize"]],["bool"]]],[11,"eq",E,E,0,[[["self"],["u8"]],["bool"]]],[11,"eq",E,E,0,[[["self"],["u16"]],["bool"]]],[11,"eq",E,E,0,[[["self"],["u32"]],["bool"]]],[11,"eq",E,E,0,[[["self"],["u64"]],["bool"]]],[11,"eq",E,E,0,[[["self"],["usize"]],["bool"]]],[11,"eq",E,E,0,[[["self"],["f32"]],["bool"]]],[11,"eq",E,E,0,[[["self"],["f64"]],["bool"]]],[11,"eq",E,E,0,[[["self"],["bool"]],["bool"]]],[11,"eq",R[4591],E,13,[[["self"],["number"]],["bool"]]],[11,"ne",E,E,13,[[["self"],["number"]],["bool"]]],[11,R[45],R[4617],E,6,[[]]],[11,R[52],E,E,17,[[["self"]],[R[23]]]],[11,R[52],E,E,18,[[["self"]],[R[23]]]],[11,R[52],E,E,19,[[["self"]],[R[23]]]],[11,R[52],E,E,20,[[["self"]],[R[23]]]],[11,R[52],E,E,21,[[["self"]],[R[23]]]],[11,R[52],E,E,22,[[["self"]],[R[23]]]],[11,"from",R[4618],E,0,[[["i8"]],["self"]]],[11,"from",E,E,0,[[["i16"]],["self"]]],[11,"from",E,E,0,[[["i32"]],["self"]]],[11,"from",E,E,0,[[["i64"]],["self"]]],[11,"from",E,E,0,[[["isize"]],["self"]]],[11,"from",E,E,0,[[["u8"]],["self"]]],[11,"from",E,E,0,[[["u16"]],["self"]]],[11,"from",E,E,0,[[["u32"]],["self"]]],[11,"from",E,E,0,[[["u64"]],["self"]]],[11,"from",E,E,0,[[["usize"]],["self"]]],[11,"from",E,"Convert 32-bit floating point number to `Value`",0,[[["f32"]],["self"]]],[11,"from",E,"Convert 64-bit floating point number to `Value`",0,[[["f64"]],["self"]]],[11,"from",E,"Convert boolean to `Value`",0,[[["bool"]],["self"]]],[11,"from",E,"Convert `String` to `Value`",0,[[["string"]],["self"]]],[11,"from",E,"Convert string slice to `Value`",0,[[["str"]],["self"]]],[11,"from",E,"Convert copy-on-write string to `Value`",0,[[["str"],["cow",["str"]]],["self"]]],[11,"from",E,"Convert map (with string keys) to `Value`",0,[[["value"],["map",["string","value"]],["string"]],["self"]]],[11,"from",E,"Convert a `Vec` to `Value`",0,[[["vec"]],["self"]]],[11,"from",E,"Convert a slice to `Value`",0,[[],["self"]]],[11,"from",R[4591],E,13,[[["u8"]],["self"]]],[11,"from",E,E,13,[[["u16"]],["self"]]],[11,"from",E,E,13,[[["u32"]],["self"]]],[11,"from",E,E,13,[[["u64"]],["self"]]],[11,"from",E,E,13,[[["usize"]],["self"]]],[11,"from",E,E,13,[[["i8"]],["self"]]],[11,"from",E,E,13,[[["i16"]],["self"]]],[11,"from",E,E,13,[[["i32"]],["self"]]],[11,"from",E,E,13,[[["i64"]],["self"]]],[11,"from",E,E,13,[[["isize"]],["self"]]],[11,"next",R[4613],E,2,[[["self"]],[[R[3]],[R[23],[R[3]]]]]],[11,"next",R[4617],E,17,[[["self"]],[R[23]]]],[11,R[53],E,E,17,[[["self"]]]],[11,"next",E,E,18,[[["self"]],[R[23]]]],[11,R[53],E,E,18,[[["self"]]]],[11,"next",E,E,19,[[["self"]],[R[23]]]],[11,R[53],E,E,19,[[["self"]]]],[11,"next",E,E,20,[[["self"]],[R[23]]]],[11,R[53],E,E,20,[[["self"]]]],[11,"next",E,E,21,[[["self"]],[R[23]]]],[11,R[53],E,E,21,[[["self"]]]],[11,"next",E,E,22,[[["self"]],[R[23]]]],[11,R[53],E,E,22,[[["self"]]]],[11,"fmt",R[4615],E,3,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,4,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[4617],E,6,[[["self"],[R[10]]],[["error"],[R[3],["error"]]]]],[11,"fmt",R[4616],E,23,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,12,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[4618],E,0,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[4591],E,13,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[4615],E,4,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[4618],"Display a JSON value as a string.",0,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[4591],E,13,[[["self"],[R[10]]],[R[3]]]],[11,R[775],E,E,13,[[["str"]],[R[3]]]],[11,R[775],R[4618],E,0,[[["str"]],[["value"],["error"],[R[3],["value","error"]]]]],[11,"index",R[4617],E,6,[[["self"],["q"]],["value"]]],[11,"index",R[4618],"Index into a `serde_json::Value` using the syntax…",0,[[["self"],["i"]],["value"]]],[11,R[51],R[4617],E,6,[[["self"],["q"]],["value"]]],[11,R[51],R[4618],"Write into a `serde_json::Value` using the syntax…",0,[[["self"],["i"]],["value"]]],[11,R[81],R[4617],E,6,[[[T]],["self"]]],[11,R[81],R[4618],"Convert an iteratable type to a `Value`",0,[[[R[82]]],["self"]]],[11,R[157],R[4615],E,4,[[["self"]],["str"]]],[11,"cause",E,E,4,[[["self"]],[[R[23],["error"]],["error"]]]],[11,R[4382],R[4618],E,0,[[["v"]],[[R[3],["error"]],["error"]]]],[11,R[4386],E,E,0,[[["v"]],[[R[3],["error"]],["error"]]]],[11,R[4388],E,E,0,[[["v"]],[[R[3],["error"]],["error"]]]],[11,R[4390],E,E,0,[[["v"]],[[R[3],["error"]],["error"]]]],[11,R[4392],E,E,0,[[["v"]],[[R[3],["error"]],["error"]]]],[11,R[4396],E,E,0,[[["v"]],[[R[3],["error"]],["error"]]]],[11,R[4398],E,E,0,[[["v"]],[[R[3],["error"]],["error"]]]],[11,R[4400],E,E,0,[[["v"]],[[R[3],["error"]],["error"]]]],[11,R[4402],E,E,0,[[["v"]],[[R[3],["error"]],["error"]]]],[11,R[4406],E,E,0,[[["v"]],[[R[3],["error"]],["error"]]]],[11,R[4408],E,E,0,[[["v"]],[[R[3],["error"]],["error"]]]],[11,R[4394],E,E,0,[[["v"]],[[R[3],["error"]],["error"]]]],[11,R[4404],E,E,0,[[["v"]],[[R[3],["error"]],["error"]]]],[11,R[4416],E,E,0,[[["v"]],[[R[3],["error"]],["error"]]]],[11,R[4432],E,E,0,[[["v"],["str"]],[[R[3],["error"]],["error"]]]],[11,R[4422],E,E,0,[[["v"],["str"]],[R[3]]]],[11,R[4384],E,E,0,[[["v"]],[R[3]]]],[11,R[4410],E,E,0,[[["v"]],[R[3]]]],[11,R[4412],E,E,0,[[["v"]],[R[3]]]],[11,R[4413],E,E,0,[[["v"]],[R[3]]]],[11,R[4414],E,E,0,[[["v"]],[R[3]]]],[11,R[4415],E,E,0,[[["v"]],[R[3]]]],[11,R[4418],E,E,0,[[["v"]],[R[3]]]],[11,R[4420],E,E,0,[[["v"],["str"]],[R[3]]]],[11,R[4424],E,E,0,[[["v"]],[R[3]]]],[11,R[4425],E,E,0,[[["usize"],["v"]],[R[3]]]],[11,R[4426],E,E,0,[[["v"],["usize"],["str"]],[R[3]]]],[11,R[4428],E,E,0,[[["v"]],[R[3]]]],[11,R[4430],E,E,0,[[["v"],["str"]],[R[3]]]],[11,R[4434],E,E,0,[[["v"]],[R[3]]]],[11,R[4436],E,E,0,[[["v"]],[R[3]]]],[11,R[4382],R[4591],E,13,[[["v"]],[[R[3],["error"]],["error"]]]],[11,R[4386],E,E,13,[[["v"]],[[R[3],["error"]],["error"]]]],[11,R[4388],E,E,13,[[["v"]],[[R[3],["error"]],["error"]]]],[11,R[4390],E,E,13,[[["v"]],[[R[3],["error"]],["error"]]]],[11,R[4392],E,E,13,[[["v"]],[[R[3],["error"]],["error"]]]],[11,R[4396],E,E,13,[[["v"]],[[R[3],["error"]],["error"]]]],[11,R[4398],E,E,13,[[["v"]],[[R[3],["error"]],["error"]]]],[11,R[4400],E,E,13,[[["v"]],[[R[3],["error"]],["error"]]]],[11,R[4402],E,E,13,[[["v"]],[[R[3],["error"]],["error"]]]],[11,R[4406],E,E,13,[[["v"]],[[R[3],["error"]],["error"]]]],[11,R[4408],E,E,13,[[["v"]],[[R[3],["error"]],["error"]]]],[11,R[4394],E,E,13,[[["v"]],[[R[3],["error"]],["error"]]]],[11,R[4404],E,E,13,[[["v"]],[[R[3],["error"]],["error"]]]],[11,R[4384],E,E,13,[[["v"]],[R[3]]]],[11,R[4410],E,E,13,[[["v"]],[R[3]]]],[11,R[4412],E,E,13,[[["v"]],[R[3]]]],[11,R[4413],E,E,13,[[["v"]],[R[3]]]],[11,R[4414],E,E,13,[[["v"]],[R[3]]]],[11,R[4415],E,E,13,[[["v"]],[R[3]]]],[11,R[4416],E,E,13,[[["v"]],[R[3]]]],[11,R[4418],E,E,13,[[["v"]],[R[3]]]],[11,R[4420],E,E,13,[[["v"],["str"]],[R[3]]]],[11,R[4422],E,E,13,[[["v"],["str"]],[R[3]]]],[11,R[4424],E,E,13,[[["v"]],[R[3]]]],[11,R[4425],E,E,13,[[["usize"],["v"]],[R[3]]]],[11,R[4426],E,E,13,[[["v"],["usize"],["str"]],[R[3]]]],[11,R[4428],E,E,13,[[["v"]],[R[3]]]],[11,R[4430],E,E,13,[[["v"],["str"]],[R[3]]]],[11,R[4432],E,E,13,[[["v"],["str"]],[R[3]]]],[11,R[4434],E,E,13,[[["v"]],[R[3]]]],[11,R[4436],E,E,13,[[["v"]],[R[3]]]],[11,R[4563],R[4617],E,6,[[["self"],["s"]],[R[3]]]],[11,R[4563],R[4618],E,0,[[["self"],["s"]],[R[3]]]],[11,R[4563],R[4591],E,13,[[["self"],["s"]],[R[3]]]],[11,"custom",R[4615],E,4,[[["display"]],["error"]]],[11,R[4354],R[4617],E,6,[[["d"]],[R[3]]]],[11,R[4354],R[4618],E,0,[[["d"]],[["value"],[R[3],["value"]]]]],[11,R[4354],R[4591],E,13,[[["d"]],[["number"],[R[3],["number"]]]]],[11,"custom",R[4615],E,4,[[["display"]],["error"]]],[11,R[4632],E,E,4,[[[R[4531]],[R[4723]]],["self"]]]],"p":[[4,"Value"],[3,R[4365]],[3,R[4584]],[4,"Category"],[3,"Error"],[4,"Entry"],[3,"Map"],[3,R[314]],[3,R[315]],[4,"CharEscape"],[8,"Formatter"],[3,R[4541]],[3,R[4633]],[3,"Number"],[3,"IoRead"],[3,"SliceRead"],[3,"StrRead"],[3,"Iter"],[3,R[631]],[3,R[306]],[3,"Keys"],[3,"Values"],[3,R[316]],[3,R[4634]]]};
searchIndex["smallvec"]={"doc":"Small vectors in various sizes. These store a certain…","i":[[3,"Drain",R[116],"An iterator that removes the items from a `SmallVec` and…",N,N],[3,"SmallVec",E,"A `Vec`-like container that can store a small number of…",N,N],[3,R[306],E,"An iterator that consumes a `SmallVec` and yields its…",N,N],[5,R[127],E,"Hint to the optimizer that any code path which calls this…",N,[[]]],[8,"VecLike",E,"Common operations implemented by both `Vec` and `SmallVec`.",N,N],[10,"push",E,"Append an element to the vector.",0,[[["self"],[T]]]],[8,R[125],E,"Trait to be implemented by a collection that can be…",N,N],[10,R[122],E,"Extends a collection from a slice of its element type",1,[[["self"]]]],[8,"Array",E,"Types that can be used as the backing store for a SmallVec",N,N],[16,"Item",E,"The type of the array's elements.",2,N],[10,"size",E,"Returns the number of items the array can hold.",2,[[],["usize"]]],[10,"ptr",E,"Returns a pointer to the first element of the array.",2,[[["self"]]]],[10,"ptr_mut",E,"Returns a mutable pointer to the first element of the array.",2,[[["self"]]]],[11,"new",E,"Construct an empty vector",3,[[],[R[116]]]],[11,R[115],E,"Construct an empty vector with enough capacity…",3,[[["usize"]],["self"]]],[11,"from_vec",E,"Construct a new `SmallVec` from a `Vec<A::Item>`.",3,[[["vec"]],[R[116]]]],[11,"from_buf",E,R[117],3,[[["a"]],[R[116]]]],[11,"from_buf_and_len",E,R[117],3,[[["a"],["usize"]],[R[116]]]],[11,"from_buf_and_len_unchecked",E,R[117],3,[[["a"],["usize"]],[R[116]]]],[11,"set_len",E,"Sets the length of a vector.",3,[[["self"],["usize"]]]],[11,"inline_size",E,"The maximum number of elements this vector can hold inline",3,[[["self"]],["usize"]]],[11,"len",E,"The number of elements stored in the vector",3,[[["self"]],["usize"]]],[11,R[25],E,"Returns `true` if the vector is empty",3,[[["self"]],["bool"]]],[11,R[764],E,"The number of items the vector can hold without reallocating",3,[[["self"]],["usize"]]],[11,"spilled",E,"Returns `true` if the data has spilled into a separate…",3,[[["self"]],["bool"]]],[11,"drain",E,"Empty the vector and return an iterator over its former…",3,[[["self"]],["drain"]]],[11,"push",E,"Append an item to the vector.",3,[[["self"]]]],[11,"pop",E,"Remove an item from the end of the vector and return it,…",3,[[["self"]],[R[23]]]],[11,"grow",E,"Re-allocate to set the capacity to `max(new_cap,…",3,[[["self"],["usize"]]]],[11,"reserve",E,"Reserve capacity for `additional` more elements to be…",3,[[["self"],["usize"]]]],[11,R[118],E,"Reserve the minimum capacity for `additional` more…",3,[[["self"],["usize"]]]],[11,R[119],E,"Shrink the capacity of the vector as much as possible.",3,[[["self"]]]],[11,R[765],E,"Shorten the vector, keeping the first `len` elements and…",3,[[["self"],["usize"]]]],[11,R[44],E,"Extracts a slice containing the entire vector.",3,[[["self"]]]],[11,R[74],E,"Extracts a mutable slice of the entire vector.",3,[[["self"]]]],[11,R[120],E,"Remove the element at position `index`, replacing it with…",3,[[["self"],["usize"]]]],[11,"clear",E,"Remove all elements from the vector.",3,[[["self"]]]],[11,"remove",E,"Remove and return the element at position `index`,…",3,[[["self"],["usize"]]]],[11,"insert",E,"Insert an element at position `index`, shifting all…",3,[[["self"],["usize"]]]],[11,"insert_many",E,"Insert multiple elements at position `index`, shifting all…",3,[[["self"],["usize"],[R[82]]]]],[11,"into_vec",E,"Convert a SmallVec to a Vec, without reallocating if the…",3,[[],["vec"]]],[11,R[15],E,"Convert the SmallVec into an `A` if possible. Otherwise…",3,[[],[R[3]]]],[11,"retain",E,R[313],3,[[["self"],["fnmut"]]]],[11,"dedup",E,"Removes consecutive duplicate elements.",3,[[["self"]]]],[11,"dedup_by",E,"Removes consecutive duplicate elements using the given…",3,[[["self"],["f"]]]],[11,"dedup_by_key",E,"Removes consecutive elements that map to the same key.",3,[[["self"],["f"]]]],[11,R[3918],E,"Creates a `SmallVec` directly from the raw components of…",3,[[["usize"]],[R[116]]]],[11,R[121],E,"Copy the elements from a slice into a new `SmallVec`.",3,[[],["self"]]],[11,"insert_from_slice",E,"Copy elements from a slice into the vector at position…",3,[[["self"],["usize"]]]],[11,R[122],E,"Copy elements from a slice and append them to the vector.",3,[[["self"]]]],[11,"resize",E,"Resizes the vector so that its length is equal to `len`.",3,[[["self"],["usize"]]]],[11,"from_elem",E,"Creates a `SmallVec` with `n` copies of `elem`. ``` use…",3,[[["usize"]],["self"]]],[14,R[116],E,"Creates a [`SmallVec`] containing the arguments.",N,N],[11,"into",E,E,4,[[],[U]]],[11,R[45],E,E,4,[[],["i"]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[4],E,E,4,[[[U]],[R[3]]]],[11,R[5],E,E,4,[[],[R[3]]]],[11,R[7],E,E,4,[[["self"]],[T]]],[11,R[6],E,E,4,[[["self"]],[T]]],[11,R[8],E,E,4,[[["self"]],[R[9]]]],[11,"into",E,E,3,[[],[U]]],[11,R[45],E,E,3,[[],["i"]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[46],E,E,3,[[["self"]],[T]]],[11,R[47],E,E,3,[[["self"],[T]]]],[11,R[4],E,E,3,[[[U]],[R[3]]]],[11,R[5],E,E,3,[[],[R[3]]]],[11,R[7],E,E,3,[[["self"]],[T]]],[11,R[6],E,E,3,[[["self"]],[T]]],[11,R[8],E,E,3,[[["self"]],[R[9]]]],[11,"into",E,E,5,[[],[U]]],[11,R[45],E,E,5,[[],["i"]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[4],E,E,5,[[[U]],[R[3]]]],[11,R[5],E,E,5,[[],[R[3]]]],[11,R[7],E,E,5,[[["self"]],[T]]],[11,R[6],E,E,5,[[["self"]],[T]]],[11,R[8],E,E,5,[[["self"]],[R[9]]]],[11,"push",E,E,3,[[["self"]]]],[11,R[122],E,E,3,[[["self"]]]],[11,"as_ref",E,E,3,[[["self"]]]],[11,R[83],E,E,3,[[],[R[116]]]],[11,"extend",E,E,3,[[["self"],[R[82]]]]],[11,"clone",E,E,3,[[["self"]],[R[116]]]],[11,R[77],E,E,3,[[["self"],[R[116]]],[[R[50]],[R[23],[R[50]]]]]],[11,"as_mut",E,E,3,[[["self"]]]],[11,"cmp",E,E,3,[[["self"],[R[116]]],[R[50]]]],[11,"eq",E,E,3,[[["self"],[R[116]]],["bool"]]],[11,"ne",E,E,3,[[["self"],[R[116]]],["bool"]]],[11,R[45],E,E,3,[[]]],[11,R[52],E,E,4,[[["self"]],[R[23]]]],[11,R[52],E,E,5,[[["self"]],[R[23]]]],[11,"drop",E,E,4,[[["self"]]]],[11,"drop",E,E,3,[[["self"]]]],[11,"drop",E,E,5,[[["self"]]]],[11,"from",E,E,3,[[],[R[116]]]],[11,"from",E,E,3,[[["vec"]],[R[116]]]],[11,"from",E,E,3,[[["a"]],[R[116]]]],[11,"next",E,E,4,[[["self"]],[R[23]]]],[11,R[53],E,E,4,[[["self"]]]],[11,"next",E,E,5,[[["self"]],[R[23]]]],[11,R[53],E,E,5,[[["self"]]]],[11,"deref",E,E,3,[[["self"]]]],[11,R[17],E,E,3,[[["self"]]]],[11,"hash",E,E,3,[[["self"],["h"]]]],[11,"fmt",E,E,3,[[["self"],[R[10]]],[R[3]]]],[11,"index",E,E,3,[[["self"],["usize"]]]],[11,"index",E,E,3,[[["self"],["range",["usize"]],["usize"]]]],[11,"index",E,E,3,[[["self"],[R[123],["usize"]],["usize"]]]],[11,"index",E,E,3,[[["self"],["rangeto",["usize"]],["usize"]]]],[11,"index",E,E,3,[[["self"],[R[124]]]]],[11,R[51],E,E,3,[[["self"],["usize"]]]],[11,R[51],E,E,3,[[["self"],["range",["usize"]],["usize"]]]],[11,R[51],E,E,3,[[["self"],[R[123],["usize"]],["usize"]]]],[11,R[51],E,E,3,[[["self"],["rangeto",["usize"]],["usize"]]]],[11,R[51],E,E,3,[[["self"],[R[124]]]]],[11,R[81],E,E,3,[[[R[82]]],[R[116]]]],[11,R[7],E,E,3,[[["self"]]]],[11,R[6],E,E,3,[[["self"]]]],[11,"write",E,E,3,[[["self"]],[[R[3],["usize"]],["usize"]]]],[11,R[5498],E,E,3,[[["self"]],[R[3]]]],[11,"flush",E,E,3,[[["self"]],[R[3]]]]],"p":[[8,"VecLike"],[8,R[125]],[8,"Array"],[3,"SmallVec"],[3,"Drain"],[3,R[306]]]};
searchIndex["stable_deref_trait"]={"doc":"This module defines an unsafe marker trait, StableDeref,…","i":[[8,"StableDeref","stable_deref_trait",R[693],N,N],[8,"CloneStableDeref",E,R[694],N,N]],"p":[]};
searchIndex["strsim"]={"doc":"This library implements string similarity metrics.","i":[[4,R[192],"strsim",E,N,N],[13,"DifferentLengthArgs",E,E,0,N],[5,"hamming",E,"Calculates the number of positions in the two strings…",N,[[["str"]],["hammingresult"]]],[5,"jaro",E,"Calculates the Jaro similarity between two strings. The…",N,[[["str"]],["f64"]]],[5,"jaro_winkler",E,"Like Jaro but gives a boost to strings that have a common…",N,[[["str"]],["f64"]]],[5,"levenshtein",E,"Calculates the minimum number of insertions, deletions,…",N,[[["str"]],["usize"]]],[5,"normalized_levenshtein",E,"Calculates a normalized score of the Levenshtein algorithm…",N,[[["str"]],["f64"]]],[5,"osa_distance",E,"Like Levenshtein but allows for adjacent transpositions.…",N,[[["str"]],["usize"]]],[5,"damerau_levenshtein",E,"Like optimal string alignment, but substrings can be…",N,[[["str"]],["usize"]]],[5,"normalized_damerau_levenshtein",E,"Calculates a normalized score of the Damerau–Levenshtein…",N,[[["str"]],["f64"]]],[6,"HammingResult",E,E,N,N],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[4],E,E,0,[[[U]],[R[3]]]],[11,R[5],E,E,0,[[],[R[3]]]],[11,R[7],E,E,0,[[["self"]],[T]]],[11,R[6],E,E,0,[[["self"]],[T]]],[11,R[8],E,E,0,[[["self"]],[R[9]]]],[11,"eq",E,E,0,[[["self"],["strsimerror"]],["bool"]]],[11,"fmt",E,E,0,[[["self"],[R[10]]],[R[3]]]]],"p":[[4,R[192]]]};
searchIndex["structopt"]={"doc":"This crate defines the `StructOpt` trait and its custom…","i":[[0,"clap","structopt","Re-export of clap",N,N],[14,"value_t",R[3672],R[1987],N,N],[4,R[1991],E,R[3574],N,N],[13,R[3575],E,R[3576],0,N],[13,R[3577],E,R[3578],0,N],[13,R[1964],E,R[3579],0,N],[13,R[3580],E,R[3581],0,N],[13,R[3582],E,R[3583],0,N],[13,R[3584],E,R[3585],0,N],[13,R[3586],E,R[3587],0,N],[13,R[3588],E,R[3589],0,N],[13,R[3590],E,R[3591],0,N],[13,"ColorAuto",E,R[3592],0,N],[13,R[3593],E,R[3594],0,N],[13,"ColorNever",E,R[3595],0,N],[13,R[3596],E,R[3597],0,N],[13,R[3598],E,R[3599],0,N],[13,R[3600],E,R[3601],0,N],[13,R[3602],E,R[3603],0,N],[13,R[3604],E,R[3605],0,N],[13,R[3606],E,R[3607],0,N],[13,R[3608],E,R[3609],0,N],[13,"Hidden",E,R[3610],0,N],[13,R[3611],E,R[3612],0,N],[13,R[3613],E,R[3614],0,N],[13,R[3615],E,R[3616],0,N],[13,R[1965],E,R[3617],0,N],[13,R[3618],E,R[3619],0,N],[13,R[3620],E,R[3621],0,N],[13,R[3622],E,R[3623],0,N],[13,"StrictUtf8",E,R[3624],0,N],[13,R[3625],E,R[3626],0,N],[13,R[3627],E,R[3628],0,N],[13,R[3629],E,R[3630],0,N],[13,R[3631],E,R[3632],0,N],[13,R[3633],E,R[3634],0,N],[4,R[372],E,R[3636],N,N],[13,R[3637],E,R[3638],1,N],[13,R[3639],E,R[3640],1,N],[13,R[3641],E,R[1966],1,N],[13,R[3642],E,R[1966],1,N],[13,"EmptyValue",E,R[3643],1,N],[13,R[3644],E,R[3645],1,N],[13,R[3646],E,R[3647],1,N],[13,R[3648],E,R[3649],1,N],[13,R[3650],E,R[3651],1,N],[13,R[3652],E,R[3653],1,N],[13,R[3654],E,R[3655],1,N],[13,R[3656],E,R[3657],1,N],[13,R[3658],E,R[3659],1,N],[13,R[3660],E,R[3661],1,N],[13,R[1552],E,R[3662],1,N],[13,R[3663],E,R[3664],1,N],[13,R[3665],E,R[3666],1,N],[13,R[3667],E,R[3668],1,N],[13,"Io",E,R[3669],1,N],[13,"Format",E,R[3670],1,N],[14,"arg_enum",E,R[3573],N,N],[3,"ArgGroup",E,R[3635],N,N],[3,R[3569],E,R[3570],N,N],[6,"Result",E,R[3525],N,N],[3,"Error",E,R[3520],N,N],[12,"message",E,R[3521],2,N],[12,"kind",E,R[3522],2,N],[12,"info",E,R[3523],2,N],[14,"crate_name",E,R[3532],N,N],[14,R[3564],E,R[1987],N,N],[3,"Arg",E,R[3524],N,N],[14,"values_t",E,R[1988],N,N],[3,"App",E,R[3515],N,N],[14,R[3516],E,R[3517],N,N],[14,R[3534],E,R[3535],N,N],[3,"OsValues",E,R[1963],N,N],[4,"Shell",E,R[3526],N,N],[13,"Bash",E,R[3527],3,N],[13,"Fish",E,R[3528],3,N],[13,"Zsh",E,R[3529],3,N],[13,"PowerShell",E,R[3530],3,N],[13,"Elvish",E,R[3531],3,N],[14,R[3567],E,R[3568],N,N],[3,"Values",E,R[1963],N,N],[4,R[1990],E,R[3536],N,N],[13,"Required",E,R[3537],4,N],[13,"Multiple",E,R[3538],4,N],[13,R[3539],E,R[3540],4,N],[13,"Global",E,R[3541],4,N],[13,"Hidden",E,R[3542],4,N],[13,"TakesValue",E,R[3543],4,N],[13,R[3544],E,R[3545],4,N],[13,R[1965],E,R[3546],4,N],[13,R[3547],E,R[3548],4,N],[13,R[3549],E,R[3550],4,N],[13,R[1964],E,R[3551],4,N],[13,R[3552],E,R[3553],4,N],[13,"Last",E,R[3554],4,N],[13,R[3555],E,R[3556],4,N],[13,R[1992],E,R[3557],4,N],[13,R[3558],E,R[3559],4,N],[13,R[3560],E,R[3561],4,N],[13,R[3562],E,R[3563],4,N],[14,R[3518],E,R[3519],N,N],[14,R[3533],E,R[1988],N,N],[3,R[3571],E,R[3572],N,N],[14,"clap_app",E,R[3514],N,N],[14,R[3565],E,R[3566],N,N],[8,"StructOpt","structopt","A struct that is converted from command line arguments.",N,N],[10,"clap",E,"Returns the corresponding `clap::App`.",5,[[],["app"]]],[10,"from_clap",E,"Creates the struct from `clap::ArgMatches`. It cannot fail…",5,[[[R[1976]]],["self"]]],[11,"from_args",E,"Gets the struct from the command line arguments. Print the…",5,[[],["self"]]],[11,R[81],E,R[3671],5,[[["i"]],["self"]]],[11,"from_iter_safe",E,R[3671],5,[[["i"]],[["error"],[R[3],["error"]]]]],[11,"into",R[3672],E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[46],E,E,0,[[["self"]],[T]]],[11,R[47],E,E,0,[[["self"],[T]]]],[11,R[4],E,E,0,[[[U]],[R[3]]]],[11,R[5],E,E,0,[[],[R[3]]]],[11,R[7],E,E,0,[[["self"]],[T]]],[11,R[6],E,E,0,[[["self"]],[T]]],[11,R[8],E,E,0,[[["self"]],[R[9]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[46],E,E,1,[[["self"]],[T]]],[11,R[47],E,E,1,[[["self"],[T]]]],[11,R[4],E,E,1,[[[U]],[R[3]]]],[11,R[5],E,E,1,[[],[R[3]]]],[11,R[7],E,E,1,[[["self"]],[T]]],[11,R[6],E,E,1,[[["self"]],[T]]],[11,R[8],E,E,1,[[["self"]],[R[9]]]],[11,"into",E,E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[46],E,E,6,[[["self"]],[T]]],[11,R[47],E,E,6,[[["self"],[T]]]],[11,R[4],E,E,6,[[[U]],[R[3]]]],[11,R[5],E,E,6,[[],[R[3]]]],[11,R[7],E,E,6,[[["self"]],[T]]],[11,R[6],E,E,6,[[["self"]],[T]]],[11,R[8],E,E,6,[[["self"]],[R[9]]]],[11,"into",E,E,7,[[],[U]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[46],E,E,7,[[["self"]],[T]]],[11,R[47],E,E,7,[[["self"],[T]]]],[11,R[4],E,E,7,[[[U]],[R[3]]]],[11,R[5],E,E,7,[[],[R[3]]]],[11,R[7],E,E,7,[[["self"]],[T]]],[11,R[6],E,E,7,[[["self"]],[T]]],[11,R[8],E,E,7,[[["self"]],[R[9]]]],[11,"into",E,E,2,[[],[U]]],[11,R[113],E,E,2,[[["self"]],["string"]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[4],E,E,2,[[[U]],[R[3]]]],[11,R[5],E,E,2,[[],[R[3]]]],[11,R[7],E,E,2,[[["self"]],[T]]],[11,R[6],E,E,2,[[["self"]],[T]]],[11,R[8],E,E,2,[[["self"]],[R[9]]]],[11,"into",E,E,8,[[],[U]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[46],E,E,8,[[["self"]],[T]]],[11,R[47],E,E,8,[[["self"],[T]]]],[11,R[4],E,E,8,[[[U]],[R[3]]]],[11,R[5],E,E,8,[[],[R[3]]]],[11,R[7],E,E,8,[[["self"]],[T]]],[11,R[6],E,E,8,[[["self"]],[T]]],[11,R[8],E,E,8,[[["self"]],[R[9]]]],[11,"into",E,E,9,[[],[U]]],[11,R[113],E,E,9,[[["self"]],["string"]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[46],E,E,9,[[["self"]],[T]]],[11,R[47],E,E,9,[[["self"],[T]]]],[11,R[4],E,E,9,[[[U]],[R[3]]]],[11,R[5],E,E,9,[[],[R[3]]]],[11,R[7],E,E,9,[[["self"]],[T]]],[11,R[6],E,E,9,[[["self"]],[T]]],[11,R[8],E,E,9,[[["self"]],[R[9]]]],[11,"into",E,E,10,[[],[U]]],[11,R[45],E,E,10,[[],["i"]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[46],E,E,10,[[["self"]],[T]]],[11,R[47],E,E,10,[[["self"],[T]]]],[11,R[4],E,E,10,[[[U]],[R[3]]]],[11,R[5],E,E,10,[[],[R[3]]]],[11,R[7],E,E,10,[[["self"]],[T]]],[11,R[6],E,E,10,[[["self"]],[T]]],[11,R[8],E,E,10,[[["self"]],[R[9]]]],[11,"into",E,E,3,[[],[U]]],[11,R[113],E,E,3,[[["self"]],["string"]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[46],E,E,3,[[["self"]],[T]]],[11,R[47],E,E,3,[[["self"],[T]]]],[11,R[4],E,E,3,[[[U]],[R[3]]]],[11,R[5],E,E,3,[[],[R[3]]]],[11,R[7],E,E,3,[[["self"]],[T]]],[11,R[6],E,E,3,[[["self"]],[T]]],[11,R[8],E,E,3,[[["self"]],[R[9]]]],[11,"into",E,E,11,[[],[U]]],[11,R[45],E,E,11,[[],["i"]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[46],E,E,11,[[["self"]],[T]]],[11,R[47],E,E,11,[[["self"],[T]]]],[11,R[4],E,E,11,[[[U]],[R[3]]]],[11,R[5],E,E,11,[[],[R[3]]]],[11,R[7],E,E,11,[[["self"]],[T]]],[11,R[6],E,E,11,[[["self"]],[T]]],[11,R[8],E,E,11,[[["self"]],[R[9]]]],[11,"into",E,E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[46],E,E,4,[[["self"]],[T]]],[11,R[47],E,E,4,[[["self"],[T]]]],[11,R[4],E,E,4,[[[U]],[R[3]]]],[11,R[5],E,E,4,[[],[R[3]]]],[11,R[7],E,E,4,[[["self"]],[T]]],[11,R[6],E,E,4,[[["self"]],[T]]],[11,R[8],E,E,4,[[["self"]],[R[9]]]],[11,"into",E,E,12,[[],[U]]],[11,"from",E,E,12,[[[T]],[T]]],[11,R[46],E,E,12,[[["self"]],[T]]],[11,R[47],E,E,12,[[["self"],[T]]]],[11,R[4],E,E,12,[[[U]],[R[3]]]],[11,R[5],E,E,12,[[],[R[3]]]],[11,R[7],E,E,12,[[["self"]],[T]]],[11,R[6],E,E,12,[[["self"]],[T]]],[11,R[8],E,E,12,[[["self"]],[R[9]]]],[11,R[52],E,E,11,[[["self"]],[[R[23],["str"]],["str"]]]],[11,R[52],E,E,10,[[["self"]],[["osstr"],[R[23],["osstr"]]]]],[11,R[775],E,E,4,[[["str"]],[[R[1981]],[R[3],[R[1981]]]]]],[11,R[775],E,E,3,[[["str"]],[[R[3],["shell"]],["shell"]]]],[11,R[775],E,E,0,[[["str"]],[[R[3],[R[1970]]],[R[1970]]]]],[11,"next",E,E,10,[[["self"]],[["osstr"],[R[23],["osstr"]]]]],[11,R[53],E,E,10,[[["self"]]]],[11,"next",E,E,11,[[["self"]],[[R[23],["str"]],["str"]]]],[11,R[53],E,E,11,[[["self"]]]],[11,"eq",E,E,0,[[["self"],[R[1970]]],["bool"]]],[11,"eq",E,E,1,[[["self"],[R[401]]],["bool"]]],[11,"eq",E,E,4,[[["self"],[R[1981]]],["bool"]]],[11,"eq",E,E,8,[[["self"],["arg"]],["bool"]]],[11,"fmt",E,E,2,[[["self"],[R[10]]],[[R[3],["error"]],["error"]]]],[11,"fmt",E,E,3,[[["self"],[R[10]]],[[R[3],["error"]],["error"]]]],[11,"fmt",E,E,9,[[["self"],[R[10]]],[[R[3],["error"]],["error"]]]],[11,R[157],E,E,2,[[["self"]],["str"]]],[11,"fmt",E,E,1,[[["self"],[R[10]]],[[R[3],["error"]],["error"]]]],[11,"fmt",E,E,4,[[["self"],[R[10]]],[[R[3],["error"]],["error"]]]],[11,"fmt",E,E,11,[[["self"],[R[10]]],[[R[3],["error"]],["error"]]]],[11,"fmt",E,E,12,[[["self"],[R[10]]],[[R[3],["error"]],["error"]]]],[11,"fmt",E,E,6,[[["self"],[R[10]]],[[R[3],["error"]],["error"]]]],[11,"fmt",E,E,7,[[["self"],[R[10]]],[[R[3],["error"]],["error"]]]],[11,"fmt",E,E,2,[[["self"],[R[10]]],[[R[3],["error"]],["error"]]]],[11,"fmt",E,E,3,[[["self"],[R[10]]],[[R[3],["error"]],["error"]]]],[11,"fmt",E,E,0,[[["self"],[R[10]]],[[R[3],["error"]],["error"]]]],[11,"fmt",E,E,10,[[["self"],[R[10]]],[[R[3],["error"]],["error"]]]],[11,"clone",E,E,6,[[["self"]],[R[3673]]]],[11,"clone",E,E,11,[[["self"]],["values"]]],[11,"clone",E,E,3,[[["self"]],["shell"]]],[11,"clone",E,E,10,[[["self"]],[R[3858]]]],[11,"clone",E,E,0,[[["self"]],[R[1970]]]],[11,"clone",E,E,9,[[["self"]],["app"]]],[11,"clone",E,E,12,[[["self"]],[R[1976]]]],[11,"clone",E,E,1,[[["self"]],[R[401]]]],[11,"clone",E,E,4,[[["self"]],[R[1981]]]],[11,"clone",E,E,8,[[["self"]],["arg"]]],[11,"clone",E,E,7,[[["self"]],[R[1989]]]],[11,R[83],E,E,8,[[],["arg"]]],[11,R[83],E,E,12,[[],[R[1976]]]],[11,R[83],E,E,11,[[],["values"]]],[11,R[83],E,E,6,[[],[R[3673]]]],[11,R[83],E,E,10,[[],[R[3858]]]],[11,"from",E,E,2,[[["error"]],["error"]]],[11,"from",E,E,2,[[["error"]],["error"]]],[11,"from",E,E,8,[[["arg"]],["arg"]]],[11,"from",E,E,6,[[[R[3673]]],[R[3673]]]],[11,R[3745],E,R[3868],6,[[["str"]],[R[3673]]]],[11,"arg",E,R[3869],6,[[["str"]],[R[3673]]]],[11,"args",E,R[3870],6,[[],[R[3673]]]],[11,"multiple",E,R[3871],6,[[["bool"]],[R[3673]]]],[11,"required",E,R[3872],6,[[["bool"]],[R[3673]]]],[11,"requires",E,R[1984],6,[[["str"]],[R[3673]]]],[11,R[1983],E,R[1984],6,[[],[R[3673]]]],[11,R[1985],E,R[3873],6,[[["str"]],[R[3673]]]],[11,R[1986],E,R[3874],6,[[],[R[3673]]]],[11,R[3745],E,R[3847],7,[[["str"]],["app"]]],[11,"use_stderr",E,R[3741],2,[[["self"]],["bool"]]],[11,"exit",E,R[3742],2,[[["self"]]]],[11,R[3743],E,R[3744],2,[[[R[401]],["str"]],["error"]]],[11,R[3745],E,R[3746],8,[[["str"]],["arg"]]],[11,"from_usage",E,R[3747],8,[[["str"]],["arg"]]],[11,"short",E,R[3748],8,[[["s"]],["arg"]]],[11,"long",E,R[3749],8,[[["str"]],["arg"]]],[11,"alias",E,R[3750],8,[[["s"]],["arg"]]],[11,"aliases",E,R[3751],8,[[],["arg"]]],[11,R[1977],E,R[3752],8,[[["s"]],["arg"]]],[11,R[1978],E,R[3753],8,[[],["arg"]]],[11,"help",E,R[3754],8,[[["str"]],["arg"]]],[11,"long_help",E,R[3755],8,[[["str"]],["arg"]]],[11,"last",E,R[3756],8,[[["bool"]],["arg"]]],[11,"required",E,R[3757],8,[[["bool"]],["arg"]]],[11,R[3758],E,R[3759],8,[[["bool"]],["arg"]]],[11,R[3760],E,R[3761],8,[[["bool"]],["arg"]]],[11,R[3762],E,R[3763],8,[[["str"]],["arg"]]],[11,R[3764],E,R[3765],8,[[],["arg"]]],[11,R[3766],E,R[3767],8,[[],["arg"]]],[11,R[1985],E,R[3768],8,[[["str"]],["arg"]]],[11,R[1986],E,R[3769],8,[[],["arg"]]],[11,R[3770],E,R[3771],8,[[["str"]],["arg"]]],[11,R[3772],E,R[3773],8,[[],["arg"]]],[11,"requires",E,R[3774],8,[[["str"]],["arg"]]],[11,R[3775],E,R[3776],8,[[["str"],["str"]],["arg"]]],[11,R[3777],E,R[3778],8,[[],["arg"]]],[11,R[3779],E,R[3780],8,[[["str"],["str"]],["arg"]]],[11,R[3781],E,R[3782],8,[[],["arg"]]],[11,R[1983],E,R[3783],8,[[],["arg"]]],[11,R[3784],E,R[3785],8,[[["bool"]],["arg"]]],[11,R[3786],E,R[3787],8,[[["bool"]],["arg"]]],[11,R[3788],E,R[3789],8,[[["bool"]],["arg"]]],[11,"index",E,R[3790],8,[[["u64"]],["arg"]]],[11,"multiple",E,R[3791],8,[[["bool"]],["arg"]]],[11,R[3792],E,R[3793],8,[[["str"]],["arg"]]],[11,"global",E,R[3794],8,[[["bool"]],["arg"]]],[11,R[3795],E,R[3796],8,[[["bool"]],["arg"]]],[11,"hidden",E,R[3797],8,[[["bool"]],["arg"]]],[11,R[3798],E,R[3799],8,[[],["arg"]]],[11,R[3800],E,R[3801],8,[[["str"]],["arg"]]],[11,R[435],E,R[3802],8,[[["bool"]],["arg"]]],[11,"group",E,R[3803],8,[[["str"]],["arg"]]],[11,"groups",E,R[3804],8,[[],["arg"]]],[11,R[3805],E,R[3806],8,[[["u64"]],["arg"]]],[11,"validator",E,R[3807],8,[[["f"]],["arg"]]],[11,R[3808],E,R[3809],8,[[["f"]],["arg"]]],[11,"max_values",E,R[3810],8,[[["u64"]],["arg"]]],[11,"min_values",E,R[3811],8,[[["u64"]],["arg"]]],[11,R[3812],E,R[3813],8,[[["bool"]],["arg"]]],[11,R[3814],E,R[3815],8,[[["bool"]],["arg"]]],[11,R[3816],E,R[3817],8,[[["str"]],["arg"]]],[11,R[3818],E,R[3819],8,[[],["arg"]]],[11,"value_name",E,R[3820],8,[[["str"]],["arg"]]],[11,R[3821],E,R[3822],8,[[["str"]],["arg"]]],[11,R[3823],E,R[3824],8,[[["osstr"]],["arg"]]],[11,R[3825],E,R[3826],8,[[[R[23],["str"]],["str"],["str"]],["arg"]]],[11,R[3827],E,R[3828],8,[[[R[23],["osstr"]],["str"],["osstr"]],["arg"]]],[11,R[3829],E,R[3830],8,[[],["arg"]]],[11,R[3831],E,R[3832],8,[[],["arg"]]],[11,"env",E,R[1979],8,[[["str"]],["arg"]]],[11,"env_os",E,R[1979],8,[[["osstr"]],["arg"]]],[11,R[3833],E,R[3834],8,[[["bool"]],["arg"]]],[11,R[3835],E,R[3836],8,[[["bool"]],["arg"]]],[11,R[1980],E,R[3837],8,[[["usize"]],["arg"]]],[11,"raw",E,R[3838],8,[[["bool"]],["arg"]]],[11,R[3839],E,R[3840],8,[[["bool"]],["arg"]]],[11,R[3841],E,R[3842],8,[[["bool"]],["arg"]]],[11,"is_set",E,R[3843],8,[[["self"],[R[1981]]],["bool"]]],[11,"set",E,R[3844],8,[[[R[1981]]],["arg"]]],[11,"unset",E,R[3845],8,[[[R[1981]]],["arg"]]],[11,"new",E,R[3674],9,[[["s"]],["app"]]],[11,R[5661],E,R[3675],9,[[["self"]],["str"]]],[11,R[3676],E,R[3677],9,[[["self"]],[["str"],[R[23],["str"]]]]],[11,R[3678],E,R[3679],9,[[["s"]],["app"]]],[11,"author",E,R[3680],9,[[["s"]],["app"]]],[11,"bin_name",E,R[3681],9,[[["s"]],["app"]]],[11,"about",E,R[1967],9,[[["s"]],["app"]]],[11,"long_about",E,R[1967],9,[[["s"]],["app"]]],[11,"name",E,R[3682],9,[[["s"]],["app"]]],[11,"after_help",E,R[1968],9,[[["s"]],["app"]]],[11,R[3683],E,R[1968],9,[[["s"]],["app"]]],[11,"version",E,R[1969],9,[[["s"]],["app"]]],[11,R[3684],E,R[1969],9,[[["s"]],["app"]]],[11,"usage",E,R[3685],9,[[["s"]],["app"]]],[11,"help",E,R[3686],9,[[["s"]],["app"]]],[11,"help_short",E,R[3687],9,[[["s"]],["app"]]],[11,R[3688],E,R[3689],9,[[["s"]],["app"]]],[11,R[3690],E,R[3691],9,[[["s"]],["app"]]],[11,R[3692],E,R[3693],9,[[["s"]],["app"]]],[11,"template",E,R[3694],9,[[["s"]],["app"]]],[11,"setting",E,R[3695],9,[[[R[1970]]],["app"]]],[11,"settings",E,R[3696],9,[[],["app"]]],[11,R[3697],E,R[3698],9,[[[R[1970]]],["app"]]],[11,R[3699],E,R[3700],9,[[],["app"]]],[11,R[3701],E,R[3702],9,[[[R[1970]]],["app"]]],[11,R[3703],E,R[3704],9,[[],["app"]]],[11,R[3705],E,R[3706],9,[[["usize"]],["app"]]],[11,R[3707],E,R[3708],9,[[["usize"]],["app"]]],[11,"arg",E,R[3709],9,[[["a"]],["app"]]],[11,"args",E,R[3710],9,[[],["app"]]],[11,R[3711],E,R[3712],9,[[["str"]],["app"]]],[11,R[3713],E,R[3714],9,[[["str"]],["app"]]],[11,"alias",E,R[3715],9,[[["s"]],["app"]]],[11,"aliases",E,R[3716],9,[[],["app"]]],[11,R[1977],E,R[3717],9,[[["s"]],["app"]]],[11,R[1978],E,R[3718],9,[[],["app"]]],[11,"group",E,R[3719],9,[[[R[3673]]],["app"]]],[11,"groups",E,R[3720],9,[[],["app"]]],[11,R[1989],E,R[3721],9,[[["app"]],["app"]]],[11,R[3722],E,R[3723],9,[[["i"]],["app"]]],[11,R[1980],E,R[3724],9,[[["usize"]],["app"]]],[11,"print_help",E,R[1971],9,[[["self"]],[[R[3],["error"]],["error"]]]],[11,R[3725],E,R[1971],9,[[["self"]],[[R[3],["error"]],["error"]]]],[11,"write_help",E,R[1973],9,[[["self"],["w"]],[[R[3],["error"]],["error"]]]],[11,R[3726],E,R[1973],9,[[["self"],["w"]],[[R[3],["error"]],["error"]]]],[11,R[3727],E,R[1974],9,[[["self"],["w"]],[[R[3],["error"]],["error"]]]],[11,R[3728],E,R[1974],9,[[["self"],["w"]],[[R[3],["error"]],["error"]]]],[11,R[3729],E,R[1975],9,[[["self"],["s"],[T],["shell"]]]],[11,R[3730],E,R[1975],9,[[["self"],["s"],["w"],["shell"]]]],[11,R[3731],E,R[3732],9,[[],[R[1976]]]],[11,R[3733],E,R[3734],9,[[],[[R[3],[R[1976],"error"]],[R[1976]],["error"]]]],[11,R[3735],E,R[3736],9,[[["i"]],[R[1976]]]],[11,R[3737],E,R[3738],9,[[["i"]],[[R[3],[R[1976],"error"]],[R[1976]],["error"]]]],[11,R[3739],E,R[3740],9,[[["self"],["i"]],[[R[3],[R[1976],"error"]],[R[1976]],["error"]]]],[11,"variants",E,R[3846],3,[[]]],[11,"value_of",E,R[3848],12,[[["self"],["s"]],[["str"],[R[23],["str"]]]]],[11,R[3849],E,R[3850],12,[[["self"],["s"]],[[R[23],["cow"]],["cow",["str"]]]]],[11,R[3851],E,R[3852],12,[[["self"],["s"]],[[R[23],["osstr"]],["osstr"]]]],[11,"values_of",E,R[3853],12,[[["self"],["s"]],[[R[23],["values"]],["values"]]]],[11,R[3854],E,R[3855],12,[[["self"],["s"]],[["vec",["string"]],[R[23],["vec"]]]]],[11,R[3856],E,R[3857],12,[[["self"],["s"]],[[R[23],[R[3858]]],[R[3858]]]]],[11,"is_present",E,R[3859],12,[[["self"],["s"]],["bool"]]],[11,R[3860],E,R[3861],12,[[["self"],["s"]],["u64"]]],[11,"index_of",E,R[3862],12,[[["self"],["s"]],[[R[23],["usize"]],["usize"]]]],[11,"indices_of",E,R[3863],12,[[["self"],["s"]],[["indices"],[R[23],["indices"]]]]],[11,R[3864],E,R[1982],12,[[["self"],["s"]],[[R[1976]],[R[23],[R[1976]]]]]],[11,R[3865],E,R[1982],12,[[["self"]],[["str"],[R[23],["str"]]]]],[11,R[1989],E,R[3866],12,[[["self"]]]],[11,"usage",E,R[3867],12,[[["self"]],["str"]]]],"p":[[4,R[1991]],[4,R[372]],[3,"Error"],[4,"Shell"],[4,R[1990]],[8,"StructOpt"],[3,"ArgGroup"],[3,R[3569]],[3,"Arg"],[3,"App"],[3,"OsValues"],[3,"Values"],[3,R[3571]]]};
searchIndex["structopt_derive"]={"doc":"This crate is custom derive for StructOpt. It should not…","i":[[24,"StructOpt","structopt_derive","Generates the `StructOpt` impl.",N,N]],"p":[]};
searchIndex["syn"]={"doc":"Syn is a parsing library for parsing a stream of Rust…","i":[[3,"Ident","syn",R[2068],N,N],[3,R[5831],E,"An attribute like `#[repr(transparent)]`.",N,N],[12,"pound_token",E,E,0,N],[12,"style",E,E,0,N],[12,R[2070],E,E,0,N],[12,"path",E,E,0,N],[12,"tokens",E,E,0,N],[3,"MetaList",E,R[2094],N,N],[12,"path",E,E,1,N],[12,R[2069],E,E,1,N],[12,"nested",E,E,1,N],[3,R[2778],E,R[2095],N,N],[12,"path",E,E,2,N],[12,R[2078],E,E,2,N],[12,"lit",E,E,2,N],[3,"Field",E,"A field of a struct or enum variant.",N,N],[12,"attrs",E,R[2073],3,N],[12,"vis",E,"Visibility of the field.",3,N],[12,"ident",E,"Name of the field, if any.",3,N],[12,R[2072],E,E,3,N],[12,"ty",E,"Type of the field.",3,N],[3,R[2779],E,R[2096],N,N],[12,R[2071],E,E,4,N],[12,"named",E,E,4,N],[3,R[2780],E,R[2097],N,N],[12,R[2069],E,E,5,N],[12,"unnamed",E,E,5,N],[3,"Variant",E,"An enum variant.",N,N],[12,"attrs",E,"Attributes tagged on the variant.",6,N],[12,"ident",E,"Name of the variant.",6,N],[12,"fields",E,"Content stored in the variant.",6,N],[12,R[3291],E,"Explicit discriminant: `Variant = 1`",6,N],[3,"VisCrate",E,R[2099],N,N],[12,R[2082],E,E,7,N],[3,"VisPublic",E,R[2098],N,N],[12,"pub_token",E,E,8,N],[3,R[2781],E,R[2100],N,N],[12,"pub_token",E,E,9,N],[12,R[2069],E,E,9,N],[12,"in_token",E,E,9,N],[12,"path",E,E,9,N],[3,"Arm",E,"One arm of a `match` expression: `0...10 => { return true;…",N,N],[12,"attrs",E,E,10,N],[12,"pat",E,E,10,N],[12,"guard",E,E,10,N],[12,"fat_arrow_token",E,E,10,N],[12,"body",E,E,10,N],[12,"comma",E,E,10,N],[3,"FieldValue",E,"A field-value pair in a struct literal.",N,N],[12,"attrs",E,R[2073],11,N],[12,"member",E,"Name or index of the field.",11,N],[12,R[2072],E,"The colon in `Struct { x: x }`. If written in shorthand…",11,N],[12,"expr",E,"Value of the field.",11,N],[3,"Label",E,"A lifetime labeling a `for`, `while`, or `loop`.",N,N],[12,"name",E,E,12,N],[12,R[2072],E,E,12,N],[3,R[2791],E,"The `::<>` explicit type parameters passed to a method…",N,N],[12,R[2086],E,E,13,N],[12,"lt_token",E,E,13,N],[12,"args",E,E,13,N],[12,"gt_token",E,E,13,N],[3,"ExprArray",E,R[2103],N,N],[12,"attrs",E,E,14,N],[12,R[2070],E,E,14,N],[12,"elems",E,E,14,N],[3,"ExprAssign",E,R[2121],N,N],[12,"attrs",E,E,15,N],[12,"left",E,E,15,N],[12,R[2078],E,E,15,N],[12,"right",E,E,15,N],[3,R[2782],E,R[2122],N,N],[12,"attrs",E,E,16,N],[12,"left",E,E,16,N],[12,"op",E,E,16,N],[12,"right",E,E,16,N],[3,"ExprAsync",E,R[2137],N,N],[12,"attrs",E,E,17,N],[12,"async_token",E,E,17,N],[12,"capture",E,E,17,N],[12,"block",E,E,17,N],[3,"ExprAwait",E,R[3257],N,N],[12,"attrs",E,E,18,N],[12,"base",E,E,18,N],[12,"dot_token",E,E,18,N],[12,"await_token",E,E,18,N],[3,"ExprBinary",E,R[2107],N,N],[12,"attrs",E,E,19,N],[12,"left",E,E,19,N],[12,"op",E,E,19,N],[12,"right",E,E,19,N],[3,"ExprBlock",E,R[2120],N,N],[12,"attrs",E,E,20,N],[12,"label",E,E,20,N],[12,"block",E,E,20,N],[3,"ExprBox",E,R[2101],N,N],[12,"attrs",E,E,21,N],[12,"box_token",E,E,21,N],[12,"expr",E,E,21,N],[3,"ExprBreak",E,R[2128],N,N],[12,"attrs",E,E,22,N],[12,"break_token",E,E,22,N],[12,"label",E,E,22,N],[12,"expr",E,E,22,N],[3,"ExprCall",E,R[2104],N,N],[12,"attrs",E,E,23,N],[12,"func",E,E,23,N],[12,R[2069],E,E,23,N],[12,"args",E,E,23,N],[3,"ExprCast",E,R[2110],N,N],[12,"attrs",E,E,24,N],[12,"expr",E,E,24,N],[12,"as_token",E,E,24,N],[12,"ty",E,E,24,N],[3,R[2783],E,R[2118],N,N],[12,"attrs",E,E,25,N],[12,"asyncness",E,E,25,N],[12,"movability",E,E,25,N],[12,"capture",E,E,25,N],[12,"or1_token",E,E,25,N],[12,"inputs",E,E,25,N],[12,"or2_token",E,E,25,N],[12,"output",E,E,25,N],[12,"body",E,E,25,N],[3,R[2784],E,R[2129],N,N],[12,"attrs",E,E,26,N],[12,"continue_token",E,E,26,N],[12,"label",E,E,26,N],[3,"ExprField",E,R[2123],N,N],[12,"attrs",E,E,27,N],[12,"base",E,E,27,N],[12,"dot_token",E,E,27,N],[12,"member",E,E,27,N],[3,R[2785],E,R[2115],N,N],[12,"attrs",E,E,28,N],[12,"label",E,E,28,N],[12,"for_token",E,E,28,N],[12,"pat",E,E,28,N],[12,"in_token",E,E,28,N],[12,"expr",E,E,28,N],[12,"body",E,E,28,N],[3,"ExprGroup",E,R[2135],N,N],[12,"attrs",E,E,29,N],[12,R[2090],E,E,29,N],[12,"expr",E,E,29,N],[3,"ExprIf",E,R[2113],N,N],[12,"attrs",E,E,30,N],[12,"if_token",E,E,30,N],[12,"cond",E,E,30,N],[12,"then_branch",E,E,30,N],[12,"else_branch",E,E,30,N],[3,"ExprIndex",E,R[2124],N,N],[12,"attrs",E,E,31,N],[12,"expr",E,E,31,N],[12,R[2070],E,E,31,N],[12,"index",E,E,31,N],[3,"ExprLet",E,R[2112],N,N],[12,"attrs",E,E,32,N],[12,"let_token",E,E,32,N],[12,"pat",E,E,32,N],[12,R[2078],E,E,32,N],[12,"expr",E,E,32,N],[3,"ExprLit",E,R[2109],N,N],[12,"attrs",E,E,33,N],[12,"lit",E,E,33,N],[3,"ExprLoop",E,R[2116],N,N],[12,"attrs",E,E,34,N],[12,"label",E,E,34,N],[12,"loop_token",E,E,34,N],[12,"body",E,E,34,N],[3,"ExprMacro",E,R[2131],N,N],[12,"attrs",E,E,35,N],[12,"mac",E,E,35,N],[3,"ExprMatch",E,R[2117],N,N],[12,"attrs",E,E,36,N],[12,"match_token",E,E,36,N],[12,"expr",E,E,36,N],[12,R[2071],E,E,36,N],[12,"arms",E,E,36,N],[3,R[2787],E,R[2105],N,N],[12,"attrs",E,E,37,N],[12,R[3286],E,E,37,N],[12,"dot_token",E,E,37,N],[12,"method",E,E,37,N],[12,R[2753],E,E,37,N],[12,R[2069],E,E,37,N],[12,"args",E,E,37,N],[3,"ExprParen",E,R[2134],N,N],[12,"attrs",E,E,38,N],[12,R[2069],E,E,38,N],[12,"expr",E,E,38,N],[3,"ExprPath",E,R[2126],N,N],[12,"attrs",E,E,39,N],[12,"qself",E,E,39,N],[12,"path",E,E,39,N],[3,"ExprRange",E,R[2125],N,N],[12,"attrs",E,E,40,N],[12,"from",E,E,40,N],[12,"limits",E,E,40,N],[12,"to",E,E,40,N],[3,R[2788],E,R[2127],N,N],[12,"attrs",E,E,41,N],[12,R[2092],E,E,41,N],[12,"raw",E,E,41,N],[12,R[1011],E,E,41,N],[12,"expr",E,E,41,N],[3,"ExprRepeat",E,R[2133],N,N],[12,"attrs",E,E,42,N],[12,R[2070],E,E,42,N],[12,"expr",E,E,42,N],[12,R[2076],E,E,42,N],[12,"len",E,E,42,N],[3,"ExprReturn",E,R[2130],N,N],[12,"attrs",E,E,43,N],[12,"return_token",E,E,43,N],[12,"expr",E,E,43,N],[3,"ExprStruct",E,R[2132],N,N],[12,"attrs",E,E,44,N],[12,"path",E,E,44,N],[12,R[2071],E,E,44,N],[12,"fields",E,E,44,N],[12,R[2074],E,E,44,N],[12,"rest",E,E,44,N],[3,"ExprTry",E,R[2136],N,N],[12,"attrs",E,E,45,N],[12,"expr",E,E,45,N],[12,"question_token",E,E,45,N],[3,R[2789],E,R[2138],N,N],[12,"attrs",E,E,46,N],[12,"try_token",E,E,46,N],[12,"block",E,E,46,N],[3,"ExprTuple",E,R[2106],N,N],[12,"attrs",E,E,47,N],[12,R[2069],E,E,47,N],[12,"elems",E,E,47,N],[3,"ExprType",E,R[2111],N,N],[12,"attrs",E,E,48,N],[12,"expr",E,E,48,N],[12,R[2072],E,E,48,N],[12,"ty",E,E,48,N],[3,"ExprUnary",E,R[2108],N,N],[12,"attrs",E,E,49,N],[12,"op",E,E,49,N],[12,"expr",E,E,49,N],[3,"ExprUnsafe",E,R[2119],N,N],[12,"attrs",E,E,50,N],[12,"unsafe_token",E,E,50,N],[12,"block",E,E,50,N],[3,"ExprWhile",E,R[2114],N,N],[12,"attrs",E,E,51,N],[12,"label",E,E,51,N],[12,"while_token",E,E,51,N],[12,"cond",E,E,51,N],[12,"body",E,E,51,N],[3,"ExprYield",E,R[2139],N,N],[12,"attrs",E,E,52,N],[12,"yield_token",E,E,52,N],[12,"expr",E,E,52,N],[3,"Index",E,"The index of an unnamed tuple struct field.",N,N],[12,"index",E,E,53,N],[12,"span",E,E,53,N],[3,R[2794],E,"A set of bound lifetimes: `for<'a, 'b, 'c>`.",N,N],[12,"for_token",E,E,54,N],[12,"lt_token",E,E,54,N],[12,R[989],E,E,54,N],[12,"gt_token",E,E,54,N],[3,"ConstParam",E,R[2156],N,N],[12,"attrs",E,E,55,N],[12,R[2077],E,E,55,N],[12,"ident",E,E,55,N],[12,R[2072],E,E,55,N],[12,"ty",E,E,55,N],[12,R[2078],E,E,55,N],[12,R[83],E,E,55,N],[3,"Generics",E,"Lifetimes and type parameters attached to a declaration of…",N,N],[12,"lt_token",E,E,56,N],[12,"params",E,E,56,N],[12,"gt_token",E,E,56,N],[12,"where_clause",E,E,56,N],[3,R[1019],E,R[2155],N,N],[12,"attrs",E,E,57,N],[12,R[1001],E,E,57,N],[12,R[2072],E,E,57,N],[12,"bounds",E,E,57,N],[3,R[2795],E,R[2159],N,N],[12,"lhs_ty",E,E,58,N],[12,R[2078],E,E,58,N],[12,"rhs_ty",E,E,58,N],[3,R[2796],E,R[2158],N,N],[12,R[1001],E,E,59,N],[12,R[2072],E,E,59,N],[12,"bounds",E,E,59,N],[3,R[2797],E,R[2157],N,N],[12,R[989],E,"Any lifetimes from a `for` binding",60,N],[12,"bounded_ty",E,"The type being bounded",60,N],[12,R[2072],E,E,60,N],[12,"bounds",E,"Trait and lifetime bounds (`Clone+Send+'static`)",60,N],[3,"TraitBound",E,"A trait used as a bound on a type parameter.",N,N],[12,R[2069],E,E,61,N],[12,"modifier",E,E,61,N],[12,R[989],E,"The `for<'a>` in `for<'a> Foo<&'a T>`",61,N],[12,"path",E,"The `Foo<&'a T>` in `for<'a> Foo<&'a T>`",61,N],[3,"TypeParam",E,R[2154],N,N],[12,"attrs",E,E,62,N],[12,"ident",E,E,62,N],[12,R[2072],E,E,62,N],[12,"bounds",E,E,62,N],[12,R[2078],E,E,62,N],[12,R[83],E,E,62,N],[3,R[1021],E,"A `where` clause in a definition: `where T:…",N,N],[12,"where_token",E,E,63,N],[12,"predicates",E,E,63,N],[3,R[1037],E,R[988],N,N],[3,"Turbofish",E,"Returned by `TypeGenerics::as_turbofish`.",N,N],[3,R[2838],E,R[988],N,N],[3,R[2799],E,R[2163],N,N],[12,"attrs",E,E,64,N],[12,"vis",E,E,64,N],[12,"sig",E,E,64,N],[12,R[2076],E,E,64,N],[3,R[2800],E,R[2166],N,N],[12,"attrs",E,E,65,N],[12,"mac",E,E,65,N],[12,R[2076],E,E,65,N],[3,R[2801],E,R[2164],N,N],[12,"attrs",E,E,66,N],[12,"vis",E,E,66,N],[12,R[2083],E,E,66,N],[12,R[1011],E,E,66,N],[12,"ident",E,E,66,N],[12,R[2072],E,E,66,N],[12,"ty",E,E,66,N],[12,R[2076],E,E,66,N],[3,R[2802],E,R[2165],N,N],[12,"attrs",E,E,67,N],[12,"vis",E,E,67,N],[12,R[2080],E,E,67,N],[12,"ident",E,E,67,N],[12,R[2076],E,E,67,N],[3,R[2804],E,R[2168],N,N],[12,"attrs",E,E,68,N],[12,"vis",E,E,68,N],[12,R[2079],E,E,68,N],[12,R[2077],E,E,68,N],[12,"ident",E,E,68,N],[12,R[2072],E,E,68,N],[12,"ty",E,E,68,N],[12,R[2078],E,E,68,N],[12,"expr",E,E,68,N],[12,R[2076],E,E,68,N],[3,R[2806],E,R[2172],N,N],[12,"attrs",E,E,69,N],[12,"mac",E,E,69,N],[12,R[2076],E,E,69,N],[3,R[2807],E,R[2169],N,N],[12,"attrs",E,E,70,N],[12,"vis",E,E,70,N],[12,R[2079],E,E,70,N],[12,"sig",E,E,70,N],[12,"block",E,E,70,N],[3,R[2808],E,R[2170],N,N],[12,"attrs",E,E,71,N],[12,"vis",E,E,71,N],[12,R[2079],E,E,71,N],[12,R[2080],E,E,71,N],[12,"ident",E,E,71,N],[12,R[2084],E,E,71,N],[12,R[2078],E,E,71,N],[12,"ty",E,E,71,N],[12,R[2076],E,E,71,N],[3,"ItemConst",E,R[2177],N,N],[12,"attrs",E,E,72,N],[12,"vis",E,E,72,N],[12,R[2077],E,E,72,N],[12,"ident",E,E,72,N],[12,R[2072],E,E,72,N],[12,"ty",E,E,72,N],[12,R[2078],E,E,72,N],[12,"expr",E,E,72,N],[12,R[2076],E,E,72,N],[3,"ItemEnum",E,R[3259],N,N],[12,"attrs",E,E,73,N],[12,"vis",E,E,73,N],[12,"enum_token",E,E,73,N],[12,"ident",E,E,73,N],[12,R[2084],E,E,73,N],[12,R[2071],E,E,73,N],[12,"variants",E,E,73,N],[3,R[2811],E,R[2174],N,N],[12,"attrs",E,E,74,N],[12,"vis",E,E,74,N],[12,R[2089],E,E,74,N],[12,R[2082],E,E,74,N],[12,"ident",E,E,74,N],[12,"rename",E,E,74,N],[12,R[2076],E,E,74,N],[3,"ItemFn",E,R[2178],N,N],[12,"attrs",E,E,75,N],[12,"vis",E,E,75,N],[12,"sig",E,E,75,N],[12,"block",E,E,75,N],[3,R[2812],E,R[2180],N,N],[12,"attrs",E,E,76,N],[12,"abi",E,E,76,N],[12,R[2071],E,E,76,N],[12,"items",E,E,76,N],[3,"ItemImpl",E,R[2189],N,N],[12,"attrs",E,E,77,N],[12,R[2079],E,E,77,N],[12,"unsafety",E,E,77,N],[12,"impl_token",E,E,77,N],[12,R[2084],E,E,77,N],[12,"trait_",E,"Trait this impl implements.",77,N],[12,"self_ty",E,"The Self type of the impl.",77,N],[12,R[2071],E,E,77,N],[12,"items",E,E,77,N],[3,"ItemMacro",E,R[2190],N,N],[12,"attrs",E,E,78,N],[12,"ident",E,"The `example` in `macro_rules! example { ... }`.",78,N],[12,"mac",E,E,78,N],[12,R[2076],E,E,78,N],[3,"ItemMacro2",E,R[2191],N,N],[12,"attrs",E,E,79,N],[12,"vis",E,E,79,N],[12,"macro_token",E,E,79,N],[12,"ident",E,E,79,N],[12,"rules",E,E,79,N],[3,"ItemMod",E,R[2179],N,N],[12,"attrs",E,E,80,N],[12,"vis",E,E,80,N],[12,"mod_token",E,E,80,N],[12,"ident",E,E,80,N],[12,"content",E,E,80,N],[12,"semi",E,E,80,N],[3,"ItemStatic",E,R[2176],N,N],[12,"attrs",E,E,81,N],[12,"vis",E,E,81,N],[12,R[2083],E,E,81,N],[12,R[1011],E,E,81,N],[12,"ident",E,E,81,N],[12,R[2072],E,E,81,N],[12,"ty",E,E,81,N],[12,R[2078],E,E,81,N],[12,"expr",E,E,81,N],[12,R[2076],E,E,81,N],[3,"ItemStruct",E,R[2184],N,N],[12,"attrs",E,E,82,N],[12,"vis",E,E,82,N],[12,R[2087],E,E,82,N],[12,"ident",E,E,82,N],[12,R[2084],E,E,82,N],[12,"fields",E,E,82,N],[12,R[2076],E,E,82,N],[3,"ItemTrait",E,R[2187],N,N],[12,"attrs",E,E,83,N],[12,"vis",E,E,83,N],[12,"unsafety",E,E,83,N],[12,"auto_token",E,E,83,N],[12,R[2085],E,E,83,N],[12,"ident",E,E,83,N],[12,R[2084],E,E,83,N],[12,R[2072],E,E,83,N],[12,"supertraits",E,E,83,N],[12,R[2071],E,E,83,N],[12,"items",E,E,83,N],[3,R[2813],E,R[2188],N,N],[12,"attrs",E,E,84,N],[12,"vis",E,E,84,N],[12,R[2085],E,E,84,N],[12,"ident",E,E,84,N],[12,R[2084],E,E,84,N],[12,R[2078],E,E,84,N],[12,"bounds",E,E,84,N],[12,R[2076],E,E,84,N],[3,"ItemType",E,R[2181],N,N],[12,"attrs",E,E,85,N],[12,"vis",E,E,85,N],[12,R[2080],E,E,85,N],[12,"ident",E,E,85,N],[12,R[2084],E,E,85,N],[12,R[2078],E,E,85,N],[12,"ty",E,E,85,N],[12,R[2076],E,E,85,N],[3,"ItemUnion",E,R[2186],N,N],[12,"attrs",E,E,86,N],[12,"vis",E,E,86,N],[12,R[2088],E,E,86,N],[12,"ident",E,E,86,N],[12,R[2084],E,E,86,N],[12,"fields",E,E,86,N],[3,"ItemUse",E,R[2175],N,N],[12,"attrs",E,E,87,N],[12,"vis",E,E,87,N],[12,"use_token",E,E,87,N],[12,R[2093],E,E,87,N],[12,"tree",E,E,87,N],[12,R[2076],E,E,87,N],[3,"Receiver",E,R[3258],N,N],[12,"attrs",E,E,88,N],[12,R[4627],E,E,88,N],[12,R[1011],E,E,88,N],[12,"self_token",E,E,88,N],[3,R[5434],E,"A function signature in a trait or implementation: `unsafe…",N,N],[12,"constness",E,E,89,N],[12,"asyncness",E,E,89,N],[12,"unsafety",E,E,89,N],[12,"abi",E,E,89,N],[12,"fn_token",E,E,89,N],[12,"ident",E,E,89,N],[12,R[2084],E,E,89,N],[12,R[2069],E,E,89,N],[12,"inputs",E,E,89,N],[12,R[3289],E,E,89,N],[12,"output",E,E,89,N],[3,R[2815],E,R[2193],N,N],[12,"attrs",E,E,90,N],[12,R[2077],E,E,90,N],[12,"ident",E,E,90,N],[12,R[2072],E,E,90,N],[12,"ty",E,E,90,N],[12,R[83],E,E,90,N],[12,R[2076],E,E,90,N],[3,R[2816],E,R[2196],N,N],[12,"attrs",E,E,91,N],[12,"mac",E,E,91,N],[12,R[2076],E,E,91,N],[3,R[2817],E,R[2194],N,N],[12,"attrs",E,E,92,N],[12,"sig",E,E,92,N],[12,R[83],E,E,92,N],[12,R[2076],E,E,92,N],[3,R[2818],E,R[2195],N,N],[12,"attrs",E,E,93,N],[12,R[2080],E,E,93,N],[12,"ident",E,E,93,N],[12,R[2084],E,E,93,N],[12,R[2072],E,E,93,N],[12,"bounds",E,E,93,N],[12,R[83],E,E,93,N],[12,R[2076],E,E,93,N],[3,"UseGlob",E,R[2202],N,N],[12,"star_token",E,E,94,N],[3,"UseGroup",E,R[2203],N,N],[12,R[2071],E,E,95,N],[12,"items",E,E,95,N],[3,"UseName",E,R[2200],N,N],[12,"ident",E,E,96,N],[3,"UsePath",E,R[2199],N,N],[12,"ident",E,E,97,N],[12,R[2086],E,E,97,N],[12,"tree",E,E,97,N],[3,"UseRename",E,R[2201],N,N],[12,"ident",E,E,98,N],[12,"as_token",E,E,98,N],[12,"rename",E,E,98,N],[3,"Variadic",E,"The variadic argument of a foreign function.",N,N],[12,"attrs",E,E,99,N],[12,"dots",E,E,99,N],[3,"File",E,"A complete file of Rust source code.",N,N],[12,"shebang",E,E,100,N],[12,"attrs",E,E,100,N],[12,"items",E,E,100,N],[3,"Lifetime",E,"A Rust lifetime: `'a`.",N,N],[12,"apostrophe",E,E,101,N],[12,"ident",E,E,101,N],[3,"LitBool",E,R[2210],N,N],[12,"value",E,E,102,N],[12,"span",E,E,102,N],[3,"LitByte",E,R[2206],N,N],[3,"LitByteStr",E,R[2205],N,N],[3,"LitChar",E,R[2207],N,N],[3,"LitFloat",E,R[2209],N,N],[3,"LitInt",E,R[2208],N,N],[3,"LitStr",E,R[2204],N,N],[3,"Macro",E,"A macro invocation: `println!(\"{}\", mac)`.",N,N],[12,"path",E,E,103,N],[12,"bang_token",E,E,103,N],[12,R[769],E,E,103,N],[12,"tokens",E,E,103,N],[3,"DataEnum",E,R[2213],N,N],[12,"enum_token",E,E,104,N],[12,R[2071],E,E,104,N],[12,"variants",E,E,104,N],[3,"DataStruct",E,R[2212],N,N],[12,R[2087],E,E,105,N],[12,"fields",E,E,105,N],[12,R[2076],E,E,105,N],[3,"DataUnion",E,R[3260],N,N],[12,R[2088],E,E,106,N],[12,"fields",E,E,106,N],[3,R[1024],E,"Data structure sent to a `proc_macro_derive` macro.",N,N],[12,"attrs",E,"Attributes tagged on the whole struct or enum.",107,N],[12,"vis",E,"Visibility of the struct or enum.",107,N],[12,"ident",E,"Name of the struct or enum.",107,N],[12,R[2084],E,"Generics required to complete the definition.",107,N],[12,"data",E,"Data within the struct or enum.",107,N],[3,"Block",E,"A braced block containing Rust statements.",N,N],[12,R[2071],E,E,108,N],[12,"stmts",E,"Statements in a block",108,N],[3,"Local",E,"A local `let` binding: `let x: u64 = s.parse()?`.",N,N],[12,"attrs",E,E,109,N],[12,"let_token",E,E,109,N],[12,"pat",E,E,109,N],[12,"init",E,E,109,N],[12,R[2076],E,E,109,N],[3,"Abi",E,"The binary interface of a function: `extern \"C\"`.",N,N],[12,R[2089],E,E,110,N],[12,"name",E,E,110,N],[3,"BareFnArg",E,"An argument in a function type: the `usize` in `fn(usize)…",N,N],[12,"attrs",E,E,111,N],[12,"name",E,E,111,N],[12,"ty",E,E,111,N],[3,"TypeArray",E,R[2216],N,N],[12,R[2070],E,E,112,N],[12,"elem",E,E,112,N],[12,R[2076],E,E,112,N],[12,"len",E,E,112,N],[3,"TypeBareFn",E,R[2219],N,N],[12,R[989],E,E,113,N],[12,"unsafety",E,E,113,N],[12,"abi",E,E,113,N],[12,"fn_token",E,E,113,N],[12,R[2069],E,E,113,N],[12,"inputs",E,E,113,N],[12,R[3289],E,E,113,N],[12,"output",E,E,113,N],[3,"TypeGroup",E,R[2226],N,N],[12,R[2090],E,E,114,N],[12,"elem",E,E,114,N],[3,R[2821],E,R[2224],N,N],[12,"impl_token",E,E,115,N],[12,"bounds",E,E,115,N],[3,"TypeInfer",E,R[2227],N,N],[12,R[2091],E,E,116,N],[3,"TypeMacro",E,R[2228],N,N],[12,"mac",E,E,117,N],[3,"TypeNever",E,R[2220],N,N],[12,"bang_token",E,E,118,N],[3,"TypeParen",E,R[2225],N,N],[12,R[2069],E,E,119,N],[12,"elem",E,E,119,N],[3,"TypePath",E,R[2222],N,N],[12,"qself",E,E,120,N],[12,"path",E,E,120,N],[3,"TypePtr",E,R[2217],N,N],[12,"star_token",E,E,121,N],[12,R[2077],E,E,121,N],[12,R[1011],E,E,121,N],[12,"elem",E,E,121,N],[3,R[2822],E,R[2218],N,N],[12,R[2092],E,E,122,N],[12,R[1001],E,E,122,N],[12,R[1011],E,E,122,N],[12,"elem",E,E,122,N],[3,"TypeSlice",E,R[2215],N,N],[12,R[2070],E,E,123,N],[12,"elem",E,E,123,N],[3,R[2823],E,R[2223],N,N],[12,"dyn_token",E,E,124,N],[12,"bounds",E,E,124,N],[3,"TypeTuple",E,R[2221],N,N],[12,R[2069],E,E,125,N],[12,"elems",E,E,125,N],[3,"FieldPat",E,"A single field in a struct pattern.",N,N],[12,"attrs",E,E,126,N],[12,"member",E,E,126,N],[12,R[2072],E,E,126,N],[12,"pat",E,E,126,N],[3,"PatBox",E,R[2147],N,N],[12,"attrs",E,E,127,N],[12,"box_token",E,E,127,N],[12,"pat",E,E,127,N],[3,"PatIdent",E,R[2142],N,N],[12,"attrs",E,E,128,N],[12,"by_ref",E,E,128,N],[12,R[1011],E,E,128,N],[12,"ident",E,E,128,N],[12,"subpat",E,E,128,N],[3,"PatLit",E,R[2149],N,N],[12,"attrs",E,E,129,N],[12,"expr",E,E,129,N],[3,"PatMacro",E,R[3261],N,N],[12,"attrs",E,E,130,N],[12,"mac",E,E,130,N],[3,"PatOr",E,R[3262],N,N],[12,"attrs",E,E,131,N],[12,"leading_vert",E,E,131,N],[12,"cases",E,E,131,N],[3,"PatPath",E,R[2145],N,N],[12,"attrs",E,E,132,N],[12,"qself",E,E,132,N],[12,"path",E,E,132,N],[3,"PatRange",E,R[2150],N,N],[12,"attrs",E,E,133,N],[12,"lo",E,E,133,N],[12,"limits",E,E,133,N],[12,"hi",E,E,133,N],[3,R[3290],E,R[3263],N,N],[12,"attrs",E,E,134,N],[12,R[2092],E,E,134,N],[12,R[1011],E,E,134,N],[12,"pat",E,E,134,N],[3,"PatRest",E,R[3264],N,N],[12,"attrs",E,E,135,N],[12,R[2074],E,E,135,N],[3,"PatSlice",E,R[3265],N,N],[12,"attrs",E,E,136,N],[12,R[2070],E,E,136,N],[12,"elems",E,E,136,N],[3,"PatStruct",E,R[2143],N,N],[12,"attrs",E,E,137,N],[12,"path",E,E,137,N],[12,R[2071],E,E,137,N],[12,"fields",E,E,137,N],[12,R[2074],E,E,137,N],[3,"PatTuple",E,R[2146],N,N],[12,"attrs",E,E,138,N],[12,R[2069],E,E,138,N],[12,"elems",E,E,138,N],[3,R[2792],E,R[2144],N,N],[12,"attrs",E,E,139,N],[12,"path",E,E,139,N],[12,"pat",E,E,139,N],[3,"PatType",E,R[3266],N,N],[12,"attrs",E,E,140,N],[12,"pat",E,E,140,N],[12,R[2072],E,E,140,N],[12,"ty",E,E,140,N],[3,"PatWild",E,R[2141],N,N],[12,"attrs",E,E,141,N],[12,R[2091],E,E,141,N],[3,R[2825],E,"Angle bracketed arguments of a path segment: the `<K, V>`…",N,N],[12,R[2086],E,E,142,N],[12,"lt_token",E,E,142,N],[12,"args",E,E,142,N],[12,"gt_token",E,E,142,N],[3,"Binding",E,"A binding (equality constraint) on an associated type:…",N,N],[12,"ident",E,E,143,N],[12,R[2078],E,E,143,N],[12,"ty",E,E,143,N],[3,R[2826],E,R[2231],N,N],[12,"ident",E,E,144,N],[12,R[2072],E,E,144,N],[12,"bounds",E,E,144,N],[3,R[2827],E,"Arguments of a function path segment: the `(A, B) -> C` in…",N,N],[12,R[2069],E,E,145,N],[12,"inputs",E,"`(A, B)`",145,N],[12,"output",E,"`C`",145,N],[3,"Path",E,"A path at which a named item is exported:…",N,N],[12,R[2093],E,E,146,N],[12,"segments",E,E,146,N],[3,R[1027],E,"A segment of a path together with any path arguments on…",N,N],[12,"ident",E,E,147,N],[12,R[734],E,E,147,N],[3,"QSelf",E,"The explicit Self type in a qualified path: the `T` in `<T…",N,N],[12,"lt_token",E,E,148,N],[12,"ty",E,E,148,N],[12,R[368],E,E,148,N],[12,"as_token",E,E,148,N],[12,"gt_token",E,E,148,N],[3,"Error",E,R[2717],N,N],[4,"AttrStyle",E,"Distinguishes between attributes that decorate an item and…",N,N],[13,"Outer",E,E,149,N],[13,"Inner",E,E,149,N],[4,"Meta",E,"Content of a compile-time structured attribute.",N,N],[13,"Path",E,E,150,N],[13,"List",E,R[2094],150,N],[13,"NameValue",E,R[2095],150,N],[4,"NestedMeta",E,"Element of a compile-time attribute list.",N,N],[13,"Meta",E,"A structured meta item, like the `Copy` in…",151,N],[13,"Lit",E,"A Rust literal, like the `\"new_name\"` in…",151,N],[4,"Fields",E,"Data stored within an enum variant or struct.",N,N],[13,"Named",E,R[2096],152,N],[13,"Unnamed",E,R[2097],152,N],[13,"Unit",E,"Unit struct or unit variant such as `None`.",152,N],[4,"Visibility",E,"The visibility level of an item: inherited or `pub` or…",N,N],[13,"Public",E,R[2098],153,N],[13,"Crate",E,R[2099],153,N],[13,"Restricted",E,R[2100],153,N],[13,"Inherited",E,"An inherited visibility, which usually means private.",153,N],[4,R[2828],E,"An individual generic argument to a method, like `T`.",N,N],[13,"Type",E,R[2230],154,N],[13,"Const",E,R[2232],154,N],[4,R[2829],E,"Limit types of a range, inclusive or exclusive.",N,N],[13,"HalfOpen",E,"Inclusive at the beginning, exclusive at the end.",155,N],[13,"Closed",E,"Inclusive at the beginning and end.",155,N],[4,"Expr",E,"A Rust expression.",N,N],[13,"Array",E,R[2103],156,N],[13,"Assign",E,R[2121],156,N],[13,"AssignOp",E,R[2122],156,N],[13,"Async",E,R[2137],156,N],[13,"Await",E,R[3257],156,N],[13,"Binary",E,R[2107],156,N],[13,"Block",E,R[2120],156,N],[13,"Box",E,R[2101],156,N],[13,"Break",E,R[2128],156,N],[13,"Call",E,R[2104],156,N],[13,"Cast",E,R[2110],156,N],[13,"Closure",E,R[2118],156,N],[13,"Continue",E,R[2129],156,N],[13,"Field",E,R[2123],156,N],[13,"ForLoop",E,R[2115],156,N],[13,"Group",E,R[2135],156,N],[13,"If",E,R[2113],156,N],[13,"Index",E,R[2124],156,N],[13,"Let",E,R[2112],156,N],[13,"Lit",E,R[2109],156,N],[13,"Loop",E,R[2116],156,N],[13,"Macro",E,R[2131],156,N],[13,"Match",E,R[2117],156,N],[13,"MethodCall",E,R[2105],156,N],[13,"Paren",E,R[2134],156,N],[13,"Path",E,R[2126],156,N],[13,"Range",E,R[2125],156,N],[13,"Reference",E,R[2127],156,N],[13,"Repeat",E,R[2133],156,N],[13,"Return",E,R[2130],156,N],[13,"Struct",E,R[2132],156,N],[13,"Try",E,R[2136],156,N],[13,"TryBlock",E,R[2138],156,N],[13,"Tuple",E,R[2106],156,N],[13,"Type",E,R[2111],156,N],[13,"Unary",E,R[2108],156,N],[13,"Unsafe",E,R[2119],156,N],[13,R[2197],E,R[2140],156,N],[13,"While",E,R[2114],156,N],[13,"Yield",E,R[2139],156,N],[4,"Member",E,"A struct or tuple struct field accessed in a struct…",N,N],[13,"Named",E,"A named field like `self.x`.",157,N],[13,"Unnamed",E,"An unnamed field like `self.0`.",157,N],[4,R[2830],E,"A generic type parameter, lifetime, or const generic: `T:…",N,N],[13,"Type",E,R[2154],158,N],[13,"Lifetime",E,R[2155],158,N],[13,"Const",E,R[2156],158,N],[4,R[1032],E,"A modifier on a trait bound, currently only used for the…",N,N],[13,"None",E,E,159,N],[13,"Maybe",E,E,159,N],[4,R[2831],E,"A trait or lifetime used as a bound on a type parameter.",N,N],[13,"Trait",E,E,160,N],[13,"Lifetime",E,E,160,N],[4,R[1034],E,"A single predicate in a `where` clause: `T:…",N,N],[13,"Type",E,R[2157],161,N],[13,"Lifetime",E,R[2158],161,N],[13,"Eq",E,R[2159],161,N],[4,"FnArg",E,"An argument in a function signature: the `n: usize` in `fn…",N,N],[13,"Receiver",E,R[3258],162,N],[13,"Typed",E,"A function argument accepted by pattern and type.",162,N],[4,R[2832],E,"An item within an `extern` block.",N,N],[13,"Fn",E,R[2163],163,N],[13,"Static",E,R[2164],163,N],[13,"Type",E,R[2165],163,N],[13,"Macro",E,R[2166],163,N],[13,R[2197],E,R[2167],163,N],[4,"ImplItem",E,"An item within an impl block.",N,N],[13,"Const",E,R[2168],164,N],[13,"Method",E,R[2169],164,N],[13,"Type",E,R[2170],164,N],[13,"Macro",E,R[2172],164,N],[13,R[2197],E,R[2173],164,N],[4,"Item",E,"Things that can appear directly inside of a module or scope.",N,N],[13,"Const",E,R[2177],165,N],[13,"Enum",E,R[3259],165,N],[13,"ExternCrate",E,R[2174],165,N],[13,"Fn",E,R[2178],165,N],[13,"ForeignMod",E,R[2180],165,N],[13,"Impl",E,R[2189],165,N],[13,"Macro",E,R[2190],165,N],[13,"Macro2",E,R[2191],165,N],[13,"Mod",E,R[2179],165,N],[13,"Static",E,R[2176],165,N],[13,"Struct",E,R[2184],165,N],[13,"Trait",E,R[2187],165,N],[13,"TraitAlias",E,R[2188],165,N],[13,"Type",E,R[2181],165,N],[13,"Union",E,R[2186],165,N],[13,"Use",E,R[2175],165,N],[13,R[2197],E,R[2192],165,N],[4,"TraitItem",E,"An item declaration within the definition of a trait.",N,N],[13,"Const",E,R[2193],166,N],[13,"Method",E,R[2194],166,N],[13,"Type",E,R[2195],166,N],[13,"Macro",E,R[2196],166,N],[13,R[2197],E,R[2198],166,N],[4,"UseTree",E,"A suffix of an import tree in a `use` item: `Type as…",N,N],[13,"Path",E,R[2199],167,N],[13,"Name",E,R[2200],167,N],[13,"Rename",E,R[2201],167,N],[13,"Glob",E,R[2202],167,N],[13,"Group",E,R[2203],167,N],[4,"Lit",E,"A Rust literal such as a string or integer or boolean.",N,N],[13,"Str",E,R[2204],168,N],[13,"ByteStr",E,R[2205],168,N],[13,"Byte",E,R[2206],168,N],[13,"Char",E,R[2207],168,N],[13,"Int",E,R[2208],168,N],[13,"Float",E,R[2209],168,N],[13,"Bool",E,R[2210],168,N],[13,R[2197],E,"A raw token literal not interpreted by Syn.",168,N],[4,"StrStyle",E,"The style of a string literal, either plain quoted or a…",N,N],[13,"Cooked",E,"An ordinary string like `\"data\"`.",169,N],[13,"Raw",E,"A raw string like `r##\"data\"##`.",169,N],[4,R[2834],E,"A grouping token that surrounds a macro body: `m!(...)` or…",N,N],[13,"Paren",E,E,170,N],[13,"Brace",E,E,170,N],[13,"Bracket",E,E,170,N],[4,"Data",E,"The storage of a struct, enum or union data structure.",N,N],[13,"Struct",E,R[2212],171,N],[13,"Enum",E,R[2213],171,N],[13,"Union",E,R[3260],171,N],[4,"BinOp",E,"A binary operator: `+`, `+=`, `&`.",N,N],[13,"Add",E,"The `+` operator (addition)",172,N],[13,"Sub",E,"The `-` operator (subtraction)",172,N],[13,"Mul",E,"The `*` operator (multiplication)",172,N],[13,"Div",E,"The `/` operator (division)",172,N],[13,"Rem",E,"The `%` operator (modulus)",172,N],[13,"And",E,"The `&&` operator (logical and)",172,N],[13,"Or",E,"The `||` operator (logical or)",172,N],[13,"BitXor",E,"The `^` operator (bitwise xor)",172,N],[13,"BitAnd",E,"The `&` operator (bitwise and)",172,N],[13,"BitOr",E,"The `|` operator (bitwise or)",172,N],[13,"Shl",E,"The `<<` operator (shift left)",172,N],[13,"Shr",E,"The `>>` operator (shift right)",172,N],[13,"Eq",E,"The `==` operator (equality)",172,N],[13,"Lt",E,"The `<` operator (less than)",172,N],[13,"Le",E,"The `<=` operator (less than or equal to)",172,N],[13,"Ne",E,"The `!=` operator (not equal to)",172,N],[13,"Ge",E,"The `>=` operator (greater than or equal to)",172,N],[13,"Gt",E,"The `>` operator (greater than)",172,N],[13,"AddEq",E,"The `+=` operator",172,N],[13,"SubEq",E,"The `-=` operator",172,N],[13,"MulEq",E,"The `*=` operator",172,N],[13,"DivEq",E,"The `/=` operator",172,N],[13,"RemEq",E,"The `%=` operator",172,N],[13,"BitXorEq",E,"The `^=` operator",172,N],[13,"BitAndEq",E,"The `&=` operator",172,N],[13,"BitOrEq",E,"The `|=` operator",172,N],[13,"ShlEq",E,"The `<<=` operator",172,N],[13,"ShrEq",E,"The `>>=` operator",172,N],[4,"UnOp",E,"A unary operator: `*`, `!`, `-`.",N,N],[13,"Deref",E,"The `*` operator for dereferencing",173,N],[13,"Not",E,"The `!` operator for logical inversion",173,N],[13,"Neg",E,"The `-` operator for negation",173,N],[4,"Stmt",E,"A statement, usually ending in a semicolon.",N,N],[13,"Local",E,"A local (let) binding.",174,N],[13,"Item",E,"An item definition.",174,N],[13,"Expr",E,"Expr without trailing semicolon.",174,N],[13,"Semi",E,"Expression with trailing semicolon.",174,N],[4,"ReturnType",E,"Return type of a function signature.",N,N],[13,"Default",E,"Return type is not specified.",175,N],[13,"Type",E,"A particular type is returned.",175,N],[4,"Type",E,"The possible types that a Rust value could have.",N,N],[13,"Array",E,R[2216],176,N],[13,"BareFn",E,R[2219],176,N],[13,"Group",E,R[2226],176,N],[13,"ImplTrait",E,R[2224],176,N],[13,"Infer",E,R[2227],176,N],[13,"Macro",E,R[2228],176,N],[13,"Never",E,R[2220],176,N],[13,"Paren",E,R[2225],176,N],[13,"Path",E,R[2222],176,N],[13,"Ptr",E,R[2217],176,N],[13,"Reference",E,R[2218],176,N],[13,"Slice",E,R[2215],176,N],[13,"TraitObject",E,R[2223],176,N],[13,"Tuple",E,R[2221],176,N],[13,R[2197],E,R[2229],176,N],[4,"Pat",E,"A pattern in a local binding, function signature, match…",N,N],[13,"Box",E,R[2147],177,N],[13,"Ident",E,R[2142],177,N],[13,"Lit",E,R[2149],177,N],[13,"Macro",E,R[3261],177,N],[13,"Or",E,R[3262],177,N],[13,"Path",E,R[2145],177,N],[13,"Range",E,R[2150],177,N],[13,"Reference",E,R[3263],177,N],[13,"Rest",E,R[3264],177,N],[13,"Slice",E,R[3265],177,N],[13,"Struct",E,R[2143],177,N],[13,"Tuple",E,R[2146],177,N],[13,"TupleStruct",E,R[2144],177,N],[13,"Type",E,R[3266],177,N],[13,R[2197],E,R[2153],177,N],[13,"Wild",E,R[2141],177,N],[4,R[2836],E,"An individual generic argument, like `'a`, `T`, or `Item =…",N,N],[13,"Lifetime",E,"A lifetime argument.",178,N],[13,"Type",E,R[2230],178,N],[13,"Binding",E,"A binding (equality constraint) on an associated type: the…",178,N],[13,R[2826],E,R[2231],178,N],[13,"Const",E,R[2232],178,N],[4,R[2837],E,"Angle bracketed or parenthesized arguments of a path…",N,N],[13,"None",E,E,179,N],[13,"AngleBracketed",E,"The `<'a, T>` in `std::slice::iter<'a, T>`.",179,N],[13,"Parenthesized",E,"The `(A, B) -> C` in `Fn(A, B) -> C`.",179,N],[5,"parse",E,R[2719],N,[[[R[768]]],[["parse"],[R[3]]]]],[5,"parse2",E,R[2718],N,[[[R[768]]],[["parse"],[R[3]]]]],[5,R[4635],E,R[2720],N,[[["str"]],[["parse"],[R[3]]]]],[5,"parse_file",E,"Parse the content of a file of Rust code.",N,[[["str"]],[["file"],[R[3],["file"]]]]],[0,"token",E,"Tokens representing Rust punctuation, keywords, and…",N,N],[3,"Underscore",R[2728],"`_`",N,N],[12,"spans",E,E,180,N],[3,"Abstract",E,"`abstract`",N,N],[12,"span",E,E,181,N],[3,"As",E,"`as`",N,N],[12,"span",E,E,182,N],[3,"Async",E,"`async`",N,N],[12,"span",E,E,183,N],[3,"Auto",E,"`auto`",N,N],[12,"span",E,E,184,N],[3,"Await",E,"`await`",N,N],[12,"span",E,E,185,N],[3,"Become",E,"`become`",N,N],[12,"span",E,E,186,N],[3,"Box",E,"`box`",N,N],[12,"span",E,E,187,N],[3,"Break",E,"`break`",N,N],[12,"span",E,E,188,N],[3,"Const",E,"`const`",N,N],[12,"span",E,E,189,N],[3,"Continue",E,"`continue`",N,N],[12,"span",E,E,190,N],[3,"Crate",E,"`crate`",N,N],[12,"span",E,E,191,N],[3,"Default",E,"`default`",N,N],[12,"span",E,E,192,N],[3,"Do",E,"`do`",N,N],[12,"span",E,E,193,N],[3,"Dyn",E,"`dyn`",N,N],[12,"span",E,E,194,N],[3,"Else",E,"`else`",N,N],[12,"span",E,E,195,N],[3,"Enum",E,"`enum`",N,N],[12,"span",E,E,196,N],[3,"Extern",E,"`extern`",N,N],[12,"span",E,E,197,N],[3,"Final",E,"`final`",N,N],[12,"span",E,E,198,N],[3,"Fn",E,"`fn`",N,N],[12,"span",E,E,199,N],[3,"For",E,"`for`",N,N],[12,"span",E,E,200,N],[3,"If",E,"`if`",N,N],[12,"span",E,E,201,N],[3,"Impl",E,"`impl`",N,N],[12,"span",E,E,202,N],[3,"In",E,"`in`",N,N],[12,"span",E,E,203,N],[3,"Let",E,"`let`",N,N],[12,"span",E,E,204,N],[3,"Loop",E,"`loop`",N,N],[12,"span",E,E,205,N],[3,"Macro",E,"`macro`",N,N],[12,"span",E,E,206,N],[3,"Match",E,"`match`",N,N],[12,"span",E,E,207,N],[3,"Mod",E,"`mod`",N,N],[12,"span",E,E,208,N],[3,"Move",E,"`move`",N,N],[12,"span",E,E,209,N],[3,"Mut",E,"`mut`",N,N],[12,"span",E,E,210,N],[3,"Override",E,"`override`",N,N],[12,"span",E,E,211,N],[3,"Priv",E,"`priv`",N,N],[12,"span",E,E,212,N],[3,"Pub",E,"`pub`",N,N],[12,"span",E,E,213,N],[3,"Ref",E,"`ref`",N,N],[12,"span",E,E,214,N],[3,"Return",E,"`return`",N,N],[12,"span",E,E,215,N],[3,"SelfType",E,"`Self`",N,N],[12,"span",E,E,216,N],[3,"SelfValue",E,"`self`",N,N],[12,"span",E,E,217,N],[3,"Static",E,"`static`",N,N],[12,"span",E,E,218,N],[3,"Struct",E,"`struct`",N,N],[12,"span",E,E,219,N],[3,"Super",E,"`super`",N,N],[12,"span",E,E,220,N],[3,"Trait",E,"`trait`",N,N],[12,"span",E,E,221,N],[3,"Try",E,"`try`",N,N],[12,"span",E,E,222,N],[3,"Type",E,"`type`",N,N],[12,"span",E,E,223,N],[3,"Typeof",E,"`typeof`",N,N],[12,"span",E,E,224,N],[3,"Union",E,"`union`",N,N],[12,"span",E,E,225,N],[3,"Unsafe",E,"`unsafe`",N,N],[12,"span",E,E,226,N],[3,"Unsized",E,"`unsized`",N,N],[12,"span",E,E,227,N],[3,"Use",E,"`use`",N,N],[12,"span",E,E,228,N],[3,"Virtual",E,"`virtual`",N,N],[12,"span",E,E,229,N],[3,"Where",E,"`where`",N,N],[12,"span",E,E,230,N],[3,"While",E,"`while`",N,N],[12,"span",E,E,231,N],[3,"Yield",E,"`yield`",N,N],[12,"span",E,E,232,N],[3,"Add",E,"`+`",N,N],[12,"spans",E,E,233,N],[3,"AddEq",E,"`+=`",N,N],[12,"spans",E,E,234,N],[3,"And",E,"`&`",N,N],[12,"spans",E,E,235,N],[3,"AndAnd",E,"`&&`",N,N],[12,"spans",E,E,236,N],[3,"AndEq",E,"`&=`",N,N],[12,"spans",E,E,237,N],[3,"At",E,"`@`",N,N],[12,"spans",E,E,238,N],[3,"Bang",E,"`!`",N,N],[12,"spans",E,E,239,N],[3,"Caret",E,"`^`",N,N],[12,"spans",E,E,240,N],[3,"CaretEq",E,"`^=`",N,N],[12,"spans",E,E,241,N],[3,"Colon",E,"`:`",N,N],[12,"spans",E,E,242,N],[3,"Colon2",E,"`::`",N,N],[12,"spans",E,E,243,N],[3,"Comma",E,"`,`",N,N],[12,"spans",E,E,244,N],[3,"Div",E,"`/`",N,N],[12,"spans",E,E,245,N],[3,"DivEq",E,"`/=`",N,N],[12,"spans",E,E,246,N],[3,"Dollar",E,"`$`",N,N],[12,"spans",E,E,247,N],[3,"Dot",E,"`.`",N,N],[12,"spans",E,E,248,N],[3,"Dot2",E,"`..`",N,N],[12,"spans",E,E,249,N],[3,"Dot3",E,"`...`",N,N],[12,"spans",E,E,250,N],[3,"DotDotEq",E,"`..=`",N,N],[12,"spans",E,E,251,N],[3,"Eq",E,"`=`",N,N],[12,"spans",E,E,252,N],[3,"EqEq",E,"`==`",N,N],[12,"spans",E,E,253,N],[3,"Ge",E,"`>=`",N,N],[12,"spans",E,E,254,N],[3,"Gt",E,"`>`",N,N],[12,"spans",E,E,255,N],[3,"Le",E,"`<=`",N,N],[12,"spans",E,E,256,N],[3,"Lt",E,"`<`",N,N],[12,"spans",E,E,257,N],[3,"MulEq",E,"`*=`",N,N],[12,"spans",E,E,258,N],[3,"Ne",E,"`!=`",N,N],[12,"spans",E,E,259,N],[3,"Or",E,"`|`",N,N],[12,"spans",E,E,260,N],[3,"OrEq",E,"`|=`",N,N],[12,"spans",E,E,261,N],[3,"OrOr",E,"`||`",N,N],[12,"spans",E,E,262,N],[3,"Pound",E,"`#`",N,N],[12,"spans",E,E,263,N],[3,"Question",E,"`?`",N,N],[12,"spans",E,E,264,N],[3,"RArrow",E,"`->`",N,N],[12,"spans",E,E,265,N],[3,"LArrow",E,"`<-`",N,N],[12,"spans",E,E,266,N],[3,"Rem",E,"`%`",N,N],[12,"spans",E,E,267,N],[3,"RemEq",E,"`%=`",N,N],[12,"spans",E,E,268,N],[3,"FatArrow",E,"`=>`",N,N],[12,"spans",E,E,269,N],[3,"Semi",E,"`;`",N,N],[12,"spans",E,E,270,N],[3,"Shl",E,"`<<`",N,N],[12,"spans",E,E,271,N],[3,"ShlEq",E,"`<<=`",N,N],[12,"spans",E,E,272,N],[3,"Shr",E,"`>>`",N,N],[12,"spans",E,E,273,N],[3,"ShrEq",E,"`>>=`",N,N],[12,"spans",E,E,274,N],[3,"Star",E,"`*`",N,N],[12,"spans",E,E,275,N],[3,"Sub",E,"`-`",N,N],[12,"spans",E,E,276,N],[3,"SubEq",E,"`-=`",N,N],[12,"spans",E,E,277,N],[3,"Tilde",E,"`~`",N,N],[12,"spans",E,E,278,N],[3,"Brace",E,"`{...}`",N,N],[12,"span",E,E,279,N],[3,"Bracket",E,"`[...]`",N,N],[12,"span",E,E,280,N],[3,"Paren",E,"`(...)`",N,N],[12,"span",E,E,281,N],[3,"Group",E,"None-delimited group",N,N],[12,"span",E,E,282,N],[8,"Token",E,"Marker trait for types that represent single tokens.",N,N],[11,"surround",E,E,279,[[["self"],["f"],[R[768]]]]],[11,"surround",E,E,280,[[["self"],["f"],[R[768]]]]],[11,"surround",E,E,281,[[["self"],["f"],[R[768]]]]],[11,"surround",E,E,282,[[["self"],["f"],[R[768]]]]],[11,"parse_meta","syn","Parses the content of the attribute, consisting of the…",0,[[["self"]],[["meta"],[R[3],["meta"]]]]],[11,"parse_args",E,"Parse the arguments to the attribute as a syntax tree.",0,[[["self"]],[["parse"],[R[3]]]]],[11,"parse_args_with",E,"Parse the arguments to the attribute using the given parser.",0,[[["self"],["parser"]],[R[3]]]],[11,"parse_outer",E,"Parses zero or more outer attributes from the stream.",0,[[[R[2233]]],[["vec"],[R[3],["vec"]]]]],[11,"parse_inner",E,"Parses zero or more inner attributes from the stream.",0,[[[R[2233]]],[["vec"],[R[3],["vec"]]]]],[11,"path",E,"Returns the identifier that begins this structured meta…",150,[[["self"]],["path"]]],[11,"parse_named",E,"Parses a named (braced struct) field.",3,[[[R[2233]]],[R[3]]]],[11,"parse_unnamed",E,"Parses an unnamed (tuple struct) field.",3,[[[R[2233]]],[R[3]]]],[11,"iter",E,"Get an iterator over the borrowed [`Field`] items in this…",152,[[["self"]],[["iter",["field"]],["field"]]]],[11,R[31],E,"Get an iterator over the mutably borrowed [`Field`] items…",152,[[["self"]],[[R[24],["field"]],["field"]]]],[11,"type_params",E,"Returns an Iterator<Item = &TypeParam> over the type…",56,[[["self"]],["typeparams"]]],[11,"type_params_mut",E,"Returns an Iterator<Item = &mut TypeParam> over the type…",56,[[["self"]],["typeparamsmut"]]],[11,R[989],E,"Returns an Iterator<Item = &LifetimeDef> over the lifetime…",56,[[["self"]],[R[989]]]],[11,"lifetimes_mut",E,"Returns an Iterator<Item = &mut LifetimeDef> over the…",56,[[["self"]],["lifetimesmut"]]],[11,"const_params",E,"Returns an Iterator<Item = &ConstParam> over the constant…",56,[[["self"]],["constparams"]]],[11,"const_params_mut",E,"Returns an Iterator<Item = &mut ConstParam> over the…",56,[[["self"]],["constparamsmut"]]],[11,"make_where_clause",E,"Initializes an empty `where`-clause if there is not one…",56,[[["self"]],[R[994]]]],[11,"split_for_impl",E,"Split a type's generics into the pieces required for…",56,[[["self"]]]],[11,"as_turbofish",E,"Turn a type's generics like `<X, Y>` into a turbofish like…",283,[[["self"]],[R[2753]]]],[11,"new",E,E,57,[[[R[1001]]],["self"]]],[11,R[1001],E,E,88,[[["self"]],[[R[23],[R[1001]]],[R[1001]]]]],[11,"new",E,"Panics",101,[[["str"],["span"]],["self"]]],[11,"new",E,"Interpret a Syn literal from a proc-macro2 literal.",168,[[[R[404]]],["self"]]],[11,"new",E,E,284,[[["str"],["span"]],["self"]]],[11,"value",E,E,284,[[["self"]],["string"]]],[11,"parse",E,"Parse a syntax tree node from the content of this string…",284,[[["self"]],[["parse"],[R[3]]]]],[11,"parse_with",E,"Invoke parser on the content of this string literal.",284,[[["self"],["parser"]],[R[3]]]],[11,"span",E,E,284,[[["self"]],["span"]]],[11,R[770],E,E,284,[[["self"],["span"]]]],[11,"suffix",E,E,284,[[["self"]],["str"]]],[11,"new",E,E,285,[[["span"]],["self"]]],[11,"value",E,E,285,[[["self"]],[["u8"],["vec",["u8"]]]]],[11,"span",E,E,285,[[["self"]],["span"]]],[11,R[770],E,E,285,[[["self"],["span"]]]],[11,"new",E,E,286,[[["span"],["u8"]],["self"]]],[11,"value",E,E,286,[[["self"]],["u8"]]],[11,"span",E,E,286,[[["self"]],["span"]]],[11,R[770],E,E,286,[[["self"],["span"]]]],[11,"new",E,E,287,[[["char"],["span"]],["self"]]],[11,"value",E,E,287,[[["self"]],["char"]]],[11,"span",E,E,287,[[["self"]],["span"]]],[11,R[770],E,E,287,[[["self"],["span"]]]],[11,"new",E,E,288,[[["str"],["span"]],["self"]]],[11,R[3267],E,E,288,[[["self"]],["str"]]],[11,R[3268],E,"Parses the literal into a selected number type.",288,[[["self"]],[R[3]]]],[11,"suffix",E,E,288,[[["self"]],["str"]]],[11,"span",E,E,288,[[["self"]],["span"]]],[11,R[770],E,E,288,[[["self"],["span"]]]],[11,"new",E,E,289,[[["str"],["span"]],["self"]]],[11,R[3267],E,E,289,[[["self"]],["str"]]],[11,R[3268],E,E,289,[[["self"]],[R[3]]]],[11,"suffix",E,E,289,[[["self"]],["str"]]],[11,"span",E,E,289,[[["self"]],["span"]]],[11,R[770],E,E,289,[[["self"],["span"]]]],[11,"parse_body",E,R[2235],103,[[["self"]],[["parse"],[R[3]]]]],[11,"parse_body_with",E,R[2235],103,[[["self"],["parser"]],[R[3]]]],[11,"parse_within",E,"Parse the body of a block as zero or more statements,…",108,[[[R[2233]]],[["vec",["stmt"]],[R[3],["vec"]]]]],[11,R[2236],E,"In some positions, types may not contain the `+`…",176,[[[R[2233]]],[R[3]]]],[11,R[2236],E,E,175,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,175,[[[R[2233]],["bool"]],[R[3]]]],[11,R[2236],E,E,124,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,124,[[[R[2233]],["bool"]],[R[3]]]],[11,"parse_mod_style",E,"Parse a `Path` containing no path arguments on any of its…",146,[[[R[2233]]],[R[3]]]],[11,"is_ident",E,"Determines whether this is a path of length 1 equal to the…",146,[[["self"],["i"]],["bool"]]],[11,"get_ident",E,"If this path consists of a single ident, returns the ident.",146,[[["self"]],[["ident"],[R[23],["ident"]]]]],[11,R[25],E,E,179,[[["self"]],["bool"]]],[0,"buffer",E,"A stably addressed token buffer supporting efficient…",N,N],[3,R[2839],R[2726],"A buffer that can be efficiently traversed multiple times,…",N,N],[3,"Cursor",E,"A cheaply copyable cursor into a `TokenBuffer`.",N,N],[11,"new",E,R[2237],290,[[[R[768]]],[R[2238]]]],[11,"new2",E,R[2237],290,[[[R[768]]],[R[2238]]]],[11,"begin",E,"Creates a cursor referencing the first token in the buffer…",290,[[["self"]],["cursor"]]],[11,"empty",E,"Creates a cursor referencing a static empty TokenStream.",291,[[],["self"]]],[11,"eof",E,"Checks whether the cursor is currently pointing at the end…",291,[[],["bool"]]],[11,"group",E,"If the cursor is pointing at a `Group` with the given…",291,[[[R[769]]],[R[23]]]],[11,"ident",E,"If the cursor is pointing at a `Ident`, returns it along…",291,[[],[R[23]]]],[11,"punct",E,"If the cursor is pointing at an `Punct`, returns it along…",291,[[],[R[23]]]],[11,R[404],E,"If the cursor is pointing at a `Literal`, return it along…",291,[[],[R[23]]]],[11,R[1001],E,"If the cursor is pointing at a `Lifetime`, returns it…",291,[[],[R[23]]]],[11,R[2239],E,"Copies all remaining tokens visible from this cursor into…",291,[[],[R[768]]]],[11,"token_tree",E,"If the cursor is pointing at a `TokenTree`, returns it…",291,[[],[R[23]]]],[11,"span",E,"Returns the `Span` of the current token, or…",291,[[],["span"]]],[0,"ext","syn","Extension traits to provide parsing methods on foreign…",N,N],[8,"IdentExt","syn::ext","Additional methods for `Ident` not provided by proc-macro2…",N,N],[10,"parse_any",E,"Parses any identifier including keywords.",292,[[[R[2233]]],[R[3]]]],[18,"peek_any",E,"Peeks any identifier including keywords. Usage:…",292,N],[10,"unraw",E,"Strips the raw marker `r#`, if any, from the beginning of…",292,[[["self"]],["ident"]]],[0,R[2723],"syn","A punctuated sequence of syntax tree nodes separated by…",N,N],[3,R[2840],R[2727],"A punctuated sequence of syntax tree nodes of type `T`…",N,N],[3,"Pairs",E,"An iterator over borrowed pairs of type `Pair<&T, &P>`.",N,N],[3,"PairsMut",E,"An iterator over mutably borrowed pairs of type `Pair<&mut…",N,N],[3,"IntoPairs",E,"An iterator over owned pairs of type `Pair<T, P>`.",N,N],[3,R[306],E,"An iterator over owned values of type `T`.",N,N],[3,"Iter",E,"An iterator over borrowed values of type `&T`.",N,N],[3,R[631],E,"An iterator over mutably borrowed values of type `&mut T`.",N,N],[4,"Pair",E,"A single syntax tree node of type `T` followed by its…",N,N],[13,R[2840],E,E,293,N],[13,"End",E,E,293,N],[11,"new",E,"Creates an empty punctuated sequence.",294,[[],[R[2723]]]],[11,R[25],E,"Determines whether this punctuated sequence is empty,…",294,[[["self"]],["bool"]]],[11,"len",E,"Returns the number of syntax tree nodes in this punctuated…",294,[[["self"]],["usize"]]],[11,"first",E,"Borrows the first element in this sequence.",294,[[["self"]],[[T],[R[23]]]]],[11,"last",E,"Borrows the last element in this sequence.",294,[[["self"]],[[T],[R[23]]]]],[11,"last_mut",E,"Mutably borrows the last element in this sequence.",294,[[["self"]],[[R[23]],[T]]]],[11,"iter",E,"Returns an iterator over borrowed syntax tree nodes of…",294,[[["self"]],["iter"]]],[11,R[31],E,"Returns an iterator over mutably borrowed syntax tree…",294,[[["self"]],[R[24]]]],[11,"pairs",E,R[2240],294,[[["self"]],["pairs"]]],[11,"pairs_mut",E,R[2240],294,[[["self"]],["pairsmut"]]],[11,"into_pairs",E,R[2240],294,[[],["intopairs"]]],[11,"push_value",E,R[2241],294,[[["self"],[T]]]],[11,"push_punct",E,"Appends a trailing punctuation onto the end of this…",294,[[["self"],["p"]]]],[11,"pop",E,"Removes the last punctuated pair from this sequence, or…",294,[[["self"]],[[R[23],["pair"]],["pair"]]]],[11,"trailing_punct",E,"Determines whether this punctuated sequence ends with a…",294,[[["self"]],["bool"]]],[11,"empty_or_trailing",E,"Returns true if either this `Punctuated` is empty, or it…",294,[[["self"]],["bool"]]],[11,"push",E,R[2241],294,[[["self"],[T]]]],[11,"insert",E,"Inserts an element at position `index`.",294,[[["self"],["usize"],[T]]]],[11,R[2721],E,R[2722],294,[[[R[2233]]],[R[3]]]],[11,"parse_terminated_with",E,"Parses zero or more occurrences of `T` using the given…",294,[[[R[2233]]],[R[3]]]],[11,"parse_separated_nonempty",E,"Parses one or more occurrences of `T` separated by…",294,[[[R[2233]]],[R[3]]]],[11,"parse_separated_nonempty_with",E,"Parses one or more occurrences of `T` using the given…",294,[[[R[2233]]],[R[3]]]],[11,"into_value",E,"Extracts the syntax tree node from this punctuated pair,…",293,[[],[T]]],[11,"value",E,"Borrows the syntax tree node from this punctuated pair.",293,[[["self"]],[T]]],[11,"value_mut",E,"Mutably borrows the syntax tree node from this punctuated…",293,[[["self"]],[T]]],[11,"punct",E,"Borrows the punctuation from this punctuated pair, unless…",293,[[["self"]],[[R[23]],["p"]]]],[11,"new",E,"Creates a punctuated pair out of a syntax tree node and an…",293,[[[R[23]],[T]],["self"]]],[11,"into_tuple",E,"Produces this punctuated pair as a tuple of syntax tree…",293,[[]]],[0,"spanned","syn",R[2242],N,N],[8,"Spanned","syn::spanned",R[2242],N,N],[10,"span",E,"Returns a `Span` covering the complete contents of this…",295,[[["self"]],["span"]]],[0,"visit","syn",R[2243],N,N],[5,"visit_abi","syn::visit",E,N,[[["abi"],["v"]]]],[5,R[2244],E,E,N,[[[R[2245]],["v"]]]],[5,"visit_arm",E,E,N,[[["arm"],["v"]]]],[5,R[2250],E,E,N,[[[R[2487]],["v"]]]],[5,R[2251],E,E,N,[[[R[996]],["v"]]]],[5,R[2252],E,E,N,[[[R[2488]],["v"]]]],[5,R[2255],E,E,N,[[["binop"],["v"]]]],[5,R[2256],E,E,N,[[["binding"],["v"]]]],[5,R[2257],E,E,N,[[["block"],["v"]]]],[5,R[2258],E,E,N,[[[R[2259]],["v"]]]],[5,R[2260],E,E,N,[[[R[2489]],["v"]]]],[5,R[2261],E,E,N,[[[R[2490]],["v"]]]],[5,R[2759],E,E,N,[[["data"],["v"]]]],[5,R[2262],E,E,N,[[[R[2748]],["v"]]]],[5,R[2263],E,E,N,[[[R[2491]],["v"]]]],[5,R[2264],E,E,N,[[[R[2492]],["v"]]]],[5,R[2265],E,E,N,[[[R[993]],["v"]]]],[5,R[2760],E,E,N,[[["expr"],["v"]]]],[5,R[2266],E,E,N,[[[R[2493]],["v"]]]],[5,R[2267],E,E,N,[[[R[2494]],["v"]]]],[5,R[2268],E,E,N,[[[R[2269]],["v"]]]],[5,R[2270],E,E,N,[[[R[2495]],["v"]]]],[5,R[3269],E,E,N,[[[R[3278]],["v"]]]],[5,R[2271],E,E,N,[[[R[2496]],["v"]]]],[5,R[2272],E,E,N,[[[R[2497]],["v"]]]],[5,R[2273],E,E,N,[[["exprbox"],["v"]]]],[5,R[2274],E,E,N,[[[R[2498]],["v"]]]],[5,R[2275],E,E,N,[[[R[2731]],["v"]]]],[5,R[2276],E,E,N,[[[R[2732]],["v"]]]],[5,R[2277],E,E,N,[[[R[2278]],["v"]]]],[5,R[2279],E,E,N,[[[R[2280]],["v"]]]],[5,R[2281],E,E,N,[[[R[2499]],["v"]]]],[5,R[2282],E,E,N,[[[R[2283]],["v"]]]],[5,R[2284],E,E,N,[[[R[2500]],["v"]]]],[5,R[2285],E,E,N,[[["exprif"],["v"]]]],[5,R[2288],E,E,N,[[[R[2501]],["v"]]]],[5,R[2289],E,E,N,[[["exprlet"],["v"]]]],[5,R[2290],E,E,N,[[["exprlit"],["v"]]]],[5,R[2291],E,E,N,[[[R[2734]],["v"]]]],[5,R[2292],E,E,N,[[[R[2502]],["v"]]]],[5,R[2293],E,E,N,[[[R[2503]],["v"]]]],[5,R[2294],E,E,N,[[[R[2295]],["v"]]]],[5,R[2296],E,E,N,[[[R[2504]],["v"]]]],[5,R[2297],E,E,N,[[[R[2735]],["v"]]]],[5,R[2298],E,E,N,[[[R[2505]],["v"]]]],[5,R[2299],E,E,N,[[[R[2300]],["v"]]]],[5,R[2301],E,E,N,[[[R[2506]],["v"]]]],[5,R[2302],E,E,N,[[[R[2507]],["v"]]]],[5,R[2303],E,E,N,[[[R[2508]],["v"]]]],[5,R[2304],E,E,N,[[["exprtry"],["v"]]]],[5,R[2305],E,E,N,[[[R[2306]],["v"]]]],[5,R[2307],E,E,N,[[[R[2509]],["v"]]]],[5,R[2308],E,E,N,[[[R[2733]],["v"]]]],[5,R[2309],E,E,N,[[[R[2510]],["v"]]]],[5,R[2310],E,E,N,[[[R[2511]],["v"]]]],[5,R[2313],E,E,N,[[[R[2512]],["v"]]]],[5,R[2314],E,E,N,[[[R[2513]],["v"]]]],[5,R[2315],E,E,N,[[["field"],["v"]]]],[5,R[2316],E,E,N,[[[R[2741]],["v"]]]],[5,R[2317],E,E,N,[[[R[2514]],["v"]]]],[5,R[2318],E,E,N,[[["fields"],["v"]]]],[5,R[2319],E,E,N,[[[R[2320]],["v"]]]],[5,R[2321],E,E,N,[[[R[2322]],["v"]]]],[5,R[2761],E,E,N,[[["file"],["v"]]]],[5,R[2323],E,E,N,[[["fnarg"],["v"]]]],[5,R[2325],E,E,N,[[[R[2326]],["v"]]]],[5,R[2327],E,E,N,[[[R[2328]],["v"]]]],[5,R[2329],E,E,N,[[[R[2330]],["v"]]]],[5,R[2331],E,E,N,[[[R[2332]],["v"]]]],[5,R[2333],E,E,N,[[[R[2334]],["v"]]]],[5,R[2337],E,E,N,[[[R[2338]],["v"]]]],[5,R[2339],E,E,N,[[[R[2340]],["v"]]]],[5,R[2341],E,E,N,[[[R[2342]],["v"]]]],[5,R[2343],E,E,N,[[[R[2084]],["v"]]]],[5,R[2485],E,E,N,[[["ident"],["v"]]]],[5,R[2344],E,E,N,[[[R[2746]],["v"]]]],[5,R[2345],E,E,N,[[[R[2346]],["v"]]]],[5,R[2349],E,E,N,[[[R[2350]],["v"]]]],[5,R[2351],E,E,N,[[[R[2352]],["v"]]]],[5,R[2353],E,E,N,[[[R[2354]],["v"]]]],[5,R[2357],E,E,N,[[["index"],["v"]]]],[5,R[2762],E,E,N,[[["item"],["v"]]]],[5,R[2358],E,E,N,[[[R[2515]],["v"]]]],[5,R[2359],E,E,N,[[[R[2743]],["v"]]]],[5,R[2362],E,E,N,[[[R[2363]],["v"]]]],[5,R[2364],E,E,N,[[["itemfn"],["v"]]]],[5,R[2365],E,E,N,[[[R[2366]],["v"]]]],[5,R[2367],E,E,N,[[[R[2744]],["v"]]]],[5,R[2368],E,E,N,[[[R[2516]],["v"]]]],[5,R[2369],E,E,N,[[[R[2517]],["v"]]]],[5,R[2370],E,E,N,[[["itemmod"],["v"]]]],[5,R[2371],E,E,N,[[[R[2518]],["v"]]]],[5,R[2372],E,E,N,[[[R[2519]],["v"]]]],[5,R[2373],E,E,N,[[[R[2520]],["v"]]]],[5,R[2374],E,E,N,[[[R[2375]],["v"]]]],[5,R[2376],E,E,N,[[[R[2742]],["v"]]]],[5,R[2377],E,E,N,[[[R[2521]],["v"]]]],[5,R[2378],E,E,N,[[["itemuse"],["v"]]]],[5,R[2381],E,E,N,[[["label"],["v"]]]],[5,R[2382],E,E,N,[[[R[1001]],["v"]]]],[5,R[2383],E,E,N,[[[R[1005]],["v"]]]],[5,"visit_lit",E,E,N,[[["lit"],["v"]]]],[5,R[2384],E,E,N,[[["litbool"],["v"]]]],[5,R[2385],E,E,N,[[["litbyte"],["v"]]]],[5,R[2386],E,E,N,[[[R[2522]],["v"]]]],[5,R[2387],E,E,N,[[["litchar"],["v"]]]],[5,R[2388],E,E,N,[[[R[2747]],["v"]]]],[5,R[2389],E,E,N,[[["litint"],["v"]]]],[5,R[2390],E,E,N,[[["litstr"],["v"]]]],[5,R[2393],E,E,N,[[["local"],["v"]]]],[5,R[2394],E,E,N,[[["macro"],["v"]]]],[5,R[2395],E,E,N,[[[R[2396]],["v"]]]],[5,R[2397],E,E,N,[[["member"],["v"]]]],[5,R[2763],E,E,N,[[["meta"],["v"]]]],[5,R[2398],E,E,N,[[[R[2729]],["v"]]]],[5,R[2399],E,E,N,[[[R[2400]],["v"]]]],[5,R[2402],E,E,N,[[[R[2403]],["v"]]]],[5,R[2404],E,E,N,[[[R[2524]],["v"]]]],[5,R[2405],E,E,N,[[[R[2406]],["v"]]]],[5,"visit_pat",E,E,N,[[["pat"],["v"]]]],[5,R[2407],E,E,N,[[["patbox"],["v"]]]],[5,R[2408],E,E,N,[[[R[2736]],["v"]]]],[5,R[2409],E,E,N,[[["patlit"],["v"]]]],[5,R[2410],E,E,N,[[[R[2740]],["v"]]]],[5,R[3270],E,E,N,[[["pator"],["v"]]]],[5,R[2411],E,E,N,[[["patpath"],["v"]]]],[5,R[2412],E,E,N,[[[R[2738]],["v"]]]],[5,R[3271],E,E,N,[[[R[3272]],["v"]]]],[5,R[3273],E,E,N,[[["patrest"],["v"]]]],[5,R[2414],E,E,N,[[[R[2739]],["v"]]]],[5,R[2415],E,E,N,[[[R[2525]],["v"]]]],[5,R[2416],E,E,N,[[[R[2737]],["v"]]]],[5,R[2417],E,E,N,[[[R[2418]],["v"]]]],[5,R[3274],E,E,N,[[["pattype"],["v"]]]],[5,R[2421],E,E,N,[[["patwild"],["v"]]]],[5,R[2764],E,E,N,[[["path"],["v"]]]],[5,R[2422],E,E,N,[[[R[2423]],["v"]]]],[5,R[2424],E,E,N,[[[R[1012]],["v"]]]],[5,R[2425],E,E,N,[[[R[2426]],["v"]]]],[5,R[2427],E,E,N,[[[R[2428]],["v"]]]],[5,R[2429],E,E,N,[[[R[2430]],["v"]]]],[5,R[2431],E,E,N,[[["qself"],["v"]]]],[5,R[2432],E,E,N,[[[R[2433]],["v"]]]],[5,R[3275],E,E,N,[[[R[3286]],["v"]]]],[5,R[2434],E,E,N,[[[R[2526]],["v"]]]],[5,R[3276],E,E,N,[[[R[3279]],["v"]]]],[5,R[2767],E,E,N,[[["span"],["v"]]]],[5,R[2765],E,E,N,[[["stmt"],["v"]]]],[5,R[2435],E,E,N,[[[R[2527]],["v"]]]],[5,R[2436],E,E,N,[[[R[1006]],["v"]]]],[5,R[2437],E,E,N,[[[R[2528]],["v"]]]],[5,R[2438],E,E,N,[[[R[2439]],["v"]]]],[5,R[2440],E,E,N,[[[R[2441]],["v"]]]],[5,R[2442],E,E,N,[[[R[2443]],["v"]]]],[5,R[2444],E,E,N,[[[R[2445]],["v"]]]],[5,R[2766],E,E,N,[[["type"],["v"]]]],[5,R[2448],E,E,N,[[[R[2529]],["v"]]]],[5,R[2449],E,E,N,[[[R[2530]],["v"]]]],[5,R[2450],E,E,N,[[[R[2531]],["v"]]]],[5,R[2451],E,E,N,[[[R[2452]],["v"]]]],[5,R[2453],E,E,N,[[[R[2532]],["v"]]]],[5,R[2454],E,E,N,[[[R[2533]],["v"]]]],[5,R[2455],E,E,N,[[[R[2534]],["v"]]]],[5,R[2456],E,E,N,[[[R[2535]],["v"]]]],[5,R[2457],E,E,N,[[[R[2458]],["v"]]]],[5,R[2459],E,E,N,[[[R[2536]],["v"]]]],[5,R[2460],E,E,N,[[[R[2749]],["v"]]]],[5,R[2461],E,E,N,[[["typeptr"],["v"]]]],[5,R[2462],E,E,N,[[[R[2463]],["v"]]]],[5,R[2464],E,E,N,[[[R[2537]],["v"]]]],[5,R[2465],E,E,N,[[[R[2466]],["v"]]]],[5,R[2467],E,E,N,[[[R[2538]],["v"]]]],[5,R[2470],E,E,N,[[["unop"],["v"]]]],[5,R[2471],E,E,N,[[["useglob"],["v"]]]],[5,R[2472],E,E,N,[[[R[2745]],["v"]]]],[5,R[2473],E,E,N,[[["usename"],["v"]]]],[5,R[2474],E,E,N,[[["usepath"],["v"]]]],[5,R[2475],E,E,N,[[[R[2539]],["v"]]]],[5,R[2476],E,E,N,[[["usetree"],["v"]]]],[5,R[3277],E,E,N,[[[R[3289]],["v"]]]],[5,R[2477],E,E,N,[[["variant"],["v"]]]],[5,R[2478],E,E,N,[[[R[2730]],["v"]]]],[5,R[2479],E,E,N,[[[R[2540]],["v"]]]],[5,R[2480],E,E,N,[[[R[2481]],["v"]]]],[5,R[2482],E,E,N,[[[R[1004]],["v"]]]],[5,R[2483],E,E,N,[[[R[994]],["v"]]]],[5,R[2484],E,E,N,[[[R[1007]],["v"]]]],[8,"Visit",E,R[2243],N,N],[11,"visit_abi",E,E,296,[[["self"],["abi"]]]],[11,R[2244],E,E,296,[[["self"],[R[2245]]]]],[11,"visit_arm",E,E,296,[[["self"],["arm"]]]],[11,R[2250],E,E,296,[[["self"],[R[2487]]]]],[11,R[2251],E,E,296,[[["self"],[R[996]]]]],[11,R[2252],E,E,296,[[["self"],[R[2488]]]]],[11,R[2255],E,E,296,[[["self"],["binop"]]]],[11,R[2256],E,E,296,[[["self"],["binding"]]]],[11,R[2257],E,E,296,[[["self"],["block"]]]],[11,R[2258],E,E,296,[[["self"],[R[2259]]]]],[11,R[2260],E,E,296,[[["self"],[R[2489]]]]],[11,R[2261],E,E,296,[[["self"],[R[2490]]]]],[11,R[2759],E,E,296,[[["self"],["data"]]]],[11,R[2262],E,E,296,[[["self"],[R[2748]]]]],[11,R[2263],E,E,296,[[["self"],[R[2491]]]]],[11,R[2264],E,E,296,[[["self"],[R[2492]]]]],[11,R[2265],E,E,296,[[["self"],[R[993]]]]],[11,R[2760],E,E,296,[[["self"],["expr"]]]],[11,R[2266],E,E,296,[[["self"],[R[2493]]]]],[11,R[2267],E,E,296,[[["self"],[R[2494]]]]],[11,R[2268],E,E,296,[[["self"],[R[2269]]]]],[11,R[2270],E,E,296,[[["self"],[R[2495]]]]],[11,R[3269],E,E,296,[[["self"],[R[3278]]]]],[11,R[2271],E,E,296,[[["self"],[R[2496]]]]],[11,R[2272],E,E,296,[[["self"],[R[2497]]]]],[11,R[2273],E,E,296,[[["self"],["exprbox"]]]],[11,R[2274],E,E,296,[[["self"],[R[2498]]]]],[11,R[2275],E,E,296,[[["self"],[R[2731]]]]],[11,R[2276],E,E,296,[[["self"],[R[2732]]]]],[11,R[2277],E,E,296,[[["self"],[R[2278]]]]],[11,R[2279],E,E,296,[[["self"],[R[2280]]]]],[11,R[2281],E,E,296,[[["self"],[R[2499]]]]],[11,R[2282],E,E,296,[[["self"],[R[2283]]]]],[11,R[2284],E,E,296,[[["self"],[R[2500]]]]],[11,R[2285],E,E,296,[[["self"],["exprif"]]]],[11,R[2288],E,E,296,[[["self"],[R[2501]]]]],[11,R[2289],E,E,296,[[["self"],["exprlet"]]]],[11,R[2290],E,E,296,[[["self"],["exprlit"]]]],[11,R[2291],E,E,296,[[["self"],[R[2734]]]]],[11,R[2292],E,E,296,[[["self"],[R[2502]]]]],[11,R[2293],E,E,296,[[["self"],[R[2503]]]]],[11,R[2294],E,E,296,[[["self"],[R[2295]]]]],[11,R[2296],E,E,296,[[["self"],[R[2504]]]]],[11,R[2297],E,E,296,[[["self"],[R[2735]]]]],[11,R[2298],E,E,296,[[["self"],[R[2505]]]]],[11,R[2299],E,E,296,[[["self"],[R[2300]]]]],[11,R[2301],E,E,296,[[["self"],[R[2506]]]]],[11,R[2302],E,E,296,[[["self"],[R[2507]]]]],[11,R[2303],E,E,296,[[["self"],[R[2508]]]]],[11,R[2304],E,E,296,[[["self"],["exprtry"]]]],[11,R[2305],E,E,296,[[["self"],[R[2306]]]]],[11,R[2307],E,E,296,[[["self"],[R[2509]]]]],[11,R[2308],E,E,296,[[["self"],[R[2733]]]]],[11,R[2309],E,E,296,[[["self"],[R[2510]]]]],[11,R[2310],E,E,296,[[["self"],[R[2511]]]]],[11,R[2313],E,E,296,[[["self"],[R[2512]]]]],[11,R[2314],E,E,296,[[["self"],[R[2513]]]]],[11,R[2315],E,E,296,[[["self"],["field"]]]],[11,R[2316],E,E,296,[[["self"],[R[2741]]]]],[11,R[2317],E,E,296,[[["self"],[R[2514]]]]],[11,R[2318],E,E,296,[[["self"],["fields"]]]],[11,R[2319],E,E,296,[[["self"],[R[2320]]]]],[11,R[2321],E,E,296,[[["self"],[R[2322]]]]],[11,R[2761],E,E,296,[[["self"],["file"]]]],[11,R[2323],E,E,296,[[["self"],["fnarg"]]]],[11,R[2325],E,E,296,[[["self"],[R[2326]]]]],[11,R[2327],E,E,296,[[["self"],[R[2328]]]]],[11,R[2329],E,E,296,[[["self"],[R[2330]]]]],[11,R[2331],E,E,296,[[["self"],[R[2332]]]]],[11,R[2333],E,E,296,[[["self"],[R[2334]]]]],[11,R[2337],E,E,296,[[["self"],[R[2338]]]]],[11,R[2339],E,E,296,[[["self"],[R[2340]]]]],[11,R[2341],E,E,296,[[["self"],[R[2342]]]]],[11,R[2343],E,E,296,[[["self"],[R[2084]]]]],[11,R[2485],E,E,296,[[["self"],["ident"]]]],[11,R[2344],E,E,296,[[["self"],[R[2746]]]]],[11,R[2345],E,E,296,[[["self"],[R[2346]]]]],[11,R[2349],E,E,296,[[["self"],[R[2350]]]]],[11,R[2351],E,E,296,[[["self"],[R[2352]]]]],[11,R[2353],E,E,296,[[["self"],[R[2354]]]]],[11,R[2357],E,E,296,[[["self"],["index"]]]],[11,R[2762],E,E,296,[[["self"],["item"]]]],[11,R[2358],E,E,296,[[["self"],[R[2515]]]]],[11,R[2359],E,E,296,[[["self"],[R[2743]]]]],[11,R[2362],E,E,296,[[["self"],[R[2363]]]]],[11,R[2364],E,E,296,[[["self"],["itemfn"]]]],[11,R[2365],E,E,296,[[["self"],[R[2366]]]]],[11,R[2367],E,E,296,[[["self"],[R[2744]]]]],[11,R[2368],E,E,296,[[["self"],[R[2516]]]]],[11,R[2369],E,E,296,[[["self"],[R[2517]]]]],[11,R[2370],E,E,296,[[["self"],["itemmod"]]]],[11,R[2371],E,E,296,[[["self"],[R[2518]]]]],[11,R[2372],E,E,296,[[["self"],[R[2519]]]]],[11,R[2373],E,E,296,[[["self"],[R[2520]]]]],[11,R[2374],E,E,296,[[["self"],[R[2375]]]]],[11,R[2376],E,E,296,[[["self"],[R[2742]]]]],[11,R[2377],E,E,296,[[["self"],[R[2521]]]]],[11,R[2378],E,E,296,[[["self"],["itemuse"]]]],[11,R[2381],E,E,296,[[["self"],["label"]]]],[11,R[2382],E,E,296,[[["self"],[R[1001]]]]],[11,R[2383],E,E,296,[[["self"],[R[1005]]]]],[11,"visit_lit",E,E,296,[[["self"],["lit"]]]],[11,R[2384],E,E,296,[[["self"],["litbool"]]]],[11,R[2385],E,E,296,[[["self"],["litbyte"]]]],[11,R[2386],E,E,296,[[["self"],[R[2522]]]]],[11,R[2387],E,E,296,[[["self"],["litchar"]]]],[11,R[2388],E,E,296,[[["self"],[R[2747]]]]],[11,R[2389],E,E,296,[[["self"],["litint"]]]],[11,R[2390],E,E,296,[[["self"],["litstr"]]]],[11,R[2393],E,E,296,[[["self"],["local"]]]],[11,R[2394],E,E,296,[[["self"],["macro"]]]],[11,R[2395],E,E,296,[[["self"],[R[2396]]]]],[11,R[2397],E,E,296,[[["self"],["member"]]]],[11,R[2763],E,E,296,[[["self"],["meta"]]]],[11,R[2398],E,E,296,[[["self"],[R[2729]]]]],[11,R[2399],E,E,296,[[["self"],[R[2400]]]]],[11,R[2402],E,E,296,[[["self"],[R[2403]]]]],[11,R[2404],E,E,296,[[["self"],[R[2524]]]]],[11,R[2405],E,E,296,[[["self"],[R[2406]]]]],[11,"visit_pat",E,E,296,[[["self"],["pat"]]]],[11,R[2407],E,E,296,[[["self"],["patbox"]]]],[11,R[2408],E,E,296,[[["self"],[R[2736]]]]],[11,R[2409],E,E,296,[[["self"],["patlit"]]]],[11,R[2410],E,E,296,[[["self"],[R[2740]]]]],[11,R[3270],E,E,296,[[["self"],["pator"]]]],[11,R[2411],E,E,296,[[["self"],["patpath"]]]],[11,R[2412],E,E,296,[[["self"],[R[2738]]]]],[11,R[3271],E,E,296,[[["self"],[R[3272]]]]],[11,R[3273],E,E,296,[[["self"],["patrest"]]]],[11,R[2414],E,E,296,[[["self"],[R[2739]]]]],[11,R[2415],E,E,296,[[["self"],[R[2525]]]]],[11,R[2416],E,E,296,[[["self"],[R[2737]]]]],[11,R[2417],E,E,296,[[["self"],[R[2418]]]]],[11,R[3274],E,E,296,[[["self"],["pattype"]]]],[11,R[2421],E,E,296,[[["self"],["patwild"]]]],[11,R[2764],E,E,296,[[["self"],["path"]]]],[11,R[2422],E,E,296,[[["self"],[R[2423]]]]],[11,R[2424],E,E,296,[[["self"],[R[1012]]]]],[11,R[2425],E,E,296,[[["self"],[R[2426]]]]],[11,R[2427],E,E,296,[[["self"],[R[2428]]]]],[11,R[2429],E,E,296,[[["self"],[R[2430]]]]],[11,R[2431],E,E,296,[[["self"],["qself"]]]],[11,R[2432],E,E,296,[[["self"],[R[2433]]]]],[11,R[3275],E,E,296,[[["self"],[R[3286]]]]],[11,R[2434],E,E,296,[[["self"],[R[2526]]]]],[11,R[3276],E,E,296,[[["self"],[R[3279]]]]],[11,R[2767],E,E,296,[[["self"],["span"]]]],[11,R[2765],E,E,296,[[["self"],["stmt"]]]],[11,R[2435],E,E,296,[[["self"],[R[2527]]]]],[11,R[2436],E,E,296,[[["self"],[R[1006]]]]],[11,R[2437],E,E,296,[[["self"],[R[2528]]]]],[11,R[2438],E,E,296,[[["self"],[R[2439]]]]],[11,R[2440],E,E,296,[[["self"],[R[2441]]]]],[11,R[2442],E,E,296,[[["self"],[R[2443]]]]],[11,R[2444],E,E,296,[[["self"],[R[2445]]]]],[11,R[2766],E,E,296,[[["self"],["type"]]]],[11,R[2448],E,E,296,[[["self"],[R[2529]]]]],[11,R[2449],E,E,296,[[["self"],[R[2530]]]]],[11,R[2450],E,E,296,[[["self"],[R[2531]]]]],[11,R[2451],E,E,296,[[["self"],[R[2452]]]]],[11,R[2453],E,E,296,[[["self"],[R[2532]]]]],[11,R[2454],E,E,296,[[["self"],[R[2533]]]]],[11,R[2455],E,E,296,[[["self"],[R[2534]]]]],[11,R[2456],E,E,296,[[["self"],[R[2535]]]]],[11,R[2457],E,E,296,[[["self"],[R[2458]]]]],[11,R[2459],E,E,296,[[["self"],[R[2536]]]]],[11,R[2460],E,E,296,[[["self"],[R[2749]]]]],[11,R[2461],E,E,296,[[["self"],["typeptr"]]]],[11,R[2462],E,E,296,[[["self"],[R[2463]]]]],[11,R[2464],E,E,296,[[["self"],[R[2537]]]]],[11,R[2465],E,E,296,[[["self"],[R[2466]]]]],[11,R[2467],E,E,296,[[["self"],[R[2538]]]]],[11,R[2470],E,E,296,[[["self"],["unop"]]]],[11,R[2471],E,E,296,[[["self"],["useglob"]]]],[11,R[2472],E,E,296,[[["self"],[R[2745]]]]],[11,R[2473],E,E,296,[[["self"],["usename"]]]],[11,R[2474],E,E,296,[[["self"],["usepath"]]]],[11,R[2475],E,E,296,[[["self"],[R[2539]]]]],[11,R[2476],E,E,296,[[["self"],["usetree"]]]],[11,R[3277],E,E,296,[[["self"],[R[3289]]]]],[11,R[2477],E,E,296,[[["self"],["variant"]]]],[11,R[2478],E,E,296,[[["self"],[R[2730]]]]],[11,R[2479],E,E,296,[[["self"],[R[2540]]]]],[11,R[2480],E,E,296,[[["self"],[R[2481]]]]],[11,R[2482],E,E,296,[[["self"],[R[1004]]]]],[11,R[2483],E,E,296,[[["self"],[R[994]]]]],[11,R[2484],E,E,296,[[["self"],[R[1007]]]]],[0,"fold","syn",R[2541],N,N],[5,"fold_abi","syn::fold",E,N,[[["f"],["abi"]],["abi"]]],[5,R[2542],E,E,N,[[["f"],[R[2245]]],[R[2245]]]],[5,"fold_arm",E,E,N,[[["f"],["arm"]],["arm"]]],[5,R[2546],E,E,N,[[["f"],[R[2487]]],[R[2487]]]],[5,R[2547],E,E,N,[[["f"],[R[996]]],[R[996]]]],[5,R[2548],E,E,N,[[["f"],[R[2488]]],[R[2488]]]],[5,R[2550],E,E,N,[[["f"],["binop"]],["binop"]]],[5,R[2551],E,E,N,[[["f"],["binding"]],["binding"]]],[5,R[2768],E,E,N,[[["f"],["block"]],["block"]]],[5,R[2552],E,E,N,[[["f"],[R[2259]]],[R[2259]]]],[5,R[2553],E,E,N,[[["f"],[R[2489]]],[R[2489]]]],[5,R[2554],E,E,N,[[["f"],[R[2490]]],[R[2490]]]],[5,"fold_data",E,E,N,[[["f"],["data"]],["data"]]],[5,R[2555],E,E,N,[[["f"],[R[2748]]],[R[2748]]]],[5,R[2556],E,E,N,[[["f"],[R[2491]]],[R[2491]]]],[5,R[2557],E,E,N,[[["f"],[R[2492]]],[R[2492]]]],[5,R[2558],E,E,N,[[["f"],[R[993]]],[R[993]]]],[5,"fold_expr",E,E,N,[[["f"],["expr"]],["expr"]]],[5,R[2559],E,E,N,[[["f"],[R[2493]]],[R[2493]]]],[5,R[2560],E,E,N,[[["f"],[R[2494]]],[R[2494]]]],[5,R[2561],E,E,N,[[["f"],[R[2269]]],[R[2269]]]],[5,R[2562],E,E,N,[[["f"],[R[2495]]],[R[2495]]]],[5,R[3280],E,E,N,[[["f"],[R[3278]]],[R[3278]]]],[5,R[2563],E,E,N,[[["f"],[R[2496]]],[R[2496]]]],[5,R[2564],E,E,N,[[["f"],[R[2497]]],[R[2497]]]],[5,R[2565],E,E,N,[[["f"],["exprbox"]],["exprbox"]]],[5,R[2566],E,E,N,[[["f"],[R[2498]]],[R[2498]]]],[5,R[2567],E,E,N,[[["f"],[R[2731]]],[R[2731]]]],[5,R[2568],E,E,N,[[["f"],[R[2732]]],[R[2732]]]],[5,R[2569],E,E,N,[[["f"],[R[2278]]],[R[2278]]]],[5,R[2570],E,E,N,[[["f"],[R[2280]]],[R[2280]]]],[5,R[2571],E,E,N,[[["f"],[R[2499]]],[R[2499]]]],[5,R[2572],E,E,N,[[["f"],[R[2283]]],[R[2283]]]],[5,R[2573],E,E,N,[[["f"],[R[2500]]],[R[2500]]]],[5,R[2574],E,E,N,[[["f"],["exprif"]],["exprif"]]],[5,R[2576],E,E,N,[[["f"],[R[2501]]],[R[2501]]]],[5,R[2577],E,E,N,[[["f"],["exprlet"]],["exprlet"]]],[5,R[2578],E,E,N,[[["f"],["exprlit"]],["exprlit"]]],[5,R[2579],E,E,N,[[["f"],[R[2734]]],[R[2734]]]],[5,R[2580],E,E,N,[[["f"],[R[2502]]],[R[2502]]]],[5,R[2581],E,E,N,[[["f"],[R[2503]]],[R[2503]]]],[5,R[2582],E,E,N,[[["f"],[R[2295]]],[R[2295]]]],[5,R[2583],E,E,N,[[["f"],[R[2504]]],[R[2504]]]],[5,R[2584],E,E,N,[[["f"],[R[2735]]],[R[2735]]]],[5,R[2585],E,E,N,[[["f"],[R[2505]]],[R[2505]]]],[5,R[2586],E,E,N,[[["f"],[R[2300]]],[R[2300]]]],[5,R[2587],E,E,N,[[["f"],[R[2506]]],[R[2506]]]],[5,R[2588],E,E,N,[[["f"],[R[2507]]],[R[2507]]]],[5,R[2589],E,E,N,[[["f"],[R[2508]]],[R[2508]]]],[5,R[2590],E,E,N,[[["f"],["exprtry"]],["exprtry"]]],[5,R[2591],E,E,N,[[["f"],[R[2306]]],[R[2306]]]],[5,R[2592],E,E,N,[[["f"],[R[2509]]],[R[2509]]]],[5,R[2593],E,E,N,[[["f"],[R[2733]]],[R[2733]]]],[5,R[2594],E,E,N,[[["f"],[R[2510]]],[R[2510]]]],[5,R[2595],E,E,N,[[["f"],[R[2511]]],[R[2511]]]],[5,R[2597],E,E,N,[[["f"],[R[2512]]],[R[2512]]]],[5,R[2598],E,E,N,[[["f"],[R[2513]]],[R[2513]]]],[5,R[2769],E,E,N,[[["f"],["field"]],["field"]]],[5,R[2599],E,E,N,[[["f"],[R[2741]]],[R[2741]]]],[5,R[2600],E,E,N,[[["f"],[R[2514]]],[R[2514]]]],[5,R[2601],E,E,N,[[["f"],["fields"]],["fields"]]],[5,R[2602],E,E,N,[[["f"],[R[2320]]],[R[2320]]]],[5,R[2603],E,E,N,[[["f"],[R[2322]]],[R[2322]]]],[5,"fold_file",E,E,N,[[["f"],["file"]],["file"]]],[5,R[2604],E,E,N,[[["f"],["fnarg"]],["fnarg"]]],[5,R[2606],E,E,N,[[["f"],[R[2326]]],[R[2326]]]],[5,R[2607],E,E,N,[[["f"],[R[2328]]],[R[2328]]]],[5,R[2608],E,E,N,[[["f"],[R[2330]]],[R[2330]]]],[5,R[2609],E,E,N,[[["f"],[R[2332]]],[R[2332]]]],[5,R[2610],E,E,N,[[["f"],[R[2334]]],[R[2334]]]],[5,R[2612],E,E,N,[[["f"],[R[2338]]],[R[2338]]]],[5,R[2613],E,E,N,[[["f"],[R[2340]]],[R[2340]]]],[5,R[2614],E,E,N,[[["f"],[R[2342]]],[R[2342]]]],[5,R[2615],E,E,N,[[["f"],[R[2084]]],[R[2084]]]],[5,R[2776],E,E,N,[[["f"],["ident"]],["ident"]]],[5,R[2616],E,E,N,[[["f"],[R[2746]]],[R[2746]]]],[5,R[2617],E,E,N,[[["f"],[R[2346]]],[R[2346]]]],[5,R[2619],E,E,N,[[["f"],[R[2350]]],[R[2350]]]],[5,R[2620],E,E,N,[[["f"],[R[2352]]],[R[2352]]]],[5,R[2621],E,E,N,[[["f"],[R[2354]]],[R[2354]]]],[5,R[2770],E,E,N,[[["f"],["index"]],["index"]]],[5,"fold_item",E,E,N,[[["f"],["item"]],["item"]]],[5,R[2623],E,E,N,[[["f"],[R[2515]]],[R[2515]]]],[5,R[2624],E,E,N,[[["f"],[R[2743]]],[R[2743]]]],[5,R[2626],E,E,N,[[["f"],[R[2363]]],[R[2363]]]],[5,R[2627],E,E,N,[[["f"],["itemfn"]],["itemfn"]]],[5,R[2628],E,E,N,[[["f"],[R[2366]]],[R[2366]]]],[5,R[2629],E,E,N,[[["f"],[R[2744]]],[R[2744]]]],[5,R[2630],E,E,N,[[["f"],[R[2516]]],[R[2516]]]],[5,R[2631],E,E,N,[[["f"],[R[2517]]],[R[2517]]]],[5,R[2632],E,E,N,[[["f"],["itemmod"]],["itemmod"]]],[5,R[2633],E,E,N,[[["f"],[R[2518]]],[R[2518]]]],[5,R[2634],E,E,N,[[["f"],[R[2519]]],[R[2519]]]],[5,R[2635],E,E,N,[[["f"],[R[2520]]],[R[2520]]]],[5,R[2636],E,E,N,[[["f"],[R[2375]]],[R[2375]]]],[5,R[2637],E,E,N,[[["f"],[R[2742]]],[R[2742]]]],[5,R[2638],E,E,N,[[["f"],[R[2521]]],[R[2521]]]],[5,R[2639],E,E,N,[[["f"],["itemuse"]],["itemuse"]]],[5,R[2771],E,E,N,[[["f"],["label"]],["label"]]],[5,R[2641],E,E,N,[[["f"],[R[1001]]],[R[1001]]]],[5,R[2642],E,E,N,[[["f"],[R[1005]]],[R[1005]]]],[5,"fold_lit",E,E,N,[[["f"],["lit"]],["lit"]]],[5,R[2643],E,E,N,[[["f"],["litbool"]],["litbool"]]],[5,R[2644],E,E,N,[[["f"],["litbyte"]],["litbyte"]]],[5,R[2645],E,E,N,[[["f"],[R[2522]]],[R[2522]]]],[5,R[2646],E,E,N,[[["f"],["litchar"]],["litchar"]]],[5,R[2647],E,E,N,[[["f"],[R[2747]]],[R[2747]]]],[5,R[2648],E,E,N,[[["f"],["litint"]],["litint"]]],[5,R[2649],E,E,N,[[["f"],["litstr"]],["litstr"]]],[5,R[2772],E,E,N,[[["f"],["local"]],["local"]]],[5,R[2773],E,E,N,[[["f"],["macro"]],["macro"]]],[5,R[2651],E,E,N,[[["f"],[R[2396]]],[R[2396]]]],[5,R[2652],E,E,N,[[["f"],["member"]],["member"]]],[5,"fold_meta",E,E,N,[[["f"],["meta"]],["meta"]]],[5,R[2653],E,E,N,[[["f"],[R[2729]]],[R[2729]]]],[5,R[2654],E,E,N,[[["f"],[R[2400]]],[R[2400]]]],[5,R[2656],E,E,N,[[["f"],[R[2403]]],[R[2403]]]],[5,R[2657],E,E,N,[[["f"],[R[2524]]],[R[2524]]]],[5,R[2658],E,E,N,[[["f"],[R[2406]]],[R[2406]]]],[5,"fold_pat",E,E,N,[[["f"],["pat"]],["pat"]]],[5,R[2659],E,E,N,[[["f"],["patbox"]],["patbox"]]],[5,R[2660],E,E,N,[[["f"],[R[2736]]],[R[2736]]]],[5,R[2661],E,E,N,[[["f"],["patlit"]],["patlit"]]],[5,R[2662],E,E,N,[[["f"],[R[2740]]],[R[2740]]]],[5,R[3281],E,E,N,[[["f"],["pator"]],["pator"]]],[5,R[2663],E,E,N,[[["f"],["patpath"]],["patpath"]]],[5,R[2664],E,E,N,[[["f"],[R[2738]]],[R[2738]]]],[5,R[3282],E,E,N,[[["f"],[R[3272]]],[R[3272]]]],[5,R[3283],E,E,N,[[["f"],["patrest"]],["patrest"]]],[5,R[2666],E,E,N,[[["f"],[R[2739]]],[R[2739]]]],[5,R[2667],E,E,N,[[["f"],[R[2525]]],[R[2525]]]],[5,R[2668],E,E,N,[[["f"],[R[2737]]],[R[2737]]]],[5,R[2669],E,E,N,[[["f"],[R[2418]]],[R[2418]]]],[5,R[3284],E,E,N,[[["f"],["pattype"]],["pattype"]]],[5,R[2671],E,E,N,[[["f"],["patwild"]],["patwild"]]],[5,"fold_path",E,E,N,[[["f"],["path"]],["path"]]],[5,R[2672],E,E,N,[[["f"],[R[2423]]],[R[2423]]]],[5,R[2673],E,E,N,[[["f"],[R[1012]]],[R[1012]]]],[5,R[2674],E,E,N,[[["f"],[R[2426]]],[R[2426]]]],[5,R[2675],E,E,N,[[["f"],[R[2428]]],[R[2428]]]],[5,R[2676],E,E,N,[[["f"],[R[2430]]],[R[2430]]]],[5,R[2774],E,E,N,[[["f"],["qself"]],["qself"]]],[5,R[2677],E,E,N,[[["f"],[R[2433]]],[R[2433]]]],[5,R[3285],E,E,N,[[["f"],[R[3286]]],[R[3286]]]],[5,R[2678],E,E,N,[[["f"],[R[2526]]],[R[2526]]]],[5,R[3287],E,E,N,[[["f"],[R[3279]]],[R[3279]]]],[5,"fold_span",E,E,N,[[["f"],["span"]],["span"]]],[5,"fold_stmt",E,E,N,[[["f"],["stmt"]],["stmt"]]],[5,R[2679],E,E,N,[[["f"],[R[2527]]],[R[2527]]]],[5,R[2680],E,E,N,[[["f"],[R[1006]]],[R[1006]]]],[5,R[2681],E,E,N,[[["f"],[R[2528]]],[R[2528]]]],[5,R[2682],E,E,N,[[["f"],[R[2439]]],[R[2439]]]],[5,R[2683],E,E,N,[[["f"],[R[2441]]],[R[2441]]]],[5,R[2684],E,E,N,[[["f"],[R[2443]]],[R[2443]]]],[5,R[2685],E,E,N,[[["f"],[R[2445]]],[R[2445]]]],[5,"fold_type",E,E,N,[[["f"],["type"]],["type"]]],[5,R[2687],E,E,N,[[["f"],[R[2529]]],[R[2529]]]],[5,R[2688],E,E,N,[[["f"],[R[2530]]],[R[2530]]]],[5,R[2689],E,E,N,[[["f"],[R[2531]]],[R[2531]]]],[5,R[2690],E,E,N,[[["f"],[R[2452]]],[R[2452]]]],[5,R[2691],E,E,N,[[["f"],[R[2532]]],[R[2532]]]],[5,R[2692],E,E,N,[[["f"],[R[2533]]],[R[2533]]]],[5,R[2693],E,E,N,[[["f"],[R[2534]]],[R[2534]]]],[5,R[2694],E,E,N,[[["f"],[R[2535]]],[R[2535]]]],[5,R[2695],E,E,N,[[["f"],[R[2458]]],[R[2458]]]],[5,R[2696],E,E,N,[[["f"],[R[2536]]],[R[2536]]]],[5,R[2697],E,E,N,[[["f"],[R[2749]]],[R[2749]]]],[5,R[2698],E,E,N,[[["f"],["typeptr"]],["typeptr"]]],[5,R[2699],E,E,N,[[["f"],[R[2463]]],[R[2463]]]],[5,R[2700],E,E,N,[[["f"],[R[2537]]],[R[2537]]]],[5,R[2701],E,E,N,[[["f"],[R[2466]]],[R[2466]]]],[5,R[2702],E,E,N,[[["f"],[R[2538]]],[R[2538]]]],[5,R[2775],E,E,N,[[["f"],["unop"]],["unop"]]],[5,R[2704],E,E,N,[[["f"],["useglob"]],["useglob"]]],[5,R[2705],E,E,N,[[["f"],[R[2745]]],[R[2745]]]],[5,R[2706],E,E,N,[[["f"],["usename"]],["usename"]]],[5,R[2707],E,E,N,[[["f"],["usepath"]],["usepath"]]],[5,R[2708],E,E,N,[[["f"],[R[2539]]],[R[2539]]]],[5,R[2709],E,E,N,[[["f"],["usetree"]],["usetree"]]],[5,R[3288],E,E,N,[[["f"],[R[3289]]],[R[3289]]]],[5,R[2710],E,E,N,[[["f"],["variant"]],["variant"]]],[5,R[2711],E,E,N,[[["f"],[R[2730]]],[R[2730]]]],[5,R[2712],E,E,N,[[["f"],[R[2540]]],[R[2540]]]],[5,R[2713],E,E,N,[[["f"],[R[2481]]],[R[2481]]]],[5,R[2714],E,E,N,[[["f"],[R[1004]]],[R[1004]]]],[5,R[2715],E,E,N,[[["f"],[R[994]]],[R[994]]]],[5,R[2716],E,E,N,[[["f"],[R[1007]]],[R[1007]]]],[8,"Fold",E,R[2541],N,N],[11,"fold_abi",E,E,297,[[["self"],["abi"]],["abi"]]],[11,R[2542],E,E,297,[[["self"],[R[2245]]],[R[2245]]]],[11,"fold_arm",E,E,297,[[["self"],["arm"]],["arm"]]],[11,R[2546],E,E,297,[[["self"],[R[2487]]],[R[2487]]]],[11,R[2547],E,E,297,[[["self"],[R[996]]],[R[996]]]],[11,R[2548],E,E,297,[[["self"],[R[2488]]],[R[2488]]]],[11,R[2550],E,E,297,[[["self"],["binop"]],["binop"]]],[11,R[2551],E,E,297,[[["self"],["binding"]],["binding"]]],[11,R[2768],E,E,297,[[["self"],["block"]],["block"]]],[11,R[2552],E,E,297,[[["self"],[R[2259]]],[R[2259]]]],[11,R[2553],E,E,297,[[["self"],[R[2489]]],[R[2489]]]],[11,R[2554],E,E,297,[[["self"],[R[2490]]],[R[2490]]]],[11,"fold_data",E,E,297,[[["self"],["data"]],["data"]]],[11,R[2555],E,E,297,[[["self"],[R[2748]]],[R[2748]]]],[11,R[2556],E,E,297,[[["self"],[R[2491]]],[R[2491]]]],[11,R[2557],E,E,297,[[["self"],[R[2492]]],[R[2492]]]],[11,R[2558],E,E,297,[[["self"],[R[993]]],[R[993]]]],[11,"fold_expr",E,E,297,[[["self"],["expr"]],["expr"]]],[11,R[2559],E,E,297,[[["self"],[R[2493]]],[R[2493]]]],[11,R[2560],E,E,297,[[["self"],[R[2494]]],[R[2494]]]],[11,R[2561],E,E,297,[[["self"],[R[2269]]],[R[2269]]]],[11,R[2562],E,E,297,[[["self"],[R[2495]]],[R[2495]]]],[11,R[3280],E,E,297,[[["self"],[R[3278]]],[R[3278]]]],[11,R[2563],E,E,297,[[["self"],[R[2496]]],[R[2496]]]],[11,R[2564],E,E,297,[[["self"],[R[2497]]],[R[2497]]]],[11,R[2565],E,E,297,[[["self"],["exprbox"]],["exprbox"]]],[11,R[2566],E,E,297,[[["self"],[R[2498]]],[R[2498]]]],[11,R[2567],E,E,297,[[["self"],[R[2731]]],[R[2731]]]],[11,R[2568],E,E,297,[[["self"],[R[2732]]],[R[2732]]]],[11,R[2569],E,E,297,[[["self"],[R[2278]]],[R[2278]]]],[11,R[2570],E,E,297,[[["self"],[R[2280]]],[R[2280]]]],[11,R[2571],E,E,297,[[["self"],[R[2499]]],[R[2499]]]],[11,R[2572],E,E,297,[[["self"],[R[2283]]],[R[2283]]]],[11,R[2573],E,E,297,[[["self"],[R[2500]]],[R[2500]]]],[11,R[2574],E,E,297,[[["self"],["exprif"]],["exprif"]]],[11,R[2576],E,E,297,[[["self"],[R[2501]]],[R[2501]]]],[11,R[2577],E,E,297,[[["self"],["exprlet"]],["exprlet"]]],[11,R[2578],E,E,297,[[["self"],["exprlit"]],["exprlit"]]],[11,R[2579],E,E,297,[[["self"],[R[2734]]],[R[2734]]]],[11,R[2580],E,E,297,[[["self"],[R[2502]]],[R[2502]]]],[11,R[2581],E,E,297,[[["self"],[R[2503]]],[R[2503]]]],[11,R[2582],E,E,297,[[["self"],[R[2295]]],[R[2295]]]],[11,R[2583],E,E,297,[[["self"],[R[2504]]],[R[2504]]]],[11,R[2584],E,E,297,[[["self"],[R[2735]]],[R[2735]]]],[11,R[2585],E,E,297,[[["self"],[R[2505]]],[R[2505]]]],[11,R[2586],E,E,297,[[["self"],[R[2300]]],[R[2300]]]],[11,R[2587],E,E,297,[[["self"],[R[2506]]],[R[2506]]]],[11,R[2588],E,E,297,[[["self"],[R[2507]]],[R[2507]]]],[11,R[2589],E,E,297,[[["self"],[R[2508]]],[R[2508]]]],[11,R[2590],E,E,297,[[["self"],["exprtry"]],["exprtry"]]],[11,R[2591],E,E,297,[[["self"],[R[2306]]],[R[2306]]]],[11,R[2592],E,E,297,[[["self"],[R[2509]]],[R[2509]]]],[11,R[2593],E,E,297,[[["self"],[R[2733]]],[R[2733]]]],[11,R[2594],E,E,297,[[["self"],[R[2510]]],[R[2510]]]],[11,R[2595],E,E,297,[[["self"],[R[2511]]],[R[2511]]]],[11,R[2597],E,E,297,[[["self"],[R[2512]]],[R[2512]]]],[11,R[2598],E,E,297,[[["self"],[R[2513]]],[R[2513]]]],[11,R[2769],E,E,297,[[["self"],["field"]],["field"]]],[11,R[2599],E,E,297,[[["self"],[R[2741]]],[R[2741]]]],[11,R[2600],E,E,297,[[["self"],[R[2514]]],[R[2514]]]],[11,R[2601],E,E,297,[[["self"],["fields"]],["fields"]]],[11,R[2602],E,E,297,[[["self"],[R[2320]]],[R[2320]]]],[11,R[2603],E,E,297,[[["self"],[R[2322]]],[R[2322]]]],[11,"fold_file",E,E,297,[[["self"],["file"]],["file"]]],[11,R[2604],E,E,297,[[["self"],["fnarg"]],["fnarg"]]],[11,R[2606],E,E,297,[[["self"],[R[2326]]],[R[2326]]]],[11,R[2607],E,E,297,[[["self"],[R[2328]]],[R[2328]]]],[11,R[2608],E,E,297,[[["self"],[R[2330]]],[R[2330]]]],[11,R[2609],E,E,297,[[["self"],[R[2332]]],[R[2332]]]],[11,R[2610],E,E,297,[[["self"],[R[2334]]],[R[2334]]]],[11,R[2612],E,E,297,[[["self"],[R[2338]]],[R[2338]]]],[11,R[2613],E,E,297,[[["self"],[R[2340]]],[R[2340]]]],[11,R[2614],E,E,297,[[["self"],[R[2342]]],[R[2342]]]],[11,R[2615],E,E,297,[[["self"],[R[2084]]],[R[2084]]]],[11,R[2776],E,E,297,[[["self"],["ident"]],["ident"]]],[11,R[2616],E,E,297,[[["self"],[R[2746]]],[R[2746]]]],[11,R[2617],E,E,297,[[["self"],[R[2346]]],[R[2346]]]],[11,R[2619],E,E,297,[[["self"],[R[2350]]],[R[2350]]]],[11,R[2620],E,E,297,[[["self"],[R[2352]]],[R[2352]]]],[11,R[2621],E,E,297,[[["self"],[R[2354]]],[R[2354]]]],[11,R[2770],E,E,297,[[["self"],["index"]],["index"]]],[11,"fold_item",E,E,297,[[["self"],["item"]],["item"]]],[11,R[2623],E,E,297,[[["self"],[R[2515]]],[R[2515]]]],[11,R[2624],E,E,297,[[["self"],[R[2743]]],[R[2743]]]],[11,R[2626],E,E,297,[[["self"],[R[2363]]],[R[2363]]]],[11,R[2627],E,E,297,[[["self"],["itemfn"]],["itemfn"]]],[11,R[2628],E,E,297,[[["self"],[R[2366]]],[R[2366]]]],[11,R[2629],E,E,297,[[["self"],[R[2744]]],[R[2744]]]],[11,R[2630],E,E,297,[[["self"],[R[2516]]],[R[2516]]]],[11,R[2631],E,E,297,[[["self"],[R[2517]]],[R[2517]]]],[11,R[2632],E,E,297,[[["self"],["itemmod"]],["itemmod"]]],[11,R[2633],E,E,297,[[["self"],[R[2518]]],[R[2518]]]],[11,R[2634],E,E,297,[[["self"],[R[2519]]],[R[2519]]]],[11,R[2635],E,E,297,[[["self"],[R[2520]]],[R[2520]]]],[11,R[2636],E,E,297,[[["self"],[R[2375]]],[R[2375]]]],[11,R[2637],E,E,297,[[["self"],[R[2742]]],[R[2742]]]],[11,R[2638],E,E,297,[[["self"],[R[2521]]],[R[2521]]]],[11,R[2639],E,E,297,[[["self"],["itemuse"]],["itemuse"]]],[11,R[2771],E,E,297,[[["self"],["label"]],["label"]]],[11,R[2641],E,E,297,[[["self"],[R[1001]]],[R[1001]]]],[11,R[2642],E,E,297,[[["self"],[R[1005]]],[R[1005]]]],[11,"fold_lit",E,E,297,[[["self"],["lit"]],["lit"]]],[11,R[2643],E,E,297,[[["self"],["litbool"]],["litbool"]]],[11,R[2644],E,E,297,[[["self"],["litbyte"]],["litbyte"]]],[11,R[2645],E,E,297,[[["self"],[R[2522]]],[R[2522]]]],[11,R[2646],E,E,297,[[["self"],["litchar"]],["litchar"]]],[11,R[2647],E,E,297,[[["self"],[R[2747]]],[R[2747]]]],[11,R[2648],E,E,297,[[["self"],["litint"]],["litint"]]],[11,R[2649],E,E,297,[[["self"],["litstr"]],["litstr"]]],[11,R[2772],E,E,297,[[["self"],["local"]],["local"]]],[11,R[2773],E,E,297,[[["self"],["macro"]],["macro"]]],[11,R[2651],E,E,297,[[["self"],[R[2396]]],[R[2396]]]],[11,R[2652],E,E,297,[[["self"],["member"]],["member"]]],[11,"fold_meta",E,E,297,[[["self"],["meta"]],["meta"]]],[11,R[2653],E,E,297,[[["self"],[R[2729]]],[R[2729]]]],[11,R[2654],E,E,297,[[["self"],[R[2400]]],[R[2400]]]],[11,R[2656],E,E,297,[[["self"],[R[2403]]],[R[2403]]]],[11,R[2657],E,E,297,[[["self"],[R[2524]]],[R[2524]]]],[11,R[2658],E,E,297,[[["self"],[R[2406]]],[R[2406]]]],[11,"fold_pat",E,E,297,[[["self"],["pat"]],["pat"]]],[11,R[2659],E,E,297,[[["self"],["patbox"]],["patbox"]]],[11,R[2660],E,E,297,[[["self"],[R[2736]]],[R[2736]]]],[11,R[2661],E,E,297,[[["self"],["patlit"]],["patlit"]]],[11,R[2662],E,E,297,[[["self"],[R[2740]]],[R[2740]]]],[11,R[3281],E,E,297,[[["self"],["pator"]],["pator"]]],[11,R[2663],E,E,297,[[["self"],["patpath"]],["patpath"]]],[11,R[2664],E,E,297,[[["self"],[R[2738]]],[R[2738]]]],[11,R[3282],E,E,297,[[["self"],[R[3272]]],[R[3272]]]],[11,R[3283],E,E,297,[[["self"],["patrest"]],["patrest"]]],[11,R[2666],E,E,297,[[["self"],[R[2739]]],[R[2739]]]],[11,R[2667],E,E,297,[[["self"],[R[2525]]],[R[2525]]]],[11,R[2668],E,E,297,[[["self"],[R[2737]]],[R[2737]]]],[11,R[2669],E,E,297,[[["self"],[R[2418]]],[R[2418]]]],[11,R[3284],E,E,297,[[["self"],["pattype"]],["pattype"]]],[11,R[2671],E,E,297,[[["self"],["patwild"]],["patwild"]]],[11,"fold_path",E,E,297,[[["self"],["path"]],["path"]]],[11,R[2672],E,E,297,[[["self"],[R[2423]]],[R[2423]]]],[11,R[2673],E,E,297,[[["self"],[R[1012]]],[R[1012]]]],[11,R[2674],E,E,297,[[["self"],[R[2426]]],[R[2426]]]],[11,R[2675],E,E,297,[[["self"],[R[2428]]],[R[2428]]]],[11,R[2676],E,E,297,[[["self"],[R[2430]]],[R[2430]]]],[11,R[2774],E,E,297,[[["self"],["qself"]],["qself"]]],[11,R[2677],E,E,297,[[["self"],[R[2433]]],[R[2433]]]],[11,R[3285],E,E,297,[[["self"],[R[3286]]],[R[3286]]]],[11,R[2678],E,E,297,[[["self"],[R[2526]]],[R[2526]]]],[11,R[3287],E,E,297,[[["self"],[R[3279]]],[R[3279]]]],[11,"fold_span",E,E,297,[[["self"],["span"]],["span"]]],[11,"fold_stmt",E,E,297,[[["self"],["stmt"]],["stmt"]]],[11,R[2679],E,E,297,[[["self"],[R[2527]]],[R[2527]]]],[11,R[2680],E,E,297,[[["self"],[R[1006]]],[R[1006]]]],[11,R[2681],E,E,297,[[["self"],[R[2528]]],[R[2528]]]],[11,R[2682],E,E,297,[[["self"],[R[2439]]],[R[2439]]]],[11,R[2683],E,E,297,[[["self"],[R[2441]]],[R[2441]]]],[11,R[2684],E,E,297,[[["self"],[R[2443]]],[R[2443]]]],[11,R[2685],E,E,297,[[["self"],[R[2445]]],[R[2445]]]],[11,"fold_type",E,E,297,[[["self"],["type"]],["type"]]],[11,R[2687],E,E,297,[[["self"],[R[2529]]],[R[2529]]]],[11,R[2688],E,E,297,[[["self"],[R[2530]]],[R[2530]]]],[11,R[2689],E,E,297,[[["self"],[R[2531]]],[R[2531]]]],[11,R[2690],E,E,297,[[["self"],[R[2452]]],[R[2452]]]],[11,R[2691],E,E,297,[[["self"],[R[2532]]],[R[2532]]]],[11,R[2692],E,E,297,[[["self"],[R[2533]]],[R[2533]]]],[11,R[2693],E,E,297,[[["self"],[R[2534]]],[R[2534]]]],[11,R[2694],E,E,297,[[["self"],[R[2535]]],[R[2535]]]],[11,R[2695],E,E,297,[[["self"],[R[2458]]],[R[2458]]]],[11,R[2696],E,E,297,[[["self"],[R[2536]]],[R[2536]]]],[11,R[2697],E,E,297,[[["self"],[R[2749]]],[R[2749]]]],[11,R[2698],E,E,297,[[["self"],["typeptr"]],["typeptr"]]],[11,R[2699],E,E,297,[[["self"],[R[2463]]],[R[2463]]]],[11,R[2700],E,E,297,[[["self"],[R[2537]]],[R[2537]]]],[11,R[2701],E,E,297,[[["self"],[R[2466]]],[R[2466]]]],[11,R[2702],E,E,297,[[["self"],[R[2538]]],[R[2538]]]],[11,R[2775],E,E,297,[[["self"],["unop"]],["unop"]]],[11,R[2704],E,E,297,[[["self"],["useglob"]],["useglob"]]],[11,R[2705],E,E,297,[[["self"],[R[2745]]],[R[2745]]]],[11,R[2706],E,E,297,[[["self"],["usename"]],["usename"]]],[11,R[2707],E,E,297,[[["self"],["usepath"]],["usepath"]]],[11,R[2708],E,E,297,[[["self"],[R[2539]]],[R[2539]]]],[11,R[2709],E,E,297,[[["self"],["usetree"]],["usetree"]]],[11,R[3288],E,E,297,[[["self"],[R[3289]]],[R[3289]]]],[11,R[2710],E,E,297,[[["self"],["variant"]],["variant"]]],[11,R[2711],E,E,297,[[["self"],[R[2730]]],[R[2730]]]],[11,R[2712],E,E,297,[[["self"],[R[2540]]],[R[2540]]]],[11,R[2713],E,E,297,[[["self"],[R[2481]]],[R[2481]]]],[11,R[2714],E,E,297,[[["self"],[R[1004]]],[R[1004]]]],[11,R[2715],E,E,297,[[["self"],[R[994]]],[R[994]]]],[11,R[2716],E,E,297,[[["self"],[R[1007]]],[R[1007]]]],[0,"parse","syn","Parsing interface for parsing a token stream into a syntax…",N,N],[3,"Error",R[1018],R[2717],N,N],[3,"Lookahead1",E,"Support for checking the next token in a stream to decide…",N,N],[3,R[2842],E,"Cursor position within a buffered token stream.",N,N],[3,"StepCursor",E,"Cursor state associated with speculative parsing.",N,N],[3,"Nothing",E,"An empty syntax tree node that consumes no tokens when…",N,N],[0,"discouraged",E,"Extensions to the parsing API with niche applicability.",N,N],[8,R[2841],"syn::parse::discouraged","Extensions to the `ParseStream` API to support speculative…",N,N],[10,"advance_to",E,"Advance this parse stream to the position of a forked…",298,[[["self"]]]],[6,"Result",R[1018],R[2725],N,N],[6,"ParseStream",E,"Input to a Syn parser function.",N,N],[8,"Peek",E,"Types that can be parsed by looking at just one token.",N,N],[8,"Parse",E,"Parsing interface implemented by all types that can be…",N,N],[10,"parse",E,E,299,[[[R[2233]]],[R[3]]]],[8,"Parser",E,"Parser that can parse Rust tokens into a particular syntax…",N,N],[16,"Output",E,E,300,N],[10,"parse2",E,R[2718],300,[[[R[768]]],[R[3]]]],[11,"parse",E,R[2719],300,[[[R[768]]],[R[3]]]],[11,R[4635],E,R[2720],300,[[["str"]],[R[3]]]],[11,"error",E,R[2724],301,[[["display"]],["error"]]],[11,"parse",E,"Parses a syntax tree node of type `T`, advancing the…",302,[[["self"]],[["parse"],[R[3]]]]],[11,"call",E,"Calls the given parser function to parse a syntax tree…",302,[[["self"]],[R[3]]]],[11,"peek",E,R[2777],302,[[["self"],["peek"]],["bool"]]],[11,"peek2",E,"Looks at the second-next token in the parse stream.",302,[[["self"],["peek"]],["bool"]]],[11,"peek3",E,"Looks at the third-next token in the parse stream.",302,[[["self"],["peek"]],["bool"]]],[11,R[2721],E,R[2722],302,[[["self"]],[[R[3],[R[2723]]],[R[2723]]]]],[11,R[25],E,"Returns whether there are tokens remaining in this stream.",302,[[["self"]],["bool"]]],[11,"lookahead1",E,"Constructs a helper for peeking at the next token in this…",302,[[["self"]],["lookahead1"]]],[11,"fork",E,"Forks a parse stream so that parsing tokens out of either…",302,[[["self"]],["self"]]],[11,"error",E,R[2724],302,[[["self"],["display"]],["error"]]],[11,"step",E,"Speculatively parses tokens from this parse stream,…",302,[[["self"],["f"]],[R[3]]]],[11,"cursor",E,"Provides low-level access to the token representation…",302,[[["self"]],["cursor"]]],[11,"new","syn","Usually the [`ParseStream::error`] method will be used…",303,[[["display"],["span"]],["self"]]],[11,"new_spanned",E,"Creates an error with the specified message spanning the…",303,[[["display"],["totokens"]],["self"]]],[11,"span",E,"The source location of the error.",303,[[["self"]],["span"]]],[11,"to_compile_error",E,"Render the error as an invocation of [`compile_error!`].",303,[[["self"]],[R[768]]]],[11,"combine",E,"Add another error message to self such that when…",303,[[["self"],["error"]]]],[6,"AttributeArgs",E,"Conventional argument type associated with an invocation…",N,N],[6,"Result",E,R[2725],N,N],[14,"parenthesized",E,"Parse a set of parentheses and expose their content to…",N,N],[14,"braced",E,"Parse a set of curly braces and expose their content to…",N,N],[14,"bracketed",E,"Parse a set of square brackets and expose their content to…",N,N],[14,"Token",E,"A type-macro that expands to the name of the Rust type…",N,N],[14,"parse_quote",E,"Quasi-quotation macro that accepts input like the…",N,N],[14,"parse_macro_input",E,"Parse the input TokenStream of a macro, triggering a…",N,N],[14,"custom_keyword",E,"Define a type that supports parsing and printing a given…",N,N],[14,"custom_punctuation",E,"Define a type that supports parsing and printing a…",N,N],[11,"peek",E,E,304,[[["cursor"]],["bool"]]],[11,"display",E,E,304,[[],["str"]]],[11,"span",E,E,304,[[["self"]],["span"]]],[11,"into",E,E,304,[[],[U]]],[11,R[113],E,E,304,[[["self"]],["string"]]],[11,"from",E,E,304,[[[T]],[T]]],[11,R[46],E,E,304,[[["self"]],[T]]],[11,R[47],E,E,304,[[["self"],[T]]]],[11,R[4],E,E,304,[[[U]],[R[3]]]],[11,R[5],E,E,304,[[],[R[3]]]],[11,R[7],E,E,304,[[["self"]],[T]]],[11,R[6],E,E,304,[[["self"]],[T]]],[11,R[8],E,E,304,[[["self"]],[R[9]]]],[11,"span",E,E,0,[[["self"]],["span"]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[46],E,E,0,[[["self"]],[T]]],[11,R[47],E,E,0,[[["self"],[T]]]],[11,R[4],E,E,0,[[[U]],[R[3]]]],[11,R[5],E,E,0,[[],[R[3]]]],[11,R[7],E,E,0,[[["self"]],[T]]],[11,R[6],E,E,0,[[["self"]],[T]]],[11,R[8],E,E,0,[[["self"]],[R[9]]]],[11,"span",E,E,1,[[["self"]],["span"]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[46],E,E,1,[[["self"]],[T]]],[11,R[47],E,E,1,[[["self"],[T]]]],[11,R[4],E,E,1,[[[U]],[R[3]]]],[11,R[5],E,E,1,[[],[R[3]]]],[11,R[7],E,E,1,[[["self"]],[T]]],[11,R[6],E,E,1,[[["self"]],[T]]],[11,R[8],E,E,1,[[["self"]],[R[9]]]],[11,"span",E,E,2,[[["self"]],["span"]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[46],E,E,2,[[["self"]],[T]]],[11,R[47],E,E,2,[[["self"],[T]]]],[11,R[4],E,E,2,[[[U]],[R[3]]]],[11,R[5],E,E,2,[[],[R[3]]]],[11,R[7],E,E,2,[[["self"]],[T]]],[11,R[6],E,E,2,[[["self"]],[T]]],[11,R[8],E,E,2,[[["self"]],[R[9]]]],[11,"span",E,E,3,[[["self"]],["span"]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[46],E,E,3,[[["self"]],[T]]],[11,R[47],E,E,3,[[["self"],[T]]]],[11,R[4],E,E,3,[[[U]],[R[3]]]],[11,R[5],E,E,3,[[],[R[3]]]],[11,R[7],E,E,3,[[["self"]],[T]]],[11,R[6],E,E,3,[[["self"]],[T]]],[11,R[8],E,E,3,[[["self"]],[R[9]]]],[11,"span",E,E,4,[[["self"]],["span"]]],[11,"into",E,E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[46],E,E,4,[[["self"]],[T]]],[11,R[47],E,E,4,[[["self"],[T]]]],[11,R[4],E,E,4,[[[U]],[R[3]]]],[11,R[5],E,E,4,[[],[R[3]]]],[11,R[7],E,E,4,[[["self"]],[T]]],[11,R[6],E,E,4,[[["self"]],[T]]],[11,R[8],E,E,4,[[["self"]],[R[9]]]],[11,"span",E,E,5,[[["self"]],["span"]]],[11,"into",E,E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[46],E,E,5,[[["self"]],[T]]],[11,R[47],E,E,5,[[["self"],[T]]]],[11,R[4],E,E,5,[[[U]],[R[3]]]],[11,R[5],E,E,5,[[],[R[3]]]],[11,R[7],E,E,5,[[["self"]],[T]]],[11,R[6],E,E,5,[[["self"]],[T]]],[11,R[8],E,E,5,[[["self"]],[R[9]]]],[11,"span",E,E,6,[[["self"]],["span"]]],[11,"into",E,E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[46],E,E,6,[[["self"]],[T]]],[11,R[47],E,E,6,[[["self"],[T]]]],[11,R[4],E,E,6,[[[U]],[R[3]]]],[11,R[5],E,E,6,[[],[R[3]]]],[11,R[7],E,E,6,[[["self"]],[T]]],[11,R[6],E,E,6,[[["self"]],[T]]],[11,R[8],E,E,6,[[["self"]],[R[9]]]],[11,"span",E,E,7,[[["self"]],["span"]]],[11,"into",E,E,7,[[],[U]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[46],E,E,7,[[["self"]],[T]]],[11,R[47],E,E,7,[[["self"],[T]]]],[11,R[4],E,E,7,[[[U]],[R[3]]]],[11,R[5],E,E,7,[[],[R[3]]]],[11,R[7],E,E,7,[[["self"]],[T]]],[11,R[6],E,E,7,[[["self"]],[T]]],[11,R[8],E,E,7,[[["self"]],[R[9]]]],[11,"span",E,E,8,[[["self"]],["span"]]],[11,"into",E,E,8,[[],[U]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[46],E,E,8,[[["self"]],[T]]],[11,R[47],E,E,8,[[["self"],[T]]]],[11,R[4],E,E,8,[[[U]],[R[3]]]],[11,R[5],E,E,8,[[],[R[3]]]],[11,R[7],E,E,8,[[["self"]],[T]]],[11,R[6],E,E,8,[[["self"]],[T]]],[11,R[8],E,E,8,[[["self"]],[R[9]]]],[11,"span",E,E,9,[[["self"]],["span"]]],[11,"into",E,E,9,[[],[U]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[46],E,E,9,[[["self"]],[T]]],[11,R[47],E,E,9,[[["self"],[T]]]],[11,R[4],E,E,9,[[[U]],[R[3]]]],[11,R[5],E,E,9,[[],[R[3]]]],[11,R[7],E,E,9,[[["self"]],[T]]],[11,R[6],E,E,9,[[["self"]],[T]]],[11,R[8],E,E,9,[[["self"]],[R[9]]]],[11,"span",E,E,10,[[["self"]],["span"]]],[11,"into",E,E,10,[[],[U]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[46],E,E,10,[[["self"]],[T]]],[11,R[47],E,E,10,[[["self"],[T]]]],[11,R[4],E,E,10,[[[U]],[R[3]]]],[11,R[5],E,E,10,[[],[R[3]]]],[11,R[7],E,E,10,[[["self"]],[T]]],[11,R[6],E,E,10,[[["self"]],[T]]],[11,R[8],E,E,10,[[["self"]],[R[9]]]],[11,"span",E,E,11,[[["self"]],["span"]]],[11,"into",E,E,11,[[],[U]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[46],E,E,11,[[["self"]],[T]]],[11,R[47],E,E,11,[[["self"],[T]]]],[11,R[4],E,E,11,[[[U]],[R[3]]]],[11,R[5],E,E,11,[[],[R[3]]]],[11,R[7],E,E,11,[[["self"]],[T]]],[11,R[6],E,E,11,[[["self"]],[T]]],[11,R[8],E,E,11,[[["self"]],[R[9]]]],[11,"span",E,E,12,[[["self"]],["span"]]],[11,"into",E,E,12,[[],[U]]],[11,"from",E,E,12,[[[T]],[T]]],[11,R[46],E,E,12,[[["self"]],[T]]],[11,R[47],E,E,12,[[["self"],[T]]]],[11,R[4],E,E,12,[[[U]],[R[3]]]],[11,R[5],E,E,12,[[],[R[3]]]],[11,R[7],E,E,12,[[["self"]],[T]]],[11,R[6],E,E,12,[[["self"]],[T]]],[11,R[8],E,E,12,[[["self"]],[R[9]]]],[11,"span",E,E,13,[[["self"]],["span"]]],[11,"into",E,E,13,[[],[U]]],[11,"from",E,E,13,[[[T]],[T]]],[11,R[46],E,E,13,[[["self"]],[T]]],[11,R[47],E,E,13,[[["self"],[T]]]],[11,R[4],E,E,13,[[[U]],[R[3]]]],[11,R[5],E,E,13,[[],[R[3]]]],[11,R[7],E,E,13,[[["self"]],[T]]],[11,R[6],E,E,13,[[["self"]],[T]]],[11,R[8],E,E,13,[[["self"]],[R[9]]]],[11,"span",E,E,14,[[["self"]],["span"]]],[11,"into",E,E,14,[[],[U]]],[11,"from",E,E,14,[[[T]],[T]]],[11,R[46],E,E,14,[[["self"]],[T]]],[11,R[47],E,E,14,[[["self"],[T]]]],[11,R[4],E,E,14,[[[U]],[R[3]]]],[11,R[5],E,E,14,[[],[R[3]]]],[11,R[7],E,E,14,[[["self"]],[T]]],[11,R[6],E,E,14,[[["self"]],[T]]],[11,R[8],E,E,14,[[["self"]],[R[9]]]],[11,"span",E,E,15,[[["self"]],["span"]]],[11,"into",E,E,15,[[],[U]]],[11,"from",E,E,15,[[[T]],[T]]],[11,R[46],E,E,15,[[["self"]],[T]]],[11,R[47],E,E,15,[[["self"],[T]]]],[11,R[4],E,E,15,[[[U]],[R[3]]]],[11,R[5],E,E,15,[[],[R[3]]]],[11,R[7],E,E,15,[[["self"]],[T]]],[11,R[6],E,E,15,[[["self"]],[T]]],[11,R[8],E,E,15,[[["self"]],[R[9]]]],[11,"span",E,E,16,[[["self"]],["span"]]],[11,"into",E,E,16,[[],[U]]],[11,"from",E,E,16,[[[T]],[T]]],[11,R[46],E,E,16,[[["self"]],[T]]],[11,R[47],E,E,16,[[["self"],[T]]]],[11,R[4],E,E,16,[[[U]],[R[3]]]],[11,R[5],E,E,16,[[],[R[3]]]],[11,R[7],E,E,16,[[["self"]],[T]]],[11,R[6],E,E,16,[[["self"]],[T]]],[11,R[8],E,E,16,[[["self"]],[R[9]]]],[11,"span",E,E,17,[[["self"]],["span"]]],[11,"into",E,E,17,[[],[U]]],[11,"from",E,E,17,[[[T]],[T]]],[11,R[46],E,E,17,[[["self"]],[T]]],[11,R[47],E,E,17,[[["self"],[T]]]],[11,R[4],E,E,17,[[[U]],[R[3]]]],[11,R[5],E,E,17,[[],[R[3]]]],[11,R[7],E,E,17,[[["self"]],[T]]],[11,R[6],E,E,17,[[["self"]],[T]]],[11,R[8],E,E,17,[[["self"]],[R[9]]]],[11,"span",E,E,18,[[["self"]],["span"]]],[11,"into",E,E,18,[[],[U]]],[11,"from",E,E,18,[[[T]],[T]]],[11,R[46],E,E,18,[[["self"]],[T]]],[11,R[47],E,E,18,[[["self"],[T]]]],[11,R[4],E,E,18,[[[U]],[R[3]]]],[11,R[5],E,E,18,[[],[R[3]]]],[11,R[7],E,E,18,[[["self"]],[T]]],[11,R[6],E,E,18,[[["self"]],[T]]],[11,R[8],E,E,18,[[["self"]],[R[9]]]],[11,"span",E,E,19,[[["self"]],["span"]]],[11,"into",E,E,19,[[],[U]]],[11,"from",E,E,19,[[[T]],[T]]],[11,R[46],E,E,19,[[["self"]],[T]]],[11,R[47],E,E,19,[[["self"],[T]]]],[11,R[4],E,E,19,[[[U]],[R[3]]]],[11,R[5],E,E,19,[[],[R[3]]]],[11,R[7],E,E,19,[[["self"]],[T]]],[11,R[6],E,E,19,[[["self"]],[T]]],[11,R[8],E,E,19,[[["self"]],[R[9]]]],[11,"span",E,E,20,[[["self"]],["span"]]],[11,"into",E,E,20,[[],[U]]],[11,"from",E,E,20,[[[T]],[T]]],[11,R[46],E,E,20,[[["self"]],[T]]],[11,R[47],E,E,20,[[["self"],[T]]]],[11,R[4],E,E,20,[[[U]],[R[3]]]],[11,R[5],E,E,20,[[],[R[3]]]],[11,R[7],E,E,20,[[["self"]],[T]]],[11,R[6],E,E,20,[[["self"]],[T]]],[11,R[8],E,E,20,[[["self"]],[R[9]]]],[11,"span",E,E,21,[[["self"]],["span"]]],[11,"into",E,E,21,[[],[U]]],[11,"from",E,E,21,[[[T]],[T]]],[11,R[46],E,E,21,[[["self"]],[T]]],[11,R[47],E,E,21,[[["self"],[T]]]],[11,R[4],E,E,21,[[[U]],[R[3]]]],[11,R[5],E,E,21,[[],[R[3]]]],[11,R[7],E,E,21,[[["self"]],[T]]],[11,R[6],E,E,21,[[["self"]],[T]]],[11,R[8],E,E,21,[[["self"]],[R[9]]]],[11,"span",E,E,22,[[["self"]],["span"]]],[11,"into",E,E,22,[[],[U]]],[11,"from",E,E,22,[[[T]],[T]]],[11,R[46],E,E,22,[[["self"]],[T]]],[11,R[47],E,E,22,[[["self"],[T]]]],[11,R[4],E,E,22,[[[U]],[R[3]]]],[11,R[5],E,E,22,[[],[R[3]]]],[11,R[7],E,E,22,[[["self"]],[T]]],[11,R[6],E,E,22,[[["self"]],[T]]],[11,R[8],E,E,22,[[["self"]],[R[9]]]],[11,"span",E,E,23,[[["self"]],["span"]]],[11,"into",E,E,23,[[],[U]]],[11,"from",E,E,23,[[[T]],[T]]],[11,R[46],E,E,23,[[["self"]],[T]]],[11,R[47],E,E,23,[[["self"],[T]]]],[11,R[4],E,E,23,[[[U]],[R[3]]]],[11,R[5],E,E,23,[[],[R[3]]]],[11,R[7],E,E,23,[[["self"]],[T]]],[11,R[6],E,E,23,[[["self"]],[T]]],[11,R[8],E,E,23,[[["self"]],[R[9]]]],[11,"span",E,E,24,[[["self"]],["span"]]],[11,"into",E,E,24,[[],[U]]],[11,"from",E,E,24,[[[T]],[T]]],[11,R[46],E,E,24,[[["self"]],[T]]],[11,R[47],E,E,24,[[["self"],[T]]]],[11,R[4],E,E,24,[[[U]],[R[3]]]],[11,R[5],E,E,24,[[],[R[3]]]],[11,R[7],E,E,24,[[["self"]],[T]]],[11,R[6],E,E,24,[[["self"]],[T]]],[11,R[8],E,E,24,[[["self"]],[R[9]]]],[11,"span",E,E,25,[[["self"]],["span"]]],[11,"into",E,E,25,[[],[U]]],[11,"from",E,E,25,[[[T]],[T]]],[11,R[46],E,E,25,[[["self"]],[T]]],[11,R[47],E,E,25,[[["self"],[T]]]],[11,R[4],E,E,25,[[[U]],[R[3]]]],[11,R[5],E,E,25,[[],[R[3]]]],[11,R[7],E,E,25,[[["self"]],[T]]],[11,R[6],E,E,25,[[["self"]],[T]]],[11,R[8],E,E,25,[[["self"]],[R[9]]]],[11,"span",E,E,26,[[["self"]],["span"]]],[11,"into",E,E,26,[[],[U]]],[11,"from",E,E,26,[[[T]],[T]]],[11,R[46],E,E,26,[[["self"]],[T]]],[11,R[47],E,E,26,[[["self"],[T]]]],[11,R[4],E,E,26,[[[U]],[R[3]]]],[11,R[5],E,E,26,[[],[R[3]]]],[11,R[7],E,E,26,[[["self"]],[T]]],[11,R[6],E,E,26,[[["self"]],[T]]],[11,R[8],E,E,26,[[["self"]],[R[9]]]],[11,"span",E,E,27,[[["self"]],["span"]]],[11,"into",E,E,27,[[],[U]]],[11,"from",E,E,27,[[[T]],[T]]],[11,R[46],E,E,27,[[["self"]],[T]]],[11,R[47],E,E,27,[[["self"],[T]]]],[11,R[4],E,E,27,[[[U]],[R[3]]]],[11,R[5],E,E,27,[[],[R[3]]]],[11,R[7],E,E,27,[[["self"]],[T]]],[11,R[6],E,E,27,[[["self"]],[T]]],[11,R[8],E,E,27,[[["self"]],[R[9]]]],[11,"span",E,E,28,[[["self"]],["span"]]],[11,"into",E,E,28,[[],[U]]],[11,"from",E,E,28,[[[T]],[T]]],[11,R[46],E,E,28,[[["self"]],[T]]],[11,R[47],E,E,28,[[["self"],[T]]]],[11,R[4],E,E,28,[[[U]],[R[3]]]],[11,R[5],E,E,28,[[],[R[3]]]],[11,R[7],E,E,28,[[["self"]],[T]]],[11,R[6],E,E,28,[[["self"]],[T]]],[11,R[8],E,E,28,[[["self"]],[R[9]]]],[11,"span",E,E,29,[[["self"]],["span"]]],[11,"into",E,E,29,[[],[U]]],[11,"from",E,E,29,[[[T]],[T]]],[11,R[46],E,E,29,[[["self"]],[T]]],[11,R[47],E,E,29,[[["self"],[T]]]],[11,R[4],E,E,29,[[[U]],[R[3]]]],[11,R[5],E,E,29,[[],[R[3]]]],[11,R[7],E,E,29,[[["self"]],[T]]],[11,R[6],E,E,29,[[["self"]],[T]]],[11,R[8],E,E,29,[[["self"]],[R[9]]]],[11,"span",E,E,30,[[["self"]],["span"]]],[11,"into",E,E,30,[[],[U]]],[11,"from",E,E,30,[[[T]],[T]]],[11,R[46],E,E,30,[[["self"]],[T]]],[11,R[47],E,E,30,[[["self"],[T]]]],[11,R[4],E,E,30,[[[U]],[R[3]]]],[11,R[5],E,E,30,[[],[R[3]]]],[11,R[7],E,E,30,[[["self"]],[T]]],[11,R[6],E,E,30,[[["self"]],[T]]],[11,R[8],E,E,30,[[["self"]],[R[9]]]],[11,"span",E,E,31,[[["self"]],["span"]]],[11,"into",E,E,31,[[],[U]]],[11,"from",E,E,31,[[[T]],[T]]],[11,R[46],E,E,31,[[["self"]],[T]]],[11,R[47],E,E,31,[[["self"],[T]]]],[11,R[4],E,E,31,[[[U]],[R[3]]]],[11,R[5],E,E,31,[[],[R[3]]]],[11,R[7],E,E,31,[[["self"]],[T]]],[11,R[6],E,E,31,[[["self"]],[T]]],[11,R[8],E,E,31,[[["self"]],[R[9]]]],[11,"span",E,E,32,[[["self"]],["span"]]],[11,"into",E,E,32,[[],[U]]],[11,"from",E,E,32,[[[T]],[T]]],[11,R[46],E,E,32,[[["self"]],[T]]],[11,R[47],E,E,32,[[["self"],[T]]]],[11,R[4],E,E,32,[[[U]],[R[3]]]],[11,R[5],E,E,32,[[],[R[3]]]],[11,R[7],E,E,32,[[["self"]],[T]]],[11,R[6],E,E,32,[[["self"]],[T]]],[11,R[8],E,E,32,[[["self"]],[R[9]]]],[11,"span",E,E,33,[[["self"]],["span"]]],[11,"into",E,E,33,[[],[U]]],[11,"from",E,E,33,[[[T]],[T]]],[11,R[46],E,E,33,[[["self"]],[T]]],[11,R[47],E,E,33,[[["self"],[T]]]],[11,R[4],E,E,33,[[[U]],[R[3]]]],[11,R[5],E,E,33,[[],[R[3]]]],[11,R[7],E,E,33,[[["self"]],[T]]],[11,R[6],E,E,33,[[["self"]],[T]]],[11,R[8],E,E,33,[[["self"]],[R[9]]]],[11,"span",E,E,34,[[["self"]],["span"]]],[11,"into",E,E,34,[[],[U]]],[11,"from",E,E,34,[[[T]],[T]]],[11,R[46],E,E,34,[[["self"]],[T]]],[11,R[47],E,E,34,[[["self"],[T]]]],[11,R[4],E,E,34,[[[U]],[R[3]]]],[11,R[5],E,E,34,[[],[R[3]]]],[11,R[7],E,E,34,[[["self"]],[T]]],[11,R[6],E,E,34,[[["self"]],[T]]],[11,R[8],E,E,34,[[["self"]],[R[9]]]],[11,"span",E,E,35,[[["self"]],["span"]]],[11,"into",E,E,35,[[],[U]]],[11,"from",E,E,35,[[[T]],[T]]],[11,R[46],E,E,35,[[["self"]],[T]]],[11,R[47],E,E,35,[[["self"],[T]]]],[11,R[4],E,E,35,[[[U]],[R[3]]]],[11,R[5],E,E,35,[[],[R[3]]]],[11,R[7],E,E,35,[[["self"]],[T]]],[11,R[6],E,E,35,[[["self"]],[T]]],[11,R[8],E,E,35,[[["self"]],[R[9]]]],[11,"span",E,E,36,[[["self"]],["span"]]],[11,"into",E,E,36,[[],[U]]],[11,"from",E,E,36,[[[T]],[T]]],[11,R[46],E,E,36,[[["self"]],[T]]],[11,R[47],E,E,36,[[["self"],[T]]]],[11,R[4],E,E,36,[[[U]],[R[3]]]],[11,R[5],E,E,36,[[],[R[3]]]],[11,R[7],E,E,36,[[["self"]],[T]]],[11,R[6],E,E,36,[[["self"]],[T]]],[11,R[8],E,E,36,[[["self"]],[R[9]]]],[11,"span",E,E,37,[[["self"]],["span"]]],[11,"into",E,E,37,[[],[U]]],[11,"from",E,E,37,[[[T]],[T]]],[11,R[46],E,E,37,[[["self"]],[T]]],[11,R[47],E,E,37,[[["self"],[T]]]],[11,R[4],E,E,37,[[[U]],[R[3]]]],[11,R[5],E,E,37,[[],[R[3]]]],[11,R[7],E,E,37,[[["self"]],[T]]],[11,R[6],E,E,37,[[["self"]],[T]]],[11,R[8],E,E,37,[[["self"]],[R[9]]]],[11,"span",E,E,38,[[["self"]],["span"]]],[11,"into",E,E,38,[[],[U]]],[11,"from",E,E,38,[[[T]],[T]]],[11,R[46],E,E,38,[[["self"]],[T]]],[11,R[47],E,E,38,[[["self"],[T]]]],[11,R[4],E,E,38,[[[U]],[R[3]]]],[11,R[5],E,E,38,[[],[R[3]]]],[11,R[7],E,E,38,[[["self"]],[T]]],[11,R[6],E,E,38,[[["self"]],[T]]],[11,R[8],E,E,38,[[["self"]],[R[9]]]],[11,"span",E,E,39,[[["self"]],["span"]]],[11,"into",E,E,39,[[],[U]]],[11,"from",E,E,39,[[[T]],[T]]],[11,R[46],E,E,39,[[["self"]],[T]]],[11,R[47],E,E,39,[[["self"],[T]]]],[11,R[4],E,E,39,[[[U]],[R[3]]]],[11,R[5],E,E,39,[[],[R[3]]]],[11,R[7],E,E,39,[[["self"]],[T]]],[11,R[6],E,E,39,[[["self"]],[T]]],[11,R[8],E,E,39,[[["self"]],[R[9]]]],[11,"span",E,E,40,[[["self"]],["span"]]],[11,"into",E,E,40,[[],[U]]],[11,"from",E,E,40,[[[T]],[T]]],[11,R[46],E,E,40,[[["self"]],[T]]],[11,R[47],E,E,40,[[["self"],[T]]]],[11,R[4],E,E,40,[[[U]],[R[3]]]],[11,R[5],E,E,40,[[],[R[3]]]],[11,R[7],E,E,40,[[["self"]],[T]]],[11,R[6],E,E,40,[[["self"]],[T]]],[11,R[8],E,E,40,[[["self"]],[R[9]]]],[11,"span",E,E,41,[[["self"]],["span"]]],[11,"into",E,E,41,[[],[U]]],[11,"from",E,E,41,[[[T]],[T]]],[11,R[46],E,E,41,[[["self"]],[T]]],[11,R[47],E,E,41,[[["self"],[T]]]],[11,R[4],E,E,41,[[[U]],[R[3]]]],[11,R[5],E,E,41,[[],[R[3]]]],[11,R[7],E,E,41,[[["self"]],[T]]],[11,R[6],E,E,41,[[["self"]],[T]]],[11,R[8],E,E,41,[[["self"]],[R[9]]]],[11,"span",E,E,42,[[["self"]],["span"]]],[11,"into",E,E,42,[[],[U]]],[11,"from",E,E,42,[[[T]],[T]]],[11,R[46],E,E,42,[[["self"]],[T]]],[11,R[47],E,E,42,[[["self"],[T]]]],[11,R[4],E,E,42,[[[U]],[R[3]]]],[11,R[5],E,E,42,[[],[R[3]]]],[11,R[7],E,E,42,[[["self"]],[T]]],[11,R[6],E,E,42,[[["self"]],[T]]],[11,R[8],E,E,42,[[["self"]],[R[9]]]],[11,"span",E,E,43,[[["self"]],["span"]]],[11,"into",E,E,43,[[],[U]]],[11,"from",E,E,43,[[[T]],[T]]],[11,R[46],E,E,43,[[["self"]],[T]]],[11,R[47],E,E,43,[[["self"],[T]]]],[11,R[4],E,E,43,[[[U]],[R[3]]]],[11,R[5],E,E,43,[[],[R[3]]]],[11,R[7],E,E,43,[[["self"]],[T]]],[11,R[6],E,E,43,[[["self"]],[T]]],[11,R[8],E,E,43,[[["self"]],[R[9]]]],[11,"span",E,E,44,[[["self"]],["span"]]],[11,"into",E,E,44,[[],[U]]],[11,"from",E,E,44,[[[T]],[T]]],[11,R[46],E,E,44,[[["self"]],[T]]],[11,R[47],E,E,44,[[["self"],[T]]]],[11,R[4],E,E,44,[[[U]],[R[3]]]],[11,R[5],E,E,44,[[],[R[3]]]],[11,R[7],E,E,44,[[["self"]],[T]]],[11,R[6],E,E,44,[[["self"]],[T]]],[11,R[8],E,E,44,[[["self"]],[R[9]]]],[11,"span",E,E,45,[[["self"]],["span"]]],[11,"into",E,E,45,[[],[U]]],[11,"from",E,E,45,[[[T]],[T]]],[11,R[46],E,E,45,[[["self"]],[T]]],[11,R[47],E,E,45,[[["self"],[T]]]],[11,R[4],E,E,45,[[[U]],[R[3]]]],[11,R[5],E,E,45,[[],[R[3]]]],[11,R[7],E,E,45,[[["self"]],[T]]],[11,R[6],E,E,45,[[["self"]],[T]]],[11,R[8],E,E,45,[[["self"]],[R[9]]]],[11,"span",E,E,46,[[["self"]],["span"]]],[11,"into",E,E,46,[[],[U]]],[11,"from",E,E,46,[[[T]],[T]]],[11,R[46],E,E,46,[[["self"]],[T]]],[11,R[47],E,E,46,[[["self"],[T]]]],[11,R[4],E,E,46,[[[U]],[R[3]]]],[11,R[5],E,E,46,[[],[R[3]]]],[11,R[7],E,E,46,[[["self"]],[T]]],[11,R[6],E,E,46,[[["self"]],[T]]],[11,R[8],E,E,46,[[["self"]],[R[9]]]],[11,"span",E,E,47,[[["self"]],["span"]]],[11,"into",E,E,47,[[],[U]]],[11,"from",E,E,47,[[[T]],[T]]],[11,R[46],E,E,47,[[["self"]],[T]]],[11,R[47],E,E,47,[[["self"],[T]]]],[11,R[4],E,E,47,[[[U]],[R[3]]]],[11,R[5],E,E,47,[[],[R[3]]]],[11,R[7],E,E,47,[[["self"]],[T]]],[11,R[6],E,E,47,[[["self"]],[T]]],[11,R[8],E,E,47,[[["self"]],[R[9]]]],[11,"span",E,E,48,[[["self"]],["span"]]],[11,"into",E,E,48,[[],[U]]],[11,"from",E,E,48,[[[T]],[T]]],[11,R[46],E,E,48,[[["self"]],[T]]],[11,R[47],E,E,48,[[["self"],[T]]]],[11,R[4],E,E,48,[[[U]],[R[3]]]],[11,R[5],E,E,48,[[],[R[3]]]],[11,R[7],E,E,48,[[["self"]],[T]]],[11,R[6],E,E,48,[[["self"]],[T]]],[11,R[8],E,E,48,[[["self"]],[R[9]]]],[11,"span",E,E,49,[[["self"]],["span"]]],[11,"into",E,E,49,[[],[U]]],[11,"from",E,E,49,[[[T]],[T]]],[11,R[46],E,E,49,[[["self"]],[T]]],[11,R[47],E,E,49,[[["self"],[T]]]],[11,R[4],E,E,49,[[[U]],[R[3]]]],[11,R[5],E,E,49,[[],[R[3]]]],[11,R[7],E,E,49,[[["self"]],[T]]],[11,R[6],E,E,49,[[["self"]],[T]]],[11,R[8],E,E,49,[[["self"]],[R[9]]]],[11,"span",E,E,50,[[["self"]],["span"]]],[11,"into",E,E,50,[[],[U]]],[11,"from",E,E,50,[[[T]],[T]]],[11,R[46],E,E,50,[[["self"]],[T]]],[11,R[47],E,E,50,[[["self"],[T]]]],[11,R[4],E,E,50,[[[U]],[R[3]]]],[11,R[5],E,E,50,[[],[R[3]]]],[11,R[7],E,E,50,[[["self"]],[T]]],[11,R[6],E,E,50,[[["self"]],[T]]],[11,R[8],E,E,50,[[["self"]],[R[9]]]],[11,"span",E,E,51,[[["self"]],["span"]]],[11,"into",E,E,51,[[],[U]]],[11,"from",E,E,51,[[[T]],[T]]],[11,R[46],E,E,51,[[["self"]],[T]]],[11,R[47],E,E,51,[[["self"],[T]]]],[11,R[4],E,E,51,[[[U]],[R[3]]]],[11,R[5],E,E,51,[[],[R[3]]]],[11,R[7],E,E,51,[[["self"]],[T]]],[11,R[6],E,E,51,[[["self"]],[T]]],[11,R[8],E,E,51,[[["self"]],[R[9]]]],[11,"span",E,E,52,[[["self"]],["span"]]],[11,"into",E,E,52,[[],[U]]],[11,"from",E,E,52,[[[T]],[T]]],[11,R[46],E,E,52,[[["self"]],[T]]],[11,R[47],E,E,52,[[["self"],[T]]]],[11,R[4],E,E,52,[[[U]],[R[3]]]],[11,R[5],E,E,52,[[],[R[3]]]],[11,R[7],E,E,52,[[["self"]],[T]]],[11,R[6],E,E,52,[[["self"]],[T]]],[11,R[8],E,E,52,[[["self"]],[R[9]]]],[11,"span",E,E,53,[[["self"]],["span"]]],[11,"into",E,E,53,[[],[U]]],[11,"from",E,E,53,[[[T]],[T]]],[11,R[46],E,E,53,[[["self"]],[T]]],[11,R[47],E,E,53,[[["self"],[T]]]],[11,R[4],E,E,53,[[[U]],[R[3]]]],[11,R[5],E,E,53,[[],[R[3]]]],[11,R[7],E,E,53,[[["self"]],[T]]],[11,R[6],E,E,53,[[["self"]],[T]]],[11,R[8],E,E,53,[[["self"]],[R[9]]]],[11,"span",E,E,54,[[["self"]],["span"]]],[11,"into",E,E,54,[[],[U]]],[11,"from",E,E,54,[[[T]],[T]]],[11,R[46],E,E,54,[[["self"]],[T]]],[11,R[47],E,E,54,[[["self"],[T]]]],[11,R[4],E,E,54,[[[U]],[R[3]]]],[11,R[5],E,E,54,[[],[R[3]]]],[11,R[7],E,E,54,[[["self"]],[T]]],[11,R[6],E,E,54,[[["self"]],[T]]],[11,R[8],E,E,54,[[["self"]],[R[9]]]],[11,"span",E,E,55,[[["self"]],["span"]]],[11,"into",E,E,55,[[],[U]]],[11,"from",E,E,55,[[[T]],[T]]],[11,R[46],E,E,55,[[["self"]],[T]]],[11,R[47],E,E,55,[[["self"],[T]]]],[11,R[4],E,E,55,[[[U]],[R[3]]]],[11,R[5],E,E,55,[[],[R[3]]]],[11,R[7],E,E,55,[[["self"]],[T]]],[11,R[6],E,E,55,[[["self"]],[T]]],[11,R[8],E,E,55,[[["self"]],[R[9]]]],[11,"span",E,E,56,[[["self"]],["span"]]],[11,"into",E,E,56,[[],[U]]],[11,"from",E,E,56,[[[T]],[T]]],[11,R[46],E,E,56,[[["self"]],[T]]],[11,R[47],E,E,56,[[["self"],[T]]]],[11,R[4],E,E,56,[[[U]],[R[3]]]],[11,R[5],E,E,56,[[],[R[3]]]],[11,R[7],E,E,56,[[["self"]],[T]]],[11,R[6],E,E,56,[[["self"]],[T]]],[11,R[8],E,E,56,[[["self"]],[R[9]]]],[11,"span",E,E,57,[[["self"]],["span"]]],[11,"into",E,E,57,[[],[U]]],[11,"from",E,E,57,[[[T]],[T]]],[11,R[46],E,E,57,[[["self"]],[T]]],[11,R[47],E,E,57,[[["self"],[T]]]],[11,R[4],E,E,57,[[[U]],[R[3]]]],[11,R[5],E,E,57,[[],[R[3]]]],[11,R[7],E,E,57,[[["self"]],[T]]],[11,R[6],E,E,57,[[["self"]],[T]]],[11,R[8],E,E,57,[[["self"]],[R[9]]]],[11,"span",E,E,58,[[["self"]],["span"]]],[11,"into",E,E,58,[[],[U]]],[11,"from",E,E,58,[[[T]],[T]]],[11,R[46],E,E,58,[[["self"]],[T]]],[11,R[47],E,E,58,[[["self"],[T]]]],[11,R[4],E,E,58,[[[U]],[R[3]]]],[11,R[5],E,E,58,[[],[R[3]]]],[11,R[7],E,E,58,[[["self"]],[T]]],[11,R[6],E,E,58,[[["self"]],[T]]],[11,R[8],E,E,58,[[["self"]],[R[9]]]],[11,"span",E,E,59,[[["self"]],["span"]]],[11,"into",E,E,59,[[],[U]]],[11,"from",E,E,59,[[[T]],[T]]],[11,R[46],E,E,59,[[["self"]],[T]]],[11,R[47],E,E,59,[[["self"],[T]]]],[11,R[4],E,E,59,[[[U]],[R[3]]]],[11,R[5],E,E,59,[[],[R[3]]]],[11,R[7],E,E,59,[[["self"]],[T]]],[11,R[6],E,E,59,[[["self"]],[T]]],[11,R[8],E,E,59,[[["self"]],[R[9]]]],[11,"span",E,E,60,[[["self"]],["span"]]],[11,"into",E,E,60,[[],[U]]],[11,"from",E,E,60,[[[T]],[T]]],[11,R[46],E,E,60,[[["self"]],[T]]],[11,R[47],E,E,60,[[["self"],[T]]]],[11,R[4],E,E,60,[[[U]],[R[3]]]],[11,R[5],E,E,60,[[],[R[3]]]],[11,R[7],E,E,60,[[["self"]],[T]]],[11,R[6],E,E,60,[[["self"]],[T]]],[11,R[8],E,E,60,[[["self"]],[R[9]]]],[11,"span",E,E,61,[[["self"]],["span"]]],[11,"into",E,E,61,[[],[U]]],[11,"from",E,E,61,[[[T]],[T]]],[11,R[46],E,E,61,[[["self"]],[T]]],[11,R[47],E,E,61,[[["self"],[T]]]],[11,R[4],E,E,61,[[[U]],[R[3]]]],[11,R[5],E,E,61,[[],[R[3]]]],[11,R[7],E,E,61,[[["self"]],[T]]],[11,R[6],E,E,61,[[["self"]],[T]]],[11,R[8],E,E,61,[[["self"]],[R[9]]]],[11,"span",E,E,62,[[["self"]],["span"]]],[11,"into",E,E,62,[[],[U]]],[11,"from",E,E,62,[[[T]],[T]]],[11,R[46],E,E,62,[[["self"]],[T]]],[11,R[47],E,E,62,[[["self"],[T]]]],[11,R[4],E,E,62,[[[U]],[R[3]]]],[11,R[5],E,E,62,[[],[R[3]]]],[11,R[7],E,E,62,[[["self"]],[T]]],[11,R[6],E,E,62,[[["self"]],[T]]],[11,R[8],E,E,62,[[["self"]],[R[9]]]],[11,"span",E,E,63,[[["self"]],["span"]]],[11,"into",E,E,63,[[],[U]]],[11,"from",E,E,63,[[[T]],[T]]],[11,R[46],E,E,63,[[["self"]],[T]]],[11,R[47],E,E,63,[[["self"],[T]]]],[11,R[4],E,E,63,[[[U]],[R[3]]]],[11,R[5],E,E,63,[[],[R[3]]]],[11,R[7],E,E,63,[[["self"]],[T]]],[11,R[6],E,E,63,[[["self"]],[T]]],[11,R[8],E,E,63,[[["self"]],[R[9]]]],[11,"span",E,E,305,[[["self"]],["span"]]],[11,"into",E,E,305,[[],[U]]],[11,"from",E,E,305,[[[T]],[T]]],[11,R[46],E,E,305,[[["self"]],[T]]],[11,R[47],E,E,305,[[["self"],[T]]]],[11,R[4],E,E,305,[[[U]],[R[3]]]],[11,R[5],E,E,305,[[],[R[3]]]],[11,R[7],E,E,305,[[["self"]],[T]]],[11,R[6],E,E,305,[[["self"]],[T]]],[11,R[8],E,E,305,[[["self"]],[R[9]]]],[11,"span",E,E,306,[[["self"]],["span"]]],[11,"into",E,E,306,[[],[U]]],[11,"from",E,E,306,[[[T]],[T]]],[11,R[46],E,E,306,[[["self"]],[T]]],[11,R[47],E,E,306,[[["self"],[T]]]],[11,R[4],E,E,306,[[[U]],[R[3]]]],[11,R[5],E,E,306,[[],[R[3]]]],[11,R[7],E,E,306,[[["self"]],[T]]],[11,R[6],E,E,306,[[["self"]],[T]]],[11,R[8],E,E,306,[[["self"]],[R[9]]]],[11,"span",E,E,283,[[["self"]],["span"]]],[11,"into",E,E,283,[[],[U]]],[11,"from",E,E,283,[[[T]],[T]]],[11,R[46],E,E,283,[[["self"]],[T]]],[11,R[47],E,E,283,[[["self"],[T]]]],[11,R[4],E,E,283,[[[U]],[R[3]]]],[11,R[5],E,E,283,[[],[R[3]]]],[11,R[7],E,E,283,[[["self"]],[T]]],[11,R[6],E,E,283,[[["self"]],[T]]],[11,R[8],E,E,283,[[["self"]],[R[9]]]],[11,"span",E,E,64,[[["self"]],["span"]]],[11,"into",E,E,64,[[],[U]]],[11,"from",E,E,64,[[[T]],[T]]],[11,R[46],E,E,64,[[["self"]],[T]]],[11,R[47],E,E,64,[[["self"],[T]]]],[11,R[4],E,E,64,[[[U]],[R[3]]]],[11,R[5],E,E,64,[[],[R[3]]]],[11,R[7],E,E,64,[[["self"]],[T]]],[11,R[6],E,E,64,[[["self"]],[T]]],[11,R[8],E,E,64,[[["self"]],[R[9]]]],[11,"span",E,E,65,[[["self"]],["span"]]],[11,"into",E,E,65,[[],[U]]],[11,"from",E,E,65,[[[T]],[T]]],[11,R[46],E,E,65,[[["self"]],[T]]],[11,R[47],E,E,65,[[["self"],[T]]]],[11,R[4],E,E,65,[[[U]],[R[3]]]],[11,R[5],E,E,65,[[],[R[3]]]],[11,R[7],E,E,65,[[["self"]],[T]]],[11,R[6],E,E,65,[[["self"]],[T]]],[11,R[8],E,E,65,[[["self"]],[R[9]]]],[11,"span",E,E,66,[[["self"]],["span"]]],[11,"into",E,E,66,[[],[U]]],[11,"from",E,E,66,[[[T]],[T]]],[11,R[46],E,E,66,[[["self"]],[T]]],[11,R[47],E,E,66,[[["self"],[T]]]],[11,R[4],E,E,66,[[[U]],[R[3]]]],[11,R[5],E,E,66,[[],[R[3]]]],[11,R[7],E,E,66,[[["self"]],[T]]],[11,R[6],E,E,66,[[["self"]],[T]]],[11,R[8],E,E,66,[[["self"]],[R[9]]]],[11,"span",E,E,67,[[["self"]],["span"]]],[11,"into",E,E,67,[[],[U]]],[11,"from",E,E,67,[[[T]],[T]]],[11,R[46],E,E,67,[[["self"]],[T]]],[11,R[47],E,E,67,[[["self"],[T]]]],[11,R[4],E,E,67,[[[U]],[R[3]]]],[11,R[5],E,E,67,[[],[R[3]]]],[11,R[7],E,E,67,[[["self"]],[T]]],[11,R[6],E,E,67,[[["self"]],[T]]],[11,R[8],E,E,67,[[["self"]],[R[9]]]],[11,"span",E,E,68,[[["self"]],["span"]]],[11,"into",E,E,68,[[],[U]]],[11,"from",E,E,68,[[[T]],[T]]],[11,R[46],E,E,68,[[["self"]],[T]]],[11,R[47],E,E,68,[[["self"],[T]]]],[11,R[4],E,E,68,[[[U]],[R[3]]]],[11,R[5],E,E,68,[[],[R[3]]]],[11,R[7],E,E,68,[[["self"]],[T]]],[11,R[6],E,E,68,[[["self"]],[T]]],[11,R[8],E,E,68,[[["self"]],[R[9]]]],[11,"span",E,E,69,[[["self"]],["span"]]],[11,"into",E,E,69,[[],[U]]],[11,"from",E,E,69,[[[T]],[T]]],[11,R[46],E,E,69,[[["self"]],[T]]],[11,R[47],E,E,69,[[["self"],[T]]]],[11,R[4],E,E,69,[[[U]],[R[3]]]],[11,R[5],E,E,69,[[],[R[3]]]],[11,R[7],E,E,69,[[["self"]],[T]]],[11,R[6],E,E,69,[[["self"]],[T]]],[11,R[8],E,E,69,[[["self"]],[R[9]]]],[11,"span",E,E,70,[[["self"]],["span"]]],[11,"into",E,E,70,[[],[U]]],[11,"from",E,E,70,[[[T]],[T]]],[11,R[46],E,E,70,[[["self"]],[T]]],[11,R[47],E,E,70,[[["self"],[T]]]],[11,R[4],E,E,70,[[[U]],[R[3]]]],[11,R[5],E,E,70,[[],[R[3]]]],[11,R[7],E,E,70,[[["self"]],[T]]],[11,R[6],E,E,70,[[["self"]],[T]]],[11,R[8],E,E,70,[[["self"]],[R[9]]]],[11,"span",E,E,71,[[["self"]],["span"]]],[11,"into",E,E,71,[[],[U]]],[11,"from",E,E,71,[[[T]],[T]]],[11,R[46],E,E,71,[[["self"]],[T]]],[11,R[47],E,E,71,[[["self"],[T]]]],[11,R[4],E,E,71,[[[U]],[R[3]]]],[11,R[5],E,E,71,[[],[R[3]]]],[11,R[7],E,E,71,[[["self"]],[T]]],[11,R[6],E,E,71,[[["self"]],[T]]],[11,R[8],E,E,71,[[["self"]],[R[9]]]],[11,"span",E,E,72,[[["self"]],["span"]]],[11,"into",E,E,72,[[],[U]]],[11,"from",E,E,72,[[[T]],[T]]],[11,R[46],E,E,72,[[["self"]],[T]]],[11,R[47],E,E,72,[[["self"],[T]]]],[11,R[4],E,E,72,[[[U]],[R[3]]]],[11,R[5],E,E,72,[[],[R[3]]]],[11,R[7],E,E,72,[[["self"]],[T]]],[11,R[6],E,E,72,[[["self"]],[T]]],[11,R[8],E,E,72,[[["self"]],[R[9]]]],[11,"span",E,E,73,[[["self"]],["span"]]],[11,"into",E,E,73,[[],[U]]],[11,"from",E,E,73,[[[T]],[T]]],[11,R[46],E,E,73,[[["self"]],[T]]],[11,R[47],E,E,73,[[["self"],[T]]]],[11,R[4],E,E,73,[[[U]],[R[3]]]],[11,R[5],E,E,73,[[],[R[3]]]],[11,R[7],E,E,73,[[["self"]],[T]]],[11,R[6],E,E,73,[[["self"]],[T]]],[11,R[8],E,E,73,[[["self"]],[R[9]]]],[11,"span",E,E,74,[[["self"]],["span"]]],[11,"into",E,E,74,[[],[U]]],[11,"from",E,E,74,[[[T]],[T]]],[11,R[46],E,E,74,[[["self"]],[T]]],[11,R[47],E,E,74,[[["self"],[T]]]],[11,R[4],E,E,74,[[[U]],[R[3]]]],[11,R[5],E,E,74,[[],[R[3]]]],[11,R[7],E,E,74,[[["self"]],[T]]],[11,R[6],E,E,74,[[["self"]],[T]]],[11,R[8],E,E,74,[[["self"]],[R[9]]]],[11,"span",E,E,75,[[["self"]],["span"]]],[11,"into",E,E,75,[[],[U]]],[11,"from",E,E,75,[[[T]],[T]]],[11,R[46],E,E,75,[[["self"]],[T]]],[11,R[47],E,E,75,[[["self"],[T]]]],[11,R[4],E,E,75,[[[U]],[R[3]]]],[11,R[5],E,E,75,[[],[R[3]]]],[11,R[7],E,E,75,[[["self"]],[T]]],[11,R[6],E,E,75,[[["self"]],[T]]],[11,R[8],E,E,75,[[["self"]],[R[9]]]],[11,"span",E,E,76,[[["self"]],["span"]]],[11,"into",E,E,76,[[],[U]]],[11,"from",E,E,76,[[[T]],[T]]],[11,R[46],E,E,76,[[["self"]],[T]]],[11,R[47],E,E,76,[[["self"],[T]]]],[11,R[4],E,E,76,[[[U]],[R[3]]]],[11,R[5],E,E,76,[[],[R[3]]]],[11,R[7],E,E,76,[[["self"]],[T]]],[11,R[6],E,E,76,[[["self"]],[T]]],[11,R[8],E,E,76,[[["self"]],[R[9]]]],[11,"span",E,E,77,[[["self"]],["span"]]],[11,"into",E,E,77,[[],[U]]],[11,"from",E,E,77,[[[T]],[T]]],[11,R[46],E,E,77,[[["self"]],[T]]],[11,R[47],E,E,77,[[["self"],[T]]]],[11,R[4],E,E,77,[[[U]],[R[3]]]],[11,R[5],E,E,77,[[],[R[3]]]],[11,R[7],E,E,77,[[["self"]],[T]]],[11,R[6],E,E,77,[[["self"]],[T]]],[11,R[8],E,E,77,[[["self"]],[R[9]]]],[11,"span",E,E,78,[[["self"]],["span"]]],[11,"into",E,E,78,[[],[U]]],[11,"from",E,E,78,[[[T]],[T]]],[11,R[46],E,E,78,[[["self"]],[T]]],[11,R[47],E,E,78,[[["self"],[T]]]],[11,R[4],E,E,78,[[[U]],[R[3]]]],[11,R[5],E,E,78,[[],[R[3]]]],[11,R[7],E,E,78,[[["self"]],[T]]],[11,R[6],E,E,78,[[["self"]],[T]]],[11,R[8],E,E,78,[[["self"]],[R[9]]]],[11,"span",E,E,79,[[["self"]],["span"]]],[11,"into",E,E,79,[[],[U]]],[11,"from",E,E,79,[[[T]],[T]]],[11,R[46],E,E,79,[[["self"]],[T]]],[11,R[47],E,E,79,[[["self"],[T]]]],[11,R[4],E,E,79,[[[U]],[R[3]]]],[11,R[5],E,E,79,[[],[R[3]]]],[11,R[7],E,E,79,[[["self"]],[T]]],[11,R[6],E,E,79,[[["self"]],[T]]],[11,R[8],E,E,79,[[["self"]],[R[9]]]],[11,"span",E,E,80,[[["self"]],["span"]]],[11,"into",E,E,80,[[],[U]]],[11,"from",E,E,80,[[[T]],[T]]],[11,R[46],E,E,80,[[["self"]],[T]]],[11,R[47],E,E,80,[[["self"],[T]]]],[11,R[4],E,E,80,[[[U]],[R[3]]]],[11,R[5],E,E,80,[[],[R[3]]]],[11,R[7],E,E,80,[[["self"]],[T]]],[11,R[6],E,E,80,[[["self"]],[T]]],[11,R[8],E,E,80,[[["self"]],[R[9]]]],[11,"span",E,E,81,[[["self"]],["span"]]],[11,"into",E,E,81,[[],[U]]],[11,"from",E,E,81,[[[T]],[T]]],[11,R[46],E,E,81,[[["self"]],[T]]],[11,R[47],E,E,81,[[["self"],[T]]]],[11,R[4],E,E,81,[[[U]],[R[3]]]],[11,R[5],E,E,81,[[],[R[3]]]],[11,R[7],E,E,81,[[["self"]],[T]]],[11,R[6],E,E,81,[[["self"]],[T]]],[11,R[8],E,E,81,[[["self"]],[R[9]]]],[11,"span",E,E,82,[[["self"]],["span"]]],[11,"into",E,E,82,[[],[U]]],[11,"from",E,E,82,[[[T]],[T]]],[11,R[46],E,E,82,[[["self"]],[T]]],[11,R[47],E,E,82,[[["self"],[T]]]],[11,R[4],E,E,82,[[[U]],[R[3]]]],[11,R[5],E,E,82,[[],[R[3]]]],[11,R[7],E,E,82,[[["self"]],[T]]],[11,R[6],E,E,82,[[["self"]],[T]]],[11,R[8],E,E,82,[[["self"]],[R[9]]]],[11,"span",E,E,83,[[["self"]],["span"]]],[11,"into",E,E,83,[[],[U]]],[11,"from",E,E,83,[[[T]],[T]]],[11,R[46],E,E,83,[[["self"]],[T]]],[11,R[47],E,E,83,[[["self"],[T]]]],[11,R[4],E,E,83,[[[U]],[R[3]]]],[11,R[5],E,E,83,[[],[R[3]]]],[11,R[7],E,E,83,[[["self"]],[T]]],[11,R[6],E,E,83,[[["self"]],[T]]],[11,R[8],E,E,83,[[["self"]],[R[9]]]],[11,"span",E,E,84,[[["self"]],["span"]]],[11,"into",E,E,84,[[],[U]]],[11,"from",E,E,84,[[[T]],[T]]],[11,R[46],E,E,84,[[["self"]],[T]]],[11,R[47],E,E,84,[[["self"],[T]]]],[11,R[4],E,E,84,[[[U]],[R[3]]]],[11,R[5],E,E,84,[[],[R[3]]]],[11,R[7],E,E,84,[[["self"]],[T]]],[11,R[6],E,E,84,[[["self"]],[T]]],[11,R[8],E,E,84,[[["self"]],[R[9]]]],[11,"span",E,E,85,[[["self"]],["span"]]],[11,"into",E,E,85,[[],[U]]],[11,"from",E,E,85,[[[T]],[T]]],[11,R[46],E,E,85,[[["self"]],[T]]],[11,R[47],E,E,85,[[["self"],[T]]]],[11,R[4],E,E,85,[[[U]],[R[3]]]],[11,R[5],E,E,85,[[],[R[3]]]],[11,R[7],E,E,85,[[["self"]],[T]]],[11,R[6],E,E,85,[[["self"]],[T]]],[11,R[8],E,E,85,[[["self"]],[R[9]]]],[11,"span",E,E,86,[[["self"]],["span"]]],[11,"into",E,E,86,[[],[U]]],[11,"from",E,E,86,[[[T]],[T]]],[11,R[46],E,E,86,[[["self"]],[T]]],[11,R[47],E,E,86,[[["self"],[T]]]],[11,R[4],E,E,86,[[[U]],[R[3]]]],[11,R[5],E,E,86,[[],[R[3]]]],[11,R[7],E,E,86,[[["self"]],[T]]],[11,R[6],E,E,86,[[["self"]],[T]]],[11,R[8],E,E,86,[[["self"]],[R[9]]]],[11,"span",E,E,87,[[["self"]],["span"]]],[11,"into",E,E,87,[[],[U]]],[11,"from",E,E,87,[[[T]],[T]]],[11,R[46],E,E,87,[[["self"]],[T]]],[11,R[47],E,E,87,[[["self"],[T]]]],[11,R[4],E,E,87,[[[U]],[R[3]]]],[11,R[5],E,E,87,[[],[R[3]]]],[11,R[7],E,E,87,[[["self"]],[T]]],[11,R[6],E,E,87,[[["self"]],[T]]],[11,R[8],E,E,87,[[["self"]],[R[9]]]],[11,"span",E,E,88,[[["self"]],["span"]]],[11,"into",E,E,88,[[],[U]]],[11,"from",E,E,88,[[[T]],[T]]],[11,R[46],E,E,88,[[["self"]],[T]]],[11,R[47],E,E,88,[[["self"],[T]]]],[11,R[4],E,E,88,[[[U]],[R[3]]]],[11,R[5],E,E,88,[[],[R[3]]]],[11,R[7],E,E,88,[[["self"]],[T]]],[11,R[6],E,E,88,[[["self"]],[T]]],[11,R[8],E,E,88,[[["self"]],[R[9]]]],[11,"span",E,E,89,[[["self"]],["span"]]],[11,"into",E,E,89,[[],[U]]],[11,"from",E,E,89,[[[T]],[T]]],[11,R[46],E,E,89,[[["self"]],[T]]],[11,R[47],E,E,89,[[["self"],[T]]]],[11,R[4],E,E,89,[[[U]],[R[3]]]],[11,R[5],E,E,89,[[],[R[3]]]],[11,R[7],E,E,89,[[["self"]],[T]]],[11,R[6],E,E,89,[[["self"]],[T]]],[11,R[8],E,E,89,[[["self"]],[R[9]]]],[11,"span",E,E,90,[[["self"]],["span"]]],[11,"into",E,E,90,[[],[U]]],[11,"from",E,E,90,[[[T]],[T]]],[11,R[46],E,E,90,[[["self"]],[T]]],[11,R[47],E,E,90,[[["self"],[T]]]],[11,R[4],E,E,90,[[[U]],[R[3]]]],[11,R[5],E,E,90,[[],[R[3]]]],[11,R[7],E,E,90,[[["self"]],[T]]],[11,R[6],E,E,90,[[["self"]],[T]]],[11,R[8],E,E,90,[[["self"]],[R[9]]]],[11,"span",E,E,91,[[["self"]],["span"]]],[11,"into",E,E,91,[[],[U]]],[11,"from",E,E,91,[[[T]],[T]]],[11,R[46],E,E,91,[[["self"]],[T]]],[11,R[47],E,E,91,[[["self"],[T]]]],[11,R[4],E,E,91,[[[U]],[R[3]]]],[11,R[5],E,E,91,[[],[R[3]]]],[11,R[7],E,E,91,[[["self"]],[T]]],[11,R[6],E,E,91,[[["self"]],[T]]],[11,R[8],E,E,91,[[["self"]],[R[9]]]],[11,"span",E,E,92,[[["self"]],["span"]]],[11,"into",E,E,92,[[],[U]]],[11,"from",E,E,92,[[[T]],[T]]],[11,R[46],E,E,92,[[["self"]],[T]]],[11,R[47],E,E,92,[[["self"],[T]]]],[11,R[4],E,E,92,[[[U]],[R[3]]]],[11,R[5],E,E,92,[[],[R[3]]]],[11,R[7],E,E,92,[[["self"]],[T]]],[11,R[6],E,E,92,[[["self"]],[T]]],[11,R[8],E,E,92,[[["self"]],[R[9]]]],[11,"span",E,E,93,[[["self"]],["span"]]],[11,"into",E,E,93,[[],[U]]],[11,"from",E,E,93,[[[T]],[T]]],[11,R[46],E,E,93,[[["self"]],[T]]],[11,R[47],E,E,93,[[["self"],[T]]]],[11,R[4],E,E,93,[[[U]],[R[3]]]],[11,R[5],E,E,93,[[],[R[3]]]],[11,R[7],E,E,93,[[["self"]],[T]]],[11,R[6],E,E,93,[[["self"]],[T]]],[11,R[8],E,E,93,[[["self"]],[R[9]]]],[11,"span",E,E,94,[[["self"]],["span"]]],[11,"into",E,E,94,[[],[U]]],[11,"from",E,E,94,[[[T]],[T]]],[11,R[46],E,E,94,[[["self"]],[T]]],[11,R[47],E,E,94,[[["self"],[T]]]],[11,R[4],E,E,94,[[[U]],[R[3]]]],[11,R[5],E,E,94,[[],[R[3]]]],[11,R[7],E,E,94,[[["self"]],[T]]],[11,R[6],E,E,94,[[["self"]],[T]]],[11,R[8],E,E,94,[[["self"]],[R[9]]]],[11,"span",E,E,95,[[["self"]],["span"]]],[11,"into",E,E,95,[[],[U]]],[11,"from",E,E,95,[[[T]],[T]]],[11,R[46],E,E,95,[[["self"]],[T]]],[11,R[47],E,E,95,[[["self"],[T]]]],[11,R[4],E,E,95,[[[U]],[R[3]]]],[11,R[5],E,E,95,[[],[R[3]]]],[11,R[7],E,E,95,[[["self"]],[T]]],[11,R[6],E,E,95,[[["self"]],[T]]],[11,R[8],E,E,95,[[["self"]],[R[9]]]],[11,"span",E,E,96,[[["self"]],["span"]]],[11,"into",E,E,96,[[],[U]]],[11,"from",E,E,96,[[[T]],[T]]],[11,R[46],E,E,96,[[["self"]],[T]]],[11,R[47],E,E,96,[[["self"],[T]]]],[11,R[4],E,E,96,[[[U]],[R[3]]]],[11,R[5],E,E,96,[[],[R[3]]]],[11,R[7],E,E,96,[[["self"]],[T]]],[11,R[6],E,E,96,[[["self"]],[T]]],[11,R[8],E,E,96,[[["self"]],[R[9]]]],[11,"span",E,E,97,[[["self"]],["span"]]],[11,"into",E,E,97,[[],[U]]],[11,"from",E,E,97,[[[T]],[T]]],[11,R[46],E,E,97,[[["self"]],[T]]],[11,R[47],E,E,97,[[["self"],[T]]]],[11,R[4],E,E,97,[[[U]],[R[3]]]],[11,R[5],E,E,97,[[],[R[3]]]],[11,R[7],E,E,97,[[["self"]],[T]]],[11,R[6],E,E,97,[[["self"]],[T]]],[11,R[8],E,E,97,[[["self"]],[R[9]]]],[11,"span",E,E,98,[[["self"]],["span"]]],[11,"into",E,E,98,[[],[U]]],[11,"from",E,E,98,[[[T]],[T]]],[11,R[46],E,E,98,[[["self"]],[T]]],[11,R[47],E,E,98,[[["self"],[T]]]],[11,R[4],E,E,98,[[[U]],[R[3]]]],[11,R[5],E,E,98,[[],[R[3]]]],[11,R[7],E,E,98,[[["self"]],[T]]],[11,R[6],E,E,98,[[["self"]],[T]]],[11,R[8],E,E,98,[[["self"]],[R[9]]]],[11,"span",E,E,99,[[["self"]],["span"]]],[11,"into",E,E,99,[[],[U]]],[11,"from",E,E,99,[[[T]],[T]]],[11,R[46],E,E,99,[[["self"]],[T]]],[11,R[47],E,E,99,[[["self"],[T]]]],[11,R[4],E,E,99,[[[U]],[R[3]]]],[11,R[5],E,E,99,[[],[R[3]]]],[11,R[7],E,E,99,[[["self"]],[T]]],[11,R[6],E,E,99,[[["self"]],[T]]],[11,R[8],E,E,99,[[["self"]],[R[9]]]],[11,"span",E,E,100,[[["self"]],["span"]]],[11,"into",E,E,100,[[],[U]]],[11,"from",E,E,100,[[[T]],[T]]],[11,R[46],E,E,100,[[["self"]],[T]]],[11,R[47],E,E,100,[[["self"],[T]]]],[11,R[4],E,E,100,[[[U]],[R[3]]]],[11,R[5],E,E,100,[[],[R[3]]]],[11,R[7],E,E,100,[[["self"]],[T]]],[11,R[6],E,E,100,[[["self"]],[T]]],[11,R[8],E,E,100,[[["self"]],[R[9]]]],[11,"peek",E,E,101,[[["cursor"]],["bool"]]],[11,"display",E,E,101,[[],["str"]]],[11,"span",E,E,101,[[["self"]],["span"]]],[11,"into",E,E,101,[[],[U]]],[11,R[113],E,E,101,[[["self"]],["string"]]],[11,"from",E,E,101,[[[T]],[T]]],[11,R[46],E,E,101,[[["self"]],[T]]],[11,R[47],E,E,101,[[["self"],[T]]]],[11,R[4],E,E,101,[[[U]],[R[3]]]],[11,R[5],E,E,101,[[],[R[3]]]],[11,R[7],E,E,101,[[["self"]],[T]]],[11,R[6],E,E,101,[[["self"]],[T]]],[11,R[8],E,E,101,[[["self"]],[R[9]]]],[11,"peek",E,E,102,[[["cursor"]],["bool"]]],[11,"display",E,E,102,[[],["str"]]],[11,"span",E,E,102,[[["self"]],["span"]]],[11,"into",E,E,102,[[],[U]]],[11,"from",E,E,102,[[[T]],[T]]],[11,R[46],E,E,102,[[["self"]],[T]]],[11,R[47],E,E,102,[[["self"],[T]]]],[11,R[4],E,E,102,[[[U]],[R[3]]]],[11,R[5],E,E,102,[[],[R[3]]]],[11,R[7],E,E,102,[[["self"]],[T]]],[11,R[6],E,E,102,[[["self"]],[T]]],[11,R[8],E,E,102,[[["self"]],[R[9]]]],[11,"peek",E,E,286,[[["cursor"]],["bool"]]],[11,"display",E,E,286,[[],["str"]]],[11,"span",E,E,286,[[["self"]],["span"]]],[11,"into",E,E,286,[[],[U]]],[11,"from",E,E,286,[[[T]],[T]]],[11,R[46],E,E,286,[[["self"]],[T]]],[11,R[47],E,E,286,[[["self"],[T]]]],[11,R[4],E,E,286,[[[U]],[R[3]]]],[11,R[5],E,E,286,[[],[R[3]]]],[11,R[7],E,E,286,[[["self"]],[T]]],[11,R[6],E,E,286,[[["self"]],[T]]],[11,R[8],E,E,286,[[["self"]],[R[9]]]],[11,"peek",E,E,285,[[["cursor"]],["bool"]]],[11,"display",E,E,285,[[],["str"]]],[11,"span",E,E,285,[[["self"]],["span"]]],[11,"into",E,E,285,[[],[U]]],[11,"from",E,E,285,[[[T]],[T]]],[11,R[46],E,E,285,[[["self"]],[T]]],[11,R[47],E,E,285,[[["self"],[T]]]],[11,R[4],E,E,285,[[[U]],[R[3]]]],[11,R[5],E,E,285,[[],[R[3]]]],[11,R[7],E,E,285,[[["self"]],[T]]],[11,R[6],E,E,285,[[["self"]],[T]]],[11,R[8],E,E,285,[[["self"]],[R[9]]]],[11,"peek",E,E,287,[[["cursor"]],["bool"]]],[11,"display",E,E,287,[[],["str"]]],[11,"span",E,E,287,[[["self"]],["span"]]],[11,"into",E,E,287,[[],[U]]],[11,"from",E,E,287,[[[T]],[T]]],[11,R[46],E,E,287,[[["self"]],[T]]],[11,R[47],E,E,287,[[["self"],[T]]]],[11,R[4],E,E,287,[[[U]],[R[3]]]],[11,R[5],E,E,287,[[],[R[3]]]],[11,R[7],E,E,287,[[["self"]],[T]]],[11,R[6],E,E,287,[[["self"]],[T]]],[11,R[8],E,E,287,[[["self"]],[R[9]]]],[11,"peek",E,E,289,[[["cursor"]],["bool"]]],[11,"display",E,E,289,[[],["str"]]],[11,"span",E,E,289,[[["self"]],["span"]]],[11,"into",E,E,289,[[],[U]]],[11,R[113],E,E,289,[[["self"]],["string"]]],[11,"from",E,E,289,[[[T]],[T]]],[11,R[46],E,E,289,[[["self"]],[T]]],[11,R[47],E,E,289,[[["self"],[T]]]],[11,R[4],E,E,289,[[[U]],[R[3]]]],[11,R[5],E,E,289,[[],[R[3]]]],[11,R[7],E,E,289,[[["self"]],[T]]],[11,R[6],E,E,289,[[["self"]],[T]]],[11,R[8],E,E,289,[[["self"]],[R[9]]]],[11,"peek",E,E,288,[[["cursor"]],["bool"]]],[11,"display",E,E,288,[[],["str"]]],[11,"span",E,E,288,[[["self"]],["span"]]],[11,"into",E,E,288,[[],[U]]],[11,R[113],E,E,288,[[["self"]],["string"]]],[11,"from",E,E,288,[[[T]],[T]]],[11,R[46],E,E,288,[[["self"]],[T]]],[11,R[47],E,E,288,[[["self"],[T]]]],[11,R[4],E,E,288,[[[U]],[R[3]]]],[11,R[5],E,E,288,[[],[R[3]]]],[11,R[7],E,E,288,[[["self"]],[T]]],[11,R[6],E,E,288,[[["self"]],[T]]],[11,R[8],E,E,288,[[["self"]],[R[9]]]],[11,"peek",E,E,284,[[["cursor"]],["bool"]]],[11,"display",E,E,284,[[],["str"]]],[11,"span",E,E,284,[[["self"]],["span"]]],[11,"into",E,E,284,[[],[U]]],[11,"from",E,E,284,[[[T]],[T]]],[11,R[46],E,E,284,[[["self"]],[T]]],[11,R[47],E,E,284,[[["self"],[T]]]],[11,R[4],E,E,284,[[[U]],[R[3]]]],[11,R[5],E,E,284,[[],[R[3]]]],[11,R[7],E,E,284,[[["self"]],[T]]],[11,R[6],E,E,284,[[["self"]],[T]]],[11,R[8],E,E,284,[[["self"]],[R[9]]]],[11,"span",E,E,103,[[["self"]],["span"]]],[11,"into",E,E,103,[[],[U]]],[11,"from",E,E,103,[[[T]],[T]]],[11,R[46],E,E,103,[[["self"]],[T]]],[11,R[47],E,E,103,[[["self"],[T]]]],[11,R[4],E,E,103,[[[U]],[R[3]]]],[11,R[5],E,E,103,[[],[R[3]]]],[11,R[7],E,E,103,[[["self"]],[T]]],[11,R[6],E,E,103,[[["self"]],[T]]],[11,R[8],E,E,103,[[["self"]],[R[9]]]],[11,"into",E,E,104,[[],[U]]],[11,"from",E,E,104,[[[T]],[T]]],[11,R[46],E,E,104,[[["self"]],[T]]],[11,R[47],E,E,104,[[["self"],[T]]]],[11,R[4],E,E,104,[[[U]],[R[3]]]],[11,R[5],E,E,104,[[],[R[3]]]],[11,R[7],E,E,104,[[["self"]],[T]]],[11,R[6],E,E,104,[[["self"]],[T]]],[11,R[8],E,E,104,[[["self"]],[R[9]]]],[11,"into",E,E,105,[[],[U]]],[11,"from",E,E,105,[[[T]],[T]]],[11,R[46],E,E,105,[[["self"]],[T]]],[11,R[47],E,E,105,[[["self"],[T]]]],[11,R[4],E,E,105,[[[U]],[R[3]]]],[11,R[5],E,E,105,[[],[R[3]]]],[11,R[7],E,E,105,[[["self"]],[T]]],[11,R[6],E,E,105,[[["self"]],[T]]],[11,R[8],E,E,105,[[["self"]],[R[9]]]],[11,"into",E,E,106,[[],[U]]],[11,"from",E,E,106,[[[T]],[T]]],[11,R[46],E,E,106,[[["self"]],[T]]],[11,R[47],E,E,106,[[["self"],[T]]]],[11,R[4],E,E,106,[[[U]],[R[3]]]],[11,R[5],E,E,106,[[],[R[3]]]],[11,R[7],E,E,106,[[["self"]],[T]]],[11,R[6],E,E,106,[[["self"]],[T]]],[11,R[8],E,E,106,[[["self"]],[R[9]]]],[11,"span",E,E,107,[[["self"]],["span"]]],[11,"into",E,E,107,[[],[U]]],[11,"from",E,E,107,[[[T]],[T]]],[11,R[46],E,E,107,[[["self"]],[T]]],[11,R[47],E,E,107,[[["self"],[T]]]],[11,R[4],E,E,107,[[[U]],[R[3]]]],[11,R[5],E,E,107,[[],[R[3]]]],[11,R[7],E,E,107,[[["self"]],[T]]],[11,R[6],E,E,107,[[["self"]],[T]]],[11,R[8],E,E,107,[[["self"]],[R[9]]]],[11,"span",E,E,108,[[["self"]],["span"]]],[11,"into",E,E,108,[[],[U]]],[11,"from",E,E,108,[[[T]],[T]]],[11,R[46],E,E,108,[[["self"]],[T]]],[11,R[47],E,E,108,[[["self"],[T]]]],[11,R[4],E,E,108,[[[U]],[R[3]]]],[11,R[5],E,E,108,[[],[R[3]]]],[11,R[7],E,E,108,[[["self"]],[T]]],[11,R[6],E,E,108,[[["self"]],[T]]],[11,R[8],E,E,108,[[["self"]],[R[9]]]],[11,"span",E,E,109,[[["self"]],["span"]]],[11,"into",E,E,109,[[],[U]]],[11,"from",E,E,109,[[[T]],[T]]],[11,R[46],E,E,109,[[["self"]],[T]]],[11,R[47],E,E,109,[[["self"],[T]]]],[11,R[4],E,E,109,[[[U]],[R[3]]]],[11,R[5],E,E,109,[[],[R[3]]]],[11,R[7],E,E,109,[[["self"]],[T]]],[11,R[6],E,E,109,[[["self"]],[T]]],[11,R[8],E,E,109,[[["self"]],[R[9]]]],[11,"span",E,E,110,[[["self"]],["span"]]],[11,"into",E,E,110,[[],[U]]],[11,"from",E,E,110,[[[T]],[T]]],[11,R[46],E,E,110,[[["self"]],[T]]],[11,R[47],E,E,110,[[["self"],[T]]]],[11,R[4],E,E,110,[[[U]],[R[3]]]],[11,R[5],E,E,110,[[],[R[3]]]],[11,R[7],E,E,110,[[["self"]],[T]]],[11,R[6],E,E,110,[[["self"]],[T]]],[11,R[8],E,E,110,[[["self"]],[R[9]]]],[11,"span",E,E,111,[[["self"]],["span"]]],[11,"into",E,E,111,[[],[U]]],[11,"from",E,E,111,[[[T]],[T]]],[11,R[46],E,E,111,[[["self"]],[T]]],[11,R[47],E,E,111,[[["self"],[T]]]],[11,R[4],E,E,111,[[[U]],[R[3]]]],[11,R[5],E,E,111,[[],[R[3]]]],[11,R[7],E,E,111,[[["self"]],[T]]],[11,R[6],E,E,111,[[["self"]],[T]]],[11,R[8],E,E,111,[[["self"]],[R[9]]]],[11,"span",E,E,112,[[["self"]],["span"]]],[11,"into",E,E,112,[[],[U]]],[11,"from",E,E,112,[[[T]],[T]]],[11,R[46],E,E,112,[[["self"]],[T]]],[11,R[47],E,E,112,[[["self"],[T]]]],[11,R[4],E,E,112,[[[U]],[R[3]]]],[11,R[5],E,E,112,[[],[R[3]]]],[11,R[7],E,E,112,[[["self"]],[T]]],[11,R[6],E,E,112,[[["self"]],[T]]],[11,R[8],E,E,112,[[["self"]],[R[9]]]],[11,"span",E,E,113,[[["self"]],["span"]]],[11,"into",E,E,113,[[],[U]]],[11,"from",E,E,113,[[[T]],[T]]],[11,R[46],E,E,113,[[["self"]],[T]]],[11,R[47],E,E,113,[[["self"],[T]]]],[11,R[4],E,E,113,[[[U]],[R[3]]]],[11,R[5],E,E,113,[[],[R[3]]]],[11,R[7],E,E,113,[[["self"]],[T]]],[11,R[6],E,E,113,[[["self"]],[T]]],[11,R[8],E,E,113,[[["self"]],[R[9]]]],[11,"span",E,E,114,[[["self"]],["span"]]],[11,"into",E,E,114,[[],[U]]],[11,"from",E,E,114,[[[T]],[T]]],[11,R[46],E,E,114,[[["self"]],[T]]],[11,R[47],E,E,114,[[["self"],[T]]]],[11,R[4],E,E,114,[[[U]],[R[3]]]],[11,R[5],E,E,114,[[],[R[3]]]],[11,R[7],E,E,114,[[["self"]],[T]]],[11,R[6],E,E,114,[[["self"]],[T]]],[11,R[8],E,E,114,[[["self"]],[R[9]]]],[11,"span",E,E,115,[[["self"]],["span"]]],[11,"into",E,E,115,[[],[U]]],[11,"from",E,E,115,[[[T]],[T]]],[11,R[46],E,E,115,[[["self"]],[T]]],[11,R[47],E,E,115,[[["self"],[T]]]],[11,R[4],E,E,115,[[[U]],[R[3]]]],[11,R[5],E,E,115,[[],[R[3]]]],[11,R[7],E,E,115,[[["self"]],[T]]],[11,R[6],E,E,115,[[["self"]],[T]]],[11,R[8],E,E,115,[[["self"]],[R[9]]]],[11,"span",E,E,116,[[["self"]],["span"]]],[11,"into",E,E,116,[[],[U]]],[11,"from",E,E,116,[[[T]],[T]]],[11,R[46],E,E,116,[[["self"]],[T]]],[11,R[47],E,E,116,[[["self"],[T]]]],[11,R[4],E,E,116,[[[U]],[R[3]]]],[11,R[5],E,E,116,[[],[R[3]]]],[11,R[7],E,E,116,[[["self"]],[T]]],[11,R[6],E,E,116,[[["self"]],[T]]],[11,R[8],E,E,116,[[["self"]],[R[9]]]],[11,"span",E,E,117,[[["self"]],["span"]]],[11,"into",E,E,117,[[],[U]]],[11,"from",E,E,117,[[[T]],[T]]],[11,R[46],E,E,117,[[["self"]],[T]]],[11,R[47],E,E,117,[[["self"],[T]]]],[11,R[4],E,E,117,[[[U]],[R[3]]]],[11,R[5],E,E,117,[[],[R[3]]]],[11,R[7],E,E,117,[[["self"]],[T]]],[11,R[6],E,E,117,[[["self"]],[T]]],[11,R[8],E,E,117,[[["self"]],[R[9]]]],[11,"span",E,E,118,[[["self"]],["span"]]],[11,"into",E,E,118,[[],[U]]],[11,"from",E,E,118,[[[T]],[T]]],[11,R[46],E,E,118,[[["self"]],[T]]],[11,R[47],E,E,118,[[["self"],[T]]]],[11,R[4],E,E,118,[[[U]],[R[3]]]],[11,R[5],E,E,118,[[],[R[3]]]],[11,R[7],E,E,118,[[["self"]],[T]]],[11,R[6],E,E,118,[[["self"]],[T]]],[11,R[8],E,E,118,[[["self"]],[R[9]]]],[11,"span",E,E,119,[[["self"]],["span"]]],[11,"into",E,E,119,[[],[U]]],[11,"from",E,E,119,[[[T]],[T]]],[11,R[46],E,E,119,[[["self"]],[T]]],[11,R[47],E,E,119,[[["self"],[T]]]],[11,R[4],E,E,119,[[[U]],[R[3]]]],[11,R[5],E,E,119,[[],[R[3]]]],[11,R[7],E,E,119,[[["self"]],[T]]],[11,R[6],E,E,119,[[["self"]],[T]]],[11,R[8],E,E,119,[[["self"]],[R[9]]]],[11,"span",E,E,120,[[["self"]],["span"]]],[11,"into",E,E,120,[[],[U]]],[11,"from",E,E,120,[[[T]],[T]]],[11,R[46],E,E,120,[[["self"]],[T]]],[11,R[47],E,E,120,[[["self"],[T]]]],[11,R[4],E,E,120,[[[U]],[R[3]]]],[11,R[5],E,E,120,[[],[R[3]]]],[11,R[7],E,E,120,[[["self"]],[T]]],[11,R[6],E,E,120,[[["self"]],[T]]],[11,R[8],E,E,120,[[["self"]],[R[9]]]],[11,"span",E,E,121,[[["self"]],["span"]]],[11,"into",E,E,121,[[],[U]]],[11,"from",E,E,121,[[[T]],[T]]],[11,R[46],E,E,121,[[["self"]],[T]]],[11,R[47],E,E,121,[[["self"],[T]]]],[11,R[4],E,E,121,[[[U]],[R[3]]]],[11,R[5],E,E,121,[[],[R[3]]]],[11,R[7],E,E,121,[[["self"]],[T]]],[11,R[6],E,E,121,[[["self"]],[T]]],[11,R[8],E,E,121,[[["self"]],[R[9]]]],[11,"span",E,E,122,[[["self"]],["span"]]],[11,"into",E,E,122,[[],[U]]],[11,"from",E,E,122,[[[T]],[T]]],[11,R[46],E,E,122,[[["self"]],[T]]],[11,R[47],E,E,122,[[["self"],[T]]]],[11,R[4],E,E,122,[[[U]],[R[3]]]],[11,R[5],E,E,122,[[],[R[3]]]],[11,R[7],E,E,122,[[["self"]],[T]]],[11,R[6],E,E,122,[[["self"]],[T]]],[11,R[8],E,E,122,[[["self"]],[R[9]]]],[11,"span",E,E,123,[[["self"]],["span"]]],[11,"into",E,E,123,[[],[U]]],[11,"from",E,E,123,[[[T]],[T]]],[11,R[46],E,E,123,[[["self"]],[T]]],[11,R[47],E,E,123,[[["self"],[T]]]],[11,R[4],E,E,123,[[[U]],[R[3]]]],[11,R[5],E,E,123,[[],[R[3]]]],[11,R[7],E,E,123,[[["self"]],[T]]],[11,R[6],E,E,123,[[["self"]],[T]]],[11,R[8],E,E,123,[[["self"]],[R[9]]]],[11,"span",E,E,124,[[["self"]],["span"]]],[11,"into",E,E,124,[[],[U]]],[11,"from",E,E,124,[[[T]],[T]]],[11,R[46],E,E,124,[[["self"]],[T]]],[11,R[47],E,E,124,[[["self"],[T]]]],[11,R[4],E,E,124,[[[U]],[R[3]]]],[11,R[5],E,E,124,[[],[R[3]]]],[11,R[7],E,E,124,[[["self"]],[T]]],[11,R[6],E,E,124,[[["self"]],[T]]],[11,R[8],E,E,124,[[["self"]],[R[9]]]],[11,"span",E,E,125,[[["self"]],["span"]]],[11,"into",E,E,125,[[],[U]]],[11,"from",E,E,125,[[[T]],[T]]],[11,R[46],E,E,125,[[["self"]],[T]]],[11,R[47],E,E,125,[[["self"],[T]]]],[11,R[4],E,E,125,[[[U]],[R[3]]]],[11,R[5],E,E,125,[[],[R[3]]]],[11,R[7],E,E,125,[[["self"]],[T]]],[11,R[6],E,E,125,[[["self"]],[T]]],[11,R[8],E,E,125,[[["self"]],[R[9]]]],[11,"span",E,E,126,[[["self"]],["span"]]],[11,"into",E,E,126,[[],[U]]],[11,"from",E,E,126,[[[T]],[T]]],[11,R[46],E,E,126,[[["self"]],[T]]],[11,R[47],E,E,126,[[["self"],[T]]]],[11,R[4],E,E,126,[[[U]],[R[3]]]],[11,R[5],E,E,126,[[],[R[3]]]],[11,R[7],E,E,126,[[["self"]],[T]]],[11,R[6],E,E,126,[[["self"]],[T]]],[11,R[8],E,E,126,[[["self"]],[R[9]]]],[11,"span",E,E,127,[[["self"]],["span"]]],[11,"into",E,E,127,[[],[U]]],[11,"from",E,E,127,[[[T]],[T]]],[11,R[46],E,E,127,[[["self"]],[T]]],[11,R[47],E,E,127,[[["self"],[T]]]],[11,R[4],E,E,127,[[[U]],[R[3]]]],[11,R[5],E,E,127,[[],[R[3]]]],[11,R[7],E,E,127,[[["self"]],[T]]],[11,R[6],E,E,127,[[["self"]],[T]]],[11,R[8],E,E,127,[[["self"]],[R[9]]]],[11,"span",E,E,128,[[["self"]],["span"]]],[11,"into",E,E,128,[[],[U]]],[11,"from",E,E,128,[[[T]],[T]]],[11,R[46],E,E,128,[[["self"]],[T]]],[11,R[47],E,E,128,[[["self"],[T]]]],[11,R[4],E,E,128,[[[U]],[R[3]]]],[11,R[5],E,E,128,[[],[R[3]]]],[11,R[7],E,E,128,[[["self"]],[T]]],[11,R[6],E,E,128,[[["self"]],[T]]],[11,R[8],E,E,128,[[["self"]],[R[9]]]],[11,"span",E,E,129,[[["self"]],["span"]]],[11,"into",E,E,129,[[],[U]]],[11,"from",E,E,129,[[[T]],[T]]],[11,R[46],E,E,129,[[["self"]],[T]]],[11,R[47],E,E,129,[[["self"],[T]]]],[11,R[4],E,E,129,[[[U]],[R[3]]]],[11,R[5],E,E,129,[[],[R[3]]]],[11,R[7],E,E,129,[[["self"]],[T]]],[11,R[6],E,E,129,[[["self"]],[T]]],[11,R[8],E,E,129,[[["self"]],[R[9]]]],[11,"span",E,E,130,[[["self"]],["span"]]],[11,"into",E,E,130,[[],[U]]],[11,"from",E,E,130,[[[T]],[T]]],[11,R[46],E,E,130,[[["self"]],[T]]],[11,R[47],E,E,130,[[["self"],[T]]]],[11,R[4],E,E,130,[[[U]],[R[3]]]],[11,R[5],E,E,130,[[],[R[3]]]],[11,R[7],E,E,130,[[["self"]],[T]]],[11,R[6],E,E,130,[[["self"]],[T]]],[11,R[8],E,E,130,[[["self"]],[R[9]]]],[11,"span",E,E,131,[[["self"]],["span"]]],[11,"into",E,E,131,[[],[U]]],[11,"from",E,E,131,[[[T]],[T]]],[11,R[46],E,E,131,[[["self"]],[T]]],[11,R[47],E,E,131,[[["self"],[T]]]],[11,R[4],E,E,131,[[[U]],[R[3]]]],[11,R[5],E,E,131,[[],[R[3]]]],[11,R[7],E,E,131,[[["self"]],[T]]],[11,R[6],E,E,131,[[["self"]],[T]]],[11,R[8],E,E,131,[[["self"]],[R[9]]]],[11,"span",E,E,132,[[["self"]],["span"]]],[11,"into",E,E,132,[[],[U]]],[11,"from",E,E,132,[[[T]],[T]]],[11,R[46],E,E,132,[[["self"]],[T]]],[11,R[47],E,E,132,[[["self"],[T]]]],[11,R[4],E,E,132,[[[U]],[R[3]]]],[11,R[5],E,E,132,[[],[R[3]]]],[11,R[7],E,E,132,[[["self"]],[T]]],[11,R[6],E,E,132,[[["self"]],[T]]],[11,R[8],E,E,132,[[["self"]],[R[9]]]],[11,"span",E,E,133,[[["self"]],["span"]]],[11,"into",E,E,133,[[],[U]]],[11,"from",E,E,133,[[[T]],[T]]],[11,R[46],E,E,133,[[["self"]],[T]]],[11,R[47],E,E,133,[[["self"],[T]]]],[11,R[4],E,E,133,[[[U]],[R[3]]]],[11,R[5],E,E,133,[[],[R[3]]]],[11,R[7],E,E,133,[[["self"]],[T]]],[11,R[6],E,E,133,[[["self"]],[T]]],[11,R[8],E,E,133,[[["self"]],[R[9]]]],[11,"span",E,E,134,[[["self"]],["span"]]],[11,"into",E,E,134,[[],[U]]],[11,"from",E,E,134,[[[T]],[T]]],[11,R[46],E,E,134,[[["self"]],[T]]],[11,R[47],E,E,134,[[["self"],[T]]]],[11,R[4],E,E,134,[[[U]],[R[3]]]],[11,R[5],E,E,134,[[],[R[3]]]],[11,R[7],E,E,134,[[["self"]],[T]]],[11,R[6],E,E,134,[[["self"]],[T]]],[11,R[8],E,E,134,[[["self"]],[R[9]]]],[11,"span",E,E,135,[[["self"]],["span"]]],[11,"into",E,E,135,[[],[U]]],[11,"from",E,E,135,[[[T]],[T]]],[11,R[46],E,E,135,[[["self"]],[T]]],[11,R[47],E,E,135,[[["self"],[T]]]],[11,R[4],E,E,135,[[[U]],[R[3]]]],[11,R[5],E,E,135,[[],[R[3]]]],[11,R[7],E,E,135,[[["self"]],[T]]],[11,R[6],E,E,135,[[["self"]],[T]]],[11,R[8],E,E,135,[[["self"]],[R[9]]]],[11,"span",E,E,136,[[["self"]],["span"]]],[11,"into",E,E,136,[[],[U]]],[11,"from",E,E,136,[[[T]],[T]]],[11,R[46],E,E,136,[[["self"]],[T]]],[11,R[47],E,E,136,[[["self"],[T]]]],[11,R[4],E,E,136,[[[U]],[R[3]]]],[11,R[5],E,E,136,[[],[R[3]]]],[11,R[7],E,E,136,[[["self"]],[T]]],[11,R[6],E,E,136,[[["self"]],[T]]],[11,R[8],E,E,136,[[["self"]],[R[9]]]],[11,"span",E,E,137,[[["self"]],["span"]]],[11,"into",E,E,137,[[],[U]]],[11,"from",E,E,137,[[[T]],[T]]],[11,R[46],E,E,137,[[["self"]],[T]]],[11,R[47],E,E,137,[[["self"],[T]]]],[11,R[4],E,E,137,[[[U]],[R[3]]]],[11,R[5],E,E,137,[[],[R[3]]]],[11,R[7],E,E,137,[[["self"]],[T]]],[11,R[6],E,E,137,[[["self"]],[T]]],[11,R[8],E,E,137,[[["self"]],[R[9]]]],[11,"span",E,E,138,[[["self"]],["span"]]],[11,"into",E,E,138,[[],[U]]],[11,"from",E,E,138,[[[T]],[T]]],[11,R[46],E,E,138,[[["self"]],[T]]],[11,R[47],E,E,138,[[["self"],[T]]]],[11,R[4],E,E,138,[[[U]],[R[3]]]],[11,R[5],E,E,138,[[],[R[3]]]],[11,R[7],E,E,138,[[["self"]],[T]]],[11,R[6],E,E,138,[[["self"]],[T]]],[11,R[8],E,E,138,[[["self"]],[R[9]]]],[11,"span",E,E,139,[[["self"]],["span"]]],[11,"into",E,E,139,[[],[U]]],[11,"from",E,E,139,[[[T]],[T]]],[11,R[46],E,E,139,[[["self"]],[T]]],[11,R[47],E,E,139,[[["self"],[T]]]],[11,R[4],E,E,139,[[[U]],[R[3]]]],[11,R[5],E,E,139,[[],[R[3]]]],[11,R[7],E,E,139,[[["self"]],[T]]],[11,R[6],E,E,139,[[["self"]],[T]]],[11,R[8],E,E,139,[[["self"]],[R[9]]]],[11,"span",E,E,140,[[["self"]],["span"]]],[11,"into",E,E,140,[[],[U]]],[11,"from",E,E,140,[[[T]],[T]]],[11,R[46],E,E,140,[[["self"]],[T]]],[11,R[47],E,E,140,[[["self"],[T]]]],[11,R[4],E,E,140,[[[U]],[R[3]]]],[11,R[5],E,E,140,[[],[R[3]]]],[11,R[7],E,E,140,[[["self"]],[T]]],[11,R[6],E,E,140,[[["self"]],[T]]],[11,R[8],E,E,140,[[["self"]],[R[9]]]],[11,"span",E,E,141,[[["self"]],["span"]]],[11,"into",E,E,141,[[],[U]]],[11,"from",E,E,141,[[[T]],[T]]],[11,R[46],E,E,141,[[["self"]],[T]]],[11,R[47],E,E,141,[[["self"],[T]]]],[11,R[4],E,E,141,[[[U]],[R[3]]]],[11,R[5],E,E,141,[[],[R[3]]]],[11,R[7],E,E,141,[[["self"]],[T]]],[11,R[6],E,E,141,[[["self"]],[T]]],[11,R[8],E,E,141,[[["self"]],[R[9]]]],[11,"span",E,E,142,[[["self"]],["span"]]],[11,"into",E,E,142,[[],[U]]],[11,"from",E,E,142,[[[T]],[T]]],[11,R[46],E,E,142,[[["self"]],[T]]],[11,R[47],E,E,142,[[["self"],[T]]]],[11,R[4],E,E,142,[[[U]],[R[3]]]],[11,R[5],E,E,142,[[],[R[3]]]],[11,R[7],E,E,142,[[["self"]],[T]]],[11,R[6],E,E,142,[[["self"]],[T]]],[11,R[8],E,E,142,[[["self"]],[R[9]]]],[11,"span",E,E,143,[[["self"]],["span"]]],[11,"into",E,E,143,[[],[U]]],[11,"from",E,E,143,[[[T]],[T]]],[11,R[46],E,E,143,[[["self"]],[T]]],[11,R[47],E,E,143,[[["self"],[T]]]],[11,R[4],E,E,143,[[[U]],[R[3]]]],[11,R[5],E,E,143,[[],[R[3]]]],[11,R[7],E,E,143,[[["self"]],[T]]],[11,R[6],E,E,143,[[["self"]],[T]]],[11,R[8],E,E,143,[[["self"]],[R[9]]]],[11,"span",E,E,144,[[["self"]],["span"]]],[11,"into",E,E,144,[[],[U]]],[11,"from",E,E,144,[[[T]],[T]]],[11,R[46],E,E,144,[[["self"]],[T]]],[11,R[47],E,E,144,[[["self"],[T]]]],[11,R[4],E,E,144,[[[U]],[R[3]]]],[11,R[5],E,E,144,[[],[R[3]]]],[11,R[7],E,E,144,[[["self"]],[T]]],[11,R[6],E,E,144,[[["self"]],[T]]],[11,R[8],E,E,144,[[["self"]],[R[9]]]],[11,"span",E,E,145,[[["self"]],["span"]]],[11,"into",E,E,145,[[],[U]]],[11,"from",E,E,145,[[[T]],[T]]],[11,R[46],E,E,145,[[["self"]],[T]]],[11,R[47],E,E,145,[[["self"],[T]]]],[11,R[4],E,E,145,[[[U]],[R[3]]]],[11,R[5],E,E,145,[[],[R[3]]]],[11,R[7],E,E,145,[[["self"]],[T]]],[11,R[6],E,E,145,[[["self"]],[T]]],[11,R[8],E,E,145,[[["self"]],[R[9]]]],[11,"span",E,E,146,[[["self"]],["span"]]],[11,"into",E,E,146,[[],[U]]],[11,"from",E,E,146,[[[T]],[T]]],[11,R[46],E,E,146,[[["self"]],[T]]],[11,R[47],E,E,146,[[["self"],[T]]]],[11,R[4],E,E,146,[[[U]],[R[3]]]],[11,R[5],E,E,146,[[],[R[3]]]],[11,R[7],E,E,146,[[["self"]],[T]]],[11,R[6],E,E,146,[[["self"]],[T]]],[11,R[8],E,E,146,[[["self"]],[R[9]]]],[11,"span",E,E,147,[[["self"]],["span"]]],[11,"into",E,E,147,[[],[U]]],[11,"from",E,E,147,[[[T]],[T]]],[11,R[46],E,E,147,[[["self"]],[T]]],[11,R[47],E,E,147,[[["self"],[T]]]],[11,R[4],E,E,147,[[[U]],[R[3]]]],[11,R[5],E,E,147,[[],[R[3]]]],[11,R[7],E,E,147,[[["self"]],[T]]],[11,R[6],E,E,147,[[["self"]],[T]]],[11,R[8],E,E,147,[[["self"]],[R[9]]]],[11,"into",E,E,148,[[],[U]]],[11,"from",E,E,148,[[[T]],[T]]],[11,R[46],E,E,148,[[["self"]],[T]]],[11,R[47],E,E,148,[[["self"],[T]]]],[11,R[4],E,E,148,[[[U]],[R[3]]]],[11,R[5],E,E,148,[[],[R[3]]]],[11,R[7],E,E,148,[[["self"]],[T]]],[11,R[6],E,E,148,[[["self"]],[T]]],[11,R[8],E,E,148,[[["self"]],[R[9]]]],[11,"into",E,E,303,[[],[U]]],[11,R[45],E,E,303,[[],["i"]]],[11,R[113],E,E,303,[[["self"]],["string"]]],[11,"from",E,E,303,[[[T]],[T]]],[11,R[46],E,E,303,[[["self"]],[T]]],[11,R[47],E,E,303,[[["self"],[T]]]],[11,R[4],E,E,303,[[[U]],[R[3]]]],[11,R[5],E,E,303,[[],[R[3]]]],[11,R[7],E,E,303,[[["self"]],[T]]],[11,R[6],E,E,303,[[["self"]],[T]]],[11,R[8],E,E,303,[[["self"]],[R[9]]]],[11,"into",E,E,149,[[],[U]]],[11,"from",E,E,149,[[[T]],[T]]],[11,R[46],E,E,149,[[["self"]],[T]]],[11,R[47],E,E,149,[[["self"],[T]]]],[11,R[4],E,E,149,[[[U]],[R[3]]]],[11,R[5],E,E,149,[[],[R[3]]]],[11,R[7],E,E,149,[[["self"]],[T]]],[11,R[6],E,E,149,[[["self"]],[T]]],[11,R[8],E,E,149,[[["self"]],[R[9]]]],[11,"span",E,E,150,[[["self"]],["span"]]],[11,"into",E,E,150,[[],[U]]],[11,"from",E,E,150,[[[T]],[T]]],[11,R[46],E,E,150,[[["self"]],[T]]],[11,R[47],E,E,150,[[["self"],[T]]]],[11,R[4],E,E,150,[[[U]],[R[3]]]],[11,R[5],E,E,150,[[],[R[3]]]],[11,R[7],E,E,150,[[["self"]],[T]]],[11,R[6],E,E,150,[[["self"]],[T]]],[11,R[8],E,E,150,[[["self"]],[R[9]]]],[11,"span",E,E,151,[[["self"]],["span"]]],[11,"into",E,E,151,[[],[U]]],[11,"from",E,E,151,[[[T]],[T]]],[11,R[46],E,E,151,[[["self"]],[T]]],[11,R[47],E,E,151,[[["self"],[T]]]],[11,R[4],E,E,151,[[[U]],[R[3]]]],[11,R[5],E,E,151,[[],[R[3]]]],[11,R[7],E,E,151,[[["self"]],[T]]],[11,R[6],E,E,151,[[["self"]],[T]]],[11,R[8],E,E,151,[[["self"]],[R[9]]]],[11,"span",E,E,152,[[["self"]],["span"]]],[11,"into",E,E,152,[[],[U]]],[11,R[45],E,E,152,[[],["i"]]],[11,"from",E,E,152,[[[T]],[T]]],[11,R[46],E,E,152,[[["self"]],[T]]],[11,R[47],E,E,152,[[["self"],[T]]]],[11,R[4],E,E,152,[[[U]],[R[3]]]],[11,R[5],E,E,152,[[],[R[3]]]],[11,R[7],E,E,152,[[["self"]],[T]]],[11,R[6],E,E,152,[[["self"]],[T]]],[11,R[8],E,E,152,[[["self"]],[R[9]]]],[11,"span",E,E,153,[[["self"]],["span"]]],[11,"into",E,E,153,[[],[U]]],[11,"from",E,E,153,[[[T]],[T]]],[11,R[46],E,E,153,[[["self"]],[T]]],[11,R[47],E,E,153,[[["self"],[T]]]],[11,R[4],E,E,153,[[[U]],[R[3]]]],[11,R[5],E,E,153,[[],[R[3]]]],[11,R[7],E,E,153,[[["self"]],[T]]],[11,R[6],E,E,153,[[["self"]],[T]]],[11,R[8],E,E,153,[[["self"]],[R[9]]]],[11,"span",E,E,154,[[["self"]],["span"]]],[11,"into",E,E,154,[[],[U]]],[11,"from",E,E,154,[[[T]],[T]]],[11,R[46],E,E,154,[[["self"]],[T]]],[11,R[47],E,E,154,[[["self"],[T]]]],[11,R[4],E,E,154,[[[U]],[R[3]]]],[11,R[5],E,E,154,[[],[R[3]]]],[11,R[7],E,E,154,[[["self"]],[T]]],[11,R[6],E,E,154,[[["self"]],[T]]],[11,R[8],E,E,154,[[["self"]],[R[9]]]],[11,"into",E,E,155,[[],[U]]],[11,"from",E,E,155,[[[T]],[T]]],[11,R[46],E,E,155,[[["self"]],[T]]],[11,R[47],E,E,155,[[["self"],[T]]]],[11,R[4],E,E,155,[[[U]],[R[3]]]],[11,R[5],E,E,155,[[],[R[3]]]],[11,R[7],E,E,155,[[["self"]],[T]]],[11,R[6],E,E,155,[[["self"]],[T]]],[11,R[8],E,E,155,[[["self"]],[R[9]]]],[11,"span",E,E,156,[[["self"]],["span"]]],[11,"into",E,E,156,[[],[U]]],[11,"from",E,E,156,[[[T]],[T]]],[11,R[46],E,E,156,[[["self"]],[T]]],[11,R[47],E,E,156,[[["self"],[T]]]],[11,R[4],E,E,156,[[[U]],[R[3]]]],[11,R[5],E,E,156,[[],[R[3]]]],[11,R[7],E,E,156,[[["self"]],[T]]],[11,R[6],E,E,156,[[["self"]],[T]]],[11,R[8],E,E,156,[[["self"]],[R[9]]]],[11,"span",E,E,157,[[["self"]],["span"]]],[11,"into",E,E,157,[[],[U]]],[11,"from",E,E,157,[[[T]],[T]]],[11,R[46],E,E,157,[[["self"]],[T]]],[11,R[47],E,E,157,[[["self"],[T]]]],[11,R[4],E,E,157,[[[U]],[R[3]]]],[11,R[5],E,E,157,[[],[R[3]]]],[11,R[7],E,E,157,[[["self"]],[T]]],[11,R[6],E,E,157,[[["self"]],[T]]],[11,R[8],E,E,157,[[["self"]],[R[9]]]],[11,"span",E,E,158,[[["self"]],["span"]]],[11,"into",E,E,158,[[],[U]]],[11,"from",E,E,158,[[[T]],[T]]],[11,R[46],E,E,158,[[["self"]],[T]]],[11,R[47],E,E,158,[[["self"],[T]]]],[11,R[4],E,E,158,[[[U]],[R[3]]]],[11,R[5],E,E,158,[[],[R[3]]]],[11,R[7],E,E,158,[[["self"]],[T]]],[11,R[6],E,E,158,[[["self"]],[T]]],[11,R[8],E,E,158,[[["self"]],[R[9]]]],[11,"span",E,E,159,[[["self"]],["span"]]],[11,"into",E,E,159,[[],[U]]],[11,"from",E,E,159,[[[T]],[T]]],[11,R[46],E,E,159,[[["self"]],[T]]],[11,R[47],E,E,159,[[["self"],[T]]]],[11,R[4],E,E,159,[[[U]],[R[3]]]],[11,R[5],E,E,159,[[],[R[3]]]],[11,R[7],E,E,159,[[["self"]],[T]]],[11,R[6],E,E,159,[[["self"]],[T]]],[11,R[8],E,E,159,[[["self"]],[R[9]]]],[11,"span",E,E,160,[[["self"]],["span"]]],[11,"into",E,E,160,[[],[U]]],[11,"from",E,E,160,[[[T]],[T]]],[11,R[46],E,E,160,[[["self"]],[T]]],[11,R[47],E,E,160,[[["self"],[T]]]],[11,R[4],E,E,160,[[[U]],[R[3]]]],[11,R[5],E,E,160,[[],[R[3]]]],[11,R[7],E,E,160,[[["self"]],[T]]],[11,R[6],E,E,160,[[["self"]],[T]]],[11,R[8],E,E,160,[[["self"]],[R[9]]]],[11,"span",E,E,161,[[["self"]],["span"]]],[11,"into",E,E,161,[[],[U]]],[11,"from",E,E,161,[[[T]],[T]]],[11,R[46],E,E,161,[[["self"]],[T]]],[11,R[47],E,E,161,[[["self"],[T]]]],[11,R[4],E,E,161,[[[U]],[R[3]]]],[11,R[5],E,E,161,[[],[R[3]]]],[11,R[7],E,E,161,[[["self"]],[T]]],[11,R[6],E,E,161,[[["self"]],[T]]],[11,R[8],E,E,161,[[["self"]],[R[9]]]],[11,"span",E,E,162,[[["self"]],["span"]]],[11,"into",E,E,162,[[],[U]]],[11,"from",E,E,162,[[[T]],[T]]],[11,R[46],E,E,162,[[["self"]],[T]]],[11,R[47],E,E,162,[[["self"],[T]]]],[11,R[4],E,E,162,[[[U]],[R[3]]]],[11,R[5],E,E,162,[[],[R[3]]]],[11,R[7],E,E,162,[[["self"]],[T]]],[11,R[6],E,E,162,[[["self"]],[T]]],[11,R[8],E,E,162,[[["self"]],[R[9]]]],[11,"span",E,E,163,[[["self"]],["span"]]],[11,"into",E,E,163,[[],[U]]],[11,"from",E,E,163,[[[T]],[T]]],[11,R[46],E,E,163,[[["self"]],[T]]],[11,R[47],E,E,163,[[["self"],[T]]]],[11,R[4],E,E,163,[[[U]],[R[3]]]],[11,R[5],E,E,163,[[],[R[3]]]],[11,R[7],E,E,163,[[["self"]],[T]]],[11,R[6],E,E,163,[[["self"]],[T]]],[11,R[8],E,E,163,[[["self"]],[R[9]]]],[11,"span",E,E,164,[[["self"]],["span"]]],[11,"into",E,E,164,[[],[U]]],[11,"from",E,E,164,[[[T]],[T]]],[11,R[46],E,E,164,[[["self"]],[T]]],[11,R[47],E,E,164,[[["self"],[T]]]],[11,R[4],E,E,164,[[[U]],[R[3]]]],[11,R[5],E,E,164,[[],[R[3]]]],[11,R[7],E,E,164,[[["self"]],[T]]],[11,R[6],E,E,164,[[["self"]],[T]]],[11,R[8],E,E,164,[[["self"]],[R[9]]]],[11,"span",E,E,165,[[["self"]],["span"]]],[11,"into",E,E,165,[[],[U]]],[11,"from",E,E,165,[[[T]],[T]]],[11,R[46],E,E,165,[[["self"]],[T]]],[11,R[47],E,E,165,[[["self"],[T]]]],[11,R[4],E,E,165,[[[U]],[R[3]]]],[11,R[5],E,E,165,[[],[R[3]]]],[11,R[7],E,E,165,[[["self"]],[T]]],[11,R[6],E,E,165,[[["self"]],[T]]],[11,R[8],E,E,165,[[["self"]],[R[9]]]],[11,"span",E,E,166,[[["self"]],["span"]]],[11,"into",E,E,166,[[],[U]]],[11,"from",E,E,166,[[[T]],[T]]],[11,R[46],E,E,166,[[["self"]],[T]]],[11,R[47],E,E,166,[[["self"],[T]]]],[11,R[4],E,E,166,[[[U]],[R[3]]]],[11,R[5],E,E,166,[[],[R[3]]]],[11,R[7],E,E,166,[[["self"]],[T]]],[11,R[6],E,E,166,[[["self"]],[T]]],[11,R[8],E,E,166,[[["self"]],[R[9]]]],[11,"span",E,E,167,[[["self"]],["span"]]],[11,"into",E,E,167,[[],[U]]],[11,"from",E,E,167,[[[T]],[T]]],[11,R[46],E,E,167,[[["self"]],[T]]],[11,R[47],E,E,167,[[["self"],[T]]]],[11,R[4],E,E,167,[[[U]],[R[3]]]],[11,R[5],E,E,167,[[],[R[3]]]],[11,R[7],E,E,167,[[["self"]],[T]]],[11,R[6],E,E,167,[[["self"]],[T]]],[11,R[8],E,E,167,[[["self"]],[R[9]]]],[11,"peek",E,E,168,[[["cursor"]],["bool"]]],[11,"display",E,E,168,[[],["str"]]],[11,"span",E,E,168,[[["self"]],["span"]]],[11,"into",E,E,168,[[],[U]]],[11,"from",E,E,168,[[[T]],[T]]],[11,R[46],E,E,168,[[["self"]],[T]]],[11,R[47],E,E,168,[[["self"],[T]]]],[11,R[4],E,E,168,[[[U]],[R[3]]]],[11,R[5],E,E,168,[[],[R[3]]]],[11,R[7],E,E,168,[[["self"]],[T]]],[11,R[6],E,E,168,[[["self"]],[T]]],[11,R[8],E,E,168,[[["self"]],[R[9]]]],[11,"into",E,E,169,[[],[U]]],[11,"from",E,E,169,[[[T]],[T]]],[11,R[46],E,E,169,[[["self"]],[T]]],[11,R[47],E,E,169,[[["self"],[T]]]],[11,R[4],E,E,169,[[[U]],[R[3]]]],[11,R[5],E,E,169,[[],[R[3]]]],[11,R[7],E,E,169,[[["self"]],[T]]],[11,R[6],E,E,169,[[["self"]],[T]]],[11,R[8],E,E,169,[[["self"]],[R[9]]]],[11,"into",E,E,170,[[],[U]]],[11,"from",E,E,170,[[[T]],[T]]],[11,R[46],E,E,170,[[["self"]],[T]]],[11,R[47],E,E,170,[[["self"],[T]]]],[11,R[4],E,E,170,[[[U]],[R[3]]]],[11,R[5],E,E,170,[[],[R[3]]]],[11,R[7],E,E,170,[[["self"]],[T]]],[11,R[6],E,E,170,[[["self"]],[T]]],[11,R[8],E,E,170,[[["self"]],[R[9]]]],[11,"into",E,E,171,[[],[U]]],[11,"from",E,E,171,[[[T]],[T]]],[11,R[46],E,E,171,[[["self"]],[T]]],[11,R[47],E,E,171,[[["self"],[T]]]],[11,R[4],E,E,171,[[[U]],[R[3]]]],[11,R[5],E,E,171,[[],[R[3]]]],[11,R[7],E,E,171,[[["self"]],[T]]],[11,R[6],E,E,171,[[["self"]],[T]]],[11,R[8],E,E,171,[[["self"]],[R[9]]]],[11,"span",E,E,172,[[["self"]],["span"]]],[11,"into",E,E,172,[[],[U]]],[11,"from",E,E,172,[[[T]],[T]]],[11,R[46],E,E,172,[[["self"]],[T]]],[11,R[47],E,E,172,[[["self"],[T]]]],[11,R[4],E,E,172,[[[U]],[R[3]]]],[11,R[5],E,E,172,[[],[R[3]]]],[11,R[7],E,E,172,[[["self"]],[T]]],[11,R[6],E,E,172,[[["self"]],[T]]],[11,R[8],E,E,172,[[["self"]],[R[9]]]],[11,"span",E,E,173,[[["self"]],["span"]]],[11,"into",E,E,173,[[],[U]]],[11,"from",E,E,173,[[[T]],[T]]],[11,R[46],E,E,173,[[["self"]],[T]]],[11,R[47],E,E,173,[[["self"],[T]]]],[11,R[4],E,E,173,[[[U]],[R[3]]]],[11,R[5],E,E,173,[[],[R[3]]]],[11,R[7],E,E,173,[[["self"]],[T]]],[11,R[6],E,E,173,[[["self"]],[T]]],[11,R[8],E,E,173,[[["self"]],[R[9]]]],[11,"span",E,E,174,[[["self"]],["span"]]],[11,"into",E,E,174,[[],[U]]],[11,"from",E,E,174,[[[T]],[T]]],[11,R[46],E,E,174,[[["self"]],[T]]],[11,R[47],E,E,174,[[["self"],[T]]]],[11,R[4],E,E,174,[[[U]],[R[3]]]],[11,R[5],E,E,174,[[],[R[3]]]],[11,R[7],E,E,174,[[["self"]],[T]]],[11,R[6],E,E,174,[[["self"]],[T]]],[11,R[8],E,E,174,[[["self"]],[R[9]]]],[11,"span",E,E,175,[[["self"]],["span"]]],[11,"into",E,E,175,[[],[U]]],[11,"from",E,E,175,[[[T]],[T]]],[11,R[46],E,E,175,[[["self"]],[T]]],[11,R[47],E,E,175,[[["self"],[T]]]],[11,R[4],E,E,175,[[[U]],[R[3]]]],[11,R[5],E,E,175,[[],[R[3]]]],[11,R[7],E,E,175,[[["self"]],[T]]],[11,R[6],E,E,175,[[["self"]],[T]]],[11,R[8],E,E,175,[[["self"]],[R[9]]]],[11,"span",E,E,176,[[["self"]],["span"]]],[11,"into",E,E,176,[[],[U]]],[11,"from",E,E,176,[[[T]],[T]]],[11,R[46],E,E,176,[[["self"]],[T]]],[11,R[47],E,E,176,[[["self"],[T]]]],[11,R[4],E,E,176,[[[U]],[R[3]]]],[11,R[5],E,E,176,[[],[R[3]]]],[11,R[7],E,E,176,[[["self"]],[T]]],[11,R[6],E,E,176,[[["self"]],[T]]],[11,R[8],E,E,176,[[["self"]],[R[9]]]],[11,"span",E,E,177,[[["self"]],["span"]]],[11,"into",E,E,177,[[],[U]]],[11,"from",E,E,177,[[[T]],[T]]],[11,R[46],E,E,177,[[["self"]],[T]]],[11,R[47],E,E,177,[[["self"],[T]]]],[11,R[4],E,E,177,[[[U]],[R[3]]]],[11,R[5],E,E,177,[[],[R[3]]]],[11,R[7],E,E,177,[[["self"]],[T]]],[11,R[6],E,E,177,[[["self"]],[T]]],[11,R[8],E,E,177,[[["self"]],[R[9]]]],[11,"span",E,E,178,[[["self"]],["span"]]],[11,"into",E,E,178,[[],[U]]],[11,"from",E,E,178,[[[T]],[T]]],[11,R[46],E,E,178,[[["self"]],[T]]],[11,R[47],E,E,178,[[["self"],[T]]]],[11,R[4],E,E,178,[[[U]],[R[3]]]],[11,R[5],E,E,178,[[],[R[3]]]],[11,R[7],E,E,178,[[["self"]],[T]]],[11,R[6],E,E,178,[[["self"]],[T]]],[11,R[8],E,E,178,[[["self"]],[R[9]]]],[11,"span",E,E,179,[[["self"]],["span"]]],[11,"into",E,E,179,[[],[U]]],[11,"from",E,E,179,[[[T]],[T]]],[11,R[46],E,E,179,[[["self"]],[T]]],[11,R[47],E,E,179,[[["self"],[T]]]],[11,R[4],E,E,179,[[[U]],[R[3]]]],[11,R[5],E,E,179,[[],[R[3]]]],[11,R[7],E,E,179,[[["self"]],[T]]],[11,R[6],E,E,179,[[["self"]],[T]]],[11,R[8],E,E,179,[[["self"]],[R[9]]]],[11,"peek",R[2728],E,180,[[["cursor"]],["bool"]]],[11,"display",E,E,180,[[],["str"]]],[11,"span",E,E,180,[[["self"]],["span"]]],[11,"into",E,E,180,[[],[U]]],[11,"from",E,E,180,[[[T]],[T]]],[11,R[46],E,E,180,[[["self"]],[T]]],[11,R[47],E,E,180,[[["self"],[T]]]],[11,R[4],E,E,180,[[[U]],[R[3]]]],[11,R[5],E,E,180,[[],[R[3]]]],[11,R[7],E,E,180,[[["self"]],[T]]],[11,R[6],E,E,180,[[["self"]],[T]]],[11,R[8],E,E,180,[[["self"]],[R[9]]]],[11,"peek",E,E,181,[[["cursor"]],["bool"]]],[11,"display",E,E,181,[[],["str"]]],[11,"span",E,E,181,[[["self"]],["span"]]],[11,"into",E,E,181,[[],[U]]],[11,"from",E,E,181,[[[T]],[T]]],[11,R[46],E,E,181,[[["self"]],[T]]],[11,R[47],E,E,181,[[["self"],[T]]]],[11,R[4],E,E,181,[[[U]],[R[3]]]],[11,R[5],E,E,181,[[],[R[3]]]],[11,R[7],E,E,181,[[["self"]],[T]]],[11,R[6],E,E,181,[[["self"]],[T]]],[11,R[8],E,E,181,[[["self"]],[R[9]]]],[11,"peek",E,E,182,[[["cursor"]],["bool"]]],[11,"display",E,E,182,[[],["str"]]],[11,"span",E,E,182,[[["self"]],["span"]]],[11,"into",E,E,182,[[],[U]]],[11,"from",E,E,182,[[[T]],[T]]],[11,R[46],E,E,182,[[["self"]],[T]]],[11,R[47],E,E,182,[[["self"],[T]]]],[11,R[4],E,E,182,[[[U]],[R[3]]]],[11,R[5],E,E,182,[[],[R[3]]]],[11,R[7],E,E,182,[[["self"]],[T]]],[11,R[6],E,E,182,[[["self"]],[T]]],[11,R[8],E,E,182,[[["self"]],[R[9]]]],[11,"peek",E,E,183,[[["cursor"]],["bool"]]],[11,"display",E,E,183,[[],["str"]]],[11,"span",E,E,183,[[["self"]],["span"]]],[11,"into",E,E,183,[[],[U]]],[11,"from",E,E,183,[[[T]],[T]]],[11,R[46],E,E,183,[[["self"]],[T]]],[11,R[47],E,E,183,[[["self"],[T]]]],[11,R[4],E,E,183,[[[U]],[R[3]]]],[11,R[5],E,E,183,[[],[R[3]]]],[11,R[7],E,E,183,[[["self"]],[T]]],[11,R[6],E,E,183,[[["self"]],[T]]],[11,R[8],E,E,183,[[["self"]],[R[9]]]],[11,"peek",E,E,184,[[["cursor"]],["bool"]]],[11,"display",E,E,184,[[],["str"]]],[11,"span",E,E,184,[[["self"]],["span"]]],[11,"into",E,E,184,[[],[U]]],[11,"from",E,E,184,[[[T]],[T]]],[11,R[46],E,E,184,[[["self"]],[T]]],[11,R[47],E,E,184,[[["self"],[T]]]],[11,R[4],E,E,184,[[[U]],[R[3]]]],[11,R[5],E,E,184,[[],[R[3]]]],[11,R[7],E,E,184,[[["self"]],[T]]],[11,R[6],E,E,184,[[["self"]],[T]]],[11,R[8],E,E,184,[[["self"]],[R[9]]]],[11,"peek",E,E,185,[[["cursor"]],["bool"]]],[11,"display",E,E,185,[[],["str"]]],[11,"span",E,E,185,[[["self"]],["span"]]],[11,"into",E,E,185,[[],[U]]],[11,"from",E,E,185,[[[T]],[T]]],[11,R[46],E,E,185,[[["self"]],[T]]],[11,R[47],E,E,185,[[["self"],[T]]]],[11,R[4],E,E,185,[[[U]],[R[3]]]],[11,R[5],E,E,185,[[],[R[3]]]],[11,R[7],E,E,185,[[["self"]],[T]]],[11,R[6],E,E,185,[[["self"]],[T]]],[11,R[8],E,E,185,[[["self"]],[R[9]]]],[11,"peek",E,E,186,[[["cursor"]],["bool"]]],[11,"display",E,E,186,[[],["str"]]],[11,"span",E,E,186,[[["self"]],["span"]]],[11,"into",E,E,186,[[],[U]]],[11,"from",E,E,186,[[[T]],[T]]],[11,R[46],E,E,186,[[["self"]],[T]]],[11,R[47],E,E,186,[[["self"],[T]]]],[11,R[4],E,E,186,[[[U]],[R[3]]]],[11,R[5],E,E,186,[[],[R[3]]]],[11,R[7],E,E,186,[[["self"]],[T]]],[11,R[6],E,E,186,[[["self"]],[T]]],[11,R[8],E,E,186,[[["self"]],[R[9]]]],[11,"peek",E,E,187,[[["cursor"]],["bool"]]],[11,"display",E,E,187,[[],["str"]]],[11,"span",E,E,187,[[["self"]],["span"]]],[11,"into",E,E,187,[[],[U]]],[11,"from",E,E,187,[[[T]],[T]]],[11,R[46],E,E,187,[[["self"]],[T]]],[11,R[47],E,E,187,[[["self"],[T]]]],[11,R[4],E,E,187,[[[U]],[R[3]]]],[11,R[5],E,E,187,[[],[R[3]]]],[11,R[7],E,E,187,[[["self"]],[T]]],[11,R[6],E,E,187,[[["self"]],[T]]],[11,R[8],E,E,187,[[["self"]],[R[9]]]],[11,"peek",E,E,188,[[["cursor"]],["bool"]]],[11,"display",E,E,188,[[],["str"]]],[11,"span",E,E,188,[[["self"]],["span"]]],[11,"into",E,E,188,[[],[U]]],[11,"from",E,E,188,[[[T]],[T]]],[11,R[46],E,E,188,[[["self"]],[T]]],[11,R[47],E,E,188,[[["self"],[T]]]],[11,R[4],E,E,188,[[[U]],[R[3]]]],[11,R[5],E,E,188,[[],[R[3]]]],[11,R[7],E,E,188,[[["self"]],[T]]],[11,R[6],E,E,188,[[["self"]],[T]]],[11,R[8],E,E,188,[[["self"]],[R[9]]]],[11,"peek",E,E,189,[[["cursor"]],["bool"]]],[11,"display",E,E,189,[[],["str"]]],[11,"span",E,E,189,[[["self"]],["span"]]],[11,"into",E,E,189,[[],[U]]],[11,"from",E,E,189,[[[T]],[T]]],[11,R[46],E,E,189,[[["self"]],[T]]],[11,R[47],E,E,189,[[["self"],[T]]]],[11,R[4],E,E,189,[[[U]],[R[3]]]],[11,R[5],E,E,189,[[],[R[3]]]],[11,R[7],E,E,189,[[["self"]],[T]]],[11,R[6],E,E,189,[[["self"]],[T]]],[11,R[8],E,E,189,[[["self"]],[R[9]]]],[11,"peek",E,E,190,[[["cursor"]],["bool"]]],[11,"display",E,E,190,[[],["str"]]],[11,"span",E,E,190,[[["self"]],["span"]]],[11,"into",E,E,190,[[],[U]]],[11,"from",E,E,190,[[[T]],[T]]],[11,R[46],E,E,190,[[["self"]],[T]]],[11,R[47],E,E,190,[[["self"],[T]]]],[11,R[4],E,E,190,[[[U]],[R[3]]]],[11,R[5],E,E,190,[[],[R[3]]]],[11,R[7],E,E,190,[[["self"]],[T]]],[11,R[6],E,E,190,[[["self"]],[T]]],[11,R[8],E,E,190,[[["self"]],[R[9]]]],[11,"peek",E,E,191,[[["cursor"]],["bool"]]],[11,"display",E,E,191,[[],["str"]]],[11,"span",E,E,191,[[["self"]],["span"]]],[11,"into",E,E,191,[[],[U]]],[11,"from",E,E,191,[[[T]],[T]]],[11,R[46],E,E,191,[[["self"]],[T]]],[11,R[47],E,E,191,[[["self"],[T]]]],[11,R[4],E,E,191,[[[U]],[R[3]]]],[11,R[5],E,E,191,[[],[R[3]]]],[11,R[7],E,E,191,[[["self"]],[T]]],[11,R[6],E,E,191,[[["self"]],[T]]],[11,R[8],E,E,191,[[["self"]],[R[9]]]],[11,"peek",E,E,192,[[["cursor"]],["bool"]]],[11,"display",E,E,192,[[],["str"]]],[11,"span",E,E,192,[[["self"]],["span"]]],[11,"into",E,E,192,[[],[U]]],[11,"from",E,E,192,[[[T]],[T]]],[11,R[46],E,E,192,[[["self"]],[T]]],[11,R[47],E,E,192,[[["self"],[T]]]],[11,R[4],E,E,192,[[[U]],[R[3]]]],[11,R[5],E,E,192,[[],[R[3]]]],[11,R[7],E,E,192,[[["self"]],[T]]],[11,R[6],E,E,192,[[["self"]],[T]]],[11,R[8],E,E,192,[[["self"]],[R[9]]]],[11,"peek",E,E,193,[[["cursor"]],["bool"]]],[11,"display",E,E,193,[[],["str"]]],[11,"span",E,E,193,[[["self"]],["span"]]],[11,"into",E,E,193,[[],[U]]],[11,"from",E,E,193,[[[T]],[T]]],[11,R[46],E,E,193,[[["self"]],[T]]],[11,R[47],E,E,193,[[["self"],[T]]]],[11,R[4],E,E,193,[[[U]],[R[3]]]],[11,R[5],E,E,193,[[],[R[3]]]],[11,R[7],E,E,193,[[["self"]],[T]]],[11,R[6],E,E,193,[[["self"]],[T]]],[11,R[8],E,E,193,[[["self"]],[R[9]]]],[11,"peek",E,E,194,[[["cursor"]],["bool"]]],[11,"display",E,E,194,[[],["str"]]],[11,"span",E,E,194,[[["self"]],["span"]]],[11,"into",E,E,194,[[],[U]]],[11,"from",E,E,194,[[[T]],[T]]],[11,R[46],E,E,194,[[["self"]],[T]]],[11,R[47],E,E,194,[[["self"],[T]]]],[11,R[4],E,E,194,[[[U]],[R[3]]]],[11,R[5],E,E,194,[[],[R[3]]]],[11,R[7],E,E,194,[[["self"]],[T]]],[11,R[6],E,E,194,[[["self"]],[T]]],[11,R[8],E,E,194,[[["self"]],[R[9]]]],[11,"peek",E,E,195,[[["cursor"]],["bool"]]],[11,"display",E,E,195,[[],["str"]]],[11,"span",E,E,195,[[["self"]],["span"]]],[11,"into",E,E,195,[[],[U]]],[11,"from",E,E,195,[[[T]],[T]]],[11,R[46],E,E,195,[[["self"]],[T]]],[11,R[47],E,E,195,[[["self"],[T]]]],[11,R[4],E,E,195,[[[U]],[R[3]]]],[11,R[5],E,E,195,[[],[R[3]]]],[11,R[7],E,E,195,[[["self"]],[T]]],[11,R[6],E,E,195,[[["self"]],[T]]],[11,R[8],E,E,195,[[["self"]],[R[9]]]],[11,"peek",E,E,196,[[["cursor"]],["bool"]]],[11,"display",E,E,196,[[],["str"]]],[11,"span",E,E,196,[[["self"]],["span"]]],[11,"into",E,E,196,[[],[U]]],[11,"from",E,E,196,[[[T]],[T]]],[11,R[46],E,E,196,[[["self"]],[T]]],[11,R[47],E,E,196,[[["self"],[T]]]],[11,R[4],E,E,196,[[[U]],[R[3]]]],[11,R[5],E,E,196,[[],[R[3]]]],[11,R[7],E,E,196,[[["self"]],[T]]],[11,R[6],E,E,196,[[["self"]],[T]]],[11,R[8],E,E,196,[[["self"]],[R[9]]]],[11,"peek",E,E,197,[[["cursor"]],["bool"]]],[11,"display",E,E,197,[[],["str"]]],[11,"span",E,E,197,[[["self"]],["span"]]],[11,"into",E,E,197,[[],[U]]],[11,"from",E,E,197,[[[T]],[T]]],[11,R[46],E,E,197,[[["self"]],[T]]],[11,R[47],E,E,197,[[["self"],[T]]]],[11,R[4],E,E,197,[[[U]],[R[3]]]],[11,R[5],E,E,197,[[],[R[3]]]],[11,R[7],E,E,197,[[["self"]],[T]]],[11,R[6],E,E,197,[[["self"]],[T]]],[11,R[8],E,E,197,[[["self"]],[R[9]]]],[11,"peek",E,E,198,[[["cursor"]],["bool"]]],[11,"display",E,E,198,[[],["str"]]],[11,"span",E,E,198,[[["self"]],["span"]]],[11,"into",E,E,198,[[],[U]]],[11,"from",E,E,198,[[[T]],[T]]],[11,R[46],E,E,198,[[["self"]],[T]]],[11,R[47],E,E,198,[[["self"],[T]]]],[11,R[4],E,E,198,[[[U]],[R[3]]]],[11,R[5],E,E,198,[[],[R[3]]]],[11,R[7],E,E,198,[[["self"]],[T]]],[11,R[6],E,E,198,[[["self"]],[T]]],[11,R[8],E,E,198,[[["self"]],[R[9]]]],[11,"peek",E,E,199,[[["cursor"]],["bool"]]],[11,"display",E,E,199,[[],["str"]]],[11,"span",E,E,199,[[["self"]],["span"]]],[11,"into",E,E,199,[[],[U]]],[11,"from",E,E,199,[[[T]],[T]]],[11,R[46],E,E,199,[[["self"]],[T]]],[11,R[47],E,E,199,[[["self"],[T]]]],[11,R[4],E,E,199,[[[U]],[R[3]]]],[11,R[5],E,E,199,[[],[R[3]]]],[11,R[7],E,E,199,[[["self"]],[T]]],[11,R[6],E,E,199,[[["self"]],[T]]],[11,R[8],E,E,199,[[["self"]],[R[9]]]],[11,"peek",E,E,200,[[["cursor"]],["bool"]]],[11,"display",E,E,200,[[],["str"]]],[11,"span",E,E,200,[[["self"]],["span"]]],[11,"into",E,E,200,[[],[U]]],[11,"from",E,E,200,[[[T]],[T]]],[11,R[46],E,E,200,[[["self"]],[T]]],[11,R[47],E,E,200,[[["self"],[T]]]],[11,R[4],E,E,200,[[[U]],[R[3]]]],[11,R[5],E,E,200,[[],[R[3]]]],[11,R[7],E,E,200,[[["self"]],[T]]],[11,R[6],E,E,200,[[["self"]],[T]]],[11,R[8],E,E,200,[[["self"]],[R[9]]]],[11,"peek",E,E,201,[[["cursor"]],["bool"]]],[11,"display",E,E,201,[[],["str"]]],[11,"span",E,E,201,[[["self"]],["span"]]],[11,"into",E,E,201,[[],[U]]],[11,"from",E,E,201,[[[T]],[T]]],[11,R[46],E,E,201,[[["self"]],[T]]],[11,R[47],E,E,201,[[["self"],[T]]]],[11,R[4],E,E,201,[[[U]],[R[3]]]],[11,R[5],E,E,201,[[],[R[3]]]],[11,R[7],E,E,201,[[["self"]],[T]]],[11,R[6],E,E,201,[[["self"]],[T]]],[11,R[8],E,E,201,[[["self"]],[R[9]]]],[11,"peek",E,E,202,[[["cursor"]],["bool"]]],[11,"display",E,E,202,[[],["str"]]],[11,"span",E,E,202,[[["self"]],["span"]]],[11,"into",E,E,202,[[],[U]]],[11,"from",E,E,202,[[[T]],[T]]],[11,R[46],E,E,202,[[["self"]],[T]]],[11,R[47],E,E,202,[[["self"],[T]]]],[11,R[4],E,E,202,[[[U]],[R[3]]]],[11,R[5],E,E,202,[[],[R[3]]]],[11,R[7],E,E,202,[[["self"]],[T]]],[11,R[6],E,E,202,[[["self"]],[T]]],[11,R[8],E,E,202,[[["self"]],[R[9]]]],[11,"peek",E,E,203,[[["cursor"]],["bool"]]],[11,"display",E,E,203,[[],["str"]]],[11,"span",E,E,203,[[["self"]],["span"]]],[11,"into",E,E,203,[[],[U]]],[11,"from",E,E,203,[[[T]],[T]]],[11,R[46],E,E,203,[[["self"]],[T]]],[11,R[47],E,E,203,[[["self"],[T]]]],[11,R[4],E,E,203,[[[U]],[R[3]]]],[11,R[5],E,E,203,[[],[R[3]]]],[11,R[7],E,E,203,[[["self"]],[T]]],[11,R[6],E,E,203,[[["self"]],[T]]],[11,R[8],E,E,203,[[["self"]],[R[9]]]],[11,"peek",E,E,204,[[["cursor"]],["bool"]]],[11,"display",E,E,204,[[],["str"]]],[11,"span",E,E,204,[[["self"]],["span"]]],[11,"into",E,E,204,[[],[U]]],[11,"from",E,E,204,[[[T]],[T]]],[11,R[46],E,E,204,[[["self"]],[T]]],[11,R[47],E,E,204,[[["self"],[T]]]],[11,R[4],E,E,204,[[[U]],[R[3]]]],[11,R[5],E,E,204,[[],[R[3]]]],[11,R[7],E,E,204,[[["self"]],[T]]],[11,R[6],E,E,204,[[["self"]],[T]]],[11,R[8],E,E,204,[[["self"]],[R[9]]]],[11,"peek",E,E,205,[[["cursor"]],["bool"]]],[11,"display",E,E,205,[[],["str"]]],[11,"span",E,E,205,[[["self"]],["span"]]],[11,"into",E,E,205,[[],[U]]],[11,"from",E,E,205,[[[T]],[T]]],[11,R[46],E,E,205,[[["self"]],[T]]],[11,R[47],E,E,205,[[["self"],[T]]]],[11,R[4],E,E,205,[[[U]],[R[3]]]],[11,R[5],E,E,205,[[],[R[3]]]],[11,R[7],E,E,205,[[["self"]],[T]]],[11,R[6],E,E,205,[[["self"]],[T]]],[11,R[8],E,E,205,[[["self"]],[R[9]]]],[11,"peek",E,E,206,[[["cursor"]],["bool"]]],[11,"display",E,E,206,[[],["str"]]],[11,"span",E,E,206,[[["self"]],["span"]]],[11,"into",E,E,206,[[],[U]]],[11,"from",E,E,206,[[[T]],[T]]],[11,R[46],E,E,206,[[["self"]],[T]]],[11,R[47],E,E,206,[[["self"],[T]]]],[11,R[4],E,E,206,[[[U]],[R[3]]]],[11,R[5],E,E,206,[[],[R[3]]]],[11,R[7],E,E,206,[[["self"]],[T]]],[11,R[6],E,E,206,[[["self"]],[T]]],[11,R[8],E,E,206,[[["self"]],[R[9]]]],[11,"peek",E,E,207,[[["cursor"]],["bool"]]],[11,"display",E,E,207,[[],["str"]]],[11,"span",E,E,207,[[["self"]],["span"]]],[11,"into",E,E,207,[[],[U]]],[11,"from",E,E,207,[[[T]],[T]]],[11,R[46],E,E,207,[[["self"]],[T]]],[11,R[47],E,E,207,[[["self"],[T]]]],[11,R[4],E,E,207,[[[U]],[R[3]]]],[11,R[5],E,E,207,[[],[R[3]]]],[11,R[7],E,E,207,[[["self"]],[T]]],[11,R[6],E,E,207,[[["self"]],[T]]],[11,R[8],E,E,207,[[["self"]],[R[9]]]],[11,"peek",E,E,208,[[["cursor"]],["bool"]]],[11,"display",E,E,208,[[],["str"]]],[11,"span",E,E,208,[[["self"]],["span"]]],[11,"into",E,E,208,[[],[U]]],[11,"from",E,E,208,[[[T]],[T]]],[11,R[46],E,E,208,[[["self"]],[T]]],[11,R[47],E,E,208,[[["self"],[T]]]],[11,R[4],E,E,208,[[[U]],[R[3]]]],[11,R[5],E,E,208,[[],[R[3]]]],[11,R[7],E,E,208,[[["self"]],[T]]],[11,R[6],E,E,208,[[["self"]],[T]]],[11,R[8],E,E,208,[[["self"]],[R[9]]]],[11,"peek",E,E,209,[[["cursor"]],["bool"]]],[11,"display",E,E,209,[[],["str"]]],[11,"span",E,E,209,[[["self"]],["span"]]],[11,"into",E,E,209,[[],[U]]],[11,"from",E,E,209,[[[T]],[T]]],[11,R[46],E,E,209,[[["self"]],[T]]],[11,R[47],E,E,209,[[["self"],[T]]]],[11,R[4],E,E,209,[[[U]],[R[3]]]],[11,R[5],E,E,209,[[],[R[3]]]],[11,R[7],E,E,209,[[["self"]],[T]]],[11,R[6],E,E,209,[[["self"]],[T]]],[11,R[8],E,E,209,[[["self"]],[R[9]]]],[11,"peek",E,E,210,[[["cursor"]],["bool"]]],[11,"display",E,E,210,[[],["str"]]],[11,"span",E,E,210,[[["self"]],["span"]]],[11,"into",E,E,210,[[],[U]]],[11,"from",E,E,210,[[[T]],[T]]],[11,R[46],E,E,210,[[["self"]],[T]]],[11,R[47],E,E,210,[[["self"],[T]]]],[11,R[4],E,E,210,[[[U]],[R[3]]]],[11,R[5],E,E,210,[[],[R[3]]]],[11,R[7],E,E,210,[[["self"]],[T]]],[11,R[6],E,E,210,[[["self"]],[T]]],[11,R[8],E,E,210,[[["self"]],[R[9]]]],[11,"peek",E,E,211,[[["cursor"]],["bool"]]],[11,"display",E,E,211,[[],["str"]]],[11,"span",E,E,211,[[["self"]],["span"]]],[11,"into",E,E,211,[[],[U]]],[11,"from",E,E,211,[[[T]],[T]]],[11,R[46],E,E,211,[[["self"]],[T]]],[11,R[47],E,E,211,[[["self"],[T]]]],[11,R[4],E,E,211,[[[U]],[R[3]]]],[11,R[5],E,E,211,[[],[R[3]]]],[11,R[7],E,E,211,[[["self"]],[T]]],[11,R[6],E,E,211,[[["self"]],[T]]],[11,R[8],E,E,211,[[["self"]],[R[9]]]],[11,"peek",E,E,212,[[["cursor"]],["bool"]]],[11,"display",E,E,212,[[],["str"]]],[11,"span",E,E,212,[[["self"]],["span"]]],[11,"into",E,E,212,[[],[U]]],[11,"from",E,E,212,[[[T]],[T]]],[11,R[46],E,E,212,[[["self"]],[T]]],[11,R[47],E,E,212,[[["self"],[T]]]],[11,R[4],E,E,212,[[[U]],[R[3]]]],[11,R[5],E,E,212,[[],[R[3]]]],[11,R[7],E,E,212,[[["self"]],[T]]],[11,R[6],E,E,212,[[["self"]],[T]]],[11,R[8],E,E,212,[[["self"]],[R[9]]]],[11,"peek",E,E,213,[[["cursor"]],["bool"]]],[11,"display",E,E,213,[[],["str"]]],[11,"span",E,E,213,[[["self"]],["span"]]],[11,"into",E,E,213,[[],[U]]],[11,"from",E,E,213,[[[T]],[T]]],[11,R[46],E,E,213,[[["self"]],[T]]],[11,R[47],E,E,213,[[["self"],[T]]]],[11,R[4],E,E,213,[[[U]],[R[3]]]],[11,R[5],E,E,213,[[],[R[3]]]],[11,R[7],E,E,213,[[["self"]],[T]]],[11,R[6],E,E,213,[[["self"]],[T]]],[11,R[8],E,E,213,[[["self"]],[R[9]]]],[11,"peek",E,E,214,[[["cursor"]],["bool"]]],[11,"display",E,E,214,[[],["str"]]],[11,"span",E,E,214,[[["self"]],["span"]]],[11,"into",E,E,214,[[],[U]]],[11,"from",E,E,214,[[[T]],[T]]],[11,R[46],E,E,214,[[["self"]],[T]]],[11,R[47],E,E,214,[[["self"],[T]]]],[11,R[4],E,E,214,[[[U]],[R[3]]]],[11,R[5],E,E,214,[[],[R[3]]]],[11,R[7],E,E,214,[[["self"]],[T]]],[11,R[6],E,E,214,[[["self"]],[T]]],[11,R[8],E,E,214,[[["self"]],[R[9]]]],[11,"peek",E,E,215,[[["cursor"]],["bool"]]],[11,"display",E,E,215,[[],["str"]]],[11,"span",E,E,215,[[["self"]],["span"]]],[11,"into",E,E,215,[[],[U]]],[11,"from",E,E,215,[[[T]],[T]]],[11,R[46],E,E,215,[[["self"]],[T]]],[11,R[47],E,E,215,[[["self"],[T]]]],[11,R[4],E,E,215,[[[U]],[R[3]]]],[11,R[5],E,E,215,[[],[R[3]]]],[11,R[7],E,E,215,[[["self"]],[T]]],[11,R[6],E,E,215,[[["self"]],[T]]],[11,R[8],E,E,215,[[["self"]],[R[9]]]],[11,"peek",E,E,216,[[["cursor"]],["bool"]]],[11,"display",E,E,216,[[],["str"]]],[11,"span",E,E,216,[[["self"]],["span"]]],[11,"into",E,E,216,[[],[U]]],[11,"from",E,E,216,[[[T]],[T]]],[11,R[46],E,E,216,[[["self"]],[T]]],[11,R[47],E,E,216,[[["self"],[T]]]],[11,R[4],E,E,216,[[[U]],[R[3]]]],[11,R[5],E,E,216,[[],[R[3]]]],[11,R[7],E,E,216,[[["self"]],[T]]],[11,R[6],E,E,216,[[["self"]],[T]]],[11,R[8],E,E,216,[[["self"]],[R[9]]]],[11,"peek",E,E,217,[[["cursor"]],["bool"]]],[11,"display",E,E,217,[[],["str"]]],[11,"span",E,E,217,[[["self"]],["span"]]],[11,"into",E,E,217,[[],[U]]],[11,"from",E,E,217,[[[T]],[T]]],[11,R[46],E,E,217,[[["self"]],[T]]],[11,R[47],E,E,217,[[["self"],[T]]]],[11,R[4],E,E,217,[[[U]],[R[3]]]],[11,R[5],E,E,217,[[],[R[3]]]],[11,R[7],E,E,217,[[["self"]],[T]]],[11,R[6],E,E,217,[[["self"]],[T]]],[11,R[8],E,E,217,[[["self"]],[R[9]]]],[11,"peek",E,E,218,[[["cursor"]],["bool"]]],[11,"display",E,E,218,[[],["str"]]],[11,"span",E,E,218,[[["self"]],["span"]]],[11,"into",E,E,218,[[],[U]]],[11,"from",E,E,218,[[[T]],[T]]],[11,R[46],E,E,218,[[["self"]],[T]]],[11,R[47],E,E,218,[[["self"],[T]]]],[11,R[4],E,E,218,[[[U]],[R[3]]]],[11,R[5],E,E,218,[[],[R[3]]]],[11,R[7],E,E,218,[[["self"]],[T]]],[11,R[6],E,E,218,[[["self"]],[T]]],[11,R[8],E,E,218,[[["self"]],[R[9]]]],[11,"peek",E,E,219,[[["cursor"]],["bool"]]],[11,"display",E,E,219,[[],["str"]]],[11,"span",E,E,219,[[["self"]],["span"]]],[11,"into",E,E,219,[[],[U]]],[11,"from",E,E,219,[[[T]],[T]]],[11,R[46],E,E,219,[[["self"]],[T]]],[11,R[47],E,E,219,[[["self"],[T]]]],[11,R[4],E,E,219,[[[U]],[R[3]]]],[11,R[5],E,E,219,[[],[R[3]]]],[11,R[7],E,E,219,[[["self"]],[T]]],[11,R[6],E,E,219,[[["self"]],[T]]],[11,R[8],E,E,219,[[["self"]],[R[9]]]],[11,"peek",E,E,220,[[["cursor"]],["bool"]]],[11,"display",E,E,220,[[],["str"]]],[11,"span",E,E,220,[[["self"]],["span"]]],[11,"into",E,E,220,[[],[U]]],[11,"from",E,E,220,[[[T]],[T]]],[11,R[46],E,E,220,[[["self"]],[T]]],[11,R[47],E,E,220,[[["self"],[T]]]],[11,R[4],E,E,220,[[[U]],[R[3]]]],[11,R[5],E,E,220,[[],[R[3]]]],[11,R[7],E,E,220,[[["self"]],[T]]],[11,R[6],E,E,220,[[["self"]],[T]]],[11,R[8],E,E,220,[[["self"]],[R[9]]]],[11,"peek",E,E,221,[[["cursor"]],["bool"]]],[11,"display",E,E,221,[[],["str"]]],[11,"span",E,E,221,[[["self"]],["span"]]],[11,"into",E,E,221,[[],[U]]],[11,"from",E,E,221,[[[T]],[T]]],[11,R[46],E,E,221,[[["self"]],[T]]],[11,R[47],E,E,221,[[["self"],[T]]]],[11,R[4],E,E,221,[[[U]],[R[3]]]],[11,R[5],E,E,221,[[],[R[3]]]],[11,R[7],E,E,221,[[["self"]],[T]]],[11,R[6],E,E,221,[[["self"]],[T]]],[11,R[8],E,E,221,[[["self"]],[R[9]]]],[11,"peek",E,E,222,[[["cursor"]],["bool"]]],[11,"display",E,E,222,[[],["str"]]],[11,"span",E,E,222,[[["self"]],["span"]]],[11,"into",E,E,222,[[],[U]]],[11,"from",E,E,222,[[[T]],[T]]],[11,R[46],E,E,222,[[["self"]],[T]]],[11,R[47],E,E,222,[[["self"],[T]]]],[11,R[4],E,E,222,[[[U]],[R[3]]]],[11,R[5],E,E,222,[[],[R[3]]]],[11,R[7],E,E,222,[[["self"]],[T]]],[11,R[6],E,E,222,[[["self"]],[T]]],[11,R[8],E,E,222,[[["self"]],[R[9]]]],[11,"peek",E,E,223,[[["cursor"]],["bool"]]],[11,"display",E,E,223,[[],["str"]]],[11,"span",E,E,223,[[["self"]],["span"]]],[11,"into",E,E,223,[[],[U]]],[11,"from",E,E,223,[[[T]],[T]]],[11,R[46],E,E,223,[[["self"]],[T]]],[11,R[47],E,E,223,[[["self"],[T]]]],[11,R[4],E,E,223,[[[U]],[R[3]]]],[11,R[5],E,E,223,[[],[R[3]]]],[11,R[7],E,E,223,[[["self"]],[T]]],[11,R[6],E,E,223,[[["self"]],[T]]],[11,R[8],E,E,223,[[["self"]],[R[9]]]],[11,"peek",E,E,224,[[["cursor"]],["bool"]]],[11,"display",E,E,224,[[],["str"]]],[11,"span",E,E,224,[[["self"]],["span"]]],[11,"into",E,E,224,[[],[U]]],[11,"from",E,E,224,[[[T]],[T]]],[11,R[46],E,E,224,[[["self"]],[T]]],[11,R[47],E,E,224,[[["self"],[T]]]],[11,R[4],E,E,224,[[[U]],[R[3]]]],[11,R[5],E,E,224,[[],[R[3]]]],[11,R[7],E,E,224,[[["self"]],[T]]],[11,R[6],E,E,224,[[["self"]],[T]]],[11,R[8],E,E,224,[[["self"]],[R[9]]]],[11,"peek",E,E,225,[[["cursor"]],["bool"]]],[11,"display",E,E,225,[[],["str"]]],[11,"span",E,E,225,[[["self"]],["span"]]],[11,"into",E,E,225,[[],[U]]],[11,"from",E,E,225,[[[T]],[T]]],[11,R[46],E,E,225,[[["self"]],[T]]],[11,R[47],E,E,225,[[["self"],[T]]]],[11,R[4],E,E,225,[[[U]],[R[3]]]],[11,R[5],E,E,225,[[],[R[3]]]],[11,R[7],E,E,225,[[["self"]],[T]]],[11,R[6],E,E,225,[[["self"]],[T]]],[11,R[8],E,E,225,[[["self"]],[R[9]]]],[11,"peek",E,E,226,[[["cursor"]],["bool"]]],[11,"display",E,E,226,[[],["str"]]],[11,"span",E,E,226,[[["self"]],["span"]]],[11,"into",E,E,226,[[],[U]]],[11,"from",E,E,226,[[[T]],[T]]],[11,R[46],E,E,226,[[["self"]],[T]]],[11,R[47],E,E,226,[[["self"],[T]]]],[11,R[4],E,E,226,[[[U]],[R[3]]]],[11,R[5],E,E,226,[[],[R[3]]]],[11,R[7],E,E,226,[[["self"]],[T]]],[11,R[6],E,E,226,[[["self"]],[T]]],[11,R[8],E,E,226,[[["self"]],[R[9]]]],[11,"peek",E,E,227,[[["cursor"]],["bool"]]],[11,"display",E,E,227,[[],["str"]]],[11,"span",E,E,227,[[["self"]],["span"]]],[11,"into",E,E,227,[[],[U]]],[11,"from",E,E,227,[[[T]],[T]]],[11,R[46],E,E,227,[[["self"]],[T]]],[11,R[47],E,E,227,[[["self"],[T]]]],[11,R[4],E,E,227,[[[U]],[R[3]]]],[11,R[5],E,E,227,[[],[R[3]]]],[11,R[7],E,E,227,[[["self"]],[T]]],[11,R[6],E,E,227,[[["self"]],[T]]],[11,R[8],E,E,227,[[["self"]],[R[9]]]],[11,"peek",E,E,228,[[["cursor"]],["bool"]]],[11,"display",E,E,228,[[],["str"]]],[11,"span",E,E,228,[[["self"]],["span"]]],[11,"into",E,E,228,[[],[U]]],[11,"from",E,E,228,[[[T]],[T]]],[11,R[46],E,E,228,[[["self"]],[T]]],[11,R[47],E,E,228,[[["self"],[T]]]],[11,R[4],E,E,228,[[[U]],[R[3]]]],[11,R[5],E,E,228,[[],[R[3]]]],[11,R[7],E,E,228,[[["self"]],[T]]],[11,R[6],E,E,228,[[["self"]],[T]]],[11,R[8],E,E,228,[[["self"]],[R[9]]]],[11,"peek",E,E,229,[[["cursor"]],["bool"]]],[11,"display",E,E,229,[[],["str"]]],[11,"span",E,E,229,[[["self"]],["span"]]],[11,"into",E,E,229,[[],[U]]],[11,"from",E,E,229,[[[T]],[T]]],[11,R[46],E,E,229,[[["self"]],[T]]],[11,R[47],E,E,229,[[["self"],[T]]]],[11,R[4],E,E,229,[[[U]],[R[3]]]],[11,R[5],E,E,229,[[],[R[3]]]],[11,R[7],E,E,229,[[["self"]],[T]]],[11,R[6],E,E,229,[[["self"]],[T]]],[11,R[8],E,E,229,[[["self"]],[R[9]]]],[11,"peek",E,E,230,[[["cursor"]],["bool"]]],[11,"display",E,E,230,[[],["str"]]],[11,"span",E,E,230,[[["self"]],["span"]]],[11,"into",E,E,230,[[],[U]]],[11,"from",E,E,230,[[[T]],[T]]],[11,R[46],E,E,230,[[["self"]],[T]]],[11,R[47],E,E,230,[[["self"],[T]]]],[11,R[4],E,E,230,[[[U]],[R[3]]]],[11,R[5],E,E,230,[[],[R[3]]]],[11,R[7],E,E,230,[[["self"]],[T]]],[11,R[6],E,E,230,[[["self"]],[T]]],[11,R[8],E,E,230,[[["self"]],[R[9]]]],[11,"peek",E,E,231,[[["cursor"]],["bool"]]],[11,"display",E,E,231,[[],["str"]]],[11,"span",E,E,231,[[["self"]],["span"]]],[11,"into",E,E,231,[[],[U]]],[11,"from",E,E,231,[[[T]],[T]]],[11,R[46],E,E,231,[[["self"]],[T]]],[11,R[47],E,E,231,[[["self"],[T]]]],[11,R[4],E,E,231,[[[U]],[R[3]]]],[11,R[5],E,E,231,[[],[R[3]]]],[11,R[7],E,E,231,[[["self"]],[T]]],[11,R[6],E,E,231,[[["self"]],[T]]],[11,R[8],E,E,231,[[["self"]],[R[9]]]],[11,"peek",E,E,232,[[["cursor"]],["bool"]]],[11,"display",E,E,232,[[],["str"]]],[11,"span",E,E,232,[[["self"]],["span"]]],[11,"into",E,E,232,[[],[U]]],[11,"from",E,E,232,[[[T]],[T]]],[11,R[46],E,E,232,[[["self"]],[T]]],[11,R[47],E,E,232,[[["self"],[T]]]],[11,R[4],E,E,232,[[[U]],[R[3]]]],[11,R[5],E,E,232,[[],[R[3]]]],[11,R[7],E,E,232,[[["self"]],[T]]],[11,R[6],E,E,232,[[["self"]],[T]]],[11,R[8],E,E,232,[[["self"]],[R[9]]]],[11,"peek",E,E,233,[[["cursor"]],["bool"]]],[11,"display",E,E,233,[[],["str"]]],[11,"span",E,E,233,[[["self"]],["span"]]],[11,"into",E,E,233,[[],[U]]],[11,"from",E,E,233,[[[T]],[T]]],[11,R[46],E,E,233,[[["self"]],[T]]],[11,R[47],E,E,233,[[["self"],[T]]]],[11,R[4],E,E,233,[[[U]],[R[3]]]],[11,R[5],E,E,233,[[],[R[3]]]],[11,R[7],E,E,233,[[["self"]],[T]]],[11,R[6],E,E,233,[[["self"]],[T]]],[11,R[8],E,E,233,[[["self"]],[R[9]]]],[11,"peek",E,E,234,[[["cursor"]],["bool"]]],[11,"display",E,E,234,[[],["str"]]],[11,"span",E,E,234,[[["self"]],["span"]]],[11,"into",E,E,234,[[],[U]]],[11,"from",E,E,234,[[[T]],[T]]],[11,R[46],E,E,234,[[["self"]],[T]]],[11,R[47],E,E,234,[[["self"],[T]]]],[11,R[4],E,E,234,[[[U]],[R[3]]]],[11,R[5],E,E,234,[[],[R[3]]]],[11,R[7],E,E,234,[[["self"]],[T]]],[11,R[6],E,E,234,[[["self"]],[T]]],[11,R[8],E,E,234,[[["self"]],[R[9]]]],[11,"peek",E,E,235,[[["cursor"]],["bool"]]],[11,"display",E,E,235,[[],["str"]]],[11,"span",E,E,235,[[["self"]],["span"]]],[11,"into",E,E,235,[[],[U]]],[11,"from",E,E,235,[[[T]],[T]]],[11,R[46],E,E,235,[[["self"]],[T]]],[11,R[47],E,E,235,[[["self"],[T]]]],[11,R[4],E,E,235,[[[U]],[R[3]]]],[11,R[5],E,E,235,[[],[R[3]]]],[11,R[7],E,E,235,[[["self"]],[T]]],[11,R[6],E,E,235,[[["self"]],[T]]],[11,R[8],E,E,235,[[["self"]],[R[9]]]],[11,"peek",E,E,236,[[["cursor"]],["bool"]]],[11,"display",E,E,236,[[],["str"]]],[11,"span",E,E,236,[[["self"]],["span"]]],[11,"into",E,E,236,[[],[U]]],[11,"from",E,E,236,[[[T]],[T]]],[11,R[46],E,E,236,[[["self"]],[T]]],[11,R[47],E,E,236,[[["self"],[T]]]],[11,R[4],E,E,236,[[[U]],[R[3]]]],[11,R[5],E,E,236,[[],[R[3]]]],[11,R[7],E,E,236,[[["self"]],[T]]],[11,R[6],E,E,236,[[["self"]],[T]]],[11,R[8],E,E,236,[[["self"]],[R[9]]]],[11,"peek",E,E,237,[[["cursor"]],["bool"]]],[11,"display",E,E,237,[[],["str"]]],[11,"span",E,E,237,[[["self"]],["span"]]],[11,"into",E,E,237,[[],[U]]],[11,"from",E,E,237,[[[T]],[T]]],[11,R[46],E,E,237,[[["self"]],[T]]],[11,R[47],E,E,237,[[["self"],[T]]]],[11,R[4],E,E,237,[[[U]],[R[3]]]],[11,R[5],E,E,237,[[],[R[3]]]],[11,R[7],E,E,237,[[["self"]],[T]]],[11,R[6],E,E,237,[[["self"]],[T]]],[11,R[8],E,E,237,[[["self"]],[R[9]]]],[11,"peek",E,E,238,[[["cursor"]],["bool"]]],[11,"display",E,E,238,[[],["str"]]],[11,"span",E,E,238,[[["self"]],["span"]]],[11,"into",E,E,238,[[],[U]]],[11,"from",E,E,238,[[[T]],[T]]],[11,R[46],E,E,238,[[["self"]],[T]]],[11,R[47],E,E,238,[[["self"],[T]]]],[11,R[4],E,E,238,[[[U]],[R[3]]]],[11,R[5],E,E,238,[[],[R[3]]]],[11,R[7],E,E,238,[[["self"]],[T]]],[11,R[6],E,E,238,[[["self"]],[T]]],[11,R[8],E,E,238,[[["self"]],[R[9]]]],[11,"peek",E,E,239,[[["cursor"]],["bool"]]],[11,"display",E,E,239,[[],["str"]]],[11,"span",E,E,239,[[["self"]],["span"]]],[11,"into",E,E,239,[[],[U]]],[11,"from",E,E,239,[[[T]],[T]]],[11,R[46],E,E,239,[[["self"]],[T]]],[11,R[47],E,E,239,[[["self"],[T]]]],[11,R[4],E,E,239,[[[U]],[R[3]]]],[11,R[5],E,E,239,[[],[R[3]]]],[11,R[7],E,E,239,[[["self"]],[T]]],[11,R[6],E,E,239,[[["self"]],[T]]],[11,R[8],E,E,239,[[["self"]],[R[9]]]],[11,"peek",E,E,240,[[["cursor"]],["bool"]]],[11,"display",E,E,240,[[],["str"]]],[11,"span",E,E,240,[[["self"]],["span"]]],[11,"into",E,E,240,[[],[U]]],[11,"from",E,E,240,[[[T]],[T]]],[11,R[46],E,E,240,[[["self"]],[T]]],[11,R[47],E,E,240,[[["self"],[T]]]],[11,R[4],E,E,240,[[[U]],[R[3]]]],[11,R[5],E,E,240,[[],[R[3]]]],[11,R[7],E,E,240,[[["self"]],[T]]],[11,R[6],E,E,240,[[["self"]],[T]]],[11,R[8],E,E,240,[[["self"]],[R[9]]]],[11,"peek",E,E,241,[[["cursor"]],["bool"]]],[11,"display",E,E,241,[[],["str"]]],[11,"span",E,E,241,[[["self"]],["span"]]],[11,"into",E,E,241,[[],[U]]],[11,"from",E,E,241,[[[T]],[T]]],[11,R[46],E,E,241,[[["self"]],[T]]],[11,R[47],E,E,241,[[["self"],[T]]]],[11,R[4],E,E,241,[[[U]],[R[3]]]],[11,R[5],E,E,241,[[],[R[3]]]],[11,R[7],E,E,241,[[["self"]],[T]]],[11,R[6],E,E,241,[[["self"]],[T]]],[11,R[8],E,E,241,[[["self"]],[R[9]]]],[11,"peek",E,E,242,[[["cursor"]],["bool"]]],[11,"display",E,E,242,[[],["str"]]],[11,"span",E,E,242,[[["self"]],["span"]]],[11,"into",E,E,242,[[],[U]]],[11,"from",E,E,242,[[[T]],[T]]],[11,R[46],E,E,242,[[["self"]],[T]]],[11,R[47],E,E,242,[[["self"],[T]]]],[11,R[4],E,E,242,[[[U]],[R[3]]]],[11,R[5],E,E,242,[[],[R[3]]]],[11,R[7],E,E,242,[[["self"]],[T]]],[11,R[6],E,E,242,[[["self"]],[T]]],[11,R[8],E,E,242,[[["self"]],[R[9]]]],[11,"peek",E,E,243,[[["cursor"]],["bool"]]],[11,"display",E,E,243,[[],["str"]]],[11,"span",E,E,243,[[["self"]],["span"]]],[11,"into",E,E,243,[[],[U]]],[11,"from",E,E,243,[[[T]],[T]]],[11,R[46],E,E,243,[[["self"]],[T]]],[11,R[47],E,E,243,[[["self"],[T]]]],[11,R[4],E,E,243,[[[U]],[R[3]]]],[11,R[5],E,E,243,[[],[R[3]]]],[11,R[7],E,E,243,[[["self"]],[T]]],[11,R[6],E,E,243,[[["self"]],[T]]],[11,R[8],E,E,243,[[["self"]],[R[9]]]],[11,"peek",E,E,244,[[["cursor"]],["bool"]]],[11,"display",E,E,244,[[],["str"]]],[11,"span",E,E,244,[[["self"]],["span"]]],[11,"into",E,E,244,[[],[U]]],[11,"from",E,E,244,[[[T]],[T]]],[11,R[46],E,E,244,[[["self"]],[T]]],[11,R[47],E,E,244,[[["self"],[T]]]],[11,R[4],E,E,244,[[[U]],[R[3]]]],[11,R[5],E,E,244,[[],[R[3]]]],[11,R[7],E,E,244,[[["self"]],[T]]],[11,R[6],E,E,244,[[["self"]],[T]]],[11,R[8],E,E,244,[[["self"]],[R[9]]]],[11,"peek",E,E,245,[[["cursor"]],["bool"]]],[11,"display",E,E,245,[[],["str"]]],[11,"span",E,E,245,[[["self"]],["span"]]],[11,"into",E,E,245,[[],[U]]],[11,"from",E,E,245,[[[T]],[T]]],[11,R[46],E,E,245,[[["self"]],[T]]],[11,R[47],E,E,245,[[["self"],[T]]]],[11,R[4],E,E,245,[[[U]],[R[3]]]],[11,R[5],E,E,245,[[],[R[3]]]],[11,R[7],E,E,245,[[["self"]],[T]]],[11,R[6],E,E,245,[[["self"]],[T]]],[11,R[8],E,E,245,[[["self"]],[R[9]]]],[11,"peek",E,E,246,[[["cursor"]],["bool"]]],[11,"display",E,E,246,[[],["str"]]],[11,"span",E,E,246,[[["self"]],["span"]]],[11,"into",E,E,246,[[],[U]]],[11,"from",E,E,246,[[[T]],[T]]],[11,R[46],E,E,246,[[["self"]],[T]]],[11,R[47],E,E,246,[[["self"],[T]]]],[11,R[4],E,E,246,[[[U]],[R[3]]]],[11,R[5],E,E,246,[[],[R[3]]]],[11,R[7],E,E,246,[[["self"]],[T]]],[11,R[6],E,E,246,[[["self"]],[T]]],[11,R[8],E,E,246,[[["self"]],[R[9]]]],[11,"peek",E,E,247,[[["cursor"]],["bool"]]],[11,"display",E,E,247,[[],["str"]]],[11,"span",E,E,247,[[["self"]],["span"]]],[11,"into",E,E,247,[[],[U]]],[11,"from",E,E,247,[[[T]],[T]]],[11,R[46],E,E,247,[[["self"]],[T]]],[11,R[47],E,E,247,[[["self"],[T]]]],[11,R[4],E,E,247,[[[U]],[R[3]]]],[11,R[5],E,E,247,[[],[R[3]]]],[11,R[7],E,E,247,[[["self"]],[T]]],[11,R[6],E,E,247,[[["self"]],[T]]],[11,R[8],E,E,247,[[["self"]],[R[9]]]],[11,"peek",E,E,248,[[["cursor"]],["bool"]]],[11,"display",E,E,248,[[],["str"]]],[11,"span",E,E,248,[[["self"]],["span"]]],[11,"into",E,E,248,[[],[U]]],[11,"from",E,E,248,[[[T]],[T]]],[11,R[46],E,E,248,[[["self"]],[T]]],[11,R[47],E,E,248,[[["self"],[T]]]],[11,R[4],E,E,248,[[[U]],[R[3]]]],[11,R[5],E,E,248,[[],[R[3]]]],[11,R[7],E,E,248,[[["self"]],[T]]],[11,R[6],E,E,248,[[["self"]],[T]]],[11,R[8],E,E,248,[[["self"]],[R[9]]]],[11,"peek",E,E,249,[[["cursor"]],["bool"]]],[11,"display",E,E,249,[[],["str"]]],[11,"span",E,E,249,[[["self"]],["span"]]],[11,"into",E,E,249,[[],[U]]],[11,"from",E,E,249,[[[T]],[T]]],[11,R[46],E,E,249,[[["self"]],[T]]],[11,R[47],E,E,249,[[["self"],[T]]]],[11,R[4],E,E,249,[[[U]],[R[3]]]],[11,R[5],E,E,249,[[],[R[3]]]],[11,R[7],E,E,249,[[["self"]],[T]]],[11,R[6],E,E,249,[[["self"]],[T]]],[11,R[8],E,E,249,[[["self"]],[R[9]]]],[11,"peek",E,E,250,[[["cursor"]],["bool"]]],[11,"display",E,E,250,[[],["str"]]],[11,"span",E,E,250,[[["self"]],["span"]]],[11,"into",E,E,250,[[],[U]]],[11,"from",E,E,250,[[[T]],[T]]],[11,R[46],E,E,250,[[["self"]],[T]]],[11,R[47],E,E,250,[[["self"],[T]]]],[11,R[4],E,E,250,[[[U]],[R[3]]]],[11,R[5],E,E,250,[[],[R[3]]]],[11,R[7],E,E,250,[[["self"]],[T]]],[11,R[6],E,E,250,[[["self"]],[T]]],[11,R[8],E,E,250,[[["self"]],[R[9]]]],[11,"peek",E,E,251,[[["cursor"]],["bool"]]],[11,"display",E,E,251,[[],["str"]]],[11,"span",E,E,251,[[["self"]],["span"]]],[11,"into",E,E,251,[[],[U]]],[11,"from",E,E,251,[[[T]],[T]]],[11,R[46],E,E,251,[[["self"]],[T]]],[11,R[47],E,E,251,[[["self"],[T]]]],[11,R[4],E,E,251,[[[U]],[R[3]]]],[11,R[5],E,E,251,[[],[R[3]]]],[11,R[7],E,E,251,[[["self"]],[T]]],[11,R[6],E,E,251,[[["self"]],[T]]],[11,R[8],E,E,251,[[["self"]],[R[9]]]],[11,"peek",E,E,252,[[["cursor"]],["bool"]]],[11,"display",E,E,252,[[],["str"]]],[11,"span",E,E,252,[[["self"]],["span"]]],[11,"into",E,E,252,[[],[U]]],[11,"from",E,E,252,[[[T]],[T]]],[11,R[46],E,E,252,[[["self"]],[T]]],[11,R[47],E,E,252,[[["self"],[T]]]],[11,R[4],E,E,252,[[[U]],[R[3]]]],[11,R[5],E,E,252,[[],[R[3]]]],[11,R[7],E,E,252,[[["self"]],[T]]],[11,R[6],E,E,252,[[["self"]],[T]]],[11,R[8],E,E,252,[[["self"]],[R[9]]]],[11,"peek",E,E,253,[[["cursor"]],["bool"]]],[11,"display",E,E,253,[[],["str"]]],[11,"span",E,E,253,[[["self"]],["span"]]],[11,"into",E,E,253,[[],[U]]],[11,"from",E,E,253,[[[T]],[T]]],[11,R[46],E,E,253,[[["self"]],[T]]],[11,R[47],E,E,253,[[["self"],[T]]]],[11,R[4],E,E,253,[[[U]],[R[3]]]],[11,R[5],E,E,253,[[],[R[3]]]],[11,R[7],E,E,253,[[["self"]],[T]]],[11,R[6],E,E,253,[[["self"]],[T]]],[11,R[8],E,E,253,[[["self"]],[R[9]]]],[11,"peek",E,E,254,[[["cursor"]],["bool"]]],[11,"display",E,E,254,[[],["str"]]],[11,"span",E,E,254,[[["self"]],["span"]]],[11,"into",E,E,254,[[],[U]]],[11,"from",E,E,254,[[[T]],[T]]],[11,R[46],E,E,254,[[["self"]],[T]]],[11,R[47],E,E,254,[[["self"],[T]]]],[11,R[4],E,E,254,[[[U]],[R[3]]]],[11,R[5],E,E,254,[[],[R[3]]]],[11,R[7],E,E,254,[[["self"]],[T]]],[11,R[6],E,E,254,[[["self"]],[T]]],[11,R[8],E,E,254,[[["self"]],[R[9]]]],[11,"peek",E,E,255,[[["cursor"]],["bool"]]],[11,"display",E,E,255,[[],["str"]]],[11,"span",E,E,255,[[["self"]],["span"]]],[11,"into",E,E,255,[[],[U]]],[11,"from",E,E,255,[[[T]],[T]]],[11,R[46],E,E,255,[[["self"]],[T]]],[11,R[47],E,E,255,[[["self"],[T]]]],[11,R[4],E,E,255,[[[U]],[R[3]]]],[11,R[5],E,E,255,[[],[R[3]]]],[11,R[7],E,E,255,[[["self"]],[T]]],[11,R[6],E,E,255,[[["self"]],[T]]],[11,R[8],E,E,255,[[["self"]],[R[9]]]],[11,"peek",E,E,256,[[["cursor"]],["bool"]]],[11,"display",E,E,256,[[],["str"]]],[11,"span",E,E,256,[[["self"]],["span"]]],[11,"into",E,E,256,[[],[U]]],[11,"from",E,E,256,[[[T]],[T]]],[11,R[46],E,E,256,[[["self"]],[T]]],[11,R[47],E,E,256,[[["self"],[T]]]],[11,R[4],E,E,256,[[[U]],[R[3]]]],[11,R[5],E,E,256,[[],[R[3]]]],[11,R[7],E,E,256,[[["self"]],[T]]],[11,R[6],E,E,256,[[["self"]],[T]]],[11,R[8],E,E,256,[[["self"]],[R[9]]]],[11,"peek",E,E,257,[[["cursor"]],["bool"]]],[11,"display",E,E,257,[[],["str"]]],[11,"span",E,E,257,[[["self"]],["span"]]],[11,"into",E,E,257,[[],[U]]],[11,"from",E,E,257,[[[T]],[T]]],[11,R[46],E,E,257,[[["self"]],[T]]],[11,R[47],E,E,257,[[["self"],[T]]]],[11,R[4],E,E,257,[[[U]],[R[3]]]],[11,R[5],E,E,257,[[],[R[3]]]],[11,R[7],E,E,257,[[["self"]],[T]]],[11,R[6],E,E,257,[[["self"]],[T]]],[11,R[8],E,E,257,[[["self"]],[R[9]]]],[11,"peek",E,E,258,[[["cursor"]],["bool"]]],[11,"display",E,E,258,[[],["str"]]],[11,"span",E,E,258,[[["self"]],["span"]]],[11,"into",E,E,258,[[],[U]]],[11,"from",E,E,258,[[[T]],[T]]],[11,R[46],E,E,258,[[["self"]],[T]]],[11,R[47],E,E,258,[[["self"],[T]]]],[11,R[4],E,E,258,[[[U]],[R[3]]]],[11,R[5],E,E,258,[[],[R[3]]]],[11,R[7],E,E,258,[[["self"]],[T]]],[11,R[6],E,E,258,[[["self"]],[T]]],[11,R[8],E,E,258,[[["self"]],[R[9]]]],[11,"peek",E,E,259,[[["cursor"]],["bool"]]],[11,"display",E,E,259,[[],["str"]]],[11,"span",E,E,259,[[["self"]],["span"]]],[11,"into",E,E,259,[[],[U]]],[11,"from",E,E,259,[[[T]],[T]]],[11,R[46],E,E,259,[[["self"]],[T]]],[11,R[47],E,E,259,[[["self"],[T]]]],[11,R[4],E,E,259,[[[U]],[R[3]]]],[11,R[5],E,E,259,[[],[R[3]]]],[11,R[7],E,E,259,[[["self"]],[T]]],[11,R[6],E,E,259,[[["self"]],[T]]],[11,R[8],E,E,259,[[["self"]],[R[9]]]],[11,"peek",E,E,260,[[["cursor"]],["bool"]]],[11,"display",E,E,260,[[],["str"]]],[11,"span",E,E,260,[[["self"]],["span"]]],[11,"into",E,E,260,[[],[U]]],[11,"from",E,E,260,[[[T]],[T]]],[11,R[46],E,E,260,[[["self"]],[T]]],[11,R[47],E,E,260,[[["self"],[T]]]],[11,R[4],E,E,260,[[[U]],[R[3]]]],[11,R[5],E,E,260,[[],[R[3]]]],[11,R[7],E,E,260,[[["self"]],[T]]],[11,R[6],E,E,260,[[["self"]],[T]]],[11,R[8],E,E,260,[[["self"]],[R[9]]]],[11,"peek",E,E,261,[[["cursor"]],["bool"]]],[11,"display",E,E,261,[[],["str"]]],[11,"span",E,E,261,[[["self"]],["span"]]],[11,"into",E,E,261,[[],[U]]],[11,"from",E,E,261,[[[T]],[T]]],[11,R[46],E,E,261,[[["self"]],[T]]],[11,R[47],E,E,261,[[["self"],[T]]]],[11,R[4],E,E,261,[[[U]],[R[3]]]],[11,R[5],E,E,261,[[],[R[3]]]],[11,R[7],E,E,261,[[["self"]],[T]]],[11,R[6],E,E,261,[[["self"]],[T]]],[11,R[8],E,E,261,[[["self"]],[R[9]]]],[11,"peek",E,E,262,[[["cursor"]],["bool"]]],[11,"display",E,E,262,[[],["str"]]],[11,"span",E,E,262,[[["self"]],["span"]]],[11,"into",E,E,262,[[],[U]]],[11,"from",E,E,262,[[[T]],[T]]],[11,R[46],E,E,262,[[["self"]],[T]]],[11,R[47],E,E,262,[[["self"],[T]]]],[11,R[4],E,E,262,[[[U]],[R[3]]]],[11,R[5],E,E,262,[[],[R[3]]]],[11,R[7],E,E,262,[[["self"]],[T]]],[11,R[6],E,E,262,[[["self"]],[T]]],[11,R[8],E,E,262,[[["self"]],[R[9]]]],[11,"peek",E,E,263,[[["cursor"]],["bool"]]],[11,"display",E,E,263,[[],["str"]]],[11,"span",E,E,263,[[["self"]],["span"]]],[11,"into",E,E,263,[[],[U]]],[11,"from",E,E,263,[[[T]],[T]]],[11,R[46],E,E,263,[[["self"]],[T]]],[11,R[47],E,E,263,[[["self"],[T]]]],[11,R[4],E,E,263,[[[U]],[R[3]]]],[11,R[5],E,E,263,[[],[R[3]]]],[11,R[7],E,E,263,[[["self"]],[T]]],[11,R[6],E,E,263,[[["self"]],[T]]],[11,R[8],E,E,263,[[["self"]],[R[9]]]],[11,"peek",E,E,264,[[["cursor"]],["bool"]]],[11,"display",E,E,264,[[],["str"]]],[11,"span",E,E,264,[[["self"]],["span"]]],[11,"into",E,E,264,[[],[U]]],[11,"from",E,E,264,[[[T]],[T]]],[11,R[46],E,E,264,[[["self"]],[T]]],[11,R[47],E,E,264,[[["self"],[T]]]],[11,R[4],E,E,264,[[[U]],[R[3]]]],[11,R[5],E,E,264,[[],[R[3]]]],[11,R[7],E,E,264,[[["self"]],[T]]],[11,R[6],E,E,264,[[["self"]],[T]]],[11,R[8],E,E,264,[[["self"]],[R[9]]]],[11,"peek",E,E,265,[[["cursor"]],["bool"]]],[11,"display",E,E,265,[[],["str"]]],[11,"span",E,E,265,[[["self"]],["span"]]],[11,"into",E,E,265,[[],[U]]],[11,"from",E,E,265,[[[T]],[T]]],[11,R[46],E,E,265,[[["self"]],[T]]],[11,R[47],E,E,265,[[["self"],[T]]]],[11,R[4],E,E,265,[[[U]],[R[3]]]],[11,R[5],E,E,265,[[],[R[3]]]],[11,R[7],E,E,265,[[["self"]],[T]]],[11,R[6],E,E,265,[[["self"]],[T]]],[11,R[8],E,E,265,[[["self"]],[R[9]]]],[11,"peek",E,E,266,[[["cursor"]],["bool"]]],[11,"display",E,E,266,[[],["str"]]],[11,"span",E,E,266,[[["self"]],["span"]]],[11,"into",E,E,266,[[],[U]]],[11,"from",E,E,266,[[[T]],[T]]],[11,R[46],E,E,266,[[["self"]],[T]]],[11,R[47],E,E,266,[[["self"],[T]]]],[11,R[4],E,E,266,[[[U]],[R[3]]]],[11,R[5],E,E,266,[[],[R[3]]]],[11,R[7],E,E,266,[[["self"]],[T]]],[11,R[6],E,E,266,[[["self"]],[T]]],[11,R[8],E,E,266,[[["self"]],[R[9]]]],[11,"peek",E,E,267,[[["cursor"]],["bool"]]],[11,"display",E,E,267,[[],["str"]]],[11,"span",E,E,267,[[["self"]],["span"]]],[11,"into",E,E,267,[[],[U]]],[11,"from",E,E,267,[[[T]],[T]]],[11,R[46],E,E,267,[[["self"]],[T]]],[11,R[47],E,E,267,[[["self"],[T]]]],[11,R[4],E,E,267,[[[U]],[R[3]]]],[11,R[5],E,E,267,[[],[R[3]]]],[11,R[7],E,E,267,[[["self"]],[T]]],[11,R[6],E,E,267,[[["self"]],[T]]],[11,R[8],E,E,267,[[["self"]],[R[9]]]],[11,"peek",E,E,268,[[["cursor"]],["bool"]]],[11,"display",E,E,268,[[],["str"]]],[11,"span",E,E,268,[[["self"]],["span"]]],[11,"into",E,E,268,[[],[U]]],[11,"from",E,E,268,[[[T]],[T]]],[11,R[46],E,E,268,[[["self"]],[T]]],[11,R[47],E,E,268,[[["self"],[T]]]],[11,R[4],E,E,268,[[[U]],[R[3]]]],[11,R[5],E,E,268,[[],[R[3]]]],[11,R[7],E,E,268,[[["self"]],[T]]],[11,R[6],E,E,268,[[["self"]],[T]]],[11,R[8],E,E,268,[[["self"]],[R[9]]]],[11,"peek",E,E,269,[[["cursor"]],["bool"]]],[11,"display",E,E,269,[[],["str"]]],[11,"span",E,E,269,[[["self"]],["span"]]],[11,"into",E,E,269,[[],[U]]],[11,"from",E,E,269,[[[T]],[T]]],[11,R[46],E,E,269,[[["self"]],[T]]],[11,R[47],E,E,269,[[["self"],[T]]]],[11,R[4],E,E,269,[[[U]],[R[3]]]],[11,R[5],E,E,269,[[],[R[3]]]],[11,R[7],E,E,269,[[["self"]],[T]]],[11,R[6],E,E,269,[[["self"]],[T]]],[11,R[8],E,E,269,[[["self"]],[R[9]]]],[11,"peek",E,E,270,[[["cursor"]],["bool"]]],[11,"display",E,E,270,[[],["str"]]],[11,"span",E,E,270,[[["self"]],["span"]]],[11,"into",E,E,270,[[],[U]]],[11,"from",E,E,270,[[[T]],[T]]],[11,R[46],E,E,270,[[["self"]],[T]]],[11,R[47],E,E,270,[[["self"],[T]]]],[11,R[4],E,E,270,[[[U]],[R[3]]]],[11,R[5],E,E,270,[[],[R[3]]]],[11,R[7],E,E,270,[[["self"]],[T]]],[11,R[6],E,E,270,[[["self"]],[T]]],[11,R[8],E,E,270,[[["self"]],[R[9]]]],[11,"peek",E,E,271,[[["cursor"]],["bool"]]],[11,"display",E,E,271,[[],["str"]]],[11,"span",E,E,271,[[["self"]],["span"]]],[11,"into",E,E,271,[[],[U]]],[11,"from",E,E,271,[[[T]],[T]]],[11,R[46],E,E,271,[[["self"]],[T]]],[11,R[47],E,E,271,[[["self"],[T]]]],[11,R[4],E,E,271,[[[U]],[R[3]]]],[11,R[5],E,E,271,[[],[R[3]]]],[11,R[7],E,E,271,[[["self"]],[T]]],[11,R[6],E,E,271,[[["self"]],[T]]],[11,R[8],E,E,271,[[["self"]],[R[9]]]],[11,"peek",E,E,272,[[["cursor"]],["bool"]]],[11,"display",E,E,272,[[],["str"]]],[11,"span",E,E,272,[[["self"]],["span"]]],[11,"into",E,E,272,[[],[U]]],[11,"from",E,E,272,[[[T]],[T]]],[11,R[46],E,E,272,[[["self"]],[T]]],[11,R[47],E,E,272,[[["self"],[T]]]],[11,R[4],E,E,272,[[[U]],[R[3]]]],[11,R[5],E,E,272,[[],[R[3]]]],[11,R[7],E,E,272,[[["self"]],[T]]],[11,R[6],E,E,272,[[["self"]],[T]]],[11,R[8],E,E,272,[[["self"]],[R[9]]]],[11,"peek",E,E,273,[[["cursor"]],["bool"]]],[11,"display",E,E,273,[[],["str"]]],[11,"span",E,E,273,[[["self"]],["span"]]],[11,"into",E,E,273,[[],[U]]],[11,"from",E,E,273,[[[T]],[T]]],[11,R[46],E,E,273,[[["self"]],[T]]],[11,R[47],E,E,273,[[["self"],[T]]]],[11,R[4],E,E,273,[[[U]],[R[3]]]],[11,R[5],E,E,273,[[],[R[3]]]],[11,R[7],E,E,273,[[["self"]],[T]]],[11,R[6],E,E,273,[[["self"]],[T]]],[11,R[8],E,E,273,[[["self"]],[R[9]]]],[11,"peek",E,E,274,[[["cursor"]],["bool"]]],[11,"display",E,E,274,[[],["str"]]],[11,"span",E,E,274,[[["self"]],["span"]]],[11,"into",E,E,274,[[],[U]]],[11,"from",E,E,274,[[[T]],[T]]],[11,R[46],E,E,274,[[["self"]],[T]]],[11,R[47],E,E,274,[[["self"],[T]]]],[11,R[4],E,E,274,[[[U]],[R[3]]]],[11,R[5],E,E,274,[[],[R[3]]]],[11,R[7],E,E,274,[[["self"]],[T]]],[11,R[6],E,E,274,[[["self"]],[T]]],[11,R[8],E,E,274,[[["self"]],[R[9]]]],[11,"peek",E,E,275,[[["cursor"]],["bool"]]],[11,"display",E,E,275,[[],["str"]]],[11,"span",E,E,275,[[["self"]],["span"]]],[11,"into",E,E,275,[[],[U]]],[11,"from",E,E,275,[[[T]],[T]]],[11,R[46],E,E,275,[[["self"]],[T]]],[11,R[47],E,E,275,[[["self"],[T]]]],[11,R[4],E,E,275,[[[U]],[R[3]]]],[11,R[5],E,E,275,[[],[R[3]]]],[11,R[7],E,E,275,[[["self"]],[T]]],[11,R[6],E,E,275,[[["self"]],[T]]],[11,R[8],E,E,275,[[["self"]],[R[9]]]],[11,"peek",E,E,276,[[["cursor"]],["bool"]]],[11,"display",E,E,276,[[],["str"]]],[11,"span",E,E,276,[[["self"]],["span"]]],[11,"into",E,E,276,[[],[U]]],[11,"from",E,E,276,[[[T]],[T]]],[11,R[46],E,E,276,[[["self"]],[T]]],[11,R[47],E,E,276,[[["self"],[T]]]],[11,R[4],E,E,276,[[[U]],[R[3]]]],[11,R[5],E,E,276,[[],[R[3]]]],[11,R[7],E,E,276,[[["self"]],[T]]],[11,R[6],E,E,276,[[["self"]],[T]]],[11,R[8],E,E,276,[[["self"]],[R[9]]]],[11,"peek",E,E,277,[[["cursor"]],["bool"]]],[11,"display",E,E,277,[[],["str"]]],[11,"span",E,E,277,[[["self"]],["span"]]],[11,"into",E,E,277,[[],[U]]],[11,"from",E,E,277,[[[T]],[T]]],[11,R[46],E,E,277,[[["self"]],[T]]],[11,R[47],E,E,277,[[["self"],[T]]]],[11,R[4],E,E,277,[[[U]],[R[3]]]],[11,R[5],E,E,277,[[],[R[3]]]],[11,R[7],E,E,277,[[["self"]],[T]]],[11,R[6],E,E,277,[[["self"]],[T]]],[11,R[8],E,E,277,[[["self"]],[R[9]]]],[11,"peek",E,E,278,[[["cursor"]],["bool"]]],[11,"display",E,E,278,[[],["str"]]],[11,"span",E,E,278,[[["self"]],["span"]]],[11,"into",E,E,278,[[],[U]]],[11,"from",E,E,278,[[[T]],[T]]],[11,R[46],E,E,278,[[["self"]],[T]]],[11,R[47],E,E,278,[[["self"],[T]]]],[11,R[4],E,E,278,[[[U]],[R[3]]]],[11,R[5],E,E,278,[[],[R[3]]]],[11,R[7],E,E,278,[[["self"]],[T]]],[11,R[6],E,E,278,[[["self"]],[T]]],[11,R[8],E,E,278,[[["self"]],[R[9]]]],[11,"peek",E,E,279,[[["cursor"]],["bool"]]],[11,"display",E,E,279,[[],["str"]]],[11,"into",E,E,279,[[],[U]]],[11,"from",E,E,279,[[[T]],[T]]],[11,R[46],E,E,279,[[["self"]],[T]]],[11,R[47],E,E,279,[[["self"],[T]]]],[11,R[4],E,E,279,[[[U]],[R[3]]]],[11,R[5],E,E,279,[[],[R[3]]]],[11,R[7],E,E,279,[[["self"]],[T]]],[11,R[6],E,E,279,[[["self"]],[T]]],[11,R[8],E,E,279,[[["self"]],[R[9]]]],[11,"peek",E,E,280,[[["cursor"]],["bool"]]],[11,"display",E,E,280,[[],["str"]]],[11,"into",E,E,280,[[],[U]]],[11,"from",E,E,280,[[[T]],[T]]],[11,R[46],E,E,280,[[["self"]],[T]]],[11,R[47],E,E,280,[[["self"],[T]]]],[11,R[4],E,E,280,[[[U]],[R[3]]]],[11,R[5],E,E,280,[[],[R[3]]]],[11,R[7],E,E,280,[[["self"]],[T]]],[11,R[6],E,E,280,[[["self"]],[T]]],[11,R[8],E,E,280,[[["self"]],[R[9]]]],[11,"peek",E,E,281,[[["cursor"]],["bool"]]],[11,"display",E,E,281,[[],["str"]]],[11,"into",E,E,281,[[],[U]]],[11,"from",E,E,281,[[[T]],[T]]],[11,R[46],E,E,281,[[["self"]],[T]]],[11,R[47],E,E,281,[[["self"],[T]]]],[11,R[4],E,E,281,[[[U]],[R[3]]]],[11,R[5],E,E,281,[[],[R[3]]]],[11,R[7],E,E,281,[[["self"]],[T]]],[11,R[6],E,E,281,[[["self"]],[T]]],[11,R[8],E,E,281,[[["self"]],[R[9]]]],[11,"peek",E,E,282,[[["cursor"]],["bool"]]],[11,"display",E,E,282,[[],["str"]]],[11,"into",E,E,282,[[],[U]]],[11,"from",E,E,282,[[[T]],[T]]],[11,R[46],E,E,282,[[["self"]],[T]]],[11,R[47],E,E,282,[[["self"],[T]]]],[11,R[4],E,E,282,[[[U]],[R[3]]]],[11,R[5],E,E,282,[[],[R[3]]]],[11,R[7],E,E,282,[[["self"]],[T]]],[11,R[6],E,E,282,[[["self"]],[T]]],[11,R[8],E,E,282,[[["self"]],[R[9]]]],[11,"into",R[2726],E,290,[[],[U]]],[11,"from",E,E,290,[[[T]],[T]]],[11,R[4],E,E,290,[[[U]],[R[3]]]],[11,R[5],E,E,290,[[],[R[3]]]],[11,R[7],E,E,290,[[["self"]],[T]]],[11,R[6],E,E,290,[[["self"]],[T]]],[11,R[8],E,E,290,[[["self"]],[R[9]]]],[11,"into",E,E,291,[[],[U]]],[11,"from",E,E,291,[[[T]],[T]]],[11,R[46],E,E,291,[[["self"]],[T]]],[11,R[47],E,E,291,[[["self"],[T]]]],[11,R[4],E,E,291,[[[U]],[R[3]]]],[11,R[5],E,E,291,[[],[R[3]]]],[11,R[7],E,E,291,[[["self"]],[T]]],[11,R[6],E,E,291,[[["self"]],[T]]],[11,R[8],E,E,291,[[["self"]],[R[9]]]],[11,"span",R[2727],E,294,[[["self"]],["span"]]],[11,"into",E,E,294,[[],[U]]],[11,R[45],E,E,294,[[],["i"]]],[11,"from",E,E,294,[[[T]],[T]]],[11,R[46],E,E,294,[[["self"]],[T]]],[11,R[47],E,E,294,[[["self"],[T]]]],[11,R[4],E,E,294,[[[U]],[R[3]]]],[11,R[5],E,E,294,[[],[R[3]]]],[11,R[7],E,E,294,[[["self"]],[T]]],[11,R[6],E,E,294,[[["self"]],[T]]],[11,R[8],E,E,294,[[["self"]],[R[9]]]],[11,"into",E,E,307,[[],[U]]],[11,R[45],E,E,307,[[],["i"]]],[11,"from",E,E,307,[[[T]],[T]]],[11,R[46],E,E,307,[[["self"]],[T]]],[11,R[47],E,E,307,[[["self"],[T]]]],[11,R[4],E,E,307,[[[U]],[R[3]]]],[11,R[5],E,E,307,[[],[R[3]]]],[11,R[7],E,E,307,[[["self"]],[T]]],[11,R[6],E,E,307,[[["self"]],[T]]],[11,R[8],E,E,307,[[["self"]],[R[9]]]],[11,"into",E,E,308,[[],[U]]],[11,R[45],E,E,308,[[],["i"]]],[11,"from",E,E,308,[[[T]],[T]]],[11,R[4],E,E,308,[[[U]],[R[3]]]],[11,R[5],E,E,308,[[],[R[3]]]],[11,R[7],E,E,308,[[["self"]],[T]]],[11,R[6],E,E,308,[[["self"]],[T]]],[11,R[8],E,E,308,[[["self"]],[R[9]]]],[11,"into",E,E,309,[[],[U]]],[11,R[45],E,E,309,[[],["i"]]],[11,"from",E,E,309,[[[T]],[T]]],[11,R[46],E,E,309,[[["self"]],[T]]],[11,R[47],E,E,309,[[["self"],[T]]]],[11,R[4],E,E,309,[[[U]],[R[3]]]],[11,R[5],E,E,309,[[],[R[3]]]],[11,R[7],E,E,309,[[["self"]],[T]]],[11,R[6],E,E,309,[[["self"]],[T]]],[11,R[8],E,E,309,[[["self"]],[R[9]]]],[11,"into",E,E,310,[[],[U]]],[11,R[45],E,E,310,[[],["i"]]],[11,"from",E,E,310,[[[T]],[T]]],[11,R[46],E,E,310,[[["self"]],[T]]],[11,R[47],E,E,310,[[["self"],[T]]]],[11,R[4],E,E,310,[[[U]],[R[3]]]],[11,R[5],E,E,310,[[],[R[3]]]],[11,R[7],E,E,310,[[["self"]],[T]]],[11,R[6],E,E,310,[[["self"]],[T]]],[11,R[8],E,E,310,[[["self"]],[R[9]]]],[11,"into",E,E,311,[[],[U]]],[11,R[45],E,E,311,[[],["i"]]],[11,"from",E,E,311,[[[T]],[T]]],[11,R[46],E,E,311,[[["self"]],[T]]],[11,R[47],E,E,311,[[["self"],[T]]]],[11,R[4],E,E,311,[[[U]],[R[3]]]],[11,R[5],E,E,311,[[],[R[3]]]],[11,R[7],E,E,311,[[["self"]],[T]]],[11,R[6],E,E,311,[[["self"]],[T]]],[11,R[8],E,E,311,[[["self"]],[R[9]]]],[11,"into",E,E,312,[[],[U]]],[11,R[45],E,E,312,[[],["i"]]],[11,"from",E,E,312,[[[T]],[T]]],[11,R[4],E,E,312,[[[U]],[R[3]]]],[11,R[5],E,E,312,[[],[R[3]]]],[11,R[7],E,E,312,[[["self"]],[T]]],[11,R[6],E,E,312,[[["self"]],[T]]],[11,R[8],E,E,312,[[["self"]],[R[9]]]],[11,"span",E,E,293,[[["self"]],["span"]]],[11,"into",E,E,293,[[],[U]]],[11,"from",E,E,293,[[[T]],[T]]],[11,R[46],E,E,293,[[["self"]],[T]]],[11,R[47],E,E,293,[[["self"],[T]]]],[11,R[4],E,E,293,[[[U]],[R[3]]]],[11,R[5],E,E,293,[[],[R[3]]]],[11,R[7],E,E,293,[[["self"]],[T]]],[11,R[6],E,E,293,[[["self"]],[T]]],[11,R[8],E,E,293,[[["self"]],[R[9]]]],[11,"into",R[1018],E,313,[[],[U]]],[11,"from",E,E,313,[[[T]],[T]]],[11,R[4],E,E,313,[[[U]],[R[3]]]],[11,R[5],E,E,313,[[],[R[3]]]],[11,R[7],E,E,313,[[["self"]],[T]]],[11,R[6],E,E,313,[[["self"]],[T]]],[11,R[8],E,E,313,[[["self"]],[R[9]]]],[11,"into",E,E,302,[[],[U]]],[11,R[113],E,E,302,[[["self"]],["string"]]],[11,"from",E,E,302,[[[T]],[T]]],[11,R[4],E,E,302,[[[U]],[R[3]]]],[11,R[5],E,E,302,[[],[R[3]]]],[11,R[7],E,E,302,[[["self"]],[T]]],[11,R[6],E,E,302,[[["self"]],[T]]],[11,R[8],E,E,302,[[["self"]],[R[9]]]],[11,"into",E,E,301,[[],[U]]],[11,"from",E,E,301,[[[T]],[T]]],[11,R[46],E,E,301,[[["self"]],[T]]],[11,R[47],E,E,301,[[["self"],[T]]]],[11,R[4],E,E,301,[[[U]],[R[3]]]],[11,R[5],E,E,301,[[],[R[3]]]],[11,R[7],E,E,301,[[["self"]],[T]]],[11,R[6],E,E,301,[[["self"]],[T]]],[11,R[8],E,E,301,[[["self"]],[R[9]]]],[11,"into",E,E,314,[[],[U]]],[11,"from",E,E,314,[[[T]],[T]]],[11,R[4],E,E,314,[[[U]],[R[3]]]],[11,R[5],E,E,314,[[],[R[3]]]],[11,R[7],E,E,314,[[["self"]],[T]]],[11,R[6],E,E,314,[[["self"]],[T]]],[11,R[8],E,E,314,[[["self"]],[R[9]]]],[11,"fmt","syn",E,304,[[["self"],[R[10]]],[[R[3],["error"]],["error"]]]],[11,"cmp",E,E,304,[[["self"],["ident"]],[R[50]]]],[11,R[77],E,E,304,[[["self"],["ident"]],[[R[50]],[R[23],[R[50]]]]]],[11,"fmt",E,E,304,[[["self"],[R[10]]],[[R[3],["error"]],["error"]]]],[11,"clone",E,E,304,[[["self"]],["ident"]]],[11,"hash",E,E,304,[[["self"],["h"]]]],[11,"eq",E,E,304,[[["self"],[T]],["bool"]]],[11,"eq",E,E,304,[[["self"],["ident"]],["bool"]]],[11,R[114],E,E,304,[[["self"],[R[768]]]]],[11,"span",E,E,304,[[["self"]],[["span"],[R[23],["span"]]]]],[11,"fmt",E,E,304,[[["self"],[R[10]]],[[R[3],["error"]],["error"]]]],[11,"peek",E,E,101,[[["cursor"]],["bool"]]],[11,"display",E,E,101,[[],["str"]]],[11,"peek",E,E,168,[[["cursor"]],["bool"]]],[11,"display",E,E,168,[[],["str"]]],[11,"peek",E,E,284,[[["cursor"]],["bool"]]],[11,"display",E,E,284,[[],["str"]]],[11,"peek",E,E,285,[[["cursor"]],["bool"]]],[11,"display",E,E,285,[[],["str"]]],[11,"peek",E,E,286,[[["cursor"]],["bool"]]],[11,"display",E,E,286,[[],["str"]]],[11,"peek",E,E,287,[[["cursor"]],["bool"]]],[11,"display",E,E,287,[[],["str"]]],[11,"peek",E,E,288,[[["cursor"]],["bool"]]],[11,"display",E,E,288,[[],["str"]]],[11,"peek",E,E,289,[[["cursor"]],["bool"]]],[11,"display",E,E,289,[[],["str"]]],[11,"peek",E,E,102,[[["cursor"]],["bool"]]],[11,"display",E,E,102,[[],["str"]]],[11,"peek",R[2728],E,180,[[["cursor"]],["bool"]]],[11,"display",E,E,180,[[],["str"]]],[11,"peek",E,E,281,[[["cursor"]],["bool"]]],[11,"display",E,E,281,[[],["str"]]],[11,"peek",E,E,279,[[["cursor"]],["bool"]]],[11,"display",E,E,279,[[],["str"]]],[11,"peek",E,E,280,[[["cursor"]],["bool"]]],[11,"display",E,E,280,[[],["str"]]],[11,"peek",E,E,282,[[["cursor"]],["bool"]]],[11,"display",E,E,282,[[],["str"]]],[11,"peek",E,E,181,[[["cursor"]],["bool"]]],[11,"display",E,E,181,[[],["str"]]],[11,"peek",E,E,182,[[["cursor"]],["bool"]]],[11,"display",E,E,182,[[],["str"]]],[11,"peek",E,E,183,[[["cursor"]],["bool"]]],[11,"display",E,E,183,[[],["str"]]],[11,"peek",E,E,184,[[["cursor"]],["bool"]]],[11,"display",E,E,184,[[],["str"]]],[11,"peek",E,E,185,[[["cursor"]],["bool"]]],[11,"display",E,E,185,[[],["str"]]],[11,"peek",E,E,186,[[["cursor"]],["bool"]]],[11,"display",E,E,186,[[],["str"]]],[11,"peek",E,E,187,[[["cursor"]],["bool"]]],[11,"display",E,E,187,[[],["str"]]],[11,"peek",E,E,188,[[["cursor"]],["bool"]]],[11,"display",E,E,188,[[],["str"]]],[11,"peek",E,E,189,[[["cursor"]],["bool"]]],[11,"display",E,E,189,[[],["str"]]],[11,"peek",E,E,190,[[["cursor"]],["bool"]]],[11,"display",E,E,190,[[],["str"]]],[11,"peek",E,E,191,[[["cursor"]],["bool"]]],[11,"display",E,E,191,[[],["str"]]],[11,"peek",E,E,192,[[["cursor"]],["bool"]]],[11,"display",E,E,192,[[],["str"]]],[11,"peek",E,E,193,[[["cursor"]],["bool"]]],[11,"display",E,E,193,[[],["str"]]],[11,"peek",E,E,194,[[["cursor"]],["bool"]]],[11,"display",E,E,194,[[],["str"]]],[11,"peek",E,E,195,[[["cursor"]],["bool"]]],[11,"display",E,E,195,[[],["str"]]],[11,"peek",E,E,196,[[["cursor"]],["bool"]]],[11,"display",E,E,196,[[],["str"]]],[11,"peek",E,E,197,[[["cursor"]],["bool"]]],[11,"display",E,E,197,[[],["str"]]],[11,"peek",E,E,198,[[["cursor"]],["bool"]]],[11,"display",E,E,198,[[],["str"]]],[11,"peek",E,E,199,[[["cursor"]],["bool"]]],[11,"display",E,E,199,[[],["str"]]],[11,"peek",E,E,200,[[["cursor"]],["bool"]]],[11,"display",E,E,200,[[],["str"]]],[11,"peek",E,E,201,[[["cursor"]],["bool"]]],[11,"display",E,E,201,[[],["str"]]],[11,"peek",E,E,202,[[["cursor"]],["bool"]]],[11,"display",E,E,202,[[],["str"]]],[11,"peek",E,E,203,[[["cursor"]],["bool"]]],[11,"display",E,E,203,[[],["str"]]],[11,"peek",E,E,204,[[["cursor"]],["bool"]]],[11,"display",E,E,204,[[],["str"]]],[11,"peek",E,E,205,[[["cursor"]],["bool"]]],[11,"display",E,E,205,[[],["str"]]],[11,"peek",E,E,206,[[["cursor"]],["bool"]]],[11,"display",E,E,206,[[],["str"]]],[11,"peek",E,E,207,[[["cursor"]],["bool"]]],[11,"display",E,E,207,[[],["str"]]],[11,"peek",E,E,208,[[["cursor"]],["bool"]]],[11,"display",E,E,208,[[],["str"]]],[11,"peek",E,E,209,[[["cursor"]],["bool"]]],[11,"display",E,E,209,[[],["str"]]],[11,"peek",E,E,210,[[["cursor"]],["bool"]]],[11,"display",E,E,210,[[],["str"]]],[11,"peek",E,E,211,[[["cursor"]],["bool"]]],[11,"display",E,E,211,[[],["str"]]],[11,"peek",E,E,212,[[["cursor"]],["bool"]]],[11,"display",E,E,212,[[],["str"]]],[11,"peek",E,E,213,[[["cursor"]],["bool"]]],[11,"display",E,E,213,[[],["str"]]],[11,"peek",E,E,214,[[["cursor"]],["bool"]]],[11,"display",E,E,214,[[],["str"]]],[11,"peek",E,E,215,[[["cursor"]],["bool"]]],[11,"display",E,E,215,[[],["str"]]],[11,"peek",E,E,216,[[["cursor"]],["bool"]]],[11,"display",E,E,216,[[],["str"]]],[11,"peek",E,E,217,[[["cursor"]],["bool"]]],[11,"display",E,E,217,[[],["str"]]],[11,"peek",E,E,218,[[["cursor"]],["bool"]]],[11,"display",E,E,218,[[],["str"]]],[11,"peek",E,E,219,[[["cursor"]],["bool"]]],[11,"display",E,E,219,[[],["str"]]],[11,"peek",E,E,220,[[["cursor"]],["bool"]]],[11,"display",E,E,220,[[],["str"]]],[11,"peek",E,E,221,[[["cursor"]],["bool"]]],[11,"display",E,E,221,[[],["str"]]],[11,"peek",E,E,222,[[["cursor"]],["bool"]]],[11,"display",E,E,222,[[],["str"]]],[11,"peek",E,E,223,[[["cursor"]],["bool"]]],[11,"display",E,E,223,[[],["str"]]],[11,"peek",E,E,224,[[["cursor"]],["bool"]]],[11,"display",E,E,224,[[],["str"]]],[11,"peek",E,E,225,[[["cursor"]],["bool"]]],[11,"display",E,E,225,[[],["str"]]],[11,"peek",E,E,226,[[["cursor"]],["bool"]]],[11,"display",E,E,226,[[],["str"]]],[11,"peek",E,E,227,[[["cursor"]],["bool"]]],[11,"display",E,E,227,[[],["str"]]],[11,"peek",E,E,228,[[["cursor"]],["bool"]]],[11,"display",E,E,228,[[],["str"]]],[11,"peek",E,E,229,[[["cursor"]],["bool"]]],[11,"display",E,E,229,[[],["str"]]],[11,"peek",E,E,230,[[["cursor"]],["bool"]]],[11,"display",E,E,230,[[],["str"]]],[11,"peek",E,E,231,[[["cursor"]],["bool"]]],[11,"display",E,E,231,[[],["str"]]],[11,"peek",E,E,232,[[["cursor"]],["bool"]]],[11,"display",E,E,232,[[],["str"]]],[11,"peek",E,E,233,[[["cursor"]],["bool"]]],[11,"display",E,E,233,[[],["str"]]],[11,"peek",E,E,234,[[["cursor"]],["bool"]]],[11,"display",E,E,234,[[],["str"]]],[11,"peek",E,E,235,[[["cursor"]],["bool"]]],[11,"display",E,E,235,[[],["str"]]],[11,"peek",E,E,236,[[["cursor"]],["bool"]]],[11,"display",E,E,236,[[],["str"]]],[11,"peek",E,E,237,[[["cursor"]],["bool"]]],[11,"display",E,E,237,[[],["str"]]],[11,"peek",E,E,238,[[["cursor"]],["bool"]]],[11,"display",E,E,238,[[],["str"]]],[11,"peek",E,E,239,[[["cursor"]],["bool"]]],[11,"display",E,E,239,[[],["str"]]],[11,"peek",E,E,240,[[["cursor"]],["bool"]]],[11,"display",E,E,240,[[],["str"]]],[11,"peek",E,E,241,[[["cursor"]],["bool"]]],[11,"display",E,E,241,[[],["str"]]],[11,"peek",E,E,242,[[["cursor"]],["bool"]]],[11,"display",E,E,242,[[],["str"]]],[11,"peek",E,E,243,[[["cursor"]],["bool"]]],[11,"display",E,E,243,[[],["str"]]],[11,"peek",E,E,244,[[["cursor"]],["bool"]]],[11,"display",E,E,244,[[],["str"]]],[11,"peek",E,E,245,[[["cursor"]],["bool"]]],[11,"display",E,E,245,[[],["str"]]],[11,"peek",E,E,246,[[["cursor"]],["bool"]]],[11,"display",E,E,246,[[],["str"]]],[11,"peek",E,E,247,[[["cursor"]],["bool"]]],[11,"display",E,E,247,[[],["str"]]],[11,"peek",E,E,248,[[["cursor"]],["bool"]]],[11,"display",E,E,248,[[],["str"]]],[11,"peek",E,E,249,[[["cursor"]],["bool"]]],[11,"display",E,E,249,[[],["str"]]],[11,"peek",E,E,250,[[["cursor"]],["bool"]]],[11,"display",E,E,250,[[],["str"]]],[11,"peek",E,E,251,[[["cursor"]],["bool"]]],[11,"display",E,E,251,[[],["str"]]],[11,"peek",E,E,252,[[["cursor"]],["bool"]]],[11,"display",E,E,252,[[],["str"]]],[11,"peek",E,E,253,[[["cursor"]],["bool"]]],[11,"display",E,E,253,[[],["str"]]],[11,"peek",E,E,254,[[["cursor"]],["bool"]]],[11,"display",E,E,254,[[],["str"]]],[11,"peek",E,E,255,[[["cursor"]],["bool"]]],[11,"display",E,E,255,[[],["str"]]],[11,"peek",E,E,256,[[["cursor"]],["bool"]]],[11,"display",E,E,256,[[],["str"]]],[11,"peek",E,E,257,[[["cursor"]],["bool"]]],[11,"display",E,E,257,[[],["str"]]],[11,"peek",E,E,258,[[["cursor"]],["bool"]]],[11,"display",E,E,258,[[],["str"]]],[11,"peek",E,E,259,[[["cursor"]],["bool"]]],[11,"display",E,E,259,[[],["str"]]],[11,"peek",E,E,260,[[["cursor"]],["bool"]]],[11,"display",E,E,260,[[],["str"]]],[11,"peek",E,E,261,[[["cursor"]],["bool"]]],[11,"display",E,E,261,[[],["str"]]],[11,"peek",E,E,262,[[["cursor"]],["bool"]]],[11,"display",E,E,262,[[],["str"]]],[11,"peek",E,E,263,[[["cursor"]],["bool"]]],[11,"display",E,E,263,[[],["str"]]],[11,"peek",E,E,264,[[["cursor"]],["bool"]]],[11,"display",E,E,264,[[],["str"]]],[11,"peek",E,E,265,[[["cursor"]],["bool"]]],[11,"display",E,E,265,[[],["str"]]],[11,"peek",E,E,266,[[["cursor"]],["bool"]]],[11,"display",E,E,266,[[],["str"]]],[11,"peek",E,E,267,[[["cursor"]],["bool"]]],[11,"display",E,E,267,[[],["str"]]],[11,"peek",E,E,268,[[["cursor"]],["bool"]]],[11,"display",E,E,268,[[],["str"]]],[11,"peek",E,E,269,[[["cursor"]],["bool"]]],[11,"display",E,E,269,[[],["str"]]],[11,"peek",E,E,270,[[["cursor"]],["bool"]]],[11,"display",E,E,270,[[],["str"]]],[11,"peek",E,E,271,[[["cursor"]],["bool"]]],[11,"display",E,E,271,[[],["str"]]],[11,"peek",E,E,272,[[["cursor"]],["bool"]]],[11,"display",E,E,272,[[],["str"]]],[11,"peek",E,E,273,[[["cursor"]],["bool"]]],[11,"display",E,E,273,[[],["str"]]],[11,"peek",E,E,274,[[["cursor"]],["bool"]]],[11,"display",E,E,274,[[],["str"]]],[11,"peek",E,E,275,[[["cursor"]],["bool"]]],[11,"display",E,E,275,[[],["str"]]],[11,"peek",E,E,276,[[["cursor"]],["bool"]]],[11,"display",E,E,276,[[],["str"]]],[11,"peek",E,E,277,[[["cursor"]],["bool"]]],[11,"display",E,E,277,[[],["str"]]],[11,"peek",E,E,278,[[["cursor"]],["bool"]]],[11,"display",E,E,278,[[],["str"]]],[11,"peek","syn",E,304,[[["cursor"]],["bool"]]],[11,"display",E,E,304,[[],["str"]]],[11,"parse_any",E,E,304,[[[R[2233]]],[R[3]]]],[11,"unraw",E,E,304,[[["self"]],["ident"]]],[11,"advance_to",R[1018],E,302,[[["self"]]]],[11,"parse",R[2728],E,180,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,181,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,182,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,183,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,184,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,185,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,186,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,187,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,188,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,189,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,190,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,191,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,192,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,193,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,194,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,195,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,196,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,197,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,198,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,199,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,200,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,201,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,202,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,203,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,204,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,205,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,206,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,207,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,208,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,209,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,210,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,211,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,212,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,213,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,214,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,215,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,216,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,217,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,218,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,219,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,220,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,221,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,222,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,223,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,224,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,225,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,226,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,227,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,228,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,229,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,230,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,231,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,232,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,233,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,234,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,235,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,236,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,237,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,238,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,239,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,240,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,241,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,242,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,243,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,244,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,245,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,246,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,247,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,248,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,249,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,250,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,251,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,252,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,253,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,254,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,255,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,256,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,257,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,258,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,259,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,260,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,261,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,262,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,263,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,264,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,265,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,266,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,267,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,268,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,269,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,270,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,271,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,272,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,273,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,274,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,275,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,276,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,277,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,278,[[[R[2233]]],[R[3]]]],[11,"parse","syn",E,304,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,150,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,1,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,2,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,151,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,6,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,4,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,5,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,153,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,156,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,33,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,30,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,28,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,34,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,36,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,21,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,14,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,23,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,37,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,47,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,19,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,49,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,24,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,48,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,32,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,25,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,50,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,20,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,15,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,16,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,27,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,31,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,40,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,41,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,22,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,26,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,43,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,35,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,44,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,42,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,38,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,45,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,17,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,46,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,52,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,51,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,12,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,11,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,155,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,39,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,157,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,10,[[[R[2233]]],[[R[3],["arm"]],["arm"]]]],[11,"parse",E,E,53,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,56,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,158,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,57,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,54,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,62,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,160,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,61,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,159,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,55,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,63,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,161,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,165,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,78,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,79,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,74,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,87,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,167,[[[R[2233]]],[[R[3],["usetree"]],["usetree"]]]],[11,"parse",E,E,81,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,72,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,75,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,162,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,88,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,80,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,76,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,163,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,64,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,66,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,67,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,65,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,85,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,82,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,73,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,86,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,83,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,84,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,166,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,90,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,92,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,93,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,91,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,77,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,164,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,68,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,70,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,71,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,69,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,100,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,101,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,168,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,284,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,285,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,286,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,287,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,288,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,289,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,102,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,103,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,107,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,172,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,173,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,108,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,174,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,176,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,123,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,112,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,121,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,122,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,113,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,118,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,116,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,125,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,117,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,120,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,175,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,124,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,115,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,114,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,119,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,111,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,110,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,177,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,146,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,178,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,142,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,145,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,147,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,143,[[[R[2233]]],[R[3]]]],[11,"parse",E,E,144,[[[R[2233]]],[R[3]]]],[11,"parse",R[1018],E,314,[[[R[2233]]],[R[3]]]],[11,"len",R[2727],E,307,[[["self"]],["usize"]]],[11,"len",E,E,308,[[["self"]],["usize"]]],[11,"len",E,E,309,[[["self"]],["usize"]]],[11,"len",E,E,310,[[["self"]],["usize"]]],[11,"len",E,E,311,[[["self"]],["usize"]]],[11,"len",E,E,312,[[["self"]],["usize"]]],[11,R[83],R[2728],E,180,[[],["self"]]],[11,R[83],E,E,181,[[],["self"]]],[11,R[83],E,E,182,[[],["self"]]],[11,R[83],E,E,183,[[],["self"]]],[11,R[83],E,E,184,[[],["self"]]],[11,R[83],E,E,185,[[],["self"]]],[11,R[83],E,E,186,[[],["self"]]],[11,R[83],E,E,187,[[],["self"]]],[11,R[83],E,E,188,[[],["self"]]],[11,R[83],E,E,189,[[],["self"]]],[11,R[83],E,E,190,[[],["self"]]],[11,R[83],E,E,191,[[],["self"]]],[11,R[83],E,E,192,[[],["self"]]],[11,R[83],E,E,193,[[],["self"]]],[11,R[83],E,E,194,[[],["self"]]],[11,R[83],E,E,195,[[],["self"]]],[11,R[83],E,E,196,[[],["self"]]],[11,R[83],E,E,197,[[],["self"]]],[11,R[83],E,E,198,[[],["self"]]],[11,R[83],E,E,199,[[],["self"]]],[11,R[83],E,E,200,[[],["self"]]],[11,R[83],E,E,201,[[],["self"]]],[11,R[83],E,E,202,[[],["self"]]],[11,R[83],E,E,203,[[],["self"]]],[11,R[83],E,E,204,[[],["self"]]],[11,R[83],E,E,205,[[],["self"]]],[11,R[83],E,E,206,[[],["self"]]],[11,R[83],E,E,207,[[],["self"]]],[11,R[83],E,E,208,[[],["self"]]],[11,R[83],E,E,209,[[],["self"]]],[11,R[83],E,E,210,[[],["self"]]],[11,R[83],E,E,211,[[],["self"]]],[11,R[83],E,E,212,[[],["self"]]],[11,R[83],E,E,213,[[],["self"]]],[11,R[83],E,E,214,[[],["self"]]],[11,R[83],E,E,215,[[],["self"]]],[11,R[83],E,E,216,[[],["self"]]],[11,R[83],E,E,217,[[],["self"]]],[11,R[83],E,E,218,[[],["self"]]],[11,R[83],E,E,219,[[],["self"]]],[11,R[83],E,E,220,[[],["self"]]],[11,R[83],E,E,221,[[],["self"]]],[11,R[83],E,E,222,[[],["self"]]],[11,R[83],E,E,223,[[],["self"]]],[11,R[83],E,E,224,[[],["self"]]],[11,R[83],E,E,225,[[],["self"]]],[11,R[83],E,E,226,[[],["self"]]],[11,R[83],E,E,227,[[],["self"]]],[11,R[83],E,E,228,[[],["self"]]],[11,R[83],E,E,229,[[],["self"]]],[11,R[83],E,E,230,[[],["self"]]],[11,R[83],E,E,231,[[],["self"]]],[11,R[83],E,E,232,[[],["self"]]],[11,R[83],E,E,233,[[],["self"]]],[11,R[83],E,E,234,[[],["self"]]],[11,R[83],E,E,235,[[],["self"]]],[11,R[83],E,E,236,[[],["self"]]],[11,R[83],E,E,237,[[],["self"]]],[11,R[83],E,E,238,[[],["self"]]],[11,R[83],E,E,239,[[],["self"]]],[11,R[83],E,E,240,[[],["self"]]],[11,R[83],E,E,241,[[],["self"]]],[11,R[83],E,E,242,[[],["self"]]],[11,R[83],E,E,243,[[],["self"]]],[11,R[83],E,E,244,[[],["self"]]],[11,R[83],E,E,245,[[],["self"]]],[11,R[83],E,E,246,[[],["self"]]],[11,R[83],E,E,247,[[],["self"]]],[11,R[83],E,E,248,[[],["self"]]],[11,R[83],E,E,249,[[],["self"]]],[11,R[83],E,E,250,[[],["self"]]],[11,R[83],E,E,251,[[],["self"]]],[11,R[83],E,E,252,[[],["self"]]],[11,R[83],E,E,253,[[],["self"]]],[11,R[83],E,E,254,[[],["self"]]],[11,R[83],E,E,255,[[],["self"]]],[11,R[83],E,E,256,[[],["self"]]],[11,R[83],E,E,257,[[],["self"]]],[11,R[83],E,E,258,[[],["self"]]],[11,R[83],E,E,259,[[],["self"]]],[11,R[83],E,E,260,[[],["self"]]],[11,R[83],E,E,261,[[],["self"]]],[11,R[83],E,E,262,[[],["self"]]],[11,R[83],E,E,263,[[],["self"]]],[11,R[83],E,E,264,[[],["self"]]],[11,R[83],E,E,265,[[],["self"]]],[11,R[83],E,E,266,[[],["self"]]],[11,R[83],E,E,267,[[],["self"]]],[11,R[83],E,E,268,[[],["self"]]],[11,R[83],E,E,269,[[],["self"]]],[11,R[83],E,E,270,[[],["self"]]],[11,R[83],E,E,271,[[],["self"]]],[11,R[83],E,E,272,[[],["self"]]],[11,R[83],E,E,273,[[],["self"]]],[11,R[83],E,E,274,[[],["self"]]],[11,R[83],E,E,275,[[],["self"]]],[11,R[83],E,E,276,[[],["self"]]],[11,R[83],E,E,277,[[],["self"]]],[11,R[83],E,E,278,[[],["self"]]],[11,R[83],E,E,279,[[],["self"]]],[11,R[83],E,E,280,[[],["self"]]],[11,R[83],E,E,281,[[],["self"]]],[11,R[83],E,E,282,[[],["self"]]],[11,R[83],"syn",E,56,[[],[R[2084]]]],[11,R[83],E,E,54,[[],[R[2259]]]],[11,R[83],E,E,179,[[],["self"]]],[11,R[83],R[2727],E,294,[[],["self"]]],[11,"extend",E,E,294,[[["self"],[R[82]]]]],[11,"extend",E,E,294,[[["self"],[R[82]]]]],[11,"clone",R[2728],E,180,[[["self"]],[R[2755]]]],[11,"clone",E,E,181,[[["self"]],["abstract"]]],[11,"clone",E,E,182,[[["self"]],["as"]]],[11,"clone",E,E,183,[[["self"]],["async"]]],[11,"clone",E,E,184,[[["self"]],["auto"]]],[11,"clone",E,E,185,[[["self"]],["await"]]],[11,"clone",E,E,186,[[["self"]],["become"]]],[11,"clone",E,E,187,[[["self"]],["box"]]],[11,"clone",E,E,188,[[["self"]],["break"]]],[11,"clone",E,E,189,[[["self"]],["const"]]],[11,"clone",E,E,190,[[["self"]],["continue"]]],[11,"clone",E,E,191,[[["self"]],["crate"]]],[11,"clone",E,E,192,[[["self"]],[R[83]]]],[11,"clone",E,E,193,[[["self"]],["do"]]],[11,"clone",E,E,194,[[["self"]],["dyn"]]],[11,"clone",E,E,195,[[["self"]],["else"]]],[11,"clone",E,E,196,[[["self"]],["enum"]]],[11,"clone",E,E,197,[[["self"]],["extern"]]],[11,"clone",E,E,198,[[["self"]],["final"]]],[11,"clone",E,E,199,[[["self"]],["fn"]]],[11,"clone",E,E,200,[[["self"]],["for"]]],[11,"clone",E,E,201,[[["self"]],["if"]]],[11,"clone",E,E,202,[[["self"]],["impl"]]],[11,"clone",E,E,203,[[["self"]],["in"]]],[11,"clone",E,E,204,[[["self"]],["let"]]],[11,"clone",E,E,205,[[["self"]],["loop"]]],[11,"clone",E,E,206,[[["self"]],["macro"]]],[11,"clone",E,E,207,[[["self"]],["match"]]],[11,"clone",E,E,208,[[["self"]],["mod"]]],[11,"clone",E,E,209,[[["self"]],["move"]]],[11,"clone",E,E,210,[[["self"]],["mut"]]],[11,"clone",E,E,211,[[["self"]],["override"]]],[11,"clone",E,E,212,[[["self"]],["priv"]]],[11,"clone",E,E,213,[[["self"]],["pub"]]],[11,"clone",E,E,214,[[["self"]],["ref"]]],[11,"clone",E,E,215,[[["self"]],["return"]]],[11,"clone",E,E,216,[[["self"]],["selftype"]]],[11,"clone",E,E,217,[[["self"]],["selfvalue"]]],[11,"clone",E,E,218,[[["self"]],["static"]]],[11,"clone",E,E,219,[[["self"]],["struct"]]],[11,"clone",E,E,220,[[["self"]],["super"]]],[11,"clone",E,E,221,[[["self"]],["trait"]]],[11,"clone",E,E,222,[[["self"]],["try"]]],[11,"clone",E,E,223,[[["self"]],["type"]]],[11,"clone",E,E,224,[[["self"]],["typeof"]]],[11,"clone",E,E,225,[[["self"]],["union"]]],[11,"clone",E,E,226,[[["self"]],["unsafe"]]],[11,"clone",E,E,227,[[["self"]],["unsized"]]],[11,"clone",E,E,228,[[["self"]],["use"]]],[11,"clone",E,E,229,[[["self"]],["virtual"]]],[11,"clone",E,E,230,[[["self"]],["where"]]],[11,"clone",E,E,231,[[["self"]],["while"]]],[11,"clone",E,E,232,[[["self"]],["yield"]]],[11,"clone",E,E,233,[[["self"]],["add"]]],[11,"clone",E,E,234,[[["self"]],["addeq"]]],[11,"clone",E,E,235,[[["self"]],["and"]]],[11,"clone",E,E,236,[[["self"]],["andand"]]],[11,"clone",E,E,237,[[["self"]],["andeq"]]],[11,"clone",E,E,238,[[["self"]],["at"]]],[11,"clone",E,E,239,[[["self"]],["bang"]]],[11,"clone",E,E,240,[[["self"]],["caret"]]],[11,"clone",E,E,241,[[["self"]],["careteq"]]],[11,"clone",E,E,242,[[["self"]],["colon"]]],[11,"clone",E,E,243,[[["self"]],["colon2"]]],[11,"clone",E,E,244,[[["self"]],["comma"]]],[11,"clone",E,E,245,[[["self"]],["div"]]],[11,"clone",E,E,246,[[["self"]],["diveq"]]],[11,"clone",E,E,247,[[["self"]],["dollar"]]],[11,"clone",E,E,248,[[["self"]],["dot"]]],[11,"clone",E,E,249,[[["self"]],["dot2"]]],[11,"clone",E,E,250,[[["self"]],["dot3"]]],[11,"clone",E,E,251,[[["self"]],["dotdoteq"]]],[11,"clone",E,E,252,[[["self"]],["eq"]]],[11,"clone",E,E,253,[[["self"]],["eqeq"]]],[11,"clone",E,E,254,[[["self"]],["ge"]]],[11,"clone",E,E,255,[[["self"]],["gt"]]],[11,"clone",E,E,256,[[["self"]],["le"]]],[11,"clone",E,E,257,[[["self"]],["lt"]]],[11,"clone",E,E,258,[[["self"]],["muleq"]]],[11,"clone",E,E,259,[[["self"]],["ne"]]],[11,"clone",E,E,260,[[["self"]],["or"]]],[11,"clone",E,E,261,[[["self"]],["oreq"]]],[11,"clone",E,E,262,[[["self"]],["oror"]]],[11,"clone",E,E,263,[[["self"]],["pound"]]],[11,"clone",E,E,264,[[["self"]],["question"]]],[11,"clone",E,E,265,[[["self"]],["rarrow"]]],[11,"clone",E,E,266,[[["self"]],["larrow"]]],[11,"clone",E,E,267,[[["self"]],["rem"]]],[11,"clone",E,E,268,[[["self"]],["remeq"]]],[11,"clone",E,E,269,[[["self"]],["fatarrow"]]],[11,"clone",E,E,270,[[["self"]],["semi"]]],[11,"clone",E,E,271,[[["self"]],["shl"]]],[11,"clone",E,E,272,[[["self"]],["shleq"]]],[11,"clone",E,E,273,[[["self"]],["shr"]]],[11,"clone",E,E,274,[[["self"]],["shreq"]]],[11,"clone",E,E,275,[[["self"]],["star"]]],[11,"clone",E,E,276,[[["self"]],["sub"]]],[11,"clone",E,E,277,[[["self"]],["subeq"]]],[11,"clone",E,E,278,[[["self"]],["tilde"]]],[11,"clone",E,E,279,[[["self"]],["brace"]]],[11,"clone",E,E,280,[[["self"]],["bracket"]]],[11,"clone",E,E,281,[[["self"]],["paren"]]],[11,"clone",E,E,282,[[["self"]],["group"]]],[11,"clone","syn",E,0,[[["self"]],[R[996]]]],[11,"clone",E,E,149,[[["self"]],[R[2487]]]],[11,"clone",E,E,150,[[["self"]],["meta"]]],[11,"clone",E,E,1,[[["self"]],[R[2729]]]],[11,"clone",E,E,2,[[["self"]],[R[2400]]]],[11,"clone",E,E,151,[[["self"]],[R[2524]]]],[11,"clone",E,E,6,[[["self"]],["variant"]]],[11,"clone",E,E,152,[[["self"]],["fields"]]],[11,"clone",E,E,4,[[["self"]],[R[2320]]]],[11,"clone",E,E,5,[[["self"]],[R[2322]]]],[11,"clone",E,E,3,[[["self"]],["field"]]],[11,"clone",E,E,153,[[["self"]],[R[1004]]]],[11,"clone",E,E,8,[[["self"]],[R[2540]]]],[11,"clone",E,E,7,[[["self"]],[R[2730]]]],[11,"clone",E,E,9,[[["self"]],[R[2481]]]],[11,"clone",E,E,156,[[["self"]],["expr"]]],[11,"clone",E,E,14,[[["self"]],[R[2493]]]],[11,"clone",E,E,15,[[["self"]],[R[2494]]]],[11,"clone",E,E,16,[[["self"]],[R[2269]]]],[11,"clone",E,E,17,[[["self"]],[R[2495]]]],[11,"clone",E,E,18,[[["self"]],[R[3278]]]],[11,"clone",E,E,19,[[["self"]],[R[2496]]]],[11,"clone",E,E,20,[[["self"]],[R[2497]]]],[11,"clone",E,E,21,[[["self"]],["exprbox"]]],[11,"clone",E,E,22,[[["self"]],[R[2498]]]],[11,"clone",E,E,23,[[["self"]],[R[2731]]]],[11,"clone",E,E,24,[[["self"]],[R[2732]]]],[11,"clone",E,E,25,[[["self"]],[R[2278]]]],[11,"clone",E,E,26,[[["self"]],[R[2280]]]],[11,"clone",E,E,27,[[["self"]],[R[2499]]]],[11,"clone",E,E,28,[[["self"]],[R[2283]]]],[11,"clone",E,E,29,[[["self"]],[R[2500]]]],[11,"clone",E,E,30,[[["self"]],["exprif"]]],[11,"clone",E,E,31,[[["self"]],[R[2501]]]],[11,"clone",E,E,32,[[["self"]],["exprlet"]]],[11,"clone",E,E,33,[[["self"]],["exprlit"]]],[11,"clone",E,E,34,[[["self"]],[R[2734]]]],[11,"clone",E,E,35,[[["self"]],[R[2502]]]],[11,"clone",E,E,36,[[["self"]],[R[2503]]]],[11,"clone",E,E,37,[[["self"]],[R[2295]]]],[11,"clone",E,E,38,[[["self"]],[R[2504]]]],[11,"clone",E,E,39,[[["self"]],[R[2735]]]],[11,"clone",E,E,40,[[["self"]],[R[2505]]]],[11,"clone",E,E,41,[[["self"]],[R[2300]]]],[11,"clone",E,E,42,[[["self"]],[R[2506]]]],[11,"clone",E,E,43,[[["self"]],[R[2507]]]],[11,"clone",E,E,44,[[["self"]],[R[2508]]]],[11,"clone",E,E,45,[[["self"]],["exprtry"]]],[11,"clone",E,E,46,[[["self"]],[R[2306]]]],[11,"clone",E,E,47,[[["self"]],[R[2509]]]],[11,"clone",E,E,48,[[["self"]],[R[2733]]]],[11,"clone",E,E,49,[[["self"]],[R[2510]]]],[11,"clone",E,E,50,[[["self"]],[R[2511]]]],[11,"clone",E,E,51,[[["self"]],[R[2512]]]],[11,"clone",E,E,52,[[["self"]],[R[2513]]]],[11,"clone",E,E,157,[[["self"]],["member"]]],[11,"clone",E,E,53,[[["self"]],["index"]]],[11,"clone",E,E,13,[[["self"]],[R[2403]]]],[11,"clone",E,E,154,[[["self"]],[R[2340]]]],[11,"clone",E,E,11,[[["self"]],[R[2514]]]],[11,"clone",E,E,12,[[["self"]],["label"]]],[11,"clone",E,E,10,[[["self"]],["arm"]]],[11,"clone",E,E,155,[[["self"]],[R[2433]]]],[11,"clone",E,E,56,[[["self"]],[R[2084]]]],[11,"clone",E,E,158,[[["self"]],[R[2342]]]],[11,"clone",E,E,62,[[["self"]],[R[2535]]]],[11,"clone",E,E,57,[[["self"]],[R[1005]]]],[11,"clone",E,E,55,[[["self"]],[R[2489]]]],[11,"clone",E,E,305,[[["self"]],[R[2751]]]],[11,"clone",E,E,283,[[["self"]],[R[2752]]]],[11,"clone",E,E,306,[[["self"]],[R[2753]]]],[11,"clone",E,E,54,[[["self"]],[R[2259]]]],[11,"clone",E,E,160,[[["self"]],[R[2458]]]],[11,"clone",E,E,61,[[["self"]],[R[2527]]]],[11,"clone",E,E,159,[[["self"]],[R[1006]]]],[11,"clone",E,E,63,[[["self"]],[R[994]]]],[11,"clone",E,E,161,[[["self"]],[R[1007]]]],[11,"clone",E,E,60,[[["self"]],[R[2430]]]],[11,"clone",E,E,59,[[["self"]],[R[2428]]]],[11,"clone",E,E,58,[[["self"]],[R[2426]]]],[11,"clone",E,E,165,[[["self"]],["item"]]],[11,"clone",E,E,72,[[["self"]],[R[2515]]]],[11,"clone",E,E,73,[[["self"]],[R[2743]]]],[11,"clone",E,E,74,[[["self"]],[R[2363]]]],[11,"clone",E,E,75,[[["self"]],["itemfn"]]],[11,"clone",E,E,76,[[["self"]],[R[2366]]]],[11,"clone",E,E,77,[[["self"]],[R[2744]]]],[11,"clone",E,E,78,[[["self"]],[R[2516]]]],[11,"clone",E,E,79,[[["self"]],[R[2517]]]],[11,"clone",E,E,80,[[["self"]],["itemmod"]]],[11,"clone",E,E,81,[[["self"]],[R[2518]]]],[11,"clone",E,E,82,[[["self"]],[R[2519]]]],[11,"clone",E,E,83,[[["self"]],[R[2520]]]],[11,"clone",E,E,84,[[["self"]],[R[2375]]]],[11,"clone",E,E,85,[[["self"]],[R[2742]]]],[11,"clone",E,E,86,[[["self"]],[R[2521]]]],[11,"clone",E,E,87,[[["self"]],["itemuse"]]],[11,"clone",E,E,167,[[["self"]],["usetree"]]],[11,"clone",E,E,97,[[["self"]],["usepath"]]],[11,"clone",E,E,96,[[["self"]],["usename"]]],[11,"clone",E,E,98,[[["self"]],[R[2539]]]],[11,"clone",E,E,94,[[["self"]],["useglob"]]],[11,"clone",E,E,95,[[["self"]],[R[2745]]]],[11,"clone",E,E,163,[[["self"]],[R[2326]]]],[11,"clone",E,E,64,[[["self"]],[R[2328]]]],[11,"clone",E,E,66,[[["self"]],[R[2332]]]],[11,"clone",E,E,67,[[["self"]],[R[2334]]]],[11,"clone",E,E,65,[[["self"]],[R[2330]]]],[11,"clone",E,E,166,[[["self"]],[R[2528]]]],[11,"clone",E,E,90,[[["self"]],[R[2439]]]],[11,"clone",E,E,92,[[["self"]],[R[2443]]]],[11,"clone",E,E,93,[[["self"]],[R[2445]]]],[11,"clone",E,E,91,[[["self"]],[R[2441]]]],[11,"clone",E,E,164,[[["self"]],[R[2746]]]],[11,"clone",E,E,68,[[["self"]],[R[2346]]]],[11,"clone",E,E,70,[[["self"]],[R[2352]]]],[11,"clone",E,E,71,[[["self"]],[R[2354]]]],[11,"clone",E,E,69,[[["self"]],[R[2350]]]],[11,"clone",E,E,89,[[["self"]],[R[3279]]]],[11,"clone",E,E,162,[[["self"]],["fnarg"]]],[11,"clone",E,E,88,[[["self"]],[R[3286]]]],[11,"clone",E,E,99,[[["self"]],[R[3289]]]],[11,"clone",E,E,100,[[["self"]],["file"]]],[11,"clone",E,E,101,[[["self"]],[R[1001]]]],[11,"clone",E,E,168,[[["self"]],["lit"]]],[11,"clone",E,E,284,[[["self"]],["litstr"]]],[11,"clone",E,E,285,[[["self"]],[R[2522]]]],[11,"clone",E,E,286,[[["self"]],["litbyte"]]],[11,"clone",E,E,287,[[["self"]],["litchar"]]],[11,"clone",E,E,288,[[["self"]],["litint"]]],[11,"clone",E,E,289,[[["self"]],[R[2747]]]],[11,"clone",E,E,102,[[["self"]],["litbool"]]],[11,"clone",E,E,169,[[["self"]],["strstyle"]]],[11,"clone",E,E,103,[[["self"]],["macro"]]],[11,"clone",E,E,170,[[["self"]],[R[2396]]]],[11,"clone",E,E,107,[[["self"]],[R[993]]]],[11,"clone",E,E,171,[[["self"]],["data"]]],[11,"clone",E,E,105,[[["self"]],[R[2491]]]],[11,"clone",E,E,104,[[["self"]],[R[2748]]]],[11,"clone",E,E,106,[[["self"]],[R[2492]]]],[11,"clone",E,E,172,[[["self"]],["binop"]]],[11,"clone",E,E,173,[[["self"]],["unop"]]],[11,"clone",E,E,108,[[["self"]],["block"]]],[11,"clone",E,E,174,[[["self"]],["stmt"]]],[11,"clone",E,E,109,[[["self"]],["local"]]],[11,"clone",E,E,176,[[["self"]],["type"]]],[11,"clone",E,E,112,[[["self"]],[R[2529]]]],[11,"clone",E,E,113,[[["self"]],[R[2530]]]],[11,"clone",E,E,114,[[["self"]],[R[2531]]]],[11,"clone",E,E,115,[[["self"]],[R[2452]]]],[11,"clone",E,E,116,[[["self"]],[R[2532]]]],[11,"clone",E,E,117,[[["self"]],[R[2533]]]],[11,"clone",E,E,118,[[["self"]],[R[2534]]]],[11,"clone",E,E,119,[[["self"]],[R[2536]]]],[11,"clone",E,E,120,[[["self"]],[R[2749]]]],[11,"clone",E,E,121,[[["self"]],["typeptr"]]],[11,"clone",E,E,122,[[["self"]],[R[2463]]]],[11,"clone",E,E,123,[[["self"]],[R[2537]]]],[11,"clone",E,E,124,[[["self"]],[R[2466]]]],[11,"clone",E,E,125,[[["self"]],[R[2538]]]],[11,"clone",E,E,110,[[["self"]],["abi"]]],[11,"clone",E,E,111,[[["self"]],[R[2488]]]],[11,"clone",E,E,175,[[["self"]],[R[2526]]]],[11,"clone",E,E,177,[[["self"]],["pat"]]],[11,"clone",E,E,127,[[["self"]],["patbox"]]],[11,"clone",E,E,128,[[["self"]],[R[2736]]]],[11,"clone",E,E,129,[[["self"]],["patlit"]]],[11,"clone",E,E,130,[[["self"]],[R[2740]]]],[11,"clone",E,E,131,[[["self"]],["pator"]]],[11,"clone",E,E,132,[[["self"]],["patpath"]]],[11,"clone",E,E,133,[[["self"]],[R[2738]]]],[11,"clone",E,E,134,[[["self"]],[R[3272]]]],[11,"clone",E,E,135,[[["self"]],["patrest"]]],[11,"clone",E,E,136,[[["self"]],[R[2739]]]],[11,"clone",E,E,137,[[["self"]],[R[2525]]]],[11,"clone",E,E,138,[[["self"]],[R[2737]]]],[11,"clone",E,E,139,[[["self"]],[R[2418]]]],[11,"clone",E,E,140,[[["self"]],["pattype"]]],[11,"clone",E,E,141,[[["self"]],["patwild"]]],[11,"clone",E,E,126,[[["self"]],[R[2741]]]],[11,"clone",E,E,146,[[["self"]],["path"]]],[11,"clone",E,E,147,[[["self"]],[R[1012]]]],[11,"clone",E,E,179,[[["self"]],[R[2423]]]],[11,"clone",E,E,178,[[["self"]],[R[2338]]]],[11,"clone",E,E,142,[[["self"]],[R[2245]]]],[11,"clone",E,E,143,[[["self"]],["binding"]]],[11,"clone",E,E,144,[[["self"]],[R[2490]]]],[11,"clone",E,E,145,[[["self"]],[R[2406]]]],[11,"clone",E,E,148,[[["self"]],["qself"]]],[11,"clone",R[2726],E,291,[[["self"]],["cursor"]]],[11,"clone",R[2727],E,294,[[["self"]],[R[2723]]]],[11,"clone",E,E,307,[[["self"]],["self"]]],[11,"clone",E,E,309,[[["self"]],["intopairs"]]],[11,"clone",E,E,310,[[["self"]],[R[766]]]],[11,"clone",E,E,311,[[["self"]],["self"]]],[11,"clone",E,E,293,[[["self"]],["pair"]]],[11,"clone",R[1018],E,301,[[["self"]],["stepcursor"]]],[11,"clone","syn",E,303,[[["self"]],["error"]]],[11,R[77],E,E,101,[[["self"],[R[1001]]],[[R[23],[R[50]]],[R[50]]]]],[11,"cmp",E,E,101,[[["self"],[R[1001]]],[R[50]]]],[11,"eq",E,E,101,[[["self"],[R[1001]]],["bool"]]],[11,"eq",R[2726],E,291,[[["self"],["cursor"]],["bool"]]],[11,"ne",E,E,291,[[["self"],["cursor"]],["bool"]]],[11,R[45],"syn",E,152,[[]]],[11,R[45],R[2727],E,294,[[]]],[11,R[45],"syn",E,303,[[]]],[11,R[52],R[2727],E,307,[[["self"]],[R[23]]]],[11,R[52],E,E,308,[[["self"]],[R[23]]]],[11,R[52],E,E,309,[[["self"]],[R[23]]]],[11,R[52],E,E,310,[[["self"]],[R[23]]]],[11,R[52],E,E,311,[[["self"]],[R[23]]]],[11,R[52],E,E,312,[[["self"]],[R[23]]]],[11,"drop",R[1018],E,302,[[["self"]]]],[11,"from","syn",E,304,[[["selfvalue"]],["ident"]]],[11,"from",E,E,304,[[["selftype"]],["ident"]]],[11,"from",E,E,304,[[["super"]],["ident"]]],[11,"from",E,E,304,[[["crate"]],["ident"]]],[11,"from",E,E,304,[[["extern"]],["ident"]]],[11,"from",E,E,304,[[[R[2755]]],["ident"]]],[11,"from",E,E,150,[[["path"]],["meta"]]],[11,"from",E,E,150,[[[R[2729]]],["meta"]]],[11,"from",E,E,150,[[[R[2400]]],["meta"]]],[11,"from",E,E,151,[[["meta"]],[R[2524]]]],[11,"from",E,E,151,[[["lit"]],[R[2524]]]],[11,"from",E,E,152,[[[R[2320]]],["fields"]]],[11,"from",E,E,152,[[[R[2322]]],["fields"]]],[11,"from",E,E,153,[[[R[2540]]],[R[1004]]]],[11,"from",E,E,153,[[[R[2730]]],[R[1004]]]],[11,"from",E,E,153,[[[R[2481]]],[R[1004]]]],[11,"from",E,E,156,[[[R[2493]]],["expr"]]],[11,"from",E,E,156,[[[R[2494]]],["expr"]]],[11,"from",E,E,156,[[[R[2269]]],["expr"]]],[11,"from",E,E,156,[[[R[2495]]],["expr"]]],[11,"from",E,E,156,[[[R[3278]]],["expr"]]],[11,"from",E,E,156,[[[R[2496]]],["expr"]]],[11,"from",E,E,156,[[[R[2497]]],["expr"]]],[11,"from",E,E,156,[[["exprbox"]],["expr"]]],[11,"from",E,E,156,[[[R[2498]]],["expr"]]],[11,"from",E,E,156,[[[R[2731]]],["expr"]]],[11,"from",E,E,156,[[[R[2732]]],["expr"]]],[11,"from",E,E,156,[[[R[2278]]],["expr"]]],[11,"from",E,E,156,[[[R[2280]]],["expr"]]],[11,"from",E,E,156,[[[R[2499]]],["expr"]]],[11,"from",E,E,156,[[[R[2283]]],["expr"]]],[11,"from",E,E,156,[[[R[2500]]],["expr"]]],[11,"from",E,E,156,[[["exprif"]],["expr"]]],[11,"from",E,E,156,[[[R[2501]]],["expr"]]],[11,"from",E,E,156,[[["exprlet"]],["expr"]]],[11,"from",E,E,156,[[["exprlit"]],["expr"]]],[11,"from",E,E,156,[[[R[2734]]],["expr"]]],[11,"from",E,E,156,[[[R[2502]]],["expr"]]],[11,"from",E,E,156,[[[R[2503]]],["expr"]]],[11,"from",E,E,156,[[[R[2295]]],["expr"]]],[11,"from",E,E,156,[[[R[2504]]],["expr"]]],[11,"from",E,E,156,[[[R[2735]]],["expr"]]],[11,"from",E,E,156,[[[R[2505]]],["expr"]]],[11,"from",E,E,156,[[[R[2300]]],["expr"]]],[11,"from",E,E,156,[[[R[2506]]],["expr"]]],[11,"from",E,E,156,[[[R[2507]]],["expr"]]],[11,"from",E,E,156,[[[R[2508]]],["expr"]]],[11,"from",E,E,156,[[["exprtry"]],["expr"]]],[11,"from",E,E,156,[[[R[2306]]],["expr"]]],[11,"from",E,E,156,[[[R[2509]]],["expr"]]],[11,"from",E,E,156,[[[R[2733]]],["expr"]]],[11,"from",E,E,156,[[[R[2510]]],["expr"]]],[11,"from",E,E,156,[[[R[2511]]],["expr"]]],[11,"from",E,E,156,[[[R[768]]],["expr"]]],[11,"from",E,E,156,[[[R[2512]]],["expr"]]],[11,"from",E,E,156,[[[R[2513]]],["expr"]]],[11,"from",E,E,53,[[["usize"]],["index"]]],[11,"from",E,E,158,[[[R[2535]]],[R[2342]]]],[11,"from",E,E,158,[[[R[1005]]],[R[2342]]]],[11,"from",E,E,158,[[[R[2489]]],[R[2342]]]],[11,"from",E,E,62,[[["ident"]],["self"]]],[11,"from",E,E,160,[[[R[2527]]],[R[2458]]]],[11,"from",E,E,160,[[[R[1001]]],[R[2458]]]],[11,"from",E,E,161,[[[R[2430]]],[R[1007]]]],[11,"from",E,E,161,[[[R[2428]]],[R[1007]]]],[11,"from",E,E,161,[[[R[2426]]],[R[1007]]]],[11,"from",E,E,165,[[[R[2515]]],["item"]]],[11,"from",E,E,165,[[[R[2743]]],["item"]]],[11,"from",E,E,165,[[[R[2363]]],["item"]]],[11,"from",E,E,165,[[["itemfn"]],["item"]]],[11,"from",E,E,165,[[[R[2366]]],["item"]]],[11,"from",E,E,165,[[[R[2744]]],["item"]]],[11,"from",E,E,165,[[[R[2516]]],["item"]]],[11,"from",E,E,165,[[[R[2517]]],["item"]]],[11,"from",E,E,165,[[["itemmod"]],["item"]]],[11,"from",E,E,165,[[[R[2518]]],["item"]]],[11,"from",E,E,165,[[[R[2519]]],["item"]]],[11,"from",E,E,165,[[[R[2520]]],["item"]]],[11,"from",E,E,165,[[[R[2375]]],["item"]]],[11,"from",E,E,165,[[[R[2742]]],["item"]]],[11,"from",E,E,165,[[[R[2521]]],["item"]]],[11,"from",E,E,165,[[["itemuse"]],["item"]]],[11,"from",E,E,165,[[[R[768]]],["item"]]],[11,"from",E,E,165,[[[R[993]]],["item"]]],[11,"from",E,E,167,[[["usepath"]],["usetree"]]],[11,"from",E,E,167,[[["usename"]],["usetree"]]],[11,"from",E,E,167,[[[R[2539]]],["usetree"]]],[11,"from",E,E,167,[[["useglob"]],["usetree"]]],[11,"from",E,E,167,[[[R[2745]]],["usetree"]]],[11,"from",E,E,163,[[[R[2328]]],[R[2326]]]],[11,"from",E,E,163,[[[R[2332]]],[R[2326]]]],[11,"from",E,E,163,[[[R[2334]]],[R[2326]]]],[11,"from",E,E,163,[[[R[2330]]],[R[2326]]]],[11,"from",E,E,163,[[[R[768]]],[R[2326]]]],[11,"from",E,E,166,[[[R[2439]]],[R[2528]]]],[11,"from",E,E,166,[[[R[2443]]],[R[2528]]]],[11,"from",E,E,166,[[[R[2445]]],[R[2528]]]],[11,"from",E,E,166,[[[R[2441]]],[R[2528]]]],[11,"from",E,E,166,[[[R[768]]],[R[2528]]]],[11,"from",E,E,164,[[[R[2346]]],[R[2746]]]],[11,"from",E,E,164,[[[R[2352]]],[R[2746]]]],[11,"from",E,E,164,[[[R[2354]]],[R[2746]]]],[11,"from",E,E,164,[[[R[2350]]],[R[2746]]]],[11,"from",E,E,164,[[[R[768]]],[R[2746]]]],[11,"from",E,E,162,[[[R[3286]]],["fnarg"]]],[11,"from",E,E,162,[[["pattype"]],["fnarg"]]],[11,"from",E,E,168,[[["litstr"]],["lit"]]],[11,"from",E,E,168,[[[R[2522]]],["lit"]]],[11,"from",E,E,168,[[["litbyte"]],["lit"]]],[11,"from",E,E,168,[[["litchar"]],["lit"]]],[11,"from",E,E,168,[[["litint"]],["lit"]]],[11,"from",E,E,168,[[[R[2747]]],["lit"]]],[11,"from",E,E,168,[[["litbool"]],["lit"]]],[11,"from",E,E,168,[[[R[404]]],["lit"]]],[11,"from",E,E,288,[[[R[404]]],["self"]]],[11,"from",E,E,289,[[[R[404]]],["self"]]],[11,"from",E,E,171,[[[R[2491]]],["data"]]],[11,"from",E,E,171,[[[R[2748]]],["data"]]],[11,"from",E,E,171,[[[R[2492]]],["data"]]],[11,"from",E,E,176,[[[R[2529]]],["type"]]],[11,"from",E,E,176,[[[R[2530]]],["type"]]],[11,"from",E,E,176,[[[R[2531]]],["type"]]],[11,"from",E,E,176,[[[R[2452]]],["type"]]],[11,"from",E,E,176,[[[R[2532]]],["type"]]],[11,"from",E,E,176,[[[R[2533]]],["type"]]],[11,"from",E,E,176,[[[R[2534]]],["type"]]],[11,"from",E,E,176,[[[R[2536]]],["type"]]],[11,"from",E,E,176,[[[R[2749]]],["type"]]],[11,"from",E,E,176,[[["typeptr"]],["type"]]],[11,"from",E,E,176,[[[R[2463]]],["type"]]],[11,"from",E,E,176,[[[R[2537]]],["type"]]],[11,"from",E,E,176,[[[R[2466]]],["type"]]],[11,"from",E,E,176,[[[R[2538]]],["type"]]],[11,"from",E,E,176,[[[R[768]]],["type"]]],[11,"from",E,E,177,[[["patbox"]],["pat"]]],[11,"from",E,E,177,[[[R[2736]]],["pat"]]],[11,"from",E,E,177,[[["patlit"]],["pat"]]],[11,"from",E,E,177,[[[R[2740]]],["pat"]]],[11,"from",E,E,177,[[["pator"]],["pat"]]],[11,"from",E,E,177,[[["patpath"]],["pat"]]],[11,"from",E,E,177,[[[R[2738]]],["pat"]]],[11,"from",E,E,177,[[[R[3272]]],["pat"]]],[11,"from",E,E,177,[[["patrest"]],["pat"]]],[11,"from",E,E,177,[[[R[2739]]],["pat"]]],[11,"from",E,E,177,[[[R[2525]]],["pat"]]],[11,"from",E,E,177,[[[R[2737]]],["pat"]]],[11,"from",E,E,177,[[[R[2418]]],["pat"]]],[11,"from",E,E,177,[[["pattype"]],["pat"]]],[11,"from",E,E,177,[[[R[768]]],["pat"]]],[11,"from",E,E,177,[[["patwild"]],["pat"]]],[11,"from",E,E,146,[[[T]],["self"]]],[11,"from",E,E,147,[[[T]],["self"]]],[11,"from",E,E,303,[[["lexerror"]],["self"]]],[11,"next",R[2727],E,307,[[["self"]],[R[23]]]],[11,"next",E,E,308,[[["self"]],[R[23]]]],[11,"next",E,E,309,[[["self"]],[R[23]]]],[11,"next",E,E,310,[[["self"]],[R[23]]]],[11,"next",E,E,311,[[["self"]],[R[23]]]],[11,"next",E,E,312,[[["self"]],[R[23]]]],[11,"deref",R[2728],E,180,[[["self"]]]],[11,"deref",E,E,233,[[["self"]]]],[11,"deref",E,E,235,[[["self"]]]],[11,"deref",E,E,238,[[["self"]]]],[11,"deref",E,E,239,[[["self"]]]],[11,"deref",E,E,240,[[["self"]]]],[11,"deref",E,E,242,[[["self"]]]],[11,"deref",E,E,244,[[["self"]]]],[11,"deref",E,E,245,[[["self"]]]],[11,"deref",E,E,247,[[["self"]]]],[11,"deref",E,E,248,[[["self"]]]],[11,"deref",E,E,252,[[["self"]]]],[11,"deref",E,E,255,[[["self"]]]],[11,"deref",E,E,257,[[["self"]]]],[11,"deref",E,E,260,[[["self"]]]],[11,"deref",E,E,263,[[["self"]]]],[11,"deref",E,E,264,[[["self"]]]],[11,"deref",E,E,267,[[["self"]]]],[11,"deref",E,E,270,[[["self"]]]],[11,"deref",E,E,275,[[["self"]]]],[11,"deref",E,E,276,[[["self"]]]],[11,"deref",E,E,278,[[["self"]]]],[11,"deref",R[1018],E,301,[[["self"]]]],[11,R[17],R[2728],E,180,[[["self"]]]],[11,R[17],E,E,233,[[["self"]]]],[11,R[17],E,E,235,[[["self"]]]],[11,R[17],E,E,238,[[["self"]]]],[11,R[17],E,E,239,[[["self"]]]],[11,R[17],E,E,240,[[["self"]]]],[11,R[17],E,E,242,[[["self"]]]],[11,R[17],E,E,244,[[["self"]]]],[11,R[17],E,E,245,[[["self"]]]],[11,R[17],E,E,247,[[["self"]]]],[11,R[17],E,E,248,[[["self"]]]],[11,R[17],E,E,252,[[["self"]]]],[11,R[17],E,E,255,[[["self"]]]],[11,R[17],E,E,257,[[["self"]]]],[11,R[17],E,E,260,[[["self"]]]],[11,R[17],E,E,263,[[["self"]]]],[11,R[17],E,E,264,[[["self"]]]],[11,R[17],E,E,267,[[["self"]]]],[11,R[17],E,E,270,[[["self"]]]],[11,R[17],E,E,275,[[["self"]]]],[11,R[17],E,E,276,[[["self"]]]],[11,R[17],E,E,278,[[["self"]]]],[11,"hash","syn",E,101,[[["self"],["h"]]]],[11,"fmt",R[1018],E,302,[[["self"],[R[10]]],[R[3]]]],[11,"fmt","syn",E,303,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,101,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,288,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,289,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[1018],E,302,[[["self"],[R[10]]],[R[3]]]],[11,"fmt","syn",E,303,[[["self"],[R[10]]],[R[3]]]],[11,"index",R[2727],E,294,[[["self"],["usize"]]]],[11,R[51],E,E,294,[[["self"],["usize"]]]],[11,R[81],E,E,294,[[[R[82]]],["self"]]],[11,R[81],E,E,294,[[[R[82]]],["self"]]],[11,R[157],"syn",E,303,[[["self"]],["str"]]],[11,R[114],R[2728],E,180,[[["self"],[R[768]]]]],[11,R[114],E,E,181,[[["self"],[R[768]]]]],[11,R[114],E,E,182,[[["self"],[R[768]]]]],[11,R[114],E,E,183,[[["self"],[R[768]]]]],[11,R[114],E,E,184,[[["self"],[R[768]]]]],[11,R[114],E,E,185,[[["self"],[R[768]]]]],[11,R[114],E,E,186,[[["self"],[R[768]]]]],[11,R[114],E,E,187,[[["self"],[R[768]]]]],[11,R[114],E,E,188,[[["self"],[R[768]]]]],[11,R[114],E,E,189,[[["self"],[R[768]]]]],[11,R[114],E,E,190,[[["self"],[R[768]]]]],[11,R[114],E,E,191,[[["self"],[R[768]]]]],[11,R[114],E,E,192,[[["self"],[R[768]]]]],[11,R[114],E,E,193,[[["self"],[R[768]]]]],[11,R[114],E,E,194,[[["self"],[R[768]]]]],[11,R[114],E,E,195,[[["self"],[R[768]]]]],[11,R[114],E,E,196,[[["self"],[R[768]]]]],[11,R[114],E,E,197,[[["self"],[R[768]]]]],[11,R[114],E,E,198,[[["self"],[R[768]]]]],[11,R[114],E,E,199,[[["self"],[R[768]]]]],[11,R[114],E,E,200,[[["self"],[R[768]]]]],[11,R[114],E,E,201,[[["self"],[R[768]]]]],[11,R[114],E,E,202,[[["self"],[R[768]]]]],[11,R[114],E,E,203,[[["self"],[R[768]]]]],[11,R[114],E,E,204,[[["self"],[R[768]]]]],[11,R[114],E,E,205,[[["self"],[R[768]]]]],[11,R[114],E,E,206,[[["self"],[R[768]]]]],[11,R[114],E,E,207,[[["self"],[R[768]]]]],[11,R[114],E,E,208,[[["self"],[R[768]]]]],[11,R[114],E,E,209,[[["self"],[R[768]]]]],[11,R[114],E,E,210,[[["self"],[R[768]]]]],[11,R[114],E,E,211,[[["self"],[R[768]]]]],[11,R[114],E,E,212,[[["self"],[R[768]]]]],[11,R[114],E,E,213,[[["self"],[R[768]]]]],[11,R[114],E,E,214,[[["self"],[R[768]]]]],[11,R[114],E,E,215,[[["self"],[R[768]]]]],[11,R[114],E,E,216,[[["self"],[R[768]]]]],[11,R[114],E,E,217,[[["self"],[R[768]]]]],[11,R[114],E,E,218,[[["self"],[R[768]]]]],[11,R[114],E,E,219,[[["self"],[R[768]]]]],[11,R[114],E,E,220,[[["self"],[R[768]]]]],[11,R[114],E,E,221,[[["self"],[R[768]]]]],[11,R[114],E,E,222,[[["self"],[R[768]]]]],[11,R[114],E,E,223,[[["self"],[R[768]]]]],[11,R[114],E,E,224,[[["self"],[R[768]]]]],[11,R[114],E,E,225,[[["self"],[R[768]]]]],[11,R[114],E,E,226,[[["self"],[R[768]]]]],[11,R[114],E,E,227,[[["self"],[R[768]]]]],[11,R[114],E,E,228,[[["self"],[R[768]]]]],[11,R[114],E,E,229,[[["self"],[R[768]]]]],[11,R[114],E,E,230,[[["self"],[R[768]]]]],[11,R[114],E,E,231,[[["self"],[R[768]]]]],[11,R[114],E,E,232,[[["self"],[R[768]]]]],[11,R[114],E,E,233,[[["self"],[R[768]]]]],[11,R[114],E,E,234,[[["self"],[R[768]]]]],[11,R[114],E,E,235,[[["self"],[R[768]]]]],[11,R[114],E,E,236,[[["self"],[R[768]]]]],[11,R[114],E,E,237,[[["self"],[R[768]]]]],[11,R[114],E,E,238,[[["self"],[R[768]]]]],[11,R[114],E,E,239,[[["self"],[R[768]]]]],[11,R[114],E,E,240,[[["self"],[R[768]]]]],[11,R[114],E,E,241,[[["self"],[R[768]]]]],[11,R[114],E,E,242,[[["self"],[R[768]]]]],[11,R[114],E,E,243,[[["self"],[R[768]]]]],[11,R[114],E,E,244,[[["self"],[R[768]]]]],[11,R[114],E,E,245,[[["self"],[R[768]]]]],[11,R[114],E,E,246,[[["self"],[R[768]]]]],[11,R[114],E,E,247,[[["self"],[R[768]]]]],[11,R[114],E,E,248,[[["self"],[R[768]]]]],[11,R[114],E,E,249,[[["self"],[R[768]]]]],[11,R[114],E,E,250,[[["self"],[R[768]]]]],[11,R[114],E,E,251,[[["self"],[R[768]]]]],[11,R[114],E,E,252,[[["self"],[R[768]]]]],[11,R[114],E,E,253,[[["self"],[R[768]]]]],[11,R[114],E,E,254,[[["self"],[R[768]]]]],[11,R[114],E,E,255,[[["self"],[R[768]]]]],[11,R[114],E,E,256,[[["self"],[R[768]]]]],[11,R[114],E,E,257,[[["self"],[R[768]]]]],[11,R[114],E,E,258,[[["self"],[R[768]]]]],[11,R[114],E,E,259,[[["self"],[R[768]]]]],[11,R[114],E,E,260,[[["self"],[R[768]]]]],[11,R[114],E,E,261,[[["self"],[R[768]]]]],[11,R[114],E,E,262,[[["self"],[R[768]]]]],[11,R[114],E,E,263,[[["self"],[R[768]]]]],[11,R[114],E,E,264,[[["self"],[R[768]]]]],[11,R[114],E,E,265,[[["self"],[R[768]]]]],[11,R[114],E,E,266,[[["self"],[R[768]]]]],[11,R[114],E,E,267,[[["self"],[R[768]]]]],[11,R[114],E,E,268,[[["self"],[R[768]]]]],[11,R[114],E,E,269,[[["self"],[R[768]]]]],[11,R[114],E,E,270,[[["self"],[R[768]]]]],[11,R[114],E,E,271,[[["self"],[R[768]]]]],[11,R[114],E,E,272,[[["self"],[R[768]]]]],[11,R[114],E,E,273,[[["self"],[R[768]]]]],[11,R[114],E,E,274,[[["self"],[R[768]]]]],[11,R[114],E,E,275,[[["self"],[R[768]]]]],[11,R[114],E,E,276,[[["self"],[R[768]]]]],[11,R[114],E,E,277,[[["self"],[R[768]]]]],[11,R[114],E,E,278,[[["self"],[R[768]]]]],[11,R[114],"syn",E,150,[[["self"],[R[768]]]]],[11,R[114],E,E,151,[[["self"],[R[768]]]]],[11,R[114],E,E,0,[[["self"],[R[768]]]]],[11,R[114],E,E,1,[[["self"],[R[768]]]]],[11,R[114],E,E,2,[[["self"],[R[768]]]]],[11,R[114],E,E,152,[[["self"],[R[768]]]]],[11,R[114],E,E,153,[[["self"],[R[768]]]]],[11,R[114],E,E,6,[[["self"],[R[768]]]]],[11,R[114],E,E,4,[[["self"],[R[768]]]]],[11,R[114],E,E,5,[[["self"],[R[768]]]]],[11,R[114],E,E,3,[[["self"],[R[768]]]]],[11,R[114],E,E,8,[[["self"],[R[768]]]]],[11,R[114],E,E,7,[[["self"],[R[768]]]]],[11,R[114],E,E,9,[[["self"],[R[768]]]]],[11,R[114],E,E,156,[[["self"],[R[768]]]]],[11,R[114],E,E,21,[[["self"],[R[768]]]]],[11,R[114],E,E,14,[[["self"],[R[768]]]]],[11,R[114],E,E,23,[[["self"],[R[768]]]]],[11,R[114],E,E,37,[[["self"],[R[768]]]]],[11,R[114],E,E,13,[[["self"],[R[768]]]]],[11,R[114],E,E,154,[[["self"],[R[768]]]]],[11,R[114],E,E,47,[[["self"],[R[768]]]]],[11,R[114],E,E,19,[[["self"],[R[768]]]]],[11,R[114],E,E,49,[[["self"],[R[768]]]]],[11,R[114],E,E,33,[[["self"],[R[768]]]]],[11,R[114],E,E,24,[[["self"],[R[768]]]]],[11,R[114],E,E,48,[[["self"],[R[768]]]]],[11,R[114],E,E,32,[[["self"],[R[768]]]]],[11,R[114],E,E,30,[[["self"],[R[768]]]]],[11,R[114],E,E,51,[[["self"],[R[768]]]]],[11,R[114],E,E,28,[[["self"],[R[768]]]]],[11,R[114],E,E,34,[[["self"],[R[768]]]]],[11,R[114],E,E,36,[[["self"],[R[768]]]]],[11,R[114],E,E,17,[[["self"],[R[768]]]]],[11,R[114],E,E,18,[[["self"],[R[768]]]]],[11,R[114],E,E,46,[[["self"],[R[768]]]]],[11,R[114],E,E,52,[[["self"],[R[768]]]]],[11,R[114],E,E,25,[[["self"],[R[768]]]]],[11,R[114],E,E,50,[[["self"],[R[768]]]]],[11,R[114],E,E,20,[[["self"],[R[768]]]]],[11,R[114],E,E,15,[[["self"],[R[768]]]]],[11,R[114],E,E,16,[[["self"],[R[768]]]]],[11,R[114],E,E,27,[[["self"],[R[768]]]]],[11,R[114],E,E,157,[[["self"],[R[768]]]]],[11,R[114],E,E,53,[[["self"],[R[768]]]]],[11,R[114],E,E,31,[[["self"],[R[768]]]]],[11,R[114],E,E,40,[[["self"],[R[768]]]]],[11,R[114],E,E,39,[[["self"],[R[768]]]]],[11,R[114],E,E,41,[[["self"],[R[768]]]]],[11,R[114],E,E,22,[[["self"],[R[768]]]]],[11,R[114],E,E,26,[[["self"],[R[768]]]]],[11,R[114],E,E,43,[[["self"],[R[768]]]]],[11,R[114],E,E,35,[[["self"],[R[768]]]]],[11,R[114],E,E,44,[[["self"],[R[768]]]]],[11,R[114],E,E,42,[[["self"],[R[768]]]]],[11,R[114],E,E,29,[[["self"],[R[768]]]]],[11,R[114],E,E,38,[[["self"],[R[768]]]]],[11,R[114],E,E,45,[[["self"],[R[768]]]]],[11,R[114],E,E,12,[[["self"],[R[768]]]]],[11,R[114],E,E,11,[[["self"],[R[768]]]]],[11,R[114],E,E,10,[[["self"],[R[768]]]]],[11,R[114],E,E,158,[[["self"],[R[768]]]]],[11,R[114],E,E,160,[[["self"],[R[768]]]]],[11,R[114],E,E,161,[[["self"],[R[768]]]]],[11,R[114],E,E,56,[[["self"],[R[768]]]]],[11,R[114],E,E,305,[[["self"],[R[768]]]]],[11,R[114],E,E,283,[[["self"],[R[768]]]]],[11,R[114],E,E,306,[[["self"],[R[768]]]]],[11,R[114],E,E,54,[[["self"],[R[768]]]]],[11,R[114],E,E,57,[[["self"],[R[768]]]]],[11,R[114],E,E,62,[[["self"],[R[768]]]]],[11,R[114],E,E,61,[[["self"],[R[768]]]]],[11,R[114],E,E,159,[[["self"],[R[768]]]]],[11,R[114],E,E,55,[[["self"],[R[768]]]]],[11,R[114],E,E,63,[[["self"],[R[768]]]]],[11,R[114],E,E,60,[[["self"],[R[768]]]]],[11,R[114],E,E,59,[[["self"],[R[768]]]]],[11,R[114],E,E,58,[[["self"],[R[768]]]]],[11,R[114],E,E,165,[[["self"],[R[768]]]]],[11,R[114],E,E,167,[[["self"],[R[768]]]]],[11,R[114],E,E,163,[[["self"],[R[768]]]]],[11,R[114],E,E,166,[[["self"],[R[768]]]]],[11,R[114],E,E,164,[[["self"],[R[768]]]]],[11,R[114],E,E,162,[[["self"],[R[768]]]]],[11,R[114],E,E,74,[[["self"],[R[768]]]]],[11,R[114],E,E,87,[[["self"],[R[768]]]]],[11,R[114],E,E,81,[[["self"],[R[768]]]]],[11,R[114],E,E,72,[[["self"],[R[768]]]]],[11,R[114],E,E,75,[[["self"],[R[768]]]]],[11,R[114],E,E,80,[[["self"],[R[768]]]]],[11,R[114],E,E,76,[[["self"],[R[768]]]]],[11,R[114],E,E,85,[[["self"],[R[768]]]]],[11,R[114],E,E,73,[[["self"],[R[768]]]]],[11,R[114],E,E,82,[[["self"],[R[768]]]]],[11,R[114],E,E,86,[[["self"],[R[768]]]]],[11,R[114],E,E,83,[[["self"],[R[768]]]]],[11,R[114],E,E,84,[[["self"],[R[768]]]]],[11,R[114],E,E,77,[[["self"],[R[768]]]]],[11,R[114],E,E,78,[[["self"],[R[768]]]]],[11,R[114],E,E,79,[[["self"],[R[768]]]]],[11,R[114],E,E,97,[[["self"],[R[768]]]]],[11,R[114],E,E,96,[[["self"],[R[768]]]]],[11,R[114],E,E,98,[[["self"],[R[768]]]]],[11,R[114],E,E,94,[[["self"],[R[768]]]]],[11,R[114],E,E,95,[[["self"],[R[768]]]]],[11,R[114],E,E,90,[[["self"],[R[768]]]]],[11,R[114],E,E,92,[[["self"],[R[768]]]]],[11,R[114],E,E,93,[[["self"],[R[768]]]]],[11,R[114],E,E,91,[[["self"],[R[768]]]]],[11,R[114],E,E,68,[[["self"],[R[768]]]]],[11,R[114],E,E,70,[[["self"],[R[768]]]]],[11,R[114],E,E,71,[[["self"],[R[768]]]]],[11,R[114],E,E,69,[[["self"],[R[768]]]]],[11,R[114],E,E,64,[[["self"],[R[768]]]]],[11,R[114],E,E,66,[[["self"],[R[768]]]]],[11,R[114],E,E,67,[[["self"],[R[768]]]]],[11,R[114],E,E,65,[[["self"],[R[768]]]]],[11,R[114],E,E,89,[[["self"],[R[768]]]]],[11,R[114],E,E,88,[[["self"],[R[768]]]]],[11,R[114],E,E,99,[[["self"],[R[768]]]]],[11,R[114],E,E,100,[[["self"],[R[768]]]]],[11,R[114],E,E,101,[[["self"],[R[768]]]]],[11,R[114],E,E,168,[[["self"],[R[768]]]]],[11,R[114],E,E,284,[[["self"],[R[768]]]]],[11,R[114],E,E,285,[[["self"],[R[768]]]]],[11,R[114],E,E,286,[[["self"],[R[768]]]]],[11,R[114],E,E,287,[[["self"],[R[768]]]]],[11,R[114],E,E,288,[[["self"],[R[768]]]]],[11,R[114],E,E,289,[[["self"],[R[768]]]]],[11,R[114],E,E,102,[[["self"],[R[768]]]]],[11,R[114],E,E,103,[[["self"],[R[768]]]]],[11,R[114],E,E,107,[[["self"],[R[768]]]]],[11,R[114],E,E,172,[[["self"],[R[768]]]]],[11,R[114],E,E,173,[[["self"],[R[768]]]]],[11,R[114],E,E,108,[[["self"],[R[768]]]]],[11,R[114],E,E,174,[[["self"],[R[768]]]]],[11,R[114],E,E,109,[[["self"],[R[768]]]]],[11,R[114],E,E,176,[[["self"],[R[768]]]]],[11,R[114],E,E,123,[[["self"],[R[768]]]]],[11,R[114],E,E,112,[[["self"],[R[768]]]]],[11,R[114],E,E,121,[[["self"],[R[768]]]]],[11,R[114],E,E,122,[[["self"],[R[768]]]]],[11,R[114],E,E,113,[[["self"],[R[768]]]]],[11,R[114],E,E,118,[[["self"],[R[768]]]]],[11,R[114],E,E,125,[[["self"],[R[768]]]]],[11,R[114],E,E,120,[[["self"],[R[768]]]]],[11,R[114],E,E,124,[[["self"],[R[768]]]]],[11,R[114],E,E,115,[[["self"],[R[768]]]]],[11,R[114],E,E,114,[[["self"],[R[768]]]]],[11,R[114],E,E,119,[[["self"],[R[768]]]]],[11,R[114],E,E,116,[[["self"],[R[768]]]]],[11,R[114],E,E,117,[[["self"],[R[768]]]]],[11,R[114],E,E,175,[[["self"],[R[768]]]]],[11,R[114],E,E,111,[[["self"],[R[768]]]]],[11,R[114],E,E,110,[[["self"],[R[768]]]]],[11,R[114],E,E,177,[[["self"],[R[768]]]]],[11,R[114],E,E,141,[[["self"],[R[768]]]]],[11,R[114],E,E,128,[[["self"],[R[768]]]]],[11,R[114],E,E,137,[[["self"],[R[768]]]]],[11,R[114],E,E,139,[[["self"],[R[768]]]]],[11,R[114],E,E,140,[[["self"],[R[768]]]]],[11,R[114],E,E,132,[[["self"],[R[768]]]]],[11,R[114],E,E,138,[[["self"],[R[768]]]]],[11,R[114],E,E,127,[[["self"],[R[768]]]]],[11,R[114],E,E,134,[[["self"],[R[768]]]]],[11,R[114],E,E,135,[[["self"],[R[768]]]]],[11,R[114],E,E,129,[[["self"],[R[768]]]]],[11,R[114],E,E,133,[[["self"],[R[768]]]]],[11,R[114],E,E,136,[[["self"],[R[768]]]]],[11,R[114],E,E,130,[[["self"],[R[768]]]]],[11,R[114],E,E,131,[[["self"],[R[768]]]]],[11,R[114],E,E,126,[[["self"],[R[768]]]]],[11,R[114],E,E,146,[[["self"],[R[768]]]]],[11,R[114],E,E,147,[[["self"],[R[768]]]]],[11,R[114],E,E,179,[[["self"],[R[768]]]]],[11,R[114],E,E,178,[[["self"],[R[768]]]]],[11,R[114],E,E,142,[[["self"],[R[768]]]]],[11,R[114],E,E,143,[[["self"],[R[768]]]]],[11,R[114],E,E,144,[[["self"],[R[768]]]]],[11,R[114],E,E,145,[[["self"],[R[768]]]]],[11,R[114],R[2727],E,294,[[["self"],[R[768]]]]],[11,R[114],E,E,293,[[["self"],[R[768]]]]],[11,"new","syn",R[2756],304,[[["span"],["str"]],["ident"]]],[11,"span",E,R[2757],304,[[["self"]],["span"]]],[11,R[770],E,R[2758],304,[[["self"],["span"]]]],[11,"visit_abi","syn::visit",E,296,[[["self"],["abi"]]]],[11,R[2244],E,E,296,[[["self"],[R[2245]]]]],[11,"visit_arm",E,E,296,[[["self"],["arm"]]]],[11,R[2250],E,E,296,[[["self"],[R[2487]]]]],[11,R[2251],E,E,296,[[["self"],[R[996]]]]],[11,R[2252],E,E,296,[[["self"],[R[2488]]]]],[11,R[2255],E,E,296,[[["self"],["binop"]]]],[11,R[2256],E,E,296,[[["self"],["binding"]]]],[11,R[2257],E,E,296,[[["self"],["block"]]]],[11,R[2258],E,E,296,[[["self"],[R[2259]]]]],[11,R[2260],E,E,296,[[["self"],[R[2489]]]]],[11,R[2261],E,E,296,[[["self"],[R[2490]]]]],[11,R[2759],E,E,296,[[["self"],["data"]]]],[11,R[2262],E,E,296,[[["self"],[R[2748]]]]],[11,R[2263],E,E,296,[[["self"],[R[2491]]]]],[11,R[2264],E,E,296,[[["self"],[R[2492]]]]],[11,R[2265],E,E,296,[[["self"],[R[993]]]]],[11,R[2760],E,E,296,[[["self"],["expr"]]]],[11,R[2266],E,E,296,[[["self"],[R[2493]]]]],[11,R[2267],E,E,296,[[["self"],[R[2494]]]]],[11,R[2268],E,E,296,[[["self"],[R[2269]]]]],[11,R[2270],E,E,296,[[["self"],[R[2495]]]]],[11,R[3269],E,E,296,[[["self"],[R[3278]]]]],[11,R[2271],E,E,296,[[["self"],[R[2496]]]]],[11,R[2272],E,E,296,[[["self"],[R[2497]]]]],[11,R[2273],E,E,296,[[["self"],["exprbox"]]]],[11,R[2274],E,E,296,[[["self"],[R[2498]]]]],[11,R[2275],E,E,296,[[["self"],[R[2731]]]]],[11,R[2276],E,E,296,[[["self"],[R[2732]]]]],[11,R[2277],E,E,296,[[["self"],[R[2278]]]]],[11,R[2279],E,E,296,[[["self"],[R[2280]]]]],[11,R[2281],E,E,296,[[["self"],[R[2499]]]]],[11,R[2282],E,E,296,[[["self"],[R[2283]]]]],[11,R[2284],E,E,296,[[["self"],[R[2500]]]]],[11,R[2285],E,E,296,[[["self"],["exprif"]]]],[11,R[2288],E,E,296,[[["self"],[R[2501]]]]],[11,R[2289],E,E,296,[[["self"],["exprlet"]]]],[11,R[2290],E,E,296,[[["self"],["exprlit"]]]],[11,R[2291],E,E,296,[[["self"],[R[2734]]]]],[11,R[2292],E,E,296,[[["self"],[R[2502]]]]],[11,R[2293],E,E,296,[[["self"],[R[2503]]]]],[11,R[2294],E,E,296,[[["self"],[R[2295]]]]],[11,R[2296],E,E,296,[[["self"],[R[2504]]]]],[11,R[2297],E,E,296,[[["self"],[R[2735]]]]],[11,R[2298],E,E,296,[[["self"],[R[2505]]]]],[11,R[2299],E,E,296,[[["self"],[R[2300]]]]],[11,R[2301],E,E,296,[[["self"],[R[2506]]]]],[11,R[2302],E,E,296,[[["self"],[R[2507]]]]],[11,R[2303],E,E,296,[[["self"],[R[2508]]]]],[11,R[2304],E,E,296,[[["self"],["exprtry"]]]],[11,R[2305],E,E,296,[[["self"],[R[2306]]]]],[11,R[2307],E,E,296,[[["self"],[R[2509]]]]],[11,R[2308],E,E,296,[[["self"],[R[2733]]]]],[11,R[2309],E,E,296,[[["self"],[R[2510]]]]],[11,R[2310],E,E,296,[[["self"],[R[2511]]]]],[11,R[2313],E,E,296,[[["self"],[R[2512]]]]],[11,R[2314],E,E,296,[[["self"],[R[2513]]]]],[11,R[2315],E,E,296,[[["self"],["field"]]]],[11,R[2316],E,E,296,[[["self"],[R[2741]]]]],[11,R[2317],E,E,296,[[["self"],[R[2514]]]]],[11,R[2318],E,E,296,[[["self"],["fields"]]]],[11,R[2319],E,E,296,[[["self"],[R[2320]]]]],[11,R[2321],E,E,296,[[["self"],[R[2322]]]]],[11,R[2761],E,E,296,[[["self"],["file"]]]],[11,R[2323],E,E,296,[[["self"],["fnarg"]]]],[11,R[2325],E,E,296,[[["self"],[R[2326]]]]],[11,R[2327],E,E,296,[[["self"],[R[2328]]]]],[11,R[2329],E,E,296,[[["self"],[R[2330]]]]],[11,R[2331],E,E,296,[[["self"],[R[2332]]]]],[11,R[2333],E,E,296,[[["self"],[R[2334]]]]],[11,R[2337],E,E,296,[[["self"],[R[2338]]]]],[11,R[2339],E,E,296,[[["self"],[R[2340]]]]],[11,R[2341],E,E,296,[[["self"],[R[2342]]]]],[11,R[2343],E,E,296,[[["self"],[R[2084]]]]],[11,R[2485],E,E,296,[[["self"],["ident"]]]],[11,R[2344],E,E,296,[[["self"],[R[2746]]]]],[11,R[2345],E,E,296,[[["self"],[R[2346]]]]],[11,R[2349],E,E,296,[[["self"],[R[2350]]]]],[11,R[2351],E,E,296,[[["self"],[R[2352]]]]],[11,R[2353],E,E,296,[[["self"],[R[2354]]]]],[11,R[2357],E,E,296,[[["self"],["index"]]]],[11,R[2762],E,E,296,[[["self"],["item"]]]],[11,R[2358],E,E,296,[[["self"],[R[2515]]]]],[11,R[2359],E,E,296,[[["self"],[R[2743]]]]],[11,R[2362],E,E,296,[[["self"],[R[2363]]]]],[11,R[2364],E,E,296,[[["self"],["itemfn"]]]],[11,R[2365],E,E,296,[[["self"],[R[2366]]]]],[11,R[2367],E,E,296,[[["self"],[R[2744]]]]],[11,R[2368],E,E,296,[[["self"],[R[2516]]]]],[11,R[2369],E,E,296,[[["self"],[R[2517]]]]],[11,R[2370],E,E,296,[[["self"],["itemmod"]]]],[11,R[2371],E,E,296,[[["self"],[R[2518]]]]],[11,R[2372],E,E,296,[[["self"],[R[2519]]]]],[11,R[2373],E,E,296,[[["self"],[R[2520]]]]],[11,R[2374],E,E,296,[[["self"],[R[2375]]]]],[11,R[2376],E,E,296,[[["self"],[R[2742]]]]],[11,R[2377],E,E,296,[[["self"],[R[2521]]]]],[11,R[2378],E,E,296,[[["self"],["itemuse"]]]],[11,R[2381],E,E,296,[[["self"],["label"]]]],[11,R[2382],E,E,296,[[["self"],[R[1001]]]]],[11,R[2383],E,E,296,[[["self"],[R[1005]]]]],[11,"visit_lit",E,E,296,[[["self"],["lit"]]]],[11,R[2384],E,E,296,[[["self"],["litbool"]]]],[11,R[2385],E,E,296,[[["self"],["litbyte"]]]],[11,R[2386],E,E,296,[[["self"],[R[2522]]]]],[11,R[2387],E,E,296,[[["self"],["litchar"]]]],[11,R[2388],E,E,296,[[["self"],[R[2747]]]]],[11,R[2389],E,E,296,[[["self"],["litint"]]]],[11,R[2390],E,E,296,[[["self"],["litstr"]]]],[11,R[2393],E,E,296,[[["self"],["local"]]]],[11,R[2394],E,E,296,[[["self"],["macro"]]]],[11,R[2395],E,E,296,[[["self"],[R[2396]]]]],[11,R[2397],E,E,296,[[["self"],["member"]]]],[11,R[2763],E,E,296,[[["self"],["meta"]]]],[11,R[2398],E,E,296,[[["self"],[R[2729]]]]],[11,R[2399],E,E,296,[[["self"],[R[2400]]]]],[11,R[2402],E,E,296,[[["self"],[R[2403]]]]],[11,R[2404],E,E,296,[[["self"],[R[2524]]]]],[11,R[2405],E,E,296,[[["self"],[R[2406]]]]],[11,"visit_pat",E,E,296,[[["self"],["pat"]]]],[11,R[2407],E,E,296,[[["self"],["patbox"]]]],[11,R[2408],E,E,296,[[["self"],[R[2736]]]]],[11,R[2409],E,E,296,[[["self"],["patlit"]]]],[11,R[2410],E,E,296,[[["self"],[R[2740]]]]],[11,R[3270],E,E,296,[[["self"],["pator"]]]],[11,R[2411],E,E,296,[[["self"],["patpath"]]]],[11,R[2412],E,E,296,[[["self"],[R[2738]]]]],[11,R[3271],E,E,296,[[["self"],[R[3272]]]]],[11,R[3273],E,E,296,[[["self"],["patrest"]]]],[11,R[2414],E,E,296,[[["self"],[R[2739]]]]],[11,R[2415],E,E,296,[[["self"],[R[2525]]]]],[11,R[2416],E,E,296,[[["self"],[R[2737]]]]],[11,R[2417],E,E,296,[[["self"],[R[2418]]]]],[11,R[3274],E,E,296,[[["self"],["pattype"]]]],[11,R[2421],E,E,296,[[["self"],["patwild"]]]],[11,R[2764],E,E,296,[[["self"],["path"]]]],[11,R[2422],E,E,296,[[["self"],[R[2423]]]]],[11,R[2424],E,E,296,[[["self"],[R[1012]]]]],[11,R[2425],E,E,296,[[["self"],[R[2426]]]]],[11,R[2427],E,E,296,[[["self"],[R[2428]]]]],[11,R[2429],E,E,296,[[["self"],[R[2430]]]]],[11,R[2431],E,E,296,[[["self"],["qself"]]]],[11,R[2432],E,E,296,[[["self"],[R[2433]]]]],[11,R[3275],E,E,296,[[["self"],[R[3286]]]]],[11,R[2434],E,E,296,[[["self"],[R[2526]]]]],[11,R[3276],E,E,296,[[["self"],[R[3279]]]]],[11,R[2767],E,E,296,[[["self"],["span"]]]],[11,R[2765],E,E,296,[[["self"],["stmt"]]]],[11,R[2435],E,E,296,[[["self"],[R[2527]]]]],[11,R[2436],E,E,296,[[["self"],[R[1006]]]]],[11,R[2437],E,E,296,[[["self"],[R[2528]]]]],[11,R[2438],E,E,296,[[["self"],[R[2439]]]]],[11,R[2440],E,E,296,[[["self"],[R[2441]]]]],[11,R[2442],E,E,296,[[["self"],[R[2443]]]]],[11,R[2444],E,E,296,[[["self"],[R[2445]]]]],[11,R[2766],E,E,296,[[["self"],["type"]]]],[11,R[2448],E,E,296,[[["self"],[R[2529]]]]],[11,R[2449],E,E,296,[[["self"],[R[2530]]]]],[11,R[2450],E,E,296,[[["self"],[R[2531]]]]],[11,R[2451],E,E,296,[[["self"],[R[2452]]]]],[11,R[2453],E,E,296,[[["self"],[R[2532]]]]],[11,R[2454],E,E,296,[[["self"],[R[2533]]]]],[11,R[2455],E,E,296,[[["self"],[R[2534]]]]],[11,R[2456],E,E,296,[[["self"],[R[2535]]]]],[11,R[2457],E,E,296,[[["self"],[R[2458]]]]],[11,R[2459],E,E,296,[[["self"],[R[2536]]]]],[11,R[2460],E,E,296,[[["self"],[R[2749]]]]],[11,R[2461],E,E,296,[[["self"],["typeptr"]]]],[11,R[2462],E,E,296,[[["self"],[R[2463]]]]],[11,R[2464],E,E,296,[[["self"],[R[2537]]]]],[11,R[2465],E,E,296,[[["self"],[R[2466]]]]],[11,R[2467],E,E,296,[[["self"],[R[2538]]]]],[11,R[2470],E,E,296,[[["self"],["unop"]]]],[11,R[2471],E,E,296,[[["self"],["useglob"]]]],[11,R[2472],E,E,296,[[["self"],[R[2745]]]]],[11,R[2473],E,E,296,[[["self"],["usename"]]]],[11,R[2474],E,E,296,[[["self"],["usepath"]]]],[11,R[2475],E,E,296,[[["self"],[R[2539]]]]],[11,R[2476],E,E,296,[[["self"],["usetree"]]]],[11,R[3277],E,E,296,[[["self"],[R[3289]]]]],[11,R[2477],E,E,296,[[["self"],["variant"]]]],[11,R[2478],E,E,296,[[["self"],[R[2730]]]]],[11,R[2479],E,E,296,[[["self"],[R[2540]]]]],[11,R[2480],E,E,296,[[["self"],[R[2481]]]]],[11,R[2482],E,E,296,[[["self"],[R[1004]]]]],[11,R[2483],E,E,296,[[["self"],[R[994]]]]],[11,R[2484],E,E,296,[[["self"],[R[1007]]]]],[11,"fold_abi","syn::fold",E,297,[[["self"],["abi"]],["abi"]]],[11,R[2542],E,E,297,[[["self"],[R[2245]]],[R[2245]]]],[11,"fold_arm",E,E,297,[[["self"],["arm"]],["arm"]]],[11,R[2546],E,E,297,[[["self"],[R[2487]]],[R[2487]]]],[11,R[2547],E,E,297,[[["self"],[R[996]]],[R[996]]]],[11,R[2548],E,E,297,[[["self"],[R[2488]]],[R[2488]]]],[11,R[2550],E,E,297,[[["self"],["binop"]],["binop"]]],[11,R[2551],E,E,297,[[["self"],["binding"]],["binding"]]],[11,R[2768],E,E,297,[[["self"],["block"]],["block"]]],[11,R[2552],E,E,297,[[["self"],[R[2259]]],[R[2259]]]],[11,R[2553],E,E,297,[[["self"],[R[2489]]],[R[2489]]]],[11,R[2554],E,E,297,[[["self"],[R[2490]]],[R[2490]]]],[11,"fold_data",E,E,297,[[["self"],["data"]],["data"]]],[11,R[2555],E,E,297,[[["self"],[R[2748]]],[R[2748]]]],[11,R[2556],E,E,297,[[["self"],[R[2491]]],[R[2491]]]],[11,R[2557],E,E,297,[[["self"],[R[2492]]],[R[2492]]]],[11,R[2558],E,E,297,[[["self"],[R[993]]],[R[993]]]],[11,"fold_expr",E,E,297,[[["self"],["expr"]],["expr"]]],[11,R[2559],E,E,297,[[["self"],[R[2493]]],[R[2493]]]],[11,R[2560],E,E,297,[[["self"],[R[2494]]],[R[2494]]]],[11,R[2561],E,E,297,[[["self"],[R[2269]]],[R[2269]]]],[11,R[2562],E,E,297,[[["self"],[R[2495]]],[R[2495]]]],[11,R[3280],E,E,297,[[["self"],[R[3278]]],[R[3278]]]],[11,R[2563],E,E,297,[[["self"],[R[2496]]],[R[2496]]]],[11,R[2564],E,E,297,[[["self"],[R[2497]]],[R[2497]]]],[11,R[2565],E,E,297,[[["self"],["exprbox"]],["exprbox"]]],[11,R[2566],E,E,297,[[["self"],[R[2498]]],[R[2498]]]],[11,R[2567],E,E,297,[[["self"],[R[2731]]],[R[2731]]]],[11,R[2568],E,E,297,[[["self"],[R[2732]]],[R[2732]]]],[11,R[2569],E,E,297,[[["self"],[R[2278]]],[R[2278]]]],[11,R[2570],E,E,297,[[["self"],[R[2280]]],[R[2280]]]],[11,R[2571],E,E,297,[[["self"],[R[2499]]],[R[2499]]]],[11,R[2572],E,E,297,[[["self"],[R[2283]]],[R[2283]]]],[11,R[2573],E,E,297,[[["self"],[R[2500]]],[R[2500]]]],[11,R[2574],E,E,297,[[["self"],["exprif"]],["exprif"]]],[11,R[2576],E,E,297,[[["self"],[R[2501]]],[R[2501]]]],[11,R[2577],E,E,297,[[["self"],["exprlet"]],["exprlet"]]],[11,R[2578],E,E,297,[[["self"],["exprlit"]],["exprlit"]]],[11,R[2579],E,E,297,[[["self"],[R[2734]]],[R[2734]]]],[11,R[2580],E,E,297,[[["self"],[R[2502]]],[R[2502]]]],[11,R[2581],E,E,297,[[["self"],[R[2503]]],[R[2503]]]],[11,R[2582],E,E,297,[[["self"],[R[2295]]],[R[2295]]]],[11,R[2583],E,E,297,[[["self"],[R[2504]]],[R[2504]]]],[11,R[2584],E,E,297,[[["self"],[R[2735]]],[R[2735]]]],[11,R[2585],E,E,297,[[["self"],[R[2505]]],[R[2505]]]],[11,R[2586],E,E,297,[[["self"],[R[2300]]],[R[2300]]]],[11,R[2587],E,E,297,[[["self"],[R[2506]]],[R[2506]]]],[11,R[2588],E,E,297,[[["self"],[R[2507]]],[R[2507]]]],[11,R[2589],E,E,297,[[["self"],[R[2508]]],[R[2508]]]],[11,R[2590],E,E,297,[[["self"],["exprtry"]],["exprtry"]]],[11,R[2591],E,E,297,[[["self"],[R[2306]]],[R[2306]]]],[11,R[2592],E,E,297,[[["self"],[R[2509]]],[R[2509]]]],[11,R[2593],E,E,297,[[["self"],[R[2733]]],[R[2733]]]],[11,R[2594],E,E,297,[[["self"],[R[2510]]],[R[2510]]]],[11,R[2595],E,E,297,[[["self"],[R[2511]]],[R[2511]]]],[11,R[2597],E,E,297,[[["self"],[R[2512]]],[R[2512]]]],[11,R[2598],E,E,297,[[["self"],[R[2513]]],[R[2513]]]],[11,R[2769],E,E,297,[[["self"],["field"]],["field"]]],[11,R[2599],E,E,297,[[["self"],[R[2741]]],[R[2741]]]],[11,R[2600],E,E,297,[[["self"],[R[2514]]],[R[2514]]]],[11,R[2601],E,E,297,[[["self"],["fields"]],["fields"]]],[11,R[2602],E,E,297,[[["self"],[R[2320]]],[R[2320]]]],[11,R[2603],E,E,297,[[["self"],[R[2322]]],[R[2322]]]],[11,"fold_file",E,E,297,[[["self"],["file"]],["file"]]],[11,R[2604],E,E,297,[[["self"],["fnarg"]],["fnarg"]]],[11,R[2606],E,E,297,[[["self"],[R[2326]]],[R[2326]]]],[11,R[2607],E,E,297,[[["self"],[R[2328]]],[R[2328]]]],[11,R[2608],E,E,297,[[["self"],[R[2330]]],[R[2330]]]],[11,R[2609],E,E,297,[[["self"],[R[2332]]],[R[2332]]]],[11,R[2610],E,E,297,[[["self"],[R[2334]]],[R[2334]]]],[11,R[2612],E,E,297,[[["self"],[R[2338]]],[R[2338]]]],[11,R[2613],E,E,297,[[["self"],[R[2340]]],[R[2340]]]],[11,R[2614],E,E,297,[[["self"],[R[2342]]],[R[2342]]]],[11,R[2615],E,E,297,[[["self"],[R[2084]]],[R[2084]]]],[11,R[2776],E,E,297,[[["self"],["ident"]],["ident"]]],[11,R[2616],E,E,297,[[["self"],[R[2746]]],[R[2746]]]],[11,R[2617],E,E,297,[[["self"],[R[2346]]],[R[2346]]]],[11,R[2619],E,E,297,[[["self"],[R[2350]]],[R[2350]]]],[11,R[2620],E,E,297,[[["self"],[R[2352]]],[R[2352]]]],[11,R[2621],E,E,297,[[["self"],[R[2354]]],[R[2354]]]],[11,R[2770],E,E,297,[[["self"],["index"]],["index"]]],[11,"fold_item",E,E,297,[[["self"],["item"]],["item"]]],[11,R[2623],E,E,297,[[["self"],[R[2515]]],[R[2515]]]],[11,R[2624],E,E,297,[[["self"],[R[2743]]],[R[2743]]]],[11,R[2626],E,E,297,[[["self"],[R[2363]]],[R[2363]]]],[11,R[2627],E,E,297,[[["self"],["itemfn"]],["itemfn"]]],[11,R[2628],E,E,297,[[["self"],[R[2366]]],[R[2366]]]],[11,R[2629],E,E,297,[[["self"],[R[2744]]],[R[2744]]]],[11,R[2630],E,E,297,[[["self"],[R[2516]]],[R[2516]]]],[11,R[2631],E,E,297,[[["self"],[R[2517]]],[R[2517]]]],[11,R[2632],E,E,297,[[["self"],["itemmod"]],["itemmod"]]],[11,R[2633],E,E,297,[[["self"],[R[2518]]],[R[2518]]]],[11,R[2634],E,E,297,[[["self"],[R[2519]]],[R[2519]]]],[11,R[2635],E,E,297,[[["self"],[R[2520]]],[R[2520]]]],[11,R[2636],E,E,297,[[["self"],[R[2375]]],[R[2375]]]],[11,R[2637],E,E,297,[[["self"],[R[2742]]],[R[2742]]]],[11,R[2638],E,E,297,[[["self"],[R[2521]]],[R[2521]]]],[11,R[2639],E,E,297,[[["self"],["itemuse"]],["itemuse"]]],[11,R[2771],E,E,297,[[["self"],["label"]],["label"]]],[11,R[2641],E,E,297,[[["self"],[R[1001]]],[R[1001]]]],[11,R[2642],E,E,297,[[["self"],[R[1005]]],[R[1005]]]],[11,"fold_lit",E,E,297,[[["self"],["lit"]],["lit"]]],[11,R[2643],E,E,297,[[["self"],["litbool"]],["litbool"]]],[11,R[2644],E,E,297,[[["self"],["litbyte"]],["litbyte"]]],[11,R[2645],E,E,297,[[["self"],[R[2522]]],[R[2522]]]],[11,R[2646],E,E,297,[[["self"],["litchar"]],["litchar"]]],[11,R[2647],E,E,297,[[["self"],[R[2747]]],[R[2747]]]],[11,R[2648],E,E,297,[[["self"],["litint"]],["litint"]]],[11,R[2649],E,E,297,[[["self"],["litstr"]],["litstr"]]],[11,R[2772],E,E,297,[[["self"],["local"]],["local"]]],[11,R[2773],E,E,297,[[["self"],["macro"]],["macro"]]],[11,R[2651],E,E,297,[[["self"],[R[2396]]],[R[2396]]]],[11,R[2652],E,E,297,[[["self"],["member"]],["member"]]],[11,"fold_meta",E,E,297,[[["self"],["meta"]],["meta"]]],[11,R[2653],E,E,297,[[["self"],[R[2729]]],[R[2729]]]],[11,R[2654],E,E,297,[[["self"],[R[2400]]],[R[2400]]]],[11,R[2656],E,E,297,[[["self"],[R[2403]]],[R[2403]]]],[11,R[2657],E,E,297,[[["self"],[R[2524]]],[R[2524]]]],[11,R[2658],E,E,297,[[["self"],[R[2406]]],[R[2406]]]],[11,"fold_pat",E,E,297,[[["self"],["pat"]],["pat"]]],[11,R[2659],E,E,297,[[["self"],["patbox"]],["patbox"]]],[11,R[2660],E,E,297,[[["self"],[R[2736]]],[R[2736]]]],[11,R[2661],E,E,297,[[["self"],["patlit"]],["patlit"]]],[11,R[2662],E,E,297,[[["self"],[R[2740]]],[R[2740]]]],[11,R[3281],E,E,297,[[["self"],["pator"]],["pator"]]],[11,R[2663],E,E,297,[[["self"],["patpath"]],["patpath"]]],[11,R[2664],E,E,297,[[["self"],[R[2738]]],[R[2738]]]],[11,R[3282],E,E,297,[[["self"],[R[3272]]],[R[3272]]]],[11,R[3283],E,E,297,[[["self"],["patrest"]],["patrest"]]],[11,R[2666],E,E,297,[[["self"],[R[2739]]],[R[2739]]]],[11,R[2667],E,E,297,[[["self"],[R[2525]]],[R[2525]]]],[11,R[2668],E,E,297,[[["self"],[R[2737]]],[R[2737]]]],[11,R[2669],E,E,297,[[["self"],[R[2418]]],[R[2418]]]],[11,R[3284],E,E,297,[[["self"],["pattype"]],["pattype"]]],[11,R[2671],E,E,297,[[["self"],["patwild"]],["patwild"]]],[11,"fold_path",E,E,297,[[["self"],["path"]],["path"]]],[11,R[2672],E,E,297,[[["self"],[R[2423]]],[R[2423]]]],[11,R[2673],E,E,297,[[["self"],[R[1012]]],[R[1012]]]],[11,R[2674],E,E,297,[[["self"],[R[2426]]],[R[2426]]]],[11,R[2675],E,E,297,[[["self"],[R[2428]]],[R[2428]]]],[11,R[2676],E,E,297,[[["self"],[R[2430]]],[R[2430]]]],[11,R[2774],E,E,297,[[["self"],["qself"]],["qself"]]],[11,R[2677],E,E,297,[[["self"],[R[2433]]],[R[2433]]]],[11,R[3285],E,E,297,[[["self"],[R[3286]]],[R[3286]]]],[11,R[2678],E,E,297,[[["self"],[R[2526]]],[R[2526]]]],[11,R[3287],E,E,297,[[["self"],[R[3279]]],[R[3279]]]],[11,"fold_span",E,E,297,[[["self"],["span"]],["span"]]],[11,"fold_stmt",E,E,297,[[["self"],["stmt"]],["stmt"]]],[11,R[2679],E,E,297,[[["self"],[R[2527]]],[R[2527]]]],[11,R[2680],E,E,297,[[["self"],[R[1006]]],[R[1006]]]],[11,R[2681],E,E,297,[[["self"],[R[2528]]],[R[2528]]]],[11,R[2682],E,E,297,[[["self"],[R[2439]]],[R[2439]]]],[11,R[2683],E,E,297,[[["self"],[R[2441]]],[R[2441]]]],[11,R[2684],E,E,297,[[["self"],[R[2443]]],[R[2443]]]],[11,R[2685],E,E,297,[[["self"],[R[2445]]],[R[2445]]]],[11,"fold_type",E,E,297,[[["self"],["type"]],["type"]]],[11,R[2687],E,E,297,[[["self"],[R[2529]]],[R[2529]]]],[11,R[2688],E,E,297,[[["self"],[R[2530]]],[R[2530]]]],[11,R[2689],E,E,297,[[["self"],[R[2531]]],[R[2531]]]],[11,R[2690],E,E,297,[[["self"],[R[2452]]],[R[2452]]]],[11,R[2691],E,E,297,[[["self"],[R[2532]]],[R[2532]]]],[11,R[2692],E,E,297,[[["self"],[R[2533]]],[R[2533]]]],[11,R[2693],E,E,297,[[["self"],[R[2534]]],[R[2534]]]],[11,R[2694],E,E,297,[[["self"],[R[2535]]],[R[2535]]]],[11,R[2695],E,E,297,[[["self"],[R[2458]]],[R[2458]]]],[11,R[2696],E,E,297,[[["self"],[R[2536]]],[R[2536]]]],[11,R[2697],E,E,297,[[["self"],[R[2749]]],[R[2749]]]],[11,R[2698],E,E,297,[[["self"],["typeptr"]],["typeptr"]]],[11,R[2699],E,E,297,[[["self"],[R[2463]]],[R[2463]]]],[11,R[2700],E,E,297,[[["self"],[R[2537]]],[R[2537]]]],[11,R[2701],E,E,297,[[["self"],[R[2466]]],[R[2466]]]],[11,R[2702],E,E,297,[[["self"],[R[2538]]],[R[2538]]]],[11,R[2775],E,E,297,[[["self"],["unop"]],["unop"]]],[11,R[2704],E,E,297,[[["self"],["useglob"]],["useglob"]]],[11,R[2705],E,E,297,[[["self"],[R[2745]]],[R[2745]]]],[11,R[2706],E,E,297,[[["self"],["usename"]],["usename"]]],[11,R[2707],E,E,297,[[["self"],["usepath"]],["usepath"]]],[11,R[2708],E,E,297,[[["self"],[R[2539]]],[R[2539]]]],[11,R[2709],E,E,297,[[["self"],["usetree"]],["usetree"]]],[11,R[3288],E,E,297,[[["self"],[R[3289]]],[R[3289]]]],[11,R[2710],E,E,297,[[["self"],["variant"]],["variant"]]],[11,R[2711],E,E,297,[[["self"],[R[2730]]],[R[2730]]]],[11,R[2712],E,E,297,[[["self"],[R[2540]]],[R[2540]]]],[11,R[2713],E,E,297,[[["self"],[R[2481]]],[R[2481]]]],[11,R[2714],E,E,297,[[["self"],[R[1004]]],[R[1004]]]],[11,R[2715],E,E,297,[[["self"],[R[994]]],[R[994]]]],[11,R[2716],E,E,297,[[["self"],[R[1007]]],[R[1007]]]],[11,"peek",R[1018],R[2777],313,[[["self"],["peek"]],["bool"]]],[11,"error",E,R[2724],313,[[],["error"]]]],"p":[[3,R[5831]],[3,"MetaList"],[3,R[2778]],[3,"Field"],[3,R[2779]],[3,R[2780]],[3,"Variant"],[3,"VisCrate"],[3,"VisPublic"],[3,R[2781]],[3,"Arm"],[3,"FieldValue"],[3,"Label"],[3,R[2791]],[3,"ExprArray"],[3,"ExprAssign"],[3,R[2782]],[3,"ExprAsync"],[3,"ExprAwait"],[3,"ExprBinary"],[3,"ExprBlock"],[3,"ExprBox"],[3,"ExprBreak"],[3,"ExprCall"],[3,"ExprCast"],[3,R[2783]],[3,R[2784]],[3,"ExprField"],[3,R[2785]],[3,"ExprGroup"],[3,"ExprIf"],[3,"ExprIndex"],[3,"ExprLet"],[3,"ExprLit"],[3,"ExprLoop"],[3,"ExprMacro"],[3,"ExprMatch"],[3,R[2787]],[3,"ExprParen"],[3,"ExprPath"],[3,"ExprRange"],[3,R[2788]],[3,"ExprRepeat"],[3,"ExprReturn"],[3,"ExprStruct"],[3,"ExprTry"],[3,R[2789]],[3,"ExprTuple"],[3,"ExprType"],[3,"ExprUnary"],[3,"ExprUnsafe"],[3,"ExprWhile"],[3,"ExprYield"],[3,"Index"],[3,R[2794]],[3,"ConstParam"],[3,"Generics"],[3,R[1019]],[3,R[2795]],[3,R[2796]],[3,R[2797]],[3,"TraitBound"],[3,"TypeParam"],[3,R[1021]],[3,R[2799]],[3,R[2800]],[3,R[2801]],[3,R[2802]],[3,R[2804]],[3,R[2806]],[3,R[2807]],[3,R[2808]],[3,"ItemConst"],[3,"ItemEnum"],[3,R[2811]],[3,"ItemFn"],[3,R[2812]],[3,"ItemImpl"],[3,"ItemMacro"],[3,"ItemMacro2"],[3,"ItemMod"],[3,"ItemStatic"],[3,"ItemStruct"],[3,"ItemTrait"],[3,R[2813]],[3,"ItemType"],[3,"ItemUnion"],[3,"ItemUse"],[3,"Receiver"],[3,R[5434]],[3,R[2815]],[3,R[2816]],[3,R[2817]],[3,R[2818]],[3,"UseGlob"],[3,"UseGroup"],[3,"UseName"],[3,"UsePath"],[3,"UseRename"],[3,"Variadic"],[3,"File"],[3,"Lifetime"],[3,"LitBool"],[3,"Macro"],[3,"DataEnum"],[3,"DataStruct"],[3,"DataUnion"],[3,R[1024]],[3,"Block"],[3,"Local"],[3,"Abi"],[3,"BareFnArg"],[3,"TypeArray"],[3,"TypeBareFn"],[3,"TypeGroup"],[3,R[2821]],[3,"TypeInfer"],[3,"TypeMacro"],[3,"TypeNever"],[3,"TypeParen"],[3,"TypePath"],[3,"TypePtr"],[3,R[2822]],[3,"TypeSlice"],[3,R[2823]],[3,"TypeTuple"],[3,"FieldPat"],[3,"PatBox"],[3,"PatIdent"],[3,"PatLit"],[3,"PatMacro"],[3,"PatOr"],[3,"PatPath"],[3,"PatRange"],[3,R[3290]],[3,"PatRest"],[3,"PatSlice"],[3,"PatStruct"],[3,"PatTuple"],[3,R[2792]],[3,"PatType"],[3,"PatWild"],[3,R[2825]],[3,"Binding"],[3,R[2826]],[3,R[2827]],[3,"Path"],[3,R[1027]],[3,"QSelf"],[4,"AttrStyle"],[4,"Meta"],[4,"NestedMeta"],[4,"Fields"],[4,"Visibility"],[4,R[2828]],[4,R[2829]],[4,"Expr"],[4,"Member"],[4,R[2830]],[4,R[1032]],[4,R[2831]],[4,R[1034]],[4,"FnArg"],[4,R[2832]],[4,"ImplItem"],[4,"Item"],[4,"TraitItem"],[4,"UseTree"],[4,"Lit"],[4,"StrStyle"],[4,R[2834]],[4,"Data"],[4,"BinOp"],[4,"UnOp"],[4,"Stmt"],[4,"ReturnType"],[4,"Type"],[4,"Pat"],[4,R[2836]],[4,R[2837]],[3,"Underscore"],[3,"Abstract"],[3,"As"],[3,"Async"],[3,"Auto"],[3,"Await"],[3,"Become"],[3,"Box"],[3,"Break"],[3,"Const"],[3,"Continue"],[3,"Crate"],[3,"Default"],[3,"Do"],[3,"Dyn"],[3,"Else"],[3,"Enum"],[3,"Extern"],[3,"Final"],[3,"Fn"],[3,"For"],[3,"If"],[3,"Impl"],[3,"In"],[3,"Let"],[3,"Loop"],[3,"Macro"],[3,"Match"],[3,"Mod"],[3,"Move"],[3,"Mut"],[3,"Override"],[3,"Priv"],[3,"Pub"],[3,"Ref"],[3,"Return"],[3,"SelfType"],[3,"SelfValue"],[3,"Static"],[3,"Struct"],[3,"Super"],[3,"Trait"],[3,"Try"],[3,"Type"],[3,"Typeof"],[3,"Union"],[3,"Unsafe"],[3,"Unsized"],[3,"Use"],[3,"Virtual"],[3,"Where"],[3,"While"],[3,"Yield"],[3,"Add"],[3,"AddEq"],[3,"And"],[3,"AndAnd"],[3,"AndEq"],[3,"At"],[3,"Bang"],[3,"Caret"],[3,"CaretEq"],[3,"Colon"],[3,"Colon2"],[3,"Comma"],[3,"Div"],[3,"DivEq"],[3,"Dollar"],[3,"Dot"],[3,"Dot2"],[3,"Dot3"],[3,"DotDotEq"],[3,"Eq"],[3,"EqEq"],[3,"Ge"],[3,"Gt"],[3,"Le"],[3,"Lt"],[3,"MulEq"],[3,"Ne"],[3,"Or"],[3,"OrEq"],[3,"OrOr"],[3,"Pound"],[3,"Question"],[3,"RArrow"],[3,"LArrow"],[3,"Rem"],[3,"RemEq"],[3,"FatArrow"],[3,"Semi"],[3,"Shl"],[3,"ShlEq"],[3,"Shr"],[3,"ShrEq"],[3,"Star"],[3,"Sub"],[3,"SubEq"],[3,"Tilde"],[3,"Brace"],[3,"Bracket"],[3,"Paren"],[3,"Group"],[3,R[2838]],[3,"LitStr"],[3,"LitByteStr"],[3,"LitByte"],[3,"LitChar"],[3,"LitInt"],[3,"LitFloat"],[3,R[2839]],[3,"Cursor"],[8,"IdentExt"],[4,"Pair"],[3,R[2840]],[8,"Spanned"],[8,"Visit"],[8,"Fold"],[8,R[2841]],[8,"Parse"],[8,"Parser"],[3,"StepCursor"],[3,R[2842]],[3,"Error"],[3,"Ident"],[3,R[1037]],[3,"Turbofish"],[3,"Pairs"],[3,"PairsMut"],[3,"IntoPairs"],[3,R[306]],[3,"Iter"],[3,R[631]],[3,"Lookahead1"],[3,"Nothing"]]};
searchIndex["synom"]={"doc":"Adapted from `nom` by removing the `IResult::Incomplete`…","i":[[4,"IResult","synom",R[1038],N,N],[13,"Done",E,R[1039],0,N],[13,"Error",E,R[1040],0,N],[11,"expect",E,R[1041],0,[[["str"]],["o"]]],[14,"punct",E,"Parse a piece of punctuation like \"+\" or \"+=\".",N,N],[14,"keyword",E,"Parse a keyword like \"fn\" or \"struct\".",N,N],[14,R[23],E,"Turn a failed parse into `None` and a successful parse…",N,N],[14,"opt_vec",E,"Turn a failed parse into an empty vector. The argument…",N,N],[14,"epsilon",E,"Parses nothing and always succeeds.",N,N],[14,"separated_list",E,"Zero or more values separated by some separator. Does not…",N,N],[14,"terminated_list",E,"Zero or more values separated by some separator. A…",N,N],[14,"named",E,"Define a function from a parser combination.",N,N],[14,"call",E,"Invoke the given parser function with the passed in…",N,N],[14,"map",E,"Transform the result of a parser by applying a function or…",N,N],[14,"not",E,"Parses successfully if the given parser fails to parse.…",N,N],[14,"cond",E,"Conditionally execute the given parser.",N,N],[14,"cond_reduce",E,"Fail to parse if condition is false, otherwise parse the…",N,N],[14,"preceded",E,"Parse two things, returning the value of the second.",N,N],[14,"terminated",E,"Parse two things, returning the value of the first.",N,N],[14,"many0",E,"Parse zero or more values using the given parser.",N,N],[14,"peek",E,"Parse a value without consuming it from the input data.",N,N],[14,"take_until",E,"Parse the part of the input up to but not including the…",N,N],[14,"tag",E,"Parse the given string from exactly the current position…",N,N],[14,"switch",E,"Pattern-match the result of a parser to select which other…",N,N],[14,"value",E,"Produce the given value without parsing anything. Useful…",N,N],[14,R[1042],E,"Value surrounded by a pair of delimiters.",N,N],[14,"separated_nonempty_list",E,"One or more values separated by some separator. Does not…",N,N],[14,"tuple",E,"Run a series of parsers and produce all of the results in…",N,N],[14,"alt",E,"Run a series of parsers, returning the result of the first…",N,N],[14,"do_parse",E,"Run a series of parsers, one after another, optionally…",N,N],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[46],E,E,0,[[["self"]],[T]]],[11,R[47],E,E,0,[[["self"],[T]]]],[11,R[4],E,E,0,[[[U]],[R[3]]]],[11,R[5],E,E,0,[[],[R[3]]]],[11,R[7],E,E,0,[[["self"]],[T]]],[11,R[6],E,E,0,[[["self"]],[T]]],[11,R[8],E,E,0,[[["self"]],[R[9]]]],[11,"clone",E,E,0,[[["self"]],["iresult"]]],[11,"eq",E,E,0,[[["self"],["iresult"]],["bool"]]],[11,"ne",E,E,0,[[["self"],["iresult"]],["bool"]]],[11,"fmt",E,E,0,[[["self"],[R[10]]],[R[3]]]]],"p":[[4,"IResult"]]};
searchIndex["synstructure"]={"doc":"This crate provides helper types for matching against enum…","i":[[3,R[3304],"synstructure","Information about a specific binding. This contains both…",N,N],[12,"binding",E,"The name which this BindingInfo will bind to.",0,N],[12,"style",E,"The type of binding which this BindingInfo will create.",0,N],[3,"VariantAst",E,"This type is similar to `syn`'s `Variant` type, however…",N,N],[12,"attrs",E,E,1,N],[12,"ident",E,E,1,N],[12,"fields",E,E,1,N],[12,R[3291],E,E,1,N],[3,R[3305],E,"A wrapper around a `syn::DeriveInput`'s variant which…",N,N],[12,"prefix",E,E,2,N],[3,"Structure",E,"A wrapper around a `syn::DeriveInput` which provides…",N,N],[4,"AddBounds",E,"Changes how bounds are added",N,N],[13,"Both",E,"Add for fields and generics",3,N],[13,"Fields",E,"Fields only",3,N],[13,"Generics",E,"Generics only",3,N],[13,"None",E,"None",3,N],[4,"BindStyle",E,"The type of binding to use when generating a pattern.",N,N],[13,"Move",E,"`x`",4,N],[13,"MoveMut",E,"`mut x`",4,N],[13,"Ref",E,"`ref x`",4,N],[13,"RefMut",E,"`ref mut x`",4,N],[5,"unpretty_print",E,"Dumps an unpretty version of a tokenstream. Takes any type…",N,[[["display"]],["string"]]],[11,"ast",E,R[3295],0,[[["self"]],["field"]]],[11,"pat",E,"Generates the pattern fragment for this field binding.",0,[[["self"]],[R[768]]]],[11,R[3293],E,R[3294],0,[[["self"]],[["ident"],["vec",["ident"]]]]],[11,"bindings",E,"Returns a slice of the bindings in this Variant.",2,[[["self"]]]],[11,"bindings_mut",E,"Returns a mut slice of the bindings in this Variant.",2,[[["self"]]]],[11,"ast",E,"Returns a `VariantAst` object which contains references to…",2,[[["self"]],[R[3302]]]],[11,"omitted_bindings",E,"True if any bindings were omitted due to a `filter` call.",2,[[["self"]],["bool"]]],[11,"pat",E,"Generates the match-arm pattern which could be used to…",2,[[["self"]],[R[768]]]],[11,"construct",E,"Generates the token stream required to construct the…",2,[[["self"],["f"]],[R[768]]]],[11,"each",E,R[3292],2,[[["self"],["f"]],[R[768]]]],[11,"fold",E,R[3292],2,[[["self"],["i"],["f"]],[R[768]]]],[11,"filter",E,"Filter the bindings created by this `Variant` object. This…",2,[[["self"],["f"]],["self"]]],[11,"remove_binding",E,"Remove the binding at the given index.",2,[[["self"],["usize"]],["self"]]],[11,"bind_with",E,R[3296],2,[[["self"],["f"]],["self"]]],[11,R[3297],E,R[3298],2,[[["self"],["f"]],["self"]]],[11,R[3293],E,R[3294],2,[[["self"]],[["ident"],["vec",["ident"]]]]],[11,"new",E,"Create a new `Structure` with the variants and fields from…",5,[[[R[993]]],["self"]]],[11,"variants",E,"Returns a slice of the variants in this Structure.",5,[[["self"]]]],[11,"variants_mut",E,"Returns a mut slice of the variants in this Structure.",5,[[["self"]]]],[11,"ast",E,R[3295],5,[[["self"]],[R[993]]]],[11,"omitted_variants",E,"True if any variants were omitted due to a…",5,[[["self"]],["bool"]]],[11,"each",E,R[3292],5,[[["self"],["f"]],[R[768]]]],[11,"fold",E,R[3292],5,[[["self"],["i"],["f"]],[R[768]]]],[11,"each_variant",E,"Runs the passed-in function once for each variant, passing…",5,[[["self"],["f"]],[R[768]]]],[11,"filter",E,"Filter the bindings created by this `Structure` object.…",5,[[["self"],["f"]],["self"]]],[11,"add_bounds",E,"Specify which bounds should be generated by…",5,[[["self"],[R[3300]]],["self"]]],[11,"filter_variants",E,"Filter the variants matched by this `Structure` object.…",5,[[["self"],["f"]],["self"]]],[11,"remove_variant",E,"Remove the variant at the given index.",5,[[["self"],["usize"]],["self"]]],[11,"bind_with",E,R[3296],5,[[["self"],["f"]],["self"]]],[11,R[3297],E,R[3298],5,[[["self"],["f"]],["self"]]],[11,R[3293],E,"Returns a list of the type parameters which are refrenced…",5,[[["self"]],[["ident"],["vec",["ident"]]]]],[11,"add_impl_generic",E,"Adds an `impl<>` generic parameter. This can be used when…",5,[[["self"],[R[2342]]],["self"]]],[11,"add_trait_bounds",E,"Add trait bounds for a trait with the given path for each…",5,[[["self"],[R[2527]],[R[3300]],[R[23]]]]],[11,"bound_impl",E,R[3299],5,[[["self"],["totokens"]],[R[768]]]],[11,"unsafe_bound_impl",E,R[3299],5,[[["self"],["totokens"]],[R[768]]]],[11,"unbound_impl",E,R[3299],5,[[["self"],["totokens"]],[R[768]]]],[11,"unsafe_unbound_impl",E,R[3299],5,[[["self"],["totokens"]],[R[768]]]],[11,"gen_impl",E,"Generate an impl block for the given struct. This impl…",5,[[["self"],[R[768]]],[R[768]]]],[14,"decl_derive",E,"The `decl_derive!` macro declares a custom derive wrapper.…",N,N],[14,"decl_attribute",E,"The `decl_attribute!` macro declares a custom attribute…",N,N],[14,"test_derive",E,"Run a test on a custom derive. This macro expands both the…",N,N],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[46],E,E,0,[[["self"]],[T]]],[11,R[47],E,E,0,[[["self"],[T]]]],[11,R[4],E,E,0,[[[U]],[R[3]]]],[11,R[5],E,E,0,[[],[R[3]]]],[11,R[7],E,E,0,[[["self"]],[T]]],[11,R[6],E,E,0,[[["self"]],[T]]],[11,R[8],E,E,0,[[["self"]],[R[9]]]],[11,"span",E,E,0,[[["self"]],["span"]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[46],E,E,1,[[["self"]],[T]]],[11,R[47],E,E,1,[[["self"],[T]]]],[11,R[4],E,E,1,[[[U]],[R[3]]]],[11,R[5],E,E,1,[[],[R[3]]]],[11,R[7],E,E,1,[[["self"]],[T]]],[11,R[6],E,E,1,[[["self"]],[T]]],[11,R[8],E,E,1,[[["self"]],[R[9]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[46],E,E,2,[[["self"]],[T]]],[11,R[47],E,E,2,[[["self"],[T]]]],[11,R[4],E,E,2,[[[U]],[R[3]]]],[11,R[5],E,E,2,[[],[R[3]]]],[11,R[7],E,E,2,[[["self"]],[T]]],[11,R[6],E,E,2,[[["self"]],[T]]],[11,R[8],E,E,2,[[["self"]],[R[9]]]],[11,"into",E,E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[46],E,E,5,[[["self"]],[T]]],[11,R[47],E,E,5,[[["self"],[T]]]],[11,R[4],E,E,5,[[[U]],[R[3]]]],[11,R[5],E,E,5,[[],[R[3]]]],[11,R[7],E,E,5,[[["self"]],[T]]],[11,R[6],E,E,5,[[["self"]],[T]]],[11,R[8],E,E,5,[[["self"]],[R[9]]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[46],E,E,3,[[["self"]],[T]]],[11,R[47],E,E,3,[[["self"],[T]]]],[11,R[4],E,E,3,[[[U]],[R[3]]]],[11,R[5],E,E,3,[[],[R[3]]]],[11,R[7],E,E,3,[[["self"]],[T]]],[11,R[6],E,E,3,[[["self"]],[T]]],[11,R[8],E,E,3,[[["self"]],[R[9]]]],[11,"into",E,E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[46],E,E,4,[[["self"]],[T]]],[11,R[47],E,E,4,[[["self"],[T]]]],[11,R[4],E,E,4,[[[U]],[R[3]]]],[11,R[5],E,E,4,[[],[R[3]]]],[11,R[7],E,E,4,[[["self"]],[T]]],[11,R[6],E,E,4,[[["self"]],[T]]],[11,R[8],E,E,4,[[["self"]],[R[9]]]],[11,"span",E,E,4,[[["self"]],["span"]]],[11,"clone",E,E,3,[[["self"]],[R[3300]]]],[11,"clone",E,E,4,[[["self"]],["bindstyle"]]],[11,"clone",E,E,0,[[["self"]],[R[3301]]]],[11,"clone",E,E,1,[[["self"]],[R[3302]]]],[11,"clone",E,E,2,[[["self"]],[R[3303]]]],[11,"clone",E,E,5,[[["self"]],["structure"]]],[11,"eq",E,E,3,[[["self"],[R[3300]]],["bool"]]],[11,"eq",E,E,4,[[["self"],["bindstyle"]],["bool"]]],[11,"eq",E,E,0,[[["self"],[R[3301]]],["bool"]]],[11,"ne",E,E,0,[[["self"],[R[3301]]],["bool"]]],[11,"eq",E,E,1,[[["self"],[R[3302]]],["bool"]]],[11,"ne",E,E,1,[[["self"],[R[3302]]],["bool"]]],[11,"eq",E,E,2,[[["self"],[R[3303]]],["bool"]]],[11,"ne",E,E,2,[[["self"],[R[3303]]],["bool"]]],[11,"eq",E,E,5,[[["self"],["structure"]],["bool"]]],[11,"ne",E,E,5,[[["self"],["structure"]],["bool"]]],[11,"hash",E,E,3,[[["self"],["__h"]]]],[11,"hash",E,E,4,[[["self"],["__h"]]]],[11,"hash",E,E,0,[[["self"],["__h"]]]],[11,"hash",E,E,1,[[["self"],["__h"]]]],[11,"hash",E,E,2,[[["self"],["__h"]]]],[11,"hash",E,E,5,[[["self"],["__h"]]]],[11,"fmt",E,E,3,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,4,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,0,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,1,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,2,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,5,[[["self"],[R[10]]],[R[3]]]],[11,R[114],E,E,4,[[["self"],[R[768]]]]],[11,R[114],E,E,0,[[["self"],[R[768]]]]]],"p":[[3,R[3304]],[3,"VariantAst"],[3,R[3305]],[4,"AddBounds"],[4,"BindStyle"],[3,"Structure"]]};
searchIndex["take_mut"]={"doc":"This crate provides several functions for handling `&mut…","i":[[5,"take","take_mut",R[137],N,[[["f"],[T]]]],[5,R[138],E,R[137],N,[[["r"],["f"],[T]]]],[0,"scoped",E,"This module provides a scoped API, allowing for taking an…",N,N],[3,"Scope","take_mut::scoped","Represents a scope within which, it is possible to take a…",N,N],[3,"Hole",E,"A `Hole<'c, 'm, T, F>` represents an unfilled `&'m mut T`…",N,N],[5,"scope",E,"Main function to create a `Scope`.",N,[[["f"]],["r"]]],[11,R[138],E,R[139],0,[[[T],["fnonce"],["self"]]]],[11,"take",E,R[139],0,[[[T],["self"]]]],[11,"fill",E,"Fills the Hole.",1,[[[T]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[4],E,E,0,[[[U]],[R[3]]]],[11,R[5],E,E,0,[[],[R[3]]]],[11,R[7],E,E,0,[[["self"]],[T]]],[11,R[6],E,E,0,[[["self"]],[T]]],[11,R[8],E,E,0,[[["self"]],[R[9]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[4],E,E,1,[[[U]],[R[3]]]],[11,R[5],E,E,1,[[],[R[3]]]],[11,R[7],E,E,1,[[["self"]],[T]]],[11,R[6],E,E,1,[[["self"]],[T]]],[11,R[8],E,E,1,[[["self"]],[R[9]]]],[11,"drop",E,E,1,[[["self"]]]]],"p":[[3,"Scope"],[3,"Hole"]]};
searchIndex["target_lexicon"]={"doc":"Target \"triple\" support.","i":[[3,"Triple","target_lexicon","A target \"triple\", because historically such things had…",N,N],[12,R[4683],E,"The \"architecture\" (and sometimes the subarchitecture).",0,N],[12,"vendor",E,"The \"vendor\" (whatever that means).",0,N],[12,"operating_system",E,"The \"operating system\" (sometimes also the environment).",0,N],[12,R[4684],E,"The \"environment\" on top of the operating system.",0,N],[12,"binary_format",E,"The \"binary format\" (rarely used).",0,N],[4,R[4692],E,"An error returned from parsing a triple.",N,N],[13,"UnrecognizedArchitecture",E,E,1,N],[13,"UnrecognizedVendor",E,E,1,N],[13,"UnrecognizedOperatingSystem",E,E,1,N],[13,"UnrecognizedEnvironment",E,E,1,N],[13,"UnrecognizedBinaryFormat",E,E,1,N],[13,"UnrecognizedField",E,E,1,N],[4,R[3887],E,"The \"architecture\" field, which in some cases also…",N,N],[13,"Unknown",E,E,2,N],[13,"Aarch64",E,E,2,N],[13,"Arm",E,E,2,N],[13,"Armebv7r",E,E,2,N],[13,"Armv4t",E,E,2,N],[13,"Armv5te",E,E,2,N],[13,"Armv6",E,E,2,N],[13,"Armv7",E,E,2,N],[13,"Armv7r",E,E,2,N],[13,"Armv7s",E,E,2,N],[13,"Asmjs",E,E,2,N],[13,"I386",E,E,2,N],[13,"I586",E,E,2,N],[13,"I686",E,E,2,N],[13,"Mips",E,E,2,N],[13,"Mips64",E,E,2,N],[13,"Mips64el",E,E,2,N],[13,"Mipsel",E,E,2,N],[13,"Msp430",E,E,2,N],[13,"Powerpc",E,E,2,N],[13,"Powerpc64",E,E,2,N],[13,"Powerpc64le",E,E,2,N],[13,"Riscv32",E,E,2,N],[13,"Riscv32imac",E,E,2,N],[13,"Riscv32imc",E,E,2,N],[13,"Riscv64",E,E,2,N],[13,"S390x",E,E,2,N],[13,"Sparc",E,E,2,N],[13,"Sparc64",E,E,2,N],[13,"Sparcv9",E,E,2,N],[13,"Thumbv6m",E,E,2,N],[13,"Thumbv7a",E,E,2,N],[13,"Thumbv7em",E,E,2,N],[13,"Thumbv7m",E,E,2,N],[13,"Thumbv7neon",E,E,2,N],[13,"Thumbv8mBase",E,E,2,N],[13,"Thumbv8mMain",E,E,2,N],[13,"Wasm32",E,E,2,N],[13,"X86_64",E,E,2,N],[4,R[4687],E,"The \"binary format\" field, which is usually omitted, and…",N,N],[13,"Unknown",E,E,3,N],[13,"Elf",E,E,3,N],[13,"Coff",E,E,3,N],[13,"Macho",E,E,3,N],[13,"Wasm",E,E,3,N],[4,R[4688],E,"The \"environment\" field, which specifies an ABI…",N,N],[13,"Unknown",E,E,4,N],[13,"Android",E,E,4,N],[13,"Androideabi",E,E,4,N],[13,"Eabi",E,E,4,N],[13,"Eabihf",E,E,4,N],[13,"Gnu",E,E,4,N],[13,"Gnuabi64",E,E,4,N],[13,"Gnueabi",E,E,4,N],[13,"Gnueabihf",E,E,4,N],[13,"Gnuspe",E,E,4,N],[13,"Gnux32",E,E,4,N],[13,"Musl",E,E,4,N],[13,"Musleabi",E,E,4,N],[13,"Musleabihf",E,E,4,N],[13,"Msvc",E,E,4,N],[13,"Uclibc",E,E,4,N],[13,"Sgx",E,E,4,N],[4,R[4689],E,"The \"operating system\" field, which sometimes implies an…",N,N],[13,"Unknown",E,E,5,N],[13,"Bitrig",E,E,5,N],[13,"Cloudabi",E,E,5,N],[13,"Darwin",E,E,5,N],[13,"Dragonfly",E,E,5,N],[13,"Emscripten",E,E,5,N],[13,"Freebsd",E,E,5,N],[13,"Fuchsia",E,E,5,N],[13,"Haiku",E,E,5,N],[13,"Hermit",E,E,5,N],[13,"Ios",E,E,5,N],[13,"L4re",E,E,5,N],[13,"Linux",E,E,5,N],[13,"Nebulet",E,E,5,N],[13,"Netbsd",E,E,5,N],[13,"None_",E,E,5,N],[13,"Openbsd",E,E,5,N],[13,"Redox",E,E,5,N],[13,"Solaris",E,E,5,N],[13,"Uefi",E,E,5,N],[13,"Windows",E,E,5,N],[4,"Vendor",E,"The \"vendor\" field, which in practice is little more than…",N,N],[13,"Unknown",E,E,6,N],[13,"Apple",E,E,6,N],[13,"Experimental",E,E,6,N],[13,"Fortanix",E,E,6,N],[13,"Pc",E,E,6,N],[13,"Rumprun",E,E,6,N],[13,"Sun",E,E,6,N],[4,R[4690],E,"The calling convention, which specifies things like which…",N,N],[13,"SystemV",E,E,7,N],[13,R[5435],E,E,7,N],[4,"Endianness",E,"The target memory endianness.",N,N],[13,"Little",E,E,8,N],[13,"Big",E,E,8,N],[4,R[4691],E,"The width of a pointer (in the default address space).",N,N],[13,"U16",E,E,9,N],[13,"U32",E,E,9,N],[13,"U64",E,E,9,N],[11,"host",E,"Return the architecture for the current host.",2,[[],["self"]]],[11,"host",E,"Return the vendor for the current host.",6,[[],["self"]]],[11,"host",E,"Return the operating system for the current host.",5,[[],["self"]]],[11,"host",E,"Return the environment for the current host.",4,[[],["self"]]],[11,"host",E,"Return the binary format for the current host.",3,[[],["self"]]],[11,"host",E,"Return the triple for the current host.",0,[[],["self"]]],[11,R[4679],E,"Return the endianness of this architecture.",2,[[],[[R[3],[R[4679]]],[R[4679]]]]],[11,R[4681],E,"Return the pointer bit width of this target's architecture.",2,[[],[[R[4680]],[R[3],[R[4680]]]]]],[11,"bits",E,"Return the number of bits in a pointer.",9,[[],["u8"]]],[11,"bytes",E,"Return the number of bytes in a pointer.",9,[[],["u8"]]],[11,R[4679],E,"Return the endianness of this target's architecture.",0,[[["self"]],[[R[3],[R[4679]]],[R[4679]]]]],[11,R[4681],E,"Return the pointer width of this target's architecture.",0,[[["self"]],[[R[4680]],[R[3],[R[4680]]]]]],[11,"default_calling_convention",E,R[5436],0,[[["self"]],[[R[4682]],[R[3],[R[4682]]]]]],[7,"HOST",E,"The `Triple` of the current host.",N,N],[14,"triple",E,"A convenient syntax for triple \"literals\".",N,N],[11,"from",E,E,0,[[[T]],[T]]],[11,R[4],E,E,0,[[[U]],[R[3]]]],[11,"into",E,E,0,[[],[U]]],[11,R[5],E,E,0,[[],[R[3]]]],[11,R[6],E,E,0,[[["self"]],[T]]],[11,R[7],E,E,0,[[["self"]],[T]]],[11,R[8],E,E,0,[[["self"]],[R[9]]]],[11,R[113],E,E,0,[[["self"]],["string"]]],[11,R[46],E,E,0,[[["self"]],[T]]],[11,R[47],E,E,0,[[["self"],[T]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[4],E,E,1,[[[U]],[R[3]]]],[11,"into",E,E,1,[[],[U]]],[11,R[5],E,E,1,[[],[R[3]]]],[11,R[6],E,E,1,[[["self"]],[T]]],[11,R[7],E,E,1,[[["self"]],[T]]],[11,R[8],E,E,1,[[["self"]],[R[9]]]],[11,R[113],E,E,1,[[["self"]],["string"]]],[11,R[46],E,E,1,[[["self"]],[T]]],[11,R[47],E,E,1,[[["self"],[T]]]],[11,"as_fail",E,E,1,[[["self"]],["fail"]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[4],E,E,2,[[[U]],[R[3]]]],[11,"into",E,E,2,[[],[U]]],[11,R[5],E,E,2,[[],[R[3]]]],[11,R[6],E,E,2,[[["self"]],[T]]],[11,R[7],E,E,2,[[["self"]],[T]]],[11,R[8],E,E,2,[[["self"]],[R[9]]]],[11,R[113],E,E,2,[[["self"]],["string"]]],[11,R[46],E,E,2,[[["self"]],[T]]],[11,R[47],E,E,2,[[["self"],[T]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[4],E,E,3,[[[U]],[R[3]]]],[11,"into",E,E,3,[[],[U]]],[11,R[5],E,E,3,[[],[R[3]]]],[11,R[6],E,E,3,[[["self"]],[T]]],[11,R[7],E,E,3,[[["self"]],[T]]],[11,R[8],E,E,3,[[["self"]],[R[9]]]],[11,R[113],E,E,3,[[["self"]],["string"]]],[11,R[46],E,E,3,[[["self"]],[T]]],[11,R[47],E,E,3,[[["self"],[T]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[4],E,E,4,[[[U]],[R[3]]]],[11,"into",E,E,4,[[],[U]]],[11,R[5],E,E,4,[[],[R[3]]]],[11,R[6],E,E,4,[[["self"]],[T]]],[11,R[7],E,E,4,[[["self"]],[T]]],[11,R[8],E,E,4,[[["self"]],[R[9]]]],[11,R[113],E,E,4,[[["self"]],["string"]]],[11,R[46],E,E,4,[[["self"]],[T]]],[11,R[47],E,E,4,[[["self"],[T]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[4],E,E,5,[[[U]],[R[3]]]],[11,"into",E,E,5,[[],[U]]],[11,R[5],E,E,5,[[],[R[3]]]],[11,R[6],E,E,5,[[["self"]],[T]]],[11,R[7],E,E,5,[[["self"]],[T]]],[11,R[8],E,E,5,[[["self"]],[R[9]]]],[11,R[113],E,E,5,[[["self"]],["string"]]],[11,R[46],E,E,5,[[["self"]],[T]]],[11,R[47],E,E,5,[[["self"],[T]]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[4],E,E,6,[[[U]],[R[3]]]],[11,"into",E,E,6,[[],[U]]],[11,R[5],E,E,6,[[],[R[3]]]],[11,R[6],E,E,6,[[["self"]],[T]]],[11,R[7],E,E,6,[[["self"]],[T]]],[11,R[8],E,E,6,[[["self"]],[R[9]]]],[11,R[113],E,E,6,[[["self"]],["string"]]],[11,R[46],E,E,6,[[["self"]],[T]]],[11,R[47],E,E,6,[[["self"],[T]]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[4],E,E,7,[[[U]],[R[3]]]],[11,"into",E,E,7,[[],[U]]],[11,R[5],E,E,7,[[],[R[3]]]],[11,R[6],E,E,7,[[["self"]],[T]]],[11,R[7],E,E,7,[[["self"]],[T]]],[11,R[8],E,E,7,[[["self"]],[R[9]]]],[11,R[46],E,E,7,[[["self"]],[T]]],[11,R[47],E,E,7,[[["self"],[T]]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[4],E,E,8,[[[U]],[R[3]]]],[11,"into",E,E,8,[[],[U]]],[11,R[5],E,E,8,[[],[R[3]]]],[11,R[6],E,E,8,[[["self"]],[T]]],[11,R[7],E,E,8,[[["self"]],[T]]],[11,R[8],E,E,8,[[["self"]],[R[9]]]],[11,R[46],E,E,8,[[["self"]],[T]]],[11,R[47],E,E,8,[[["self"],[T]]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[4],E,E,9,[[[U]],[R[3]]]],[11,"into",E,E,9,[[],[U]]],[11,R[5],E,E,9,[[],[R[3]]]],[11,R[6],E,E,9,[[["self"]],[T]]],[11,R[7],E,E,9,[[["self"]],[T]]],[11,R[8],E,E,9,[[["self"]],[R[9]]]],[11,R[46],E,E,9,[[["self"]],[T]]],[11,R[47],E,E,9,[[["self"],[T]]]],[11,"eq",E,E,1,[[["self"],[R[1204]]],["bool"]]],[11,"ne",E,E,1,[[["self"],[R[1204]]],["bool"]]],[11,"eq",E,E,2,[[["self"],[R[4683]]],["bool"]]],[11,"eq",E,E,6,[[["self"],["vendor"]],["bool"]]],[11,"eq",E,E,5,[[["self"],[R[4685]]],["bool"]]],[11,"eq",E,E,4,[[["self"],[R[4684]]],["bool"]]],[11,"eq",E,E,3,[[["self"],[R[4686]]],["bool"]]],[11,"eq",E,E,8,[[["self"],[R[4679]]],["bool"]]],[11,"eq",E,E,9,[[["self"],[R[4680]]],["bool"]]],[11,"eq",E,E,7,[[["self"],[R[4682]]],["bool"]]],[11,"eq",E,E,0,[[["self"],["triple"]],["bool"]]],[11,"ne",E,E,0,[[["self"],["triple"]],["bool"]]],[11,"hash",E,E,2,[[["self"],["__h"]]]],[11,"hash",E,E,6,[[["self"],["__h"]]]],[11,"hash",E,E,5,[[["self"],["__h"]]]],[11,"hash",E,E,4,[[["self"],["__h"]]]],[11,"hash",E,E,3,[[["self"],["__h"]]]],[11,"hash",E,E,8,[[["self"],["__h"]]]],[11,"hash",E,E,9,[[["self"],["__h"]]]],[11,"hash",E,E,7,[[["self"],["__h"]]]],[11,"hash",E,E,0,[[["self"],["__h"]]]],[11,"fmt",E,E,1,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,2,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,6,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,5,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,4,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,3,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,8,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,9,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,7,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,0,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,1,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,2,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,6,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,5,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,4,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,3,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,0,[[["self"],[R[10]]],[R[3]]]],[11,R[775],E,E,2,[[["str"]],[R[3]]]],[11,R[775],E,E,6,[[["str"]],[R[3]]]],[11,R[775],E,E,5,[[["str"]],[R[3]]]],[11,R[775],E,E,4,[[["str"]],[R[3]]]],[11,R[775],E,E,3,[[["str"]],[R[3]]]],[11,R[775],E,E,0,[[["str"]],[R[3]]]],[11,"clone",E,E,1,[[["self"]],[R[1204]]]],[11,"clone",E,E,2,[[["self"]],[R[4683]]]],[11,"clone",E,E,6,[[["self"]],["vendor"]]],[11,"clone",E,E,5,[[["self"]],[R[4685]]]],[11,"clone",E,E,4,[[["self"]],[R[4684]]]],[11,"clone",E,E,3,[[["self"]],[R[4686]]]],[11,"clone",E,E,8,[[["self"]],[R[4679]]]],[11,"clone",E,E,9,[[["self"]],[R[4680]]]],[11,"clone",E,E,7,[[["self"]],[R[4682]]]],[11,"clone",E,E,0,[[["self"]],["triple"]]],[11,R[83],E,E,0,[[],["self"]]],[11,R[83],E,E,2,[[],["self"]]],[11,R[83],E,E,6,[[],["self"]]],[11,R[83],E,E,5,[[],["self"]]],[11,R[83],E,E,4,[[],["self"]]],[11,R[83],E,E,3,[[],["self"]]],[11,"name",E,E,1,[[["self"]],[[R[23],["str"]],["str"]]]],[11,"cause",E,E,1,[[["self"]],[[R[23],["fail"]],["fail"]]]],[11,R[1705],E,E,1,[[["self"]],[[R[23],[R[1705]]],[R[1705]]]]]],"p":[[3,"Triple"],[4,R[4692]],[4,R[3887]],[4,R[4687]],[4,R[4688]],[4,R[4689]],[4,"Vendor"],[4,R[4690]],[4,"Endianness"],[4,R[4691]]]};
searchIndex["textwrap"]={"doc":"`textwrap` provides functions for word wrapping and…","i":[[3,R[716],"textwrap","Simple and default way to split words: splitting on…",N,N],[3,R[717],E,"Use this as a [`Wrapper.splitter`] to avoid any kind of…",N,N],[3,"Wrapper",E,"A Wrapper holds settings for wrapping and filling text.…",N,N],[12,"width",E,"The width in columns at which the text will be wrapped.",0,N],[12,R[708],E,"Indentation used for the first line of output.",0,N],[12,R[709],E,"Indentation used for subsequent lines of output.",0,N],[12,R[710],E,"Allow long words to be broken if they cannot fit on a…",0,N],[12,"splitter",E,"The method for splitting words. If the `hyphenation`…",0,N],[3,R[718],E,"An iterator over the lines of the input string which owns…",N,N],[3,"WrapIter",E,"An iterator over the lines of the input string which…",N,N],[5,"dedent",E,"Removes common leading whitespace from each line.",N,[[["str"]],["string"]]],[5,"indent",E,"Add prefix to each non-empty line.",N,[[["str"]],["string"]]],[5,"fill",E,"Fill a line of text at `width` characters. Strings are…",N,[[["str"],["usize"]],["string"]]],[5,"wrap",E,"Wrap a line of text at `width` characters. Strings are…",N,[[["str"],["usize"]],[["vec",["cow"]],["cow",["str"]]]]],[5,R[711],E,"Lazily wrap a line of text at `width` characters. Strings…",N,[[["str"],["usize"]],[[R[713],[R[707]]],[R[707]]]]],[8,R[715],E,"An interface for splitting words.",N,N],[10,"split",E,"Return all possible splits of word. Each split is a triple…",1,[[["self"],["str"]],["vec"]]],[11,"new",E,"Create a new Wrapper for wrapping at the specified width.…",0,[[["usize"]],[[R[714],[R[707]]],[R[707]]]]],[11,"with_splitter",E,"Use the given [`WordSplitter`] to create a new Wrapper for…",0,[[["s"],["usize"]],[R[714]]]],[11,R[708],E,"Change [`self.initial_indent`]. The initial indentation is…",0,[[["str"]],[R[714]]]],[11,R[709],E,"Change [`self.subsequent_indent`]. The subsequent…",0,[[["str"]],[R[714]]]],[11,R[710],E,"Change [`self.break_words`]. This controls if words longer…",0,[[["bool"]],[R[714]]]],[11,"fill",E,"Fill a line of text at `self.width` characters. Strings…",0,[[["self"],["str"]],["string"]]],[11,"wrap",E,"Wrap a line of text at `self.width` characters. Strings…",0,[[["self"],["str"]],[["cow",["str"]],["vec",["cow"]]]]],[11,R[711],E,R[712],0,[[["self"],["str"]],["wrapiter"]]],[11,"into_wrap_iter",E,R[712],0,[[["str"]],[R[713]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[46],E,E,2,[[["self"]],[T]]],[11,R[47],E,E,2,[[["self"],[T]]]],[11,R[4],E,E,2,[[[U]],[R[3]]]],[11,R[5],E,E,2,[[],[R[3]]]],[11,R[7],E,E,2,[[["self"]],[T]]],[11,R[6],E,E,2,[[["self"]],[T]]],[11,R[8],E,E,2,[[["self"]],[R[9]]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[46],E,E,3,[[["self"]],[T]]],[11,R[47],E,E,3,[[["self"],[T]]]],[11,R[4],E,E,3,[[[U]],[R[3]]]],[11,R[5],E,E,3,[[],[R[3]]]],[11,R[7],E,E,3,[[["self"]],[T]]],[11,R[6],E,E,3,[[["self"]],[T]]],[11,R[8],E,E,3,[[["self"]],[R[9]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[46],E,E,0,[[["self"]],[T]]],[11,R[47],E,E,0,[[["self"],[T]]]],[11,R[4],E,E,0,[[[U]],[R[3]]]],[11,R[5],E,E,0,[[],[R[3]]]],[11,R[7],E,E,0,[[["self"]],[T]]],[11,R[6],E,E,0,[[["self"]],[T]]],[11,R[8],E,E,0,[[["self"]],[R[9]]]],[11,"into",E,E,4,[[],[U]]],[11,R[45],E,E,4,[[],["i"]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[4],E,E,4,[[[U]],[R[3]]]],[11,R[5],E,E,4,[[],[R[3]]]],[11,R[7],E,E,4,[[["self"]],[T]]],[11,R[6],E,E,4,[[["self"]],[T]]],[11,R[8],E,E,4,[[["self"]],[R[9]]]],[11,"into",E,E,5,[[],[U]]],[11,R[45],E,E,5,[[],["i"]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[4],E,E,5,[[[U]],[R[3]]]],[11,R[5],E,E,5,[[],[R[3]]]],[11,R[7],E,E,5,[[["self"]],[T]]],[11,R[6],E,E,5,[[["self"]],[T]]],[11,R[8],E,E,5,[[["self"]],[R[9]]]],[11,"split",E,E,3,[[["self"],["str"]],["vec"]]],[11,"split",E,E,2,[[["self"],["str"]],["vec"]]],[11,"clone",E,E,3,[[["self"]],["nohyphenation"]]],[11,"clone",E,E,2,[[["self"]],[R[707]]]],[11,"clone",E,E,0,[[["self"]],[R[714]]]],[11,"next",E,E,4,[[["self"]],[["cow",["str"]],[R[23],["cow"]]]]],[11,"next",E,E,5,[[["self"]],[["cow",["str"]],[R[23],["cow"]]]]],[11,"fmt",E,E,3,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,2,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,0,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,4,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,5,[[["self"],[R[10]]],[R[3]]]]],"p":[[3,"Wrapper"],[8,R[715]],[3,R[716]],[3,R[717]],[3,R[718]],[3,"WrapIter"]]};
searchIndex["thread_local"]={"doc":"Per-object thread-local storage","i":[[3,R[629],"thread_local","Thread-local variable wrapper",N,N],[3,R[631],E,"Mutable iterator over the contents of a `ThreadLocal`.",N,N],[3,R[306],E,"An iterator that moves out of a `ThreadLocal`.",N,N],[3,R[630],E,"Wrapper around `ThreadLocal` which adds a fast path for a…",N,N],[6,"CachedIterMut",E,"Mutable iterator over the contents of a `CachedThreadLocal`.",N,N],[6,"CachedIntoIter",E,"An iterator that moves out of a `CachedThreadLocal`.",N,N],[11,"new",E,"Creates a new empty `ThreadLocal`.",0,[[],[R[627]]]],[11,"get",E,R[621],0,[[["self"]],[[T],[R[23]]]]],[11,"get_or",E,R[620],0,[[["self"],["f"]],[T]]],[11,R[622],E,R[620],0,[[["self"],["f"]],[[T],[R[3]]]]],[11,R[31],E,R[623],0,[[["self"]],[R[24]]]],[11,"clear",E,R[624],0,[[["self"]]]],[11,R[625],E,R[626],0,[[["self"]],[T]]],[11,"new",E,"Creates a new empty `CachedThreadLocal`.",1,[[],[R[628]]]],[11,"get",E,R[621],1,[[["self"]],[[T],[R[23]]]]],[11,"get_or",E,R[620],1,[[["self"],["f"]],[T]]],[11,R[622],E,R[620],1,[[["self"],["f"]],[[T],[R[3]]]]],[11,R[31],E,R[623],1,[[["self"]],["cacheditermut"]]],[11,"clear",E,R[624],1,[[["self"]]]],[11,R[625],E,R[626],1,[[["self"]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[45],E,E,0,[[],["i"]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[4],E,E,0,[[[U]],[R[3]]]],[11,R[5],E,E,0,[[],[R[3]]]],[11,R[7],E,E,0,[[["self"]],[T]]],[11,R[6],E,E,0,[[["self"]],[T]]],[11,R[8],E,E,0,[[["self"]],[R[9]]]],[11,"into",E,E,2,[[],[U]]],[11,R[45],E,E,2,[[],["i"]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[4],E,E,2,[[[U]],[R[3]]]],[11,R[5],E,E,2,[[],[R[3]]]],[11,R[7],E,E,2,[[["self"]],[T]]],[11,R[6],E,E,2,[[["self"]],[T]]],[11,R[8],E,E,2,[[["self"]],[R[9]]]],[11,"into",E,E,3,[[],[U]]],[11,R[45],E,E,3,[[],["i"]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[4],E,E,3,[[[U]],[R[3]]]],[11,R[5],E,E,3,[[],[R[3]]]],[11,R[7],E,E,3,[[["self"]],[T]]],[11,R[6],E,E,3,[[["self"]],[T]]],[11,R[8],E,E,3,[[["self"]],[R[9]]]],[11,"into",E,E,1,[[],[U]]],[11,R[45],E,E,1,[[],["i"]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[4],E,E,1,[[[U]],[R[3]]]],[11,R[5],E,E,1,[[],[R[3]]]],[11,R[7],E,E,1,[[["self"]],[T]]],[11,R[6],E,E,1,[[["self"]],[T]]],[11,R[8],E,E,1,[[["self"]],[R[9]]]],[11,R[83],E,E,0,[[],[R[627]]]],[11,R[83],E,E,1,[[],[R[628]]]],[11,R[45],E,E,0,[[],[R[766]]]],[11,R[45],E,E,1,[[],["cachedintoiter"]]],[11,"drop",E,E,0,[[["self"]]]],[11,"next",E,E,2,[[["self"]],[[R[23],["box"]],["box"]]]],[11,R[53],E,E,2,[[["self"]]]],[11,"next",E,E,3,[[["self"]],[["box"],[R[23],["box"]]]]],[11,R[53],E,E,3,[[["self"]]]],[11,"fmt",E,E,0,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,1,[[["self"],[R[10]]],[R[3]]]]],"p":[[3,R[629]],[3,R[630]],[3,R[631]],[3,R[306]]]};
searchIndex["time"]={"doc":"Simple time handling.","i":[[3,"Duration","time","ISO 8601 time duration with nanosecond precision. This…",N,N],[3,R[1216],E,"Represents error when converting `Duration` to/from a…",N,N],[3,"Timespec",E,"A record specifying a time value in seconds and…",N,N],[12,"sec",E,E,0,N],[12,"nsec",E,E,0,N],[3,R[1215],E,"An opaque structure representing a moment in time.",N,N],[3,"SteadyTime",E,"A structure representing a moment in time.",N,N],[3,"Tm",E,"Holds a calendar date and time broken down into its…",N,N],[12,"tm_sec",E,"Seconds after the minute - [0, 60]",1,N],[12,"tm_min",E,"Minutes after the hour - [0, 59]",1,N],[12,"tm_hour",E,"Hours after midnight - [0, 23]",1,N],[12,"tm_mday",E,"Day of the month - [1, 31]",1,N],[12,"tm_mon",E,"Months since January - [0, 11]",1,N],[12,"tm_year",E,"Years since 1900",1,N],[12,"tm_wday",E,"Days since Sunday - [0, 6]. 0 = Sunday, 1 = Monday, ..., 6…",1,N],[12,"tm_yday",E,"Days since January 1 - [0, 365]",1,N],[12,"tm_isdst",E,"Daylight Saving Time flag.",1,N],[12,"tm_utcoff",E,"Identifies the time zone that was used to compute this…",1,N],[12,"tm_nsec",E,"Nanoseconds after the second - [0, 109 - 1]",1,N],[3,"TmFmt",E,"A wrapper around a `Tm` and format string that implements…",N,N],[4,R[4692],E,E,N,N],[13,"InvalidSecond",E,E,2,N],[13,"InvalidMinute",E,E,2,N],[13,"InvalidHour",E,E,2,N],[13,"InvalidDay",E,E,2,N],[13,"InvalidMonth",E,E,2,N],[13,"InvalidYear",E,E,2,N],[13,"InvalidDayOfWeek",E,E,2,N],[13,"InvalidDayOfMonth",E,E,2,N],[13,"InvalidDayOfYear",E,E,2,N],[13,"InvalidZoneOffset",E,E,2,N],[13,"InvalidTime",E,E,2,N],[13,"InvalidSecondsSinceEpoch",E,E,2,N],[13,"MissingFormatConverter",E,E,2,N],[13,"InvalidFormatSpecifier",E,E,2,N],[13,"UnexpectedCharacter",E,E,2,N],[5,"strptime",E,"Parses the time from the string according to the format…",N,[[["str"]],[["tm"],[R[1204]],[R[3],["tm",R[1204]]]]]],[5,"get_time",E,"Returns the current time as a `timespec` containing the…",N,[[],[R[785]]]],[5,"precise_time_ns",E,R[1203],N,[[],["u64"]]],[5,"precise_time_s",E,R[1203],N,[[],["f64"]]],[5,"tzset",E,E,N,[[]]],[5,"empty_tm",E,E,N,[[],["tm"]]],[5,"at_utc",E,"Returns the specified time in UTC",N,[[[R[785]]],["tm"]]],[5,"now_utc",E,"Returns the current time in UTC",N,[[],["tm"]]],[5,"at",E,"Returns the specified time in the local timezone",N,[[[R[785]]],["tm"]]],[5,"now",E,"Returns the current time in the local timezone",N,[[],["tm"]]],[5,"strftime",E,R[1212],N,[[["tm"],["str"]],[[R[3],["string",R[1204]]],[R[1204]],["string"]]]],[11,"weeks",E,"Makes a new `Duration` with given number of weeks.…",3,[[["i64"]],[R[1205]]]],[11,"days",E,"Makes a new `Duration` with given number of days.…",3,[[["i64"]],[R[1205]]]],[11,"hours",E,"Makes a new `Duration` with given number of hours.…",3,[[["i64"]],[R[1205]]]],[11,"minutes",E,"Makes a new `Duration` with given number of minutes.…",3,[[["i64"]],[R[1205]]]],[11,"seconds",E,"Makes a new `Duration` with given number of seconds.…",3,[[["i64"]],[R[1205]]]],[11,R[1455],E,"Makes a new `Duration` with given number of milliseconds.",3,[[["i64"]],[R[1205]]]],[11,R[1456],E,"Makes a new `Duration` with given number of microseconds.",3,[[["i64"]],[R[1205]]]],[11,R[1457],E,"Makes a new `Duration` with given number of nanoseconds.",3,[[["i64"]],[R[1205]]]],[11,"span",E,"Runs a closure, returning the duration of time it took to…",3,[[["f"]],[R[1205]]]],[11,"num_weeks",E,"Returns the total number of whole weeks in the duration.",3,[[["self"]],["i64"]]],[11,"num_days",E,"Returns the total number of whole days in the duration.",3,[[["self"]],["i64"]]],[11,"num_hours",E,"Returns the total number of whole hours in the duration.",3,[[["self"]],["i64"]]],[11,R[1553],E,"Returns the total number of whole minutes in the duration.",3,[[["self"]],["i64"]]],[11,R[1458],E,"Returns the total number of whole seconds in the duration.",3,[[["self"]],["i64"]]],[11,R[1459],E,"Returns the total number of whole milliseconds in the…",3,[[["self"]],["i64"]]],[11,R[1460],E,"Returns the total number of whole microseconds in the…",3,[[["self"]],[[R[23],["i64"]],["i64"]]]],[11,R[1461],E,"Returns the total number of whole nanoseconds in the…",3,[[["self"]],[[R[23],["i64"]],["i64"]]]],[11,R[1206],E,"Add two durations, returning `None` if overflow occurred.",3,[[["self"],[R[1205]]],[[R[1205]],[R[23],[R[1205]]]]]],[11,R[1207],E,"Subtract two durations, returning `None` if overflow…",3,[[["self"],[R[1205]]],[[R[1205]],[R[23],[R[1205]]]]]],[11,R[1074],E,"The minimum possible `Duration`: `i64::MIN` milliseconds.",3,[[],[R[1205]]]],[11,R[1075],E,"The maximum possible `Duration`: `i64::MAX` milliseconds.",3,[[],[R[1205]]]],[11,"zero",E,"A duration where the stored seconds and nanoseconds are…",3,[[],[R[1205]]]],[11,"is_zero",E,"Returns `true` if the duration equals `Duration::zero()`.",3,[[["self"]],["bool"]]],[11,"from_std",E,"Creates a `time::Duration` object from `std::time::Duration`",3,[[[R[1209]]],[[R[3],[R[1205],R[1208]]],[R[1205]],[R[1208]]]]],[11,"to_std",E,"Creates a `std::time::Duration` object from `time::Duration`",3,[[["self"]],[[R[1209]],[R[1208]],[R[3],[R[1209],R[1208]]]]]],[11,"new",E,E,0,[[["i64"],["i32"]],[R[785]]]],[11,"now",E,"Returns a `PreciseTime` representing the current moment in…",4,[[],[R[1210]]]],[11,"to",E,"Returns a `Duration` representing the span of time from…",4,[[["self"],[R[1210]]],[R[1205]]]],[11,"now",E,"Returns a `SteadyTime` representing the current moment in…",5,[[],[R[1213]]]],[11,"to_timespec",E,"Convert time to the seconds from January 1, 1970",1,[[["self"]],[R[785]]]],[11,"to_local",E,"Convert time to the local timezone",1,[[["self"]],["tm"]]],[11,"to_utc",E,"Convert time to the UTC",1,[[["self"]],["tm"]]],[11,"ctime",E,R[1211],1,[[["self"]],["tmfmt"]]],[11,"asctime",E,R[1211],1,[[["self"]],["tmfmt"]]],[11,"strftime",E,R[1212],1,[[["self"],["str"]],[[R[1204]],["tmfmt"],[R[3],["tmfmt",R[1204]]]]]],[11,"rfc822",E,"Returns a TmFmt that outputs according to RFC 822.",1,[[["self"]],["tmfmt"]]],[11,"rfc822z",E,"Returns a TmFmt that outputs according to RFC 822 with…",1,[[["self"]],["tmfmt"]]],[11,"rfc3339",E,"Returns a TmFmt that outputs according to RFC 3339. RFC…",1,[[["self"]],["tmfmt"]]],[11,"into",E,E,3,[[],[U]]],[11,R[113],E,E,3,[[["self"]],["string"]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[46],E,E,3,[[["self"]],[T]]],[11,R[47],E,E,3,[[["self"],[T]]]],[11,R[4],E,E,3,[[[U]],[R[3]]]],[11,R[5],E,E,3,[[],[R[3]]]],[11,R[7],E,E,3,[[["self"]],[T]]],[11,R[6],E,E,3,[[["self"]],[T]]],[11,R[8],E,E,3,[[["self"]],[R[9]]]],[11,"into",E,E,6,[[],[U]]],[11,R[113],E,E,6,[[["self"]],["string"]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[46],E,E,6,[[["self"]],[T]]],[11,R[47],E,E,6,[[["self"],[T]]]],[11,R[4],E,E,6,[[[U]],[R[3]]]],[11,R[5],E,E,6,[[],[R[3]]]],[11,R[7],E,E,6,[[["self"]],[T]]],[11,R[6],E,E,6,[[["self"]],[T]]],[11,R[8],E,E,6,[[["self"]],[R[9]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[46],E,E,0,[[["self"]],[T]]],[11,R[47],E,E,0,[[["self"],[T]]]],[11,R[4],E,E,0,[[[U]],[R[3]]]],[11,R[5],E,E,0,[[],[R[3]]]],[11,R[7],E,E,0,[[["self"]],[T]]],[11,R[6],E,E,0,[[["self"]],[T]]],[11,R[8],E,E,0,[[["self"]],[R[9]]]],[11,"into",E,E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[46],E,E,4,[[["self"]],[T]]],[11,R[47],E,E,4,[[["self"],[T]]]],[11,R[4],E,E,4,[[[U]],[R[3]]]],[11,R[5],E,E,4,[[],[R[3]]]],[11,R[7],E,E,4,[[["self"]],[T]]],[11,R[6],E,E,4,[[["self"]],[T]]],[11,R[8],E,E,4,[[["self"]],[R[9]]]],[11,"into",E,E,5,[[],[U]]],[11,R[113],E,E,5,[[["self"]],["string"]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[46],E,E,5,[[["self"]],[T]]],[11,R[47],E,E,5,[[["self"],[T]]]],[11,R[4],E,E,5,[[[U]],[R[3]]]],[11,R[5],E,E,5,[[],[R[3]]]],[11,R[7],E,E,5,[[["self"]],[T]]],[11,R[6],E,E,5,[[["self"]],[T]]],[11,R[8],E,E,5,[[["self"]],[R[9]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[46],E,E,1,[[["self"]],[T]]],[11,R[47],E,E,1,[[["self"],[T]]]],[11,R[4],E,E,1,[[[U]],[R[3]]]],[11,R[5],E,E,1,[[],[R[3]]]],[11,R[7],E,E,1,[[["self"]],[T]]],[11,R[6],E,E,1,[[["self"]],[T]]],[11,R[8],E,E,1,[[["self"]],[R[9]]]],[11,"into",E,E,7,[[],[U]]],[11,R[113],E,E,7,[[["self"]],["string"]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[4],E,E,7,[[[U]],[R[3]]]],[11,R[5],E,E,7,[[],[R[3]]]],[11,R[7],E,E,7,[[["self"]],[T]]],[11,R[6],E,E,7,[[["self"]],[T]]],[11,R[8],E,E,7,[[["self"]],[R[9]]]],[11,"into",E,E,2,[[],[U]]],[11,R[113],E,E,2,[[["self"]],["string"]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[46],E,E,2,[[["self"]],[T]]],[11,R[47],E,E,2,[[["self"],[T]]]],[11,R[4],E,E,2,[[[U]],[R[3]]]],[11,R[5],E,E,2,[[],[R[3]]]],[11,R[7],E,E,2,[[["self"]],[T]]],[11,R[6],E,E,2,[[["self"]],[T]]],[11,R[8],E,E,2,[[["self"]],[R[9]]]],[11,"clone",E,E,3,[[["self"]],[R[1205]]]],[11,"clone",E,E,6,[[["self"]],[R[1208]]]],[11,"clone",E,E,0,[[["self"]],[R[785]]]],[11,"clone",E,E,4,[[["self"]],[R[1210]]]],[11,"clone",E,E,5,[[["self"]],[R[1213]]]],[11,"clone",E,E,1,[[["self"]],["tm"]]],[11,"clone",E,E,2,[[["self"]],[R[1204]]]],[11,R[77],E,E,3,[[["self"],[R[1205]]],[[R[50]],[R[23],[R[50]]]]]],[11,"lt",E,E,3,[[["self"],[R[1205]]],["bool"]]],[11,"le",E,E,3,[[["self"],[R[1205]]],["bool"]]],[11,"gt",E,E,3,[[["self"],[R[1205]]],["bool"]]],[11,"ge",E,E,3,[[["self"],[R[1205]]],["bool"]]],[11,R[77],E,E,0,[[["self"],[R[785]]],[[R[50]],[R[23],[R[50]]]]]],[11,"lt",E,E,0,[[["self"],[R[785]]],["bool"]]],[11,"le",E,E,0,[[["self"],[R[785]]],["bool"]]],[11,"gt",E,E,0,[[["self"],[R[785]]],["bool"]]],[11,"ge",E,E,0,[[["self"],[R[785]]],["bool"]]],[11,R[77],E,E,5,[[["self"],[R[1213]]],[[R[50]],[R[23],[R[50]]]]]],[11,"lt",E,E,5,[[["self"],[R[1213]]],["bool"]]],[11,"le",E,E,5,[[["self"],[R[1213]]],["bool"]]],[11,"gt",E,E,5,[[["self"],[R[1213]]],["bool"]]],[11,"ge",E,E,5,[[["self"],[R[1213]]],["bool"]]],[11,R[77],E,E,1,[[["self"],["tm"]],[[R[23],[R[50]]],[R[50]]]]],[11,"cmp",E,E,3,[[["self"],[R[1205]]],[R[50]]]],[11,"cmp",E,E,0,[[["self"],[R[785]]],[R[50]]]],[11,"cmp",E,E,5,[[["self"],[R[1213]]],[R[50]]]],[11,"cmp",E,E,1,[[["self"],["tm"]],[R[50]]]],[11,"eq",E,E,3,[[["self"],[R[1205]]],["bool"]]],[11,"ne",E,E,3,[[["self"],[R[1205]]],["bool"]]],[11,"eq",E,E,6,[[["self"],[R[1208]]],["bool"]]],[11,"ne",E,E,6,[[["self"],[R[1208]]],["bool"]]],[11,"eq",E,E,0,[[["self"],[R[785]]],["bool"]]],[11,"ne",E,E,0,[[["self"],[R[785]]],["bool"]]],[11,"eq",E,E,5,[[["self"],[R[1213]]],["bool"]]],[11,"ne",E,E,5,[[["self"],[R[1213]]],["bool"]]],[11,"eq",E,E,1,[[["self"],["tm"]],["bool"]]],[11,"ne",E,E,1,[[["self"],["tm"]],["bool"]]],[11,"eq",E,E,2,[[["self"],[R[1204]]],["bool"]]],[11,"ne",E,E,2,[[["self"],[R[1204]]],["bool"]]],[11,"hash",E,E,3,[[["self"],["__h"]]]],[11,"hash",E,E,0,[[["self"],["__h"]]]],[11,"hash",E,E,1,[[["self"],["__h"]]]],[11,"fmt",E,E,3,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,6,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,0,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,5,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,1,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,2,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,7,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,7,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,3,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,6,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,5,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,2,[[["self"],[R[10]]],[R[3]]]],[11,"div",E,E,3,[[["i32"]],[R[1205]]]],[11,"add",E,E,3,[[[R[1205]]],[R[1205]]]],[11,"add",E,E,0,[[[R[1205]]],[R[785]]]],[11,"add",E,E,5,[[[R[1205]]],[R[1213]]]],[11,"add",E,R[1214],1,[[[R[1205]]],["tm"]]],[11,"sub",E,E,3,[[[R[1205]]],[R[1205]]]],[11,"sub",E,E,0,[[[R[1205]]],[R[785]]]],[11,"sub",E,E,0,[[[R[785]]],[R[1205]]]],[11,"sub",E,E,5,[[[R[1213]]],[R[1205]]]],[11,"sub",E,E,5,[[[R[1205]]],[R[1213]]]],[11,"sub",E,R[1214],1,[[[R[1205]]],["tm"]]],[11,"sub",E,E,1,[[["tm"]],[R[1205]]]],[11,"mul",E,E,3,[[["i32"]],[R[1205]]]],[11,"neg",E,E,3,[[],[R[1205]]]],[11,R[157],E,E,6,[[["self"]],["str"]]],[11,R[157],E,E,2,[[["self"]],["str"]]]],"p":[[3,"Timespec"],[3,"Tm"],[4,R[4692]],[3,"Duration"],[3,R[1215]],[3,"SteadyTime"],[3,R[1216]],[3,"TmFmt"]]};
searchIndex["typenum"]={"doc":"This crate provides type-level numbers evaluated at…","i":[[3,"Greater",R[959],R[955],N,N],[3,"Less",E,R[955],N,N],[3,"Equal",E,R[955],N,N],[0,"consts",E,"Type aliases for many constants.",N,N],[6,"True","typenum::consts",E,N,N],[6,"False",E,E,N,N],[6,"U0",E,E,N,N],[6,"U1",E,E,N,N],[6,"P1",E,E,N,N],[6,"N1",E,E,N,N],[6,"U2",E,E,N,N],[6,"P2",E,E,N,N],[6,"N2",E,E,N,N],[6,"U3",E,E,N,N],[6,"P3",E,E,N,N],[6,"N3",E,E,N,N],[6,"U4",E,E,N,N],[6,"P4",E,E,N,N],[6,"N4",E,E,N,N],[6,"U5",E,E,N,N],[6,"P5",E,E,N,N],[6,"N5",E,E,N,N],[6,"U6",E,E,N,N],[6,"P6",E,E,N,N],[6,"N6",E,E,N,N],[6,"U7",E,E,N,N],[6,"P7",E,E,N,N],[6,"N7",E,E,N,N],[6,"U8",E,E,N,N],[6,"P8",E,E,N,N],[6,"N8",E,E,N,N],[6,"U9",E,E,N,N],[6,"P9",E,E,N,N],[6,"N9",E,E,N,N],[6,"U10",E,E,N,N],[6,"P10",E,E,N,N],[6,"N10",E,E,N,N],[6,"U11",E,E,N,N],[6,"P11",E,E,N,N],[6,"N11",E,E,N,N],[6,"U12",E,E,N,N],[6,"P12",E,E,N,N],[6,"N12",E,E,N,N],[6,"U13",E,E,N,N],[6,"P13",E,E,N,N],[6,"N13",E,E,N,N],[6,"U14",E,E,N,N],[6,"P14",E,E,N,N],[6,"N14",E,E,N,N],[6,"U15",E,E,N,N],[6,"P15",E,E,N,N],[6,"N15",E,E,N,N],[6,"U16",E,E,N,N],[6,"P16",E,E,N,N],[6,"N16",E,E,N,N],[6,"U17",E,E,N,N],[6,"P17",E,E,N,N],[6,"N17",E,E,N,N],[6,"U18",E,E,N,N],[6,"P18",E,E,N,N],[6,"N18",E,E,N,N],[6,"U19",E,E,N,N],[6,"P19",E,E,N,N],[6,"N19",E,E,N,N],[6,"U20",E,E,N,N],[6,"P20",E,E,N,N],[6,"N20",E,E,N,N],[6,"U21",E,E,N,N],[6,"P21",E,E,N,N],[6,"N21",E,E,N,N],[6,"U22",E,E,N,N],[6,"P22",E,E,N,N],[6,"N22",E,E,N,N],[6,"U23",E,E,N,N],[6,"P23",E,E,N,N],[6,"N23",E,E,N,N],[6,"U24",E,E,N,N],[6,"P24",E,E,N,N],[6,"N24",E,E,N,N],[6,"U25",E,E,N,N],[6,"P25",E,E,N,N],[6,"N25",E,E,N,N],[6,"U26",E,E,N,N],[6,"P26",E,E,N,N],[6,"N26",E,E,N,N],[6,"U27",E,E,N,N],[6,"P27",E,E,N,N],[6,"N27",E,E,N,N],[6,"U28",E,E,N,N],[6,"P28",E,E,N,N],[6,"N28",E,E,N,N],[6,"U29",E,E,N,N],[6,"P29",E,E,N,N],[6,"N29",E,E,N,N],[6,"U30",E,E,N,N],[6,"P30",E,E,N,N],[6,"N30",E,E,N,N],[6,"U31",E,E,N,N],[6,"P31",E,E,N,N],[6,"N31",E,E,N,N],[6,"U32",E,E,N,N],[6,"P32",E,E,N,N],[6,"N32",E,E,N,N],[6,"U33",E,E,N,N],[6,"P33",E,E,N,N],[6,"N33",E,E,N,N],[6,"U34",E,E,N,N],[6,"P34",E,E,N,N],[6,"N34",E,E,N,N],[6,"U35",E,E,N,N],[6,"P35",E,E,N,N],[6,"N35",E,E,N,N],[6,"U36",E,E,N,N],[6,"P36",E,E,N,N],[6,"N36",E,E,N,N],[6,"U37",E,E,N,N],[6,"P37",E,E,N,N],[6,"N37",E,E,N,N],[6,"U38",E,E,N,N],[6,"P38",E,E,N,N],[6,"N38",E,E,N,N],[6,"U39",E,E,N,N],[6,"P39",E,E,N,N],[6,"N39",E,E,N,N],[6,"U40",E,E,N,N],[6,"P40",E,E,N,N],[6,"N40",E,E,N,N],[6,"U41",E,E,N,N],[6,"P41",E,E,N,N],[6,"N41",E,E,N,N],[6,"U42",E,E,N,N],[6,"P42",E,E,N,N],[6,"N42",E,E,N,N],[6,"U43",E,E,N,N],[6,"P43",E,E,N,N],[6,"N43",E,E,N,N],[6,"U44",E,E,N,N],[6,"P44",E,E,N,N],[6,"N44",E,E,N,N],[6,"U45",E,E,N,N],[6,"P45",E,E,N,N],[6,"N45",E,E,N,N],[6,"U46",E,E,N,N],[6,"P46",E,E,N,N],[6,"N46",E,E,N,N],[6,"U47",E,E,N,N],[6,"P47",E,E,N,N],[6,"N47",E,E,N,N],[6,"U48",E,E,N,N],[6,"P48",E,E,N,N],[6,"N48",E,E,N,N],[6,"U49",E,E,N,N],[6,"P49",E,E,N,N],[6,"N49",E,E,N,N],[6,"U50",E,E,N,N],[6,"P50",E,E,N,N],[6,"N50",E,E,N,N],[6,"U51",E,E,N,N],[6,"P51",E,E,N,N],[6,"N51",E,E,N,N],[6,"U52",E,E,N,N],[6,"P52",E,E,N,N],[6,"N52",E,E,N,N],[6,"U53",E,E,N,N],[6,"P53",E,E,N,N],[6,"N53",E,E,N,N],[6,"U54",E,E,N,N],[6,"P54",E,E,N,N],[6,"N54",E,E,N,N],[6,"U55",E,E,N,N],[6,"P55",E,E,N,N],[6,"N55",E,E,N,N],[6,"U56",E,E,N,N],[6,"P56",E,E,N,N],[6,"N56",E,E,N,N],[6,"U57",E,E,N,N],[6,"P57",E,E,N,N],[6,"N57",E,E,N,N],[6,"U58",E,E,N,N],[6,"P58",E,E,N,N],[6,"N58",E,E,N,N],[6,"U59",E,E,N,N],[6,"P59",E,E,N,N],[6,"N59",E,E,N,N],[6,"U60",E,E,N,N],[6,"P60",E,E,N,N],[6,"N60",E,E,N,N],[6,"U61",E,E,N,N],[6,"P61",E,E,N,N],[6,"N61",E,E,N,N],[6,"U62",E,E,N,N],[6,"P62",E,E,N,N],[6,"N62",E,E,N,N],[6,"U63",E,E,N,N],[6,"P63",E,E,N,N],[6,"N63",E,E,N,N],[6,"U64",E,E,N,N],[6,"P64",E,E,N,N],[6,"N64",E,E,N,N],[6,"U65",E,E,N,N],[6,"P65",E,E,N,N],[6,"N65",E,E,N,N],[6,"U66",E,E,N,N],[6,"P66",E,E,N,N],[6,"N66",E,E,N,N],[6,"U67",E,E,N,N],[6,"P67",E,E,N,N],[6,"N67",E,E,N,N],[6,"U68",E,E,N,N],[6,"P68",E,E,N,N],[6,"N68",E,E,N,N],[6,"U69",E,E,N,N],[6,"P69",E,E,N,N],[6,"N69",E,E,N,N],[6,"U70",E,E,N,N],[6,"P70",E,E,N,N],[6,"N70",E,E,N,N],[6,"U71",E,E,N,N],[6,"P71",E,E,N,N],[6,"N71",E,E,N,N],[6,"U72",E,E,N,N],[6,"P72",E,E,N,N],[6,"N72",E,E,N,N],[6,"U73",E,E,N,N],[6,"P73",E,E,N,N],[6,"N73",E,E,N,N],[6,"U74",E,E,N,N],[6,"P74",E,E,N,N],[6,"N74",E,E,N,N],[6,"U75",E,E,N,N],[6,"P75",E,E,N,N],[6,"N75",E,E,N,N],[6,"U76",E,E,N,N],[6,"P76",E,E,N,N],[6,"N76",E,E,N,N],[6,"U77",E,E,N,N],[6,"P77",E,E,N,N],[6,"N77",E,E,N,N],[6,"U78",E,E,N,N],[6,"P78",E,E,N,N],[6,"N78",E,E,N,N],[6,"U79",E,E,N,N],[6,"P79",E,E,N,N],[6,"N79",E,E,N,N],[6,"U80",E,E,N,N],[6,"P80",E,E,N,N],[6,"N80",E,E,N,N],[6,"U81",E,E,N,N],[6,"P81",E,E,N,N],[6,"N81",E,E,N,N],[6,"U82",E,E,N,N],[6,"P82",E,E,N,N],[6,"N82",E,E,N,N],[6,"U83",E,E,N,N],[6,"P83",E,E,N,N],[6,"N83",E,E,N,N],[6,"U84",E,E,N,N],[6,"P84",E,E,N,N],[6,"N84",E,E,N,N],[6,"U85",E,E,N,N],[6,"P85",E,E,N,N],[6,"N85",E,E,N,N],[6,"U86",E,E,N,N],[6,"P86",E,E,N,N],[6,"N86",E,E,N,N],[6,"U87",E,E,N,N],[6,"P87",E,E,N,N],[6,"N87",E,E,N,N],[6,"U88",E,E,N,N],[6,"P88",E,E,N,N],[6,"N88",E,E,N,N],[6,"U89",E,E,N,N],[6,"P89",E,E,N,N],[6,"N89",E,E,N,N],[6,"U90",E,E,N,N],[6,"P90",E,E,N,N],[6,"N90",E,E,N,N],[6,"U91",E,E,N,N],[6,"P91",E,E,N,N],[6,"N91",E,E,N,N],[6,"U92",E,E,N,N],[6,"P92",E,E,N,N],[6,"N92",E,E,N,N],[6,"U93",E,E,N,N],[6,"P93",E,E,N,N],[6,"N93",E,E,N,N],[6,"U94",E,E,N,N],[6,"P94",E,E,N,N],[6,"N94",E,E,N,N],[6,"U95",E,E,N,N],[6,"P95",E,E,N,N],[6,"N95",E,E,N,N],[6,"U96",E,E,N,N],[6,"P96",E,E,N,N],[6,"N96",E,E,N,N],[6,"U97",E,E,N,N],[6,"P97",E,E,N,N],[6,"N97",E,E,N,N],[6,"U98",E,E,N,N],[6,"P98",E,E,N,N],[6,"N98",E,E,N,N],[6,"U99",E,E,N,N],[6,"P99",E,E,N,N],[6,"N99",E,E,N,N],[6,"U100",E,E,N,N],[6,"P100",E,E,N,N],[6,"N100",E,E,N,N],[6,"U101",E,E,N,N],[6,"P101",E,E,N,N],[6,"N101",E,E,N,N],[6,"U102",E,E,N,N],[6,"P102",E,E,N,N],[6,"N102",E,E,N,N],[6,"U103",E,E,N,N],[6,"P103",E,E,N,N],[6,"N103",E,E,N,N],[6,"U104",E,E,N,N],[6,"P104",E,E,N,N],[6,"N104",E,E,N,N],[6,"U105",E,E,N,N],[6,"P105",E,E,N,N],[6,"N105",E,E,N,N],[6,"U106",E,E,N,N],[6,"P106",E,E,N,N],[6,"N106",E,E,N,N],[6,"U107",E,E,N,N],[6,"P107",E,E,N,N],[6,"N107",E,E,N,N],[6,"U108",E,E,N,N],[6,"P108",E,E,N,N],[6,"N108",E,E,N,N],[6,"U109",E,E,N,N],[6,"P109",E,E,N,N],[6,"N109",E,E,N,N],[6,"U110",E,E,N,N],[6,"P110",E,E,N,N],[6,"N110",E,E,N,N],[6,"U111",E,E,N,N],[6,"P111",E,E,N,N],[6,"N111",E,E,N,N],[6,"U112",E,E,N,N],[6,"P112",E,E,N,N],[6,"N112",E,E,N,N],[6,"U113",E,E,N,N],[6,"P113",E,E,N,N],[6,"N113",E,E,N,N],[6,"U114",E,E,N,N],[6,"P114",E,E,N,N],[6,"N114",E,E,N,N],[6,"U115",E,E,N,N],[6,"P115",E,E,N,N],[6,"N115",E,E,N,N],[6,"U116",E,E,N,N],[6,"P116",E,E,N,N],[6,"N116",E,E,N,N],[6,"U117",E,E,N,N],[6,"P117",E,E,N,N],[6,"N117",E,E,N,N],[6,"U118",E,E,N,N],[6,"P118",E,E,N,N],[6,"N118",E,E,N,N],[6,"U119",E,E,N,N],[6,"P119",E,E,N,N],[6,"N119",E,E,N,N],[6,"U120",E,E,N,N],[6,"P120",E,E,N,N],[6,"N120",E,E,N,N],[6,"U121",E,E,N,N],[6,"P121",E,E,N,N],[6,"N121",E,E,N,N],[6,"U122",E,E,N,N],[6,"P122",E,E,N,N],[6,"N122",E,E,N,N],[6,"U123",E,E,N,N],[6,"P123",E,E,N,N],[6,"N123",E,E,N,N],[6,"U124",E,E,N,N],[6,"P124",E,E,N,N],[6,"N124",E,E,N,N],[6,"U125",E,E,N,N],[6,"P125",E,E,N,N],[6,"N125",E,E,N,N],[6,"U126",E,E,N,N],[6,"P126",E,E,N,N],[6,"N126",E,E,N,N],[6,"U127",E,E,N,N],[6,"P127",E,E,N,N],[6,"N127",E,E,N,N],[6,"U128",E,E,N,N],[6,"P128",E,E,N,N],[6,"N128",E,E,N,N],[6,"U129",E,E,N,N],[6,"P129",E,E,N,N],[6,"N129",E,E,N,N],[6,"U130",E,E,N,N],[6,"P130",E,E,N,N],[6,"N130",E,E,N,N],[6,"U131",E,E,N,N],[6,"P131",E,E,N,N],[6,"N131",E,E,N,N],[6,"U132",E,E,N,N],[6,"P132",E,E,N,N],[6,"N132",E,E,N,N],[6,"U133",E,E,N,N],[6,"P133",E,E,N,N],[6,"N133",E,E,N,N],[6,"U134",E,E,N,N],[6,"P134",E,E,N,N],[6,"N134",E,E,N,N],[6,"U135",E,E,N,N],[6,"P135",E,E,N,N],[6,"N135",E,E,N,N],[6,"U136",E,E,N,N],[6,"P136",E,E,N,N],[6,"N136",E,E,N,N],[6,"U137",E,E,N,N],[6,"P137",E,E,N,N],[6,"N137",E,E,N,N],[6,"U138",E,E,N,N],[6,"P138",E,E,N,N],[6,"N138",E,E,N,N],[6,"U139",E,E,N,N],[6,"P139",E,E,N,N],[6,"N139",E,E,N,N],[6,"U140",E,E,N,N],[6,"P140",E,E,N,N],[6,"N140",E,E,N,N],[6,"U141",E,E,N,N],[6,"P141",E,E,N,N],[6,"N141",E,E,N,N],[6,"U142",E,E,N,N],[6,"P142",E,E,N,N],[6,"N142",E,E,N,N],[6,"U143",E,E,N,N],[6,"P143",E,E,N,N],[6,"N143",E,E,N,N],[6,"U144",E,E,N,N],[6,"P144",E,E,N,N],[6,"N144",E,E,N,N],[6,"U145",E,E,N,N],[6,"P145",E,E,N,N],[6,"N145",E,E,N,N],[6,"U146",E,E,N,N],[6,"P146",E,E,N,N],[6,"N146",E,E,N,N],[6,"U147",E,E,N,N],[6,"P147",E,E,N,N],[6,"N147",E,E,N,N],[6,"U148",E,E,N,N],[6,"P148",E,E,N,N],[6,"N148",E,E,N,N],[6,"U149",E,E,N,N],[6,"P149",E,E,N,N],[6,"N149",E,E,N,N],[6,"U150",E,E,N,N],[6,"P150",E,E,N,N],[6,"N150",E,E,N,N],[6,"U151",E,E,N,N],[6,"P151",E,E,N,N],[6,"N151",E,E,N,N],[6,"U152",E,E,N,N],[6,"P152",E,E,N,N],[6,"N152",E,E,N,N],[6,"U153",E,E,N,N],[6,"P153",E,E,N,N],[6,"N153",E,E,N,N],[6,"U154",E,E,N,N],[6,"P154",E,E,N,N],[6,"N154",E,E,N,N],[6,"U155",E,E,N,N],[6,"P155",E,E,N,N],[6,"N155",E,E,N,N],[6,"U156",E,E,N,N],[6,"P156",E,E,N,N],[6,"N156",E,E,N,N],[6,"U157",E,E,N,N],[6,"P157",E,E,N,N],[6,"N157",E,E,N,N],[6,"U158",E,E,N,N],[6,"P158",E,E,N,N],[6,"N158",E,E,N,N],[6,"U159",E,E,N,N],[6,"P159",E,E,N,N],[6,"N159",E,E,N,N],[6,"U160",E,E,N,N],[6,"P160",E,E,N,N],[6,"N160",E,E,N,N],[6,"U161",E,E,N,N],[6,"P161",E,E,N,N],[6,"N161",E,E,N,N],[6,"U162",E,E,N,N],[6,"P162",E,E,N,N],[6,"N162",E,E,N,N],[6,"U163",E,E,N,N],[6,"P163",E,E,N,N],[6,"N163",E,E,N,N],[6,"U164",E,E,N,N],[6,"P164",E,E,N,N],[6,"N164",E,E,N,N],[6,"U165",E,E,N,N],[6,"P165",E,E,N,N],[6,"N165",E,E,N,N],[6,"U166",E,E,N,N],[6,"P166",E,E,N,N],[6,"N166",E,E,N,N],[6,"U167",E,E,N,N],[6,"P167",E,E,N,N],[6,"N167",E,E,N,N],[6,"U168",E,E,N,N],[6,"P168",E,E,N,N],[6,"N168",E,E,N,N],[6,"U169",E,E,N,N],[6,"P169",E,E,N,N],[6,"N169",E,E,N,N],[6,"U170",E,E,N,N],[6,"P170",E,E,N,N],[6,"N170",E,E,N,N],[6,"U171",E,E,N,N],[6,"P171",E,E,N,N],[6,"N171",E,E,N,N],[6,"U172",E,E,N,N],[6,"P172",E,E,N,N],[6,"N172",E,E,N,N],[6,"U173",E,E,N,N],[6,"P173",E,E,N,N],[6,"N173",E,E,N,N],[6,"U174",E,E,N,N],[6,"P174",E,E,N,N],[6,"N174",E,E,N,N],[6,"U175",E,E,N,N],[6,"P175",E,E,N,N],[6,"N175",E,E,N,N],[6,"U176",E,E,N,N],[6,"P176",E,E,N,N],[6,"N176",E,E,N,N],[6,"U177",E,E,N,N],[6,"P177",E,E,N,N],[6,"N177",E,E,N,N],[6,"U178",E,E,N,N],[6,"P178",E,E,N,N],[6,"N178",E,E,N,N],[6,"U179",E,E,N,N],[6,"P179",E,E,N,N],[6,"N179",E,E,N,N],[6,"U180",E,E,N,N],[6,"P180",E,E,N,N],[6,"N180",E,E,N,N],[6,"U181",E,E,N,N],[6,"P181",E,E,N,N],[6,"N181",E,E,N,N],[6,"U182",E,E,N,N],[6,"P182",E,E,N,N],[6,"N182",E,E,N,N],[6,"U183",E,E,N,N],[6,"P183",E,E,N,N],[6,"N183",E,E,N,N],[6,"U184",E,E,N,N],[6,"P184",E,E,N,N],[6,"N184",E,E,N,N],[6,"U185",E,E,N,N],[6,"P185",E,E,N,N],[6,"N185",E,E,N,N],[6,"U186",E,E,N,N],[6,"P186",E,E,N,N],[6,"N186",E,E,N,N],[6,"U187",E,E,N,N],[6,"P187",E,E,N,N],[6,"N187",E,E,N,N],[6,"U188",E,E,N,N],[6,"P188",E,E,N,N],[6,"N188",E,E,N,N],[6,"U189",E,E,N,N],[6,"P189",E,E,N,N],[6,"N189",E,E,N,N],[6,"U190",E,E,N,N],[6,"P190",E,E,N,N],[6,"N190",E,E,N,N],[6,"U191",E,E,N,N],[6,"P191",E,E,N,N],[6,"N191",E,E,N,N],[6,"U192",E,E,N,N],[6,"P192",E,E,N,N],[6,"N192",E,E,N,N],[6,"U193",E,E,N,N],[6,"P193",E,E,N,N],[6,"N193",E,E,N,N],[6,"U194",E,E,N,N],[6,"P194",E,E,N,N],[6,"N194",E,E,N,N],[6,"U195",E,E,N,N],[6,"P195",E,E,N,N],[6,"N195",E,E,N,N],[6,"U196",E,E,N,N],[6,"P196",E,E,N,N],[6,"N196",E,E,N,N],[6,"U197",E,E,N,N],[6,"P197",E,E,N,N],[6,"N197",E,E,N,N],[6,"U198",E,E,N,N],[6,"P198",E,E,N,N],[6,"N198",E,E,N,N],[6,"U199",E,E,N,N],[6,"P199",E,E,N,N],[6,"N199",E,E,N,N],[6,"U200",E,E,N,N],[6,"P200",E,E,N,N],[6,"N200",E,E,N,N],[6,"U201",E,E,N,N],[6,"P201",E,E,N,N],[6,"N201",E,E,N,N],[6,"U202",E,E,N,N],[6,"P202",E,E,N,N],[6,"N202",E,E,N,N],[6,"U203",E,E,N,N],[6,"P203",E,E,N,N],[6,"N203",E,E,N,N],[6,"U204",E,E,N,N],[6,"P204",E,E,N,N],[6,"N204",E,E,N,N],[6,"U205",E,E,N,N],[6,"P205",E,E,N,N],[6,"N205",E,E,N,N],[6,"U206",E,E,N,N],[6,"P206",E,E,N,N],[6,"N206",E,E,N,N],[6,"U207",E,E,N,N],[6,"P207",E,E,N,N],[6,"N207",E,E,N,N],[6,"U208",E,E,N,N],[6,"P208",E,E,N,N],[6,"N208",E,E,N,N],[6,"U209",E,E,N,N],[6,"P209",E,E,N,N],[6,"N209",E,E,N,N],[6,"U210",E,E,N,N],[6,"P210",E,E,N,N],[6,"N210",E,E,N,N],[6,"U211",E,E,N,N],[6,"P211",E,E,N,N],[6,"N211",E,E,N,N],[6,"U212",E,E,N,N],[6,"P212",E,E,N,N],[6,"N212",E,E,N,N],[6,"U213",E,E,N,N],[6,"P213",E,E,N,N],[6,"N213",E,E,N,N],[6,"U214",E,E,N,N],[6,"P214",E,E,N,N],[6,"N214",E,E,N,N],[6,"U215",E,E,N,N],[6,"P215",E,E,N,N],[6,"N215",E,E,N,N],[6,"U216",E,E,N,N],[6,"P216",E,E,N,N],[6,"N216",E,E,N,N],[6,"U217",E,E,N,N],[6,"P217",E,E,N,N],[6,"N217",E,E,N,N],[6,"U218",E,E,N,N],[6,"P218",E,E,N,N],[6,"N218",E,E,N,N],[6,"U219",E,E,N,N],[6,"P219",E,E,N,N],[6,"N219",E,E,N,N],[6,"U220",E,E,N,N],[6,"P220",E,E,N,N],[6,"N220",E,E,N,N],[6,"U221",E,E,N,N],[6,"P221",E,E,N,N],[6,"N221",E,E,N,N],[6,"U222",E,E,N,N],[6,"P222",E,E,N,N],[6,"N222",E,E,N,N],[6,"U223",E,E,N,N],[6,"P223",E,E,N,N],[6,"N223",E,E,N,N],[6,"U224",E,E,N,N],[6,"P224",E,E,N,N],[6,"N224",E,E,N,N],[6,"U225",E,E,N,N],[6,"P225",E,E,N,N],[6,"N225",E,E,N,N],[6,"U226",E,E,N,N],[6,"P226",E,E,N,N],[6,"N226",E,E,N,N],[6,"U227",E,E,N,N],[6,"P227",E,E,N,N],[6,"N227",E,E,N,N],[6,"U228",E,E,N,N],[6,"P228",E,E,N,N],[6,"N228",E,E,N,N],[6,"U229",E,E,N,N],[6,"P229",E,E,N,N],[6,"N229",E,E,N,N],[6,"U230",E,E,N,N],[6,"P230",E,E,N,N],[6,"N230",E,E,N,N],[6,"U231",E,E,N,N],[6,"P231",E,E,N,N],[6,"N231",E,E,N,N],[6,"U232",E,E,N,N],[6,"P232",E,E,N,N],[6,"N232",E,E,N,N],[6,"U233",E,E,N,N],[6,"P233",E,E,N,N],[6,"N233",E,E,N,N],[6,"U234",E,E,N,N],[6,"P234",E,E,N,N],[6,"N234",E,E,N,N],[6,"U235",E,E,N,N],[6,"P235",E,E,N,N],[6,"N235",E,E,N,N],[6,"U236",E,E,N,N],[6,"P236",E,E,N,N],[6,"N236",E,E,N,N],[6,"U237",E,E,N,N],[6,"P237",E,E,N,N],[6,"N237",E,E,N,N],[6,"U238",E,E,N,N],[6,"P238",E,E,N,N],[6,"N238",E,E,N,N],[6,"U239",E,E,N,N],[6,"P239",E,E,N,N],[6,"N239",E,E,N,N],[6,"U240",E,E,N,N],[6,"P240",E,E,N,N],[6,"N240",E,E,N,N],[6,"U241",E,E,N,N],[6,"P241",E,E,N,N],[6,"N241",E,E,N,N],[6,"U242",E,E,N,N],[6,"P242",E,E,N,N],[6,"N242",E,E,N,N],[6,"U243",E,E,N,N],[6,"P243",E,E,N,N],[6,"N243",E,E,N,N],[6,"U244",E,E,N,N],[6,"P244",E,E,N,N],[6,"N244",E,E,N,N],[6,"U245",E,E,N,N],[6,"P245",E,E,N,N],[6,"N245",E,E,N,N],[6,"U246",E,E,N,N],[6,"P246",E,E,N,N],[6,"N246",E,E,N,N],[6,"U247",E,E,N,N],[6,"P247",E,E,N,N],[6,"N247",E,E,N,N],[6,"U248",E,E,N,N],[6,"P248",E,E,N,N],[6,"N248",E,E,N,N],[6,"U249",E,E,N,N],[6,"P249",E,E,N,N],[6,"N249",E,E,N,N],[6,"U250",E,E,N,N],[6,"P250",E,E,N,N],[6,"N250",E,E,N,N],[6,"U251",E,E,N,N],[6,"P251",E,E,N,N],[6,"N251",E,E,N,N],[6,"U252",E,E,N,N],[6,"P252",E,E,N,N],[6,"N252",E,E,N,N],[6,"U253",E,E,N,N],[6,"P253",E,E,N,N],[6,"N253",E,E,N,N],[6,"U254",E,E,N,N],[6,"P254",E,E,N,N],[6,"N254",E,E,N,N],[6,"U255",E,E,N,N],[6,"P255",E,E,N,N],[6,"N255",E,E,N,N],[6,"U256",E,E,N,N],[6,"P256",E,E,N,N],[6,"N256",E,E,N,N],[6,"U257",E,E,N,N],[6,"P257",E,E,N,N],[6,"N257",E,E,N,N],[6,"U258",E,E,N,N],[6,"P258",E,E,N,N],[6,"N258",E,E,N,N],[6,"U259",E,E,N,N],[6,"P259",E,E,N,N],[6,"N259",E,E,N,N],[6,"U260",E,E,N,N],[6,"P260",E,E,N,N],[6,"N260",E,E,N,N],[6,"U261",E,E,N,N],[6,"P261",E,E,N,N],[6,"N261",E,E,N,N],[6,"U262",E,E,N,N],[6,"P262",E,E,N,N],[6,"N262",E,E,N,N],[6,"U263",E,E,N,N],[6,"P263",E,E,N,N],[6,"N263",E,E,N,N],[6,"U264",E,E,N,N],[6,"P264",E,E,N,N],[6,"N264",E,E,N,N],[6,"U265",E,E,N,N],[6,"P265",E,E,N,N],[6,"N265",E,E,N,N],[6,"U266",E,E,N,N],[6,"P266",E,E,N,N],[6,"N266",E,E,N,N],[6,"U267",E,E,N,N],[6,"P267",E,E,N,N],[6,"N267",E,E,N,N],[6,"U268",E,E,N,N],[6,"P268",E,E,N,N],[6,"N268",E,E,N,N],[6,"U269",E,E,N,N],[6,"P269",E,E,N,N],[6,"N269",E,E,N,N],[6,"U270",E,E,N,N],[6,"P270",E,E,N,N],[6,"N270",E,E,N,N],[6,"U271",E,E,N,N],[6,"P271",E,E,N,N],[6,"N271",E,E,N,N],[6,"U272",E,E,N,N],[6,"P272",E,E,N,N],[6,"N272",E,E,N,N],[6,"U273",E,E,N,N],[6,"P273",E,E,N,N],[6,"N273",E,E,N,N],[6,"U274",E,E,N,N],[6,"P274",E,E,N,N],[6,"N274",E,E,N,N],[6,"U275",E,E,N,N],[6,"P275",E,E,N,N],[6,"N275",E,E,N,N],[6,"U276",E,E,N,N],[6,"P276",E,E,N,N],[6,"N276",E,E,N,N],[6,"U277",E,E,N,N],[6,"P277",E,E,N,N],[6,"N277",E,E,N,N],[6,"U278",E,E,N,N],[6,"P278",E,E,N,N],[6,"N278",E,E,N,N],[6,"U279",E,E,N,N],[6,"P279",E,E,N,N],[6,"N279",E,E,N,N],[6,"U280",E,E,N,N],[6,"P280",E,E,N,N],[6,"N280",E,E,N,N],[6,"U281",E,E,N,N],[6,"P281",E,E,N,N],[6,"N281",E,E,N,N],[6,"U282",E,E,N,N],[6,"P282",E,E,N,N],[6,"N282",E,E,N,N],[6,"U283",E,E,N,N],[6,"P283",E,E,N,N],[6,"N283",E,E,N,N],[6,"U284",E,E,N,N],[6,"P284",E,E,N,N],[6,"N284",E,E,N,N],[6,"U285",E,E,N,N],[6,"P285",E,E,N,N],[6,"N285",E,E,N,N],[6,"U286",E,E,N,N],[6,"P286",E,E,N,N],[6,"N286",E,E,N,N],[6,"U287",E,E,N,N],[6,"P287",E,E,N,N],[6,"N287",E,E,N,N],[6,"U288",E,E,N,N],[6,"P288",E,E,N,N],[6,"N288",E,E,N,N],[6,"U289",E,E,N,N],[6,"P289",E,E,N,N],[6,"N289",E,E,N,N],[6,"U290",E,E,N,N],[6,"P290",E,E,N,N],[6,"N290",E,E,N,N],[6,"U291",E,E,N,N],[6,"P291",E,E,N,N],[6,"N291",E,E,N,N],[6,"U292",E,E,N,N],[6,"P292",E,E,N,N],[6,"N292",E,E,N,N],[6,"U293",E,E,N,N],[6,"P293",E,E,N,N],[6,"N293",E,E,N,N],[6,"U294",E,E,N,N],[6,"P294",E,E,N,N],[6,"N294",E,E,N,N],[6,"U295",E,E,N,N],[6,"P295",E,E,N,N],[6,"N295",E,E,N,N],[6,"U296",E,E,N,N],[6,"P296",E,E,N,N],[6,"N296",E,E,N,N],[6,"U297",E,E,N,N],[6,"P297",E,E,N,N],[6,"N297",E,E,N,N],[6,"U298",E,E,N,N],[6,"P298",E,E,N,N],[6,"N298",E,E,N,N],[6,"U299",E,E,N,N],[6,"P299",E,E,N,N],[6,"N299",E,E,N,N],[6,"U300",E,E,N,N],[6,"P300",E,E,N,N],[6,"N300",E,E,N,N],[6,"U301",E,E,N,N],[6,"P301",E,E,N,N],[6,"N301",E,E,N,N],[6,"U302",E,E,N,N],[6,"P302",E,E,N,N],[6,"N302",E,E,N,N],[6,"U303",E,E,N,N],[6,"P303",E,E,N,N],[6,"N303",E,E,N,N],[6,"U304",E,E,N,N],[6,"P304",E,E,N,N],[6,"N304",E,E,N,N],[6,"U305",E,E,N,N],[6,"P305",E,E,N,N],[6,"N305",E,E,N,N],[6,"U306",E,E,N,N],[6,"P306",E,E,N,N],[6,"N306",E,E,N,N],[6,"U307",E,E,N,N],[6,"P307",E,E,N,N],[6,"N307",E,E,N,N],[6,"U308",E,E,N,N],[6,"P308",E,E,N,N],[6,"N308",E,E,N,N],[6,"U309",E,E,N,N],[6,"P309",E,E,N,N],[6,"N309",E,E,N,N],[6,"U310",E,E,N,N],[6,"P310",E,E,N,N],[6,"N310",E,E,N,N],[6,"U311",E,E,N,N],[6,"P311",E,E,N,N],[6,"N311",E,E,N,N],[6,"U312",E,E,N,N],[6,"P312",E,E,N,N],[6,"N312",E,E,N,N],[6,"U313",E,E,N,N],[6,"P313",E,E,N,N],[6,"N313",E,E,N,N],[6,"U314",E,E,N,N],[6,"P314",E,E,N,N],[6,"N314",E,E,N,N],[6,"U315",E,E,N,N],[6,"P315",E,E,N,N],[6,"N315",E,E,N,N],[6,"U316",E,E,N,N],[6,"P316",E,E,N,N],[6,"N316",E,E,N,N],[6,"U317",E,E,N,N],[6,"P317",E,E,N,N],[6,"N317",E,E,N,N],[6,"U318",E,E,N,N],[6,"P318",E,E,N,N],[6,"N318",E,E,N,N],[6,"U319",E,E,N,N],[6,"P319",E,E,N,N],[6,"N319",E,E,N,N],[6,"U320",E,E,N,N],[6,"P320",E,E,N,N],[6,"N320",E,E,N,N],[6,"U321",E,E,N,N],[6,"P321",E,E,N,N],[6,"N321",E,E,N,N],[6,"U322",E,E,N,N],[6,"P322",E,E,N,N],[6,"N322",E,E,N,N],[6,"U323",E,E,N,N],[6,"P323",E,E,N,N],[6,"N323",E,E,N,N],[6,"U324",E,E,N,N],[6,"P324",E,E,N,N],[6,"N324",E,E,N,N],[6,"U325",E,E,N,N],[6,"P325",E,E,N,N],[6,"N325",E,E,N,N],[6,"U326",E,E,N,N],[6,"P326",E,E,N,N],[6,"N326",E,E,N,N],[6,"U327",E,E,N,N],[6,"P327",E,E,N,N],[6,"N327",E,E,N,N],[6,"U328",E,E,N,N],[6,"P328",E,E,N,N],[6,"N328",E,E,N,N],[6,"U329",E,E,N,N],[6,"P329",E,E,N,N],[6,"N329",E,E,N,N],[6,"U330",E,E,N,N],[6,"P330",E,E,N,N],[6,"N330",E,E,N,N],[6,"U331",E,E,N,N],[6,"P331",E,E,N,N],[6,"N331",E,E,N,N],[6,"U332",E,E,N,N],[6,"P332",E,E,N,N],[6,"N332",E,E,N,N],[6,"U333",E,E,N,N],[6,"P333",E,E,N,N],[6,"N333",E,E,N,N],[6,"U334",E,E,N,N],[6,"P334",E,E,N,N],[6,"N334",E,E,N,N],[6,"U335",E,E,N,N],[6,"P335",E,E,N,N],[6,"N335",E,E,N,N],[6,"U336",E,E,N,N],[6,"P336",E,E,N,N],[6,"N336",E,E,N,N],[6,"U337",E,E,N,N],[6,"P337",E,E,N,N],[6,"N337",E,E,N,N],[6,"U338",E,E,N,N],[6,"P338",E,E,N,N],[6,"N338",E,E,N,N],[6,"U339",E,E,N,N],[6,"P339",E,E,N,N],[6,"N339",E,E,N,N],[6,"U340",E,E,N,N],[6,"P340",E,E,N,N],[6,"N340",E,E,N,N],[6,"U341",E,E,N,N],[6,"P341",E,E,N,N],[6,"N341",E,E,N,N],[6,"U342",E,E,N,N],[6,"P342",E,E,N,N],[6,"N342",E,E,N,N],[6,"U343",E,E,N,N],[6,"P343",E,E,N,N],[6,"N343",E,E,N,N],[6,"U344",E,E,N,N],[6,"P344",E,E,N,N],[6,"N344",E,E,N,N],[6,"U345",E,E,N,N],[6,"P345",E,E,N,N],[6,"N345",E,E,N,N],[6,"U346",E,E,N,N],[6,"P346",E,E,N,N],[6,"N346",E,E,N,N],[6,"U347",E,E,N,N],[6,"P347",E,E,N,N],[6,"N347",E,E,N,N],[6,"U348",E,E,N,N],[6,"P348",E,E,N,N],[6,"N348",E,E,N,N],[6,"U349",E,E,N,N],[6,"P349",E,E,N,N],[6,"N349",E,E,N,N],[6,"U350",E,E,N,N],[6,"P350",E,E,N,N],[6,"N350",E,E,N,N],[6,"U351",E,E,N,N],[6,"P351",E,E,N,N],[6,"N351",E,E,N,N],[6,"U352",E,E,N,N],[6,"P352",E,E,N,N],[6,"N352",E,E,N,N],[6,"U353",E,E,N,N],[6,"P353",E,E,N,N],[6,"N353",E,E,N,N],[6,"U354",E,E,N,N],[6,"P354",E,E,N,N],[6,"N354",E,E,N,N],[6,"U355",E,E,N,N],[6,"P355",E,E,N,N],[6,"N355",E,E,N,N],[6,"U356",E,E,N,N],[6,"P356",E,E,N,N],[6,"N356",E,E,N,N],[6,"U357",E,E,N,N],[6,"P357",E,E,N,N],[6,"N357",E,E,N,N],[6,"U358",E,E,N,N],[6,"P358",E,E,N,N],[6,"N358",E,E,N,N],[6,"U359",E,E,N,N],[6,"P359",E,E,N,N],[6,"N359",E,E,N,N],[6,"U360",E,E,N,N],[6,"P360",E,E,N,N],[6,"N360",E,E,N,N],[6,"U361",E,E,N,N],[6,"P361",E,E,N,N],[6,"N361",E,E,N,N],[6,"U362",E,E,N,N],[6,"P362",E,E,N,N],[6,"N362",E,E,N,N],[6,"U363",E,E,N,N],[6,"P363",E,E,N,N],[6,"N363",E,E,N,N],[6,"U364",E,E,N,N],[6,"P364",E,E,N,N],[6,"N364",E,E,N,N],[6,"U365",E,E,N,N],[6,"P365",E,E,N,N],[6,"N365",E,E,N,N],[6,"U366",E,E,N,N],[6,"P366",E,E,N,N],[6,"N366",E,E,N,N],[6,"U367",E,E,N,N],[6,"P367",E,E,N,N],[6,"N367",E,E,N,N],[6,"U368",E,E,N,N],[6,"P368",E,E,N,N],[6,"N368",E,E,N,N],[6,"U369",E,E,N,N],[6,"P369",E,E,N,N],[6,"N369",E,E,N,N],[6,"U370",E,E,N,N],[6,"P370",E,E,N,N],[6,"N370",E,E,N,N],[6,"U371",E,E,N,N],[6,"P371",E,E,N,N],[6,"N371",E,E,N,N],[6,"U372",E,E,N,N],[6,"P372",E,E,N,N],[6,"N372",E,E,N,N],[6,"U373",E,E,N,N],[6,"P373",E,E,N,N],[6,"N373",E,E,N,N],[6,"U374",E,E,N,N],[6,"P374",E,E,N,N],[6,"N374",E,E,N,N],[6,"U375",E,E,N,N],[6,"P375",E,E,N,N],[6,"N375",E,E,N,N],[6,"U376",E,E,N,N],[6,"P376",E,E,N,N],[6,"N376",E,E,N,N],[6,"U377",E,E,N,N],[6,"P377",E,E,N,N],[6,"N377",E,E,N,N],[6,"U378",E,E,N,N],[6,"P378",E,E,N,N],[6,"N378",E,E,N,N],[6,"U379",E,E,N,N],[6,"P379",E,E,N,N],[6,"N379",E,E,N,N],[6,"U380",E,E,N,N],[6,"P380",E,E,N,N],[6,"N380",E,E,N,N],[6,"U381",E,E,N,N],[6,"P381",E,E,N,N],[6,"N381",E,E,N,N],[6,"U382",E,E,N,N],[6,"P382",E,E,N,N],[6,"N382",E,E,N,N],[6,"U383",E,E,N,N],[6,"P383",E,E,N,N],[6,"N383",E,E,N,N],[6,"U384",E,E,N,N],[6,"P384",E,E,N,N],[6,"N384",E,E,N,N],[6,"U385",E,E,N,N],[6,"P385",E,E,N,N],[6,"N385",E,E,N,N],[6,"U386",E,E,N,N],[6,"P386",E,E,N,N],[6,"N386",E,E,N,N],[6,"U387",E,E,N,N],[6,"P387",E,E,N,N],[6,"N387",E,E,N,N],[6,"U388",E,E,N,N],[6,"P388",E,E,N,N],[6,"N388",E,E,N,N],[6,"U389",E,E,N,N],[6,"P389",E,E,N,N],[6,"N389",E,E,N,N],[6,"U390",E,E,N,N],[6,"P390",E,E,N,N],[6,"N390",E,E,N,N],[6,"U391",E,E,N,N],[6,"P391",E,E,N,N],[6,"N391",E,E,N,N],[6,"U392",E,E,N,N],[6,"P392",E,E,N,N],[6,"N392",E,E,N,N],[6,"U393",E,E,N,N],[6,"P393",E,E,N,N],[6,"N393",E,E,N,N],[6,"U394",E,E,N,N],[6,"P394",E,E,N,N],[6,"N394",E,E,N,N],[6,"U395",E,E,N,N],[6,"P395",E,E,N,N],[6,"N395",E,E,N,N],[6,"U396",E,E,N,N],[6,"P396",E,E,N,N],[6,"N396",E,E,N,N],[6,"U397",E,E,N,N],[6,"P397",E,E,N,N],[6,"N397",E,E,N,N],[6,"U398",E,E,N,N],[6,"P398",E,E,N,N],[6,"N398",E,E,N,N],[6,"U399",E,E,N,N],[6,"P399",E,E,N,N],[6,"N399",E,E,N,N],[6,"U400",E,E,N,N],[6,"P400",E,E,N,N],[6,"N400",E,E,N,N],[6,"U401",E,E,N,N],[6,"P401",E,E,N,N],[6,"N401",E,E,N,N],[6,"U402",E,E,N,N],[6,"P402",E,E,N,N],[6,"N402",E,E,N,N],[6,"U403",E,E,N,N],[6,"P403",E,E,N,N],[6,"N403",E,E,N,N],[6,"U404",E,E,N,N],[6,"P404",E,E,N,N],[6,"N404",E,E,N,N],[6,"U405",E,E,N,N],[6,"P405",E,E,N,N],[6,"N405",E,E,N,N],[6,"U406",E,E,N,N],[6,"P406",E,E,N,N],[6,"N406",E,E,N,N],[6,"U407",E,E,N,N],[6,"P407",E,E,N,N],[6,"N407",E,E,N,N],[6,"U408",E,E,N,N],[6,"P408",E,E,N,N],[6,"N408",E,E,N,N],[6,"U409",E,E,N,N],[6,"P409",E,E,N,N],[6,"N409",E,E,N,N],[6,"U410",E,E,N,N],[6,"P410",E,E,N,N],[6,"N410",E,E,N,N],[6,"U411",E,E,N,N],[6,"P411",E,E,N,N],[6,"N411",E,E,N,N],[6,"U412",E,E,N,N],[6,"P412",E,E,N,N],[6,"N412",E,E,N,N],[6,"U413",E,E,N,N],[6,"P413",E,E,N,N],[6,"N413",E,E,N,N],[6,"U414",E,E,N,N],[6,"P414",E,E,N,N],[6,"N414",E,E,N,N],[6,"U415",E,E,N,N],[6,"P415",E,E,N,N],[6,"N415",E,E,N,N],[6,"U416",E,E,N,N],[6,"P416",E,E,N,N],[6,"N416",E,E,N,N],[6,"U417",E,E,N,N],[6,"P417",E,E,N,N],[6,"N417",E,E,N,N],[6,"U418",E,E,N,N],[6,"P418",E,E,N,N],[6,"N418",E,E,N,N],[6,"U419",E,E,N,N],[6,"P419",E,E,N,N],[6,"N419",E,E,N,N],[6,"U420",E,E,N,N],[6,"P420",E,E,N,N],[6,"N420",E,E,N,N],[6,"U421",E,E,N,N],[6,"P421",E,E,N,N],[6,"N421",E,E,N,N],[6,"U422",E,E,N,N],[6,"P422",E,E,N,N],[6,"N422",E,E,N,N],[6,"U423",E,E,N,N],[6,"P423",E,E,N,N],[6,"N423",E,E,N,N],[6,"U424",E,E,N,N],[6,"P424",E,E,N,N],[6,"N424",E,E,N,N],[6,"U425",E,E,N,N],[6,"P425",E,E,N,N],[6,"N425",E,E,N,N],[6,"U426",E,E,N,N],[6,"P426",E,E,N,N],[6,"N426",E,E,N,N],[6,"U427",E,E,N,N],[6,"P427",E,E,N,N],[6,"N427",E,E,N,N],[6,"U428",E,E,N,N],[6,"P428",E,E,N,N],[6,"N428",E,E,N,N],[6,"U429",E,E,N,N],[6,"P429",E,E,N,N],[6,"N429",E,E,N,N],[6,"U430",E,E,N,N],[6,"P430",E,E,N,N],[6,"N430",E,E,N,N],[6,"U431",E,E,N,N],[6,"P431",E,E,N,N],[6,"N431",E,E,N,N],[6,"U432",E,E,N,N],[6,"P432",E,E,N,N],[6,"N432",E,E,N,N],[6,"U433",E,E,N,N],[6,"P433",E,E,N,N],[6,"N433",E,E,N,N],[6,"U434",E,E,N,N],[6,"P434",E,E,N,N],[6,"N434",E,E,N,N],[6,"U435",E,E,N,N],[6,"P435",E,E,N,N],[6,"N435",E,E,N,N],[6,"U436",E,E,N,N],[6,"P436",E,E,N,N],[6,"N436",E,E,N,N],[6,"U437",E,E,N,N],[6,"P437",E,E,N,N],[6,"N437",E,E,N,N],[6,"U438",E,E,N,N],[6,"P438",E,E,N,N],[6,"N438",E,E,N,N],[6,"U439",E,E,N,N],[6,"P439",E,E,N,N],[6,"N439",E,E,N,N],[6,"U440",E,E,N,N],[6,"P440",E,E,N,N],[6,"N440",E,E,N,N],[6,"U441",E,E,N,N],[6,"P441",E,E,N,N],[6,"N441",E,E,N,N],[6,"U442",E,E,N,N],[6,"P442",E,E,N,N],[6,"N442",E,E,N,N],[6,"U443",E,E,N,N],[6,"P443",E,E,N,N],[6,"N443",E,E,N,N],[6,"U444",E,E,N,N],[6,"P444",E,E,N,N],[6,"N444",E,E,N,N],[6,"U445",E,E,N,N],[6,"P445",E,E,N,N],[6,"N445",E,E,N,N],[6,"U446",E,E,N,N],[6,"P446",E,E,N,N],[6,"N446",E,E,N,N],[6,"U447",E,E,N,N],[6,"P447",E,E,N,N],[6,"N447",E,E,N,N],[6,"U448",E,E,N,N],[6,"P448",E,E,N,N],[6,"N448",E,E,N,N],[6,"U449",E,E,N,N],[6,"P449",E,E,N,N],[6,"N449",E,E,N,N],[6,"U450",E,E,N,N],[6,"P450",E,E,N,N],[6,"N450",E,E,N,N],[6,"U451",E,E,N,N],[6,"P451",E,E,N,N],[6,"N451",E,E,N,N],[6,"U452",E,E,N,N],[6,"P452",E,E,N,N],[6,"N452",E,E,N,N],[6,"U453",E,E,N,N],[6,"P453",E,E,N,N],[6,"N453",E,E,N,N],[6,"U454",E,E,N,N],[6,"P454",E,E,N,N],[6,"N454",E,E,N,N],[6,"U455",E,E,N,N],[6,"P455",E,E,N,N],[6,"N455",E,E,N,N],[6,"U456",E,E,N,N],[6,"P456",E,E,N,N],[6,"N456",E,E,N,N],[6,"U457",E,E,N,N],[6,"P457",E,E,N,N],[6,"N457",E,E,N,N],[6,"U458",E,E,N,N],[6,"P458",E,E,N,N],[6,"N458",E,E,N,N],[6,"U459",E,E,N,N],[6,"P459",E,E,N,N],[6,"N459",E,E,N,N],[6,"U460",E,E,N,N],[6,"P460",E,E,N,N],[6,"N460",E,E,N,N],[6,"U461",E,E,N,N],[6,"P461",E,E,N,N],[6,"N461",E,E,N,N],[6,"U462",E,E,N,N],[6,"P462",E,E,N,N],[6,"N462",E,E,N,N],[6,"U463",E,E,N,N],[6,"P463",E,E,N,N],[6,"N463",E,E,N,N],[6,"U464",E,E,N,N],[6,"P464",E,E,N,N],[6,"N464",E,E,N,N],[6,"U465",E,E,N,N],[6,"P465",E,E,N,N],[6,"N465",E,E,N,N],[6,"U466",E,E,N,N],[6,"P466",E,E,N,N],[6,"N466",E,E,N,N],[6,"U467",E,E,N,N],[6,"P467",E,E,N,N],[6,"N467",E,E,N,N],[6,"U468",E,E,N,N],[6,"P468",E,E,N,N],[6,"N468",E,E,N,N],[6,"U469",E,E,N,N],[6,"P469",E,E,N,N],[6,"N469",E,E,N,N],[6,"U470",E,E,N,N],[6,"P470",E,E,N,N],[6,"N470",E,E,N,N],[6,"U471",E,E,N,N],[6,"P471",E,E,N,N],[6,"N471",E,E,N,N],[6,"U472",E,E,N,N],[6,"P472",E,E,N,N],[6,"N472",E,E,N,N],[6,"U473",E,E,N,N],[6,"P473",E,E,N,N],[6,"N473",E,E,N,N],[6,"U474",E,E,N,N],[6,"P474",E,E,N,N],[6,"N474",E,E,N,N],[6,"U475",E,E,N,N],[6,"P475",E,E,N,N],[6,"N475",E,E,N,N],[6,"U476",E,E,N,N],[6,"P476",E,E,N,N],[6,"N476",E,E,N,N],[6,"U477",E,E,N,N],[6,"P477",E,E,N,N],[6,"N477",E,E,N,N],[6,"U478",E,E,N,N],[6,"P478",E,E,N,N],[6,"N478",E,E,N,N],[6,"U479",E,E,N,N],[6,"P479",E,E,N,N],[6,"N479",E,E,N,N],[6,"U480",E,E,N,N],[6,"P480",E,E,N,N],[6,"N480",E,E,N,N],[6,"U481",E,E,N,N],[6,"P481",E,E,N,N],[6,"N481",E,E,N,N],[6,"U482",E,E,N,N],[6,"P482",E,E,N,N],[6,"N482",E,E,N,N],[6,"U483",E,E,N,N],[6,"P483",E,E,N,N],[6,"N483",E,E,N,N],[6,"U484",E,E,N,N],[6,"P484",E,E,N,N],[6,"N484",E,E,N,N],[6,"U485",E,E,N,N],[6,"P485",E,E,N,N],[6,"N485",E,E,N,N],[6,"U486",E,E,N,N],[6,"P486",E,E,N,N],[6,"N486",E,E,N,N],[6,"U487",E,E,N,N],[6,"P487",E,E,N,N],[6,"N487",E,E,N,N],[6,"U488",E,E,N,N],[6,"P488",E,E,N,N],[6,"N488",E,E,N,N],[6,"U489",E,E,N,N],[6,"P489",E,E,N,N],[6,"N489",E,E,N,N],[6,"U490",E,E,N,N],[6,"P490",E,E,N,N],[6,"N490",E,E,N,N],[6,"U491",E,E,N,N],[6,"P491",E,E,N,N],[6,"N491",E,E,N,N],[6,"U492",E,E,N,N],[6,"P492",E,E,N,N],[6,"N492",E,E,N,N],[6,"U493",E,E,N,N],[6,"P493",E,E,N,N],[6,"N493",E,E,N,N],[6,"U494",E,E,N,N],[6,"P494",E,E,N,N],[6,"N494",E,E,N,N],[6,"U495",E,E,N,N],[6,"P495",E,E,N,N],[6,"N495",E,E,N,N],[6,"U496",E,E,N,N],[6,"P496",E,E,N,N],[6,"N496",E,E,N,N],[6,"U497",E,E,N,N],[6,"P497",E,E,N,N],[6,"N497",E,E,N,N],[6,"U498",E,E,N,N],[6,"P498",E,E,N,N],[6,"N498",E,E,N,N],[6,"U499",E,E,N,N],[6,"P499",E,E,N,N],[6,"N499",E,E,N,N],[6,"U500",E,E,N,N],[6,"P500",E,E,N,N],[6,"N500",E,E,N,N],[6,"U501",E,E,N,N],[6,"P501",E,E,N,N],[6,"N501",E,E,N,N],[6,"U502",E,E,N,N],[6,"P502",E,E,N,N],[6,"N502",E,E,N,N],[6,"U503",E,E,N,N],[6,"P503",E,E,N,N],[6,"N503",E,E,N,N],[6,"U504",E,E,N,N],[6,"P504",E,E,N,N],[6,"N504",E,E,N,N],[6,"U505",E,E,N,N],[6,"P505",E,E,N,N],[6,"N505",E,E,N,N],[6,"U506",E,E,N,N],[6,"P506",E,E,N,N],[6,"N506",E,E,N,N],[6,"U507",E,E,N,N],[6,"P507",E,E,N,N],[6,"N507",E,E,N,N],[6,"U508",E,E,N,N],[6,"P508",E,E,N,N],[6,"N508",E,E,N,N],[6,"U509",E,E,N,N],[6,"P509",E,E,N,N],[6,"N509",E,E,N,N],[6,"U510",E,E,N,N],[6,"P510",E,E,N,N],[6,"N510",E,E,N,N],[6,"U511",E,E,N,N],[6,"P511",E,E,N,N],[6,"N511",E,E,N,N],[6,"U512",E,E,N,N],[6,"P512",E,E,N,N],[6,"N512",E,E,N,N],[6,"U513",E,E,N,N],[6,"P513",E,E,N,N],[6,"N513",E,E,N,N],[6,"U514",E,E,N,N],[6,"P514",E,E,N,N],[6,"N514",E,E,N,N],[6,"U515",E,E,N,N],[6,"P515",E,E,N,N],[6,"N515",E,E,N,N],[6,"U516",E,E,N,N],[6,"P516",E,E,N,N],[6,"N516",E,E,N,N],[6,"U517",E,E,N,N],[6,"P517",E,E,N,N],[6,"N517",E,E,N,N],[6,"U518",E,E,N,N],[6,"P518",E,E,N,N],[6,"N518",E,E,N,N],[6,"U519",E,E,N,N],[6,"P519",E,E,N,N],[6,"N519",E,E,N,N],[6,"U520",E,E,N,N],[6,"P520",E,E,N,N],[6,"N520",E,E,N,N],[6,"U521",E,E,N,N],[6,"P521",E,E,N,N],[6,"N521",E,E,N,N],[6,"U522",E,E,N,N],[6,"P522",E,E,N,N],[6,"N522",E,E,N,N],[6,"U523",E,E,N,N],[6,"P523",E,E,N,N],[6,"N523",E,E,N,N],[6,"U524",E,E,N,N],[6,"P524",E,E,N,N],[6,"N524",E,E,N,N],[6,"U525",E,E,N,N],[6,"P525",E,E,N,N],[6,"N525",E,E,N,N],[6,"U526",E,E,N,N],[6,"P526",E,E,N,N],[6,"N526",E,E,N,N],[6,"U527",E,E,N,N],[6,"P527",E,E,N,N],[6,"N527",E,E,N,N],[6,"U528",E,E,N,N],[6,"P528",E,E,N,N],[6,"N528",E,E,N,N],[6,"U529",E,E,N,N],[6,"P529",E,E,N,N],[6,"N529",E,E,N,N],[6,"U530",E,E,N,N],[6,"P530",E,E,N,N],[6,"N530",E,E,N,N],[6,"U531",E,E,N,N],[6,"P531",E,E,N,N],[6,"N531",E,E,N,N],[6,"U532",E,E,N,N],[6,"P532",E,E,N,N],[6,"N532",E,E,N,N],[6,"U533",E,E,N,N],[6,"P533",E,E,N,N],[6,"N533",E,E,N,N],[6,"U534",E,E,N,N],[6,"P534",E,E,N,N],[6,"N534",E,E,N,N],[6,"U535",E,E,N,N],[6,"P535",E,E,N,N],[6,"N535",E,E,N,N],[6,"U536",E,E,N,N],[6,"P536",E,E,N,N],[6,"N536",E,E,N,N],[6,"U537",E,E,N,N],[6,"P537",E,E,N,N],[6,"N537",E,E,N,N],[6,"U538",E,E,N,N],[6,"P538",E,E,N,N],[6,"N538",E,E,N,N],[6,"U539",E,E,N,N],[6,"P539",E,E,N,N],[6,"N539",E,E,N,N],[6,"U540",E,E,N,N],[6,"P540",E,E,N,N],[6,"N540",E,E,N,N],[6,"U541",E,E,N,N],[6,"P541",E,E,N,N],[6,"N541",E,E,N,N],[6,"U542",E,E,N,N],[6,"P542",E,E,N,N],[6,"N542",E,E,N,N],[6,"U543",E,E,N,N],[6,"P543",E,E,N,N],[6,"N543",E,E,N,N],[6,"U544",E,E,N,N],[6,"P544",E,E,N,N],[6,"N544",E,E,N,N],[6,"U545",E,E,N,N],[6,"P545",E,E,N,N],[6,"N545",E,E,N,N],[6,"U546",E,E,N,N],[6,"P546",E,E,N,N],[6,"N546",E,E,N,N],[6,"U547",E,E,N,N],[6,"P547",E,E,N,N],[6,"N547",E,E,N,N],[6,"U548",E,E,N,N],[6,"P548",E,E,N,N],[6,"N548",E,E,N,N],[6,"U549",E,E,N,N],[6,"P549",E,E,N,N],[6,"N549",E,E,N,N],[6,"U550",E,E,N,N],[6,"P550",E,E,N,N],[6,"N550",E,E,N,N],[6,"U551",E,E,N,N],[6,"P551",E,E,N,N],[6,"N551",E,E,N,N],[6,"U552",E,E,N,N],[6,"P552",E,E,N,N],[6,"N552",E,E,N,N],[6,"U553",E,E,N,N],[6,"P553",E,E,N,N],[6,"N553",E,E,N,N],[6,"U554",E,E,N,N],[6,"P554",E,E,N,N],[6,"N554",E,E,N,N],[6,"U555",E,E,N,N],[6,"P555",E,E,N,N],[6,"N555",E,E,N,N],[6,"U556",E,E,N,N],[6,"P556",E,E,N,N],[6,"N556",E,E,N,N],[6,"U557",E,E,N,N],[6,"P557",E,E,N,N],[6,"N557",E,E,N,N],[6,"U558",E,E,N,N],[6,"P558",E,E,N,N],[6,"N558",E,E,N,N],[6,"U559",E,E,N,N],[6,"P559",E,E,N,N],[6,"N559",E,E,N,N],[6,"U560",E,E,N,N],[6,"P560",E,E,N,N],[6,"N560",E,E,N,N],[6,"U561",E,E,N,N],[6,"P561",E,E,N,N],[6,"N561",E,E,N,N],[6,"U562",E,E,N,N],[6,"P562",E,E,N,N],[6,"N562",E,E,N,N],[6,"U563",E,E,N,N],[6,"P563",E,E,N,N],[6,"N563",E,E,N,N],[6,"U564",E,E,N,N],[6,"P564",E,E,N,N],[6,"N564",E,E,N,N],[6,"U565",E,E,N,N],[6,"P565",E,E,N,N],[6,"N565",E,E,N,N],[6,"U566",E,E,N,N],[6,"P566",E,E,N,N],[6,"N566",E,E,N,N],[6,"U567",E,E,N,N],[6,"P567",E,E,N,N],[6,"N567",E,E,N,N],[6,"U568",E,E,N,N],[6,"P568",E,E,N,N],[6,"N568",E,E,N,N],[6,"U569",E,E,N,N],[6,"P569",E,E,N,N],[6,"N569",E,E,N,N],[6,"U570",E,E,N,N],[6,"P570",E,E,N,N],[6,"N570",E,E,N,N],[6,"U571",E,E,N,N],[6,"P571",E,E,N,N],[6,"N571",E,E,N,N],[6,"U572",E,E,N,N],[6,"P572",E,E,N,N],[6,"N572",E,E,N,N],[6,"U573",E,E,N,N],[6,"P573",E,E,N,N],[6,"N573",E,E,N,N],[6,"U574",E,E,N,N],[6,"P574",E,E,N,N],[6,"N574",E,E,N,N],[6,"U575",E,E,N,N],[6,"P575",E,E,N,N],[6,"N575",E,E,N,N],[6,"U576",E,E,N,N],[6,"P576",E,E,N,N],[6,"N576",E,E,N,N],[6,"U577",E,E,N,N],[6,"P577",E,E,N,N],[6,"N577",E,E,N,N],[6,"U578",E,E,N,N],[6,"P578",E,E,N,N],[6,"N578",E,E,N,N],[6,"U579",E,E,N,N],[6,"P579",E,E,N,N],[6,"N579",E,E,N,N],[6,"U580",E,E,N,N],[6,"P580",E,E,N,N],[6,"N580",E,E,N,N],[6,"U581",E,E,N,N],[6,"P581",E,E,N,N],[6,"N581",E,E,N,N],[6,"U582",E,E,N,N],[6,"P582",E,E,N,N],[6,"N582",E,E,N,N],[6,"U583",E,E,N,N],[6,"P583",E,E,N,N],[6,"N583",E,E,N,N],[6,"U584",E,E,N,N],[6,"P584",E,E,N,N],[6,"N584",E,E,N,N],[6,"U585",E,E,N,N],[6,"P585",E,E,N,N],[6,"N585",E,E,N,N],[6,"U586",E,E,N,N],[6,"P586",E,E,N,N],[6,"N586",E,E,N,N],[6,"U587",E,E,N,N],[6,"P587",E,E,N,N],[6,"N587",E,E,N,N],[6,"U588",E,E,N,N],[6,"P588",E,E,N,N],[6,"N588",E,E,N,N],[6,"U589",E,E,N,N],[6,"P589",E,E,N,N],[6,"N589",E,E,N,N],[6,"U590",E,E,N,N],[6,"P590",E,E,N,N],[6,"N590",E,E,N,N],[6,"U591",E,E,N,N],[6,"P591",E,E,N,N],[6,"N591",E,E,N,N],[6,"U592",E,E,N,N],[6,"P592",E,E,N,N],[6,"N592",E,E,N,N],[6,"U593",E,E,N,N],[6,"P593",E,E,N,N],[6,"N593",E,E,N,N],[6,"U594",E,E,N,N],[6,"P594",E,E,N,N],[6,"N594",E,E,N,N],[6,"U595",E,E,N,N],[6,"P595",E,E,N,N],[6,"N595",E,E,N,N],[6,"U596",E,E,N,N],[6,"P596",E,E,N,N],[6,"N596",E,E,N,N],[6,"U597",E,E,N,N],[6,"P597",E,E,N,N],[6,"N597",E,E,N,N],[6,"U598",E,E,N,N],[6,"P598",E,E,N,N],[6,"N598",E,E,N,N],[6,"U599",E,E,N,N],[6,"P599",E,E,N,N],[6,"N599",E,E,N,N],[6,"U600",E,E,N,N],[6,"P600",E,E,N,N],[6,"N600",E,E,N,N],[6,"U601",E,E,N,N],[6,"P601",E,E,N,N],[6,"N601",E,E,N,N],[6,"U602",E,E,N,N],[6,"P602",E,E,N,N],[6,"N602",E,E,N,N],[6,"U603",E,E,N,N],[6,"P603",E,E,N,N],[6,"N603",E,E,N,N],[6,"U604",E,E,N,N],[6,"P604",E,E,N,N],[6,"N604",E,E,N,N],[6,"U605",E,E,N,N],[6,"P605",E,E,N,N],[6,"N605",E,E,N,N],[6,"U606",E,E,N,N],[6,"P606",E,E,N,N],[6,"N606",E,E,N,N],[6,"U607",E,E,N,N],[6,"P607",E,E,N,N],[6,"N607",E,E,N,N],[6,"U608",E,E,N,N],[6,"P608",E,E,N,N],[6,"N608",E,E,N,N],[6,"U609",E,E,N,N],[6,"P609",E,E,N,N],[6,"N609",E,E,N,N],[6,"U610",E,E,N,N],[6,"P610",E,E,N,N],[6,"N610",E,E,N,N],[6,"U611",E,E,N,N],[6,"P611",E,E,N,N],[6,"N611",E,E,N,N],[6,"U612",E,E,N,N],[6,"P612",E,E,N,N],[6,"N612",E,E,N,N],[6,"U613",E,E,N,N],[6,"P613",E,E,N,N],[6,"N613",E,E,N,N],[6,"U614",E,E,N,N],[6,"P614",E,E,N,N],[6,"N614",E,E,N,N],[6,"U615",E,E,N,N],[6,"P615",E,E,N,N],[6,"N615",E,E,N,N],[6,"U616",E,E,N,N],[6,"P616",E,E,N,N],[6,"N616",E,E,N,N],[6,"U617",E,E,N,N],[6,"P617",E,E,N,N],[6,"N617",E,E,N,N],[6,"U618",E,E,N,N],[6,"P618",E,E,N,N],[6,"N618",E,E,N,N],[6,"U619",E,E,N,N],[6,"P619",E,E,N,N],[6,"N619",E,E,N,N],[6,"U620",E,E,N,N],[6,"P620",E,E,N,N],[6,"N620",E,E,N,N],[6,"U621",E,E,N,N],[6,"P621",E,E,N,N],[6,"N621",E,E,N,N],[6,"U622",E,E,N,N],[6,"P622",E,E,N,N],[6,"N622",E,E,N,N],[6,"U623",E,E,N,N],[6,"P623",E,E,N,N],[6,"N623",E,E,N,N],[6,"U624",E,E,N,N],[6,"P624",E,E,N,N],[6,"N624",E,E,N,N],[6,"U625",E,E,N,N],[6,"P625",E,E,N,N],[6,"N625",E,E,N,N],[6,"U626",E,E,N,N],[6,"P626",E,E,N,N],[6,"N626",E,E,N,N],[6,"U627",E,E,N,N],[6,"P627",E,E,N,N],[6,"N627",E,E,N,N],[6,"U628",E,E,N,N],[6,"P628",E,E,N,N],[6,"N628",E,E,N,N],[6,"U629",E,E,N,N],[6,"P629",E,E,N,N],[6,"N629",E,E,N,N],[6,"U630",E,E,N,N],[6,"P630",E,E,N,N],[6,"N630",E,E,N,N],[6,"U631",E,E,N,N],[6,"P631",E,E,N,N],[6,"N631",E,E,N,N],[6,"U632",E,E,N,N],[6,"P632",E,E,N,N],[6,"N632",E,E,N,N],[6,"U633",E,E,N,N],[6,"P633",E,E,N,N],[6,"N633",E,E,N,N],[6,"U634",E,E,N,N],[6,"P634",E,E,N,N],[6,"N634",E,E,N,N],[6,"U635",E,E,N,N],[6,"P635",E,E,N,N],[6,"N635",E,E,N,N],[6,"U636",E,E,N,N],[6,"P636",E,E,N,N],[6,"N636",E,E,N,N],[6,"U637",E,E,N,N],[6,"P637",E,E,N,N],[6,"N637",E,E,N,N],[6,"U638",E,E,N,N],[6,"P638",E,E,N,N],[6,"N638",E,E,N,N],[6,"U639",E,E,N,N],[6,"P639",E,E,N,N],[6,"N639",E,E,N,N],[6,"U640",E,E,N,N],[6,"P640",E,E,N,N],[6,"N640",E,E,N,N],[6,"U641",E,E,N,N],[6,"P641",E,E,N,N],[6,"N641",E,E,N,N],[6,"U642",E,E,N,N],[6,"P642",E,E,N,N],[6,"N642",E,E,N,N],[6,"U643",E,E,N,N],[6,"P643",E,E,N,N],[6,"N643",E,E,N,N],[6,"U644",E,E,N,N],[6,"P644",E,E,N,N],[6,"N644",E,E,N,N],[6,"U645",E,E,N,N],[6,"P645",E,E,N,N],[6,"N645",E,E,N,N],[6,"U646",E,E,N,N],[6,"P646",E,E,N,N],[6,"N646",E,E,N,N],[6,"U647",E,E,N,N],[6,"P647",E,E,N,N],[6,"N647",E,E,N,N],[6,"U648",E,E,N,N],[6,"P648",E,E,N,N],[6,"N648",E,E,N,N],[6,"U649",E,E,N,N],[6,"P649",E,E,N,N],[6,"N649",E,E,N,N],[6,"U650",E,E,N,N],[6,"P650",E,E,N,N],[6,"N650",E,E,N,N],[6,"U651",E,E,N,N],[6,"P651",E,E,N,N],[6,"N651",E,E,N,N],[6,"U652",E,E,N,N],[6,"P652",E,E,N,N],[6,"N652",E,E,N,N],[6,"U653",E,E,N,N],[6,"P653",E,E,N,N],[6,"N653",E,E,N,N],[6,"U654",E,E,N,N],[6,"P654",E,E,N,N],[6,"N654",E,E,N,N],[6,"U655",E,E,N,N],[6,"P655",E,E,N,N],[6,"N655",E,E,N,N],[6,"U656",E,E,N,N],[6,"P656",E,E,N,N],[6,"N656",E,E,N,N],[6,"U657",E,E,N,N],[6,"P657",E,E,N,N],[6,"N657",E,E,N,N],[6,"U658",E,E,N,N],[6,"P658",E,E,N,N],[6,"N658",E,E,N,N],[6,"U659",E,E,N,N],[6,"P659",E,E,N,N],[6,"N659",E,E,N,N],[6,"U660",E,E,N,N],[6,"P660",E,E,N,N],[6,"N660",E,E,N,N],[6,"U661",E,E,N,N],[6,"P661",E,E,N,N],[6,"N661",E,E,N,N],[6,"U662",E,E,N,N],[6,"P662",E,E,N,N],[6,"N662",E,E,N,N],[6,"U663",E,E,N,N],[6,"P663",E,E,N,N],[6,"N663",E,E,N,N],[6,"U664",E,E,N,N],[6,"P664",E,E,N,N],[6,"N664",E,E,N,N],[6,"U665",E,E,N,N],[6,"P665",E,E,N,N],[6,"N665",E,E,N,N],[6,"U666",E,E,N,N],[6,"P666",E,E,N,N],[6,"N666",E,E,N,N],[6,"U667",E,E,N,N],[6,"P667",E,E,N,N],[6,"N667",E,E,N,N],[6,"U668",E,E,N,N],[6,"P668",E,E,N,N],[6,"N668",E,E,N,N],[6,"U669",E,E,N,N],[6,"P669",E,E,N,N],[6,"N669",E,E,N,N],[6,"U670",E,E,N,N],[6,"P670",E,E,N,N],[6,"N670",E,E,N,N],[6,"U671",E,E,N,N],[6,"P671",E,E,N,N],[6,"N671",E,E,N,N],[6,"U672",E,E,N,N],[6,"P672",E,E,N,N],[6,"N672",E,E,N,N],[6,"U673",E,E,N,N],[6,"P673",E,E,N,N],[6,"N673",E,E,N,N],[6,"U674",E,E,N,N],[6,"P674",E,E,N,N],[6,"N674",E,E,N,N],[6,"U675",E,E,N,N],[6,"P675",E,E,N,N],[6,"N675",E,E,N,N],[6,"U676",E,E,N,N],[6,"P676",E,E,N,N],[6,"N676",E,E,N,N],[6,"U677",E,E,N,N],[6,"P677",E,E,N,N],[6,"N677",E,E,N,N],[6,"U678",E,E,N,N],[6,"P678",E,E,N,N],[6,"N678",E,E,N,N],[6,"U679",E,E,N,N],[6,"P679",E,E,N,N],[6,"N679",E,E,N,N],[6,"U680",E,E,N,N],[6,"P680",E,E,N,N],[6,"N680",E,E,N,N],[6,"U681",E,E,N,N],[6,"P681",E,E,N,N],[6,"N681",E,E,N,N],[6,"U682",E,E,N,N],[6,"P682",E,E,N,N],[6,"N682",E,E,N,N],[6,"U683",E,E,N,N],[6,"P683",E,E,N,N],[6,"N683",E,E,N,N],[6,"U684",E,E,N,N],[6,"P684",E,E,N,N],[6,"N684",E,E,N,N],[6,"U685",E,E,N,N],[6,"P685",E,E,N,N],[6,"N685",E,E,N,N],[6,"U686",E,E,N,N],[6,"P686",E,E,N,N],[6,"N686",E,E,N,N],[6,"U687",E,E,N,N],[6,"P687",E,E,N,N],[6,"N687",E,E,N,N],[6,"U688",E,E,N,N],[6,"P688",E,E,N,N],[6,"N688",E,E,N,N],[6,"U689",E,E,N,N],[6,"P689",E,E,N,N],[6,"N689",E,E,N,N],[6,"U690",E,E,N,N],[6,"P690",E,E,N,N],[6,"N690",E,E,N,N],[6,"U691",E,E,N,N],[6,"P691",E,E,N,N],[6,"N691",E,E,N,N],[6,"U692",E,E,N,N],[6,"P692",E,E,N,N],[6,"N692",E,E,N,N],[6,"U693",E,E,N,N],[6,"P693",E,E,N,N],[6,"N693",E,E,N,N],[6,"U694",E,E,N,N],[6,"P694",E,E,N,N],[6,"N694",E,E,N,N],[6,"U695",E,E,N,N],[6,"P695",E,E,N,N],[6,"N695",E,E,N,N],[6,"U696",E,E,N,N],[6,"P696",E,E,N,N],[6,"N696",E,E,N,N],[6,"U697",E,E,N,N],[6,"P697",E,E,N,N],[6,"N697",E,E,N,N],[6,"U698",E,E,N,N],[6,"P698",E,E,N,N],[6,"N698",E,E,N,N],[6,"U699",E,E,N,N],[6,"P699",E,E,N,N],[6,"N699",E,E,N,N],[6,"U700",E,E,N,N],[6,"P700",E,E,N,N],[6,"N700",E,E,N,N],[6,"U701",E,E,N,N],[6,"P701",E,E,N,N],[6,"N701",E,E,N,N],[6,"U702",E,E,N,N],[6,"P702",E,E,N,N],[6,"N702",E,E,N,N],[6,"U703",E,E,N,N],[6,"P703",E,E,N,N],[6,"N703",E,E,N,N],[6,"U704",E,E,N,N],[6,"P704",E,E,N,N],[6,"N704",E,E,N,N],[6,"U705",E,E,N,N],[6,"P705",E,E,N,N],[6,"N705",E,E,N,N],[6,"U706",E,E,N,N],[6,"P706",E,E,N,N],[6,"N706",E,E,N,N],[6,"U707",E,E,N,N],[6,"P707",E,E,N,N],[6,"N707",E,E,N,N],[6,"U708",E,E,N,N],[6,"P708",E,E,N,N],[6,"N708",E,E,N,N],[6,"U709",E,E,N,N],[6,"P709",E,E,N,N],[6,"N709",E,E,N,N],[6,"U710",E,E,N,N],[6,"P710",E,E,N,N],[6,"N710",E,E,N,N],[6,"U711",E,E,N,N],[6,"P711",E,E,N,N],[6,"N711",E,E,N,N],[6,"U712",E,E,N,N],[6,"P712",E,E,N,N],[6,"N712",E,E,N,N],[6,"U713",E,E,N,N],[6,"P713",E,E,N,N],[6,"N713",E,E,N,N],[6,"U714",E,E,N,N],[6,"P714",E,E,N,N],[6,"N714",E,E,N,N],[6,"U715",E,E,N,N],[6,"P715",E,E,N,N],[6,"N715",E,E,N,N],[6,"U716",E,E,N,N],[6,"P716",E,E,N,N],[6,"N716",E,E,N,N],[6,"U717",E,E,N,N],[6,"P717",E,E,N,N],[6,"N717",E,E,N,N],[6,"U718",E,E,N,N],[6,"P718",E,E,N,N],[6,"N718",E,E,N,N],[6,"U719",E,E,N,N],[6,"P719",E,E,N,N],[6,"N719",E,E,N,N],[6,"U720",E,E,N,N],[6,"P720",E,E,N,N],[6,"N720",E,E,N,N],[6,"U721",E,E,N,N],[6,"P721",E,E,N,N],[6,"N721",E,E,N,N],[6,"U722",E,E,N,N],[6,"P722",E,E,N,N],[6,"N722",E,E,N,N],[6,"U723",E,E,N,N],[6,"P723",E,E,N,N],[6,"N723",E,E,N,N],[6,"U724",E,E,N,N],[6,"P724",E,E,N,N],[6,"N724",E,E,N,N],[6,"U725",E,E,N,N],[6,"P725",E,E,N,N],[6,"N725",E,E,N,N],[6,"U726",E,E,N,N],[6,"P726",E,E,N,N],[6,"N726",E,E,N,N],[6,"U727",E,E,N,N],[6,"P727",E,E,N,N],[6,"N727",E,E,N,N],[6,"U728",E,E,N,N],[6,"P728",E,E,N,N],[6,"N728",E,E,N,N],[6,"U729",E,E,N,N],[6,"P729",E,E,N,N],[6,"N729",E,E,N,N],[6,"U730",E,E,N,N],[6,"P730",E,E,N,N],[6,"N730",E,E,N,N],[6,"U731",E,E,N,N],[6,"P731",E,E,N,N],[6,"N731",E,E,N,N],[6,"U732",E,E,N,N],[6,"P732",E,E,N,N],[6,"N732",E,E,N,N],[6,"U733",E,E,N,N],[6,"P733",E,E,N,N],[6,"N733",E,E,N,N],[6,"U734",E,E,N,N],[6,"P734",E,E,N,N],[6,"N734",E,E,N,N],[6,"U735",E,E,N,N],[6,"P735",E,E,N,N],[6,"N735",E,E,N,N],[6,"U736",E,E,N,N],[6,"P736",E,E,N,N],[6,"N736",E,E,N,N],[6,"U737",E,E,N,N],[6,"P737",E,E,N,N],[6,"N737",E,E,N,N],[6,"U738",E,E,N,N],[6,"P738",E,E,N,N],[6,"N738",E,E,N,N],[6,"U739",E,E,N,N],[6,"P739",E,E,N,N],[6,"N739",E,E,N,N],[6,"U740",E,E,N,N],[6,"P740",E,E,N,N],[6,"N740",E,E,N,N],[6,"U741",E,E,N,N],[6,"P741",E,E,N,N],[6,"N741",E,E,N,N],[6,"U742",E,E,N,N],[6,"P742",E,E,N,N],[6,"N742",E,E,N,N],[6,"U743",E,E,N,N],[6,"P743",E,E,N,N],[6,"N743",E,E,N,N],[6,"U744",E,E,N,N],[6,"P744",E,E,N,N],[6,"N744",E,E,N,N],[6,"U745",E,E,N,N],[6,"P745",E,E,N,N],[6,"N745",E,E,N,N],[6,"U746",E,E,N,N],[6,"P746",E,E,N,N],[6,"N746",E,E,N,N],[6,"U747",E,E,N,N],[6,"P747",E,E,N,N],[6,"N747",E,E,N,N],[6,"U748",E,E,N,N],[6,"P748",E,E,N,N],[6,"N748",E,E,N,N],[6,"U749",E,E,N,N],[6,"P749",E,E,N,N],[6,"N749",E,E,N,N],[6,"U750",E,E,N,N],[6,"P750",E,E,N,N],[6,"N750",E,E,N,N],[6,"U751",E,E,N,N],[6,"P751",E,E,N,N],[6,"N751",E,E,N,N],[6,"U752",E,E,N,N],[6,"P752",E,E,N,N],[6,"N752",E,E,N,N],[6,"U753",E,E,N,N],[6,"P753",E,E,N,N],[6,"N753",E,E,N,N],[6,"U754",E,E,N,N],[6,"P754",E,E,N,N],[6,"N754",E,E,N,N],[6,"U755",E,E,N,N],[6,"P755",E,E,N,N],[6,"N755",E,E,N,N],[6,"U756",E,E,N,N],[6,"P756",E,E,N,N],[6,"N756",E,E,N,N],[6,"U757",E,E,N,N],[6,"P757",E,E,N,N],[6,"N757",E,E,N,N],[6,"U758",E,E,N,N],[6,"P758",E,E,N,N],[6,"N758",E,E,N,N],[6,"U759",E,E,N,N],[6,"P759",E,E,N,N],[6,"N759",E,E,N,N],[6,"U760",E,E,N,N],[6,"P760",E,E,N,N],[6,"N760",E,E,N,N],[6,"U761",E,E,N,N],[6,"P761",E,E,N,N],[6,"N761",E,E,N,N],[6,"U762",E,E,N,N],[6,"P762",E,E,N,N],[6,"N762",E,E,N,N],[6,"U763",E,E,N,N],[6,"P763",E,E,N,N],[6,"N763",E,E,N,N],[6,"U764",E,E,N,N],[6,"P764",E,E,N,N],[6,"N764",E,E,N,N],[6,"U765",E,E,N,N],[6,"P765",E,E,N,N],[6,"N765",E,E,N,N],[6,"U766",E,E,N,N],[6,"P766",E,E,N,N],[6,"N766",E,E,N,N],[6,"U767",E,E,N,N],[6,"P767",E,E,N,N],[6,"N767",E,E,N,N],[6,"U768",E,E,N,N],[6,"P768",E,E,N,N],[6,"N768",E,E,N,N],[6,"U769",E,E,N,N],[6,"P769",E,E,N,N],[6,"N769",E,E,N,N],[6,"U770",E,E,N,N],[6,"P770",E,E,N,N],[6,"N770",E,E,N,N],[6,"U771",E,E,N,N],[6,"P771",E,E,N,N],[6,"N771",E,E,N,N],[6,"U772",E,E,N,N],[6,"P772",E,E,N,N],[6,"N772",E,E,N,N],[6,"U773",E,E,N,N],[6,"P773",E,E,N,N],[6,"N773",E,E,N,N],[6,"U774",E,E,N,N],[6,"P774",E,E,N,N],[6,"N774",E,E,N,N],[6,"U775",E,E,N,N],[6,"P775",E,E,N,N],[6,"N775",E,E,N,N],[6,"U776",E,E,N,N],[6,"P776",E,E,N,N],[6,"N776",E,E,N,N],[6,"U777",E,E,N,N],[6,"P777",E,E,N,N],[6,"N777",E,E,N,N],[6,"U778",E,E,N,N],[6,"P778",E,E,N,N],[6,"N778",E,E,N,N],[6,"U779",E,E,N,N],[6,"P779",E,E,N,N],[6,"N779",E,E,N,N],[6,"U780",E,E,N,N],[6,"P780",E,E,N,N],[6,"N780",E,E,N,N],[6,"U781",E,E,N,N],[6,"P781",E,E,N,N],[6,"N781",E,E,N,N],[6,"U782",E,E,N,N],[6,"P782",E,E,N,N],[6,"N782",E,E,N,N],[6,"U783",E,E,N,N],[6,"P783",E,E,N,N],[6,"N783",E,E,N,N],[6,"U784",E,E,N,N],[6,"P784",E,E,N,N],[6,"N784",E,E,N,N],[6,"U785",E,E,N,N],[6,"P785",E,E,N,N],[6,"N785",E,E,N,N],[6,"U786",E,E,N,N],[6,"P786",E,E,N,N],[6,"N786",E,E,N,N],[6,"U787",E,E,N,N],[6,"P787",E,E,N,N],[6,"N787",E,E,N,N],[6,"U788",E,E,N,N],[6,"P788",E,E,N,N],[6,"N788",E,E,N,N],[6,"U789",E,E,N,N],[6,"P789",E,E,N,N],[6,"N789",E,E,N,N],[6,"U790",E,E,N,N],[6,"P790",E,E,N,N],[6,"N790",E,E,N,N],[6,"U791",E,E,N,N],[6,"P791",E,E,N,N],[6,"N791",E,E,N,N],[6,"U792",E,E,N,N],[6,"P792",E,E,N,N],[6,"N792",E,E,N,N],[6,"U793",E,E,N,N],[6,"P793",E,E,N,N],[6,"N793",E,E,N,N],[6,"U794",E,E,N,N],[6,"P794",E,E,N,N],[6,"N794",E,E,N,N],[6,"U795",E,E,N,N],[6,"P795",E,E,N,N],[6,"N795",E,E,N,N],[6,"U796",E,E,N,N],[6,"P796",E,E,N,N],[6,"N796",E,E,N,N],[6,"U797",E,E,N,N],[6,"P797",E,E,N,N],[6,"N797",E,E,N,N],[6,"U798",E,E,N,N],[6,"P798",E,E,N,N],[6,"N798",E,E,N,N],[6,"U799",E,E,N,N],[6,"P799",E,E,N,N],[6,"N799",E,E,N,N],[6,"U800",E,E,N,N],[6,"P800",E,E,N,N],[6,"N800",E,E,N,N],[6,"U801",E,E,N,N],[6,"P801",E,E,N,N],[6,"N801",E,E,N,N],[6,"U802",E,E,N,N],[6,"P802",E,E,N,N],[6,"N802",E,E,N,N],[6,"U803",E,E,N,N],[6,"P803",E,E,N,N],[6,"N803",E,E,N,N],[6,"U804",E,E,N,N],[6,"P804",E,E,N,N],[6,"N804",E,E,N,N],[6,"U805",E,E,N,N],[6,"P805",E,E,N,N],[6,"N805",E,E,N,N],[6,"U806",E,E,N,N],[6,"P806",E,E,N,N],[6,"N806",E,E,N,N],[6,"U807",E,E,N,N],[6,"P807",E,E,N,N],[6,"N807",E,E,N,N],[6,"U808",E,E,N,N],[6,"P808",E,E,N,N],[6,"N808",E,E,N,N],[6,"U809",E,E,N,N],[6,"P809",E,E,N,N],[6,"N809",E,E,N,N],[6,"U810",E,E,N,N],[6,"P810",E,E,N,N],[6,"N810",E,E,N,N],[6,"U811",E,E,N,N],[6,"P811",E,E,N,N],[6,"N811",E,E,N,N],[6,"U812",E,E,N,N],[6,"P812",E,E,N,N],[6,"N812",E,E,N,N],[6,"U813",E,E,N,N],[6,"P813",E,E,N,N],[6,"N813",E,E,N,N],[6,"U814",E,E,N,N],[6,"P814",E,E,N,N],[6,"N814",E,E,N,N],[6,"U815",E,E,N,N],[6,"P815",E,E,N,N],[6,"N815",E,E,N,N],[6,"U816",E,E,N,N],[6,"P816",E,E,N,N],[6,"N816",E,E,N,N],[6,"U817",E,E,N,N],[6,"P817",E,E,N,N],[6,"N817",E,E,N,N],[6,"U818",E,E,N,N],[6,"P818",E,E,N,N],[6,"N818",E,E,N,N],[6,"U819",E,E,N,N],[6,"P819",E,E,N,N],[6,"N819",E,E,N,N],[6,"U820",E,E,N,N],[6,"P820",E,E,N,N],[6,"N820",E,E,N,N],[6,"U821",E,E,N,N],[6,"P821",E,E,N,N],[6,"N821",E,E,N,N],[6,"U822",E,E,N,N],[6,"P822",E,E,N,N],[6,"N822",E,E,N,N],[6,"U823",E,E,N,N],[6,"P823",E,E,N,N],[6,"N823",E,E,N,N],[6,"U824",E,E,N,N],[6,"P824",E,E,N,N],[6,"N824",E,E,N,N],[6,"U825",E,E,N,N],[6,"P825",E,E,N,N],[6,"N825",E,E,N,N],[6,"U826",E,E,N,N],[6,"P826",E,E,N,N],[6,"N826",E,E,N,N],[6,"U827",E,E,N,N],[6,"P827",E,E,N,N],[6,"N827",E,E,N,N],[6,"U828",E,E,N,N],[6,"P828",E,E,N,N],[6,"N828",E,E,N,N],[6,"U829",E,E,N,N],[6,"P829",E,E,N,N],[6,"N829",E,E,N,N],[6,"U830",E,E,N,N],[6,"P830",E,E,N,N],[6,"N830",E,E,N,N],[6,"U831",E,E,N,N],[6,"P831",E,E,N,N],[6,"N831",E,E,N,N],[6,"U832",E,E,N,N],[6,"P832",E,E,N,N],[6,"N832",E,E,N,N],[6,"U833",E,E,N,N],[6,"P833",E,E,N,N],[6,"N833",E,E,N,N],[6,"U834",E,E,N,N],[6,"P834",E,E,N,N],[6,"N834",E,E,N,N],[6,"U835",E,E,N,N],[6,"P835",E,E,N,N],[6,"N835",E,E,N,N],[6,"U836",E,E,N,N],[6,"P836",E,E,N,N],[6,"N836",E,E,N,N],[6,"U837",E,E,N,N],[6,"P837",E,E,N,N],[6,"N837",E,E,N,N],[6,"U838",E,E,N,N],[6,"P838",E,E,N,N],[6,"N838",E,E,N,N],[6,"U839",E,E,N,N],[6,"P839",E,E,N,N],[6,"N839",E,E,N,N],[6,"U840",E,E,N,N],[6,"P840",E,E,N,N],[6,"N840",E,E,N,N],[6,"U841",E,E,N,N],[6,"P841",E,E,N,N],[6,"N841",E,E,N,N],[6,"U842",E,E,N,N],[6,"P842",E,E,N,N],[6,"N842",E,E,N,N],[6,"U843",E,E,N,N],[6,"P843",E,E,N,N],[6,"N843",E,E,N,N],[6,"U844",E,E,N,N],[6,"P844",E,E,N,N],[6,"N844",E,E,N,N],[6,"U845",E,E,N,N],[6,"P845",E,E,N,N],[6,"N845",E,E,N,N],[6,"U846",E,E,N,N],[6,"P846",E,E,N,N],[6,"N846",E,E,N,N],[6,"U847",E,E,N,N],[6,"P847",E,E,N,N],[6,"N847",E,E,N,N],[6,"U848",E,E,N,N],[6,"P848",E,E,N,N],[6,"N848",E,E,N,N],[6,"U849",E,E,N,N],[6,"P849",E,E,N,N],[6,"N849",E,E,N,N],[6,"U850",E,E,N,N],[6,"P850",E,E,N,N],[6,"N850",E,E,N,N],[6,"U851",E,E,N,N],[6,"P851",E,E,N,N],[6,"N851",E,E,N,N],[6,"U852",E,E,N,N],[6,"P852",E,E,N,N],[6,"N852",E,E,N,N],[6,"U853",E,E,N,N],[6,"P853",E,E,N,N],[6,"N853",E,E,N,N],[6,"U854",E,E,N,N],[6,"P854",E,E,N,N],[6,"N854",E,E,N,N],[6,"U855",E,E,N,N],[6,"P855",E,E,N,N],[6,"N855",E,E,N,N],[6,"U856",E,E,N,N],[6,"P856",E,E,N,N],[6,"N856",E,E,N,N],[6,"U857",E,E,N,N],[6,"P857",E,E,N,N],[6,"N857",E,E,N,N],[6,"U858",E,E,N,N],[6,"P858",E,E,N,N],[6,"N858",E,E,N,N],[6,"U859",E,E,N,N],[6,"P859",E,E,N,N],[6,"N859",E,E,N,N],[6,"U860",E,E,N,N],[6,"P860",E,E,N,N],[6,"N860",E,E,N,N],[6,"U861",E,E,N,N],[6,"P861",E,E,N,N],[6,"N861",E,E,N,N],[6,"U862",E,E,N,N],[6,"P862",E,E,N,N],[6,"N862",E,E,N,N],[6,"U863",E,E,N,N],[6,"P863",E,E,N,N],[6,"N863",E,E,N,N],[6,"U864",E,E,N,N],[6,"P864",E,E,N,N],[6,"N864",E,E,N,N],[6,"U865",E,E,N,N],[6,"P865",E,E,N,N],[6,"N865",E,E,N,N],[6,"U866",E,E,N,N],[6,"P866",E,E,N,N],[6,"N866",E,E,N,N],[6,"U867",E,E,N,N],[6,"P867",E,E,N,N],[6,"N867",E,E,N,N],[6,"U868",E,E,N,N],[6,"P868",E,E,N,N],[6,"N868",E,E,N,N],[6,"U869",E,E,N,N],[6,"P869",E,E,N,N],[6,"N869",E,E,N,N],[6,"U870",E,E,N,N],[6,"P870",E,E,N,N],[6,"N870",E,E,N,N],[6,"U871",E,E,N,N],[6,"P871",E,E,N,N],[6,"N871",E,E,N,N],[6,"U872",E,E,N,N],[6,"P872",E,E,N,N],[6,"N872",E,E,N,N],[6,"U873",E,E,N,N],[6,"P873",E,E,N,N],[6,"N873",E,E,N,N],[6,"U874",E,E,N,N],[6,"P874",E,E,N,N],[6,"N874",E,E,N,N],[6,"U875",E,E,N,N],[6,"P875",E,E,N,N],[6,"N875",E,E,N,N],[6,"U876",E,E,N,N],[6,"P876",E,E,N,N],[6,"N876",E,E,N,N],[6,"U877",E,E,N,N],[6,"P877",E,E,N,N],[6,"N877",E,E,N,N],[6,"U878",E,E,N,N],[6,"P878",E,E,N,N],[6,"N878",E,E,N,N],[6,"U879",E,E,N,N],[6,"P879",E,E,N,N],[6,"N879",E,E,N,N],[6,"U880",E,E,N,N],[6,"P880",E,E,N,N],[6,"N880",E,E,N,N],[6,"U881",E,E,N,N],[6,"P881",E,E,N,N],[6,"N881",E,E,N,N],[6,"U882",E,E,N,N],[6,"P882",E,E,N,N],[6,"N882",E,E,N,N],[6,"U883",E,E,N,N],[6,"P883",E,E,N,N],[6,"N883",E,E,N,N],[6,"U884",E,E,N,N],[6,"P884",E,E,N,N],[6,"N884",E,E,N,N],[6,"U885",E,E,N,N],[6,"P885",E,E,N,N],[6,"N885",E,E,N,N],[6,"U886",E,E,N,N],[6,"P886",E,E,N,N],[6,"N886",E,E,N,N],[6,"U887",E,E,N,N],[6,"P887",E,E,N,N],[6,"N887",E,E,N,N],[6,"U888",E,E,N,N],[6,"P888",E,E,N,N],[6,"N888",E,E,N,N],[6,"U889",E,E,N,N],[6,"P889",E,E,N,N],[6,"N889",E,E,N,N],[6,"U890",E,E,N,N],[6,"P890",E,E,N,N],[6,"N890",E,E,N,N],[6,"U891",E,E,N,N],[6,"P891",E,E,N,N],[6,"N891",E,E,N,N],[6,"U892",E,E,N,N],[6,"P892",E,E,N,N],[6,"N892",E,E,N,N],[6,"U893",E,E,N,N],[6,"P893",E,E,N,N],[6,"N893",E,E,N,N],[6,"U894",E,E,N,N],[6,"P894",E,E,N,N],[6,"N894",E,E,N,N],[6,"U895",E,E,N,N],[6,"P895",E,E,N,N],[6,"N895",E,E,N,N],[6,"U896",E,E,N,N],[6,"P896",E,E,N,N],[6,"N896",E,E,N,N],[6,"U897",E,E,N,N],[6,"P897",E,E,N,N],[6,"N897",E,E,N,N],[6,"U898",E,E,N,N],[6,"P898",E,E,N,N],[6,"N898",E,E,N,N],[6,"U899",E,E,N,N],[6,"P899",E,E,N,N],[6,"N899",E,E,N,N],[6,"U900",E,E,N,N],[6,"P900",E,E,N,N],[6,"N900",E,E,N,N],[6,"U901",E,E,N,N],[6,"P901",E,E,N,N],[6,"N901",E,E,N,N],[6,"U902",E,E,N,N],[6,"P902",E,E,N,N],[6,"N902",E,E,N,N],[6,"U903",E,E,N,N],[6,"P903",E,E,N,N],[6,"N903",E,E,N,N],[6,"U904",E,E,N,N],[6,"P904",E,E,N,N],[6,"N904",E,E,N,N],[6,"U905",E,E,N,N],[6,"P905",E,E,N,N],[6,"N905",E,E,N,N],[6,"U906",E,E,N,N],[6,"P906",E,E,N,N],[6,"N906",E,E,N,N],[6,"U907",E,E,N,N],[6,"P907",E,E,N,N],[6,"N907",E,E,N,N],[6,"U908",E,E,N,N],[6,"P908",E,E,N,N],[6,"N908",E,E,N,N],[6,"U909",E,E,N,N],[6,"P909",E,E,N,N],[6,"N909",E,E,N,N],[6,"U910",E,E,N,N],[6,"P910",E,E,N,N],[6,"N910",E,E,N,N],[6,"U911",E,E,N,N],[6,"P911",E,E,N,N],[6,"N911",E,E,N,N],[6,"U912",E,E,N,N],[6,"P912",E,E,N,N],[6,"N912",E,E,N,N],[6,"U913",E,E,N,N],[6,"P913",E,E,N,N],[6,"N913",E,E,N,N],[6,"U914",E,E,N,N],[6,"P914",E,E,N,N],[6,"N914",E,E,N,N],[6,"U915",E,E,N,N],[6,"P915",E,E,N,N],[6,"N915",E,E,N,N],[6,"U916",E,E,N,N],[6,"P916",E,E,N,N],[6,"N916",E,E,N,N],[6,"U917",E,E,N,N],[6,"P917",E,E,N,N],[6,"N917",E,E,N,N],[6,"U918",E,E,N,N],[6,"P918",E,E,N,N],[6,"N918",E,E,N,N],[6,"U919",E,E,N,N],[6,"P919",E,E,N,N],[6,"N919",E,E,N,N],[6,"U920",E,E,N,N],[6,"P920",E,E,N,N],[6,"N920",E,E,N,N],[6,"U921",E,E,N,N],[6,"P921",E,E,N,N],[6,"N921",E,E,N,N],[6,"U922",E,E,N,N],[6,"P922",E,E,N,N],[6,"N922",E,E,N,N],[6,"U923",E,E,N,N],[6,"P923",E,E,N,N],[6,"N923",E,E,N,N],[6,"U924",E,E,N,N],[6,"P924",E,E,N,N],[6,"N924",E,E,N,N],[6,"U925",E,E,N,N],[6,"P925",E,E,N,N],[6,"N925",E,E,N,N],[6,"U926",E,E,N,N],[6,"P926",E,E,N,N],[6,"N926",E,E,N,N],[6,"U927",E,E,N,N],[6,"P927",E,E,N,N],[6,"N927",E,E,N,N],[6,"U928",E,E,N,N],[6,"P928",E,E,N,N],[6,"N928",E,E,N,N],[6,"U929",E,E,N,N],[6,"P929",E,E,N,N],[6,"N929",E,E,N,N],[6,"U930",E,E,N,N],[6,"P930",E,E,N,N],[6,"N930",E,E,N,N],[6,"U931",E,E,N,N],[6,"P931",E,E,N,N],[6,"N931",E,E,N,N],[6,"U932",E,E,N,N],[6,"P932",E,E,N,N],[6,"N932",E,E,N,N],[6,"U933",E,E,N,N],[6,"P933",E,E,N,N],[6,"N933",E,E,N,N],[6,"U934",E,E,N,N],[6,"P934",E,E,N,N],[6,"N934",E,E,N,N],[6,"U935",E,E,N,N],[6,"P935",E,E,N,N],[6,"N935",E,E,N,N],[6,"U936",E,E,N,N],[6,"P936",E,E,N,N],[6,"N936",E,E,N,N],[6,"U937",E,E,N,N],[6,"P937",E,E,N,N],[6,"N937",E,E,N,N],[6,"U938",E,E,N,N],[6,"P938",E,E,N,N],[6,"N938",E,E,N,N],[6,"U939",E,E,N,N],[6,"P939",E,E,N,N],[6,"N939",E,E,N,N],[6,"U940",E,E,N,N],[6,"P940",E,E,N,N],[6,"N940",E,E,N,N],[6,"U941",E,E,N,N],[6,"P941",E,E,N,N],[6,"N941",E,E,N,N],[6,"U942",E,E,N,N],[6,"P942",E,E,N,N],[6,"N942",E,E,N,N],[6,"U943",E,E,N,N],[6,"P943",E,E,N,N],[6,"N943",E,E,N,N],[6,"U944",E,E,N,N],[6,"P944",E,E,N,N],[6,"N944",E,E,N,N],[6,"U945",E,E,N,N],[6,"P945",E,E,N,N],[6,"N945",E,E,N,N],[6,"U946",E,E,N,N],[6,"P946",E,E,N,N],[6,"N946",E,E,N,N],[6,"U947",E,E,N,N],[6,"P947",E,E,N,N],[6,"N947",E,E,N,N],[6,"U948",E,E,N,N],[6,"P948",E,E,N,N],[6,"N948",E,E,N,N],[6,"U949",E,E,N,N],[6,"P949",E,E,N,N],[6,"N949",E,E,N,N],[6,"U950",E,E,N,N],[6,"P950",E,E,N,N],[6,"N950",E,E,N,N],[6,"U951",E,E,N,N],[6,"P951",E,E,N,N],[6,"N951",E,E,N,N],[6,"U952",E,E,N,N],[6,"P952",E,E,N,N],[6,"N952",E,E,N,N],[6,"U953",E,E,N,N],[6,"P953",E,E,N,N],[6,"N953",E,E,N,N],[6,"U954",E,E,N,N],[6,"P954",E,E,N,N],[6,"N954",E,E,N,N],[6,"U955",E,E,N,N],[6,"P955",E,E,N,N],[6,"N955",E,E,N,N],[6,"U956",E,E,N,N],[6,"P956",E,E,N,N],[6,"N956",E,E,N,N],[6,"U957",E,E,N,N],[6,"P957",E,E,N,N],[6,"N957",E,E,N,N],[6,"U958",E,E,N,N],[6,"P958",E,E,N,N],[6,"N958",E,E,N,N],[6,"U959",E,E,N,N],[6,"P959",E,E,N,N],[6,"N959",E,E,N,N],[6,"U960",E,E,N,N],[6,"P960",E,E,N,N],[6,"N960",E,E,N,N],[6,"U961",E,E,N,N],[6,"P961",E,E,N,N],[6,"N961",E,E,N,N],[6,"U962",E,E,N,N],[6,"P962",E,E,N,N],[6,"N962",E,E,N,N],[6,"U963",E,E,N,N],[6,"P963",E,E,N,N],[6,"N963",E,E,N,N],[6,"U964",E,E,N,N],[6,"P964",E,E,N,N],[6,"N964",E,E,N,N],[6,"U965",E,E,N,N],[6,"P965",E,E,N,N],[6,"N965",E,E,N,N],[6,"U966",E,E,N,N],[6,"P966",E,E,N,N],[6,"N966",E,E,N,N],[6,"U967",E,E,N,N],[6,"P967",E,E,N,N],[6,"N967",E,E,N,N],[6,"U968",E,E,N,N],[6,"P968",E,E,N,N],[6,"N968",E,E,N,N],[6,"U969",E,E,N,N],[6,"P969",E,E,N,N],[6,"N969",E,E,N,N],[6,"U970",E,E,N,N],[6,"P970",E,E,N,N],[6,"N970",E,E,N,N],[6,"U971",E,E,N,N],[6,"P971",E,E,N,N],[6,"N971",E,E,N,N],[6,"U972",E,E,N,N],[6,"P972",E,E,N,N],[6,"N972",E,E,N,N],[6,"U973",E,E,N,N],[6,"P973",E,E,N,N],[6,"N973",E,E,N,N],[6,"U974",E,E,N,N],[6,"P974",E,E,N,N],[6,"N974",E,E,N,N],[6,"U975",E,E,N,N],[6,"P975",E,E,N,N],[6,"N975",E,E,N,N],[6,"U976",E,E,N,N],[6,"P976",E,E,N,N],[6,"N976",E,E,N,N],[6,"U977",E,E,N,N],[6,"P977",E,E,N,N],[6,"N977",E,E,N,N],[6,"U978",E,E,N,N],[6,"P978",E,E,N,N],[6,"N978",E,E,N,N],[6,"U979",E,E,N,N],[6,"P979",E,E,N,N],[6,"N979",E,E,N,N],[6,"U980",E,E,N,N],[6,"P980",E,E,N,N],[6,"N980",E,E,N,N],[6,"U981",E,E,N,N],[6,"P981",E,E,N,N],[6,"N981",E,E,N,N],[6,"U982",E,E,N,N],[6,"P982",E,E,N,N],[6,"N982",E,E,N,N],[6,"U983",E,E,N,N],[6,"P983",E,E,N,N],[6,"N983",E,E,N,N],[6,"U984",E,E,N,N],[6,"P984",E,E,N,N],[6,"N984",E,E,N,N],[6,"U985",E,E,N,N],[6,"P985",E,E,N,N],[6,"N985",E,E,N,N],[6,"U986",E,E,N,N],[6,"P986",E,E,N,N],[6,"N986",E,E,N,N],[6,"U987",E,E,N,N],[6,"P987",E,E,N,N],[6,"N987",E,E,N,N],[6,"U988",E,E,N,N],[6,"P988",E,E,N,N],[6,"N988",E,E,N,N],[6,"U989",E,E,N,N],[6,"P989",E,E,N,N],[6,"N989",E,E,N,N],[6,"U990",E,E,N,N],[6,"P990",E,E,N,N],[6,"N990",E,E,N,N],[6,"U991",E,E,N,N],[6,"P991",E,E,N,N],[6,"N991",E,E,N,N],[6,"U992",E,E,N,N],[6,"P992",E,E,N,N],[6,"N992",E,E,N,N],[6,"U993",E,E,N,N],[6,"P993",E,E,N,N],[6,"N993",E,E,N,N],[6,"U994",E,E,N,N],[6,"P994",E,E,N,N],[6,"N994",E,E,N,N],[6,"U995",E,E,N,N],[6,"P995",E,E,N,N],[6,"N995",E,E,N,N],[6,"U996",E,E,N,N],[6,"P996",E,E,N,N],[6,"N996",E,E,N,N],[6,"U997",E,E,N,N],[6,"P997",E,E,N,N],[6,"N997",E,E,N,N],[6,"U998",E,E,N,N],[6,"P998",E,E,N,N],[6,"N998",E,E,N,N],[6,"U999",E,E,N,N],[6,"P999",E,E,N,N],[6,"N999",E,E,N,N],[6,"U1000",E,E,N,N],[6,"P1000",E,E,N,N],[6,"N1000",E,E,N,N],[6,"U1001",E,E,N,N],[6,"P1001",E,E,N,N],[6,"N1001",E,E,N,N],[6,"U1002",E,E,N,N],[6,"P1002",E,E,N,N],[6,"N1002",E,E,N,N],[6,"U1003",E,E,N,N],[6,"P1003",E,E,N,N],[6,"N1003",E,E,N,N],[6,"U1004",E,E,N,N],[6,"P1004",E,E,N,N],[6,"N1004",E,E,N,N],[6,"U1005",E,E,N,N],[6,"P1005",E,E,N,N],[6,"N1005",E,E,N,N],[6,"U1006",E,E,N,N],[6,"P1006",E,E,N,N],[6,"N1006",E,E,N,N],[6,"U1007",E,E,N,N],[6,"P1007",E,E,N,N],[6,"N1007",E,E,N,N],[6,"U1008",E,E,N,N],[6,"P1008",E,E,N,N],[6,"N1008",E,E,N,N],[6,"U1009",E,E,N,N],[6,"P1009",E,E,N,N],[6,"N1009",E,E,N,N],[6,"U1010",E,E,N,N],[6,"P1010",E,E,N,N],[6,"N1010",E,E,N,N],[6,"U1011",E,E,N,N],[6,"P1011",E,E,N,N],[6,"N1011",E,E,N,N],[6,"U1012",E,E,N,N],[6,"P1012",E,E,N,N],[6,"N1012",E,E,N,N],[6,"U1013",E,E,N,N],[6,"P1013",E,E,N,N],[6,"N1013",E,E,N,N],[6,"U1014",E,E,N,N],[6,"P1014",E,E,N,N],[6,"N1014",E,E,N,N],[6,"U1015",E,E,N,N],[6,"P1015",E,E,N,N],[6,"N1015",E,E,N,N],[6,"U1016",E,E,N,N],[6,"P1016",E,E,N,N],[6,"N1016",E,E,N,N],[6,"U1017",E,E,N,N],[6,"P1017",E,E,N,N],[6,"N1017",E,E,N,N],[6,"U1018",E,E,N,N],[6,"P1018",E,E,N,N],[6,"N1018",E,E,N,N],[6,"U1019",E,E,N,N],[6,"P1019",E,E,N,N],[6,"N1019",E,E,N,N],[6,"U1020",E,E,N,N],[6,"P1020",E,E,N,N],[6,"N1020",E,E,N,N],[6,"U1021",E,E,N,N],[6,"P1021",E,E,N,N],[6,"N1021",E,E,N,N],[6,"U1022",E,E,N,N],[6,"P1022",E,E,N,N],[6,"N1022",E,E,N,N],[6,"U1023",E,E,N,N],[6,"P1023",E,E,N,N],[6,"N1023",E,E,N,N],[6,"U1024",E,E,N,N],[6,"P1024",E,E,N,N],[6,"N1024",E,E,N,N],[6,"U2048",E,E,N,N],[6,"P2048",E,E,N,N],[6,"N2048",E,E,N,N],[6,"U4096",E,E,N,N],[6,"P4096",E,E,N,N],[6,"N4096",E,E,N,N],[6,"U8192",E,E,N,N],[6,"P8192",E,E,N,N],[6,"N8192",E,E,N,N],[6,"U16384",E,E,N,N],[6,"P16384",E,E,N,N],[6,"N16384",E,E,N,N],[6,"U32768",E,E,N,N],[6,"P32768",E,E,N,N],[6,"N32768",E,E,N,N],[6,"U65536",E,E,N,N],[6,"P65536",E,E,N,N],[6,"N65536",E,E,N,N],[6,"U131072",E,E,N,N],[6,"P131072",E,E,N,N],[6,"N131072",E,E,N,N],[6,"U262144",E,E,N,N],[6,"P262144",E,E,N,N],[6,"N262144",E,E,N,N],[6,"U524288",E,E,N,N],[6,"P524288",E,E,N,N],[6,"N524288",E,E,N,N],[6,"U1048576",E,E,N,N],[6,"P1048576",E,E,N,N],[6,"N1048576",E,E,N,N],[6,"U2097152",E,E,N,N],[6,"P2097152",E,E,N,N],[6,"N2097152",E,E,N,N],[6,"U4194304",E,E,N,N],[6,"P4194304",E,E,N,N],[6,"N4194304",E,E,N,N],[6,"U8388608",E,E,N,N],[6,"P8388608",E,E,N,N],[6,"N8388608",E,E,N,N],[6,"U16777216",E,E,N,N],[6,"P16777216",E,E,N,N],[6,"N16777216",E,E,N,N],[6,"U33554432",E,E,N,N],[6,"P33554432",E,E,N,N],[6,"N33554432",E,E,N,N],[6,"U67108864",E,E,N,N],[6,"P67108864",E,E,N,N],[6,"N67108864",E,E,N,N],[6,"U134217728",E,E,N,N],[6,"P134217728",E,E,N,N],[6,"N134217728",E,E,N,N],[6,"U268435456",E,E,N,N],[6,"P268435456",E,E,N,N],[6,"N268435456",E,E,N,N],[6,"U536870912",E,E,N,N],[6,"P536870912",E,E,N,N],[6,"N536870912",E,E,N,N],[6,"U1073741824",E,E,N,N],[6,"P1073741824",E,E,N,N],[6,"N1073741824",E,E,N,N],[6,"U2147483648",E,E,N,N],[6,"P2147483648",E,E,N,N],[6,"N2147483648",E,E,N,N],[6,"U4294967296",E,E,N,N],[6,"P4294967296",E,E,N,N],[6,"N4294967296",E,E,N,N],[6,"U8589934592",E,E,N,N],[6,"P8589934592",E,E,N,N],[6,"N8589934592",E,E,N,N],[6,"U17179869184",E,E,N,N],[6,"P17179869184",E,E,N,N],[6,"N17179869184",E,E,N,N],[6,"U34359738368",E,E,N,N],[6,"P34359738368",E,E,N,N],[6,"N34359738368",E,E,N,N],[6,"U68719476736",E,E,N,N],[6,"P68719476736",E,E,N,N],[6,"N68719476736",E,E,N,N],[6,"U137438953472",E,E,N,N],[6,"P137438953472",E,E,N,N],[6,"N137438953472",E,E,N,N],[6,"U274877906944",E,E,N,N],[6,"P274877906944",E,E,N,N],[6,"N274877906944",E,E,N,N],[6,"U549755813888",E,E,N,N],[6,"P549755813888",E,E,N,N],[6,"N549755813888",E,E,N,N],[6,"U1099511627776",E,E,N,N],[6,"P1099511627776",E,E,N,N],[6,"N1099511627776",E,E,N,N],[6,"U2199023255552",E,E,N,N],[6,"P2199023255552",E,E,N,N],[6,"N2199023255552",E,E,N,N],[6,"U4398046511104",E,E,N,N],[6,"P4398046511104",E,E,N,N],[6,"N4398046511104",E,E,N,N],[6,"U8796093022208",E,E,N,N],[6,"P8796093022208",E,E,N,N],[6,"N8796093022208",E,E,N,N],[6,"U17592186044416",E,E,N,N],[6,"P17592186044416",E,E,N,N],[6,"N17592186044416",E,E,N,N],[6,"U35184372088832",E,E,N,N],[6,"P35184372088832",E,E,N,N],[6,"N35184372088832",E,E,N,N],[6,"U70368744177664",E,E,N,N],[6,"P70368744177664",E,E,N,N],[6,"N70368744177664",E,E,N,N],[6,"U140737488355328",E,E,N,N],[6,"P140737488355328",E,E,N,N],[6,"N140737488355328",E,E,N,N],[6,"U281474976710656",E,E,N,N],[6,"P281474976710656",E,E,N,N],[6,"N281474976710656",E,E,N,N],[6,"U562949953421312",E,E,N,N],[6,"P562949953421312",E,E,N,N],[6,"N562949953421312",E,E,N,N],[6,"U1125899906842624",E,E,N,N],[6,"P1125899906842624",E,E,N,N],[6,"N1125899906842624",E,E,N,N],[6,"U2251799813685248",E,E,N,N],[6,"P2251799813685248",E,E,N,N],[6,"N2251799813685248",E,E,N,N],[6,"U4503599627370496",E,E,N,N],[6,"P4503599627370496",E,E,N,N],[6,"N4503599627370496",E,E,N,N],[6,"U9007199254740992",E,E,N,N],[6,"P9007199254740992",E,E,N,N],[6,"N9007199254740992",E,E,N,N],[6,"U18014398509481984",E,E,N,N],[6,"P18014398509481984",E,E,N,N],[6,"N18014398509481984",E,E,N,N],[6,"U36028797018963968",E,E,N,N],[6,"P36028797018963968",E,E,N,N],[6,"N36028797018963968",E,E,N,N],[6,"U72057594037927936",E,E,N,N],[6,"P72057594037927936",E,E,N,N],[6,"N72057594037927936",E,E,N,N],[6,"U144115188075855872",E,E,N,N],[6,"P144115188075855872",E,E,N,N],[6,"N144115188075855872",E,E,N,N],[6,"U288230376151711744",E,E,N,N],[6,"P288230376151711744",E,E,N,N],[6,"N288230376151711744",E,E,N,N],[6,"U576460752303423488",E,E,N,N],[6,"P576460752303423488",E,E,N,N],[6,"N576460752303423488",E,E,N,N],[6,"U1152921504606846976",E,E,N,N],[6,"P1152921504606846976",E,E,N,N],[6,"N1152921504606846976",E,E,N,N],[6,"U2305843009213693952",E,E,N,N],[6,"P2305843009213693952",E,E,N,N],[6,"N2305843009213693952",E,E,N,N],[6,"U4611686018427387904",E,E,N,N],[6,"P4611686018427387904",E,E,N,N],[6,"N4611686018427387904",E,E,N,N],[6,"U9223372036854775808",E,E,N,N],[6,"U10000",E,E,N,N],[6,"P10000",E,E,N,N],[6,"N10000",E,E,N,N],[6,"U100000",E,E,N,N],[6,"P100000",E,E,N,N],[6,"N100000",E,E,N,N],[6,"U1000000",E,E,N,N],[6,"P1000000",E,E,N,N],[6,"N1000000",E,E,N,N],[6,"U10000000",E,E,N,N],[6,"P10000000",E,E,N,N],[6,"N10000000",E,E,N,N],[6,"U100000000",E,E,N,N],[6,"P100000000",E,E,N,N],[6,"N100000000",E,E,N,N],[6,"U1000000000",E,E,N,N],[6,"P1000000000",E,E,N,N],[6,"N1000000000",E,E,N,N],[6,"U10000000000",E,E,N,N],[6,"P10000000000",E,E,N,N],[6,"N10000000000",E,E,N,N],[6,"U100000000000",E,E,N,N],[6,"P100000000000",E,E,N,N],[6,"N100000000000",E,E,N,N],[6,"U1000000000000",E,E,N,N],[6,"P1000000000000",E,E,N,N],[6,"N1000000000000",E,E,N,N],[6,"U10000000000000",E,E,N,N],[6,"P10000000000000",E,E,N,N],[6,"N10000000000000",E,E,N,N],[6,"U100000000000000",E,E,N,N],[6,"P100000000000000",E,E,N,N],[6,"N100000000000000",E,E,N,N],[6,"U1000000000000000",E,E,N,N],[6,"P1000000000000000",E,E,N,N],[6,"N1000000000000000",E,E,N,N],[6,"U10000000000000000",E,E,N,N],[6,"P10000000000000000",E,E,N,N],[6,"N10000000000000000",E,E,N,N],[6,"U100000000000000000",E,E,N,N],[6,"P100000000000000000",E,E,N,N],[6,"N100000000000000000",E,E,N,N],[6,"U1000000000000000000",E,E,N,N],[6,"P1000000000000000000",E,E,N,N],[6,"N1000000000000000000",E,E,N,N],[6,"U10000000000000000000",E,E,N,N],[0,"bit",R[959],"Type-level bits.",N,N],[3,"B0",R[963],"The type-level bit 0.",N,N],[3,"B1",E,"The type-level bit 1.",N,N],[11,"new",E,R[956],0,[[],["b0"]]],[11,"new",E,R[956],1,[[],["b1"]]],[0,"uint",R[959],"Type-level unsigned integers.",N,N],[3,"UTerm",R[969],"The terminating type for `UInt`; it always comes after the…",N,N],[3,"UInt",E,"`UInt` is defined recursively, where `B` is the least…",N,N],[6,"GetBitOut",E,E,N,N],[6,"SetBitOut",E,"Alias for the result of calling `SetBit`: `SetBitOut<N, I,…",N,N],[8,"GetBit",E,E,N,N],[16,"Output",E,E,2,N],[8,"SetBit",E,"A type operator that, when implemented for unsigned…",N,N],[16,"Output",E,E,3,N],[11,"new",E,R[957],4,[[],["uterm"]]],[11,"new",E,R[957],5,[[],["uint"]]],[0,"int",R[959],"Type-level signed integers.",N,N],[3,"PInt",R[971],"Type-level signed integers with positive sign.",N,N],[3,"NInt",E,"Type-level signed integers with negative sign.",N,N],[3,"Z0",E,"The type-level signed integer 0.",N,N],[11,"new",E,R[958],6,[[],["pint"]]],[11,"new",E,R[958],7,[[],["nint"]]],[11,"new",E,"Instantiates a singleton representing the integer 0.",8,[[],["z0"]]],[0,"marker_traits",R[959],"All of the marker traits used in typenum.",N,N],[8,"NonZero","typenum::marker_traits","A marker trait to designate that a type is not zero. All…",N,N],[8,"Ord",E,"A Marker trait for the types `Greater`, `Equal`, and `Less`.",N,N],[10,R[974],E,E,9,[[],[R[50]]]],[8,"Bit",E,"The marker trait for compile time bits.",N,N],[18,"U8",E,E,10,N],[18,"BOOL",E,E,10,N],[10,"to_u8",E,E,10,[[],["u8"]]],[10,"to_bool",E,E,10,[[],["bool"]]],[8,"Unsigned",E,"The marker trait for compile time unsigned integers.",N,N],[18,"U8",E,E,11,N],[18,"U16",E,E,11,N],[18,"U32",E,E,11,N],[18,"U64",E,E,11,N],[18,"USIZE",E,E,11,N],[18,"I8",E,E,11,N],[18,"I16",E,E,11,N],[18,"I32",E,E,11,N],[18,"I64",E,E,11,N],[18,"ISIZE",E,E,11,N],[10,"to_u8",E,E,11,[[],["u8"]]],[10,"to_u16",E,E,11,[[],["u16"]]],[10,"to_u32",E,E,11,[[],["u32"]]],[10,"to_u64",E,E,11,[[],["u64"]]],[10,R[976],E,E,11,[[],["usize"]]],[10,"to_i8",E,E,11,[[],["i8"]]],[10,"to_i16",E,E,11,[[],["i16"]]],[10,"to_i32",E,E,11,[[],["i32"]]],[10,"to_i64",E,E,11,[[],["i64"]]],[10,R[975],E,E,11,[[],["isize"]]],[8,"Integer",E,"The marker trait for compile time signed integers.",N,N],[18,"I8",E,E,12,N],[18,"I16",E,E,12,N],[18,"I32",E,E,12,N],[18,"I64",E,E,12,N],[18,"ISIZE",E,E,12,N],[10,"to_i8",E,E,12,[[],["i8"]]],[10,"to_i16",E,E,12,[[],["i16"]]],[10,"to_i32",E,E,12,[[],["i32"]]],[10,"to_i64",E,E,12,[[],["i64"]]],[10,R[975],E,E,12,[[],["isize"]]],[8,"TypeArray",E,"The marker trait for type-level arrays of type-level…",N,N],[8,"PowerOfTwo",E,"The marker trait for type-level numbers which are a power…",N,N],[0,"type_operators",R[959],"Useful type operators that are not defined in `core::ops`.",N,N],[8,"Same","typenum::type_operators","A type operator that ensures that `Rhs` is the same as…",N,N],[16,"Output",E,"Should always be `Self`",13,N],[8,"Abs",E,"A type operator that returns the absolute value.",N,N],[16,"Output",E,"The absolute value.",14,N],[8,"Pow",E,"A type operator that provides exponentiation by repeated…",N,N],[16,"Output",E,"The result of the exponentiation.",15,N],[10,"powi",E,R[960],15,[[["exp"]]]],[8,"Cmp",E,"A type operator for comparing `Self` and `Rhs`. It…",N,N],[16,"Output",E,"The result of the comparison. It should only ever be one…",16,N],[8,"Len",E,"A type operator that gives the length of an `Array` or the…",N,N],[16,"Output",E,"The length as a type-level unsigned integer.",17,N],[10,"len",E,R[960],17,[[["self"]]]],[8,R[977],E,"Division as a partial function. This type operator…",N,N],[16,"Output",E,"The type of the result of the division",18,N],[10,R[970],E,"Method for performing the division",18,[[["rhs"]]]],[8,"Min",E,"A type operator that returns the minimum of `Self` and…",N,N],[16,"Output",E,"The type of the minimum of `Self` and `Rhs`",19,N],[10,"min",E,"Method returning the minimum",19,[[["rhs"]]]],[8,"Max",E,"A type operator that returns the maximum of `Self` and…",N,N],[16,"Output",E,"The type of the maximum of `Self` and `Rhs`",20,N],[10,"max",E,"Method returning the maximum",20,[[["rhs"]]]],[8,"IsLess",E,"A type operator that returns `True` if `Self < Rhs`,…",N,N],[16,"Output",E,R[961],21,N],[10,R[972],E,R[962],21,[[["rhs"]]]],[8,"IsEqual",E,"A type operator that returns `True` if `Self == Rhs`,…",N,N],[16,"Output",E,R[961],22,N],[10,R[964],E,R[962],22,[[["rhs"]]]],[8,R[978],E,"A type operator that returns `True` if `Self > Rhs`,…",N,N],[16,"Output",E,R[961],23,N],[10,R[965],E,R[962],23,[[["rhs"]]]],[8,R[979],E,"A type operator that returns `True` if `Self <= Rhs`,…",N,N],[16,"Output",E,R[961],24,N],[10,R[966],E,R[962],24,[[["rhs"]]]],[8,R[980],E,"A type operator that returns `True` if `Self != Rhs`,…",N,N],[16,"Output",E,R[961],25,N],[10,R[967],E,R[962],25,[[["rhs"]]]],[8,R[981],E,"A type operator that returns `True` if `Self >= Rhs`,…",N,N],[16,"Output",E,R[961],26,N],[10,R[968],E,R[962],26,[[["rhs"]]]],[0,"operator_aliases",R[959],"Aliases for the type operators used in this crate. Their…",N,N],[6,"And","typenum::operator_aliases","Alias for the associated type of `BitAnd`: `And<A, B> = <A…",N,N],[6,"Or",E,"Alias for the associated type of `BitOr`: `Or<A, B> = <A…",N,N],[6,"Xor",E,"Alias for the associated type of `BitXor`: `Xor<A, B> = <A…",N,N],[6,"Shleft",E,"Alias for the associated type of `Shl`: `Shleft<A, B> = <A…",N,N],[6,"Shright",E,"Alias for the associated type of `Shr`: `Shright<A, B> =…",N,N],[6,"Sum",E,"Alias for the associated type of `Add`: `Sum<A, B> = <A as…",N,N],[6,"Diff",E,"Alias for the associated type of `Sub`: `Diff<A, B> = <A…",N,N],[6,"Prod",E,"Alias for the associated type of `Mul`: `Prod<A, B> = <A…",N,N],[6,"Quot",E,"Alias for the associated type of `Div`: `Quot<A, B> = <A…",N,N],[6,"Mod",E,"Alias for the associated type of `Rem`: `Mod<A, B> = <A as…",N,N],[6,"PartialQuot",E,"Alias for the associated type of `PartialDiv`:…",N,N],[6,"Negate",E,"Alias for the associated type of `Neg`: `Negate<A> = <A as…",N,N],[6,"AbsVal",E,"Alias for the associated type of `Abs`: `AbsVal<A> = <A as…",N,N],[6,"Exp",E,"Alias for the associated type of `Pow`: `Exp<A, B> = <A as…",N,N],[6,"Add1",E,"Alias to make it easy to add 1: `Add1<A> = <A as…",N,N],[6,"Sub1",E,"Alias to make it easy to subtract 1: `Sub1<A> = <A as…",N,N],[6,"Square",E,"Alias to make it easy to square. `Square<A> = <A as…",N,N],[6,"Cube",E,"Alias to make it easy to cube. `Cube<A> = <Square<A> as…",N,N],[6,"Compare",E,"Alias for the associated type of `Cmp`: `Compare<A, B> =…",N,N],[6,"Length",E,"Alias for the associated type of `Len`: `Length<A> = <A as…",N,N],[6,"Minimum",E,"Alias for the associated type of `Min`: `Minimum<A, B> =…",N,N],[6,"Maximum",E,"Alias for the associated type of `Max`: `Maximum<A, B> =…",N,N],[6,"Le",E,"Alias for the associated type of `IsLess`: `Le<A, B> = <A…",N,N],[6,"Eq",E,"Alias for the associated type of `IsEqual`: `Eq<A, B> = <A…",N,N],[6,"Gr",E,"Alias for the associated type of `IsGreater`: `Gr<A, B> =…",N,N],[6,"GrEq",E,"Alias for the associated type of `IsGreaterOrEqual`:…",N,N],[6,"LeEq",E,"Alias for the associated type of `IsLessOrEqual`: `LeEq<A,…",N,N],[6,"NotEq",E,"Alias for the associated type of `IsNotEqual`: `NotEq<A,…",N,N],[0,"array",R[959],"A type-level array of type-level numbers.",N,N],[3,"ATerm",R[973],"The terminating type for type arrays.",N,N],[3,"TArr",E,"`TArr` is a type that acts as an array of types. It is…",N,N],[14,"op",R[959],"Convenient type operations.",N,N],[14,"cmp",E,"A convenience macro for comparing type numbers. Use `op!`…",N,N],[14,"tarr",E,"Create a new type-level arrray. Only usable on Rust 1.13.0…",N,N],[14,"assert_type_eq",E,"Asserts that two types are the same.",N,N],[14,"assert_type",E,"Asserts that a type is `True`, aka `B1`.",N,N],[11,"from",E,E,27,[[[T]],[T]]],[11,R[4],E,E,27,[[[U]],[R[3]]]],[11,"into",E,E,27,[[],[U]]],[11,R[5],E,E,27,[[],[R[3]]]],[11,R[6],E,E,27,[[["self"]],[T]]],[11,R[7],E,E,27,[[["self"]],[T]]],[11,R[8],E,E,27,[[["self"]],[R[9]]]],[11,"from",E,E,28,[[[T]],[T]]],[11,R[4],E,E,28,[[[U]],[R[3]]]],[11,"into",E,E,28,[[],[U]]],[11,R[5],E,E,28,[[],[R[3]]]],[11,R[6],E,E,28,[[["self"]],[T]]],[11,R[7],E,E,28,[[["self"]],[T]]],[11,R[8],E,E,28,[[["self"]],[R[9]]]],[11,"from",E,E,29,[[[T]],[T]]],[11,R[4],E,E,29,[[[U]],[R[3]]]],[11,"into",E,E,29,[[],[U]]],[11,R[5],E,E,29,[[],[R[3]]]],[11,R[6],E,E,29,[[["self"]],[T]]],[11,R[7],E,E,29,[[["self"]],[T]]],[11,R[8],E,E,29,[[["self"]],[R[9]]]],[11,R[972],R[963],E,0,[[["b"]]]],[11,R[964],E,E,0,[[["b"]]]],[11,R[965],E,E,0,[[["b"]]]],[11,R[966],E,E,0,[[["b"]]]],[11,R[967],E,E,0,[[["b"]]]],[11,R[968],E,E,0,[[["b"]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[4],E,E,0,[[[U]],[R[3]]]],[11,"into",E,E,0,[[],[U]]],[11,R[5],E,E,0,[[],[R[3]]]],[11,R[6],E,E,0,[[["self"]],[T]]],[11,R[7],E,E,0,[[["self"]],[T]]],[11,R[8],E,E,0,[[["self"]],[R[9]]]],[11,R[972],E,E,1,[[["b"]]]],[11,R[964],E,E,1,[[["b"]]]],[11,R[965],E,E,1,[[["b"]]]],[11,R[966],E,E,1,[[["b"]]]],[11,R[967],E,E,1,[[["b"]]]],[11,R[968],E,E,1,[[["b"]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[4],E,E,1,[[[U]],[R[3]]]],[11,"into",E,E,1,[[],[U]]],[11,R[5],E,E,1,[[],[R[3]]]],[11,R[6],E,E,1,[[["self"]],[T]]],[11,R[7],E,E,1,[[["self"]],[T]]],[11,R[8],E,E,1,[[["self"]],[R[9]]]],[11,"powi",R[969],E,4,[[["n"]]]],[11,R[970],E,E,4,[[["n"]]]],[11,R[972],E,E,4,[[["b"]]]],[11,R[964],E,E,4,[[["b"]]]],[11,R[965],E,E,4,[[["b"]]]],[11,R[966],E,E,4,[[["b"]]]],[11,R[967],E,E,4,[[["b"]]]],[11,R[968],E,E,4,[[["b"]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[4],E,E,4,[[[U]],[R[3]]]],[11,"into",E,E,4,[[],[U]]],[11,R[5],E,E,4,[[],[R[3]]]],[11,R[6],E,E,4,[[["self"]],[T]]],[11,R[7],E,E,4,[[["self"]],[T]]],[11,R[8],E,E,4,[[["self"]],[R[9]]]],[11,"powi",E,E,5,[[["n"]]]],[11,R[970],E,E,5,[[["n"]]]],[11,R[972],E,E,5,[[["b"]]]],[11,R[964],E,E,5,[[["b"]]]],[11,R[965],E,E,5,[[["b"]]]],[11,R[966],E,E,5,[[["b"]]]],[11,R[967],E,E,5,[[["b"]]]],[11,R[968],E,E,5,[[["b"]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[4],E,E,5,[[[U]],[R[3]]]],[11,"into",E,E,5,[[],[U]]],[11,R[5],E,E,5,[[],[R[3]]]],[11,R[6],E,E,5,[[["self"]],[T]]],[11,R[7],E,E,5,[[["self"]],[T]]],[11,R[8],E,E,5,[[["self"]],[R[9]]]],[11,"powi",R[971],E,6,[[["n"]]]],[11,R[970],E,E,6,[[["n"]]]],[11,R[972],E,E,6,[[["b"]]]],[11,R[964],E,E,6,[[["b"]]]],[11,R[965],E,E,6,[[["b"]]]],[11,R[966],E,E,6,[[["b"]]]],[11,R[967],E,E,6,[[["b"]]]],[11,R[968],E,E,6,[[["b"]]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[4],E,E,6,[[[U]],[R[3]]]],[11,"into",E,E,6,[[],[U]]],[11,R[5],E,E,6,[[],[R[3]]]],[11,R[6],E,E,6,[[["self"]],[T]]],[11,R[7],E,E,6,[[["self"]],[T]]],[11,R[8],E,E,6,[[["self"]],[R[9]]]],[11,"powi",E,E,7,[[["n"]]]],[11,R[970],E,E,7,[[["n"]]]],[11,R[972],E,E,7,[[["b"]]]],[11,R[964],E,E,7,[[["b"]]]],[11,R[965],E,E,7,[[["b"]]]],[11,R[966],E,E,7,[[["b"]]]],[11,R[967],E,E,7,[[["b"]]]],[11,R[968],E,E,7,[[["b"]]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[4],E,E,7,[[[U]],[R[3]]]],[11,"into",E,E,7,[[],[U]]],[11,R[5],E,E,7,[[],[R[3]]]],[11,R[6],E,E,7,[[["self"]],[T]]],[11,R[7],E,E,7,[[["self"]],[T]]],[11,R[8],E,E,7,[[["self"]],[R[9]]]],[11,"powi",E,E,8,[[["n"]]]],[11,R[970],E,E,8,[[["n"]]]],[11,R[972],E,E,8,[[["b"]]]],[11,R[964],E,E,8,[[["b"]]]],[11,R[965],E,E,8,[[["b"]]]],[11,R[966],E,E,8,[[["b"]]]],[11,R[967],E,E,8,[[["b"]]]],[11,R[968],E,E,8,[[["b"]]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[4],E,E,8,[[[U]],[R[3]]]],[11,"into",E,E,8,[[],[U]]],[11,R[5],E,E,8,[[],[R[3]]]],[11,R[6],E,E,8,[[["self"]],[T]]],[11,R[7],E,E,8,[[["self"]],[T]]],[11,R[8],E,E,8,[[["self"]],[R[9]]]],[11,R[970],R[973],E,30,[[["n"]]]],[11,"from",E,E,30,[[[T]],[T]]],[11,R[4],E,E,30,[[[U]],[R[3]]]],[11,"into",E,E,30,[[],[U]]],[11,R[5],E,E,30,[[],[R[3]]]],[11,R[6],E,E,30,[[["self"]],[T]]],[11,R[7],E,E,30,[[["self"]],[T]]],[11,R[8],E,E,30,[[["self"]],[R[9]]]],[11,R[970],E,E,31,[[["n"]]]],[11,"from",E,E,31,[[[T]],[T]]],[11,R[4],E,E,31,[[[U]],[R[3]]]],[11,"into",E,E,31,[[],[U]]],[11,R[5],E,E,31,[[],[R[3]]]],[11,R[6],E,E,31,[[["self"]],[T]]],[11,R[7],E,E,31,[[["self"]],[T]]],[11,R[8],E,E,31,[[["self"]],[R[9]]]],[11,R[974],R[959],E,27,[[],[R[50]]]],[11,R[974],E,E,28,[[],[R[50]]]],[11,R[974],E,E,29,[[],[R[50]]]],[11,"to_u8",R[963],E,0,[[],["u8"]]],[11,"to_bool",E,E,0,[[],["bool"]]],[11,"to_u8",E,E,1,[[],["u8"]]],[11,"to_bool",E,E,1,[[],["bool"]]],[11,"to_u8",R[969],E,4,[[],["u8"]]],[11,"to_u16",E,E,4,[[],["u16"]]],[11,"to_u32",E,E,4,[[],["u32"]]],[11,"to_u64",E,E,4,[[],["u64"]]],[11,R[976],E,E,4,[[],["usize"]]],[11,"to_i8",E,E,4,[[],["i8"]]],[11,"to_i16",E,E,4,[[],["i16"]]],[11,"to_i32",E,E,4,[[],["i32"]]],[11,"to_i64",E,E,4,[[],["i64"]]],[11,R[975],E,E,4,[[],["isize"]]],[11,"to_u8",E,E,5,[[],["u8"]]],[11,"to_u16",E,E,5,[[],["u16"]]],[11,"to_u32",E,E,5,[[],["u32"]]],[11,"to_u64",E,E,5,[[],["u64"]]],[11,R[976],E,E,5,[[],["usize"]]],[11,"to_i8",E,E,5,[[],["i8"]]],[11,"to_i16",E,E,5,[[],["i16"]]],[11,"to_i32",E,E,5,[[],["i32"]]],[11,"to_i64",E,E,5,[[],["i64"]]],[11,R[975],E,E,5,[[],["isize"]]],[11,"to_i8",R[971],E,8,[[],["i8"]]],[11,"to_i16",E,E,8,[[],["i16"]]],[11,"to_i32",E,E,8,[[],["i32"]]],[11,"to_i64",E,E,8,[[],["i64"]]],[11,R[975],E,E,8,[[],["isize"]]],[11,"to_i8",E,E,6,[[],["i8"]]],[11,"to_i16",E,E,6,[[],["i16"]]],[11,"to_i32",E,E,6,[[],["i32"]]],[11,"to_i64",E,E,6,[[],["i64"]]],[11,R[975],E,E,6,[[],["isize"]]],[11,"to_i8",E,E,7,[[],["i8"]]],[11,"to_i16",E,E,7,[[],["i16"]]],[11,"to_i32",E,E,7,[[],["i32"]]],[11,"to_i64",E,E,7,[[],["i64"]]],[11,R[975],E,E,7,[[],["isize"]]],[11,"powi",E,E,8,[[["z0"]]]],[11,"powi",E,E,8,[[["pint"]]]],[11,"powi",E,E,8,[[["nint"]]]],[11,"powi",R[959],E,32,[[["nint"]]]],[11,"powi",E,E,33,[[["nint",["uint"]],["uint",["b0"]]]]],[11,"powi",E,E,33,[[["nint",["uint"]],["uint",["b1"]]]]],[11,"powi",R[971],E,6,[[["z0"]]]],[11,"powi",E,E,7,[[["z0"]]]],[11,"powi",E,E,6,[[["pint"]]]],[11,"powi",E,E,7,[[["uint",["b0"]],["pint",["uint"]]]]],[11,"powi",E,E,7,[[["pint",["uint"]],["uint",["b1"]]]]],[11,"len",R[969],E,4,[[["self"]]]],[11,"len",E,E,5,[[["self"]]]],[11,"len",R[973],E,30,[[["self"]]]],[11,"len",E,E,31,[[["self"]]]],[11,R[970],R[969],E,4,[[["uint"]]]],[11,R[970],E,E,5,[[["uint"]]]],[11,R[970],R[973],E,30,[[["rhs"]]]],[11,R[970],E,E,31,[[["rhs"]]]],[11,"min",R[963],E,0,[[["b0"]],["b0"]]],[11,"min",E,E,0,[[["b1"]],["b0"]]],[11,"min",E,E,1,[[["b0"]],["b0"]]],[11,"min",E,E,1,[[["b1"]],["b1"]]],[11,"min",R[969],E,4,[[[U]]]],[11,"min",E,E,5,[[["ur"]]]],[11,"min",R[971],E,8,[[["z0"]]]],[11,"min",E,E,8,[[["pint"]]]],[11,"min",E,E,8,[[["nint"]]]],[11,"min",E,E,6,[[["z0"]]]],[11,"min",E,E,7,[[["z0"]]]],[11,"min",E,E,6,[[["pint"]]]],[11,"min",E,E,7,[[["pint"]]]],[11,"min",E,E,6,[[["nint"]]]],[11,"min",E,E,7,[[["nint"]]]],[11,"max",R[963],E,0,[[["b0"]],["b0"]]],[11,"max",E,E,0,[[["b1"]],["b1"]]],[11,"max",E,E,1,[[["b0"]],["b1"]]],[11,"max",E,E,1,[[["b1"]],["b1"]]],[11,"max",R[969],E,4,[[[U]]]],[11,"max",E,E,5,[[["ur"]]]],[11,"max",R[971],E,8,[[["z0"]]]],[11,"max",E,E,8,[[["pint"]]]],[11,"max",E,E,8,[[["nint"]]]],[11,"max",E,E,6,[[["z0"]]]],[11,"max",E,E,7,[[["z0"]]]],[11,"max",E,E,6,[[["pint"]]]],[11,"max",E,E,7,[[["pint"]]]],[11,"max",E,E,6,[[["nint"]]]],[11,"max",E,E,7,[[["nint"]]]],[11,"eq",R[963],E,0,[[["self"],["b0"]],["bool"]]],[11,"eq",E,E,1,[[["self"],["b1"]],["bool"]]],[11,"eq",R[969],E,4,[[["self"],["uterm"]],["bool"]]],[11,"eq",E,E,5,[[["self"],["uint"]],["bool"]]],[11,"ne",E,E,5,[[["self"],["uint"]],["bool"]]],[11,"eq",R[971],E,6,[[["self"],["pint"]],["bool"]]],[11,"ne",E,E,6,[[["self"],["pint"]],["bool"]]],[11,"eq",E,E,7,[[["self"],["nint"]],["bool"]]],[11,"ne",E,E,7,[[["self"],["nint"]],["bool"]]],[11,"eq",E,E,8,[[["self"],["z0"]],["bool"]]],[11,"eq",R[973],E,30,[[["self"],["aterm"]],["bool"]]],[11,"eq",E,E,31,[[["self"],["tarr"]],["bool"]]],[11,"ne",E,E,31,[[["self"],["tarr"]],["bool"]]],[11,"eq",R[959],E,27,[[["self"],["greater"]],["bool"]]],[11,"eq",E,E,28,[[["self"],["less"]],["bool"]]],[11,"eq",E,E,29,[[["self"],["equal"]],["bool"]]],[11,"cmp",R[963],E,0,[[["self"],["b0"]],[R[50]]]],[11,"cmp",E,E,1,[[["self"],["b1"]],[R[50]]]],[11,"cmp",R[969],E,4,[[["self"],["uterm"]],[R[50]]]],[11,"cmp",E,E,5,[[["self"],["uint"]],[R[50]]]],[11,"cmp",R[971],E,6,[[["self"],["pint"]],[R[50]]]],[11,"cmp",E,E,7,[[["self"],["nint"]],[R[50]]]],[11,"cmp",E,E,8,[[["self"],["z0"]],[R[50]]]],[11,"cmp",R[973],E,30,[[["self"],["aterm"]],[R[50]]]],[11,"cmp",E,E,31,[[["self"],["tarr"]],[R[50]]]],[11,"cmp",R[959],E,27,[[["self"],["greater"]],[R[50]]]],[11,"cmp",E,E,28,[[["self"],["less"]],[R[50]]]],[11,"cmp",E,E,29,[[["self"],["equal"]],[R[50]]]],[11,R[77],R[963],E,0,[[["self"],["b0"]],[[R[23],[R[50]]],[R[50]]]]],[11,R[77],E,E,1,[[["self"],["b1"]],[[R[23],[R[50]]],[R[50]]]]],[11,R[77],R[969],E,4,[[["self"],["uterm"]],[[R[23],[R[50]]],[R[50]]]]],[11,R[77],E,E,5,[[["self"],["uint"]],[[R[23],[R[50]]],[R[50]]]]],[11,"lt",E,E,5,[[["self"],["uint"]],["bool"]]],[11,"le",E,E,5,[[["self"],["uint"]],["bool"]]],[11,"gt",E,E,5,[[["self"],["uint"]],["bool"]]],[11,"ge",E,E,5,[[["self"],["uint"]],["bool"]]],[11,R[77],R[971],E,6,[[["self"],["pint"]],[[R[23],[R[50]]],[R[50]]]]],[11,"lt",E,E,6,[[["self"],["pint"]],["bool"]]],[11,"le",E,E,6,[[["self"],["pint"]],["bool"]]],[11,"gt",E,E,6,[[["self"],["pint"]],["bool"]]],[11,"ge",E,E,6,[[["self"],["pint"]],["bool"]]],[11,R[77],E,E,7,[[["self"],["nint"]],[[R[23],[R[50]]],[R[50]]]]],[11,"lt",E,E,7,[[["self"],["nint"]],["bool"]]],[11,"le",E,E,7,[[["self"],["nint"]],["bool"]]],[11,"gt",E,E,7,[[["self"],["nint"]],["bool"]]],[11,"ge",E,E,7,[[["self"],["nint"]],["bool"]]],[11,R[77],E,E,8,[[["self"],["z0"]],[[R[23],[R[50]]],[R[50]]]]],[11,R[77],R[973],E,30,[[["self"],["aterm"]],[[R[23],[R[50]]],[R[50]]]]],[11,R[77],E,E,31,[[["self"],["tarr"]],[[R[23],[R[50]]],[R[50]]]]],[11,"lt",E,E,31,[[["self"],["tarr"]],["bool"]]],[11,"le",E,E,31,[[["self"],["tarr"]],["bool"]]],[11,"gt",E,E,31,[[["self"],["tarr"]],["bool"]]],[11,"ge",E,E,31,[[["self"],["tarr"]],["bool"]]],[11,R[77],R[959],E,27,[[["self"],["greater"]],[[R[23],[R[50]]],[R[50]]]]],[11,R[77],E,E,28,[[["self"],["less"]],[[R[23],[R[50]]],[R[50]]]]],[11,R[77],E,E,29,[[["self"],["equal"]],[[R[23],[R[50]]],[R[50]]]]],[11,"hash",R[963],E,0,[[["self"],["__h"]]]],[11,"hash",E,E,1,[[["self"],["__h"]]]],[11,"hash",R[969],E,4,[[["self"],["__h"]]]],[11,"hash",E,E,5,[[["self"],["__h"]]]],[11,"hash",R[971],E,6,[[["self"],["__h"]]]],[11,"hash",E,E,7,[[["self"],["__h"]]]],[11,"hash",E,E,8,[[["self"],["__h"]]]],[11,"hash",R[973],E,30,[[["self"],["__h"]]]],[11,"hash",E,E,31,[[["self"],["__h"]]]],[11,"hash",R[959],E,27,[[["self"],["__h"]]]],[11,"hash",E,E,28,[[["self"],["__h"]]]],[11,"hash",E,E,29,[[["self"],["__h"]]]],[11,"fmt",R[963],E,0,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,1,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[969],E,4,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,5,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[971],E,6,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,7,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,8,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[973],E,30,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,31,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[959],E,27,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,28,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,29,[[["self"],[R[10]]],[R[3]]]],[11,"rem",R[969],E,4,[[["uint"]]]],[11,"rem",E,E,5,[[["uint"]]]],[11,"rem",R[971],E,8,[[["i"]]]],[11,"rem",E,E,6,[[["pint"]]]],[11,"rem",E,E,6,[[["nint"]]]],[11,"rem",E,E,7,[[["pint"]]]],[11,"rem",E,E,7,[[["nint"]]]],[11,"rem",R[973],E,30,[[["rhs"]]]],[11,"rem",E,E,31,[[["rhs"]]]],[11,"div",R[969],E,4,[[["uint"]]]],[11,"div",E,E,5,[[["uint"]]]],[11,"div",R[971],E,8,[[["i"]]]],[11,"div",E,E,6,[[["pint"]]]],[11,"div",E,E,6,[[["nint"]]]],[11,"div",E,E,7,[[["pint"]]]],[11,"div",E,E,7,[[["nint"]]]],[11,"div",R[973],E,30,[[["rhs"]]]],[11,"div",E,E,31,[[["rhs"]]]],[11,"add",R[969],E,4,[[["b0"]]]],[11,"add",E,E,5,[[["b0"]]]],[11,"add",E,E,4,[[["b1"]]]],[11,"add",E,E,5,[[["b1"]]]],[11,"add",E,E,5,[[["b1"]]]],[11,"add",E,E,4,[[[U]]]],[11,"add",E,E,5,[[["uterm"]]]],[11,"add",E,E,5,[[["uint",["b0"]],["b0"]]]],[11,"add",E,E,5,[[["uint",["b1"]],["b1"]]]],[11,"add",E,E,5,[[["uint",["b0"]],["b0"]]]],[11,"add",E,E,5,[[["uint",["b1"]],["b1"]]]],[11,"add",R[971],E,8,[[["i"]]]],[11,"add",E,E,6,[[["z0"]]]],[11,"add",E,E,7,[[["z0"]]]],[11,"add",E,E,6,[[["pint"]]]],[11,"add",E,E,7,[[["nint"]]]],[11,"add",E,E,6,[[["nint"]]]],[11,"add",E,E,7,[[["pint"]]]],[11,"add",R[973],E,30,[[["aterm"]]]],[11,"add",E,E,31,[[["tarr"]]]],[11,"sub",R[969],E,4,[[["b0"]]]],[11,"sub",E,E,5,[[["b0"]]]],[11,"sub",E,E,5,[[["b1"]]]],[11,"sub",E,E,5,[[["b1"]]]],[11,"sub",E,E,5,[[["b1"]]]],[11,"sub",E,E,4,[[["uterm"]]]],[11,"sub",E,E,5,[[["ur"]]]],[11,"sub",R[971],E,8,[[["z0"]]]],[11,"sub",E,E,8,[[["pint"]]]],[11,"sub",E,E,8,[[["nint"]]]],[11,"sub",E,E,6,[[["z0"]]]],[11,"sub",E,E,7,[[["z0"]]]],[11,"sub",E,E,6,[[["nint"]]]],[11,"sub",E,E,7,[[["pint"]]]],[11,"sub",E,E,6,[[["pint"]]]],[11,"sub",E,E,7,[[["nint"]]]],[11,"sub",R[973],E,30,[[["aterm"]]]],[11,"sub",E,E,31,[[["tarr"]]]],[11,"mul",R[969],E,5,[[["b0"]]]],[11,"mul",E,E,4,[[["b0"]]]],[11,"mul",E,E,4,[[["b1"]]]],[11,"mul",E,E,5,[[["b1"]]]],[11,"mul",E,E,5,[[["uterm"]]]],[11,"mul",E,E,4,[[[U]]]],[11,"mul",E,E,5,[[["uint"]]]],[11,"mul",E,E,5,[[["uint"]]]],[11,"mul",R[971],E,8,[[["i"]]]],[11,"mul",E,E,6,[[["z0"]]]],[11,"mul",E,E,7,[[["z0"]]]],[11,"mul",E,E,6,[[["pint"]]]],[11,"mul",E,E,7,[[["nint"]]]],[11,"mul",E,E,6,[[["nint"]]]],[11,"mul",E,E,7,[[["pint"]]]],[11,"mul",R[973],E,30,[[["rhs"]]]],[11,"mul",E,E,31,[[["rhs"]]]],[11,"mul",R[971],E,8,[[["aterm"]]]],[11,"mul",E,E,6,[[["aterm"]]]],[11,"mul",E,E,7,[[["aterm"]]]],[11,"mul",E,E,8,[[["tarr"]]]],[11,"mul",E,E,6,[[["tarr"]]]],[11,"mul",E,E,7,[[["tarr"]]]],[11,"neg",E,E,8,[[]]],[11,"neg",E,E,6,[[]]],[11,"neg",E,E,7,[[]]],[11,"neg",R[973],E,30,[[]]],[11,"neg",E,E,31,[[]]],[11,"not",R[963],E,0,[[]]],[11,"not",E,E,1,[[]]],[11,"bitand",E,E,0,[[["rhs"]]]],[11,"bitand",E,E,1,[[["b0"]]]],[11,"bitand",E,E,1,[[["b1"]]]],[11,"bitand",R[969],E,4,[[["ur"]]]],[11,"bitand",E,E,5,[[["ur"]]]],[11,"bitor",R[963],E,0,[[["b0"]]]],[11,"bitor",E,E,0,[[["b1"]]]],[11,"bitor",E,E,1,[[["rhs"]]]],[11,"bitor",R[969],E,4,[[[U]]]],[11,"bitor",E,E,5,[[["uterm"]]]],[11,"bitor",E,E,5,[[["uint",["b0"]],["b0"]]]],[11,"bitor",E,E,5,[[["uint",["b1"]],["b1"]]]],[11,"bitor",E,E,5,[[["uint",["b0"]],["b0"]]]],[11,"bitor",E,E,5,[[["uint",["b1"]],["b1"]]]],[11,"bitxor",R[963],E,0,[[["b0"]]]],[11,"bitxor",E,E,1,[[["b0"]]]],[11,"bitxor",E,E,0,[[["b1"]]]],[11,"bitxor",E,E,1,[[["b1"]]]],[11,"bitxor",R[969],E,4,[[["ur"]]]],[11,"bitxor",E,E,5,[[["ur"]]]],[11,"shl",E,E,4,[[["b0"]]]],[11,"shl",E,E,4,[[["b1"]]]],[11,"shl",E,E,5,[[["b0"]]]],[11,"shl",E,E,5,[[["b1"]]]],[11,"shl",E,E,5,[[["uterm"]]]],[11,"shl",E,E,4,[[[U]]]],[11,"shl",E,E,5,[[["uint"]]]],[11,"shr",E,E,4,[[[U]]]],[11,"shr",E,E,5,[[["uterm"]]]],[11,"shr",E,E,4,[[["b0"]]]],[11,"shr",E,E,4,[[["b1"]]]],[11,"shr",E,E,5,[[["b0"]]]],[11,"shr",E,E,5,[[["b1"]]]],[11,"shr",E,E,5,[[["uint"]]]],[11,"clone",R[963],E,0,[[["self"]],["b0"]]],[11,"clone",E,E,1,[[["self"]],["b1"]]],[11,"clone",R[969],E,4,[[["self"]],["uterm"]]],[11,"clone",E,E,5,[[["self"]],["uint"]]],[11,"clone",R[971],E,6,[[["self"]],["pint"]]],[11,"clone",E,E,7,[[["self"]],["nint"]]],[11,"clone",E,E,8,[[["self"]],["z0"]]],[11,"clone",R[973],E,30,[[["self"]],["aterm"]]],[11,"clone",E,E,31,[[["self"]],["tarr"]]],[11,"clone",R[959],E,27,[[["self"]],["greater"]]],[11,"clone",E,E,28,[[["self"]],["less"]]],[11,"clone",E,E,29,[[["self"]],["equal"]]],[11,R[83],R[963],E,0,[[],["b0"]]],[11,R[83],E,E,1,[[],["b1"]]],[11,R[83],R[969],E,4,[[],["uterm"]]],[11,R[83],E,E,5,[[],["uint"]]],[11,R[83],R[971],E,6,[[],["pint"]]],[11,R[83],E,E,7,[[],["nint"]]],[11,R[83],E,E,8,[[],["z0"]]],[11,R[83],R[959],E,27,[[],["greater"]]],[11,R[83],E,E,28,[[],["less"]]],[11,R[83],E,E,29,[[],["equal"]]]],"p":[[3,"B0"],[3,"B1"],[8,"GetBit"],[8,"SetBit"],[3,"UTerm"],[3,"UInt"],[3,"PInt"],[3,"NInt"],[3,"Z0"],[8,"Ord"],[8,"Bit"],[8,"Unsigned"],[8,"Integer"],[8,"Same"],[8,"Abs"],[8,"Pow"],[8,"Cmp"],[8,"Len"],[8,R[977]],[8,"Min"],[8,"Max"],[8,"IsLess"],[8,"IsEqual"],[8,R[978]],[8,R[979]],[8,R[980]],[8,R[981]],[3,"Greater"],[3,"Less"],[3,"Equal"],[3,"ATerm"],[3,"TArr"],[6,"P1"],[6,"N1"]]};
searchIndex["typetag"]={"doc":"Serde serializable and deserializable trait objects.","i":[],"p":[]};
searchIndex["typetag_impl"]={"doc":E,"i":[[23,"serde","typetag_impl",E,N,N],[23,R[4563],E,E,N,N],[23,R[4354],E,E,N,N]],"p":[]};
searchIndex["unicode_segmentation"]={"doc":"Iterators which split strings on Grapheme Cluster, Word or…","i":[[3,R[183],"unicode_segmentation","External iterator for a string's grapheme clusters.",N,N],[3,R[182],E,"External iterator for grapheme clusters and byte offsets.",N,N],[3,R[184],E,"Cursor-based segmenter for grapheme clusters.",N,N],[3,R[186],E,"External iterator for a string's word boundaries.",N,N],[3,R[185],E,"External iterator for word boundaries and byte offsets.",N,N],[3,R[188],E,R[168],N,N],[3,R[189],E,"External iterator for a string's sentence boundaries.",N,N],[3,R[190],E,"External iterator for sentence boundaries and byte offsets.",N,N],[3,R[191],E,R[168],N,N],[4,R[181],E,"An error return indicating that not enough content was…",N,N],[13,"PreContext",E,"More pre-context is needed. The caller should call…",0,N],[13,"PrevChunk",E,"When requesting `prev_boundary`, the cursor is moving past…",0,N],[13,"NextChunk",E,"When requesting `next_boundary`, the cursor is moving past…",0,N],[13,"InvalidOffset",E,"An error returned when the chunk given does not contain…",0,N],[11,"as_str",E,R[169],1,[[["self"]],["str"]]],[11,"as_str",E,R[169],2,[[["self"]],["str"]]],[11,"new",E,"Create a new cursor. The string and initial offset are…",3,[[["usize"],["bool"]],[R[175]]]],[11,"set_cursor",E,"Set the cursor to a new location in the same string.",3,[[["self"],["usize"]]]],[11,"cur_cursor",E,"The current offset of the cursor. Equal to the last value…",3,[[["self"]],["usize"]]],[11,"provide_context",E,"Provide additional pre-context when it is needed to decide…",3,[[["self"],["str"],["usize"]]]],[11,"is_boundary",E,"Determine whether the current cursor location is a…",3,[[["self"],["str"],["usize"]],[[R[170]],[R[3],["bool",R[170]]],["bool"]]]],[11,"next_boundary",E,"Find the next boundary after the current cursor position.…",3,[[["self"],["str"],["usize"]],[[R[23],["usize"]],[R[3],[R[23],R[170]]],[R[170]]]]],[11,"prev_boundary",E,"Find the previous boundary after the current cursor…",3,[[["self"],["str"],["usize"]],[[R[23],["usize"]],[R[3],[R[23],R[170]]],[R[170]]]]],[11,"as_str",E,R[169],4,[[["self"]],["str"]]],[11,"as_str",E,R[169],5,[[["self"]],["str"]]],[17,R[163],E,"The version of Unicode that this version of…",N,N],[8,R[187],E,"Methods for segmenting strings according to Unicode…",N,N],[10,R[171],E,"Returns an iterator over the [grapheme…",6,[[["self"],["bool"]],[R[171]]]],[10,"grapheme_indices",E,"Returns an iterator over the grapheme clusters of `self`…",6,[[["self"],["bool"]],[R[174]]]],[10,"unicode_words",E,"Returns an iterator over the words of `self`, separated on…",6,[[["self"]],["unicodewords"]]],[10,"split_word_bounds",E,R[172],6,[[["self"]],[R[176]]]],[10,"split_word_bound_indices",E,R[173],6,[[["self"]],[R[177]]]],[10,"unicode_sentences",E,R[172],6,[[["self"]],[R[178]]]],[10,"split_sentence_bounds",E,R[172],6,[[["self"]],[R[179]]]],[10,"split_sentence_bound_indices",E,R[173],6,[[["self"]],[R[180]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[4],E,E,2,[[[U]],[R[3]]]],[11,R[45],E,E,2,[[],["i"]]],[11,"into",E,E,2,[[],[U]]],[11,R[5],E,E,2,[[],[R[3]]]],[11,R[6],E,E,2,[[["self"]],[T]]],[11,R[7],E,E,2,[[["self"]],[T]]],[11,R[8],E,E,2,[[["self"]],[R[9]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[4],E,E,1,[[[U]],[R[3]]]],[11,R[45],E,E,1,[[],["i"]]],[11,"into",E,E,1,[[],[U]]],[11,R[5],E,E,1,[[],[R[3]]]],[11,R[6],E,E,1,[[["self"]],[T]]],[11,R[7],E,E,1,[[["self"]],[T]]],[11,R[8],E,E,1,[[["self"]],[R[9]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[4],E,E,3,[[[U]],[R[3]]]],[11,"into",E,E,3,[[],[U]]],[11,R[5],E,E,3,[[],[R[3]]]],[11,R[6],E,E,3,[[["self"]],[T]]],[11,R[7],E,E,3,[[["self"]],[T]]],[11,R[8],E,E,3,[[["self"]],[R[9]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[4],E,E,5,[[[U]],[R[3]]]],[11,R[45],E,E,5,[[],["i"]]],[11,"into",E,E,5,[[],[U]]],[11,R[5],E,E,5,[[],[R[3]]]],[11,R[6],E,E,5,[[["self"]],[T]]],[11,R[7],E,E,5,[[["self"]],[T]]],[11,R[8],E,E,5,[[["self"]],[R[9]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[4],E,E,4,[[[U]],[R[3]]]],[11,R[45],E,E,4,[[],["i"]]],[11,"into",E,E,4,[[],[U]]],[11,R[5],E,E,4,[[],[R[3]]]],[11,R[6],E,E,4,[[["self"]],[T]]],[11,R[7],E,E,4,[[["self"]],[T]]],[11,R[8],E,E,4,[[["self"]],[R[9]]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[4],E,E,7,[[[U]],[R[3]]]],[11,R[45],E,E,7,[[],["i"]]],[11,"into",E,E,7,[[],[U]]],[11,R[5],E,E,7,[[],[R[3]]]],[11,R[6],E,E,7,[[["self"]],[T]]],[11,R[7],E,E,7,[[["self"]],[T]]],[11,R[8],E,E,7,[[["self"]],[R[9]]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[4],E,E,8,[[[U]],[R[3]]]],[11,R[45],E,E,8,[[],["i"]]],[11,"into",E,E,8,[[],[U]]],[11,R[5],E,E,8,[[],[R[3]]]],[11,R[6],E,E,8,[[["self"]],[T]]],[11,R[7],E,E,8,[[["self"]],[T]]],[11,R[8],E,E,8,[[["self"]],[R[9]]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[4],E,E,9,[[[U]],[R[3]]]],[11,R[45],E,E,9,[[],["i"]]],[11,"into",E,E,9,[[],[U]]],[11,R[5],E,E,9,[[],[R[3]]]],[11,R[6],E,E,9,[[["self"]],[T]]],[11,R[7],E,E,9,[[["self"]],[T]]],[11,R[8],E,E,9,[[["self"]],[R[9]]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[4],E,E,10,[[[U]],[R[3]]]],[11,R[45],E,E,10,[[],["i"]]],[11,"into",E,E,10,[[],[U]]],[11,R[5],E,E,10,[[],[R[3]]]],[11,R[6],E,E,10,[[["self"]],[T]]],[11,R[7],E,E,10,[[["self"]],[T]]],[11,R[8],E,E,10,[[["self"]],[R[9]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[4],E,E,0,[[[U]],[R[3]]]],[11,"into",E,E,0,[[],[U]]],[11,R[5],E,E,0,[[],[R[3]]]],[11,R[6],E,E,0,[[["self"]],[T]]],[11,R[7],E,E,0,[[["self"]],[T]]],[11,R[8],E,E,0,[[["self"]],[R[9]]]],[11,"eq",E,E,0,[[["self"],[R[170]]],["bool"]]],[11,"ne",E,E,0,[[["self"],[R[170]]],["bool"]]],[11,"fmt",E,E,0,[[["self"],[R[10]]],[R[3]]]],[11,R[52],E,E,1,[[["self"]],[R[23]]]],[11,R[52],E,E,2,[[["self"]],[["str"],[R[23],["str"]]]]],[11,R[52],E,E,7,[[["self"]],[["str"],[R[23],["str"]]]]],[11,R[52],E,E,4,[[["self"]],[R[23]]]],[11,R[52],E,E,5,[[["self"]],[["str"],[R[23],["str"]]]]],[11,"next",E,E,1,[[["self"]],[R[23]]]],[11,R[53],E,E,1,[[["self"]]]],[11,R[53],E,E,2,[[["self"]]]],[11,"next",E,E,2,[[["self"]],[["str"],[R[23],["str"]]]]],[11,"next",E,E,7,[[["self"]],[["str"],[R[23],["str"]]]]],[11,"next",E,E,4,[[["self"]],[R[23]]]],[11,R[53],E,E,4,[[["self"]]]],[11,R[53],E,E,5,[[["self"]]]],[11,"next",E,E,5,[[["self"]],[["str"],[R[23],["str"]]]]],[11,"next",E,E,10,[[["self"]],[["str"],[R[23],["str"]]]]],[11,R[53],E,E,8,[[["self"]]]],[11,"next",E,E,8,[[["self"]],[["str"],[R[23],["str"]]]]],[11,"next",E,E,9,[[["self"]],[R[23]]]],[11,R[53],E,E,9,[[["self"]]]],[11,"clone",E,E,1,[[["self"]],[R[174]]]],[11,"clone",E,E,2,[[["self"]],[R[171]]]],[11,"clone",E,E,3,[[["self"]],[R[175]]]],[11,"clone",E,E,5,[[["self"]],[R[176]]]],[11,"clone",E,E,4,[[["self"]],[R[177]]]],[11,"clone",E,E,10,[[["self"]],[R[178]]]],[11,"clone",E,E,8,[[["self"]],[R[179]]]],[11,"clone",E,E,9,[[["self"]],[R[180]]]]],"p":[[4,R[181]],[3,R[182]],[3,R[183]],[3,R[184]],[3,R[185]],[3,R[186]],[8,R[187]],[3,R[188]],[3,R[189]],[3,R[190]],[3,R[191]]]};
searchIndex["unicode_width"]={"doc":"Determine displayed width of `char` and `str` types…","i":[[17,R[163],"unicode_width","The version of Unicode that this version of unicode-width…",N,N],[8,R[161],E,"Methods for determining displayed width of Unicode…",N,N],[10,"width",E,R[158],0,[[],[[R[23],["usize"]],["usize"]]]],[10,R[159],E,R[158],0,[[],[[R[23],["usize"]],["usize"]]]],[8,R[162],E,"Methods for determining displayed width of Unicode strings.",N,N],[10,"width",E,R[160],1,[[["self"]],["usize"]]],[10,R[159],E,R[160],1,[[["self"]],["usize"]]]],"p":[[8,R[161]],[8,R[162]]]};
searchIndex["unicode_xid"]={"doc":"Determine if a `char` is a valid identifier for a parser…","i":[[17,R[163],"unicode_xid","The version of Unicode that this version of unicode-xid is…",N,N],[8,R[0],E,"Methods for determining if a character is a valid…",N,N],[10,"is_xid_start",E,"Returns whether the specified character satisfies the…",0,[[],["bool"]]],[10,"is_xid_continue",E,"Returns whether the specified `char` satisfies the…",0,[[],["bool"]]]],"p":[[8,R[0]]]};
searchIndex["vec_map"]={"doc":"A simple map based on a vector for small integer keys.…","i":[[3,"VecMap","vec_map","A map optimized for small integer keys.",N,N],[3,R[314],E,R[4636],N,N],[3,R[315],E,R[4637],N,N],[3,"Iter",E,"An iterator over the key-value pairs of a map.",N,N],[3,R[631],E,"An iterator over the key-value pairs of a map, with the…",N,N],[3,"Keys",E,"An iterator over the keys of a map.",N,N],[3,"Values",E,R[305],N,N],[3,R[316],E,R[305],N,N],[3,R[306],E,"A consuming iterator over the key-value pairs of a map.",N,N],[3,"Drain",E,"A draining iterator over the key-value pairs of a map.",N,N],[4,"Entry",E,R[4638],N,N],[13,"Vacant",E,"A vacant Entry",0,N],[13,"Occupied",E,"An occupied Entry",0,N],[11,"new",E,"Creates an empty `VecMap`.",1,[[],["self"]]],[11,R[115],E,"Creates an empty `VecMap` with space for at least…",1,[[["usize"]],["self"]]],[11,R[764],E,"Returns the number of elements the `VecMap` can hold…",1,[[["self"]],["usize"]]],[11,"reserve_len",E,"Reserves capacity for the given `VecMap` to contain `len`…",1,[[["self"],["usize"]]]],[11,"reserve_len_exact",E,"Reserves the minimum capacity for the given `VecMap` to…",1,[[["self"],["usize"]]]],[11,R[119],E,"Trims the `VecMap` of any excess capacity.",1,[[["self"]]]],[11,"keys",E,"Returns an iterator visiting all keys in ascending order…",1,[[["self"]],["keys"]]],[11,"values",E,R[307],1,[[["self"]],["values"]]],[11,R[35],E,R[307],1,[[["self"]],["valuesmut"]]],[11,"iter",E,R[308],1,[[["self"]],["iter"]]],[11,R[31],E,R[308],1,[[["self"]],[R[24]]]],[11,"append",E,"Moves all elements from `other` into the map while…",1,[[["self"]]]],[11,"split_off",E,"Splits the collection into two at the given key.",1,[[["self"],["usize"]],["self"]]],[11,"drain",E,R[308],1,[[["self"]],["drain"]]],[11,"len",E,R[309],1,[[["self"]],["usize"]]],[11,R[25],E,R[4639],1,[[["self"]],["bool"]]],[11,"clear",E,"Clears the map, removing all key-value pairs.",1,[[["self"]]]],[11,"get",E,R[310],1,[[["self"],["usize"]],[[R[23]],["v"]]]],[11,R[311],E,R[4640],1,[[["self"],["usize"]],["bool"]]],[11,R[39],E,R[312],1,[[["self"],["usize"]],[[R[23]],["v"]]]],[11,"insert",E,"Inserts a key-value pair into the map. If the key already…",1,[[["self"],["usize"],["v"]],[R[23]]]],[11,"remove",E,R[4641],1,[[["self"],["usize"]],[R[23]]]],[11,"entry",E,R[4642],1,[[["self"],["usize"]],["entry"]]],[11,"retain",E,R[313],1,[[["self"],["f"]]]],[11,"or_insert",E,R[4643],0,[[["v"]],["v"]]],[11,R[4644],E,R[4645],0,[[["fnonce"]],["v"]]],[11,"insert",E,R[4646],2,[[["v"]],["v"]]],[11,"get",E,R[4647],3,[[["self"]],["v"]]],[11,R[39],E,R[4648],3,[[["self"]],["v"]]],[11,"into_mut",E,R[4649],3,[[],["v"]]],[11,"insert",E,"Sets the value of the entry with the OccupiedEntry's key,…",3,[[["self"],["v"]],["v"]]],[11,"remove",E,R[4650],3,[[],["v"]]],[11,"into",E,E,1,[[],[U]]],[11,R[45],E,E,1,[[],["i"]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[46],E,E,1,[[["self"]],[T]]],[11,R[47],E,E,1,[[["self"],[T]]]],[11,R[4],E,E,1,[[[U]],[R[3]]]],[11,R[5],E,E,1,[[],[R[3]]]],[11,R[7],E,E,1,[[["self"]],[T]]],[11,R[6],E,E,1,[[["self"]],[T]]],[11,R[8],E,E,1,[[["self"]],[R[9]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[4],E,E,2,[[[U]],[R[3]]]],[11,R[5],E,E,2,[[],[R[3]]]],[11,R[7],E,E,2,[[["self"]],[T]]],[11,R[6],E,E,2,[[["self"]],[T]]],[11,R[8],E,E,2,[[["self"]],[R[9]]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[4],E,E,3,[[[U]],[R[3]]]],[11,R[5],E,E,3,[[],[R[3]]]],[11,R[7],E,E,3,[[["self"]],[T]]],[11,R[6],E,E,3,[[["self"]],[T]]],[11,R[8],E,E,3,[[["self"]],[R[9]]]],[11,"into",E,E,4,[[],[U]]],[11,R[45],E,E,4,[[],["i"]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[46],E,E,4,[[["self"]],[T]]],[11,R[47],E,E,4,[[["self"],[T]]]],[11,R[4],E,E,4,[[[U]],[R[3]]]],[11,R[5],E,E,4,[[],[R[3]]]],[11,R[7],E,E,4,[[["self"]],[T]]],[11,R[6],E,E,4,[[["self"]],[T]]],[11,R[8],E,E,4,[[["self"]],[R[9]]]],[11,"into",E,E,5,[[],[U]]],[11,R[45],E,E,5,[[],["i"]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[4],E,E,5,[[[U]],[R[3]]]],[11,R[5],E,E,5,[[],[R[3]]]],[11,R[7],E,E,5,[[["self"]],[T]]],[11,R[6],E,E,5,[[["self"]],[T]]],[11,R[8],E,E,5,[[["self"]],[R[9]]]],[11,"into",E,E,6,[[],[U]]],[11,R[45],E,E,6,[[],["i"]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[46],E,E,6,[[["self"]],[T]]],[11,R[47],E,E,6,[[["self"],[T]]]],[11,R[4],E,E,6,[[[U]],[R[3]]]],[11,R[5],E,E,6,[[],[R[3]]]],[11,R[7],E,E,6,[[["self"]],[T]]],[11,R[6],E,E,6,[[["self"]],[T]]],[11,R[8],E,E,6,[[["self"]],[R[9]]]],[11,"into",E,E,7,[[],[U]]],[11,R[45],E,E,7,[[],["i"]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[46],E,E,7,[[["self"]],[T]]],[11,R[47],E,E,7,[[["self"],[T]]]],[11,R[4],E,E,7,[[[U]],[R[3]]]],[11,R[5],E,E,7,[[],[R[3]]]],[11,R[7],E,E,7,[[["self"]],[T]]],[11,R[6],E,E,7,[[["self"]],[T]]],[11,R[8],E,E,7,[[["self"]],[R[9]]]],[11,"into",E,E,8,[[],[U]]],[11,R[45],E,E,8,[[],["i"]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[4],E,E,8,[[[U]],[R[3]]]],[11,R[5],E,E,8,[[],[R[3]]]],[11,R[7],E,E,8,[[["self"]],[T]]],[11,R[6],E,E,8,[[["self"]],[T]]],[11,R[8],E,E,8,[[["self"]],[R[9]]]],[11,"into",E,E,9,[[],[U]]],[11,R[45],E,E,9,[[],["i"]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[4],E,E,9,[[[U]],[R[3]]]],[11,R[5],E,E,9,[[],[R[3]]]],[11,R[7],E,E,9,[[["self"]],[T]]],[11,R[6],E,E,9,[[["self"]],[T]]],[11,R[8],E,E,9,[[["self"]],[R[9]]]],[11,"into",E,E,10,[[],[U]]],[11,R[45],E,E,10,[[],["i"]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[4],E,E,10,[[[U]],[R[3]]]],[11,R[5],E,E,10,[[],[R[3]]]],[11,R[7],E,E,10,[[["self"]],[T]]],[11,R[6],E,E,10,[[["self"]],[T]]],[11,R[8],E,E,10,[[["self"]],[R[9]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[4],E,E,0,[[[U]],[R[3]]]],[11,R[5],E,E,0,[[],[R[3]]]],[11,R[7],E,E,0,[[["self"]],[T]]],[11,R[6],E,E,0,[[["self"]],[T]]],[11,R[8],E,E,0,[[["self"]],[R[9]]]],[11,R[83],E,E,1,[[],["self"]]],[11,"extend",E,E,1,[[["self"],[R[82]]]]],[11,"extend",E,E,1,[[["self"],[R[82]]]]],[11,"clone",E,E,1,[[["self"]],["self"]]],[11,R[758],E,E,1,[[["self"],["self"]]]],[11,"clone",E,E,4,[[["self"]],["iter"]]],[11,"clone",E,E,6,[[["self"]],["keys"]]],[11,"clone",E,E,7,[[["self"]],["values"]]],[11,R[77],E,E,1,[[["self"]],[[R[23],[R[50]]],[R[50]]]]],[11,"cmp",E,E,1,[[["self"]],[R[50]]]],[11,"eq",E,E,1,[[["self"]],["bool"]]],[11,R[45],E,R[308],1,[[],[R[766]]]],[11,R[52],E,E,4,[[["self"]],[R[23]]]],[11,R[52],E,E,5,[[["self"]],[R[23]]]],[11,R[52],E,E,10,[[["self"]],[R[23]]]],[11,R[52],E,E,6,[[["self"]],[[R[23],["usize"]],["usize"]]]],[11,R[52],E,E,7,[[["self"]],[[R[23]],["v"]]]],[11,R[52],E,E,8,[[["self"]],[["v"],[R[23]]]]],[11,R[52],E,E,9,[[["self"]],[R[23]]]],[11,"next",E,E,4,[[["self"]],[R[23]]]],[11,R[53],E,E,4,[[["self"]]]],[11,"next",E,E,5,[[["self"]],[R[23]]]],[11,R[53],E,E,5,[[["self"]]]],[11,"next",E,E,10,[[["self"]],[R[23]]]],[11,R[53],E,E,10,[[["self"]]]],[11,"next",E,E,6,[[["self"]],[[R[23],["usize"]],["usize"]]]],[11,R[53],E,E,6,[[["self"]]]],[11,"next",E,E,7,[[["self"]],[[R[23]],["v"]]]],[11,R[53],E,E,7,[[["self"]]]],[11,"next",E,E,8,[[["self"]],[["v"],[R[23]]]]],[11,R[53],E,E,8,[[["self"]]]],[11,"next",E,E,9,[[["self"]],[R[23]]]],[11,R[53],E,E,9,[[["self"]]]],[11,"hash",E,E,1,[[["self"],["h"]]]],[11,"fmt",E,E,1,[[["self"],[R[10]]],[R[3]]]],[11,"index",E,E,1,[[["self"],["usize"]],["v"]]],[11,"index",E,E,1,[[["self"],["usize"]],["v"]]],[11,R[51],E,E,1,[[["self"],["usize"]],["v"]]],[11,R[51],E,E,1,[[["self"],["usize"]],["v"]]],[11,R[81],E,E,1,[[[R[82]]],["self"]]]],"p":[[4,"Entry"],[3,"VecMap"],[3,R[314]],[3,R[315]],[3,"Iter"],[3,R[631]],[3,"Keys"],[3,"Values"],[3,R[316]],[3,R[306]],[3,"Drain"]]};
searchIndex["void"]={"doc":"Void","i":[[4,"Void","void","The empty type for cases which can't occur.",N,N],[5,R[127],E,"A safe version of `intrinsincs::unreachable`.",N,[[["void"]]]],[8,R[128],E,"Extensions to `Result<T, Void>`",N,N],[10,"void_unwrap",E,"Get the value out of a wrapper.",0,[[],[T]]],[8,R[129],E,"Extensions to `Result<Void, E>`",N,N],[10,"void_unwrap_err",E,"Get the error out of a wrapper.",1,[[],["e"]]],[11,"into",E,E,2,[[],[U]]],[11,R[113],E,E,2,[[["self"]],["string"]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[46],E,E,2,[[["self"]],[T]]],[11,R[47],E,E,2,[[["self"],[T]]]],[11,R[4],E,E,2,[[[U]],[R[3]]]],[11,R[5],E,E,2,[[],[R[3]]]],[11,R[7],E,E,2,[[["self"]],[T]]],[11,R[6],E,E,2,[[["self"]],[T]]],[11,R[8],E,E,2,[[["self"]],[R[9]]]],[11,"clone",E,E,2,[[["self"]],["void"]]],[11,R[77],E,E,2,[[["self"],[T]],[[R[50]],[R[23],[R[50]]]]]],[11,"eq",E,E,2,[[["self"],[T]],["bool"]]],[11,"fmt",E,E,2,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,2,[[["self"],[R[10]]],[R[3]]]],[11,R[157],E,E,2,[[["self"]],["str"]]],[11,"cause",E,E,2,[[["self"]],[[R[23],["error"]],["error"]]]]],"p":[[8,R[128]],[8,R[129]],[4,"Void"]]};
searchIndex["wabt"]={"doc":"Bindings to the wabt library.","i":[[3,"Error","wabt","A structure to represent errors coming out from wabt.",N,N],[3,"Features",E,"Represents which WebAssembly features are enabled in Wabt.",N,N],[3,"WabtBuf",E,"Buffer returned by wabt.",N,N],[3,R[4708],E,"Options for reading read binary.",N,N],[3,"Module",E,"WebAssembly module.",N,N],[3,"Wat2Wasm",E,"A builder for translating wasm text source to wasm binary…",N,N],[3,"Wasm2Wat",E,"A builder for converting wasm binary to wasm text format.",N,N],[4,R[372],E,"ErrorKind describes an error condition from a wasm module…",N,N],[13,"Nul",E,"Result contained an unexpected null byte.",0,N],[13,R[4378],E,"Error deserializing binary wasm.",0,N],[13,"Parse",E,"Error parsing textual wasm.",0,N],[13,"WriteText",E,"Error serializing a wasm module to text.",0,N],[13,"NonUtf8Result",E,"Translating a wasm binary module to text yielded non-utf8…",0,N],[13,"WriteBinary",E,"Error serializing a wasm module to binary.",0,N],[13,"ResolveNames",E,"Error resolving names in the wasm module.",0,N],[13,"Validate",E,"Error validating the wasm module.",0,N],[5,"wat2wasm",E,R[4693],N,[[["asref"]],[[R[3],["vec","error"]],["error"],["vec",["u8"]]]]],[5,"wat2wasm_with_features",E,R[4693],N,[[[R[4701]],["asref"]],[[R[3],["vec","error"]],["error"],["vec",["u8"]]]]],[5,"wasm2wat",E,"Disassemble wasm binary to wasm text format.",N,[[["asref"]],[["error"],["string"],[R[3],["string","error"]]]]],[5,"wasm2wat_with_features",E,"Disassemble wasm binary to wasm text format with the given…",N,[[[R[4701]],["asref"]],[["error"],["string"],[R[3],["string","error"]]]]],[0,"script",E,"Module for parsing [WebAssembly script format] (a.k.a.…",N,N],[3,R[4706],R[4694],"This is a handle to get the binary representation of the…",N,N],[3,"Command",E,"Command in the script.",N,N],[12,"line",E,"Line number the command is defined on.",1,N],[12,"kind",E,"Kind of the command.",1,N],[3,R[4707],E,"Parser which allows to parse WebAssembly script text format.",N,N],[4,"Error",E,"Error that can happen when parsing spec.",N,N],[13,"IoError",E,"IO error happened during parsing or preparing to parse.",2,N],[13,"WabtError",E,"WABT reported an error while converting wast to json.",2,N],[13,"Other",E,"Other error represented by String.",2,N],[13,"WithLineInfo",E,"Not a different kind of an error but just a wrapper for a…",2,N],[12,"line","wabt::script::Error","Line number of the script on which just error happen.",2,N],[12,"error",E,"Box with actual error.",2,N],[4,"Value",R[4694],"Wasm value",N,N],[13,"I32",E,"32-bit signed or unsigned integer.",3,N],[13,"I64",E,"64-bit signed or unsigned integer.",3,N],[13,"F32",E,"32-bit floating point number.",3,N],[13,"F64",E,"64-bit floating point number.",3,N],[13,"V128",E,"128-bit vector.",3,N],[4,"Action",E,"Description of action that should be performed on a wasm…",N,N],[13,"Invoke",E,"Invoke a specified function.",4,N],[12,"module",R[4695],R[4696],4,N],[12,"field",E,R[4697],4,N],[12,"args",E,"Arguments that should be passed to the invoked function.",4,N],[13,"Get",R[4694],"Read the specified global variable.",4,N],[12,"module",R[4695],R[4696],4,N],[12,"field",E,R[4697],4,N],[4,R[4705],R[4694],"Script's command.",N,N],[13,"Module",E,"Define, validate and instantiate a module.",5,N],[12,"module",R[4698],"Wasm module binary to define, validate and instantiate.",5,N],[12,"name",E,"If the `name` is specified, the module should be…",5,N],[13,"AssertReturn",R[4694],"Assert that specified action should yield specified results.",5,N],[12,"action",R[4698],R[4699],5,N],[12,R[4723],E,"Values that expected to be yielded by the action.",5,N],[13,"AssertReturnCanonicalNan",R[4694],"Assert that specified action should yield NaN in canonical…",5,N],[12,"action",R[4698],R[4699],5,N],[13,"AssertReturnArithmeticNan",R[4694],"Assert that specified action should yield NaN with 1 in…",5,N],[12,"action",R[4698],R[4699],5,N],[13,"AssertTrap",R[4694],"Assert that performing specified action must yield in a…",5,N],[12,"action",R[4698],R[4699],5,N],[12,"message",E,R[4700],5,N],[13,"AssertInvalid",R[4694],"Assert that specified module is invalid.",5,N],[12,"module",R[4698],"Module that should be invalid.",5,N],[12,"message",E,R[4700],5,N],[13,"AssertMalformed",R[4694],"Assert that specified module cannot be decoded.",5,N],[12,"module",R[4698],"Module that should be malformed.",5,N],[12,"message",E,R[4700],5,N],[13,"AssertUninstantiable",R[4694],"Assert that specified module is uninstantiable.",5,N],[12,"module",R[4698],"Module that should be uninstantiable.",5,N],[12,"message",E,R[4700],5,N],[13,"AssertExhaustion",R[4694],"Assert that specified action should yield in resource…",5,N],[12,"action",R[4698],R[4699],5,N],[12,"message",E,R[4700],5,N],[13,"AssertUnlinkable",R[4694],"Assert that specified module fails to link.",5,N],[12,"module",R[4698],"Module that should be unlinkable.",5,N],[12,"message",E,R[4700],5,N],[13,"Register",R[4694],"Register a module under specified name (`as_name`).",5,N],[12,"name",R[4698],"Name of the module, which should be registered under…",5,N],[12,"as_name",E,"New name of the specified module.",5,N],[13,"PerformAction",R[4694],"Perform the specified [action].",5,N],[8,"FromBits",E,"Bitwise conversion from T",N,N],[10,R[1283],E,"Convert `other` to `Self`, preserving bitwise representation",6,[[[T]],["self"]]],[11,"into_vec",E,"Convert this object into wasm module binary representation.",7,[[],[["u8"],["vec",["u8"]]]]],[11,"from_source_and_name",E,"Create `ScriptParser` from the script in specified file.",8,[[["str"]],[[R[3],["error"]],["error"]]]],[11,"from_source_and_name_with_features",E,"Create `ScriptParser` from the script in specified file,…",8,[[[R[4701]],["str"]],[[R[3],["error"]],["error"]]]],[11,R[775],E,"Create `ScriptParser` from the script source.",8,[[["str"]],[[R[3],["error"]],["error"]]]],[11,"next",E,"Returns the next [`Command`] from the script.",8,[[["self"]],[["error"],[R[23],["command"]],[R[3],[R[23],"error"]]]]],[11,"new","wabt",E,9,[[],[R[4701]]]],[11,"enable_all",E,E,9,[[["self"]]]],[11,"exceptions_enabled",E,E,9,[[["self"]],["bool"]]],[11,"enable_exceptions",E,E,9,[[["self"]]]],[11,"disable_exceptions",E,E,9,[[["self"]]]],[11,"set_exceptions_enabled",E,E,9,[[["self"],["bool"]]]],[11,"mutable_globals_enabled",E,E,9,[[["self"]],["bool"]]],[11,"enable_mutable_globals",E,E,9,[[["self"]]]],[11,"disable_mutable_globals",E,E,9,[[["self"]]]],[11,"set_mutable_globals_enabled",E,E,9,[[["self"],["bool"]]]],[11,"sat_float_to_int_enabled",E,E,9,[[["self"]],["bool"]]],[11,"enable_sat_float_to_int",E,E,9,[[["self"]]]],[11,"disable_sat_float_to_int",E,E,9,[[["self"]]]],[11,"set_sat_float_to_int_enabled",E,E,9,[[["self"],["bool"]]]],[11,"sign_extension_enabled",E,E,9,[[["self"]],["bool"]]],[11,"enable_sign_extension",E,E,9,[[["self"]]]],[11,"disable_sign_extension",E,E,9,[[["self"]]]],[11,"set_sign_extension_enabled",E,E,9,[[["self"],["bool"]]]],[11,"simd_enabled",E,E,9,[[["self"]],["bool"]]],[11,R[4710],E,E,9,[[["self"]]]],[11,"disable_simd",E,E,9,[[["self"]]]],[11,"set_simd_enabled",E,E,9,[[["self"],["bool"]]]],[11,"threads_enabled",E,E,9,[[["self"]],["bool"]]],[11,R[4709],E,E,9,[[["self"]]]],[11,"disable_threads",E,E,9,[[["self"]]]],[11,"set_threads_enabled",E,E,9,[[["self"],["bool"]]]],[11,"multi_value_enabled",E,E,9,[[["self"]],["bool"]]],[11,R[4712],E,E,9,[[["self"]]]],[11,"disable_multi_value",E,E,9,[[["self"]]]],[11,"set_multi_value_enabled",E,E,9,[[["self"],["bool"]]]],[11,"tail_call_enabled",E,E,9,[[["self"]],["bool"]]],[11,"enable_tail_call",E,E,9,[[["self"]]]],[11,"disable_tail_call",E,E,9,[[["self"]]]],[11,"set_tail_call_enabled",E,E,9,[[["self"],["bool"]]]],[11,"bulk_memory_enabled",E,E,9,[[["self"]],["bool"]]],[11,R[4711],E,E,9,[[["self"]]]],[11,"disable_bulk_memory",E,E,9,[[["self"]]]],[11,"set_bulk_memory_enabled",E,E,9,[[["self"],["bool"]]]],[11,"parse_wat",E,"Parse source in WebAssembly text format.",10,[[[R[4701]],["asref"],["str"]],[[R[3],["module","error"]],["error"],["module"]]]],[11,"read_binary",E,"Read WebAssembly binary.",10,[[[R[4703]],["asref"]],[[R[3],["module","error"]],["error"],["module"]]]],[11,"validate",E,"Validate the module.",10,[[["self"]],[[R[3],["error"]],["error"]]]],[11,"new",E,"Create `Wat2Wasm` with default configuration.",11,[[],["wat2wasm"]]],[11,"canonicalize_lebs",E,"Write canonicalized LEB128 for var ints.",11,[[["self"],["bool"]],["wat2wasm"]]],[11,"relocatable",E,"Create a relocatable wasm binary",11,[[["self"],["bool"]],["wat2wasm"]]],[11,"write_debug_names",E,"Write debug names to the generated binary file",11,[[["self"],["bool"]],["wat2wasm"]]],[11,"validate",E,"Check for validity of module before writing.",11,[[["self"],["bool"]],["wat2wasm"]]],[11,"convert",E,R[4702],11,[[["self"],["asref"]],[[R[3],["wabtbuf","error"]],["wabtbuf"],["error"]]]],[11,"new",E,"Create `Wasm2Wat` with default configuration.",12,[[],["wasm2wat"]]],[11,R[4701],E,"Support for pre-standard features.",12,[[["self"],[R[4701]]],["wasm2wat"]]],[11,"read_debug_names",E,"Read debug names in the binary file.",12,[[["self"],["bool"]],["wasm2wat"]]],[11,"fold_exprs",E,"Write folded expressions where possible.",12,[[["self"],["bool"]],["wasm2wat"]]],[11,"inline_export",E,"Write all exports inline.",12,[[["self"],["bool"]],["wasm2wat"]]],[11,"convert",E,R[4702],12,[[["self"],["asref"]],[[R[3],["wabtbuf","error"]],["wabtbuf"],["error"]]]],[11,R[1283],E,E,13,[[[T]],[T]]],[11,"into",E,E,13,[[],[U]]],[11,R[113],E,E,13,[[["self"]],["string"]]],[11,"from",E,E,13,[[[T]],[T]]],[11,R[4],E,E,13,[[[U]],[R[3]]]],[11,R[5],E,E,13,[[],[R[3]]]],[11,R[7],E,E,13,[[["self"]],[T]]],[11,R[6],E,E,13,[[["self"]],[T]]],[11,R[8],E,E,13,[[["self"]],[R[9]]]],[11,R[1283],E,E,9,[[[T]],[T]]],[11,"into",E,E,9,[[],[U]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[46],E,E,9,[[["self"]],[T]]],[11,R[47],E,E,9,[[["self"],[T]]]],[11,R[4],E,E,9,[[[U]],[R[3]]]],[11,R[5],E,E,9,[[],[R[3]]]],[11,R[7],E,E,9,[[["self"]],[T]]],[11,R[6],E,E,9,[[["self"]],[T]]],[11,R[8],E,E,9,[[["self"]],[R[9]]]],[11,R[1283],E,E,14,[[[T]],[T]]],[11,"into",E,E,14,[[],[U]]],[11,"from",E,E,14,[[[T]],[T]]],[11,R[4],E,E,14,[[[U]],[R[3]]]],[11,R[5],E,E,14,[[],[R[3]]]],[11,R[7],E,E,14,[[["self"]],[T]]],[11,R[6],E,E,14,[[["self"]],[T]]],[11,R[8],E,E,14,[[["self"]],[R[9]]]],[11,R[1283],E,E,15,[[[T]],[T]]],[11,"into",E,E,15,[[],[U]]],[11,"from",E,E,15,[[[T]],[T]]],[11,R[4],E,E,15,[[[U]],[R[3]]]],[11,R[5],E,E,15,[[],[R[3]]]],[11,R[7],E,E,15,[[["self"]],[T]]],[11,R[6],E,E,15,[[["self"]],[T]]],[11,R[8],E,E,15,[[["self"]],[R[9]]]],[11,R[1283],E,E,10,[[[T]],[T]]],[11,"into",E,E,10,[[],[U]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[4],E,E,10,[[[U]],[R[3]]]],[11,R[5],E,E,10,[[],[R[3]]]],[11,R[7],E,E,10,[[["self"]],[T]]],[11,R[6],E,E,10,[[["self"]],[T]]],[11,R[8],E,E,10,[[["self"]],[R[9]]]],[11,R[1283],E,E,11,[[[T]],[T]]],[11,"into",E,E,11,[[],[U]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[4],E,E,11,[[[U]],[R[3]]]],[11,R[5],E,E,11,[[],[R[3]]]],[11,R[7],E,E,11,[[["self"]],[T]]],[11,R[6],E,E,11,[[["self"]],[T]]],[11,R[8],E,E,11,[[["self"]],[R[9]]]],[11,R[1283],E,E,12,[[[T]],[T]]],[11,"into",E,E,12,[[],[U]]],[11,"from",E,E,12,[[[T]],[T]]],[11,R[4],E,E,12,[[[U]],[R[3]]]],[11,R[5],E,E,12,[[],[R[3]]]],[11,R[7],E,E,12,[[["self"]],[T]]],[11,R[6],E,E,12,[[["self"]],[T]]],[11,R[8],E,E,12,[[["self"]],[R[9]]]],[11,R[1283],E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[4],E,E,0,[[[U]],[R[3]]]],[11,R[5],E,E,0,[[],[R[3]]]],[11,R[7],E,E,0,[[["self"]],[T]]],[11,R[6],E,E,0,[[["self"]],[T]]],[11,R[8],E,E,0,[[["self"]],[R[9]]]],[11,R[1283],R[4694],E,7,[[[T]],[T]]],[11,"into",E,E,7,[[],[U]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[46],E,E,7,[[["self"]],[T]]],[11,R[47],E,E,7,[[["self"],[T]]]],[11,R[4],E,E,7,[[[U]],[R[3]]]],[11,R[5],E,E,7,[[],[R[3]]]],[11,R[7],E,E,7,[[["self"]],[T]]],[11,R[6],E,E,7,[[["self"]],[T]]],[11,R[8],E,E,7,[[["self"]],[R[9]]]],[11,R[1283],E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[46],E,E,1,[[["self"]],[T]]],[11,R[47],E,E,1,[[["self"],[T]]]],[11,R[4],E,E,1,[[[U]],[R[3]]]],[11,R[5],E,E,1,[[],[R[3]]]],[11,R[7],E,E,1,[[["self"]],[T]]],[11,R[6],E,E,1,[[["self"]],[T]]],[11,R[8],E,E,1,[[["self"]],[R[9]]]],[11,R[1283],E,E,8,[[[T]],[T]]],[11,"into",E,E,8,[[],[U]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[4],E,E,8,[[[U]],[R[3]]]],[11,R[5],E,E,8,[[],[R[3]]]],[11,R[7],E,E,8,[[["self"]],[T]]],[11,R[6],E,E,8,[[["self"]],[T]]],[11,R[8],E,E,8,[[["self"]],[R[9]]]],[11,R[1283],E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[113],E,E,2,[[["self"]],["string"]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[4],E,E,2,[[[U]],[R[3]]]],[11,R[5],E,E,2,[[],[R[3]]]],[11,R[7],E,E,2,[[["self"]],[T]]],[11,R[6],E,E,2,[[["self"]],[T]]],[11,R[8],E,E,2,[[["self"]],[R[9]]]],[11,R[1283],E,E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[46],E,E,3,[[["self"]],[T]]],[11,R[47],E,E,3,[[["self"],[T]]]],[11,R[4],E,E,3,[[[U]],[R[3]]]],[11,R[5],E,E,3,[[],[R[3]]]],[11,R[7],E,E,3,[[["self"]],[T]]],[11,R[6],E,E,3,[[["self"]],[T]]],[11,R[8],E,E,3,[[["self"]],[R[9]]]],[11,R[1283],E,E,4,[[[T]],[T]]],[11,"into",E,E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[46],E,E,4,[[["self"]],[T]]],[11,R[47],E,E,4,[[["self"],[T]]]],[11,R[4],E,E,4,[[[U]],[R[3]]]],[11,R[5],E,E,4,[[],[R[3]]]],[11,R[7],E,E,4,[[["self"]],[T]]],[11,R[6],E,E,4,[[["self"]],[T]]],[11,R[8],E,E,4,[[["self"]],[R[9]]]],[11,R[1283],E,E,5,[[[T]],[T]]],[11,"into",E,E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[46],E,E,5,[[["self"]],[T]]],[11,R[47],E,E,5,[[["self"],[T]]]],[11,R[4],E,E,5,[[[U]],[R[3]]]],[11,R[5],E,E,5,[[],[R[3]]]],[11,R[7],E,E,5,[[["self"]],[T]]],[11,R[6],E,E,5,[[["self"]],[T]]],[11,R[8],E,E,5,[[["self"]],[R[9]]]],[11,"as_ref","wabt",E,14,[[["self"]]]],[11,R[83],E,E,15,[[],[R[4703]]]],[11,"clone",R[4694],E,3,[[["self"]],["value"]]],[11,"clone",E,E,4,[[["self"]],["action"]]],[11,"clone",E,E,7,[[["self"]],["modulebinary"]]],[11,"clone",E,E,5,[[["self"]],[R[4704]]]],[11,"clone",E,E,1,[[["self"]],["command"]]],[11,"clone","wabt",E,9,[[["self"]],["self"]]],[11,R[77],R[4694],E,3,[[["self"],["value"]],[[R[50]],[R[23],[R[50]]]]]],[11,"lt",E,E,3,[[["self"],["value"]],["bool"]]],[11,"le",E,E,3,[[["self"],["value"]],["bool"]]],[11,"gt",E,E,3,[[["self"],["value"]],["bool"]]],[11,"ge",E,E,3,[[["self"],["value"]],["bool"]]],[11,R[77],E,E,4,[[["self"],["action"]],[[R[50]],[R[23],[R[50]]]]]],[11,"lt",E,E,4,[[["self"],["action"]],["bool"]]],[11,"le",E,E,4,[[["self"],["action"]],["bool"]]],[11,"gt",E,E,4,[[["self"],["action"]],["bool"]]],[11,"ge",E,E,4,[[["self"],["action"]],["bool"]]],[11,"eq",E,E,3,[[["self"],["value"]],["bool"]]],[11,"ne",E,E,3,[[["self"],["value"]],["bool"]]],[11,"eq",E,E,4,[[["self"],["action"]],["bool"]]],[11,"ne",E,E,4,[[["self"],["action"]],["bool"]]],[11,"eq",E,E,7,[[["self"]],["bool"]]],[11,"eq",E,E,5,[[["self"],[R[4704]]],["bool"]]],[11,"ne",E,E,5,[[["self"],[R[4704]]],["bool"]]],[11,"eq",E,E,1,[[["self"],["command"]],["bool"]]],[11,"ne",E,E,1,[[["self"],["command"]],["bool"]]],[11,"eq","wabt",E,13,[[["self"],["error"]],["bool"]]],[11,"ne",E,E,13,[[["self"],["error"]],["bool"]]],[11,"eq",E,E,0,[[["self"],[R[401]]],["bool"]]],[11,"ne",E,E,0,[[["self"],[R[401]]],["bool"]]],[11,"drop",E,E,9,[[["self"]]]],[11,"drop",E,E,14,[[["self"]]]],[11,"drop",E,E,10,[[["self"]]]],[11,"from",R[4694],E,2,[[["wabterror"]],["error"]]],[11,"from",E,E,2,[[["error"]],["error"]]],[11,"from","wabt",E,13,[[["nulerror"]],["error"]]],[11,"fmt",R[4694],E,2,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,3,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,4,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,7,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,5,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,1,[[["self"],[R[10]]],[R[3]]]],[11,"fmt","wabt",E,13,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,0,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[4694],E,2,[[["self"],[R[10]]],[R[3]]]],[11,"fmt","wabt",E,13,[[["self"],[R[10]]],[R[3]]]],[11,R[157],R[4694],E,2,[[["self"]],["str"]]],[11,"cause",E,E,2,[[["self"]],[[R[23],["error"]],["error"]]]],[11,R[157],"wabt",E,13,[[["self"]],["str"]]]],"p":[[4,R[372]],[3,"Command"],[4,"Error"],[4,"Value"],[4,"Action"],[4,R[4705]],[8,"FromBits"],[3,R[4706]],[3,R[4707]],[3,"Features"],[3,"Module"],[3,"Wat2Wasm"],[3,"Wasm2Wat"],[3,"Error"],[3,"WabtBuf"],[3,R[4708]]]};
searchIndex["wabt_sys"]={"doc":E,"i":[[4,"Features","wabt_sys",E,N,N],[4,"Errors",E,E,N,N],[4,"WastLexer",E,E,N,N],[4,R[3875],E,E,N,N],[4,R[3876],E,E,N,N],[4,"WasmModule",E,E,N,N],[4,R[3877],E,E,N,N],[4,R[3878],E,E,N,N],[4,R[3879],E,E,N,N],[4,"Script",E,E,N,N],[4,R[3880],E,E,N,N],[4,"Result",E,E,N,N],[13,"Ok",E,E,0,N],[13,"Error",E,E,0,N],[5,"wabt_new_features",E,E,N,N],[5,"wabt_exceptions_enabled",E,E,N,N],[5,"wabt_set_exceptions_enabled",E,E,N,N],[5,"wabt_mutable_globals_enabled",E,E,N,N],[5,"wabt_set_mutable_globals_enabled",E,E,N,N],[5,"wabt_sat_float_to_int_enabled",E,E,N,N],[5,"wabt_set_sat_float_to_int_enabled",E,E,N,N],[5,"wabt_sign_extension_enabled",E,E,N,N],[5,"wabt_set_sign_extension_enabled",E,E,N,N],[5,"wabt_simd_enabled",E,E,N,N],[5,"wabt_set_simd_enabled",E,E,N,N],[5,"wabt_threads_enabled",E,E,N,N],[5,"wabt_set_threads_enabled",E,E,N,N],[5,"wabt_multi_value_enabled",E,E,N,N],[5,"wabt_set_multi_value_enabled",E,E,N,N],[5,"wabt_tail_call_enabled",E,E,N,N],[5,"wabt_set_tail_call_enabled",E,E,N,N],[5,"wabt_bulk_memory_enabled",E,E,N,N],[5,"wabt_set_bulk_memory_enabled",E,E,N,N],[5,"wabt_destroy_features",E,E,N,N],[5,"wabt_new_wast_buffer_lexer",E,E,N,N],[5,"wabt_destroy_wast_lexer",E,E,N,N],[5,"wabt_new_errors",E,E,N,N],[5,"wabt_format_text_errors",E,E,N,N],[5,"wabt_format_binary_errors",E,E,N,N],[5,"wabt_destroy_errors",E,E,N,N],[5,"wabt_parse_wat",E,E,N,N],[5,"wabt_parse_wast",E,E,N,N],[5,"wabt_parse_wat_result_get_result",E,E,N,N],[5,"wabt_parse_wat_result_release_module",E,E,N,N],[5,"wabt_destroy_parse_wat_result",E,E,N,N],[5,"wabt_resolve_names_module",E,E,N,N],[5,"wabt_apply_names_module",E,E,N,N],[5,"wabt_generate_names_module",E,E,N,N],[5,"wabt_validate_module",E,E,N,N],[5,"wabt_destroy_module",E,E,N,N],[5,"wabt_write_binary_module",E,E,N,N],[5,"wabt_write_module_result_get_result",E,E,N,N],[5,"wabt_write_module_result_release_output_buffer",E,E,N,N],[5,"wabt_destroy_write_module_result",E,E,N,N],[5,"wabt_output_buffer_get_data",E,E,N,N],[5,"wabt_output_buffer_get_size",E,E,N,N],[5,"wabt_destroy_output_buffer",E,E,N,N],[5,"wabt_resolve_names_script",E,E,N,N],[5,"wabt_validate_script",E,E,N,N],[5,"wabt_write_binary_spec_script",E,E,N,N],[5,"wabt_read_binary",E,E,N,N],[5,"wabt_parse_wast_result_get_result",E,E,N,N],[5,"wabt_parse_wast_result_release_module",E,E,N,N],[5,"wabt_destroy_parse_wast_result",E,E,N,N],[5,"wabt_read_binary_result_get_result",E,E,N,N],[5,"wabt_read_binary_result_release_module",E,E,N,N],[5,"wabt_destroy_read_binary_result",E,E,N,N],[5,"wabt_write_text_module",E,E,N,N],[5,"wabt_write_script_result_get_result",E,E,N,N],[5,"wabt_write_script_result_release_json_output_buffer",E,E,N,N],[5,"wabt_write_script_result_release_log_output_buffer",E,E,N,N],[5,"wabt_write_script_result_get_module_count",E,E,N,N],[5,"wabt_write_script_result_get_module_filename",E,E,N,N],[5,"wabt_write_script_result_release_module_output_buffer",E,E,N,N],[5,"wabt_destroy_write_script_result",E,E,N,N],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[4],E,E,1,[[[U]],[R[3]]]],[11,R[5],E,E,1,[[],[R[3]]]],[11,R[7],E,E,1,[[["self"]],[T]]],[11,R[6],E,E,1,[[["self"]],[T]]],[11,R[8],E,E,1,[[["self"]],[R[9]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[4],E,E,2,[[[U]],[R[3]]]],[11,R[5],E,E,2,[[],[R[3]]]],[11,R[7],E,E,2,[[["self"]],[T]]],[11,R[6],E,E,2,[[["self"]],[T]]],[11,R[8],E,E,2,[[["self"]],[R[9]]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[4],E,E,3,[[[U]],[R[3]]]],[11,R[5],E,E,3,[[],[R[3]]]],[11,R[7],E,E,3,[[["self"]],[T]]],[11,R[6],E,E,3,[[["self"]],[T]]],[11,R[8],E,E,3,[[["self"]],[R[9]]]],[11,"into",E,E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[4],E,E,4,[[[U]],[R[3]]]],[11,R[5],E,E,4,[[],[R[3]]]],[11,R[7],E,E,4,[[["self"]],[T]]],[11,R[6],E,E,4,[[["self"]],[T]]],[11,R[8],E,E,4,[[["self"]],[R[9]]]],[11,"into",E,E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[4],E,E,5,[[[U]],[R[3]]]],[11,R[5],E,E,5,[[],[R[3]]]],[11,R[7],E,E,5,[[["self"]],[T]]],[11,R[6],E,E,5,[[["self"]],[T]]],[11,R[8],E,E,5,[[["self"]],[R[9]]]],[11,"into",E,E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[4],E,E,6,[[[U]],[R[3]]]],[11,R[5],E,E,6,[[],[R[3]]]],[11,R[7],E,E,6,[[["self"]],[T]]],[11,R[6],E,E,6,[[["self"]],[T]]],[11,R[8],E,E,6,[[["self"]],[R[9]]]],[11,"into",E,E,7,[[],[U]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[4],E,E,7,[[[U]],[R[3]]]],[11,R[5],E,E,7,[[],[R[3]]]],[11,R[7],E,E,7,[[["self"]],[T]]],[11,R[6],E,E,7,[[["self"]],[T]]],[11,R[8],E,E,7,[[["self"]],[R[9]]]],[11,"into",E,E,8,[[],[U]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[4],E,E,8,[[[U]],[R[3]]]],[11,R[5],E,E,8,[[],[R[3]]]],[11,R[7],E,E,8,[[["self"]],[T]]],[11,R[6],E,E,8,[[["self"]],[T]]],[11,R[8],E,E,8,[[["self"]],[R[9]]]],[11,"into",E,E,9,[[],[U]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[4],E,E,9,[[[U]],[R[3]]]],[11,R[5],E,E,9,[[],[R[3]]]],[11,R[7],E,E,9,[[["self"]],[T]]],[11,R[6],E,E,9,[[["self"]],[T]]],[11,R[8],E,E,9,[[["self"]],[R[9]]]],[11,"into",E,E,10,[[],[U]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[4],E,E,10,[[[U]],[R[3]]]],[11,R[5],E,E,10,[[],[R[3]]]],[11,R[7],E,E,10,[[["self"]],[T]]],[11,R[6],E,E,10,[[["self"]],[T]]],[11,R[8],E,E,10,[[["self"]],[R[9]]]],[11,"into",E,E,11,[[],[U]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[4],E,E,11,[[[U]],[R[3]]]],[11,R[5],E,E,11,[[],[R[3]]]],[11,R[7],E,E,11,[[["self"]],[T]]],[11,R[6],E,E,11,[[["self"]],[T]]],[11,R[8],E,E,11,[[["self"]],[R[9]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[4],E,E,0,[[[U]],[R[3]]]],[11,R[5],E,E,0,[[],[R[3]]]],[11,R[7],E,E,0,[[["self"]],[T]]],[11,R[6],E,E,0,[[["self"]],[T]]],[11,R[8],E,E,0,[[["self"]],[R[9]]]],[11,"eq",E,E,0,[[["self"],[R[3]]],["bool"]]],[11,"fmt",E,E,0,[[["self"],[R[10]]],[R[3]]]]],"p":[[4,"Result"],[4,"Features"],[4,"Errors"],[4,"WastLexer"],[4,R[3875]],[4,R[3876]],[4,"WasmModule"],[4,R[3877]],[4,R[3878]],[4,R[3879]],[4,"Script"],[4,R[3880]]]};
searchIndex["wasmer"]={"doc":E,"i":[[0,"update","wasmer","When wasmer self-update is executed, this is what gets…",N,N],[5,"self_update","wasmer::update",E,N,[[]]],[0,"utils","wasmer","Utility functions for the WebAssembly module",N,N],[5,"is_wasm_binary","wasmer::utils","Detect if a provided binary is a Wasm file",N,[[],["bool"]]],[0,"webassembly","wasmer",E,N,N],[5,R[6061],"wasmer::webassembly",R[6062],N,[[[R[6063]],[R[4716]]],[[R[3],["module",R[4828]]],["module"],[R[4828]]]]],[3,R[6059],E,E,N,N],[12,"module",E,"A webassembly::Module object representing the compiled…",0,N],[12,R[143],E,"A webassembly::Instance object that contains all the…",0,N],[4,R[6060],E,E,N,N],[13,"Emscripten",E,E,1,N],[13,"WASI",E,E,1,N],[13,"None",E,E,1,N],[5,R[5931],E,"The webassembly::instantiate() function allows you to…",N,[[[R[4783]]],[[R[3],[R[6058]]],[R[6058]]]]],[5,"instantiate_streaming",E,"The webassembly::instantiate_streaming() function compiles…",N,[[["vec",["u8"]],[R[4783]],["u8"]],[[R[3],[R[6058]]],[R[6058]]]]],[5,"compile",E,"The webassembly::compile() function compiles a…",N,[[],[[R[3],["module"]],["module"]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[4],E,E,0,[[[U]],[R[3]]]],[11,R[5],E,E,0,[[],[R[3]]]],[11,R[7],E,E,0,[[["self"]],[T]]],[11,R[6],E,E,0,[[["self"]],[T]]],[11,R[8],E,E,0,[[["self"]],[R[9]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[4],E,E,1,[[[U]],[R[3]]]],[11,R[5],E,E,1,[[],[R[3]]]],[11,R[7],E,E,1,[[["self"]],[T]]],[11,R[6],E,E,1,[[["self"]],[T]]],[11,R[8],E,E,1,[[["self"]],[R[9]]]],[11,"eq",E,E,1,[[["self"],["instanceabi"]],["bool"]]]],"p":[[3,R[6059]],[4,R[6060]]]};
searchIndex["wasmer_clif_backend"]={"doc":E,"i":[[6,"CraneliftCompiler","wasmer_clif_backend",E,N,N],[17,"VERSION",E,R[5446],N,N]],"p":[]};
searchIndex["wasmer_clif_fork_frontend"]={"doc":"Cranelift IR builder library.","i":[[3,R[5541],"wasmer_clif_fork_frontend","Temporary object used to build a single Cranelift IR…",N,N],[12,"func",E,"The function currently being built. This field is public…",0,N],[3,R[5542],E,"Structure used for translating a series of functions into…",N,N],[3,"Position",E,"Position",N,N],[3,"Block",E,"A opaque reference to a basic block.",N,N],[3,"Switch",E,"Unlike with `br_table`, `Switch` cases may be sparse or…",N,N],[3,"Variable",E,"An opaque reference to a variable.",N,N],[11,R[83],E,"Default position",1,[[],["self"]]],[11,"new",E,"Creates a FunctionBuilderContext structure. The structure…",2,[[],["self"]]],[11,"new",E,"Creates a new FunctionBuilder structure that will operate…",0,[[[R[368]],["functionbuildercontext"],[R[4928]]],["self"]]],[11,R[5122],E,"Set the source location that should be assigned to all new…",0,[[["self"],[R[4926]]]]],[11,"create_ebb",E,"Creates a new `Ebb` and returns its reference.",0,[[["self"]],["ebb"]]],[11,"switch_to_block",E,"After the call to this function, new instructions will be…",0,[[["self"],["ebb"]]]],[11,"seal_block",E,"Declares that all the predecessors of this block are known.",0,[[["self"],["ebb"]]]],[11,"seal_all_blocks",E,"Effectively calls seal_block on all blocks in the function.",0,[[["self"]]]],[11,"declare_var",E,"In order to use a variable in a `use_var`, you need to…",0,[[["self"],["type"],["variable"]]]],[11,"use_var",E,"Returns the Cranelift IR value corresponding to the…",0,[[["self"],["variable"]],["value"]]],[11,"def_var",E,"Register a new definition of a user variable. The type of…",0,[[["self"],["value"],["variable"]]]],[11,"set_val_label",E,"Set label for Value",0,[[["self"],["value"],[R[5147]]]]],[11,R[5524],E,R[5525],0,[[["self"],[R[5145]]],[R[4986]]]],[11,R[5526],E,R[5527],0,[[["self"],[R[4990]]],[R[4991]]]],[11,R[5528],E,R[5529],0,[[["self"],[R[3279]]],["sigref"]]],[11,R[5530],E,R[5531],0,[[["self"],[R[5142]]],["funcref"]]],[11,R[5532],E,R[5533],0,[[["self"],[R[5143]]],[R[5001]]]],[11,R[5534],E,R[5535],0,[[["self"],["heapdata"]],["heap"]]],[11,"ins",E,"Returns an object with the `InstBuilder` trait that allows…",0,[[["self"]],["funcinstbuilder"]]],[11,"ensure_inserted_ebb",E,"Make sure that the current EBB is inserted in the layout.",0,[[["self"]]]],[11,"cursor",E,"Returns a `FuncCursor` pointed at the current position…",0,[[["self"]],[R[5536]]]],[11,"append_ebb_params_for_function_params",E,R[5537],0,[[["self"],["ebb"]]]],[11,"append_ebb_params_for_function_returns",E,R[5537],0,[[["self"],["ebb"]]]],[11,R[5543],E,"Declare that translation of the current function is…",0,[[["self"]]]],[11,"ebb_params",E,"Retrieves all the parameters for an `Ebb` currently…",0,[[["self"],["ebb"]]]],[11,R[3279],E,"Retrieves the signature with reference `sigref` previously…",0,[[["self"],["sigref"]],[[R[23],[R[3279]]],[R[3279]]]]],[11,R[5538],E,"Creates a parameter for a specific `Ebb` by appending it…",0,[[["self"],["ebb"],["type"]],["value"]]],[11,R[5539],E,"Returns the result values of an instruction.",0,[[["self"],["inst"]]]],[11,"change_jump_destination",E,"Changes the destination of a jump instruction after…",0,[[["self"],["inst"],["ebb"]]]],[11,"is_unreachable",E,"Returns `true` if and only if the current `Ebb` is sealed…",0,[[["self"]],["bool"]]],[11,"is_pristine",E,"Returns `true` if and only if no instructions have been…",0,[[["self"]],["bool"]]],[11,"is_filled",E,"Returns `true` if and only if a terminator instruction has…",0,[[["self"]],["bool"]]],[11,"display",E,"Returns a displayable object for the function as it is.",0,[[["into",[R[23]]],[R[23],[R[4929]]],["self"]],[R[4954]]]],[11,"call_memcpy",E,"Calls libc.memcpy",0,[[["self"],["value"],[R[5148]]]]],[11,"emit_small_memcpy",E,"Optimised memcpy for small copies.",0,[[["self"],["u8"],["value"],["u64"],[R[5148]]]]],[11,"call_memset",E,R[5540],0,[[["self"],["value"],[R[5148]]]]],[11,"emit_small_memset",E,R[5540],0,[[["self"],["u8"],["value"],["u64"],[R[5148]]]]],[11,"call_memmove",E,"Calls libc.memmove",0,[[["self"],["value"],[R[5148]]]]],[11,"emit_small_memmove",E,"Optimised memmove for small moves.",0,[[["self"],["u8"],["value"],["u64"],[R[5148]]]]],[11,"new",E,"Create a new empty switch",3,[[],["self"]]],[11,"set_entry",E,"Set a switch entry",3,[[["self"],["ebb"],["u64"]]]],[11,"emit",E,"Build the switch",3,[[["value"],["ebb"],[R[5840]]]]],[11,"with_u32",E,"Create a new Variable with the given index.",4,[[["u32"]],["self"]]],[17,"VERSION",E,R[5523],N,N],[11,"from",E,E,0,[[[T]],[T]]],[11,R[4],E,E,0,[[[U]],[R[3]]]],[11,"into",E,E,0,[[],[U]]],[11,R[5],E,E,0,[[],[R[3]]]],[11,R[6],E,E,0,[[["self"]],[T]]],[11,R[7],E,E,0,[[["self"]],[T]]],[11,R[8],E,E,0,[[["self"]],[R[9]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[4],E,E,2,[[[U]],[R[3]]]],[11,"into",E,E,2,[[],[U]]],[11,R[5],E,E,2,[[],[R[3]]]],[11,R[6],E,E,2,[[["self"]],[T]]],[11,R[7],E,E,2,[[["self"]],[T]]],[11,R[8],E,E,2,[[["self"]],[R[9]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[4],E,E,1,[[[U]],[R[3]]]],[11,"into",E,E,1,[[],[U]]],[11,R[5],E,E,1,[[],[R[3]]]],[11,R[6],E,E,1,[[["self"]],[T]]],[11,R[7],E,E,1,[[["self"]],[T]]],[11,R[8],E,E,1,[[["self"]],[R[9]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[4],E,E,5,[[[U]],[R[3]]]],[11,"into",E,E,5,[[],[U]]],[11,R[5],E,E,5,[[],[R[3]]]],[11,R[6],E,E,5,[[["self"]],[T]]],[11,R[7],E,E,5,[[["self"]],[T]]],[11,R[8],E,E,5,[[["self"]],[R[9]]]],[11,R[46],E,E,5,[[["self"]],[T]]],[11,R[47],E,E,5,[[["self"],[T]]]],[11,"key",E,E,5,[[["self"]],[T]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[4],E,E,3,[[[U]],[R[3]]]],[11,"into",E,E,3,[[],[U]]],[11,R[5],E,E,3,[[],[R[3]]]],[11,R[6],E,E,3,[[["self"]],[T]]],[11,R[7],E,E,3,[[["self"]],[T]]],[11,R[8],E,E,3,[[["self"]],[R[9]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[4],E,E,4,[[[U]],[R[3]]]],[11,"into",E,E,4,[[],[U]]],[11,R[5],E,E,4,[[],[R[3]]]],[11,R[6],E,E,4,[[["self"]],[T]]],[11,R[7],E,E,4,[[["self"]],[T]]],[11,R[8],E,E,4,[[["self"]],[R[9]]]],[11,R[46],E,E,4,[[["self"]],[T]]],[11,R[47],E,E,4,[[["self"],[T]]]],[11,"key",E,E,4,[[["self"]],[T]]],[11,"eq",E,E,5,[[["self"],["block"]],["bool"]]],[11,"ne",E,E,5,[[["self"],["block"]],["bool"]]],[11,"eq",E,E,4,[[["self"],["variable"]],["bool"]]],[11,"ne",E,E,4,[[["self"],["variable"]],["bool"]]],[11,"fmt",E,E,5,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,3,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,4,[[["self"],[R[10]]],[R[3]]]],[11,"clone",E,E,5,[[["self"]],["block"]]],[11,"clone",E,E,4,[[["self"]],["variable"]]],[11,R[83],E,E,3,[[],["switch"]]],[11,R[5150],E,E,5,[[],["self"]]],[11,"new",E,E,5,[[["usize"]],["self"]]],[11,"index",E,E,5,[[],["usize"]]],[11,"new",E,E,4,[[["usize"]],["self"]]],[11,"index",E,E,4,[[],["usize"]]]],"p":[[3,R[5541]],[3,"Position"],[3,R[5542]],[3,"Switch"],[3,"Variable"],[3,"Block"]]};
searchIndex["wasmer_clif_fork_wasm"]={"doc":"Performs translation from a wasm module in binary format…","i":[[3,R[5899],R[5834],"This `ModuleEnvironment` implementation is a \"naïve\" one,…",N,N],[12,"info",E,"Module information.",0,N],[12,"func_bytecode_sizes",E,"Vector of wasm bytecode size for each function.",0,N],[3,R[5900],E,"WebAssembly to Cranelift IR function translator.",N,N],[12,"func_ctx",E,"Func ctx",1,N],[12,"state",E,"Translation state",1,N],[3,R[5901],E,"Contains information passed along during the translation…",N,N],[12,"stack",E,"Stack",2,N],[12,"control_stack",E,"Control stack",2,N],[12,"reachable",E,"Reachability",2,N],[3,R[5904],E,"Index type of a defined function inside the WebAssembly…",N,N],[3,R[5907],E,"Index type of a defined global inside the WebAssembly…",N,N],[3,R[5906],E,"Index type of a defined memory inside the WebAssembly…",N,N],[3,R[5905],E,"Index type of a defined table inside the WebAssembly module.",N,N],[3,R[5913],E,"Index type of a function (imported or defined) inside the…",N,N],[3,"Global",E,"WebAssembly global.",N,N],[12,"ty",E,"The type of the value stored in the global.",3,N],[12,R[1011],E,"A flag indicating whether the value may change at runtime.",3,N],[12,R[4833],E,"The source of the initial value.",3,N],[3,R[4884],E,"Index type of a global variable (imported or defined)…",N,N],[3,"Memory",E,"WebAssembly linear memory.",N,N],[12,"minimum",E,"The minimum number of pages in the memory.",4,N],[12,"maximum",E,"The maximum number of pages in the memory.",4,N],[12,"shared",E,"Whether the memory may be shared between multiple threads.",4,N],[3,R[4879],E,"Index type of a linear memory (imported or defined) inside…",N,N],[3,R[5908],E,"Index type of a signature (imported or defined) inside the…",N,N],[3,"Table",E,"WebAssembly table.",N,N],[12,"ty",E,"The type of data stored in elements of the table.",5,N],[12,"minimum",E,"The minimum number of elements in the table.",5,N],[12,"maximum",E,"The maximum number of elements in the table.",5,N],[3,R[5912],E,"Index type of a table (imported or defined) inside the…",N,N],[4,R[5902],E,"The value of a WebAssembly global variable.",N,N],[13,"Const",E,"This is a constant global with a value known at compile…",6,N],[13,"Memory",E,"This is a variable in memory that should be referenced…",6,N],[12,"gv","wasmer_clif_fork_wasm::GlobalVariable","The address of the global variable storage.",6,N],[12,"offset",E,"An offset to add to the address.",6,N],[12,"ty",E,"The global variable's type.",6,N],[4,"ReturnMode",R[5834],"How to return from functions.",N,N],[13,"NormalReturns",E,"Use normal return instructions as needed.",7,N],[13,R[5835],E,"Use a single fallthrough return at the end of the function.",7,N],[4,"WasmError",E,"A WebAssembly translation error.",N,N],[13,"InvalidWebAssembly",E,"The input WebAssembly code is invalid.",8,N],[12,"message","wasmer_clif_fork_wasm::WasmError","A string describing the validation error.",8,N],[12,"offset",E,"The bytecode offset where the error occurred.",8,N],[13,R[5836],R[5834],"A feature used by the WebAssembly code is not supported by…",8,N],[13,R[5837],E,R[5838],8,N],[13,"User",E,"Any user-defined error.",8,N],[4,R[5911],E,"Globals are initialized via the four `const` operators or…",N,N],[13,"I32Const",E,"An `i32.const`.",9,N],[13,"I64Const",E,"An `i64.const`.",9,N],[13,"F32Const",E,"An `f32.const`.",9,N],[13,"F64Const",E,"An `f64.const`.",9,N],[13,"GetGlobal",E,"A `get_global` of another global.",9,N],[13,"Import",E,"< The global is imported from, and thus initialized by, a…",9,N],[4,R[5903],E,"WebAssembly table element. Can be a function or a scalar…",N,N],[13,"Val",E,"A scalar type.",10,N],[13,"Func",E,R[5839],10,N],[5,"translate_operator",E,"Translates wasm operators into Cranelift IR instructions.…",N,[[["translationstate"],[R[233]],["fe"],[R[5840]]],[R[5841]]]],[5,"declare_locals",E,"Declare `count` local variables of the same type, starting…",N,[[["u32"],["type"],["usize"],[R[5840]]],[R[5841]]]],[5,"translate_module",E,"Translate a sequence of bytes forming a valid Wasm binary…",N,[[["moduleenvironment"]],[R[5841]]]],[5,"get_vmctx_value_label",E,"Special VMContext value label. It is tracked as…",N,[[],[R[5147]]]],[11,"new",E,"Creates a new `DummyEnvironment` instance.",0,[[[R[5864]],["bool"],[R[5148]]],["self"]]],[11,"func_env",E,"Return a `DummyFuncEnvironment` for translating functions…",0,[[["self"]],["dummyfuncenvironment"]]],[11,"get_num_func_imports",E,"Return the number of imported functions within this…",0,[[["self"]],["usize"]]],[11,"new",E,"Create a new translator.",1,[[],["self"]]],[11,R[395],E,"Translate a binary WebAssembly function.",1,[[["self"],["usize"],[R[4928]],["fe"]],[R[5841]]]],[11,"translate_from_reader",E,"Translate a binary WebAssembly function from a…",1,[[["self"],["fe"],[R[4928]],[R[206]]],[R[5841]]]],[11,"new",E,"New TranslationState",2,[[],["self"]]],[11,R[3331],E,"Initialize the state for compiling a function with the…",2,[[["self"],["ebb"],[R[3279]]]]],[11,"push1",E,"Push a value.",2,[[["self"],["value"]]]],[11,"pushn",E,"Push multiple values.",2,[[["self"]]]],[11,"pop1",E,"Pop one value.",2,[[["self"]],["value"]]],[11,"peek1",E,"Peek at the top of the stack without popping it.",2,[[["self"]],["value"]]],[11,"pop2",E,"Pop two values. Return them in the order they were pushed.",2,[[["self"]]]],[11,"pop3",E,"Pop three values. Return them in the order they were pushed.",2,[[["self"]]]],[11,"popn",E,"Pop the top `n` values on the stack.",2,[[["self"],["usize"]]]],[11,"peekn",E,"Peek at the top `n` values on the stack in the order they…",2,[[["self"],["usize"]]]],[11,"push_block",E,"Push a block on the control stack.",2,[[["self"],["ebb"],["usize"]]]],[11,"push_loop",E,"Push a loop on the control stack.",2,[[["self"],["ebb"],["usize"]]]],[11,"push_if",E,"Push an if on the control stack.",2,[[["self"],["inst"],["ebb"],["usize"]]]],[11,R[5594],E,"Get the `GlobalVariable` reference that should be used to…",2,[[["self"],["u32"],[R[4928]],["fe"]],[[R[5841],[R[5842]]],[R[5842]]]]],[11,"get_heap",E,"Get the `Heap` reference that should be used to access…",2,[[["self"],["u32"],[R[4928]],["fe"]],[[R[5841],["heap"]],["heap"]]]],[11,"get_table",E,"Get the `Table` reference that should be used to access…",2,[[["self"],["u32"],[R[4928]],["fe"]],[[R[5841],["table"]],["table"]]]],[11,"get_indirect_sig",E,"Get the `SigRef` reference that should be used to make an…",2,[[["self"],["u32"],[R[4928]],["fe"]],[R[5841]]]],[11,"get_direct_func",E,"Get the `FuncRef` reference that should be used to make a…",2,[[["self"],["u32"],[R[4928]],["fe"]],[R[5841]]]],[11,R[4950],E,R[4948],11,[[["u32"]],["self"]]],[11,"as_u32",E,R[4948],11,[[],["u32"]]],[11,R[4950],E,R[4948],12,[[["u32"]],["self"]]],[11,"as_u32",E,R[4948],12,[[],["u32"]]],[11,R[4950],E,R[4948],13,[[["u32"]],["self"]]],[11,"as_u32",E,R[4948],13,[[],["u32"]]],[11,R[4950],E,R[4948],14,[[["u32"]],["self"]]],[11,"as_u32",E,R[4948],14,[[],["u32"]]],[11,R[4950],E,R[4948],15,[[["u32"]],["self"]]],[11,"as_u32",E,R[4948],15,[[],["u32"]]],[11,R[4950],E,R[4948],16,[[["u32"]],["self"]]],[11,"as_u32",E,R[4948],16,[[],["u32"]]],[11,R[4950],E,R[4948],17,[[["u32"]],["self"]]],[11,"as_u32",E,R[4948],17,[[],["u32"]]],[11,R[4950],E,R[4948],18,[[["u32"]],["self"]]],[11,"as_u32",E,R[4948],18,[[],["u32"]]],[11,R[4950],E,R[4948],19,[[["u32"]],["self"]]],[11,"as_u32",E,R[4948],19,[[],["u32"]]],[6,"WasmResult",E,"A convenient alias for a `Result` that uses `WasmError` as…",N,N],[17,"VERSION",E,R[5523],N,N],[8,R[5909],E,"Environment affecting the translation of a single…",N,N],[10,R[5845],E,R[5846],20,[[["self"]],[R[5148]]]],[11,R[5069],E,R[5869],20,[[["self"]],["type"]]],[11,R[5071],E,R[5870],20,[[["self"]],["u8"]]],[11,R[5871],E,R[5872],20,[[["self"]],[R[5864]]]],[10,"make_global",E,R[5843],20,[[["self"],[R[4765]],[R[4928]]],[[R[5841],[R[5842]]],[R[5842]]]]],[10,"make_heap",E,R[5843],20,[[["self"],[R[4762]],[R[4928]]],[[R[5841],["heap"]],["heap"]]]],[10,"make_table",E,R[5843],20,[[["self"],[R[4764]],[R[4928]]],[[R[5841],["table"]],["table"]]]],[10,"make_indirect_sig",E,"Set up a signature definition in the preamble of `func`…",20,[[["self"],[R[5844]],[R[4928]]],[[R[5841],["sigref"]],["sigref"]]]],[10,"make_direct_func",E,"Set up an external function definition in the preamble of…",20,[[["self"],[R[4759]],[R[4928]]],[[R[5841],["funcref"]],["funcref"]]]],[10,"translate_call_indirect",E,"Translate a `call_indirect` WebAssembly instruction at…",20,[[["self"],[R[5844]],[R[5536]],["value"],["sigref"],[R[4764]],["table"]],[["inst"],[R[5841],["inst"]]]]],[11,R[5873],E,R[5874],20,[[["self"],[R[5536]],[R[4759]],["funcref"]],[["inst"],[R[5841],["inst"]]]]],[10,"translate_memory_grow",E,"Translate a `memory.grow` WebAssembly instruction.",20,[[["self"],[R[5536]],[R[4762]],["heap"],["value"]],[[R[5841],["value"]],["value"]]]],[10,"translate_memory_size",E,"Translates a `memory.size` WebAssembly instruction.",20,[[["self"],[R[5536]],[R[4762]],["heap"]],[[R[5841],["value"]],["value"]]]],[11,R[5875],E,R[5876],20,[[["self"],[R[5536]]],[R[5841]]]],[8,R[5910],E,"An object satisfying the `ModuleEnvironment` trait can be…",N,N],[10,R[5845],E,R[5846],21,[[["self"]],[R[5148]]]],[11,R[5877],E,R[5878],21,[[["self"],["u32"]]]],[10,R[5847],E,"Declares a function signature to the environment.",21,[[["self"],[R[3279]]]]],[11,R[5879],E,R[5880],21,[[["self"],["u32"]]]],[10,R[5848],E,"Declares a function import to the environment.",21,[[["self"],[R[5844]],["str"]]]],[10,R[5853],E,"Declares a table import to the environment.",21,[[["self"],["table"],["str"]]]],[10,R[5856],E,"Declares a memory import to the environment.",21,[[["self"],["memory"],["str"]]]],[10,R[5851],E,"Declares a global import to the environment.",21,[[["self"],["global"],["str"]]]],[11,R[5881],E,R[5882],21,[[["self"]]]],[11,R[5883],E,R[5884],21,[[["self"],["u32"]]]],[10,R[5849],E,"Declares the type (signature) of a local function in the…",21,[[["self"],[R[5844]]]]],[11,R[5885],E,R[5886],21,[[["self"],["u32"]]]],[10,R[5852],E,"Declares a table to the environment.",21,[[["self"],["table"]]]],[11,R[5887],E,R[5888],21,[[["self"],["u32"]]]],[10,R[5855],E,"Declares a memory to the environment",21,[[["self"],["memory"]]]],[11,R[5889],E,R[5890],21,[[["self"],["u32"]]]],[10,R[5850],E,"Declares a global to the environment.",21,[[["self"],["global"]]]],[11,R[5891],E,R[5892],21,[[["self"],["u32"]]]],[10,R[5858],E,"Declares a function export to the environment.",21,[[["self"],["str"],[R[4759]]]]],[10,R[5859],E,"Declares a table export to the environment.",21,[[["self"],[R[4764]],["str"]]]],[10,R[5860],E,"Declares a memory export to the environment.",21,[[["self"],[R[4762]],["str"]]]],[10,R[5861],E,"Declares a global export to the environment.",21,[[["self"],["str"],[R[4765]]]]],[11,R[5893],E,R[5894],21,[[["self"]]]],[10,R[5862],E,"Declares the optional start function.",21,[[["self"],[R[4759]]]]],[11,R[5895],E,R[5896],21,[[["self"],["u32"]]]],[10,R[5854],E,"Fills a declared table with references to functions in the…",21,[[["self"],["usize"],[R[4765]],[R[4764]],[R[23],[R[4765]]],["box"]]]],[10,R[5863],E,"Provides the contents of a function body.",21,[[["self"],["usize"]],[R[5841]]]],[11,R[5897],E,R[5898],21,[[["self"],["u32"]]]],[10,R[5857],E,"Fills a declared memory with bytes at module instantiation.",21,[[["self"],[R[4762]],["usize"],[R[4765]],[R[23],[R[4765]]]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[4],E,E,0,[[[U]],[R[3]]]],[11,"into",E,E,0,[[],[U]]],[11,R[5],E,E,0,[[],[R[3]]]],[11,R[6],E,E,0,[[["self"]],[T]]],[11,R[7],E,E,0,[[["self"]],[T]]],[11,R[8],E,E,0,[[["self"]],[R[9]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[4],E,E,1,[[[U]],[R[3]]]],[11,"into",E,E,1,[[],[U]]],[11,R[5],E,E,1,[[],[R[3]]]],[11,R[6],E,E,1,[[["self"]],[T]]],[11,R[7],E,E,1,[[["self"]],[T]]],[11,R[8],E,E,1,[[["self"]],[R[9]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[4],E,E,2,[[[U]],[R[3]]]],[11,"into",E,E,2,[[],[U]]],[11,R[5],E,E,2,[[],[R[3]]]],[11,R[6],E,E,2,[[["self"]],[T]]],[11,R[7],E,E,2,[[["self"]],[T]]],[11,R[8],E,E,2,[[["self"]],[R[9]]]],[11,"from",E,E,12,[[[T]],[T]]],[11,R[4],E,E,12,[[[U]],[R[3]]]],[11,"into",E,E,12,[[],[U]]],[11,R[5],E,E,12,[[],[R[3]]]],[11,R[6],E,E,12,[[["self"]],[T]]],[11,R[7],E,E,12,[[["self"]],[T]]],[11,R[8],E,E,12,[[["self"]],[R[9]]]],[11,R[46],E,E,12,[[["self"]],[T]]],[11,R[47],E,E,12,[[["self"],[T]]]],[11,"key",E,E,12,[[["self"]],[T]]],[11,"from",E,E,15,[[[T]],[T]]],[11,R[4],E,E,15,[[[U]],[R[3]]]],[11,"into",E,E,15,[[],[U]]],[11,R[5],E,E,15,[[],[R[3]]]],[11,R[6],E,E,15,[[["self"]],[T]]],[11,R[7],E,E,15,[[["self"]],[T]]],[11,R[8],E,E,15,[[["self"]],[R[9]]]],[11,R[46],E,E,15,[[["self"]],[T]]],[11,R[47],E,E,15,[[["self"],[T]]]],[11,"key",E,E,15,[[["self"]],[T]]],[11,"from",E,E,14,[[[T]],[T]]],[11,R[4],E,E,14,[[[U]],[R[3]]]],[11,"into",E,E,14,[[],[U]]],[11,R[5],E,E,14,[[],[R[3]]]],[11,R[6],E,E,14,[[["self"]],[T]]],[11,R[7],E,E,14,[[["self"]],[T]]],[11,R[8],E,E,14,[[["self"]],[R[9]]]],[11,R[46],E,E,14,[[["self"]],[T]]],[11,R[47],E,E,14,[[["self"],[T]]]],[11,"key",E,E,14,[[["self"]],[T]]],[11,"from",E,E,13,[[[T]],[T]]],[11,R[4],E,E,13,[[[U]],[R[3]]]],[11,"into",E,E,13,[[],[U]]],[11,R[5],E,E,13,[[],[R[3]]]],[11,R[6],E,E,13,[[["self"]],[T]]],[11,R[7],E,E,13,[[["self"]],[T]]],[11,R[8],E,E,13,[[["self"]],[R[9]]]],[11,R[46],E,E,13,[[["self"]],[T]]],[11,R[47],E,E,13,[[["self"],[T]]]],[11,"key",E,E,13,[[["self"]],[T]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[4],E,E,11,[[[U]],[R[3]]]],[11,"into",E,E,11,[[],[U]]],[11,R[5],E,E,11,[[],[R[3]]]],[11,R[6],E,E,11,[[["self"]],[T]]],[11,R[7],E,E,11,[[["self"]],[T]]],[11,R[8],E,E,11,[[["self"]],[R[9]]]],[11,R[46],E,E,11,[[["self"]],[T]]],[11,R[47],E,E,11,[[["self"],[T]]]],[11,"key",E,E,11,[[["self"]],[T]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[4],E,E,3,[[[U]],[R[3]]]],[11,"into",E,E,3,[[],[U]]],[11,R[5],E,E,3,[[],[R[3]]]],[11,R[6],E,E,3,[[["self"]],[T]]],[11,R[7],E,E,3,[[["self"]],[T]]],[11,R[8],E,E,3,[[["self"]],[R[9]]]],[11,R[46],E,E,3,[[["self"]],[T]]],[11,R[47],E,E,3,[[["self"],[T]]]],[11,"from",E,E,17,[[[T]],[T]]],[11,R[4],E,E,17,[[[U]],[R[3]]]],[11,"into",E,E,17,[[],[U]]],[11,R[5],E,E,17,[[],[R[3]]]],[11,R[6],E,E,17,[[["self"]],[T]]],[11,R[7],E,E,17,[[["self"]],[T]]],[11,R[8],E,E,17,[[["self"]],[R[9]]]],[11,R[46],E,E,17,[[["self"]],[T]]],[11,R[47],E,E,17,[[["self"],[T]]]],[11,"key",E,E,17,[[["self"]],[T]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[4],E,E,4,[[[U]],[R[3]]]],[11,"into",E,E,4,[[],[U]]],[11,R[5],E,E,4,[[],[R[3]]]],[11,R[6],E,E,4,[[["self"]],[T]]],[11,R[7],E,E,4,[[["self"]],[T]]],[11,R[8],E,E,4,[[["self"]],[R[9]]]],[11,R[46],E,E,4,[[["self"]],[T]]],[11,R[47],E,E,4,[[["self"],[T]]]],[11,"from",E,E,18,[[[T]],[T]]],[11,R[4],E,E,18,[[[U]],[R[3]]]],[11,"into",E,E,18,[[],[U]]],[11,R[5],E,E,18,[[],[R[3]]]],[11,R[6],E,E,18,[[["self"]],[T]]],[11,R[7],E,E,18,[[["self"]],[T]]],[11,R[8],E,E,18,[[["self"]],[R[9]]]],[11,R[46],E,E,18,[[["self"]],[T]]],[11,R[47],E,E,18,[[["self"],[T]]]],[11,"key",E,E,18,[[["self"]],[T]]],[11,"from",E,E,19,[[[T]],[T]]],[11,R[4],E,E,19,[[[U]],[R[3]]]],[11,"into",E,E,19,[[],[U]]],[11,R[5],E,E,19,[[],[R[3]]]],[11,R[6],E,E,19,[[["self"]],[T]]],[11,R[7],E,E,19,[[["self"]],[T]]],[11,R[8],E,E,19,[[["self"]],[R[9]]]],[11,R[46],E,E,19,[[["self"]],[T]]],[11,R[47],E,E,19,[[["self"],[T]]]],[11,"key",E,E,19,[[["self"]],[T]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[4],E,E,5,[[[U]],[R[3]]]],[11,"into",E,E,5,[[],[U]]],[11,R[5],E,E,5,[[],[R[3]]]],[11,R[6],E,E,5,[[["self"]],[T]]],[11,R[7],E,E,5,[[["self"]],[T]]],[11,R[8],E,E,5,[[["self"]],[R[9]]]],[11,R[46],E,E,5,[[["self"]],[T]]],[11,R[47],E,E,5,[[["self"],[T]]]],[11,"from",E,E,16,[[[T]],[T]]],[11,R[4],E,E,16,[[[U]],[R[3]]]],[11,"into",E,E,16,[[],[U]]],[11,R[5],E,E,16,[[],[R[3]]]],[11,R[6],E,E,16,[[["self"]],[T]]],[11,R[7],E,E,16,[[["self"]],[T]]],[11,R[8],E,E,16,[[["self"]],[R[9]]]],[11,R[46],E,E,16,[[["self"]],[T]]],[11,R[47],E,E,16,[[["self"],[T]]]],[11,"key",E,E,16,[[["self"]],[T]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[4],E,E,6,[[[U]],[R[3]]]],[11,"into",E,E,6,[[],[U]]],[11,R[5],E,E,6,[[],[R[3]]]],[11,R[6],E,E,6,[[["self"]],[T]]],[11,R[7],E,E,6,[[["self"]],[T]]],[11,R[8],E,E,6,[[["self"]],[R[9]]]],[11,R[46],E,E,6,[[["self"]],[T]]],[11,R[47],E,E,6,[[["self"],[T]]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[4],E,E,7,[[[U]],[R[3]]]],[11,"into",E,E,7,[[],[U]]],[11,R[5],E,E,7,[[],[R[3]]]],[11,R[6],E,E,7,[[["self"]],[T]]],[11,R[7],E,E,7,[[["self"]],[T]]],[11,R[8],E,E,7,[[["self"]],[R[9]]]],[11,R[46],E,E,7,[[["self"]],[T]]],[11,R[47],E,E,7,[[["self"],[T]]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[4],E,E,8,[[[U]],[R[3]]]],[11,"into",E,E,8,[[],[U]]],[11,R[5],E,E,8,[[],[R[3]]]],[11,R[6],E,E,8,[[["self"]],[T]]],[11,R[7],E,E,8,[[["self"]],[T]]],[11,R[8],E,E,8,[[["self"]],[R[9]]]],[11,R[113],E,E,8,[[["self"]],["string"]]],[11,"as_fail",E,E,8,[[["self"]],["fail"]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[4],E,E,9,[[[U]],[R[3]]]],[11,"into",E,E,9,[[],[U]]],[11,R[5],E,E,9,[[],[R[3]]]],[11,R[6],E,E,9,[[["self"]],[T]]],[11,R[7],E,E,9,[[["self"]],[T]]],[11,R[8],E,E,9,[[["self"]],[R[9]]]],[11,R[46],E,E,9,[[["self"]],[T]]],[11,R[47],E,E,9,[[["self"],[T]]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[4],E,E,10,[[[U]],[R[3]]]],[11,"into",E,E,10,[[],[U]]],[11,R[5],E,E,10,[[],[R[3]]]],[11,R[6],E,E,10,[[["self"]],[T]]],[11,R[7],E,E,10,[[["self"]],[T]]],[11,R[8],E,E,10,[[["self"]],[R[9]]]],[11,R[46],E,E,10,[[["self"]],[T]]],[11,R[47],E,E,10,[[["self"],[T]]]],[11,R[5845],E,E,0,[[["self"]],[R[5148]]]],[11,R[5847],E,E,0,[[["self"],[R[3279]]]]],[11,R[5848],E,E,0,[[["self"],[R[5844]],["str"]]]],[11,R[5849],E,E,0,[[["self"],[R[5844]]]]],[11,R[5850],E,E,0,[[["self"],["global"]]]],[11,R[5851],E,E,0,[[["self"],["global"],["str"]]]],[11,R[5852],E,E,0,[[["self"],["table"]]]],[11,R[5853],E,E,0,[[["self"],["table"],["str"]]]],[11,R[5854],E,E,0,[[["self"],["usize"],[R[4765]],[R[4764]],[R[23],[R[4765]]],["box"]]]],[11,R[5855],E,E,0,[[["self"],["memory"]]]],[11,R[5856],E,E,0,[[["self"],["memory"],["str"]]]],[11,R[5857],E,E,0,[[["self"],[R[4762]],["usize"],[R[4765]],[R[23],[R[4765]]]]]],[11,R[5858],E,E,0,[[["self"],["str"],[R[4759]]]]],[11,R[5859],E,E,0,[[["self"],[R[4764]],["str"]]]],[11,R[5860],E,E,0,[[["self"],[R[4762]],["str"]]]],[11,R[5861],E,E,0,[[["self"],["str"],[R[4765]]]]],[11,R[5862],E,E,0,[[["self"],[R[4759]]]]],[11,R[5863],E,E,0,[[["self"],["usize"]],[R[5841]]]],[11,"from",E,"Convert from a `BinaryReaderError` to a `WasmError`.",8,[[[R[4749]]],["self"]]],[11,"eq",E,E,7,[[["self"],[R[5864]]],["bool"]]],[11,"eq",E,E,11,[[["self"],[R[4759]]],["bool"]]],[11,"ne",E,E,11,[[["self"],[R[4759]]],["bool"]]],[11,"eq",E,E,12,[[["self"],[R[5865]]],["bool"]]],[11,"ne",E,E,12,[[["self"],[R[5865]]],["bool"]]],[11,"eq",E,E,13,[[["self"],[R[5866]]],["bool"]]],[11,"ne",E,E,13,[[["self"],[R[5866]]],["bool"]]],[11,"eq",E,E,14,[[["self"],[R[5867]]],["bool"]]],[11,"ne",E,E,14,[[["self"],[R[5867]]],["bool"]]],[11,"eq",E,E,15,[[["self"],[R[5868]]],["bool"]]],[11,"ne",E,E,15,[[["self"],[R[5868]]],["bool"]]],[11,"eq",E,E,16,[[["self"],[R[4764]]],["bool"]]],[11,"ne",E,E,16,[[["self"],[R[4764]]],["bool"]]],[11,"eq",E,E,17,[[["self"],[R[4765]]],["bool"]]],[11,"ne",E,E,17,[[["self"],[R[4765]]],["bool"]]],[11,"eq",E,E,18,[[["self"],[R[4762]]],["bool"]]],[11,"ne",E,E,18,[[["self"],[R[4762]]],["bool"]]],[11,"eq",E,E,19,[[["self"],[R[5844]]],["bool"]]],[11,"ne",E,E,19,[[["self"],[R[5844]]],["bool"]]],[11,"cmp",E,E,11,[[["self"],[R[4759]]],[R[50]]]],[11,"cmp",E,E,12,[[["self"],[R[5865]]],[R[50]]]],[11,"cmp",E,E,13,[[["self"],[R[5866]]],[R[50]]]],[11,"cmp",E,E,14,[[["self"],[R[5867]]],[R[50]]]],[11,"cmp",E,E,15,[[["self"],[R[5868]]],[R[50]]]],[11,"cmp",E,E,16,[[["self"],[R[4764]]],[R[50]]]],[11,"cmp",E,E,17,[[["self"],[R[4765]]],[R[50]]]],[11,"cmp",E,E,18,[[["self"],[R[4762]]],[R[50]]]],[11,"cmp",E,E,19,[[["self"],[R[5844]]],[R[50]]]],[11,R[77],E,E,11,[[["self"],[R[4759]]],[[R[23],[R[50]]],[R[50]]]]],[11,"lt",E,E,11,[[["self"],[R[4759]]],["bool"]]],[11,"le",E,E,11,[[["self"],[R[4759]]],["bool"]]],[11,"gt",E,E,11,[[["self"],[R[4759]]],["bool"]]],[11,"ge",E,E,11,[[["self"],[R[4759]]],["bool"]]],[11,R[77],E,E,12,[[["self"],[R[5865]]],[[R[23],[R[50]]],[R[50]]]]],[11,"lt",E,E,12,[[["self"],[R[5865]]],["bool"]]],[11,"le",E,E,12,[[["self"],[R[5865]]],["bool"]]],[11,"gt",E,E,12,[[["self"],[R[5865]]],["bool"]]],[11,"ge",E,E,12,[[["self"],[R[5865]]],["bool"]]],[11,R[77],E,E,13,[[["self"],[R[5866]]],[[R[23],[R[50]]],[R[50]]]]],[11,"lt",E,E,13,[[["self"],[R[5866]]],["bool"]]],[11,"le",E,E,13,[[["self"],[R[5866]]],["bool"]]],[11,"gt",E,E,13,[[["self"],[R[5866]]],["bool"]]],[11,"ge",E,E,13,[[["self"],[R[5866]]],["bool"]]],[11,R[77],E,E,14,[[["self"],[R[5867]]],[[R[23],[R[50]]],[R[50]]]]],[11,"lt",E,E,14,[[["self"],[R[5867]]],["bool"]]],[11,"le",E,E,14,[[["self"],[R[5867]]],["bool"]]],[11,"gt",E,E,14,[[["self"],[R[5867]]],["bool"]]],[11,"ge",E,E,14,[[["self"],[R[5867]]],["bool"]]],[11,R[77],E,E,15,[[["self"],[R[5868]]],[[R[23],[R[50]]],[R[50]]]]],[11,"lt",E,E,15,[[["self"],[R[5868]]],["bool"]]],[11,"le",E,E,15,[[["self"],[R[5868]]],["bool"]]],[11,"gt",E,E,15,[[["self"],[R[5868]]],["bool"]]],[11,"ge",E,E,15,[[["self"],[R[5868]]],["bool"]]],[11,R[77],E,E,16,[[["self"],[R[4764]]],[[R[23],[R[50]]],[R[50]]]]],[11,"lt",E,E,16,[[["self"],[R[4764]]],["bool"]]],[11,"le",E,E,16,[[["self"],[R[4764]]],["bool"]]],[11,"gt",E,E,16,[[["self"],[R[4764]]],["bool"]]],[11,"ge",E,E,16,[[["self"],[R[4764]]],["bool"]]],[11,R[77],E,E,17,[[["self"],[R[4765]]],[[R[23],[R[50]]],[R[50]]]]],[11,"lt",E,E,17,[[["self"],[R[4765]]],["bool"]]],[11,"le",E,E,17,[[["self"],[R[4765]]],["bool"]]],[11,"gt",E,E,17,[[["self"],[R[4765]]],["bool"]]],[11,"ge",E,E,17,[[["self"],[R[4765]]],["bool"]]],[11,R[77],E,E,18,[[["self"],[R[4762]]],[[R[23],[R[50]]],[R[50]]]]],[11,"lt",E,E,18,[[["self"],[R[4762]]],["bool"]]],[11,"le",E,E,18,[[["self"],[R[4762]]],["bool"]]],[11,"gt",E,E,18,[[["self"],[R[4762]]],["bool"]]],[11,"ge",E,E,18,[[["self"],[R[4762]]],["bool"]]],[11,R[77],E,E,19,[[["self"],[R[5844]]],[[R[23],[R[50]]],[R[50]]]]],[11,"lt",E,E,19,[[["self"],[R[5844]]],["bool"]]],[11,"le",E,E,19,[[["self"],[R[5844]]],["bool"]]],[11,"gt",E,E,19,[[["self"],[R[5844]]],["bool"]]],[11,"ge",E,E,19,[[["self"],[R[5844]]],["bool"]]],[11,"hash",E,E,11,[[["self"],["__h"]]]],[11,"hash",E,E,12,[[["self"],["__h"]]]],[11,"hash",E,E,13,[[["self"],["__h"]]]],[11,"hash",E,E,14,[[["self"],["__h"]]]],[11,"hash",E,E,15,[[["self"],["__h"]]]],[11,"hash",E,E,16,[[["self"],["__h"]]]],[11,"hash",E,E,17,[[["self"],["__h"]]]],[11,"hash",E,E,18,[[["self"],["__h"]]]],[11,"hash",E,E,19,[[["self"],["__h"]]]],[11,"fmt",E,E,8,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,7,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,11,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,12,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,13,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,14,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,15,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,16,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,17,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,18,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,19,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,3,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,9,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,5,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,10,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,4,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,8,[[["self"],[R[10]]],[R[3]]]],[11,"clone",E,E,6,[[["self"]],[R[5842]]]],[11,"clone",E,E,7,[[["self"]],[R[5864]]]],[11,"clone",E,E,11,[[["self"]],[R[4759]]]],[11,"clone",E,E,12,[[["self"]],[R[5865]]]],[11,"clone",E,E,13,[[["self"]],[R[5866]]]],[11,"clone",E,E,14,[[["self"]],[R[5867]]]],[11,"clone",E,E,15,[[["self"]],[R[5868]]]],[11,"clone",E,E,16,[[["self"]],[R[4764]]]],[11,"clone",E,E,17,[[["self"]],[R[4765]]]],[11,"clone",E,E,18,[[["self"]],[R[4762]]]],[11,"clone",E,E,19,[[["self"]],[R[5844]]]],[11,"clone",E,E,3,[[["self"]],["global"]]],[11,"clone",E,E,9,[[["self"]],["globalinit"]]],[11,"clone",E,E,5,[[["self"]],["table"]]],[11,"clone",E,E,10,[[["self"]],["tableelementtype"]]],[11,"clone",E,E,4,[[["self"]],["memory"]]],[11,R[5150],E,E,11,[[],[R[4759]]]],[11,R[5150],E,E,12,[[],[R[5865]]]],[11,R[5150],E,E,13,[[],[R[5866]]]],[11,R[5150],E,E,14,[[],[R[5867]]]],[11,R[5150],E,E,15,[[],[R[5868]]]],[11,R[5150],E,E,16,[[],[R[4764]]]],[11,R[5150],E,E,17,[[],[R[4765]]]],[11,R[5150],E,E,18,[[],[R[4762]]]],[11,R[5150],E,E,19,[[],[R[5844]]]],[11,"new",E,E,11,[[["usize"]],["self"]]],[11,"index",E,E,11,[[],["usize"]]],[11,"new",E,E,12,[[["usize"]],["self"]]],[11,"index",E,E,12,[[],["usize"]]],[11,"new",E,E,13,[[["usize"]],["self"]]],[11,"index",E,E,13,[[],["usize"]]],[11,"new",E,E,14,[[["usize"]],["self"]]],[11,"index",E,E,14,[[],["usize"]]],[11,"new",E,E,15,[[["usize"]],["self"]]],[11,"index",E,E,15,[[],["usize"]]],[11,"new",E,E,16,[[["usize"]],["self"]]],[11,"index",E,E,16,[[],["usize"]]],[11,"new",E,E,17,[[["usize"]],["self"]]],[11,"index",E,E,17,[[],["usize"]]],[11,"new",E,E,18,[[["usize"]],["self"]]],[11,"index",E,E,18,[[],["usize"]]],[11,"new",E,E,19,[[["usize"]],["self"]]],[11,"index",E,E,19,[[],["usize"]]],[11,"name",E,E,8,[[["self"]],[[R[23],["str"]],["str"]]]],[11,"cause",E,E,8,[[["self"]],[[R[23],["fail"]],["fail"]]]],[11,R[1705],E,E,8,[[["self"]],[[R[23],[R[1705]]],[R[1705]]]]],[11,R[5069],E,R[5869],20,[[["self"]],["type"]]],[11,R[5071],E,R[5870],20,[[["self"]],["u8"]]],[11,R[5871],E,R[5872],20,[[["self"]],[R[5864]]]],[11,R[5873],E,R[5874],20,[[["self"],[R[5536]],[R[4759]],["funcref"]],[["inst"],[R[5841],["inst"]]]]],[11,R[5875],E,R[5876],20,[[["self"],[R[5536]]],[R[5841]]]],[11,R[5877],E,R[5878],21,[[["self"],["u32"]]]],[11,R[5879],E,R[5880],21,[[["self"],["u32"]]]],[11,R[5881],E,R[5882],21,[[["self"]]]],[11,R[5883],E,R[5884],21,[[["self"],["u32"]]]],[11,R[5885],E,R[5886],21,[[["self"],["u32"]]]],[11,R[5887],E,R[5888],21,[[["self"],["u32"]]]],[11,R[5889],E,R[5890],21,[[["self"],["u32"]]]],[11,R[5891],E,R[5892],21,[[["self"],["u32"]]]],[11,R[5893],E,R[5894],21,[[["self"]]]],[11,R[5895],E,R[5896],21,[[["self"],["u32"]]]],[11,R[5897],E,R[5898],21,[[["self"],["u32"]]]]],"p":[[3,R[5899]],[3,R[5900]],[3,R[5901]],[3,"Global"],[3,"Memory"],[3,"Table"],[4,R[5902]],[4,"ReturnMode"],[4,"WasmError"],[4,R[5911]],[4,R[5903]],[3,R[5913]],[3,R[5904]],[3,R[5905]],[3,R[5906]],[3,R[5907]],[3,R[5912]],[3,R[4884]],[3,R[4879]],[3,R[5908]],[8,R[5909]],[8,R[5910]]]};
searchIndex["wasmer_emscripten"]={"doc":E,"i":[[3,R[5442],"wasmer_emscripten",E,N,N],[12,"globals",E,E,0,N],[12,"malloc",E,E,0,N],[12,"free",E,E,0,N],[12,"memalign",E,E,0,N],[12,"memset",E,E,0,N],[12,"stack_alloc",E,E,0,N],[12,"jumps",E,E,0,N],[12,"opened_dirs",E,E,0,N],[12,"dyn_call_i",E,E,0,N],[12,"dyn_call_ii",E,E,0,N],[12,"dyn_call_iii",E,E,0,N],[12,"dyn_call_iiii",E,E,0,N],[12,"dyn_call_iifi",E,E,0,N],[12,"dyn_call_v",E,E,0,N],[12,"dyn_call_vi",E,E,0,N],[12,"dyn_call_vii",E,E,0,N],[12,"dyn_call_viii",E,E,0,N],[12,"dyn_call_viiii",E,E,0,N],[12,"dyn_call_dii",E,E,0,N],[12,"dyn_call_diiii",E,E,0,N],[12,"dyn_call_iiiii",E,E,0,N],[12,"dyn_call_iiiiii",E,E,0,N],[12,"dyn_call_iiiiiii",E,E,0,N],[12,"dyn_call_iiiiiiii",E,E,0,N],[12,"dyn_call_iiiiiiiii",E,E,0,N],[12,"dyn_call_iiiiiiiiii",E,E,0,N],[12,"dyn_call_iiiiiiiiiii",E,E,0,N],[12,"dyn_call_vd",E,E,0,N],[12,"dyn_call_viiiii",E,E,0,N],[12,"dyn_call_viiiiii",E,E,0,N],[12,"dyn_call_viiiiiii",E,E,0,N],[12,"dyn_call_viiiiiiii",E,E,0,N],[12,"dyn_call_viiiiiiiii",E,E,0,N],[12,"dyn_call_viiiiiiiiii",E,E,0,N],[12,"dyn_call_iij",E,E,0,N],[12,"dyn_call_iji",E,E,0,N],[12,"dyn_call_iiji",E,E,0,N],[12,"dyn_call_iiijj",E,E,0,N],[12,"dyn_call_j",E,E,0,N],[12,"dyn_call_ji",E,E,0,N],[12,"dyn_call_jii",E,E,0,N],[12,"dyn_call_jij",E,E,0,N],[12,"dyn_call_jjj",E,E,0,N],[12,"dyn_call_viiij",E,E,0,N],[12,"dyn_call_viiijiiii",E,E,0,N],[12,"dyn_call_viiijiiiiii",E,E,0,N],[12,"dyn_call_viij",E,E,0,N],[12,"dyn_call_viiji",E,E,0,N],[12,"dyn_call_viijiii",E,E,0,N],[12,"dyn_call_viijj",E,E,0,N],[12,"dyn_call_vj",E,E,0,N],[12,"dyn_call_vjji",E,E,0,N],[12,"dyn_call_vij",E,E,0,N],[12,"dyn_call_viji",E,E,0,N],[12,"dyn_call_vijiii",E,E,0,N],[12,"dyn_call_vijj",E,E,0,N],[12,"dyn_call_viid",E,E,0,N],[12,"dyn_call_vidd",E,E,0,N],[12,"dyn_call_viidii",E,E,0,N],[12,"dyn_call_viidddddddd",E,E,0,N],[12,"temp_ret_0",E,E,0,N],[12,"stack_save",E,E,0,N],[12,"stack_restore",E,E,0,N],[12,"set_threw",E,E,0,N],[12,"mapped_dirs",E,E,0,N],[3,R[5444],E,E,N,N],[3,R[5443],E,E,N,N],[12,"data",E,E,1,N],[12,"memory",E,E,1,N],[12,"table",E,E,1,N],[12,"memory_min",E,E,1,N],[12,"memory_max",E,E,1,N],[12,"null_func_names",E,E,1,N],[5,"align_memory",E,E,N,[[["u32"]],["u32"]]],[5,"static_alloc",E,E,N,[[["u32"],["u32"]],["u32"]]],[5,"allocate_cstr_on_stack",E,E,N,[[["ctx"],["str"]]]],[5,"allocate_on_stack",E,E,N,[[["ctx"],["u32"]]]],[5,"get_emscripten_memory_size",E,E,N,[[["module"]],[[R[3],["string"]],["string"]]]],[5,"get_emscripten_metadata",E,"Reads values written by `-s EMIT_EMSCRIPTEN_METADATA=1`…",N,[[["module"]],[["string"],[R[3],[R[23],"string"]],[R[23]]]]],[5,"get_emscripten_table_size",E,E,N,[[["module"]],[["string"],[R[3],["string"]]]]],[5,"is_emscripten_module",E,"We check if a provided module is an Emscripten generated one",N,[[["module"]],["bool"]]],[5,"run_emscripten_instance",E,E,N,[[[R[23],["string"]],["vec"],["vec",["str"]],["string"],[R[143]],[R[5440]],["module"],["str"]],[R[5445]]]],[5,"emscripten_set_up_memory",E,E,N,[[["memory"],[R[5441]]],[["string"],[R[3],["string"]]]]],[5,"generate_emscripten_env",E,E,N,[[[R[5440]]],[R[4783]]]],[5,"nullfunc",E,E,N,[[["u32"],["ctx"]]]],[17,"VERSION",E,R[5446],N,N],[11,"new",E,E,0,[[["hashmap",["string","pathbuf"]],["string"],["pathbuf"],[R[143]],[R[5441]]],["emscriptendata"]]],[11,"new",E,E,1,[[["module"]],[[R[3],["string"]],["string"]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[4],E,E,0,[[[U]],[R[3]]]],[11,R[5],E,E,0,[[],[R[3]]]],[11,R[7],E,E,0,[[["self"]],[T]]],[11,R[6],E,E,0,[[["self"]],[T]]],[11,R[8],E,E,0,[[["self"]],[R[9]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[4],E,E,2,[[[U]],[R[3]]]],[11,R[5],E,E,2,[[],[R[3]]]],[11,R[7],E,E,2,[[["self"]],[T]]],[11,R[6],E,E,2,[[["self"]],[T]]],[11,R[8],E,E,2,[[["self"]],[R[9]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[4],E,E,1,[[[U]],[R[3]]]],[11,R[5],E,E,1,[[],[R[3]]]],[11,R[7],E,E,1,[[["self"]],[T]]],[11,R[6],E,E,1,[[["self"]],[T]]],[11,R[8],E,E,1,[[["self"]],[R[9]]]]],"p":[[3,R[5442]],[3,R[5443]],[3,R[5444]]]};
searchIndex["wasmer_llvm_backend"]={"doc":E,"i":[[3,R[4844],"wasmer_llvm_backend",E,N,N],[3,R[4842],E,E,N,N],[3,R[5914],E,"LLVM backend flags.",N,N],[12,"pre_opt_ir",E,"Emit LLVM IR before optimization pipeline.",0,N],[12,"post_opt_ir",E,"Emit LLVM IR after optimization pipeline.",0,N],[12,"obj_file",E,"Emit LLVM generated native code object file.",0,N],[6,"LLVMCompiler",E,E,N,N],[7,"GLOBAL_OPTIONS",E,E,N,N],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[4],E,E,1,[[[U]],[R[3]]]],[11,R[5],E,E,1,[[],[R[3]]]],[11,R[7],E,E,1,[[["self"]],[T]]],[11,R[6],E,E,1,[[["self"]],[T]]],[11,R[8],E,E,1,[[["self"]],[R[9]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[4],E,E,2,[[[U]],[R[3]]]],[11,R[5],E,E,2,[[],[R[3]]]],[11,R[7],E,E,2,[[["self"]],[T]]],[11,R[6],E,E,2,[[["self"]],[T]]],[11,R[8],E,E,2,[[["self"]],[R[9]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[46],E,E,0,[[["self"]],[T]]],[11,R[47],E,E,0,[[["self"],[T]]]],[11,R[4],E,E,0,[[[U]],[R[3]]]],[11,R[5],E,E,0,[[],[R[3]]]],[11,R[7],E,E,0,[[["self"]],[T]]],[11,R[6],E,E,0,[[["self"]],[T]]],[11,R[8],E,E,0,[[["self"]],[R[9]]]],[11,"clone",E,E,0,[[["self"]],["llvmoptions"]]],[11,"fmt",E,E,0,[[["self"],[R[10]]],[R[3]]]]],"p":[[3,R[5914]],[3,R[4844]],[3,R[4842]]]};
searchIndex["wasmer_middleware_common"]={"doc":E,"i":[[0,"call_trace",R[5447],E,N,N],[3,"CallTrace",R[5448],E,N,N],[0,"metering",R[5447],E,N,N],[3,"Metering",R[5449],"Metering is a compiler middleware that calculates the cost…",N,N],[3,R[5450],E,E,N,N],[5,"get_points_used",E,"Returns the number of points used by an Instance.",N,[[[R[143]]],["u64"]]],[5,"set_points_used",E,"Sets the number of points used by an Instance.",N,[[[R[143]],["u64"]]]],[5,"get_points_used_ctx",E,"Returns the number of points used in a Ctx.",N,[[["ctx"]],["u64"]]],[5,"set_points_used_ctx",E,"Sets the number of points used in a Ctx.",N,[[["ctx"],["u64"]]]],[11,"new",E,E,0,[[["u64"]],["metering"]]],[11,"into",R[5448],E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[4],E,E,1,[[[U]],[R[3]]]],[11,R[5],E,E,1,[[],[R[3]]]],[11,R[7],E,E,1,[[["self"]],[T]]],[11,R[6],E,E,1,[[["self"]],[T]]],[11,R[8],E,E,1,[[["self"]],[R[9]]]],[11,"into",R[5449],E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[4],E,E,0,[[[U]],[R[3]]]],[11,R[5],E,E,0,[[],[R[3]]]],[11,R[7],E,E,0,[[["self"]],[T]]],[11,R[6],E,E,0,[[["self"]],[T]]],[11,R[8],E,E,0,[[["self"]],[R[9]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[46],E,E,2,[[["self"]],[T]]],[11,R[47],E,E,2,[[["self"],[T]]]],[11,R[4],E,E,2,[[[U]],[R[3]]]],[11,R[5],E,E,2,[[],[R[3]]]],[11,R[7],E,E,2,[[["self"]],[T]]],[11,R[6],E,E,2,[[["self"]],[T]]],[11,R[8],E,E,2,[[["self"]],[R[9]]]],[11,"clone",E,E,2,[[["self"]],["executionlimitexceedederror"]]],[11,"fmt",E,E,2,[[["self"],[R[10]]],[R[3]]]],[11,R[5451],R[5448],E,1,[[["self"],[R[4717]],["event"],["eventsink"]],[R[3]]]],[11,R[5451],R[5449],E,0,[[["self"],[R[4717]],["event"],["eventsink"]],[R[3]]]]],"p":[[3,"Metering"],[3,"CallTrace"],[3,R[5450]]]};
searchIndex["wasmer_middleware_common_tests"]={"doc":E,"i":[],"p":[]};
searchIndex["wasmer_runtime"]={"doc":"Wasmer-runtime is a library that makes embedding…","i":[[4,"Backend",R[5915],E,N,N],[13,"Cranelift",E,E,0,N],[13,"Singlepass",E,E,0,N],[13,"LLVM",E,E,0,N],[3,R[4847],E,E,N,N],[3,R[4846],E,E,N,N],[4,"Export",E,E,N,N],[13,R[196],E,E,1,N],[12,"func","wasmer_runtime::Export",E,1,N],[12,"ctx",E,E,1,N],[12,R[3279],E,E,1,N],[13,"Memory",R[5915],E,1,N],[13,"Table",E,E,1,N],[13,"Global",E,E,1,N],[3,"Global",E,E,N,N],[3,R[4851],E,R[5991],N,N],[12,R[5992],E,E,2,N],[3,"DynFunc",E,R[4735],N,N],[3,R[6054],E,R[4734],N,N],[12,"module",E,E,3,N],[3,"Memory",E,R[5916],N,N],[3,"Module",E,R[4746],N,N],[3,"Table",E,E,N,N],[4,"Value",E,R[5917],N,N],[13,"I32",E,R[4754],4,N],[13,"I64",E,R[4755],4,N],[13,"F32",E,R[4756],4,N],[13,"F64",E,R[4757],4,N],[13,"V128",E,R[4758],4,N],[3,"Ctx",E,R[6039],N,N],[12,"internal",E,E,5,N],[12,R[6040],E,R[6041],5,N],[12,R[6042],E,E,5,N],[12,"module",E,E,5,N],[12,"data",E,R[6043],5,N],[12,R[6044],E,R[6045],5,N],[3,"Func",E,E,N,N],[5,R[5933],E,R[5934],N,[[[R[6063]]],[[R[3],["module",R[4828]]],["module"],[R[4828]]]]],[5,"validate",E,R[5936],N,[[],["bool"]]],[14,"func",E,E,N,N],[14,"imports",E,R[6053],N,N],[5,"compile",E,"Compile WebAssembly binary code into a [`Module`]. This…",N,[[],[["module"],[R[4713],["module"]]]]],[5,R[5935],E,"The same as `compile` but takes a `CompilerConfig` for the…",N,[[[R[4716]]],[["module"],[R[4713],["module"]]]]],[5,R[6061],E,R[6062],N,[[[R[4716]],[R[6063]]],[["module"],[R[4713],["module"]]]]],[5,R[5931],E,"Compile and instantiate WebAssembly code without creating…",N,[[[R[4783]]],[[R[143]],[R[3],[R[143]]]]]],[5,"default_compiler",E,"Get a single instance of the default compiler to use.",N,[[]]],[5,"compiler_for_backend",E,E,N,[[["backend"]],[["box",[R[6063]]],[R[23],["box"]]]]],[0,"memory",E,E,N,N],[3,R[6007],R[5925],E,N,N],[3,"Memory",E,R[5916],N,N],[3,R[6008],E,E,N,N],[0,"wasm",R[5915],"Various types exposed by the Wasmer Runtime.",N,N],[3,"Global",R[5924],E,N,N],[3,"Table",E,E,N,N],[3,"FuncSig",E,R[6032],N,N],[3,R[4869],E,R[6027],N,N],[12,"mutable",E,E,6,N],[12,"ty",E,E,6,N],[3,R[4870],E,R[6028],N,N],[12,"minimum",E,R[6029],7,N],[12,"maximum",E,R[6030],7,N],[12,"shared",E,R[6031],7,N],[3,R[4868],E,E,N,N],[12,"element",E,R[6024],8,N],[12,"minimum",E,R[6025],8,N],[12,"maximum",E,R[6026],8,N],[4,"Type",E,R[6033],N,N],[13,"I32",E,R[4754],9,N],[13,"I64",E,R[4755],9,N],[13,"F32",E,R[4756],9,N],[13,"F64",E,R[4757],9,N],[13,"V128",E,R[4758],9,N],[4,"Value",E,R[5917],N,N],[13,"I32",E,R[4754],4,N],[13,"I64",E,R[4755],4,N],[13,"F32",E,R[4756],4,N],[13,"F64",E,R[4757],4,N],[13,"V128",E,R[4758],4,N],[0,"error",R[5915],E,N,N],[4,"CacheError",R[5918],E,N,N],[13,"IoError",E,E,10,N],[13,R[5938],E,E,10,N],[13,R[5939],E,E,10,N],[13,"Unknown",E,E,10,N],[13,R[5940],E,E,10,N],[13,R[5941],E,E,10,N],[13,R[5942],E,E,10,N],[6,"Result",E,E,N,N],[6,R[5981],E,E,N,N],[6,"LinkResult",E,E,N,N],[6,R[5982],E,E,N,N],[6,"CallResult",E,E,N,N],[6,R[5983],E,E,N,N],[6,R[5984],E,E,N,N],[4,R[4727],E,R[5950],N,N],[13,R[5951],E,E,11,N],[12,"msg",R[5919],E,11,N],[13,R[5952],R[5918],E,11,N],[12,"msg",R[5919],E,11,N],[4,R[5953],R[5918],R[5954],N,N],[13,R[5955],E,E,12,N],[12,R[4724],R[5920],E,12,N],[12,"name",E,E,12,N],[12,R[4723],E,E,12,N],[12,"found",E,E,12,N],[13,R[5956],R[5918],E,12,N],[12,R[4724],R[5920],E,12,N],[12,"name",E,E,12,N],[12,R[4723],E,E,12,N],[12,"found",E,E,12,N],[13,R[5957],R[5918],E,12,N],[12,R[4724],R[5920],E,12,N],[12,"name",E,E,12,N],[13,R[5958],R[5918],E,12,N],[12,R[4724],R[5920],E,12,N],[12,"name",E,E,12,N],[12,R[4723],E,E,12,N],[12,"found",E,E,12,N],[13,R[5959],R[5918],E,12,N],[12,R[4724],R[5920],E,12,N],[12,"name",E,E,12,N],[12,R[4723],E,E,12,N],[12,"found",E,E,12,N],[13,R[5960],R[5918],E,12,N],[12,R[4724],R[5920],E,12,N],[12,"name",E,E,12,N],[12,R[4723],E,E,12,N],[12,"found",E,E,12,N],[13,"Generic",R[5918],E,12,N],[12,"message",R[5920],E,12,N],[4,R[4728],R[5918],R[5961],N,N],[13,"Trap",E,E,13,N],[12,"msg",R[5921],E,13,N],[13,"Error",R[5918],E,13,N],[12,"data",R[5921],E,13,N],[4,R[4729],R[5918],R[5962],N,N],[13,R[5434],E,E,14,N],[12,R[4723],R[5922],E,14,N],[12,"found",E,E,14,N],[13,R[5963],R[5918],E,14,N],[12,"name",R[5922],E,14,N],[13,R[5964],R[5918],E,14,N],[12,"name",R[5922],E,14,N],[4,R[5965],R[5918],R[5966],N,N],[13,"Resolve",E,E,15,N],[13,"Runtime",E,E,15,N],[4,R[4730],E,R[5967],N,N],[13,R[5968],E,E,16,N],[13,R[5969],E,E,16,N],[13,R[5970],E,E,16,N],[4,"Error",E,R[5971],N,N],[13,R[4727],E,E,17,N],[13,R[5953],E,E,17,N],[13,R[4728],E,E,17,N],[13,R[4729],E,E,17,N],[13,R[5965],E,E,17,N],[13,R[4730],E,E,17,N],[4,R[6055],E,E,N,N],[13,R[5972],E,E,18,N],[13,R[5973],E,E,18,N],[13,R[4731],E,E,18,N],[13,R[5974],E,E,18,N],[13,R[5975],E,E,18,N],[13,R[5976],E,E,18,N],[4,R[6056],E,E,N,N],[13,R[4731],E,E,19,N],[4,R[4848],E,E,N,N],[13,R[5977],E,E,20,N],[13,R[5978],E,E,20,N],[4,R[4849],E,E,N,N],[13,R[5979],E,E,21,N],[4,R[4692],E,E,N,N],[13,R[5980],E,E,22,N],[0,"units",R[5915],"Various unit types.",N,N],[3,"Bytes",R[5926],R[6037],N,N],[12,"0",E,E,23,N],[3,"Pages",E,R[6036],N,N],[12,"0",E,E,24,N],[0,"cache",R[5915],E,N,N],[4,"Backend",R[5923],E,N,N],[13,"Cranelift",E,E,0,N],[13,"Singlepass",E,E,0,N],[13,"LLVM",E,E,0,N],[3,"Artifact",E,E,N,N],[8,"Cache",E,R[5943],N,N],[16,R[6057],E,E,25,N],[16,"StoreError",E,E,25,N],[10,"load",E,R[5944],25,[[["self"],[R[5927]]],[[R[3],["module"]],["module"]]]],[10,R[5929],E,R[5945],25,[[["self"],["backend"],[R[5927]]],[[R[3],["module"]],["module"]]]],[10,"store",E,E,25,[[["self"],["module"],[R[5927]]],[R[3]]]],[3,"WasmHash",E,R[5937],N,N],[3,R[5932],E,"Representation of a directory that contains compiled wasm…",N,N],[11,"new",E,"Construct a new `FileSystemCache` around the specified…",26,[[["pathbuf"],["into",["pathbuf"]]],[R[3]]]],[17,"VERSION",R[5915],R[5446],N,N],[11,"into",R[5923],E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[46],E,E,0,[[["self"]],[T]]],[11,R[47],E,E,0,[[["self"],[T]]]],[11,R[4],E,E,0,[[[U]],[R[3]]]],[11,R[5],E,E,0,[[],[R[3]]]],[11,R[7],E,E,0,[[["self"]],[T]]],[11,R[6],E,E,0,[[["self"]],[T]]],[11,R[8],E,E,0,[[["self"]],[R[9]]]],[11,R[4793],E,E,0,[[["self"],["k"]],["bool"]]],[11,"into",R[5915],E,27,[[],[U]]],[11,"from",E,E,27,[[[T]],[T]]],[11,R[4],E,E,27,[[[U]],[R[3]]]],[11,R[5],E,E,27,[[],[R[3]]]],[11,R[7],E,E,27,[[["self"]],[T]]],[11,R[6],E,E,27,[[["self"]],[T]]],[11,R[8],E,E,27,[[["self"]],[R[9]]]],[11,"into",E,E,28,[[],[U]]],[11,"from",E,E,28,[[[T]],[T]]],[11,R[4],E,E,28,[[[U]],[R[3]]]],[11,R[5],E,E,28,[[],[R[3]]]],[11,R[7],E,E,28,[[["self"]],[T]]],[11,R[6],E,E,28,[[["self"]],[T]]],[11,R[8],E,E,28,[[["self"]],[R[9]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[46],E,E,1,[[["self"]],[T]]],[11,R[47],E,E,1,[[["self"],[T]]]],[11,R[4],E,E,1,[[[U]],[R[3]]]],[11,R[5],E,E,1,[[],[R[3]]]],[11,R[7],E,E,1,[[["self"]],[T]]],[11,R[6],E,E,1,[[["self"]],[T]]],[11,R[8],E,E,1,[[["self"]],[R[9]]]],[11,"into",R[5924],E,29,[[],[U]]],[11,"from",E,E,29,[[[T]],[T]]],[11,R[46],E,E,29,[[["self"]],[T]]],[11,R[47],E,E,29,[[["self"],[T]]]],[11,R[4],E,E,29,[[[U]],[R[3]]]],[11,R[5],E,E,29,[[],[R[3]]]],[11,R[7],E,E,29,[[["self"]],[T]]],[11,R[6],E,E,29,[[["self"]],[T]]],[11,R[8],E,E,29,[[["self"]],[R[9]]]],[11,"into",R[5915],E,2,[[],[U]]],[11,R[45],E,E,2,[[],["i"]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[4],E,E,2,[[[U]],[R[3]]]],[11,R[5],E,E,2,[[],[R[3]]]],[11,R[7],E,E,2,[[["self"]],[T]]],[11,R[6],E,E,2,[[["self"]],[T]]],[11,R[8],E,E,2,[[["self"]],[R[9]]]],[11,"into",E,E,30,[[],[U]]],[11,"from",E,E,30,[[[T]],[T]]],[11,R[4],E,E,30,[[[U]],[R[3]]]],[11,R[5],E,E,30,[[],[R[3]]]],[11,R[7],E,E,30,[[["self"]],[T]]],[11,R[6],E,E,30,[[["self"]],[T]]],[11,R[8],E,E,30,[[["self"]],[R[9]]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[4],E,E,3,[[[U]],[R[3]]]],[11,R[5],E,E,3,[[],[R[3]]]],[11,R[7],E,E,3,[[["self"]],[T]]],[11,R[6],E,E,3,[[["self"]],[T]]],[11,R[8],E,E,3,[[["self"]],[R[9]]]],[11,"into",R[5925],E,31,[[],[U]]],[11,"from",E,E,31,[[[T]],[T]]],[11,R[46],E,E,31,[[["self"]],[T]]],[11,R[47],E,E,31,[[["self"],[T]]]],[11,R[4],E,E,31,[[[U]],[R[3]]]],[11,R[5],E,E,31,[[],[R[3]]]],[11,R[7],E,E,31,[[["self"]],[T]]],[11,R[6],E,E,31,[[["self"]],[T]]],[11,R[8],E,E,31,[[["self"]],[R[9]]]],[11,"into",R[5915],E,32,[[],[U]]],[11,"from",E,E,32,[[[T]],[T]]],[11,R[46],E,E,32,[[["self"]],[T]]],[11,R[47],E,E,32,[[["self"],[T]]]],[11,R[4],E,E,32,[[[U]],[R[3]]]],[11,R[5],E,E,32,[[],[R[3]]]],[11,R[7],E,E,32,[[["self"]],[T]]],[11,R[6],E,E,32,[[["self"]],[T]]],[11,R[8],E,E,32,[[["self"]],[R[9]]]],[11,"into",R[5924],E,33,[[],[U]]],[11,"from",E,E,33,[[[T]],[T]]],[11,R[46],E,E,33,[[["self"]],[T]]],[11,R[47],E,E,33,[[["self"],[T]]]],[11,R[4],E,E,33,[[[U]],[R[3]]]],[11,R[5],E,E,33,[[],[R[3]]]],[11,R[7],E,E,33,[[["self"]],[T]]],[11,R[6],E,E,33,[[["self"]],[T]]],[11,R[8],E,E,33,[[["self"]],[R[9]]]],[11,"into",E,E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[46],E,E,4,[[["self"]],[T]]],[11,R[47],E,E,4,[[["self"],[T]]]],[11,R[4],E,E,4,[[[U]],[R[3]]]],[11,R[5],E,E,4,[[],[R[3]]]],[11,R[7],E,E,4,[[["self"]],[T]]],[11,R[6],E,E,4,[[["self"]],[T]]],[11,R[8],E,E,4,[[["self"]],[R[9]]]],[11,"into",R[5915],E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[4],E,E,5,[[[U]],[R[3]]]],[11,R[5],E,E,5,[[],[R[3]]]],[11,R[7],E,E,5,[[["self"]],[T]]],[11,R[6],E,E,5,[[["self"]],[T]]],[11,R[8],E,E,5,[[["self"]],[R[9]]]],[11,"into",E,E,34,[[],[U]]],[11,"from",E,E,34,[[[T]],[T]]],[11,R[4],E,E,34,[[[U]],[R[3]]]],[11,R[5],E,E,34,[[],[R[3]]]],[11,R[7],E,E,34,[[["self"]],[T]]],[11,R[6],E,E,34,[[["self"]],[T]]],[11,R[8],E,E,34,[[["self"]],[R[9]]]],[11,"into",R[5925],E,35,[[],[U]]],[11,"from",E,E,35,[[[T]],[T]]],[11,R[4],E,E,35,[[[U]],[R[3]]]],[11,R[5],E,E,35,[[],[R[3]]]],[11,R[7],E,E,35,[[["self"]],[T]]],[11,R[6],E,E,35,[[["self"]],[T]]],[11,R[8],E,E,35,[[["self"]],[R[9]]]],[11,"into",E,E,36,[[],[U]]],[11,"from",E,E,36,[[[T]],[T]]],[11,R[4],E,E,36,[[[U]],[R[3]]]],[11,R[5],E,E,36,[[],[R[3]]]],[11,R[7],E,E,36,[[["self"]],[T]]],[11,R[6],E,E,36,[[["self"]],[T]]],[11,R[8],E,E,36,[[["self"]],[R[9]]]],[11,"into",R[5924],E,37,[[],[U]]],[11,R[113],E,E,37,[[["self"]],["string"]]],[11,"from",E,E,37,[[[T]],[T]]],[11,R[46],E,E,37,[[["self"]],[T]]],[11,R[47],E,E,37,[[["self"],[T]]]],[11,R[4],E,E,37,[[[U]],[R[3]]]],[11,R[5],E,E,37,[[],[R[3]]]],[11,R[7],E,E,37,[[["self"]],[T]]],[11,R[6],E,E,37,[[["self"]],[T]]],[11,R[8],E,E,37,[[["self"]],[R[9]]]],[11,R[4793],E,E,37,[[["self"],["k"]],["bool"]]],[11,"into",E,E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[46],E,E,6,[[["self"]],[T]]],[11,R[47],E,E,6,[[["self"],[T]]]],[11,R[4],E,E,6,[[[U]],[R[3]]]],[11,R[5],E,E,6,[[],[R[3]]]],[11,R[7],E,E,6,[[["self"]],[T]]],[11,R[6],E,E,6,[[["self"]],[T]]],[11,R[8],E,E,6,[[["self"]],[R[9]]]],[11,R[4793],E,E,6,[[["self"],["k"]],["bool"]]],[11,"into",E,E,7,[[],[U]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[46],E,E,7,[[["self"]],[T]]],[11,R[47],E,E,7,[[["self"],[T]]]],[11,R[4],E,E,7,[[[U]],[R[3]]]],[11,R[5],E,E,7,[[],[R[3]]]],[11,R[7],E,E,7,[[["self"]],[T]]],[11,R[6],E,E,7,[[["self"]],[T]]],[11,R[8],E,E,7,[[["self"]],[R[9]]]],[11,R[4793],E,E,7,[[["self"],["k"]],["bool"]]],[11,"into",E,E,8,[[],[U]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[46],E,E,8,[[["self"]],[T]]],[11,R[47],E,E,8,[[["self"],[T]]]],[11,R[4],E,E,8,[[[U]],[R[3]]]],[11,R[5],E,E,8,[[],[R[3]]]],[11,R[7],E,E,8,[[["self"]],[T]]],[11,R[6],E,E,8,[[["self"]],[T]]],[11,R[8],E,E,8,[[["self"]],[R[9]]]],[11,"into",E,E,9,[[],[U]]],[11,R[113],E,E,9,[[["self"]],["string"]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[46],E,E,9,[[["self"]],[T]]],[11,R[47],E,E,9,[[["self"],[T]]]],[11,R[4],E,E,9,[[[U]],[R[3]]]],[11,R[5],E,E,9,[[],[R[3]]]],[11,R[7],E,E,9,[[["self"]],[T]]],[11,R[6],E,E,9,[[["self"]],[T]]],[11,R[8],E,E,9,[[["self"]],[R[9]]]],[11,R[4793],E,E,9,[[["self"],["k"]],["bool"]]],[11,"into",R[5918],E,10,[[],[U]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[4],E,E,10,[[[U]],[R[3]]]],[11,R[5],E,E,10,[[],[R[3]]]],[11,R[7],E,E,10,[[["self"]],[T]]],[11,R[6],E,E,10,[[["self"]],[T]]],[11,R[8],E,E,10,[[["self"]],[R[9]]]],[11,"into",E,E,11,[[],[U]]],[11,R[113],E,E,11,[[["self"]],["string"]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[46],E,E,11,[[["self"]],[T]]],[11,R[47],E,E,11,[[["self"],[T]]]],[11,R[4],E,E,11,[[[U]],[R[3]]]],[11,R[5],E,E,11,[[],[R[3]]]],[11,R[7],E,E,11,[[["self"]],[T]]],[11,R[6],E,E,11,[[["self"]],[T]]],[11,R[8],E,E,11,[[["self"]],[R[9]]]],[11,"as_fail",E,E,11,[[["self"]],["fail"]]],[11,"into",E,E,12,[[],[U]]],[11,R[113],E,E,12,[[["self"]],["string"]]],[11,"from",E,E,12,[[[T]],[T]]],[11,R[46],E,E,12,[[["self"]],[T]]],[11,R[47],E,E,12,[[["self"],[T]]]],[11,R[4],E,E,12,[[[U]],[R[3]]]],[11,R[5],E,E,12,[[],[R[3]]]],[11,R[7],E,E,12,[[["self"]],[T]]],[11,R[6],E,E,12,[[["self"]],[T]]],[11,R[8],E,E,12,[[["self"]],[R[9]]]],[11,"as_fail",E,E,12,[[["self"]],["fail"]]],[11,"into",E,E,13,[[],[U]]],[11,R[113],E,E,13,[[["self"]],["string"]]],[11,"from",E,E,13,[[[T]],[T]]],[11,R[4],E,E,13,[[[U]],[R[3]]]],[11,R[5],E,E,13,[[],[R[3]]]],[11,R[7],E,E,13,[[["self"]],[T]]],[11,R[6],E,E,13,[[["self"]],[T]]],[11,R[8],E,E,13,[[["self"]],[R[9]]]],[11,"into",E,E,14,[[],[U]]],[11,R[113],E,E,14,[[["self"]],["string"]]],[11,"from",E,E,14,[[[T]],[T]]],[11,R[46],E,E,14,[[["self"]],[T]]],[11,R[47],E,E,14,[[["self"],[T]]]],[11,R[4],E,E,14,[[[U]],[R[3]]]],[11,R[5],E,E,14,[[],[R[3]]]],[11,R[7],E,E,14,[[["self"]],[T]]],[11,R[6],E,E,14,[[["self"]],[T]]],[11,R[8],E,E,14,[[["self"]],[R[9]]]],[11,"as_fail",E,E,14,[[["self"]],["fail"]]],[11,"into",E,E,15,[[],[U]]],[11,R[113],E,E,15,[[["self"]],["string"]]],[11,"from",E,E,15,[[[T]],[T]]],[11,R[4],E,E,15,[[[U]],[R[3]]]],[11,R[5],E,E,15,[[],[R[3]]]],[11,R[7],E,E,15,[[["self"]],[T]]],[11,R[6],E,E,15,[[["self"]],[T]]],[11,R[8],E,E,15,[[["self"]],[R[9]]]],[11,"into",E,E,16,[[],[U]]],[11,R[113],E,E,16,[[["self"]],["string"]]],[11,"from",E,E,16,[[[T]],[T]]],[11,R[46],E,E,16,[[["self"]],[T]]],[11,R[47],E,E,16,[[["self"],[T]]]],[11,R[4],E,E,16,[[[U]],[R[3]]]],[11,R[5],E,E,16,[[],[R[3]]]],[11,R[7],E,E,16,[[["self"]],[T]]],[11,R[6],E,E,16,[[["self"]],[T]]],[11,R[8],E,E,16,[[["self"]],[R[9]]]],[11,"as_fail",E,E,16,[[["self"]],["fail"]]],[11,"into",E,E,17,[[],[U]]],[11,R[113],E,E,17,[[["self"]],["string"]]],[11,"from",E,E,17,[[[T]],[T]]],[11,R[4],E,E,17,[[[U]],[R[3]]]],[11,R[5],E,E,17,[[],[R[3]]]],[11,R[7],E,E,17,[[["self"]],[T]]],[11,R[6],E,E,17,[[["self"]],[T]]],[11,R[8],E,E,17,[[["self"]],[R[9]]]],[11,"into",E,E,18,[[],[U]]],[11,R[113],E,E,18,[[["self"]],["string"]]],[11,"from",E,E,18,[[[T]],[T]]],[11,R[4],E,E,18,[[[U]],[R[3]]]],[11,R[5],E,E,18,[[],[R[3]]]],[11,R[7],E,E,18,[[["self"]],[T]]],[11,R[6],E,E,18,[[["self"]],[T]]],[11,R[8],E,E,18,[[["self"]],[R[9]]]],[11,"as_fail",E,E,18,[[["self"]],["fail"]]],[11,"into",E,E,19,[[],[U]]],[11,R[113],E,E,19,[[["self"]],["string"]]],[11,"from",E,E,19,[[[T]],[T]]],[11,R[4],E,E,19,[[[U]],[R[3]]]],[11,R[5],E,E,19,[[],[R[3]]]],[11,R[7],E,E,19,[[["self"]],[T]]],[11,R[6],E,E,19,[[["self"]],[T]]],[11,R[8],E,E,19,[[["self"]],[R[9]]]],[11,"as_fail",E,E,19,[[["self"]],["fail"]]],[11,"into",E,E,20,[[],[U]]],[11,R[113],E,E,20,[[["self"]],["string"]]],[11,"from",E,E,20,[[[T]],[T]]],[11,R[4],E,E,20,[[[U]],[R[3]]]],[11,R[5],E,E,20,[[],[R[3]]]],[11,R[7],E,E,20,[[["self"]],[T]]],[11,R[6],E,E,20,[[["self"]],[T]]],[11,R[8],E,E,20,[[["self"]],[R[9]]]],[11,"as_fail",E,E,20,[[["self"]],["fail"]]],[11,"into",E,E,21,[[],[U]]],[11,R[113],E,E,21,[[["self"]],["string"]]],[11,"from",E,E,21,[[[T]],[T]]],[11,R[4],E,E,21,[[[U]],[R[3]]]],[11,R[5],E,E,21,[[],[R[3]]]],[11,R[7],E,E,21,[[["self"]],[T]]],[11,R[6],E,E,21,[[["self"]],[T]]],[11,R[8],E,E,21,[[["self"]],[R[9]]]],[11,"as_fail",E,E,21,[[["self"]],["fail"]]],[11,"into",E,E,22,[[],[U]]],[11,"from",E,E,22,[[[T]],[T]]],[11,R[4],E,E,22,[[[U]],[R[3]]]],[11,R[5],E,E,22,[[],[R[3]]]],[11,R[7],E,E,22,[[["self"]],[T]]],[11,R[6],E,E,22,[[["self"]],[T]]],[11,R[8],E,E,22,[[["self"]],[R[9]]]],[11,"into",R[5926],E,23,[[],[U]]],[11,"from",E,E,23,[[[T]],[T]]],[11,R[46],E,E,23,[[["self"]],[T]]],[11,R[47],E,E,23,[[["self"],[T]]]],[11,R[4],E,E,23,[[[U]],[R[3]]]],[11,R[5],E,E,23,[[],[R[3]]]],[11,R[7],E,E,23,[[["self"]],[T]]],[11,R[6],E,E,23,[[["self"]],[T]]],[11,R[8],E,E,23,[[["self"]],[R[9]]]],[11,R[4793],E,E,23,[[["self"],["k"]],["bool"]]],[11,"into",E,E,24,[[],[U]]],[11,"from",E,E,24,[[[T]],[T]]],[11,R[46],E,E,24,[[["self"]],[T]]],[11,R[47],E,E,24,[[["self"],[T]]]],[11,R[4],E,E,24,[[[U]],[R[3]]]],[11,R[5],E,E,24,[[],[R[3]]]],[11,R[7],E,E,24,[[["self"]],[T]]],[11,R[6],E,E,24,[[["self"]],[T]]],[11,R[8],E,E,24,[[["self"]],[R[9]]]],[11,R[4793],E,E,24,[[["self"],["k"]],["bool"]]],[11,"into",R[5923],E,38,[[],[U]]],[11,"from",E,E,38,[[[T]],[T]]],[11,R[4],E,E,38,[[[U]],[R[3]]]],[11,R[5],E,E,38,[[],[R[3]]]],[11,R[7],E,E,38,[[["self"]],[T]]],[11,R[6],E,E,38,[[["self"]],[T]]],[11,R[8],E,E,38,[[["self"]],[R[9]]]],[11,"into",E,E,39,[[],[U]]],[11,"from",E,E,39,[[[T]],[T]]],[11,R[46],E,E,39,[[["self"]],[T]]],[11,R[47],E,E,39,[[["self"],[T]]]],[11,R[4],E,E,39,[[[U]],[R[3]]]],[11,R[5],E,E,39,[[],[R[3]]]],[11,R[7],E,E,39,[[["self"]],[T]]],[11,R[6],E,E,39,[[["self"]],[T]]],[11,R[8],E,E,39,[[["self"]],[R[9]]]],[11,R[4793],E,E,39,[[["self"],["k"]],["bool"]]],[11,"into",E,E,26,[[],[U]]],[11,"from",E,E,26,[[[T]],[T]]],[11,R[4],E,E,26,[[[U]],[R[3]]]],[11,R[5],E,E,26,[[],[R[3]]]],[11,R[7],E,E,26,[[["self"]],[T]]],[11,R[6],E,E,26,[[["self"]],[T]]],[11,R[8],E,E,26,[[["self"]],[R[9]]]],[11,R[4563],E,E,0,[[["self"],["__s"]],[R[3]]]],[11,R[4563],R[5924],E,37,[[["self"],["__s"]],[R[3]]]],[11,R[4563],R[5926],E,24,[[["self"],["__s"]],[R[3]]]],[11,R[4563],R[5923],E,39,[[["self"],["__s"]],[R[3]]]],[11,R[4563],R[5924],E,8,[[["self"],["__s"]],[R[3]]]],[11,R[4563],E,E,9,[[["self"],["__s"]],[R[3]]]],[11,R[4563],E,E,6,[[["self"],["__s"]],[R[3]]]],[11,R[4563],R[5926],E,23,[[["self"],["__s"]],[R[3]]]],[11,R[4563],R[5924],E,7,[[["self"],["__s"]],[R[3]]]],[11,R[4563],E,E,4,[[["self"],["__s"]],[R[3]]]],[11,R[4811],E,E,29,[[["self"]],["export"]]],[11,R[4811],R[5925],E,31,[[["self"]],["export"]]],[11,R[4811],R[5915],E,1,[[["self"]],["export"]]],[11,R[4811],E,E,34,[[["self"]],["export"]]],[11,R[4811],R[5924],E,33,[[["self"]],["export"]]],[11,R[775],R[5923],E,0,[[["str"]],[[R[3],["backend","string"]],["backend"],["string"]]]],[11,R[4354],R[5924],E,6,[[["__d"]],[[R[3],[R[4816]]],[R[4816]]]]],[11,R[4354],R[5923],E,0,[[["__d"]],[["backend"],[R[3],["backend"]]]]],[11,R[4354],R[5924],E,8,[[["__d"]],[[R[3],[R[4751]]],[R[4751]]]]],[11,R[4354],E,E,4,[[["__d"]],[[R[3],["value"]],["value"]]]],[11,R[4354],E,E,9,[[["__d"]],[["type"],[R[3],["type"]]]]],[11,R[4354],R[5923],E,39,[[["__d"]],[[R[3],[R[5927]]],[R[5927]]]]],[11,R[4354],R[5924],E,37,[[["__d"]],[[R[3],["funcsig"]],["funcsig"]]]],[11,R[4354],R[5926],E,23,[[["__d"]],[[R[3],["bytes"]],["bytes"]]]],[11,R[4354],R[5924],E,7,[[["__d"]],[[R[3],[R[4745]]],[R[4745]]]]],[11,R[4354],R[5926],E,24,[[["__d"]],[[R[3],["pages"]],["pages"]]]],[11,"add",E,E,24,[[[T]],["pages"]]],[11,"add",E,E,23,[[[T]],["bytes"]]],[11,"drop",R[5915],E,5,[[["self"]]]],[11,"eq",R[5926],E,23,[[["self"],["bytes"]],["bool"]]],[11,"ne",E,E,23,[[["self"],["bytes"]],["bool"]]],[11,"eq",R[5918],E,17,[[["self"],["error"]],["bool"]]],[11,"eq",E,E,14,[[["self"],[R[4829]]],["bool"]]],[11,"eq",E,E,16,[[["self"],[R[4744]]],["bool"]]],[11,"eq",R[5924],E,9,[[["self"],["type"]],["bool"]]],[11,"eq",R[5918],E,11,[[["self"],[R[4828]]],["bool"]]],[11,"eq",E,E,12,[[["self"],[R[4836]]],["bool"]]],[11,"eq",R[5924],E,7,[[["self"],[R[4745]]],["bool"]]],[11,"ne",E,E,7,[[["self"],[R[4745]]],["bool"]]],[11,"eq",R[5923],E,0,[[["self"],["backend"]],["bool"]]],[11,"eq",R[5924],E,4,[[["self"],["value"]],["bool"]]],[11,"ne",E,E,4,[[["self"],["value"]],["bool"]]],[11,"eq",R[5918],E,15,[[["self"],[R[5928]]],["bool"]]],[11,"eq",R[5924],E,37,[[["self"],["funcsig"]],["bool"]]],[11,"ne",E,E,37,[[["self"],["funcsig"]],["bool"]]],[11,"eq",R[5918],E,13,[[["self"],[R[4753]]],["bool"]]],[11,"eq",R[5923],E,39,[[["self"],[R[5927]]],["bool"]]],[11,"ne",E,E,39,[[["self"],[R[5927]]],["bool"]]],[11,"eq",R[5926],E,24,[[["self"],["pages"]],["bool"]]],[11,"ne",E,E,24,[[["self"],["pages"]],["bool"]]],[11,"eq",R[5924],E,6,[[["self"],[R[4816]]],["bool"]]],[11,"ne",E,E,6,[[["self"],[R[4816]]],["bool"]]],[11,R[45],R[5915],E,2,[[]]],[11,"fmt",R[5918],E,13,[[["self"],[R[10]]],[[R[3],["error"]],["error"]]]],[11,"fmt",E,E,21,[[["self"],[R[10]]],[[R[3],["error"]],["error"]]]],[11,"fmt",E,E,20,[[["self"],[R[10]]],[[R[3],["error"]],["error"]]]],[11,"fmt",E,E,14,[[["self"],[R[10]]],[[R[3],["error"]],["error"]]]],[11,"fmt",E,E,15,[[["self"],[R[10]]],[[R[3],["error"]],["error"]]]],[11,"fmt",E,E,16,[[["self"],[R[10]]],[[R[3],["error"]],["error"]]]],[11,"fmt",E,E,11,[[["self"],[R[10]]],[[R[3],["error"]],["error"]]]],[11,"fmt",E,E,18,[[["self"],[R[10]]],[[R[3],["error"]],["error"]]]],[11,"fmt",R[5924],E,9,[[["self"],[R[10]]],[[R[3],["error"]],["error"]]]],[11,"fmt",E,E,37,[[["self"],[R[10]]],[[R[3],["error"]],["error"]]]],[11,"fmt",R[5918],E,17,[[["self"],[R[10]]],[[R[3],["error"]],["error"]]]],[11,"fmt",E,E,12,[[["self"],[R[10]]],[[R[3],["error"]],["error"]]]],[11,"fmt",E,E,19,[[["self"],[R[10]]],[[R[3],["error"]],["error"]]]],[11,"sub",R[5926],E,24,[[[T]],["pages"]]],[11,"sub",E,E,23,[[[T]],["bytes"]]],[11,"into",R[5918],E,21,[[],[R[4741]]]],[11,"into",E,E,20,[[],[R[4741]]]],[11,"into",E,E,19,[[],[R[4741]]]],[11,R[77],R[5926],E,24,[[["self"],["pages"]],[[R[50]],[R[23],[R[50]]]]]],[11,"lt",E,E,24,[[["self"],["pages"]],["bool"]]],[11,"le",E,E,24,[[["self"],["pages"]],["bool"]]],[11,"gt",E,E,24,[[["self"],["pages"]],["bool"]]],[11,"ge",E,E,24,[[["self"],["pages"]],["bool"]]],[11,R[77],E,E,23,[[["self"],["bytes"]],[[R[50]],[R[23],[R[50]]]]]],[11,"lt",E,E,23,[[["self"],["bytes"]],["bool"]]],[11,"le",E,E,23,[[["self"],["bytes"]],["bool"]]],[11,"gt",E,E,23,[[["self"],["bytes"]],["bool"]]],[11,"ge",E,E,23,[[["self"],["bytes"]],["bool"]]],[11,"cmp",E,E,24,[[["self"],["pages"]],[R[50]]]],[11,"cmp",E,E,23,[[["self"],["bytes"]],[R[50]]]],[11,"deref",R[5925],E,36,[[["self"]]]],[11,"deref",E,E,36,[[["self"]]]],[11,R[4810],R[5915],E,3,[[["self"],["str"]],[[R[23],["export"]],["export"]]]],[11,R[4808],E,E,3,[[["self"]],["vec"]]],[11,R[4809],E,E,3,[[["self"],["str"],["export"]],[R[23]]]],[11,"clone",R[5925],E,31,[[["self"]],["memory"]]],[11,"clone",R[5918],E,14,[[["self"]],[R[4829]]]],[11,"clone",E,E,12,[[["self"]],[R[4836]]]],[11,"clone",R[5915],E,32,[[["self"]],["module"]]],[11,"clone",R[5924],E,9,[[["self"]],["type"]]],[11,"clone",E,E,8,[[["self"]],[R[4751]]]],[11,"clone",R[5915],E,1,[[["self"]],["export"]]],[11,"clone",R[5924],E,37,[[["self"]],["funcsig"]]],[11,"clone",E,E,4,[[["self"]],["value"]]],[11,"clone",R[5918],E,11,[[["self"]],[R[4828]]]],[11,"clone",R[5924],E,7,[[["self"]],[R[4745]]]],[11,"clone",E,E,33,[[["self"]],["table"]]],[11,"clone",R[5926],E,23,[[["self"]],["bytes"]]],[11,"clone",R[5924],E,29,[[["self"]],["global"]]],[11,"clone",R[5923],E,0,[[["self"]],["backend"]]],[11,"clone",R[5926],E,24,[[["self"]],["pages"]]],[11,"clone",R[5918],E,16,[[["self"]],[R[4744]]]],[11,"clone",R[5923],E,39,[[["self"]],[R[5927]]]],[11,"clone",R[5924],E,6,[[["self"]],[R[4816]]]],[11,"fmt",R[5918],E,21,[[["self"],[R[10]]],[[R[3],["error"]],["error"]]]],[11,"fmt",R[5924],E,7,[[["self"],[R[10]]],[[R[3],["error"]],["error"]]]],[11,"fmt",R[5918],E,20,[[["self"],[R[10]]],[[R[3],["error"]],["error"]]]],[11,"fmt",E,E,11,[[["self"],[R[10]]],[[R[3],["error"]],["error"]]]],[11,"fmt",R[5924],E,8,[[["self"],[R[10]]],[[R[3],["error"]],["error"]]]],[11,"fmt",R[5918],E,19,[[["self"],[R[10]]],[[R[3],["error"]],["error"]]]],[11,"fmt",R[5924],E,37,[[["self"],[R[10]]],[[R[3],["error"]],["error"]]]],[11,"fmt",E,E,33,[[["self"],[R[10]]],[[R[3],["error"]],["error"]]]],[11,"fmt",R[5926],E,24,[[["self"],[R[10]]],[[R[3],["error"]],["error"]]]],[11,"fmt",R[5918],E,17,[[["self"],[R[10]]],[[R[3],["error"]],["error"]]]],[11,"fmt",E,E,15,[[["self"],[R[10]]],[[R[3],["error"]],["error"]]]],[11,"fmt",E,E,14,[[["self"],[R[10]]],[[R[3],["error"]],["error"]]]],[11,"fmt",R[5923],E,0,[[["self"],[R[10]]],[[R[3],["error"]],["error"]]]],[11,"fmt",R[5918],E,16,[[["self"],[R[10]]],[[R[3],["error"]],["error"]]]],[11,"fmt",E,E,18,[[["self"],[R[10]]],[[R[3],["error"]],["error"]]]],[11,"fmt",R[5923],E,39,[[["self"],[R[10]]],[[R[3],["error"]],["error"]]]],[11,"fmt",R[5918],E,10,[[["self"],[R[10]]],[[R[3],["error"]],["error"]]]],[11,"fmt",E,E,22,[[["self"],[R[10]]],[[R[3],["error"]],["error"]]]],[11,"fmt",R[5925],E,31,[[["self"],[R[10]]],[[R[3],["error"]],["error"]]]],[11,"fmt",R[5918],E,13,[[["self"],[R[10]]],[[R[3],["error"]],["error"]]]],[11,"fmt",R[5924],E,4,[[["self"],[R[10]]],[[R[3],["error"]],["error"]]]],[11,"fmt",R[5926],E,23,[[["self"],[R[10]]],[[R[3],["error"]],["error"]]]],[11,"fmt",R[5918],E,12,[[["self"],[R[10]]],[[R[3],["error"]],["error"]]]],[11,"fmt",R[5924],E,29,[[["self"],[R[10]]],[[R[3],["error"]],["error"]]]],[11,"fmt",R[5915],E,5,[[["self"],[R[10]]],[[R[3],["error"]],["error"]]]],[11,"fmt",R[5924],E,9,[[["self"],[R[10]]],[[R[3],["error"]],["error"]]]],[11,"fmt",R[5915],E,1,[[["self"],[R[10]]],[[R[3],["error"]],["error"]]]],[11,"fmt",R[5924],E,6,[[["self"],[R[10]]],[[R[3],["error"]],["error"]]]],[11,R[83],R[5923],E,0,[[],["backend"]]],[11,"hash",R[5924],E,37,[[["self"],["__h"]]]],[11,"hash",R[5923],E,39,[[["self"],["__h"]]]],[11,"hash",R[5924],E,9,[[["self"],["__h"]]]],[11,"from",R[5918],E,22,[[[R[4749]]],[R[1204]]]],[11,"from",R[5926],E,24,[[["bytes"]],["pages"]]],[11,"from",R[5918],E,20,[[["error"]],["memorycreationerror"]]],[11,"from",E,E,11,[[[R[4837]]],[R[4828]]]],[11,"from",R[5924],E,4,[[["f64"]],["value"]]],[11,"from",R[5918],E,10,[[["error"]],["error"]]],[11,"from",E,E,17,[[[R[5928]]],["error"]]],[11,"from",E,E,17,[[[R[4829]]],["error"]]],[11,"from",E,E,15,[[[R[4753]]],[R[5928]]]],[11,"from",R[5926],E,23,[[["pages"]],["bytes"]]],[11,"from",R[5918],E,17,[[[R[4744]]],["error"]]],[11,"from",E,E,17,[[["vec",[R[4836]]],[R[4836]]],["error"]]],[11,"from",E,E,17,[[[R[4753]]],["error"]]],[11,"from",R[5924],E,4,[[["f32"]],["value"]]],[11,"from",R[5918],E,15,[[[R[4829]]],[R[5928]]]],[11,"from",E,E,17,[[[R[4828]]],["error"]]],[11,"from",R[5924],E,4,[[["i32"]],["value"]]],[11,"from",E,E,4,[[["i64"]],["value"]]],[11,"from",E,E,4,[[["u128"]],["value"]]],[11,"extend",R[5915],E,2,[[["self"],[T]]]],[11,"from",R[5924],E,9,[[["type"],["converter",["type"]]],["type"]]],[11,"from",E,E,37,[[[R[3279]],["converter",[R[3279]]]],["funcsig"]]],[11,"load",R[5923],E,26,[[["self"],[R[5927]]],[[R[3],["module",R[4718]]],["module"],[R[4718]]]]],[11,R[5929],E,E,26,[[["self"],["backend"],[R[5927]]],[[R[3],["module",R[4718]]],["module"],[R[4718]]]]],[11,"store",E,E,26,[[["self"],["module"],[R[5927]]],[[R[4718]],[R[3],[R[4718]]]]]],[11,"variants",E,E,0,[[]]],[11,R[113],E,"stable string representation of the backend can be used as…",0,[[["self"]],["str"]]],[11,"new",R[5915],E,27,[[],[R[4748]]]],[11,"push",E,E,27,[[["self"],["m"]]]],[11,"new",E,E,28,[[["cgen"]],[R[5949]]]],[11,"new",R[5924],R[5985],29,[[["value"]],["global"]]],[11,R[5986],E,R[5987],29,[[["value"]],["global"]]],[11,R[4750],E,R[5988],29,[[["self"]],[R[4816]]]],[11,"set",E,R[5989],29,[[["self"],["value"]]]],[11,"get",E,R[5990],29,[[["self"]],["value"]]],[11,"new",R[5915],R[5993],2,[[],[R[4783]]]],[11,R[5994],E,E,2,[[["f"]],[R[4783]]]],[11,R[4249],E,R[5995],2,[[["self"],["s"],["n"]],[["box",[R[4733]]],[R[23],["box"]]]]],[11,R[5996],E,E,2,[[["self"],["str"]],[[R[23],["ref"]],["ref",[R[4733]]]]]],[11,"clone_ref",E,E,2,[[["self"]],[R[4783]]]],[11,"call",E,R[6006],30,[[["self"]],[[R[3],["vec",R[5928]]],["vec",["value"]],[R[5928]]]]],[11,R[3279],E,E,30,[[["self"]],["funcsig"]]],[11,"raw",E,E,30,[[["self"]]]],[11,"load",E,E,3,[[["self"],[T]],[R[3]]]],[11,"func",E,R[5997],3,[[["self"],["str"]],[[R[3],["func",R[4829]]],[R[4829]],["func",["wasm"]]]]],[11,R[5998],E,E,3,[[["self"],["str"]],[[R[3],["usize",R[4829]]],[R[4829]],["usize"]]]],[11,"dyn_func",E,R[5999],3,[[["self"],["str"]],[[R[4829]],[R[3],["dynfunc",R[4829]]],["dynfunc"]]]],[11,"call",E,R[6000],3,[[["self"],["str"]],[[R[3],["vec",R[5928]]],["vec",["value"]],[R[5928]]]]],[11,"context",E,R[6001],3,[[["self"]],["ctx"]]],[11,R[6002],E,R[6003],3,[[["self"]],["ctx"]]],[11,"exports",E,R[6004],3,[[["self"]],["exportiter"]]],[11,"module",E,R[6005],3,[[["self"]],["module"]]],[11,R[4766],E,E,3,[[["self"],[R[4737]]],["u64"]]],[11,R[4767],E,E,3,[[["self"],["u64"],[R[4737]]]]],[11,"new",R[5925],R[6010],31,[[[R[4745]]],[["memory"],[R[3],["memory",R[4744]]],[R[4744]]]]],[11,R[4750],E,R[6011],31,[[["self"]],[R[4745]]]],[11,"grow",E,R[6012],31,[[["self"],["pages"]],[[R[3],["pages",R[4741]]],[R[4741]],["pages"]]]],[11,"size",E,R[6013],31,[[["self"]],["pages"]]],[11,"view",E,R[6014],31,[[["self"]],[[R[5930]],[R[6009],[R[5930]]]]]],[11,R[5931],R[5915],R[6015],32,[[["self"],[R[4783]]],[[R[143]],[R[3],[R[143],"error"]],["error"]]]],[11,"cache",E,E,32,[[["self"]],[[R[3],[R[6016],"error"]],[R[6016]],["error"]]]],[11,"info",E,E,32,[[["self"]],[R[4717]]]],[11,"new",R[5924],R[6017],33,[[[R[4751]]],[["table"],[R[4744]],[R[3],["table",R[4744]]]]]],[11,R[4750],E,R[6018],33,[[["self"]],[R[4751]]]],[11,"set",E,R[6019],33,[[["self"],["u32"],["element"]],[R[3]]]],[11,"size",E,R[6020],33,[[["self"]],["u32"]]],[11,"grow",E,R[6021],33,[[["self"],["u32"]],[[R[4741]],[R[3],["u32",R[4741]]],["u32"]]]],[11,R[6022],E,E,33,[[["self"]]]],[11,"ty",E,E,4,[[["self"]],["type"]]],[11,"to_u128",E,E,4,[[["self"]],["u128"]]],[11,"memory",R[5915],R[6046],5,[[["self"],["u32"]],["memory"]]],[11,R[6047],E,R[6048],5,[[["self"]],[R[23]]]],[11,R[6049],E,R[6050],5,[[["self"]],["usize"]]],[11,R[4766],E,R[6051],5,[[["self"],[R[4737]]],["u64"]]],[11,R[4767],E,R[6052],5,[[["self"],["u64"],[R[4737]]]]],[11,R[6023],E,E,34,[[["self"]],[["nonnull",["func"]],["func"]]]],[11,"new",E,E,34,[[["f"]],[["func",["host"]],["host"]]]],[11,"params",E,E,34,[[["self"]]]],[11,"returns",E,E,34,[[["self"]]]],[11,"call",E,E,34,[[["self"],["a"]],[[R[3],[R[4753]]],[R[4753]]]]],[11,"call",E,E,34,[[["self"]],[[R[3],[R[4753]]],[R[4753]]]]],[11,"call",E,E,34,[[["self"],["a"]],[[R[3],[R[4753]]],[R[4753]]]]],[11,"call",E,E,34,[[["self"],["a"],["b"]],[[R[3],[R[4753]]],[R[4753]]]]],[11,"call",E,E,34,[[["self"],["a"],["c"],["b"]],[[R[3],[R[4753]]],[R[4753]]]]],[11,"call",E,E,34,[[["self"],["a"],["c"],["d"],["b"]],[[R[3],[R[4753]]],[R[4753]]]]],[11,"call",E,E,34,[[["self"],["a"],["e"],["c"],["d"],["b"]],[[R[3],[R[4753]]],[R[4753]]]]],[11,"call",E,E,34,[[["self"],["a"],["e"],["c"],["d"],["b"],["f"]],[[R[3],[R[4753]]],[R[4753]]]]],[11,"call",E,E,34,[[["self"],["f"],["a"],["e"],["c"],["d"],["b"],["g"]],[[R[3],[R[4753]]],[R[4753]]]]],[11,"call",E,E,34,[[["self"],["h"],["f"],["a"],["e"],["c"],["d"],["b"],["g"]],[[R[3],[R[4753]]],[R[4753]]]]],[11,"call",E,E,34,[[["self"],["h"],["i"],["f"],["a"],["e"],["c"],["d"],["b"],["g"]],[[R[3],[R[4753]]],[R[4753]]]]],[11,"call",E,E,34,[[["self"],["h"],["i"],["f"],["a"],["j"],["e"],["c"],["d"],["b"],["g"]],[[R[3],[R[4753]]],[R[4753]]]]],[11,"call",E,E,34,[[["self"],["h"],["i"],["f"],["k"],["a"],["j"],["e"],["c"],["d"],["b"],["g"]],[[R[3],[R[4753]]],[R[4753]]]]],[11,"call",E,E,34,[[["self"],["h"],["i"],["f"],["k"],["a"],["j"],["l"],["e"],["c"],["d"],["b"],["g"]],[[R[3],[R[4753]]],[R[4753]]]]],[11,R[4743],R[5925],E,36,[[["self"]],[[R[6009],[R[4743]]],[R[4743]]]]],[11,"new",R[5924],E,37,[[["params"],["returns"]],["funcsig"]]],[11,"params",E,E,37,[[["self"]]]],[11,"returns",E,E,37,[[["self"]]]],[11,R[6035],E,E,37,[[["self"]],["bool"]]],[11,R[6034],E,E,7,[[],[R[226]]]],[11,R[1206],R[5926],E,24,[[["pages"]],[[R[6038]],[R[3],["pages",R[6038]]],["pages"]]]],[11,"bytes",E,E,24,[[],["bytes"]]],[11,R[4354],R[5923],E,38,[[],[[R[3],[R[6016],"error"]],[R[6016]],["error"]]]],[11,"info",E,E,38,[[["self"]],[R[4717]]]],[11,R[4563],E,E,38,[[["self"]],[[R[3],["vec","error"]],["vec",["u8"]],["error"]]]],[11,R[4714],E,R[5946],39,[[],[R[5927]]]],[11,"encode",E,R[5947],39,[[],["string"]]],[11,"decode",E,R[5948],39,[[["str"]],[["error"],[R[5927]],[R[3],[R[5927],"error"]]]]]],"p":[[4,"Backend"],[4,"Export"],[3,R[4851]],[3,R[6054]],[4,"Value"],[3,"Ctx"],[3,R[4869]],[3,R[4870]],[3,R[4868]],[4,"Type"],[4,"CacheError"],[4,R[4727]],[4,R[5953]],[4,R[4728]],[4,R[4729]],[4,R[5965]],[4,R[4730]],[4,"Error"],[4,R[6055]],[4,R[6056]],[4,R[4848]],[4,R[4849]],[4,R[4692]],[3,"Bytes"],[3,"Pages"],[8,"Cache"],[3,R[5932]],[3,R[4847]],[3,R[4846]],[3,"Global"],[3,"DynFunc"],[3,"Memory"],[3,"Module"],[3,"Table"],[3,"Func"],[3,R[6007]],[3,R[6008]],[3,"FuncSig"],[3,"Artifact"],[3,"WasmHash"]]};
searchIndex["wasmer_runtime_core"]={"doc":E,"i":[[3,"DynFunc",R[4715],R[4735],N,N],[3,R[6054],E,R[4734],N,N],[12,"module",E,E,0,N],[3,"Module",E,R[4746],N,N],[3,"Func",E,E,N,N],[5,R[5933],E,R[5934],N,[[[R[6063]]],[[R[4713],["module"]],["module"]]]],[5,R[5935],E,"The same as `compile_with` but changes the compiler…",N,[[[R[4716]],[R[6063]]],[[R[4713],["module"]],["module"]]]],[5,"validate",E,R[5936],N,[[],["bool"]]],[5,"validate_and_report_errors",E,"The same as `validate` but with an Error message on failure",N,[[],[[R[3],["string"]],["string"]]]],[5,"validate_and_report_errors_with_features",E,"The same as `validate_and_report_errors` but with a…",N,[[[R[4701]]],[[R[3],["string"]],["string"]]]],[5,"load_cache_with",E,E,N,[[[R[6016]],[R[6063]]],[[R[3],["module",R[4718]]],["module"],[R[4718]]]]],[0,"cache",E,E,N,N],[3,"WasmHash",R[4788],R[5937],N,N],[3,"Artifact",E,E,N,N],[4,R[4839],E,E,N,N],[13,"InvalidSize",E,E,1,N],[13,"InvalidMagic",E,E,1,N],[4,"Error",E,E,N,N],[13,"IoError",E,E,2,N],[13,R[5938],E,E,2,N],[13,R[5939],E,E,2,N],[13,"Unknown",E,E,2,N],[13,R[5940],E,E,2,N],[13,R[5941],E,E,2,N],[13,R[5942],E,E,2,N],[17,"WASMER_VERSION_HASH",E,"A unique ID generated from the version of Wasmer for use…",N,N],[8,"Cache",E,R[5943],N,N],[16,R[6057],E,E,3,N],[16,"StoreError",E,E,3,N],[10,"load",E,R[5944],3,[[["self"],[R[5927]]],[[R[3],["module"]],["module"]]]],[10,R[5929],E,R[5945],3,[[["self"],[R[5927]],["backend"]],[[R[3],["module"]],["module"]]]],[10,"store",E,E,3,[[["self"],[R[5927]],["module"]],[R[3]]]],[11,R[4714],E,R[5946],4,[[],["self"]]],[11,"encode",E,R[5947],4,[[],["string"]]],[11,"decode",E,R[5948],4,[[["str"]],[[R[3],["error"]],["error"]]]],[11,R[4354],E,E,5,[[],[[R[3],["error"]],["error"]]]],[11,"info",E,E,5,[[["self"]],[R[4717]]]],[11,R[4563],E,E,5,[[["self"]],[["error"],[R[3],["vec","error"]],["vec",["u8"]]]]],[0,"codegen",R[4715],E,N,N],[3,R[4840],R[4789],E,N,N],[12,"fault",E,E,6,N],[3,R[4846],E,E,N,N],[3,R[4845],E,E,N,N],[3,"EventSink",E,E,N,N],[3,R[4847],E,E,N,N],[4,"Event",E,E,N,N],[13,"Internal",E,E,7,N],[13,"Wasm",E,E,7,N],[13,"WasmOwned",E,E,7,N],[4,R[4841],E,E,N,N],[13,"FunctionBegin",E,E,8,N],[13,"FunctionEnd",E,E,8,N],[13,"Breakpoint",E,E,8,N],[13,"SetInternal",E,E,8,N],[13,"GetInternal",E,E,8,N],[5,"validating_parser_config",E,E,N,[[[R[4701]]],[R[203]]]],[6,"BreakpointHandler",E,E,N,N],[6,"BreakpointMap",E,E,N,N],[8,R[4842],E,E,N,N],[10,"new",E,"Creates a new module code generator.",9,[[],["self"]]],[10,"backend_id",E,"Returns the backend id associated with this MCG.",9,[[],["backend"]]],[11,"feed_compiler_config",E,"Feeds the compiler config.",9,[[["self"],[R[4716]]],[R[3]]]],[10,"feed_import_function",E,"Adds an import function.",9,[[["self"]],[R[3]]]],[10,"feed_signatures",E,E,9,[[["self"],["funcsig"],["map",[R[4834],"funcsig"]],[R[4834]]],[R[3]]]],[10,"feed_function_signatures",E,"Sets function signatures.",9,[[["self"],[R[4759]],[R[4834]],["map",[R[4759],R[4834]]]],[R[3]]]],[10,"check_precondition",E,"Checks the precondition for a module.",9,[[["self"],[R[4717]]],[R[3]]]],[10,"next_function",E,"Creates a new function and returns the function-scope code…",9,[[["self"],["arc",["rwlock"]],["rwlock",[R[4717]]]],[[R[3]],["fcg"]]]],[10,R[5543],E,"Finalizes this module.",9,[[[R[4717]]],[R[3]]]],[10,"from_cache",E,"Creates a module from cache.",9,[[["token"],[R[6016]]],[[R[4719]],[R[4718]],[R[3],[R[4719],R[4718]]]]]],[8,R[4843],E,E,N,N],[16,"Error",E,E,10,N],[10,R[5451],E,E,10,[[["self"],[R[4717]],["eventsink"],["event"]],[R[3]]]],[8,R[4844],E,"The function-scope code generator trait.",N,N],[10,"feed_return",E,"Sets the return type.",11,[[["self"],["wptype"]],[R[3]]]],[10,"feed_param",E,"Adds a parameter to the function.",11,[[["self"],["wptype"]],[R[3]]]],[10,"feed_local",E,"Adds `n` locals to the function.",11,[[["self"],["wptype"],["usize"]],[R[3]]]],[10,"begin_body",E,"Called before the first call to `feed_opcode`.",11,[[["self"],[R[4717]]],[R[3]]]],[10,R[5451],E,"Called for each operator.",11,[[["self"],[R[4717]],["event"]],[R[3]]]],[10,R[5543],E,"Finalizes the function.",11,[[["self"]],[R[3]]]],[11,"new",E,E,12,[[],[R[5949]]]],[11,"new",E,E,13,[[["cgen"]],["self"]]],[11,"push",E,E,14,[[["self"],["event"]]]],[11,"new",E,E,15,[[],[R[4748]]]],[11,"push",E,E,15,[[["self"],["functionmiddleware"]]]],[0,"error",R[4715],E,N,N],[4,R[4727],R[4720],R[5950],N,N],[13,R[5951],E,E,16,N],[12,"msg",R[4721],E,16,N],[13,R[5952],R[4720],E,16,N],[12,"msg",R[4721],E,16,N],[4,R[5953],R[4720],R[5954],N,N],[13,R[5955],E,E,17,N],[12,R[4724],R[4722],E,17,N],[12,"name",E,E,17,N],[12,R[4723],E,E,17,N],[12,"found",E,E,17,N],[13,R[5956],R[4720],E,17,N],[12,R[4724],R[4722],E,17,N],[12,"name",E,E,17,N],[12,R[4723],E,E,17,N],[12,"found",E,E,17,N],[13,R[5957],R[4720],E,17,N],[12,R[4724],R[4722],E,17,N],[12,"name",E,E,17,N],[13,R[5958],R[4720],E,17,N],[12,R[4724],R[4722],E,17,N],[12,"name",E,E,17,N],[12,R[4723],E,E,17,N],[12,"found",E,E,17,N],[13,R[5959],R[4720],E,17,N],[12,R[4724],R[4722],E,17,N],[12,"name",E,E,17,N],[12,R[4723],E,E,17,N],[12,"found",E,E,17,N],[13,R[5960],R[4720],E,17,N],[12,R[4724],R[4722],E,17,N],[12,"name",E,E,17,N],[12,R[4723],E,E,17,N],[12,"found",E,E,17,N],[13,"Generic",R[4720],E,17,N],[12,"message",R[4722],E,17,N],[4,R[4728],R[4720],R[5961],N,N],[13,"Trap",E,E,18,N],[12,"msg",R[4725],E,18,N],[13,"Error",R[4720],E,18,N],[12,"data",R[4725],E,18,N],[4,R[4729],R[4720],R[5962],N,N],[13,R[5434],E,E,19,N],[12,R[4723],R[4726],E,19,N],[12,"found",E,E,19,N],[13,R[5963],R[4720],E,19,N],[12,"name",R[4726],E,19,N],[13,R[5964],R[4720],E,19,N],[12,"name",R[4726],E,19,N],[4,R[5965],R[4720],R[5966],N,N],[13,"Resolve",E,E,20,N],[13,"Runtime",E,E,20,N],[4,R[4730],E,R[5967],N,N],[13,R[5968],E,E,21,N],[13,R[5969],E,E,21,N],[13,R[5970],E,E,21,N],[4,"Error",E,R[5971],N,N],[13,R[4727],E,E,22,N],[13,R[5953],E,E,22,N],[13,R[4728],E,E,22,N],[13,R[4729],E,E,22,N],[13,R[5965],E,E,22,N],[13,R[4730],E,E,22,N],[4,R[6055],E,E,N,N],[13,R[5972],E,E,23,N],[13,R[5973],E,E,23,N],[13,R[4731],E,E,23,N],[13,R[5974],E,E,23,N],[13,R[5975],E,E,23,N],[13,R[5976],E,E,23,N],[4,R[6056],E,E,N,N],[13,R[4731],E,E,24,N],[4,R[4848],E,E,N,N],[13,R[5977],E,E,25,N],[13,R[5978],E,E,25,N],[4,R[4849],E,E,N,N],[13,R[5979],E,E,26,N],[4,R[4692],E,E,N,N],[13,R[5980],E,E,27,N],[6,"Result",E,E,N,N],[6,R[5981],E,E,N,N],[6,"LinkResult",E,E,N,N],[6,R[5982],E,E,N,N],[6,"CallResult",E,E,N,N],[6,R[5983],E,E,N,N],[6,R[5984],E,E,N,N],[0,"export",R[4715],E,N,N],[3,R[4850],R[4732],E,N,N],[3,"ExportIter",E,E,N,N],[4,"Context",E,E,N,N],[13,"External",E,E,28,N],[13,"Internal",E,E,28,N],[4,"Export",E,E,N,N],[13,R[196],E,E,29,N],[12,"func","wasmer_runtime_core::export::Export",E,29,N],[12,"ctx",E,E,29,N],[12,R[3279],E,E,29,N],[13,"Memory",R[4732],E,29,N],[13,"Table",E,E,29,N],[13,"Global",E,E,29,N],[11,"new",E,"This needs to be unsafe because there is no way to check…",30,[[],["self"]]],[0,"global",R[4715],E,N,N],[3,"Global",R[4790],E,N,N],[11,"new",E,R[5985],31,[[["value"]],["self"]]],[11,R[5986],E,R[5987],31,[[["value"]],["self"]]],[11,R[4750],E,R[5988],31,[[["self"]],[R[4816]]]],[11,"set",E,R[5989],31,[[["self"],["value"]]]],[11,"get",E,R[5990],31,[[["self"]],["value"]]],[0,"import",R[4715],E,N,N],[3,R[4851],R[4791],R[5991],N,N],[12,R[5992],E,E,32,N],[3,R[4909],E,E,N,N],[3,"Namespace",E,E,N,N],[8,R[4852],E,E,N,N],[10,R[4810],E,E,33,[[["self"],["str"]],[["export"],[R[23],["export"]]]]],[10,R[4808],E,E,33,[[["self"]],["vec"]]],[10,R[4809],E,E,33,[[["self"],["export"],["str"]],[R[23]]]],[8,"IsExport",E,E,N,N],[10,R[4811],E,E,34,[[["self"]],["export"]]],[11,"new",E,R[5993],32,[[],["self"]]],[11,R[5994],E,E,32,[[["f"]],["self"]]],[11,R[4249],E,R[5995],32,[[["self"],["s"],["n"]],[["box",[R[4733]]],[R[23],["box"]]]]],[11,R[5996],E,E,32,[[["self"],["str"]],[["ref",[R[4733]]],[R[23],["ref"]]]]],[11,"clone_ref",E,E,32,[[["self"]],["self"]]],[11,"new",E,E,35,[[],["self"]]],[11,"insert",E,E,35,[[["self"],["s"],["e"]],[["box",["isexport"]],[R[23],["box"]]]]],[11,R[311],E,E,35,[[["self"],["s"]],["bool"]]],[0,R[143],R[4715],E,N,N],[3,R[6054],R[4784],R[4734],N,N],[12,"module",E,E,0,N],[3,"DynFunc",E,R[4735],N,N],[11,"load",E,E,0,[[["self"],["loader"]],[R[3]]]],[11,"func",E,R[5997],0,[[["self"],["str"]],[["func",["wasm"]],[R[4736],["func"]]]]],[11,R[5998],E,E,0,[[["self"],["str"]],[[R[4736],["usize"]],["usize"]]]],[11,"dyn_func",E,R[5999],0,[[["self"],["str"]],[["dynfunc"],[R[4736],["dynfunc"]]]]],[11,"call",E,R[6000],0,[[["self"],["str"]],[[R[5445],["vec"]],["vec",["value"]]]]],[11,"context",E,R[6001],0,[[["self"]],["ctx"]]],[11,R[6002],E,R[6003],0,[[["self"]],["ctx"]]],[11,"exports",E,R[6004],0,[[["self"]],["exportiter"]]],[11,"module",E,R[6005],0,[[["self"]],["module"]]],[11,R[4766],E,E,0,[[["self"],[R[4737]]],["u64"]]],[11,R[4767],E,E,0,[[["self"],[R[4737]],["u64"]]]],[11,"call",E,R[6006],36,[[["self"]],[[R[5445],["vec"]],["vec",["value"]]]]],[11,R[3279],E,E,36,[[["self"]],["funcsig"]]],[11,"raw",E,E,36,[[["self"]]]],[0,"loader",R[4715],E,N,N],[3,R[4910],R[4792],E,N,N],[3,R[4911],E,E,N,N],[3,"CodeMemory",E,E,N,N],[8,"Loader",E,E,N,N],[16,R[6054],E,E,37,N],[16,"Error",E,E,37,N],[10,"load",E,E,37,[[["self"],[R[4717]],["ctx"],[R[4812]]],[R[3]]]],[8,R[6054],E,E,N,N],[16,"Error",E,E,38,N],[10,"call",E,E,38,[[["self"],["usize"]],[[R[3],["u128"]],["u128"]]]],[11,"read_memory",E,E,38,[[["self"],["u32"]],[[R[3],["vec"]],["vec",["u8"]]]]],[11,"write_memory",E,E,38,[[["self"],["u32"]],[R[3]]]],[11,"new",E,E,39,[[["usize"]],["codememory"]]],[11,"make_executable",E,E,39,[[["self"]]]],[11,"make_writable",E,E,39,[[["self"]]]],[0,"memory",R[4715],E,N,N],[3,R[4853],R[4739],R[4738],N,N],[3,R[4854],E,R[4738],N,N],[3,R[6007],E,E,N,N],[3,R[6008],E,E,N,N],[3,"Memory",E,R[5916],N,N],[3,R[4855],E,E,N,N],[3,R[4856],E,E,N,N],[3,R[4912],E,E,N,N],[4,R[257],E,E,N,N],[13,"Dynamic",E,E,40,N],[13,"Static",E,E,40,N],[13,"SharedStatic",E,E,40,N],[11,"size",E,E,41,[[["self"]],["pages"]]],[11,"grow",E,E,41,[[["self"],[R[4740]],["pages"]],[[R[3],["pages",R[4741]]],[R[4741]],["pages"]]]],[11,R[44],E,E,41,[[["self"]]]],[11,R[4742],E,E,41,[[["self"]]]],[0,"ptr",E,"A reusable pointer abstraction for getting memory from the…",N,N],[3,"Array",R[4794],E,N,N],[3,"Item",E,E,N,N],[3,"WasmPtr",E,E,N,N],[11,"new",E,E,42,[[["u32"]],["self"]]],[11,"offset",E,E,42,[[],["u32"]]],[11,"deref",E,E,42,[[["memory"]],[[R[23],["cell"]],["cell"]]]],[11,R[17],E,E,42,[[["memory"]],[[R[23],["cell"]],["cell"]]]],[11,"deref",E,E,42,[[["memory"],["u32"]],[R[23]]]],[11,R[17],E,E,42,[[["memory"],["u32"]],[R[23]]]],[11,"get_utf8_string",E,E,42,[[["memory"],["u32"]],[[R[23],["str"]],["str"]]]],[11,"size",R[4739],E,43,[[["self"]],["pages"]]],[11,"grow",E,E,43,[[["self"],[R[4740]],["pages"]],[[R[3],["pages",R[4741]]],[R[4741]],["pages"]]]],[11,R[44],E,E,43,[[["self"]]]],[11,R[4742],E,E,43,[[["self"]]]],[11,R[4743],E,E,44,[[["self"]],[[R[4743]],[R[6009],[R[4743]]]]]],[11,"new",E,R[6010],45,[[[R[4745]]],[[R[4744]],[R[3],[R[4744]]]]]],[11,R[4750],E,R[6011],45,[[["self"]],[R[4745]]]],[11,"grow",E,R[6012],45,[[["self"],["pages"]],[[R[3],["pages",R[4741]]],[R[4741]],["pages"]]]],[11,"size",E,R[6013],45,[[["self"]],["pages"]]],[11,"view",E,R[6014],45,[[["self"]],[[R[6009]],["valuetype"]]]],[11,"new",E,E,46,[[[R[4745]]],[[R[4744]],[R[3],[R[4744]]]]]],[11,"grow",E,E,46,[[["self"],["pages"]],[[R[3],["pages",R[4741]]],[R[4741]],["pages"]]]],[11,"size",E,E,46,[[["self"]],["pages"]]],[11,"grow",E,E,47,[[["self"],["pages"]],[[R[3],["pages",R[4741]]],[R[4741]],["pages"]]]],[11,"size",E,E,47,[[["self"]],["pages"]]],[0,"module",R[4715],E,N,N],[3,"ModuleInfo",R[4785],E,N,N],[12,"memories",E,E,48,N],[12,"globals",E,E,48,N],[12,"tables",E,E,48,N],[12,"imported_functions",E,E,48,N],[12,"imported_memories",E,E,48,N],[12,"imported_tables",E,E,48,N],[12,"imported_globals",E,E,48,N],[12,"exports",E,E,48,N],[12,"data_initializers",E,E,48,N],[12,"elem_initializers",E,E,48,N],[12,"start_func",E,E,48,N],[12,"func_assoc",E,E,48,N],[12,"signatures",E,E,48,N],[12,"backend",E,E,48,N],[12,"namespace_table",E,E,48,N],[12,"name_table",E,E,48,N],[12,"em_symbol_map",E,"Symbol information from emscripten",48,N],[12,"custom_sections",E,E,48,N],[3,"Module",E,R[4746],N,N],[3,R[4857],E,"A data initializer for linear memory.",N,N],[12,R[4917],E,"The index of the memory to initialize.",49,N],[12,"base",E,R[4747],49,N],[12,"data",E,"The initialization data.",49,N],[3,R[4858],E,"A WebAssembly table initializer.",N,N],[12,R[202],E,"The index of a table to initialize.",50,N],[12,"base",E,R[4747],50,N],[12,"elements",E,"The values to write into the table elements.",50,N],[3,R[4860],E,E,N,N],[3,R[4861],E,E,N,N],[3,R[4913],E,E,N,N],[3,"NameIndex",E,E,N,N],[4,R[4859],E,E,N,N],[13,"Func",E,E,51,N],[13,"Memory",E,E,51,N],[13,"Global",E,E,51,N],[13,"Table",E,E,51,N],[11,"import_custom_sections",E,E,48,[[["self"]],["parseresult"]]],[11,R[5931],E,R[6015],52,[[["self"],[R[4783]]],[[R[3],[R[143]]],[R[143]]]]],[11,"cache",E,E,52,[[["self"]],[[R[6016]],[R[3],[R[6016],R[4718]]],[R[4718]]]]],[11,"info",E,E,52,[[["self"]],[R[4717]]]],[11,"new",E,E,53,[[],["self"]]],[11,R[4249],E,E,53,[[["self"],["s"]],["k"]]],[11,"finish",E,E,53,[[],[R[4815]]]],[11,"new",E,E,54,[[],["self"]]],[11,"get",E,E,54,[[["self"],["k"]],["str"]]],[0,"parse",R[4715],E,N,N],[4,R[6057],R[4799],E,N,N],[13,"Parse",E,E,55,N],[13,"Codegen",E,E,55,N],[5,"read_module",E,E,N,[[[R[4748]],["mcg"],["backend"],[R[4716]]],[["arc",["rwlock"]],[R[4837]],[R[3],["arc",R[4837]]]]]],[5,"wp_type_to_type",E,E,N,[[["wptype"]],[[R[3],["type",R[4749]]],["type"],[R[4749]]]]],[5,"type_to_wp_type",E,E,N,[[["type"]],["wptype"]]],[0,"structures",R[4715],E,N,N],[3,"BoxedMap",R[4800],E,N,N],[3,"Iter",E,E,N,N],[3,R[631],E,E,N,N],[3,"Map",E,"Dense item map",N,N],[3,"SliceMap",E,"This is a dynamically-sized slice that can only be indexed…",N,N],[11,"new",E,E,56,[[],["self"]]],[11,R[115],E,E,56,[[["usize"]],["self"]]],[11,"len",E,E,56,[[["self"]],["usize"]]],[11,"push",E,E,56,[[["self"],["v"]],["k"]]],[11,"next_index",E,E,56,[[["self"]],["k"]]],[11,R[118],E,E,56,[[["self"],["usize"]]]],[11,"into_boxed_map",E,E,56,[[],["boxedmap"]]],[11,"into_vec",E,E,56,[[],["vec"]]],[11,"resize",E,E,56,[[["self"],["usize"],["v"]]]],[11,"get",E,E,57,[[["self"],["k"]],[[R[23]],["v"]]]],[11,R[39],E,E,57,[[["self"],["k"]],[[R[23]],["v"]]]],[11,"len",E,E,57,[[["self"]],["usize"]]],[11,"iter",E,E,57,[[["self"]],["iter"]]],[11,R[31],E,E,57,[[["self"]],[R[24]]]],[11,"as_ptr",E,E,57,[[["self"]]]],[11,R[2930],E,E,57,[[["self"]]]],[8,"TypedIndex",E,E,N,N],[0,"table",R[4715],E,N,N],[3,"Anyfunc",R[4801],E,N,N],[3,"Table",E,E,N,N],[4,"Element",E,E,N,N],[13,"Anyfunc",E,E,58,N],[4,R[4862],E,E,N,N],[13,"Anyfunc",E,"This is intended to be a caller-checked Anyfunc.",59,N],[11,"new",E,E,60,[[["sig"]],["self"]]],[11,"new",E,R[6017],61,[[[R[4751]]],[[R[4744]],[R[3],[R[4744]]]]]],[11,R[4750],E,R[6018],61,[[["self"]],[R[4751]]]],[11,"set",E,R[6019],61,[[["self"],["u32"],["element"]],[R[3]]]],[11,"size",E,R[6020],61,[[["self"]],["u32"]]],[11,"grow",E,R[6021],61,[[["self"],["u32"]],[[R[4741]],[R[3],["u32",R[4741]]],["u32"]]]],[11,R[6022],E,E,61,[[["self"]]]],[0,"trampoline_x64",R[4715],"Trampoline generator for carrying context with function…",N,N],[3,R[4863],R[4802],"Trampoline Buffer Builder.",N,N],[3,R[4864],E,"Trampoline Buffer.",N,N],[4,"CallTarget",E,"An opaque type for pointers to a callable memory location.",N,N],[4,R[4914],E,"An opaque type for context pointers.",N,N],[4,R[4915],E,"An opaque type for generated trampolines' call entries.",N,N],[5,R[4752],E,"Calls `GET_CONTEXT` and returns the current context.",N,[[]]],[11,"new",E,E,62,[[],["trampolinebufferbuilder"]]],[11,"add_context_trampoline",E,"Adds a context trampoline.",62,[[["self"]],["usize"]]],[11,"add_context_rsp_state_preserving_trampoline",E,E,62,[[["self"]],["usize"]]],[11,"add_callinfo_trampoline",E,"Adds a callinfo trampoline.",62,[[["self"],["u32"]],["usize"]]],[11,"build",E,"Consumes the builder and builds the trampoline buffer.",62,[[],["trampolinebuffer"]]],[11,"get_trampoline",E,"Returns the trampoline pointer at index `idx`.",63,[[["self"],["usize"]]]],[0,"typed_func",R[4715],E,N,N],[3,"Wasm",R[4786],"TODO(lachlan): Naming TBD. This contains the trampoline…",N,N],[3,"Host",E,"This type, as part of the `Func` type signature,…",N,N],[3,"Func",E,E,N,N],[3,"S0",E,E,N,N],[3,"S1",E,E,N,N],[3,"S2",E,E,N,N],[3,"S3",E,E,N,N],[3,"S4",E,E,N,N],[3,"S5",E,E,N,N],[3,"S6",E,E,N,N],[3,"S7",E,E,N,N],[3,"S8",E,E,N,N],[3,"S9",E,E,N,N],[3,"S10",E,E,N,N],[3,"S11",E,E,N,N],[3,"S12",E,E,N,N],[4,R[4865],E,E,N,N],[13,R[4916],E,E,64,N],[13,"IncorrectCallIndirectSignature",E,E,64,N],[13,"MemoryOutOfBounds",E,E,64,N],[13,"CallIndirectOOB",E,E,64,N],[13,"IllegalArithmetic",E,E,64,N],[13,"MisalignedAtomicAccess",E,E,64,N],[13,"Unknown",E,E,64,N],[6,R[4915],E,E,N,N],[6,"Invoke",E,E,N,N],[8,"Kind",E,"This is just an empty trait to constrict that types that…",N,N],[8,R[4866],E,E,N,N],[16,"CStruct",E,E,65,N],[16,"RetArray",E,E,65,N],[10,R[4795],E,E,65,[[],["self"]]],[10,R[4796],E,E,65,[[]]],[10,R[4797],E,E,65,[[],["self"]]],[10,R[4798],E,E,65,[[]]],[10,"types",E,E,65,[[]]],[10,"call",E,E,65,[[["nonnull",["func"]],["func"],["wasm"]],[[R[3],[R[4753]]],[R[4753]]]]],[8,R[4867],E,E,N,N],[10,"to_raw",E,E,66,[[["self"]],[["nonnull",["func"]],["func"]]]],[8,"TrapEarly",E,E,N,N],[16,"Error",E,E,67,N],[10,"report",E,E,67,[[],[R[3]]]],[11,R[3918],E,E,68,[[["nonnull",["c_void"]],[R[23],["nonnull"]],["invoke"],["trampoline"]],["self"]]],[11,R[6023],E,E,69,[[["self"]],[["nonnull",["func"]],["func"]]]],[11,"new",E,E,69,[[["f"]],[["func",["host"]],["host"]]]],[11,"params",E,E,69,[[["self"]]]],[11,"returns",E,E,69,[[["self"]]]],[11,"call",E,E,69,[[["self"],["a"]],[[R[3],[R[4753]]],[R[4753]]]]],[11,"call",E,E,69,[[["self"]],[[R[3],[R[4753]]],[R[4753]]]]],[11,"call",E,E,69,[[["self"],["a"]],[[R[3],[R[4753]]],[R[4753]]]]],[11,"call",E,E,69,[[["self"],["a"],["b"]],[[R[3],[R[4753]]],[R[4753]]]]],[11,"call",E,E,69,[[["self"],["a"],["c"],["b"]],[[R[3],[R[4753]]],[R[4753]]]]],[11,"call",E,E,69,[[["self"],["a"],["c"],["d"],["b"]],[[R[3],[R[4753]]],[R[4753]]]]],[11,"call",E,E,69,[[["self"],["a"],["e"],["c"],["d"],["b"]],[[R[3],[R[4753]]],[R[4753]]]]],[11,"call",E,E,69,[[["self"],["a"],["e"],["c"],["d"],["b"],["f"]],[[R[3],[R[4753]]],[R[4753]]]]],[11,"call",E,E,69,[[["self"],["f"],["a"],["e"],["c"],["d"],["b"],["g"]],[[R[3],[R[4753]]],[R[4753]]]]],[11,"call",E,E,69,[[["self"],["h"],["f"],["a"],["e"],["c"],["d"],["b"],["g"]],[[R[3],[R[4753]]],[R[4753]]]]],[11,"call",E,E,69,[[["self"],["h"],["i"],["f"],["a"],["e"],["c"],["d"],["b"],["g"]],[[R[3],[R[4753]]],[R[4753]]]]],[11,"call",E,E,69,[[["self"],["h"],["i"],["f"],["a"],["j"],["e"],["c"],["d"],["b"],["g"]],[[R[3],[R[4753]]],[R[4753]]]]],[11,"call",E,E,69,[[["self"],["h"],["i"],["f"],["k"],["a"],["j"],["e"],["c"],["d"],["b"],["g"]],[[R[3],[R[4753]]],[R[4753]]]]],[11,"call",E,E,69,[[["self"],["h"],["i"],["f"],["k"],["a"],["j"],["l"],["e"],["c"],["d"],["b"],["g"]],[[R[3],[R[4753]]],[R[4753]]]]],[0,"types",R[4715],E,N,N],[3,R[4868],R[4803],E,N,N],[12,"element",E,R[6024],70,N],[12,"minimum",E,R[6025],70,N],[12,"maximum",E,R[6026],70,N],[3,R[4869],E,R[6027],N,N],[12,"mutable",E,E,71,N],[12,"ty",E,E,71,N],[3,R[5911],E,"A wasm global.",N,N],[12,"desc",E,E,72,N],[12,"init",E,E,72,N],[3,R[4870],E,R[6028],N,N],[12,"minimum",E,R[6029],73,N],[12,"maximum",E,R[6030],73,N],[12,"shared",E,R[6031],73,N],[3,"FuncSig",E,R[6032],N,N],[3,R[5913],E,E,N,N],[3,R[4877],E,E,N,N],[3,R[4878],E,E,N,N],[3,R[4879],E,E,N,N],[3,R[4880],E,E,N,N],[3,R[4881],E,E,N,N],[3,R[5912],E,E,N,N],[3,R[4882],E,E,N,N],[3,R[4883],E,E,N,N],[3,R[4884],E,E,N,N],[3,R[4885],E,E,N,N],[3,R[4886],E,E,N,N],[3,"SigIndex",E,E,N,N],[4,"Type",E,R[6033],N,N],[13,"I32",E,R[4754],74,N],[13,"I64",E,R[4755],74,N],[13,"F32",E,R[4756],74,N],[13,"F64",E,R[4757],74,N],[13,"V128",E,R[4758],74,N],[4,"Value",E,R[5917],N,N],[13,"I32",E,R[4754],75,N],[13,"I64",E,R[4755],75,N],[13,"F32",E,R[4756],75,N],[13,"F64",E,R[4757],75,N],[13,"V128",E,R[4758],75,N],[4,R[4871],E,E,N,N],[13,"Anyfunc",E,"Any wasm function.",76,N],[4,R[4872],E,"A const value initializer. Over time, this will be able to…",N,N],[13,"Const",E,"Corresponds to a `const.*` instruction.",77,N],[13,"GetGlobal",E,"Corresponds to a `get_global` instruction.",77,N],[4,R[4873],E,E,N,N],[13,"Local",E,E,78,N],[13,"Import",E,E,78,N],[8,R[4874],E,E,N,N],[18,"TYPE",E,E,79,N],[10,"from_binary",E,E,79,[[["u64"]],["self"]]],[10,"to_binary",E,E,79,[[],["u64"]]],[8,R[4875],E,E,N,N],[16,"Native",E,E,80,N],[10,R[4813],E,E,80,[[],["self"]]],[10,"to_native",E,E,80,[[]]],[8,R[5832],E,E,N,N],[8,R[4876],E,E,N,N],[16,"Local",E,E,81,N],[16,"Import",E,E,81,N],[11,"ty",E,E,75,[[["self"]],["type"]]],[11,"to_u128",E,E,75,[[["self"]],["u128"]]],[11,R[6034],E,E,73,[[],[R[226]]]],[11,"new",E,E,82,[[["params"],["returns"]],["self"]]],[11,"params",E,E,82,[[["self"]]]],[11,"returns",E,E,82,[[["self"]]]],[11,R[6035],E,E,82,[[["self"]],["bool"]]],[11,R[4760],E,E,83,[[[R[4717]]],[[R[4759]],[R[4761],[R[4759]]]]]],[11,R[4763],E,E,84,[[[R[4717]]],[R[4759]]]],[11,R[4763],E,E,85,[[[R[4717]]],[R[4759]]]],[11,R[4760],E,E,86,[[[R[4717]]],[[R[4762]],[R[4761],[R[4762]]]]]],[11,R[4763],E,E,87,[[[R[4717]]],[R[4762]]]],[11,R[4763],E,E,88,[[[R[4717]]],[R[4762]]]],[11,R[4760],E,E,89,[[[R[4717]]],[[R[4761],[R[4764]]],[R[4764]]]]],[11,R[4763],E,E,90,[[[R[4717]]],[R[4764]]]],[11,R[4763],E,E,91,[[[R[4717]]],[R[4764]]]],[11,R[4760],E,E,92,[[[R[4717]]],[[R[4761],[R[4765]]],[R[4765]]]]],[11,R[4763],E,E,93,[[[R[4717]]],[R[4765]]]],[11,R[4763],E,E,94,[[[R[4717]]],[R[4765]]]],[11,"local",E,E,78,[[],[R[23]]]],[11,"import",E,E,78,[[],[R[23]]]],[0,"units",R[4715],E,N,N],[3,"Pages",R[4804],R[6036],N,N],[12,"0",E,E,95,N],[3,"Bytes",E,R[6037],N,N],[12,"0",E,E,96,N],[17,"WASM_PAGE_SIZE",E,E,N,N],[17,"WASM_MAX_PAGES",E,E,N,N],[17,"WASM_MIN_PAGES",E,E,N,N],[11,R[1206],E,E,95,[[["pages"]],[[R[3],["pages",R[6038]]],["pages"],[R[6038]]]]],[11,"bytes",E,E,95,[[],["bytes"]]],[0,"vm",R[4715],E,N,N],[3,R[4908],R[4787],E,N,N],[3,R[4907],E,"The `LocalBacking` \"owns\" the memory used by all the local…",N,N],[3,"Ctx",E,R[6039],N,N],[12,"internal",E,E,97,N],[12,R[6040],E,R[6041],97,N],[12,R[6042],E,E,97,N],[12,"module",E,E,97,N],[12,"data",E,R[6043],97,N],[12,R[6044],E,R[6045],97,N],[3,R[4890],E,E,N,N],[3,"Intrinsics",E,E,N,N],[12,"memory_grow",E,E,98,N],[12,"memory_size",E,E,98,N],[3,"Func",E,"Used to provide type safety (ish) for passing around…",N,N],[3,R[4887],E,"An imported function, which contains the vmctx that owns…",N,N],[12,"func",E,E,99,N],[12,"vmctx",E,E,99,N],[3,"LocalTable",E,"Definition of a table used by the VM. (obviously)",N,N],[12,"base",E,"pointer to the elements in the table.",100,N],[12,"count",E,"Number of elements in the table (NOT necessarily the size…",100,N],[12,"table",E,"The table that this represents. At the moment, this can…",100,N],[3,R[4888],E,"Definition of a memory used by the VM.",N,N],[12,"base",E,"Pointer to the bottom of this linear memory.",101,N],[12,"bound",E,"Current size of this linear memory in bytes.",101,N],[12,"memory",E,"The actual memory that this represents. This is either…",101,N],[3,R[4889],E,"Definition of a global used by the VM.",N,N],[12,"data",E,E,102,N],[3,"SigId",E,E,N,N],[12,"0",E,E,103,N],[3,"Anyfunc",E,"Caller-checked anyfunc",N,N],[12,"func",E,E,104,N],[12,"ctx",E,E,104,N],[12,"sig_id",E,E,104,N],[7,"INTRINSICS_LOCAL_STATIC_MEMORY",E,E,N,N],[7,"INTRINSICS_LOCAL_DYNAMIC_MEMORY",E,E,N,N],[7,"INTRINSICS_IMPORTED_STATIC_MEMORY",E,E,N,N],[7,"INTRINSICS_IMPORTED_DYNAMIC_MEMORY",E,E,N,N],[17,"INTERNALS_SIZE",E,E,N,N],[11,"allocate",E,E,105,[[],[R[4737]]]],[11,"index",E,E,105,[[["self"]],["usize"]]],[11,"offset_memory_grow",E,E,98,[[],["u8"]]],[11,"offset_memory_size",E,E,98,[[],["u8"]]],[11,"memory",E,R[6046],97,[[["self"],["u32"]],["memory"]]],[11,R[6047],E,R[6048],97,[[["self"]],[R[23]]]],[11,R[6049],E,R[6050],97,[[["self"]],["usize"]]],[11,R[4766],E,R[6051],97,[[["self"],[R[4737]]],["u64"]]],[11,R[4767],E,R[6052],97,[[["self"],[R[4737]],["u64"]]]],[11,R[4769],E,E,99,[[],["u8"]]],[11,R[4770],E,E,99,[[],["u8"]]],[11,"size",E,E,99,[[],["u8"]]],[11,R[4768],E,E,100,[[],["u8"]]],[11,"offset_count",E,E,100,[[],["u8"]]],[11,"size",E,E,100,[[],["u8"]]],[11,R[4768],E,E,101,[[],["u8"]]],[11,"offset_bound",E,E,101,[[],["u8"]]],[11,"size",E,E,101,[[],["u8"]]],[11,"offset_data",E,E,102,[[],["u8"]]],[11,"null",E,E,102,[[],["self"]]],[11,"size",E,E,102,[[],["u8"]]],[11,"null",E,E,104,[[],["self"]]],[11,R[4769],E,E,104,[[],["u8"]]],[11,R[4770],E,E,104,[[],["u8"]]],[11,"offset_sig_id",E,E,104,[[],["u8"]]],[11,"size",E,E,104,[[],["u8"]]],[0,"fault",R[4715],E,N,N],[3,R[4891],R[4805],E,N,N],[12,"r15",E,E,106,N],[12,"r14",E,E,106,N],[12,"r13",E,E,106,N],[12,"r12",E,E,106,N],[12,"rbx",E,E,106,N],[3,"FaultInfo",E,E,N,N],[12,"faulting_addr",E,E,107,N],[12,"ip",E,E,107,N],[12,"known_registers",E,E,107,N],[5,"get_boundary_register_preservation",E,E,N,[[]]],[5,"was_sigint_triggered_fault",E,E,N,[[],["bool"]]],[5,"with_ctx",E,E,N,[[["fnonce"]],["r"]]],[5,"push_code_version",E,E,N,[[[R[4771]]]]],[5,"pop_code_version",E,E,N,[[],[[R[4771]],[R[23],[R[4771]]]]]],[5,"get_wasm_interrupt_signal_mem",E,E,N,[[]]],[5,"set_wasm_interrupt_on_ctx",E,E,N,[[]]],[5,"set_wasm_interrupt",E,E,N,[[]]],[5,"clear_wasm_interrupt",E,E,N,[[]]],[5,"catch_unsafe_unwind",E,E,N,[[[R[23],[R[4772]]],["fnonce"],[R[4772]]],[[R[3],["box"]],["box",["any"]]]]],[5,"begin_unsafe_unwind",E,E,N,[[["any"],["box",["any"]]]]],[5,"allocate_and_run",E,E,N,[[["usize"],["fnonce"]],["r"]]],[5,"ensure_sighandler",E,E,N,[[]]],[5,"get_fault_info",E,E,N,[[],["faultinfo"]]],[0,"raw",E,E,N,N],[5,"run_on_alternative_stack","wasmer_runtime_core::fault::raw",E,N,N],[5,"register_preservation_trampoline",E,E,N,N],[5,"setjmp",E,E,N,N],[5,"longjmp",E,E,N,N],[0,"state",R[4715],E,N,N],[3,R[4892],R[4779],E,N,N],[12,"0",E,E,108,N],[3,R[4893],E,E,N,N],[12,"stack_values",E,E,109,N],[12,"register_values",E,E,109,N],[12,"prev_frame",E,E,109,N],[12,"wasm_stack",E,E,109,N],[12,R[4773],E,E,109,N],[12,R[4774],E,E,109,N],[3,R[4894],E,E,N,N],[12,"last",E,E,110,N],[12,"stack_push",E,E,110,N],[12,"stack_pop",E,E,110,N],[12,"reg_diff",E,E,110,N],[12,"prev_frame_diff",E,E,110,N],[12,"wasm_stack_push",E,E,110,N],[12,"wasm_stack_pop",E,E,110,N],[12,R[4773],E,E,110,N],[12,R[4774],E,E,110,N],[3,R[4895],E,E,N,N],[12,"initial",E,E,111,N],[12,R[4775],E,E,111,N],[12,"locals",E,E,111,N],[12,"shadow_size",E,E,111,N],[12,"diffs",E,E,111,N],[12,"wasm_function_header_target_offset",E,E,111,N],[12,"wasm_offset_to_target_offset",E,E,111,N],[12,"loop_offsets",E,E,111,N],[12,"call_offsets",E,E,111,N],[12,"trappable_offsets",E,E,111,N],[3,"OffsetInfo",E,E,N,N],[12,"end_offset",E,E,112,N],[12,"diff_id",E,E,112,N],[12,"activate_offset",E,E,112,N],[3,R[4896],E,E,N,N],[12,"local_functions",E,E,113,N],[12,R[5437],E,E,113,N],[3,R[4897],E,E,N,N],[12,R[4775],E,E,114,N],[12,R[4774],E,E,114,N],[12,"stack",E,E,114,N],[12,"locals",E,E,114,N],[3,R[4898],E,E,N,N],[12,"frames",E,E,115,N],[3,R[4899],E,E,N,N],[12,"memory",E,E,116,N],[12,"globals",E,E,116,N],[12,"execution_state",E,E,116,N],[3,R[4900],E,E,N,N],[12,"baseline",E,E,117,N],[12,"msm",E,E,117,N],[12,"base",E,E,117,N],[4,R[4901],E,E,N,N],[13,"Runtime",E,E,118,N],[13,"Const",E,E,118,N],[4,R[4902],E,E,N,N],[13,"Undefined",E,E,119,N],[13,"Vmctx",E,E,119,N],[13,"VmctxDeref",E,E,119,N],[13,"PreserveRegister",E,E,119,N],[13,"CopyStackBPRelative",E,E,119,N],[13,"ExplicitShadow",E,E,119,N],[13,"WasmStack",E,E,119,N],[13,"WasmLocal",E,E,119,N],[13,"TwoHalves",E,E,119,N],[4,R[4903],E,E,N,N],[13,"Loop",E,E,120,N],[13,"Call",E,E,120,N],[13,"Trappable",E,E,120,N],[0,"x64",E,E,N,N],[4,"GPR",R[4806],E,N,N],[13,"RAX",E,E,121,N],[13,"RCX",E,E,121,N],[13,"RDX",E,E,121,N],[13,"RBX",E,E,121,N],[13,"RSP",E,E,121,N],[13,"RBP",E,E,121,N],[13,"RSI",E,E,121,N],[13,"RDI",E,E,121,N],[13,"R8",E,E,121,N],[13,"R9",E,E,121,N],[13,"R10",E,E,121,N],[13,"R11",E,E,121,N],[13,"R12",E,E,121,N],[13,"R13",E,E,121,N],[13,"R14",E,E,121,N],[13,"R15",E,E,121,N],[4,"XMM",E,E,N,N],[13,"XMM0",E,E,122,N],[13,"XMM1",E,E,122,N],[13,"XMM2",E,E,122,N],[13,"XMM3",E,E,122,N],[13,"XMM4",E,E,122,N],[13,"XMM5",E,E,122,N],[13,"XMM6",E,E,122,N],[13,"XMM7",E,E,122,N],[4,R[4904],E,E,N,N],[13,"GPR",E,E,123,N],[13,"XMM",E,E,123,N],[5,"new_machine_state",E,E,N,[[],[R[4780]]]],[5,"invoke_call_return_on_stack",E,E,N,[[[R[4819]],["usize"],[R[4776]],[R[4772]],["ctx"],[R[23],[R[4772]]]],[["box",["any"]],[R[3],["u64","box"]],["u64"]]]],[5,"build_instance_image",E,E,N,[[["ctx"],[R[4777]]],[R[4776]]]],[5,"read_stack",E,E,N,[[["fn"],[R[23],["u64"]],["u64"]],[R[4777]]]],[11,"to_index",E,E,123,[[["self"]],[R[4818]]]],[11,"from_dwarf_regnum",E,E,123,[[["u16"]],[[R[4778]],[R[23],[R[4778]]]]]],[11,"lookup_ip",R[4779],E,113,[[["self"],["usize"],["fnonce"]],[R[23]]]],[11,"lookup_call_ip",E,E,113,[[["self"],["usize"]],[R[23]]]],[11,"lookup_trappable_ip",E,E,113,[[["self"],["usize"]],[R[23]]]],[11,"lookup_loop_ip",E,E,113,[[["self"],["usize"]],[R[23]]]],[11,"new",E,E,111,[[[R[4780]],["usize"],[R[4781]],["vec",[R[4781]]]],[R[4782]]]],[11,"diff",E,E,109,[[["self"],[R[4780]]],[R[4814]]]],[11,"build_state",E,E,110,[[["self"],[R[4782]]],[R[4780]]]],[11,"print_backtrace_if_needed",E,E,115,[[["self"]]]],[11,"colored_output",E,E,115,[[["self"]],["string"]]],[11,R[130],E,E,116,[[],[[R[4776]],[R[23],[R[4776]]]]]],[11,"to_bytes",E,E,116,[[["self"]],[["u8"],["vec",["u8"]]]]],[0,"prelude",R[4715],E,N,N],[6,"Result",E,E,N,N],[17,"VERSION",E,R[5446],N,N],[8,"IsExport",E,E,N,N],[10,R[4811],E,E,34,[[["self"]],["export"]]],[14,"debug",E,E,N,N],[14,"trace",E,E,N,N],[14,"func",E,E,N,N],[14,"imports",E,R[6053],N,N],[11,"into",R[4784],E,36,[[],[U]]],[11,"from",E,E,36,[[[T]],[T]]],[11,R[4],E,E,36,[[[U]],[R[3]]]],[11,R[5],E,E,36,[[],[R[3]]]],[11,R[7],E,E,36,[[["self"]],[T]]],[11,R[6],E,E,36,[[["self"]],[T]]],[11,R[8],E,E,36,[[["self"]],[R[9]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[4],E,E,0,[[[U]],[R[3]]]],[11,R[5],E,E,0,[[],[R[3]]]],[11,R[7],E,E,0,[[["self"]],[T]]],[11,R[6],E,E,0,[[["self"]],[T]]],[11,R[8],E,E,0,[[["self"]],[R[9]]]],[11,"into",R[4785],E,52,[[],[U]]],[11,"from",E,E,52,[[[T]],[T]]],[11,R[46],E,E,52,[[["self"]],[T]]],[11,R[47],E,E,52,[[["self"],[T]]]],[11,R[4],E,E,52,[[[U]],[R[3]]]],[11,R[5],E,E,52,[[],[R[3]]]],[11,R[7],E,E,52,[[["self"]],[T]]],[11,R[6],E,E,52,[[["self"]],[T]]],[11,R[8],E,E,52,[[["self"]],[R[9]]]],[11,"into",R[4786],E,69,[[],[U]]],[11,"from",E,E,69,[[[T]],[T]]],[11,R[4],E,E,69,[[[U]],[R[3]]]],[11,R[5],E,E,69,[[],[R[3]]]],[11,R[7],E,E,69,[[["self"]],[T]]],[11,R[6],E,E,69,[[["self"]],[T]]],[11,R[8],E,E,69,[[["self"]],[R[9]]]],[11,"into",R[4787],E,124,[[],[U]]],[11,"from",E,E,124,[[[T]],[T]]],[11,R[4],E,E,124,[[[U]],[R[3]]]],[11,R[5],E,E,124,[[],[R[3]]]],[11,R[7],E,E,124,[[["self"]],[T]]],[11,R[6],E,E,124,[[["self"]],[T]]],[11,R[8],E,E,124,[[["self"]],[R[9]]]],[11,"into",E,E,125,[[],[U]]],[11,"from",E,E,125,[[[T]],[T]]],[11,R[4],E,E,125,[[[U]],[R[3]]]],[11,R[5],E,E,125,[[],[R[3]]]],[11,R[7],E,E,125,[[["self"]],[T]]],[11,R[6],E,E,125,[[["self"]],[T]]],[11,R[8],E,E,125,[[["self"]],[R[9]]]],[11,"into",R[4788],E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[46],E,E,4,[[["self"]],[T]]],[11,R[47],E,E,4,[[["self"],[T]]]],[11,R[4],E,E,4,[[[U]],[R[3]]]],[11,R[5],E,E,4,[[],[R[3]]]],[11,R[7],E,E,4,[[["self"]],[T]]],[11,R[6],E,E,4,[[["self"]],[T]]],[11,R[8],E,E,4,[[["self"]],[R[9]]]],[11,R[4793],E,E,4,[[["self"],["k"]],["bool"]]],[11,"into",E,E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[4],E,E,5,[[[U]],[R[3]]]],[11,R[5],E,E,5,[[],[R[3]]]],[11,R[7],E,E,5,[[["self"]],[T]]],[11,R[6],E,E,5,[[["self"]],[T]]],[11,R[8],E,E,5,[[["self"]],[R[9]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[4],E,E,1,[[[U]],[R[3]]]],[11,R[5],E,E,1,[[],[R[3]]]],[11,R[7],E,E,1,[[["self"]],[T]]],[11,R[6],E,E,1,[[["self"]],[T]]],[11,R[8],E,E,1,[[["self"]],[R[9]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[4],E,E,2,[[[U]],[R[3]]]],[11,R[5],E,E,2,[[],[R[3]]]],[11,R[7],E,E,2,[[["self"]],[T]]],[11,R[6],E,E,2,[[["self"]],[T]]],[11,R[8],E,E,2,[[["self"]],[R[9]]]],[11,"into",R[4789],E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[4],E,E,6,[[[U]],[R[3]]]],[11,R[5],E,E,6,[[],[R[3]]]],[11,R[7],E,E,6,[[["self"]],[T]]],[11,R[6],E,E,6,[[["self"]],[T]]],[11,R[8],E,E,6,[[["self"]],[R[9]]]],[11,"into",E,E,13,[[],[U]]],[11,"from",E,E,13,[[[T]],[T]]],[11,R[4],E,E,13,[[[U]],[R[3]]]],[11,R[5],E,E,13,[[],[R[3]]]],[11,R[7],E,E,13,[[["self"]],[T]]],[11,R[6],E,E,13,[[["self"]],[T]]],[11,R[8],E,E,13,[[["self"]],[R[9]]]],[11,"into",E,E,12,[[],[U]]],[11,"from",E,E,12,[[[T]],[T]]],[11,R[4],E,E,12,[[[U]],[R[3]]]],[11,R[5],E,E,12,[[],[R[3]]]],[11,R[7],E,E,12,[[["self"]],[T]]],[11,R[6],E,E,12,[[["self"]],[T]]],[11,R[8],E,E,12,[[["self"]],[R[9]]]],[11,"into",E,E,14,[[],[U]]],[11,"from",E,E,14,[[[T]],[T]]],[11,R[4],E,E,14,[[[U]],[R[3]]]],[11,R[5],E,E,14,[[],[R[3]]]],[11,R[7],E,E,14,[[["self"]],[T]]],[11,R[6],E,E,14,[[["self"]],[T]]],[11,R[8],E,E,14,[[["self"]],[R[9]]]],[11,"into",E,E,15,[[],[U]]],[11,"from",E,E,15,[[[T]],[T]]],[11,R[4],E,E,15,[[[U]],[R[3]]]],[11,R[5],E,E,15,[[],[R[3]]]],[11,R[7],E,E,15,[[["self"]],[T]]],[11,R[6],E,E,15,[[["self"]],[T]]],[11,R[8],E,E,15,[[["self"]],[R[9]]]],[11,"into",E,E,7,[[],[U]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[4],E,E,7,[[[U]],[R[3]]]],[11,R[5],E,E,7,[[],[R[3]]]],[11,R[7],E,E,7,[[["self"]],[T]]],[11,R[6],E,E,7,[[["self"]],[T]]],[11,R[8],E,E,7,[[["self"]],[R[9]]]],[11,"into",E,E,8,[[],[U]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[4],E,E,8,[[[U]],[R[3]]]],[11,R[5],E,E,8,[[],[R[3]]]],[11,R[7],E,E,8,[[["self"]],[T]]],[11,R[6],E,E,8,[[["self"]],[T]]],[11,R[8],E,E,8,[[["self"]],[R[9]]]],[11,"into",R[4720],E,16,[[],[U]]],[11,R[113],E,E,16,[[["self"]],["string"]]],[11,"from",E,E,16,[[[T]],[T]]],[11,R[46],E,E,16,[[["self"]],[T]]],[11,R[47],E,E,16,[[["self"],[T]]]],[11,R[4],E,E,16,[[[U]],[R[3]]]],[11,R[5],E,E,16,[[],[R[3]]]],[11,R[7],E,E,16,[[["self"]],[T]]],[11,R[6],E,E,16,[[["self"]],[T]]],[11,R[8],E,E,16,[[["self"]],[R[9]]]],[11,"into",E,E,17,[[],[U]]],[11,R[113],E,E,17,[[["self"]],["string"]]],[11,"from",E,E,17,[[[T]],[T]]],[11,R[46],E,E,17,[[["self"]],[T]]],[11,R[47],E,E,17,[[["self"],[T]]]],[11,R[4],E,E,17,[[[U]],[R[3]]]],[11,R[5],E,E,17,[[],[R[3]]]],[11,R[7],E,E,17,[[["self"]],[T]]],[11,R[6],E,E,17,[[["self"]],[T]]],[11,R[8],E,E,17,[[["self"]],[R[9]]]],[11,"into",E,E,18,[[],[U]]],[11,R[113],E,E,18,[[["self"]],["string"]]],[11,"from",E,E,18,[[[T]],[T]]],[11,R[4],E,E,18,[[[U]],[R[3]]]],[11,R[5],E,E,18,[[],[R[3]]]],[11,R[7],E,E,18,[[["self"]],[T]]],[11,R[6],E,E,18,[[["self"]],[T]]],[11,R[8],E,E,18,[[["self"]],[R[9]]]],[11,"into",E,E,19,[[],[U]]],[11,R[113],E,E,19,[[["self"]],["string"]]],[11,"from",E,E,19,[[[T]],[T]]],[11,R[46],E,E,19,[[["self"]],[T]]],[11,R[47],E,E,19,[[["self"],[T]]]],[11,R[4],E,E,19,[[[U]],[R[3]]]],[11,R[5],E,E,19,[[],[R[3]]]],[11,R[7],E,E,19,[[["self"]],[T]]],[11,R[6],E,E,19,[[["self"]],[T]]],[11,R[8],E,E,19,[[["self"]],[R[9]]]],[11,"into",E,E,20,[[],[U]]],[11,R[113],E,E,20,[[["self"]],["string"]]],[11,"from",E,E,20,[[[T]],[T]]],[11,R[4],E,E,20,[[[U]],[R[3]]]],[11,R[5],E,E,20,[[],[R[3]]]],[11,R[7],E,E,20,[[["self"]],[T]]],[11,R[6],E,E,20,[[["self"]],[T]]],[11,R[8],E,E,20,[[["self"]],[R[9]]]],[11,"into",E,E,21,[[],[U]]],[11,R[113],E,E,21,[[["self"]],["string"]]],[11,"from",E,E,21,[[[T]],[T]]],[11,R[46],E,E,21,[[["self"]],[T]]],[11,R[47],E,E,21,[[["self"],[T]]]],[11,R[4],E,E,21,[[[U]],[R[3]]]],[11,R[5],E,E,21,[[],[R[3]]]],[11,R[7],E,E,21,[[["self"]],[T]]],[11,R[6],E,E,21,[[["self"]],[T]]],[11,R[8],E,E,21,[[["self"]],[R[9]]]],[11,"into",E,E,22,[[],[U]]],[11,R[113],E,E,22,[[["self"]],["string"]]],[11,"from",E,E,22,[[[T]],[T]]],[11,R[4],E,E,22,[[[U]],[R[3]]]],[11,R[5],E,E,22,[[],[R[3]]]],[11,R[7],E,E,22,[[["self"]],[T]]],[11,R[6],E,E,22,[[["self"]],[T]]],[11,R[8],E,E,22,[[["self"]],[R[9]]]],[11,"into",E,E,23,[[],[U]]],[11,R[113],E,E,23,[[["self"]],["string"]]],[11,"from",E,E,23,[[[T]],[T]]],[11,R[4],E,E,23,[[[U]],[R[3]]]],[11,R[5],E,E,23,[[],[R[3]]]],[11,R[7],E,E,23,[[["self"]],[T]]],[11,R[6],E,E,23,[[["self"]],[T]]],[11,R[8],E,E,23,[[["self"]],[R[9]]]],[11,"into",E,E,24,[[],[U]]],[11,R[113],E,E,24,[[["self"]],["string"]]],[11,"from",E,E,24,[[[T]],[T]]],[11,R[4],E,E,24,[[[U]],[R[3]]]],[11,R[5],E,E,24,[[],[R[3]]]],[11,R[7],E,E,24,[[["self"]],[T]]],[11,R[6],E,E,24,[[["self"]],[T]]],[11,R[8],E,E,24,[[["self"]],[R[9]]]],[11,"into",E,E,25,[[],[U]]],[11,R[113],E,E,25,[[["self"]],["string"]]],[11,"from",E,E,25,[[[T]],[T]]],[11,R[4],E,E,25,[[[U]],[R[3]]]],[11,R[5],E,E,25,[[],[R[3]]]],[11,R[7],E,E,25,[[["self"]],[T]]],[11,R[6],E,E,25,[[["self"]],[T]]],[11,R[8],E,E,25,[[["self"]],[R[9]]]],[11,"into",E,E,26,[[],[U]]],[11,R[113],E,E,26,[[["self"]],["string"]]],[11,"from",E,E,26,[[[T]],[T]]],[11,R[4],E,E,26,[[[U]],[R[3]]]],[11,R[5],E,E,26,[[],[R[3]]]],[11,R[7],E,E,26,[[["self"]],[T]]],[11,R[6],E,E,26,[[["self"]],[T]]],[11,R[8],E,E,26,[[["self"]],[R[9]]]],[11,"into",E,E,27,[[],[U]]],[11,"from",E,E,27,[[[T]],[T]]],[11,R[4],E,E,27,[[[U]],[R[3]]]],[11,R[5],E,E,27,[[],[R[3]]]],[11,R[7],E,E,27,[[["self"]],[T]]],[11,R[6],E,E,27,[[["self"]],[T]]],[11,R[8],E,E,27,[[["self"]],[R[9]]]],[11,"into",R[4732],E,30,[[],[U]]],[11,"from",E,E,30,[[[T]],[T]]],[11,R[46],E,E,30,[[["self"]],[T]]],[11,R[47],E,E,30,[[["self"],[T]]]],[11,R[4],E,E,30,[[[U]],[R[3]]]],[11,R[5],E,E,30,[[],[R[3]]]],[11,R[7],E,E,30,[[["self"]],[T]]],[11,R[6],E,E,30,[[["self"]],[T]]],[11,R[8],E,E,30,[[["self"]],[R[9]]]],[11,"into",E,E,126,[[],[U]]],[11,R[45],E,E,126,[[],["i"]]],[11,"from",E,E,126,[[[T]],[T]]],[11,R[4],E,E,126,[[[U]],[R[3]]]],[11,R[5],E,E,126,[[],[R[3]]]],[11,R[7],E,E,126,[[["self"]],[T]]],[11,R[6],E,E,126,[[["self"]],[T]]],[11,R[8],E,E,126,[[["self"]],[R[9]]]],[11,"into",E,E,28,[[],[U]]],[11,"from",E,E,28,[[[T]],[T]]],[11,R[46],E,E,28,[[["self"]],[T]]],[11,R[47],E,E,28,[[["self"],[T]]]],[11,R[4],E,E,28,[[[U]],[R[3]]]],[11,R[5],E,E,28,[[],[R[3]]]],[11,R[7],E,E,28,[[["self"]],[T]]],[11,R[6],E,E,28,[[["self"]],[T]]],[11,R[8],E,E,28,[[["self"]],[R[9]]]],[11,"into",E,E,29,[[],[U]]],[11,"from",E,E,29,[[[T]],[T]]],[11,R[46],E,E,29,[[["self"]],[T]]],[11,R[47],E,E,29,[[["self"],[T]]]],[11,R[4],E,E,29,[[[U]],[R[3]]]],[11,R[5],E,E,29,[[],[R[3]]]],[11,R[7],E,E,29,[[["self"]],[T]]],[11,R[6],E,E,29,[[["self"]],[T]]],[11,R[8],E,E,29,[[["self"]],[R[9]]]],[11,"into",R[4790],E,31,[[],[U]]],[11,"from",E,E,31,[[[T]],[T]]],[11,R[46],E,E,31,[[["self"]],[T]]],[11,R[47],E,E,31,[[["self"],[T]]]],[11,R[4],E,E,31,[[[U]],[R[3]]]],[11,R[5],E,E,31,[[],[R[3]]]],[11,R[7],E,E,31,[[["self"]],[T]]],[11,R[6],E,E,31,[[["self"]],[T]]],[11,R[8],E,E,31,[[["self"]],[R[9]]]],[11,"into",R[4791],E,32,[[],[U]]],[11,R[45],E,E,32,[[],["i"]]],[11,"from",E,E,32,[[[T]],[T]]],[11,R[4],E,E,32,[[[U]],[R[3]]]],[11,R[5],E,E,32,[[],[R[3]]]],[11,R[7],E,E,32,[[["self"]],[T]]],[11,R[6],E,E,32,[[["self"]],[T]]],[11,R[8],E,E,32,[[["self"]],[R[9]]]],[11,"into",E,E,127,[[],[U]]],[11,R[45],E,E,127,[[],["i"]]],[11,"from",E,E,127,[[[T]],[T]]],[11,R[4],E,E,127,[[[U]],[R[3]]]],[11,R[5],E,E,127,[[],[R[3]]]],[11,R[7],E,E,127,[[["self"]],[T]]],[11,R[6],E,E,127,[[["self"]],[T]]],[11,R[8],E,E,127,[[["self"]],[R[9]]]],[11,"into",E,E,35,[[],[U]]],[11,"from",E,E,35,[[[T]],[T]]],[11,R[4],E,E,35,[[[U]],[R[3]]]],[11,R[5],E,E,35,[[],[R[3]]]],[11,R[7],E,E,35,[[["self"]],[T]]],[11,R[6],E,E,35,[[["self"]],[T]]],[11,R[8],E,E,35,[[["self"]],[R[9]]]],[11,"into",R[4792],E,128,[[],[U]]],[11,"from",E,E,128,[[[T]],[T]]],[11,R[4],E,E,128,[[[U]],[R[3]]]],[11,R[5],E,E,128,[[],[R[3]]]],[11,R[7],E,E,128,[[["self"]],[T]]],[11,R[6],E,E,128,[[["self"]],[T]]],[11,R[8],E,E,128,[[["self"]],[R[9]]]],[11,"into",E,E,129,[[],[U]]],[11,"from",E,E,129,[[[T]],[T]]],[11,R[4],E,E,129,[[[U]],[R[3]]]],[11,R[5],E,E,129,[[],[R[3]]]],[11,R[7],E,E,129,[[["self"]],[T]]],[11,R[6],E,E,129,[[["self"]],[T]]],[11,R[8],E,E,129,[[["self"]],[R[9]]]],[11,"into",E,E,39,[[],[U]]],[11,"from",E,E,39,[[[T]],[T]]],[11,R[4],E,E,39,[[[U]],[R[3]]]],[11,R[5],E,E,39,[[],[R[3]]]],[11,R[7],E,E,39,[[["self"]],[T]]],[11,R[6],E,E,39,[[["self"]],[T]]],[11,R[8],E,E,39,[[["self"]],[R[9]]]],[11,"into",R[4739],E,41,[[],[U]]],[11,"from",E,E,41,[[[T]],[T]]],[11,R[4],E,E,41,[[[U]],[R[3]]]],[11,R[5],E,E,41,[[],[R[3]]]],[11,R[7],E,E,41,[[["self"]],[T]]],[11,R[6],E,E,41,[[["self"]],[T]]],[11,R[8],E,E,41,[[["self"]],[R[9]]]],[11,"into",E,E,43,[[],[U]]],[11,"from",E,E,43,[[[T]],[T]]],[11,R[4],E,E,43,[[[U]],[R[3]]]],[11,R[5],E,E,43,[[],[R[3]]]],[11,R[7],E,E,43,[[["self"]],[T]]],[11,R[6],E,E,43,[[["self"]],[T]]],[11,R[8],E,E,43,[[["self"]],[R[9]]]],[11,"into",E,E,130,[[],[U]]],[11,"from",E,E,130,[[[T]],[T]]],[11,R[4],E,E,130,[[[U]],[R[3]]]],[11,R[5],E,E,130,[[],[R[3]]]],[11,R[7],E,E,130,[[["self"]],[T]]],[11,R[6],E,E,130,[[["self"]],[T]]],[11,R[8],E,E,130,[[["self"]],[R[9]]]],[11,"into",E,E,44,[[],[U]]],[11,"from",E,E,44,[[[T]],[T]]],[11,R[4],E,E,44,[[[U]],[R[3]]]],[11,R[5],E,E,44,[[],[R[3]]]],[11,R[7],E,E,44,[[["self"]],[T]]],[11,R[6],E,E,44,[[["self"]],[T]]],[11,R[8],E,E,44,[[["self"]],[R[9]]]],[11,"into",E,E,45,[[],[U]]],[11,"from",E,E,45,[[[T]],[T]]],[11,R[46],E,E,45,[[["self"]],[T]]],[11,R[47],E,E,45,[[["self"],[T]]]],[11,R[4],E,E,45,[[[U]],[R[3]]]],[11,R[5],E,E,45,[[],[R[3]]]],[11,R[7],E,E,45,[[["self"]],[T]]],[11,R[6],E,E,45,[[["self"]],[T]]],[11,R[8],E,E,45,[[["self"]],[R[9]]]],[11,"into",E,E,46,[[],[U]]],[11,"from",E,E,46,[[[T]],[T]]],[11,R[46],E,E,46,[[["self"]],[T]]],[11,R[47],E,E,46,[[["self"],[T]]]],[11,R[4],E,E,46,[[[U]],[R[3]]]],[11,R[5],E,E,46,[[],[R[3]]]],[11,R[7],E,E,46,[[["self"]],[T]]],[11,R[6],E,E,46,[[["self"]],[T]]],[11,R[8],E,E,46,[[["self"]],[R[9]]]],[11,"into",E,E,47,[[],[U]]],[11,"from",E,E,47,[[[T]],[T]]],[11,R[46],E,E,47,[[["self"]],[T]]],[11,R[47],E,E,47,[[["self"],[T]]]],[11,R[4],E,E,47,[[[U]],[R[3]]]],[11,R[5],E,E,47,[[],[R[3]]]],[11,R[7],E,E,47,[[["self"]],[T]]],[11,R[6],E,E,47,[[["self"]],[T]]],[11,R[8],E,E,47,[[["self"]],[R[9]]]],[11,"into",E,E,131,[[],[U]]],[11,"from",E,E,131,[[[T]],[T]]],[11,R[4],E,E,131,[[[U]],[R[3]]]],[11,R[5],E,E,131,[[],[R[3]]]],[11,R[7],E,E,131,[[["self"]],[T]]],[11,R[6],E,E,131,[[["self"]],[T]]],[11,R[8],E,E,131,[[["self"]],[R[9]]]],[11,"into",E,E,40,[[],[U]]],[11,"from",E,E,40,[[[T]],[T]]],[11,R[46],E,E,40,[[["self"]],[T]]],[11,R[47],E,E,40,[[["self"],[T]]]],[11,R[4],E,E,40,[[[U]],[R[3]]]],[11,R[5],E,E,40,[[],[R[3]]]],[11,R[7],E,E,40,[[["self"]],[T]]],[11,R[6],E,E,40,[[["self"]],[T]]],[11,R[8],E,E,40,[[["self"]],[R[9]]]],[11,R[4793],E,E,40,[[["self"],["k"]],["bool"]]],[11,"into",R[4794],E,132,[[],[U]]],[11,"from",E,E,132,[[[T]],[T]]],[11,R[4],E,E,132,[[[U]],[R[3]]]],[11,R[5],E,E,132,[[],[R[3]]]],[11,R[7],E,E,132,[[["self"]],[T]]],[11,R[6],E,E,132,[[["self"]],[T]]],[11,R[8],E,E,132,[[["self"]],[R[9]]]],[11,"into",E,E,133,[[],[U]]],[11,"from",E,E,133,[[[T]],[T]]],[11,R[4],E,E,133,[[[U]],[R[3]]]],[11,R[5],E,E,133,[[],[R[3]]]],[11,R[7],E,E,133,[[["self"]],[T]]],[11,R[6],E,E,133,[[["self"]],[T]]],[11,R[8],E,E,133,[[["self"]],[R[9]]]],[11,R[4795],E,E,42,[[],["a"]]],[11,R[4796],E,E,42,[[]]],[11,R[4797],E,E,42,[[],["a"]]],[11,R[4798],E,E,42,[[]]],[11,"types",E,E,42,[[]]],[11,"call",E,E,42,[[["wasm"],["func"],["nonnull",["func"]]],[[R[4753]],[R[3],[R[4753]]]]]],[11,"report",E,E,42,[[],[[R[3],["infallible"]],["infallible"]]]],[11,"into",E,E,42,[[],[U]]],[11,"from",E,E,42,[[[T]],[T]]],[11,R[46],E,E,42,[[["self"]],[T]]],[11,R[47],E,E,42,[[["self"],[T]]]],[11,R[4],E,E,42,[[[U]],[R[3]]]],[11,R[5],E,E,42,[[],[R[3]]]],[11,R[7],E,E,42,[[["self"]],[T]]],[11,R[6],E,E,42,[[["self"]],[T]]],[11,R[8],E,E,42,[[["self"]],[R[9]]]],[11,R[4793],E,E,42,[[["self"],["k"]],["bool"]]],[11,"into",R[4785],E,48,[[],[U]]],[11,"from",E,E,48,[[[T]],[T]]],[11,R[46],E,E,48,[[["self"]],[T]]],[11,R[47],E,E,48,[[["self"],[T]]]],[11,R[4],E,E,48,[[[U]],[R[3]]]],[11,R[5],E,E,48,[[],[R[3]]]],[11,R[7],E,E,48,[[["self"]],[T]]],[11,R[6],E,E,48,[[["self"]],[T]]],[11,R[8],E,E,48,[[["self"]],[R[9]]]],[11,"into",E,E,49,[[],[U]]],[11,"from",E,E,49,[[[T]],[T]]],[11,R[46],E,E,49,[[["self"]],[T]]],[11,R[47],E,E,49,[[["self"],[T]]]],[11,R[4],E,E,49,[[[U]],[R[3]]]],[11,R[5],E,E,49,[[],[R[3]]]],[11,R[7],E,E,49,[[["self"]],[T]]],[11,R[6],E,E,49,[[["self"]],[T]]],[11,R[8],E,E,49,[[["self"]],[R[9]]]],[11,"into",E,E,50,[[],[U]]],[11,"from",E,E,50,[[[T]],[T]]],[11,R[46],E,E,50,[[["self"]],[T]]],[11,R[47],E,E,50,[[["self"],[T]]]],[11,R[4],E,E,50,[[[U]],[R[3]]]],[11,R[5],E,E,50,[[],[R[3]]]],[11,R[7],E,E,50,[[["self"]],[T]]],[11,R[6],E,E,50,[[["self"]],[T]]],[11,R[8],E,E,50,[[["self"]],[R[9]]]],[11,"into",E,E,53,[[],[U]]],[11,"from",E,E,53,[[[T]],[T]]],[11,R[4],E,E,53,[[[U]],[R[3]]]],[11,R[5],E,E,53,[[],[R[3]]]],[11,R[7],E,E,53,[[["self"]],[T]]],[11,R[6],E,E,53,[[["self"]],[T]]],[11,R[8],E,E,53,[[["self"]],[R[9]]]],[11,"into",E,E,54,[[],[U]]],[11,"from",E,E,54,[[[T]],[T]]],[11,R[46],E,E,54,[[["self"]],[T]]],[11,R[47],E,E,54,[[["self"],[T]]]],[11,R[4],E,E,54,[[[U]],[R[3]]]],[11,R[5],E,E,54,[[],[R[3]]]],[11,R[7],E,E,54,[[["self"]],[T]]],[11,R[6],E,E,54,[[["self"]],[T]]],[11,R[8],E,E,54,[[["self"]],[R[9]]]],[11,"into",E,E,134,[[],[U]]],[11,"from",E,E,134,[[[T]],[T]]],[11,R[46],E,E,134,[[["self"]],[T]]],[11,R[47],E,E,134,[[["self"],[T]]]],[11,R[4],E,E,134,[[[U]],[R[3]]]],[11,R[5],E,E,134,[[],[R[3]]]],[11,R[7],E,E,134,[[["self"]],[T]]],[11,R[6],E,E,134,[[["self"]],[T]]],[11,R[8],E,E,134,[[["self"]],[R[9]]]],[11,R[4793],E,E,134,[[["self"],["k"]],["bool"]]],[11,"into",E,E,135,[[],[U]]],[11,"from",E,E,135,[[[T]],[T]]],[11,R[46],E,E,135,[[["self"]],[T]]],[11,R[47],E,E,135,[[["self"],[T]]]],[11,R[4],E,E,135,[[[U]],[R[3]]]],[11,R[5],E,E,135,[[],[R[3]]]],[11,R[7],E,E,135,[[["self"]],[T]]],[11,R[6],E,E,135,[[["self"]],[T]]],[11,R[8],E,E,135,[[["self"]],[R[9]]]],[11,R[4793],E,E,135,[[["self"],["k"]],["bool"]]],[11,"into",E,E,51,[[],[U]]],[11,"from",E,E,51,[[[T]],[T]]],[11,R[46],E,E,51,[[["self"]],[T]]],[11,R[47],E,E,51,[[["self"],[T]]]],[11,R[4],E,E,51,[[[U]],[R[3]]]],[11,R[5],E,E,51,[[],[R[3]]]],[11,R[7],E,E,51,[[["self"]],[T]]],[11,R[6],E,E,51,[[["self"]],[T]]],[11,R[8],E,E,51,[[["self"]],[R[9]]]],[11,R[4793],E,E,51,[[["self"],["k"]],["bool"]]],[11,"into",R[4799],E,55,[[],[U]]],[11,"from",E,E,55,[[[T]],[T]]],[11,R[4],E,E,55,[[[U]],[R[3]]]],[11,R[5],E,E,55,[[],[R[3]]]],[11,R[7],E,E,55,[[["self"]],[T]]],[11,R[6],E,E,55,[[["self"]],[T]]],[11,R[8],E,E,55,[[["self"]],[R[9]]]],[11,"into",R[4800],E,136,[[],[U]]],[11,"from",E,E,136,[[[T]],[T]]],[11,R[46],E,E,136,[[["self"]],[T]]],[11,R[47],E,E,136,[[["self"],[T]]]],[11,R[4],E,E,136,[[[U]],[R[3]]]],[11,R[5],E,E,136,[[],[R[3]]]],[11,R[7],E,E,136,[[["self"]],[T]]],[11,R[6],E,E,136,[[["self"]],[T]]],[11,R[8],E,E,136,[[["self"]],[R[9]]]],[11,"into",E,E,137,[[],[U]]],[11,R[45],E,E,137,[[],["i"]]],[11,"from",E,E,137,[[[T]],[T]]],[11,R[4],E,E,137,[[[U]],[R[3]]]],[11,R[5],E,E,137,[[],[R[3]]]],[11,R[7],E,E,137,[[["self"]],[T]]],[11,R[6],E,E,137,[[["self"]],[T]]],[11,R[8],E,E,137,[[["self"]],[R[9]]]],[11,"into",E,E,138,[[],[U]]],[11,R[45],E,E,138,[[],["i"]]],[11,"from",E,E,138,[[[T]],[T]]],[11,R[4],E,E,138,[[[U]],[R[3]]]],[11,R[5],E,E,138,[[],[R[3]]]],[11,R[7],E,E,138,[[["self"]],[T]]],[11,R[6],E,E,138,[[["self"]],[T]]],[11,R[8],E,E,138,[[["self"]],[R[9]]]],[11,"into",E,E,56,[[],[U]]],[11,R[45],E,E,56,[[],["i"]]],[11,"from",E,E,56,[[[T]],[T]]],[11,R[46],E,E,56,[[["self"]],[T]]],[11,R[47],E,E,56,[[["self"],[T]]]],[11,R[4],E,E,56,[[[U]],[R[3]]]],[11,R[5],E,E,56,[[],[R[3]]]],[11,R[7],E,E,56,[[["self"]],[T]]],[11,R[6],E,E,56,[[["self"]],[T]]],[11,R[8],E,E,56,[[["self"]],[R[9]]]],[11,"into",E,E,57,[[],[U]]],[11,"from",E,E,57,[[[T]],[T]]],[11,R[4],E,E,57,[[[U]],[R[3]]]],[11,R[5],E,E,57,[[],[R[3]]]],[11,R[7],E,E,57,[[["self"]],[T]]],[11,R[6],E,E,57,[[["self"]],[T]]],[11,R[8],E,E,57,[[["self"]],[R[9]]]],[11,"into",R[4801],E,60,[[],[U]]],[11,"from",E,E,60,[[[T]],[T]]],[11,R[4],E,E,60,[[[U]],[R[3]]]],[11,R[5],E,E,60,[[],[R[3]]]],[11,R[7],E,E,60,[[["self"]],[T]]],[11,R[6],E,E,60,[[["self"]],[T]]],[11,R[8],E,E,60,[[["self"]],[R[9]]]],[11,"into",E,E,61,[[],[U]]],[11,"from",E,E,61,[[[T]],[T]]],[11,R[46],E,E,61,[[["self"]],[T]]],[11,R[47],E,E,61,[[["self"],[T]]]],[11,R[4],E,E,61,[[[U]],[R[3]]]],[11,R[5],E,E,61,[[],[R[3]]]],[11,R[7],E,E,61,[[["self"]],[T]]],[11,R[6],E,E,61,[[["self"]],[T]]],[11,R[8],E,E,61,[[["self"]],[R[9]]]],[11,"into",E,E,58,[[],[U]]],[11,"from",E,E,58,[[[T]],[T]]],[11,R[4],E,E,58,[[[U]],[R[3]]]],[11,R[5],E,E,58,[[],[R[3]]]],[11,R[7],E,E,58,[[["self"]],[T]]],[11,R[6],E,E,58,[[["self"]],[T]]],[11,R[8],E,E,58,[[["self"]],[R[9]]]],[11,"into",E,E,59,[[],[U]]],[11,"from",E,E,59,[[[T]],[T]]],[11,R[4],E,E,59,[[[U]],[R[3]]]],[11,R[5],E,E,59,[[],[R[3]]]],[11,R[7],E,E,59,[[["self"]],[T]]],[11,R[6],E,E,59,[[["self"]],[T]]],[11,R[8],E,E,59,[[["self"]],[R[9]]]],[11,"into",R[4802],E,62,[[],[U]]],[11,"from",E,E,62,[[[T]],[T]]],[11,R[4],E,E,62,[[[U]],[R[3]]]],[11,R[5],E,E,62,[[],[R[3]]]],[11,R[7],E,E,62,[[["self"]],[T]]],[11,R[6],E,E,62,[[["self"]],[T]]],[11,R[8],E,E,62,[[["self"]],[R[9]]]],[11,"into",E,E,63,[[],[U]]],[11,"from",E,E,63,[[[T]],[T]]],[11,R[4],E,E,63,[[[U]],[R[3]]]],[11,R[5],E,E,63,[[],[R[3]]]],[11,R[7],E,E,63,[[["self"]],[T]]],[11,R[6],E,E,63,[[["self"]],[T]]],[11,R[8],E,E,63,[[["self"]],[R[9]]]],[11,"into",E,E,139,[[],[U]]],[11,"from",E,E,139,[[[T]],[T]]],[11,R[4],E,E,139,[[[U]],[R[3]]]],[11,R[5],E,E,139,[[],[R[3]]]],[11,R[7],E,E,139,[[["self"]],[T]]],[11,R[6],E,E,139,[[["self"]],[T]]],[11,R[8],E,E,139,[[["self"]],[R[9]]]],[11,"into",E,E,140,[[],[U]]],[11,"from",E,E,140,[[[T]],[T]]],[11,R[4],E,E,140,[[[U]],[R[3]]]],[11,R[5],E,E,140,[[],[R[3]]]],[11,R[7],E,E,140,[[["self"]],[T]]],[11,R[6],E,E,140,[[["self"]],[T]]],[11,R[8],E,E,140,[[["self"]],[R[9]]]],[11,"into",E,E,141,[[],[U]]],[11,"from",E,E,141,[[[T]],[T]]],[11,R[4],E,E,141,[[[U]],[R[3]]]],[11,R[5],E,E,141,[[],[R[3]]]],[11,R[7],E,E,141,[[["self"]],[T]]],[11,R[6],E,E,141,[[["self"]],[T]]],[11,R[8],E,E,141,[[["self"]],[R[9]]]],[11,"into",R[4786],E,68,[[],[U]]],[11,"from",E,E,68,[[[T]],[T]]],[11,R[46],E,E,68,[[["self"]],[T]]],[11,R[47],E,E,68,[[["self"],[T]]]],[11,R[4],E,E,68,[[[U]],[R[3]]]],[11,R[5],E,E,68,[[],[R[3]]]],[11,R[7],E,E,68,[[["self"]],[T]]],[11,R[6],E,E,68,[[["self"]],[T]]],[11,R[8],E,E,68,[[["self"]],[R[9]]]],[11,"into",E,E,142,[[],[U]]],[11,"from",E,E,142,[[[T]],[T]]],[11,R[4],E,E,142,[[[U]],[R[3]]]],[11,R[5],E,E,142,[[],[R[3]]]],[11,R[7],E,E,142,[[["self"]],[T]]],[11,R[6],E,E,142,[[["self"]],[T]]],[11,R[8],E,E,142,[[["self"]],[R[9]]]],[11,"into",E,E,143,[[],[U]]],[11,"from",E,E,143,[[[T]],[T]]],[11,R[4],E,E,143,[[[U]],[R[3]]]],[11,R[5],E,E,143,[[],[R[3]]]],[11,R[7],E,E,143,[[["self"]],[T]]],[11,R[6],E,E,143,[[["self"]],[T]]],[11,R[8],E,E,143,[[["self"]],[R[9]]]],[11,"into",E,E,144,[[],[U]]],[11,"from",E,E,144,[[[T]],[T]]],[11,R[4],E,E,144,[[[U]],[R[3]]]],[11,R[5],E,E,144,[[],[R[3]]]],[11,R[7],E,E,144,[[["self"]],[T]]],[11,R[6],E,E,144,[[["self"]],[T]]],[11,R[8],E,E,144,[[["self"]],[R[9]]]],[11,"into",E,E,145,[[],[U]]],[11,"from",E,E,145,[[[T]],[T]]],[11,R[4],E,E,145,[[[U]],[R[3]]]],[11,R[5],E,E,145,[[],[R[3]]]],[11,R[7],E,E,145,[[["self"]],[T]]],[11,R[6],E,E,145,[[["self"]],[T]]],[11,R[8],E,E,145,[[["self"]],[R[9]]]],[11,"into",E,E,146,[[],[U]]],[11,"from",E,E,146,[[[T]],[T]]],[11,R[4],E,E,146,[[[U]],[R[3]]]],[11,R[5],E,E,146,[[],[R[3]]]],[11,R[7],E,E,146,[[["self"]],[T]]],[11,R[6],E,E,146,[[["self"]],[T]]],[11,R[8],E,E,146,[[["self"]],[R[9]]]],[11,"into",E,E,147,[[],[U]]],[11,"from",E,E,147,[[[T]],[T]]],[11,R[4],E,E,147,[[[U]],[R[3]]]],[11,R[5],E,E,147,[[],[R[3]]]],[11,R[7],E,E,147,[[["self"]],[T]]],[11,R[6],E,E,147,[[["self"]],[T]]],[11,R[8],E,E,147,[[["self"]],[R[9]]]],[11,"into",E,E,148,[[],[U]]],[11,"from",E,E,148,[[[T]],[T]]],[11,R[4],E,E,148,[[[U]],[R[3]]]],[11,R[5],E,E,148,[[],[R[3]]]],[11,R[7],E,E,148,[[["self"]],[T]]],[11,R[6],E,E,148,[[["self"]],[T]]],[11,R[8],E,E,148,[[["self"]],[R[9]]]],[11,"into",E,E,149,[[],[U]]],[11,"from",E,E,149,[[[T]],[T]]],[11,R[4],E,E,149,[[[U]],[R[3]]]],[11,R[5],E,E,149,[[],[R[3]]]],[11,R[7],E,E,149,[[["self"]],[T]]],[11,R[6],E,E,149,[[["self"]],[T]]],[11,R[8],E,E,149,[[["self"]],[R[9]]]],[11,"into",E,E,150,[[],[U]]],[11,"from",E,E,150,[[[T]],[T]]],[11,R[4],E,E,150,[[[U]],[R[3]]]],[11,R[5],E,E,150,[[],[R[3]]]],[11,R[7],E,E,150,[[["self"]],[T]]],[11,R[6],E,E,150,[[["self"]],[T]]],[11,R[8],E,E,150,[[["self"]],[R[9]]]],[11,"into",E,E,151,[[],[U]]],[11,"from",E,E,151,[[[T]],[T]]],[11,R[4],E,E,151,[[[U]],[R[3]]]],[11,R[5],E,E,151,[[],[R[3]]]],[11,R[7],E,E,151,[[["self"]],[T]]],[11,R[6],E,E,151,[[["self"]],[T]]],[11,R[8],E,E,151,[[["self"]],[R[9]]]],[11,"into",E,E,152,[[],[U]]],[11,"from",E,E,152,[[[T]],[T]]],[11,R[4],E,E,152,[[[U]],[R[3]]]],[11,R[5],E,E,152,[[],[R[3]]]],[11,R[7],E,E,152,[[["self"]],[T]]],[11,R[6],E,E,152,[[["self"]],[T]]],[11,R[8],E,E,152,[[["self"]],[R[9]]]],[11,"into",E,E,153,[[],[U]]],[11,"from",E,E,153,[[[T]],[T]]],[11,R[4],E,E,153,[[[U]],[R[3]]]],[11,R[5],E,E,153,[[],[R[3]]]],[11,R[7],E,E,153,[[["self"]],[T]]],[11,R[6],E,E,153,[[["self"]],[T]]],[11,R[8],E,E,153,[[["self"]],[R[9]]]],[11,"into",E,E,154,[[],[U]]],[11,"from",E,E,154,[[[T]],[T]]],[11,R[4],E,E,154,[[[U]],[R[3]]]],[11,R[5],E,E,154,[[],[R[3]]]],[11,R[7],E,E,154,[[["self"]],[T]]],[11,R[6],E,E,154,[[["self"]],[T]]],[11,R[8],E,E,154,[[["self"]],[R[9]]]],[11,"into",E,E,155,[[],[U]]],[11,"from",E,E,155,[[[T]],[T]]],[11,R[4],E,E,155,[[[U]],[R[3]]]],[11,R[5],E,E,155,[[],[R[3]]]],[11,R[7],E,E,155,[[["self"]],[T]]],[11,R[6],E,E,155,[[["self"]],[T]]],[11,R[8],E,E,155,[[["self"]],[R[9]]]],[11,"into",E,E,64,[[],[U]]],[11,R[113],E,E,64,[[["self"]],["string"]]],[11,"from",E,E,64,[[[T]],[T]]],[11,R[4],E,E,64,[[[U]],[R[3]]]],[11,R[5],E,E,64,[[],[R[3]]]],[11,R[7],E,E,64,[[["self"]],[T]]],[11,R[6],E,E,64,[[["self"]],[T]]],[11,R[8],E,E,64,[[["self"]],[R[9]]]],[11,"into",R[4803],E,70,[[],[U]]],[11,"from",E,E,70,[[[T]],[T]]],[11,R[46],E,E,70,[[["self"]],[T]]],[11,R[47],E,E,70,[[["self"],[T]]]],[11,R[4],E,E,70,[[[U]],[R[3]]]],[11,R[5],E,E,70,[[],[R[3]]]],[11,R[7],E,E,70,[[["self"]],[T]]],[11,R[6],E,E,70,[[["self"]],[T]]],[11,R[8],E,E,70,[[["self"]],[R[9]]]],[11,"into",E,E,71,[[],[U]]],[11,"from",E,E,71,[[[T]],[T]]],[11,R[46],E,E,71,[[["self"]],[T]]],[11,R[47],E,E,71,[[["self"],[T]]]],[11,R[4],E,E,71,[[[U]],[R[3]]]],[11,R[5],E,E,71,[[],[R[3]]]],[11,R[7],E,E,71,[[["self"]],[T]]],[11,R[6],E,E,71,[[["self"]],[T]]],[11,R[8],E,E,71,[[["self"]],[R[9]]]],[11,R[4793],E,E,71,[[["self"],["k"]],["bool"]]],[11,"into",E,E,72,[[],[U]]],[11,"from",E,E,72,[[[T]],[T]]],[11,R[46],E,E,72,[[["self"]],[T]]],[11,R[47],E,E,72,[[["self"],[T]]]],[11,R[4],E,E,72,[[[U]],[R[3]]]],[11,R[5],E,E,72,[[],[R[3]]]],[11,R[7],E,E,72,[[["self"]],[T]]],[11,R[6],E,E,72,[[["self"]],[T]]],[11,R[8],E,E,72,[[["self"]],[R[9]]]],[11,"into",E,E,73,[[],[U]]],[11,"from",E,E,73,[[[T]],[T]]],[11,R[46],E,E,73,[[["self"]],[T]]],[11,R[47],E,E,73,[[["self"],[T]]]],[11,R[4],E,E,73,[[[U]],[R[3]]]],[11,R[5],E,E,73,[[],[R[3]]]],[11,R[7],E,E,73,[[["self"]],[T]]],[11,R[6],E,E,73,[[["self"]],[T]]],[11,R[8],E,E,73,[[["self"]],[R[9]]]],[11,R[4793],E,E,73,[[["self"],["k"]],["bool"]]],[11,"into",E,E,82,[[],[U]]],[11,R[113],E,E,82,[[["self"]],["string"]]],[11,"from",E,E,82,[[[T]],[T]]],[11,R[46],E,E,82,[[["self"]],[T]]],[11,R[47],E,E,82,[[["self"],[T]]]],[11,R[4],E,E,82,[[[U]],[R[3]]]],[11,R[5],E,E,82,[[],[R[3]]]],[11,R[7],E,E,82,[[["self"]],[T]]],[11,R[6],E,E,82,[[["self"]],[T]]],[11,R[8],E,E,82,[[["self"]],[R[9]]]],[11,R[4793],E,E,82,[[["self"],["k"]],["bool"]]],[11,"into",E,E,83,[[],[U]]],[11,"from",E,E,83,[[[T]],[T]]],[11,R[46],E,E,83,[[["self"]],[T]]],[11,R[47],E,E,83,[[["self"],[T]]]],[11,R[4],E,E,83,[[[U]],[R[3]]]],[11,R[5],E,E,83,[[],[R[3]]]],[11,R[7],E,E,83,[[["self"]],[T]]],[11,R[6],E,E,83,[[["self"]],[T]]],[11,R[8],E,E,83,[[["self"]],[R[9]]]],[11,R[4793],E,E,83,[[["self"],["k"]],["bool"]]],[11,"into",E,E,84,[[],[U]]],[11,"from",E,E,84,[[[T]],[T]]],[11,R[46],E,E,84,[[["self"]],[T]]],[11,R[47],E,E,84,[[["self"],[T]]]],[11,R[4],E,E,84,[[[U]],[R[3]]]],[11,R[5],E,E,84,[[],[R[3]]]],[11,R[7],E,E,84,[[["self"]],[T]]],[11,R[6],E,E,84,[[["self"]],[T]]],[11,R[8],E,E,84,[[["self"]],[R[9]]]],[11,R[4793],E,E,84,[[["self"],["k"]],["bool"]]],[11,"into",E,E,85,[[],[U]]],[11,"from",E,E,85,[[[T]],[T]]],[11,R[46],E,E,85,[[["self"]],[T]]],[11,R[47],E,E,85,[[["self"],[T]]]],[11,R[4],E,E,85,[[[U]],[R[3]]]],[11,R[5],E,E,85,[[],[R[3]]]],[11,R[7],E,E,85,[[["self"]],[T]]],[11,R[6],E,E,85,[[["self"]],[T]]],[11,R[8],E,E,85,[[["self"]],[R[9]]]],[11,R[4793],E,E,85,[[["self"],["k"]],["bool"]]],[11,"into",E,E,86,[[],[U]]],[11,"from",E,E,86,[[[T]],[T]]],[11,R[46],E,E,86,[[["self"]],[T]]],[11,R[47],E,E,86,[[["self"],[T]]]],[11,R[4],E,E,86,[[[U]],[R[3]]]],[11,R[5],E,E,86,[[],[R[3]]]],[11,R[7],E,E,86,[[["self"]],[T]]],[11,R[6],E,E,86,[[["self"]],[T]]],[11,R[8],E,E,86,[[["self"]],[R[9]]]],[11,R[4793],E,E,86,[[["self"],["k"]],["bool"]]],[11,"into",E,E,87,[[],[U]]],[11,"from",E,E,87,[[[T]],[T]]],[11,R[46],E,E,87,[[["self"]],[T]]],[11,R[47],E,E,87,[[["self"],[T]]]],[11,R[4],E,E,87,[[[U]],[R[3]]]],[11,R[5],E,E,87,[[],[R[3]]]],[11,R[7],E,E,87,[[["self"]],[T]]],[11,R[6],E,E,87,[[["self"]],[T]]],[11,R[8],E,E,87,[[["self"]],[R[9]]]],[11,R[4793],E,E,87,[[["self"],["k"]],["bool"]]],[11,"into",E,E,88,[[],[U]]],[11,"from",E,E,88,[[[T]],[T]]],[11,R[46],E,E,88,[[["self"]],[T]]],[11,R[47],E,E,88,[[["self"],[T]]]],[11,R[4],E,E,88,[[[U]],[R[3]]]],[11,R[5],E,E,88,[[],[R[3]]]],[11,R[7],E,E,88,[[["self"]],[T]]],[11,R[6],E,E,88,[[["self"]],[T]]],[11,R[8],E,E,88,[[["self"]],[R[9]]]],[11,R[4793],E,E,88,[[["self"],["k"]],["bool"]]],[11,"into",E,E,89,[[],[U]]],[11,"from",E,E,89,[[[T]],[T]]],[11,R[46],E,E,89,[[["self"]],[T]]],[11,R[47],E,E,89,[[["self"],[T]]]],[11,R[4],E,E,89,[[[U]],[R[3]]]],[11,R[5],E,E,89,[[],[R[3]]]],[11,R[7],E,E,89,[[["self"]],[T]]],[11,R[6],E,E,89,[[["self"]],[T]]],[11,R[8],E,E,89,[[["self"]],[R[9]]]],[11,R[4793],E,E,89,[[["self"],["k"]],["bool"]]],[11,"into",E,E,90,[[],[U]]],[11,"from",E,E,90,[[[T]],[T]]],[11,R[46],E,E,90,[[["self"]],[T]]],[11,R[47],E,E,90,[[["self"],[T]]]],[11,R[4],E,E,90,[[[U]],[R[3]]]],[11,R[5],E,E,90,[[],[R[3]]]],[11,R[7],E,E,90,[[["self"]],[T]]],[11,R[6],E,E,90,[[["self"]],[T]]],[11,R[8],E,E,90,[[["self"]],[R[9]]]],[11,R[4793],E,E,90,[[["self"],["k"]],["bool"]]],[11,"into",E,E,91,[[],[U]]],[11,"from",E,E,91,[[[T]],[T]]],[11,R[46],E,E,91,[[["self"]],[T]]],[11,R[47],E,E,91,[[["self"],[T]]]],[11,R[4],E,E,91,[[[U]],[R[3]]]],[11,R[5],E,E,91,[[],[R[3]]]],[11,R[7],E,E,91,[[["self"]],[T]]],[11,R[6],E,E,91,[[["self"]],[T]]],[11,R[8],E,E,91,[[["self"]],[R[9]]]],[11,R[4793],E,E,91,[[["self"],["k"]],["bool"]]],[11,"into",E,E,92,[[],[U]]],[11,"from",E,E,92,[[[T]],[T]]],[11,R[46],E,E,92,[[["self"]],[T]]],[11,R[47],E,E,92,[[["self"],[T]]]],[11,R[4],E,E,92,[[[U]],[R[3]]]],[11,R[5],E,E,92,[[],[R[3]]]],[11,R[7],E,E,92,[[["self"]],[T]]],[11,R[6],E,E,92,[[["self"]],[T]]],[11,R[8],E,E,92,[[["self"]],[R[9]]]],[11,R[4793],E,E,92,[[["self"],["k"]],["bool"]]],[11,"into",E,E,93,[[],[U]]],[11,"from",E,E,93,[[[T]],[T]]],[11,R[46],E,E,93,[[["self"]],[T]]],[11,R[47],E,E,93,[[["self"],[T]]]],[11,R[4],E,E,93,[[[U]],[R[3]]]],[11,R[5],E,E,93,[[],[R[3]]]],[11,R[7],E,E,93,[[["self"]],[T]]],[11,R[6],E,E,93,[[["self"]],[T]]],[11,R[8],E,E,93,[[["self"]],[R[9]]]],[11,R[4793],E,E,93,[[["self"],["k"]],["bool"]]],[11,"into",E,E,94,[[],[U]]],[11,"from",E,E,94,[[[T]],[T]]],[11,R[46],E,E,94,[[["self"]],[T]]],[11,R[47],E,E,94,[[["self"],[T]]]],[11,R[4],E,E,94,[[[U]],[R[3]]]],[11,R[5],E,E,94,[[],[R[3]]]],[11,R[7],E,E,94,[[["self"]],[T]]],[11,R[6],E,E,94,[[["self"]],[T]]],[11,R[8],E,E,94,[[["self"]],[R[9]]]],[11,R[4793],E,E,94,[[["self"],["k"]],["bool"]]],[11,"into",E,E,156,[[],[U]]],[11,"from",E,E,156,[[[T]],[T]]],[11,R[46],E,E,156,[[["self"]],[T]]],[11,R[47],E,E,156,[[["self"],[T]]]],[11,R[4],E,E,156,[[[U]],[R[3]]]],[11,R[5],E,E,156,[[],[R[3]]]],[11,R[7],E,E,156,[[["self"]],[T]]],[11,R[6],E,E,156,[[["self"]],[T]]],[11,R[8],E,E,156,[[["self"]],[R[9]]]],[11,R[4793],E,E,156,[[["self"],["k"]],["bool"]]],[11,"into",E,E,74,[[],[U]]],[11,R[113],E,E,74,[[["self"]],["string"]]],[11,"from",E,E,74,[[[T]],[T]]],[11,R[46],E,E,74,[[["self"]],[T]]],[11,R[47],E,E,74,[[["self"],[T]]]],[11,R[4],E,E,74,[[[U]],[R[3]]]],[11,R[5],E,E,74,[[],[R[3]]]],[11,R[7],E,E,74,[[["self"]],[T]]],[11,R[6],E,E,74,[[["self"]],[T]]],[11,R[8],E,E,74,[[["self"]],[R[9]]]],[11,R[4793],E,E,74,[[["self"],["k"]],["bool"]]],[11,"into",E,E,75,[[],[U]]],[11,"from",E,E,75,[[[T]],[T]]],[11,R[46],E,E,75,[[["self"]],[T]]],[11,R[47],E,E,75,[[["self"],[T]]]],[11,R[4],E,E,75,[[[U]],[R[3]]]],[11,R[5],E,E,75,[[],[R[3]]]],[11,R[7],E,E,75,[[["self"]],[T]]],[11,R[6],E,E,75,[[["self"]],[T]]],[11,R[8],E,E,75,[[["self"]],[R[9]]]],[11,"into",E,E,76,[[],[U]]],[11,"from",E,E,76,[[[T]],[T]]],[11,R[46],E,E,76,[[["self"]],[T]]],[11,R[47],E,E,76,[[["self"],[T]]]],[11,R[4],E,E,76,[[[U]],[R[3]]]],[11,R[5],E,E,76,[[],[R[3]]]],[11,R[7],E,E,76,[[["self"]],[T]]],[11,R[6],E,E,76,[[["self"]],[T]]],[11,R[8],E,E,76,[[["self"]],[R[9]]]],[11,R[4793],E,E,76,[[["self"],["k"]],["bool"]]],[11,"into",E,E,77,[[],[U]]],[11,"from",E,E,77,[[[T]],[T]]],[11,R[46],E,E,77,[[["self"]],[T]]],[11,R[47],E,E,77,[[["self"],[T]]]],[11,R[4],E,E,77,[[[U]],[R[3]]]],[11,R[5],E,E,77,[[],[R[3]]]],[11,R[7],E,E,77,[[["self"]],[T]]],[11,R[6],E,E,77,[[["self"]],[T]]],[11,R[8],E,E,77,[[["self"]],[R[9]]]],[11,"into",E,E,78,[[],[U]]],[11,"from",E,E,78,[[[T]],[T]]],[11,R[4],E,E,78,[[[U]],[R[3]]]],[11,R[5],E,E,78,[[],[R[3]]]],[11,R[7],E,E,78,[[["self"]],[T]]],[11,R[6],E,E,78,[[["self"]],[T]]],[11,R[8],E,E,78,[[["self"]],[R[9]]]],[11,"into",R[4804],E,95,[[],[U]]],[11,"from",E,E,95,[[[T]],[T]]],[11,R[46],E,E,95,[[["self"]],[T]]],[11,R[47],E,E,95,[[["self"],[T]]]],[11,R[4],E,E,95,[[[U]],[R[3]]]],[11,R[5],E,E,95,[[],[R[3]]]],[11,R[7],E,E,95,[[["self"]],[T]]],[11,R[6],E,E,95,[[["self"]],[T]]],[11,R[8],E,E,95,[[["self"]],[R[9]]]],[11,R[4793],E,E,95,[[["self"],["k"]],["bool"]]],[11,"into",E,E,96,[[],[U]]],[11,"from",E,E,96,[[[T]],[T]]],[11,R[46],E,E,96,[[["self"]],[T]]],[11,R[47],E,E,96,[[["self"],[T]]]],[11,R[4],E,E,96,[[[U]],[R[3]]]],[11,R[5],E,E,96,[[],[R[3]]]],[11,R[7],E,E,96,[[["self"]],[T]]],[11,R[6],E,E,96,[[["self"]],[T]]],[11,R[8],E,E,96,[[["self"]],[R[9]]]],[11,R[4793],E,E,96,[[["self"],["k"]],["bool"]]],[11,"into",R[4787],E,97,[[],[U]]],[11,"from",E,E,97,[[[T]],[T]]],[11,R[4],E,E,97,[[[U]],[R[3]]]],[11,R[5],E,E,97,[[],[R[3]]]],[11,R[7],E,E,97,[[["self"]],[T]]],[11,R[6],E,E,97,[[["self"]],[T]]],[11,R[8],E,E,97,[[["self"]],[R[9]]]],[11,"into",E,E,105,[[],[U]]],[11,"from",E,E,105,[[[T]],[T]]],[11,R[4],E,E,105,[[[U]],[R[3]]]],[11,R[5],E,E,105,[[],[R[3]]]],[11,R[7],E,E,105,[[["self"]],[T]]],[11,R[6],E,E,105,[[["self"]],[T]]],[11,R[8],E,E,105,[[["self"]],[R[9]]]],[11,"into",E,E,98,[[],[U]]],[11,"from",E,E,98,[[[T]],[T]]],[11,R[4],E,E,98,[[[U]],[R[3]]]],[11,R[5],E,E,98,[[],[R[3]]]],[11,R[7],E,E,98,[[["self"]],[T]]],[11,R[6],E,E,98,[[["self"]],[T]]],[11,R[8],E,E,98,[[["self"]],[R[9]]]],[11,"into",E,E,157,[[],[U]]],[11,"from",E,E,157,[[[T]],[T]]],[11,R[4],E,E,157,[[[U]],[R[3]]]],[11,R[5],E,E,157,[[],[R[3]]]],[11,R[7],E,E,157,[[["self"]],[T]]],[11,R[6],E,E,157,[[["self"]],[T]]],[11,R[8],E,E,157,[[["self"]],[R[9]]]],[11,"into",E,E,99,[[],[U]]],[11,"from",E,E,99,[[[T]],[T]]],[11,R[46],E,E,99,[[["self"]],[T]]],[11,R[47],E,E,99,[[["self"],[T]]]],[11,R[4],E,E,99,[[[U]],[R[3]]]],[11,R[5],E,E,99,[[],[R[3]]]],[11,R[7],E,E,99,[[["self"]],[T]]],[11,R[6],E,E,99,[[["self"]],[T]]],[11,R[8],E,E,99,[[["self"]],[R[9]]]],[11,"into",E,E,100,[[],[U]]],[11,"from",E,E,100,[[[T]],[T]]],[11,R[46],E,E,100,[[["self"]],[T]]],[11,R[47],E,E,100,[[["self"],[T]]]],[11,R[4],E,E,100,[[[U]],[R[3]]]],[11,R[5],E,E,100,[[],[R[3]]]],[11,R[7],E,E,100,[[["self"]],[T]]],[11,R[6],E,E,100,[[["self"]],[T]]],[11,R[8],E,E,100,[[["self"]],[R[9]]]],[11,"into",E,E,101,[[],[U]]],[11,"from",E,E,101,[[[T]],[T]]],[11,R[46],E,E,101,[[["self"]],[T]]],[11,R[47],E,E,101,[[["self"],[T]]]],[11,R[4],E,E,101,[[[U]],[R[3]]]],[11,R[5],E,E,101,[[],[R[3]]]],[11,R[7],E,E,101,[[["self"]],[T]]],[11,R[6],E,E,101,[[["self"]],[T]]],[11,R[8],E,E,101,[[["self"]],[R[9]]]],[11,"into",E,E,102,[[],[U]]],[11,"from",E,E,102,[[[T]],[T]]],[11,R[46],E,E,102,[[["self"]],[T]]],[11,R[47],E,E,102,[[["self"],[T]]]],[11,R[4],E,E,102,[[[U]],[R[3]]]],[11,R[5],E,E,102,[[],[R[3]]]],[11,R[7],E,E,102,[[["self"]],[T]]],[11,R[6],E,E,102,[[["self"]],[T]]],[11,R[8],E,E,102,[[["self"]],[R[9]]]],[11,"into",E,E,103,[[],[U]]],[11,"from",E,E,103,[[[T]],[T]]],[11,R[46],E,E,103,[[["self"]],[T]]],[11,R[47],E,E,103,[[["self"],[T]]]],[11,R[4],E,E,103,[[[U]],[R[3]]]],[11,R[5],E,E,103,[[],[R[3]]]],[11,R[7],E,E,103,[[["self"]],[T]]],[11,R[6],E,E,103,[[["self"]],[T]]],[11,R[8],E,E,103,[[["self"]],[R[9]]]],[11,"into",E,E,104,[[],[U]]],[11,"from",E,E,104,[[[T]],[T]]],[11,R[46],E,E,104,[[["self"]],[T]]],[11,R[47],E,E,104,[[["self"],[T]]]],[11,R[4],E,E,104,[[[U]],[R[3]]]],[11,R[5],E,E,104,[[],[R[3]]]],[11,R[7],E,E,104,[[["self"]],[T]]],[11,R[6],E,E,104,[[["self"]],[T]]],[11,R[8],E,E,104,[[["self"]],[R[9]]]],[11,"into",R[4805],E,106,[[],[U]]],[11,"from",E,E,106,[[[T]],[T]]],[11,R[46],E,E,106,[[["self"]],[T]]],[11,R[47],E,E,106,[[["self"],[T]]]],[11,R[4],E,E,106,[[[U]],[R[3]]]],[11,R[5],E,E,106,[[],[R[3]]]],[11,R[7],E,E,106,[[["self"]],[T]]],[11,R[6],E,E,106,[[["self"]],[T]]],[11,R[8],E,E,106,[[["self"]],[R[9]]]],[11,"into",E,E,107,[[],[U]]],[11,"from",E,E,107,[[[T]],[T]]],[11,R[4],E,E,107,[[[U]],[R[3]]]],[11,R[5],E,E,107,[[],[R[3]]]],[11,R[7],E,E,107,[[["self"]],[T]]],[11,R[6],E,E,107,[[["self"]],[T]]],[11,R[8],E,E,107,[[["self"]],[R[9]]]],[11,"into",R[4779],E,108,[[],[U]]],[11,"from",E,E,108,[[[T]],[T]]],[11,R[46],E,E,108,[[["self"]],[T]]],[11,R[47],E,E,108,[[["self"],[T]]]],[11,R[4],E,E,108,[[[U]],[R[3]]]],[11,R[5],E,E,108,[[],[R[3]]]],[11,R[7],E,E,108,[[["self"]],[T]]],[11,R[6],E,E,108,[[["self"]],[T]]],[11,R[8],E,E,108,[[["self"]],[R[9]]]],[11,R[4793],E,E,108,[[["self"],["k"]],["bool"]]],[11,"into",E,E,109,[[],[U]]],[11,"from",E,E,109,[[[T]],[T]]],[11,R[46],E,E,109,[[["self"]],[T]]],[11,R[47],E,E,109,[[["self"],[T]]]],[11,R[4],E,E,109,[[[U]],[R[3]]]],[11,R[5],E,E,109,[[],[R[3]]]],[11,R[7],E,E,109,[[["self"]],[T]]],[11,R[6],E,E,109,[[["self"]],[T]]],[11,R[8],E,E,109,[[["self"]],[R[9]]]],[11,"into",E,E,110,[[],[U]]],[11,"from",E,E,110,[[[T]],[T]]],[11,R[46],E,E,110,[[["self"]],[T]]],[11,R[47],E,E,110,[[["self"],[T]]]],[11,R[4],E,E,110,[[[U]],[R[3]]]],[11,R[5],E,E,110,[[],[R[3]]]],[11,R[7],E,E,110,[[["self"]],[T]]],[11,R[6],E,E,110,[[["self"]],[T]]],[11,R[8],E,E,110,[[["self"]],[R[9]]]],[11,"into",E,E,111,[[],[U]]],[11,"from",E,E,111,[[[T]],[T]]],[11,R[46],E,E,111,[[["self"]],[T]]],[11,R[47],E,E,111,[[["self"],[T]]]],[11,R[4],E,E,111,[[[U]],[R[3]]]],[11,R[5],E,E,111,[[],[R[3]]]],[11,R[7],E,E,111,[[["self"]],[T]]],[11,R[6],E,E,111,[[["self"]],[T]]],[11,R[8],E,E,111,[[["self"]],[R[9]]]],[11,"into",E,E,112,[[],[U]]],[11,"from",E,E,112,[[[T]],[T]]],[11,R[46],E,E,112,[[["self"]],[T]]],[11,R[47],E,E,112,[[["self"],[T]]]],[11,R[4],E,E,112,[[[U]],[R[3]]]],[11,R[5],E,E,112,[[],[R[3]]]],[11,R[7],E,E,112,[[["self"]],[T]]],[11,R[6],E,E,112,[[["self"]],[T]]],[11,R[8],E,E,112,[[["self"]],[R[9]]]],[11,"into",E,E,113,[[],[U]]],[11,"from",E,E,113,[[[T]],[T]]],[11,R[46],E,E,113,[[["self"]],[T]]],[11,R[47],E,E,113,[[["self"],[T]]]],[11,R[4],E,E,113,[[[U]],[R[3]]]],[11,R[5],E,E,113,[[],[R[3]]]],[11,R[7],E,E,113,[[["self"]],[T]]],[11,R[6],E,E,113,[[["self"]],[T]]],[11,R[8],E,E,113,[[["self"]],[R[9]]]],[11,"into",E,E,114,[[],[U]]],[11,"from",E,E,114,[[[T]],[T]]],[11,R[46],E,E,114,[[["self"]],[T]]],[11,R[47],E,E,114,[[["self"],[T]]]],[11,R[4],E,E,114,[[[U]],[R[3]]]],[11,R[5],E,E,114,[[],[R[3]]]],[11,R[7],E,E,114,[[["self"]],[T]]],[11,R[6],E,E,114,[[["self"]],[T]]],[11,R[8],E,E,114,[[["self"]],[R[9]]]],[11,"into",E,E,115,[[],[U]]],[11,"from",E,E,115,[[[T]],[T]]],[11,R[46],E,E,115,[[["self"]],[T]]],[11,R[47],E,E,115,[[["self"],[T]]]],[11,R[4],E,E,115,[[[U]],[R[3]]]],[11,R[5],E,E,115,[[],[R[3]]]],[11,R[7],E,E,115,[[["self"]],[T]]],[11,R[6],E,E,115,[[["self"]],[T]]],[11,R[8],E,E,115,[[["self"]],[R[9]]]],[11,"into",E,E,116,[[],[U]]],[11,"from",E,E,116,[[[T]],[T]]],[11,R[46],E,E,116,[[["self"]],[T]]],[11,R[47],E,E,116,[[["self"],[T]]]],[11,R[4],E,E,116,[[[U]],[R[3]]]],[11,R[5],E,E,116,[[],[R[3]]]],[11,R[7],E,E,116,[[["self"]],[T]]],[11,R[6],E,E,116,[[["self"]],[T]]],[11,R[8],E,E,116,[[["self"]],[R[9]]]],[11,"into",E,E,117,[[],[U]]],[11,"from",E,E,117,[[[T]],[T]]],[11,R[46],E,E,117,[[["self"]],[T]]],[11,R[47],E,E,117,[[["self"],[T]]]],[11,R[4],E,E,117,[[[U]],[R[3]]]],[11,R[5],E,E,117,[[],[R[3]]]],[11,R[7],E,E,117,[[["self"]],[T]]],[11,R[6],E,E,117,[[["self"]],[T]]],[11,R[8],E,E,117,[[["self"]],[R[9]]]],[11,"into",E,E,118,[[],[U]]],[11,"from",E,E,118,[[[T]],[T]]],[11,R[46],E,E,118,[[["self"]],[T]]],[11,R[47],E,E,118,[[["self"],[T]]]],[11,R[4],E,E,118,[[[U]],[R[3]]]],[11,R[5],E,E,118,[[],[R[3]]]],[11,R[7],E,E,118,[[["self"]],[T]]],[11,R[6],E,E,118,[[["self"]],[T]]],[11,R[8],E,E,118,[[["self"]],[R[9]]]],[11,R[4793],E,E,118,[[["self"],["k"]],["bool"]]],[11,"into",E,E,119,[[],[U]]],[11,"from",E,E,119,[[[T]],[T]]],[11,R[46],E,E,119,[[["self"]],[T]]],[11,R[47],E,E,119,[[["self"],[T]]]],[11,R[4],E,E,119,[[[U]],[R[3]]]],[11,R[5],E,E,119,[[],[R[3]]]],[11,R[7],E,E,119,[[["self"]],[T]]],[11,R[6],E,E,119,[[["self"]],[T]]],[11,R[8],E,E,119,[[["self"]],[R[9]]]],[11,R[4793],E,E,119,[[["self"],["k"]],["bool"]]],[11,"into",E,E,120,[[],[U]]],[11,"from",E,E,120,[[[T]],[T]]],[11,R[46],E,E,120,[[["self"]],[T]]],[11,R[47],E,E,120,[[["self"],[T]]]],[11,R[4],E,E,120,[[[U]],[R[3]]]],[11,R[5],E,E,120,[[],[R[3]]]],[11,R[7],E,E,120,[[["self"]],[T]]],[11,R[6],E,E,120,[[["self"]],[T]]],[11,R[8],E,E,120,[[["self"]],[R[9]]]],[11,"into",R[4806],E,121,[[],[U]]],[11,"from",E,E,121,[[[T]],[T]]],[11,R[46],E,E,121,[[["self"]],[T]]],[11,R[47],E,E,121,[[["self"],[T]]]],[11,R[4],E,E,121,[[[U]],[R[3]]]],[11,R[5],E,E,121,[[],[R[3]]]],[11,R[7],E,E,121,[[["self"]],[T]]],[11,R[6],E,E,121,[[["self"]],[T]]],[11,R[8],E,E,121,[[["self"]],[R[9]]]],[11,R[4793],E,E,121,[[["self"],["k"]],["bool"]]],[11,"into",E,E,122,[[],[U]]],[11,"from",E,E,122,[[[T]],[T]]],[11,R[46],E,E,122,[[["self"]],[T]]],[11,R[47],E,E,122,[[["self"],[T]]]],[11,R[4],E,E,122,[[[U]],[R[3]]]],[11,R[5],E,E,122,[[],[R[3]]]],[11,R[7],E,E,122,[[["self"]],[T]]],[11,R[6],E,E,122,[[["self"]],[T]]],[11,R[8],E,E,122,[[["self"]],[R[9]]]],[11,R[4793],E,E,122,[[["self"],["k"]],["bool"]]],[11,"into",E,E,123,[[],[U]]],[11,"from",E,E,123,[[[T]],[T]]],[11,R[46],E,E,123,[[["self"]],[T]]],[11,R[47],E,E,123,[[["self"],[T]]]],[11,R[4],E,E,123,[[[U]],[R[3]]]],[11,R[5],E,E,123,[[],[R[3]]]],[11,R[7],E,E,123,[[["self"]],[T]]],[11,R[6],E,E,123,[[["self"]],[T]]],[11,R[8],E,E,123,[[["self"]],[R[9]]]],[11,R[4793],E,E,123,[[["self"],["k"]],["bool"]]],[11,R[4810],R[4791],E,35,[[["self"],["str"]],[["export"],[R[23],["export"]]]]],[11,R[4808],E,E,35,[[["self"]],["vec"]]],[11,R[4809],E,E,35,[[["self"],["export"],["str"]],[R[23]]]],[11,R[4810],R[4784],E,0,[[["self"],["str"]],[["export"],[R[23],["export"]]]]],[11,R[4808],E,E,0,[[["self"]],["vec"]]],[11,R[4809],E,E,0,[[["self"],["export"],["str"]],[R[23]]]],[11,R[4811],R[4790],E,31,[[["self"]],["export"]]],[11,R[4811],R[4732],E,29,[[["self"]],["export"]]],[11,R[4811],R[4739],E,45,[[["self"]],["export"]]],[11,R[4811],R[4801],E,61,[[["self"]],["export"]]],[11,R[4811],R[4786],E,69,[[["self"]],["export"]]],[11,"load",R[4792],E,128,[[["self"],[R[4717]],["ctx"],[R[4812]]],[R[3]]]],[11,"call",E,E,129,[[["self"],["usize"]],[[R[3],["u128"]],["u128"]]]],[11,"to_native",R[4794],E,42,[[]]],[11,R[4813],E,E,42,[[],["self"]]],[11,R[83],R[4805],E,106,[[],[R[4817]]]],[11,R[83],R[4779],E,110,[[],[R[4814]]]],[11,"extend",R[4791],E,32,[[["self"],[R[82]]]]],[11,"extend",R[4800],E,56,[[["self"],[R[82]]]]],[11,"clone",R[4788],E,4,[[["self"]],[R[5927]]]],[11,"clone",R[4720],E,16,[[["self"]],[R[4828]]]],[11,"clone",E,E,17,[[["self"]],[R[4836]]]],[11,"clone",E,E,19,[[["self"]],[R[4829]]]],[11,"clone",E,E,21,[[["self"]],[R[4744]]]],[11,"clone",R[4732],E,28,[[["self"]],["context"]]],[11,"clone",E,E,29,[[["self"]],["export"]]],[11,"clone",E,E,30,[[["self"]],["funcpointer"]]],[11,"clone",R[4790],E,31,[[["self"]],["self"]]],[11,"clone",R[4794],E,42,[[["self"]],["self"]]],[11,"clone",R[4739],E,45,[[["self"]],["memory"]]],[11,"clone",E,E,40,[[["self"]],[R[226]]]],[11,"clone",E,E,46,[[["self"]],["self"]]],[11,"clone",E,E,47,[[["self"]],["self"]]],[11,"clone",R[4785],E,48,[[["self"]],[R[4717]]]],[11,"clone",E,E,52,[[["self"]],["self"]]],[11,"clone",E,E,51,[[["self"]],[R[4830]]]],[11,"clone",E,E,49,[[["self"]],["datainitializer"]]],[11,"clone",E,E,50,[[["self"]],["tableinitializer"]]],[11,"clone",E,E,54,[[["self"]],[R[4815]]]],[11,"clone",E,E,134,[[["self"]],[R[4831]]]],[11,"clone",E,E,135,[[["self"]],["nameindex"]]],[11,"clone",R[4800],E,136,[[["self"]],["boxedmap"]]],[11,"clone",E,E,56,[[["self"]],["map"]]],[11,"clone",R[4801],E,61,[[["self"]],["self"]]],[11,"clone",R[4786],E,68,[[["self"]],["wasm"]]],[11,"clone",R[4803],E,74,[[["self"]],["type"]]],[11,"clone",E,E,75,[[["self"]],["value"]]],[11,"clone",E,E,76,[[["self"]],[R[4832]]]],[11,"clone",E,E,70,[[["self"]],[R[4751]]]],[11,"clone",E,E,77,[[["self"]],[R[4833]]]],[11,"clone",E,E,71,[[["self"]],[R[4816]]]],[11,"clone",E,E,72,[[["self"]],["globalinit"]]],[11,"clone",E,E,73,[[["self"]],[R[4745]]]],[11,"clone",E,E,82,[[["self"]],["funcsig"]]],[11,"clone",E,E,83,[[["self"]],[R[4759]]]],[11,"clone",E,E,84,[[["self"]],[R[4820]]]],[11,"clone",E,E,85,[[["self"]],[R[4821]]]],[11,"clone",E,E,86,[[["self"]],[R[4762]]]],[11,"clone",E,E,87,[[["self"]],[R[4822]]]],[11,"clone",E,E,88,[[["self"]],[R[4823]]]],[11,"clone",E,E,89,[[["self"]],[R[4764]]]],[11,"clone",E,E,90,[[["self"]],[R[4824]]]],[11,"clone",E,E,91,[[["self"]],[R[4825]]]],[11,"clone",E,E,92,[[["self"]],[R[4765]]]],[11,"clone",E,E,93,[[["self"]],[R[4826]]]],[11,"clone",E,E,94,[[["self"]],[R[4827]]]],[11,"clone",E,E,156,[[["self"]],[R[4834]]]],[11,"clone",R[4804],E,95,[[["self"]],["pages"]]],[11,"clone",E,E,96,[[["self"]],["bytes"]]],[11,"clone",R[4787],E,99,[[["self"]],[R[4838]]]],[11,"clone",E,E,100,[[["self"]],["localtable"]]],[11,"clone",E,E,101,[[["self"]],[R[4740]]]],[11,"clone",E,E,102,[[["self"]],["localglobal"]]],[11,"clone",E,E,103,[[["self"]],["sigid"]]],[11,"clone",E,E,104,[[["self"]],["anyfunc"]]],[11,"clone",R[4805],E,106,[[["self"]],[R[4817]]]],[11,"clone",R[4779],E,108,[[["self"]],[R[4818]]]],[11,"clone",E,E,118,[[["self"]],[R[4781]]]],[11,"clone",E,E,109,[[["self"]],[R[4780]]]],[11,"clone",E,E,110,[[["self"]],[R[4814]]]],[11,"clone",E,E,119,[[["self"]],[R[4835]]]],[11,"clone",E,E,111,[[["self"]],[R[4782]]]],[11,"clone",E,E,120,[[["self"]],["suspendoffset"]]],[11,"clone",E,E,112,[[["self"]],["offsetinfo"]]],[11,"clone",E,E,113,[[["self"]],[R[4819]]]],[11,"clone",E,E,114,[[["self"]],["wasmfunctionstatedump"]]],[11,"clone",E,E,115,[[["self"]],[R[4777]]]],[11,"clone",E,E,116,[[["self"]],[R[4776]]]],[11,"clone",E,E,117,[[["self"]],[R[4771]]]],[11,"clone",R[4806],E,121,[[["self"]],["gpr"]]],[11,"clone",E,E,122,[[["self"]],["xmm"]]],[11,"clone",E,E,123,[[["self"]],[R[4778]]]],[11,"into",R[4720],E,24,[[],[R[4741]]]],[11,"into",E,E,25,[[],[R[4741]]]],[11,"into",E,E,26,[[],[R[4741]]]],[11,R[77],R[4803],E,83,[[["self"],[R[4759]]],[[R[50]],[R[23],[R[50]]]]]],[11,"lt",E,E,83,[[["self"],[R[4759]]],["bool"]]],[11,"le",E,E,83,[[["self"],[R[4759]]],["bool"]]],[11,"gt",E,E,83,[[["self"],[R[4759]]],["bool"]]],[11,"ge",E,E,83,[[["self"],[R[4759]]],["bool"]]],[11,R[77],E,E,84,[[["self"],[R[4820]]],[[R[50]],[R[23],[R[50]]]]]],[11,"lt",E,E,84,[[["self"],[R[4820]]],["bool"]]],[11,"le",E,E,84,[[["self"],[R[4820]]],["bool"]]],[11,"gt",E,E,84,[[["self"],[R[4820]]],["bool"]]],[11,"ge",E,E,84,[[["self"],[R[4820]]],["bool"]]],[11,R[77],E,E,85,[[["self"],[R[4821]]],[[R[50]],[R[23],[R[50]]]]]],[11,"lt",E,E,85,[[["self"],[R[4821]]],["bool"]]],[11,"le",E,E,85,[[["self"],[R[4821]]],["bool"]]],[11,"gt",E,E,85,[[["self"],[R[4821]]],["bool"]]],[11,"ge",E,E,85,[[["self"],[R[4821]]],["bool"]]],[11,R[77],E,E,86,[[["self"],[R[4762]]],[[R[50]],[R[23],[R[50]]]]]],[11,"lt",E,E,86,[[["self"],[R[4762]]],["bool"]]],[11,"le",E,E,86,[[["self"],[R[4762]]],["bool"]]],[11,"gt",E,E,86,[[["self"],[R[4762]]],["bool"]]],[11,"ge",E,E,86,[[["self"],[R[4762]]],["bool"]]],[11,R[77],E,E,87,[[["self"],[R[4822]]],[[R[50]],[R[23],[R[50]]]]]],[11,"lt",E,E,87,[[["self"],[R[4822]]],["bool"]]],[11,"le",E,E,87,[[["self"],[R[4822]]],["bool"]]],[11,"gt",E,E,87,[[["self"],[R[4822]]],["bool"]]],[11,"ge",E,E,87,[[["self"],[R[4822]]],["bool"]]],[11,R[77],E,E,88,[[["self"],[R[4823]]],[[R[50]],[R[23],[R[50]]]]]],[11,"lt",E,E,88,[[["self"],[R[4823]]],["bool"]]],[11,"le",E,E,88,[[["self"],[R[4823]]],["bool"]]],[11,"gt",E,E,88,[[["self"],[R[4823]]],["bool"]]],[11,"ge",E,E,88,[[["self"],[R[4823]]],["bool"]]],[11,R[77],E,E,89,[[["self"],[R[4764]]],[[R[50]],[R[23],[R[50]]]]]],[11,"lt",E,E,89,[[["self"],[R[4764]]],["bool"]]],[11,"le",E,E,89,[[["self"],[R[4764]]],["bool"]]],[11,"gt",E,E,89,[[["self"],[R[4764]]],["bool"]]],[11,"ge",E,E,89,[[["self"],[R[4764]]],["bool"]]],[11,R[77],E,E,90,[[["self"],[R[4824]]],[[R[50]],[R[23],[R[50]]]]]],[11,"lt",E,E,90,[[["self"],[R[4824]]],["bool"]]],[11,"le",E,E,90,[[["self"],[R[4824]]],["bool"]]],[11,"gt",E,E,90,[[["self"],[R[4824]]],["bool"]]],[11,"ge",E,E,90,[[["self"],[R[4824]]],["bool"]]],[11,R[77],E,E,91,[[["self"],[R[4825]]],[[R[50]],[R[23],[R[50]]]]]],[11,"lt",E,E,91,[[["self"],[R[4825]]],["bool"]]],[11,"le",E,E,91,[[["self"],[R[4825]]],["bool"]]],[11,"gt",E,E,91,[[["self"],[R[4825]]],["bool"]]],[11,"ge",E,E,91,[[["self"],[R[4825]]],["bool"]]],[11,R[77],E,E,92,[[["self"],[R[4765]]],[[R[50]],[R[23],[R[50]]]]]],[11,"lt",E,E,92,[[["self"],[R[4765]]],["bool"]]],[11,"le",E,E,92,[[["self"],[R[4765]]],["bool"]]],[11,"gt",E,E,92,[[["self"],[R[4765]]],["bool"]]],[11,"ge",E,E,92,[[["self"],[R[4765]]],["bool"]]],[11,R[77],E,E,93,[[["self"],[R[4826]]],[[R[50]],[R[23],[R[50]]]]]],[11,"lt",E,E,93,[[["self"],[R[4826]]],["bool"]]],[11,"le",E,E,93,[[["self"],[R[4826]]],["bool"]]],[11,"gt",E,E,93,[[["self"],[R[4826]]],["bool"]]],[11,"ge",E,E,93,[[["self"],[R[4826]]],["bool"]]],[11,R[77],E,E,94,[[["self"],[R[4827]]],[[R[50]],[R[23],[R[50]]]]]],[11,"lt",E,E,94,[[["self"],[R[4827]]],["bool"]]],[11,"le",E,E,94,[[["self"],[R[4827]]],["bool"]]],[11,"gt",E,E,94,[[["self"],[R[4827]]],["bool"]]],[11,"ge",E,E,94,[[["self"],[R[4827]]],["bool"]]],[11,R[77],R[4804],E,95,[[["self"],["pages"]],[[R[50]],[R[23],[R[50]]]]]],[11,"lt",E,E,95,[[["self"],["pages"]],["bool"]]],[11,"le",E,E,95,[[["self"],["pages"]],["bool"]]],[11,"gt",E,E,95,[[["self"],["pages"]],["bool"]]],[11,"ge",E,E,95,[[["self"],["pages"]],["bool"]]],[11,R[77],E,E,96,[[["self"],["bytes"]],[[R[50]],[R[23],[R[50]]]]]],[11,"lt",E,E,96,[[["self"],["bytes"]],["bool"]]],[11,"le",E,E,96,[[["self"],["bytes"]],["bool"]]],[11,"gt",E,E,96,[[["self"],["bytes"]],["bool"]]],[11,"ge",E,E,96,[[["self"],["bytes"]],["bool"]]],[11,R[77],R[4806],E,121,[[["self"],["gpr"]],[[R[50]],[R[23],[R[50]]]]]],[11,R[77],E,E,122,[[["self"],["xmm"]],[[R[50]],[R[23],[R[50]]]]]],[11,"cmp",R[4803],E,83,[[["self"],[R[4759]]],[R[50]]]],[11,"cmp",E,E,84,[[["self"],[R[4820]]],[R[50]]]],[11,"cmp",E,E,85,[[["self"],[R[4821]]],[R[50]]]],[11,"cmp",E,E,86,[[["self"],[R[4762]]],[R[50]]]],[11,"cmp",E,E,87,[[["self"],[R[4822]]],[R[50]]]],[11,"cmp",E,E,88,[[["self"],[R[4823]]],[R[50]]]],[11,"cmp",E,E,89,[[["self"],[R[4764]]],[R[50]]]],[11,"cmp",E,E,90,[[["self"],[R[4824]]],[R[50]]]],[11,"cmp",E,E,91,[[["self"],[R[4825]]],[R[50]]]],[11,"cmp",E,E,92,[[["self"],[R[4765]]],[R[50]]]],[11,"cmp",E,E,93,[[["self"],[R[4826]]],[R[50]]]],[11,"cmp",E,E,94,[[["self"],[R[4827]]],[R[50]]]],[11,"cmp",R[4804],E,95,[[["self"],["pages"]],[R[50]]]],[11,"cmp",E,E,96,[[["self"],["bytes"]],[R[50]]]],[11,"cmp",R[4806],E,121,[[["self"],["gpr"]],[R[50]]]],[11,"cmp",E,E,122,[[["self"],["xmm"]],[R[50]]]],[11,"eq",R[4788],E,4,[[["self"],[R[5927]]],["bool"]]],[11,"ne",E,E,4,[[["self"],[R[5927]]],["bool"]]],[11,"eq",R[4720],E,16,[[["self"],[R[4828]]],["bool"]]],[11,"eq",E,E,17,[[["self"],[R[4836]]],["bool"]]],[11,"eq",E,E,18,[[["self"],[R[4753]]],["bool"]]],[11,"eq",E,E,19,[[["self"],[R[4829]]],["bool"]]],[11,"eq",E,E,20,[[["self"],[R[5928]]],["bool"]]],[11,"eq",E,E,21,[[["self"],[R[4744]]],["bool"]]],[11,"eq",E,E,22,[[["self"],["error"]],["bool"]]],[11,"eq",R[4794],E,42,[[["self"]],["bool"]]],[11,"eq",R[4739],E,40,[[["self"],[R[226]]],["bool"]]],[11,"eq",R[4785],E,51,[[["self"],[R[4830]]],["bool"]]],[11,"ne",E,E,51,[[["self"],[R[4830]]],["bool"]]],[11,"eq",E,E,134,[[["self"],[R[4831]]],["bool"]]],[11,"ne",E,E,134,[[["self"],[R[4831]]],["bool"]]],[11,"eq",E,E,135,[[["self"],["nameindex"]],["bool"]]],[11,"ne",E,E,135,[[["self"],["nameindex"]],["bool"]]],[11,"eq",R[4803],E,74,[[["self"],["type"]],["bool"]]],[11,"eq",E,E,75,[[["self"],["value"]],["bool"]]],[11,"ne",E,E,75,[[["self"],["value"]],["bool"]]],[11,"eq",E,E,76,[[["self"],[R[4832]]],["bool"]]],[11,"eq",E,E,77,[[["self"],[R[4833]]],["bool"]]],[11,"ne",E,E,77,[[["self"],[R[4833]]],["bool"]]],[11,"eq",E,E,71,[[["self"],[R[4816]]],["bool"]]],[11,"ne",E,E,71,[[["self"],[R[4816]]],["bool"]]],[11,"eq",E,E,73,[[["self"],[R[4745]]],["bool"]]],[11,"ne",E,E,73,[[["self"],[R[4745]]],["bool"]]],[11,"eq",E,E,82,[[["self"],["funcsig"]],["bool"]]],[11,"ne",E,E,82,[[["self"],["funcsig"]],["bool"]]],[11,"eq",E,E,83,[[["self"],[R[4759]]],["bool"]]],[11,"ne",E,E,83,[[["self"],[R[4759]]],["bool"]]],[11,"eq",E,E,84,[[["self"],[R[4820]]],["bool"]]],[11,"ne",E,E,84,[[["self"],[R[4820]]],["bool"]]],[11,"eq",E,E,85,[[["self"],[R[4821]]],["bool"]]],[11,"ne",E,E,85,[[["self"],[R[4821]]],["bool"]]],[11,"eq",E,E,86,[[["self"],[R[4762]]],["bool"]]],[11,"ne",E,E,86,[[["self"],[R[4762]]],["bool"]]],[11,"eq",E,E,87,[[["self"],[R[4822]]],["bool"]]],[11,"ne",E,E,87,[[["self"],[R[4822]]],["bool"]]],[11,"eq",E,E,88,[[["self"],[R[4823]]],["bool"]]],[11,"ne",E,E,88,[[["self"],[R[4823]]],["bool"]]],[11,"eq",E,E,89,[[["self"],[R[4764]]],["bool"]]],[11,"ne",E,E,89,[[["self"],[R[4764]]],["bool"]]],[11,"eq",E,E,90,[[["self"],[R[4824]]],["bool"]]],[11,"ne",E,E,90,[[["self"],[R[4824]]],["bool"]]],[11,"eq",E,E,91,[[["self"],[R[4825]]],["bool"]]],[11,"ne",E,E,91,[[["self"],[R[4825]]],["bool"]]],[11,"eq",E,E,92,[[["self"],[R[4765]]],["bool"]]],[11,"ne",E,E,92,[[["self"],[R[4765]]],["bool"]]],[11,"eq",E,E,93,[[["self"],[R[4826]]],["bool"]]],[11,"ne",E,E,93,[[["self"],[R[4826]]],["bool"]]],[11,"eq",E,E,94,[[["self"],[R[4827]]],["bool"]]],[11,"ne",E,E,94,[[["self"],[R[4827]]],["bool"]]],[11,"eq",E,E,156,[[["self"],[R[4834]]],["bool"]]],[11,"ne",E,E,156,[[["self"],[R[4834]]],["bool"]]],[11,"eq",R[4804],E,95,[[["self"],["pages"]],["bool"]]],[11,"ne",E,E,95,[[["self"],["pages"]],["bool"]]],[11,"eq",E,E,96,[[["self"],["bytes"]],["bool"]]],[11,"ne",E,E,96,[[["self"],["bytes"]],["bool"]]],[11,"eq",R[4779],E,108,[[["self"],[R[4818]]],["bool"]]],[11,"ne",E,E,108,[[["self"],[R[4818]]],["bool"]]],[11,"eq",E,E,118,[[["self"],[R[4781]]],["bool"]]],[11,"ne",E,E,118,[[["self"],[R[4781]]],["bool"]]],[11,"eq",E,E,119,[[["self"],[R[4835]]],["bool"]]],[11,"ne",E,E,119,[[["self"],[R[4835]]],["bool"]]],[11,"eq",R[4806],E,121,[[["self"],["gpr"]],["bool"]]],[11,"eq",E,E,122,[[["self"],["xmm"]],["bool"]]],[11,"eq",E,E,123,[[["self"],[R[4778]]],["bool"]]],[11,"ne",E,E,123,[[["self"],[R[4778]]],["bool"]]],[11,R[45],R[4791],E,32,[[]]],[11,R[45],R[4800],E,56,[[]]],[11,"drop",R[4792],E,39,[[["self"]]]],[11,"drop",R[4787],E,97,[[["self"]]]],[11,"from",R[4788],E,2,[[["error"]],["self"]]],[11,"from",R[4720],E,22,[[[R[4828]]],["self"]]],[11,"from",E,E,22,[[[R[4753]]],["self"]]],[11,"from",E,E,22,[[[R[4829]]],["self"]]],[11,"from",E,E,22,[[[R[5928]]],["self"]]],[11,"from",E,E,22,[[[R[4744]]],["self"]]],[11,"from",E,E,22,[[["vec",[R[4836]]],[R[4836]]],["self"]]],[11,"from",E,E,20,[[[R[4753]]],["self"]]],[11,"from",E,E,20,[[[R[4829]]],["self"]]],[11,"from",E,E,25,[[["error"]],["self"]]],[11,"from",E,E,27,[[[R[4749]]],["self"]]],[11,"from",E,E,16,[[[R[4837]]],[R[4828]]]],[11,"from",R[4799],E,55,[[[R[4749]]],[R[4837]]]],[11,"from",R[4801],E,60,[[["dynfunc"]],["self"]]],[11,"from",R[4803],E,75,[[["i32"]],["self"]]],[11,"from",E,E,75,[[["i64"]],["self"]]],[11,"from",E,E,75,[[["f32"]],["self"]]],[11,"from",E,E,75,[[["f64"]],["self"]]],[11,"from",E,E,75,[[["u128"]],["self"]]],[11,"from",R[4804],E,96,[[["pages"]],["bytes"]]],[11,"from",E,E,95,[[["bytes"]],["pages"]]],[11,"next",R[4732],E,126,[[["self"]],[R[23]]]],[11,"next",R[4791],E,127,[[["self"]],[R[23]]]],[11,"next",R[4800],E,137,[[["self"]],[R[23]]]],[11,"next",E,E,138,[[["self"]],[R[23]]]],[11,"deref",R[4792],E,39,[[["self"]]]],[11,"deref",R[4739],E,44,[[["self"]]]],[11,"deref",E,E,44,[[["self"]]]],[11,"deref",R[4800],E,136,[[["self"]],["slicemap"]]],[11,"deref",E,E,56,[[["self"]],["slicemap"]]],[11,R[17],R[4792],E,39,[[["self"]]]],[11,R[17],R[4800],E,136,[[["self"]],["slicemap"]]],[11,R[17],E,E,56,[[["self"]],["slicemap"]]],[11,"hash",R[4788],E,4,[[["self"],["__h"]]]],[11,"hash",R[4785],E,134,[[["self"],["__h"]]]],[11,"hash",E,E,135,[[["self"],["__h"]]]],[11,"hash",R[4803],E,74,[[["self"],["__h"]]]],[11,"hash",E,E,82,[[["self"],["__h"]]]],[11,"hash",E,E,83,[[["self"],["__h"]]]],[11,"hash",E,E,84,[[["self"],["__h"]]]],[11,"hash",E,E,85,[[["self"],["__h"]]]],[11,"hash",E,E,86,[[["self"],["__h"]]]],[11,"hash",E,E,87,[[["self"],["__h"]]]],[11,"hash",E,E,88,[[["self"],["__h"]]]],[11,"hash",E,E,89,[[["self"],["__h"]]]],[11,"hash",E,E,90,[[["self"],["__h"]]]],[11,"hash",E,E,91,[[["self"],["__h"]]]],[11,"hash",E,E,92,[[["self"],["__h"]]]],[11,"hash",E,E,93,[[["self"],["__h"]]]],[11,"hash",E,E,94,[[["self"],["__h"]]]],[11,"hash",E,E,156,[[["self"],["__h"]]]],[11,"hash",R[4779],E,108,[[["self"],["__h"]]]],[11,"hash",E,E,118,[[["self"],["__h"]]]],[11,"hash",E,E,119,[[["self"],["__h"]]]],[11,"hash",R[4806],E,121,[[["self"],["__h"]]]],[11,"hash",E,E,122,[[["self"],["__h"]]]],[11,"fmt",R[4787],E,124,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,125,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[4788],E,1,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,2,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,4,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[4789],E,7,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,8,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[4720],E,16,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,17,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,18,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,19,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,20,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,21,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,22,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,23,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,24,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,25,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,26,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,27,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[4732],E,28,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,29,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,30,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[4790],E,31,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[4794],E,42,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[4739],E,45,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,40,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[4785],E,48,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,51,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,49,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,50,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,54,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,134,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,135,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[4799],E,55,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[4800],E,136,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,56,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,57,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[4801],E,61,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[4802],E,63,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[4803],E,74,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,75,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,76,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,70,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,77,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,71,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,72,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,73,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,82,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,83,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,84,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,85,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,86,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,87,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,88,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,89,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,90,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,91,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,92,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,93,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,94,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,156,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[4804],E,95,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,96,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[4787],E,97,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,99,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,100,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,101,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,102,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,103,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,104,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[4779],E,108,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,118,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,109,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,110,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,119,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,111,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,120,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,112,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,113,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,114,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,115,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,116,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,117,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[4806],E,121,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,122,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,123,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[4720],E,16,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,17,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,18,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,19,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,20,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,21,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,22,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,23,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,24,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,25,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,26,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[4786],E,64,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[4803],E,74,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,82,[[["self"],[R[10]]],[R[3]]]],[11,"add",R[4804],E,95,[[[T]],["pages"]]],[11,"add",E,E,96,[[[T]],["bytes"]]],[11,"sub",E,E,95,[[[T]],["pages"]]],[11,"sub",E,E,96,[[[T]],["bytes"]]],[11,"index",R[4800],E,57,[[["self"],["k"]],["v"]]],[11,R[51],E,E,57,[[["self"],["k"]],["v"]]],[11,R[81],E,E,56,[[[R[82]]],["self"]]],[11,R[4563],R[4788],E,4,[[["self"],["__s"]],[R[3]]]],[11,R[4563],R[4785],E,48,[[["self"],["__s"]],[R[3]]]],[11,R[4563],E,E,51,[[["self"],["__s"]],[R[3]]]],[11,R[4563],E,E,49,[[["self"],["__s"]],[R[3]]]],[11,R[4563],E,E,50,[[["self"],["__s"]],[R[3]]]],[11,R[4563],E,E,54,[[["self"],["__s"]],[R[3]]]],[11,R[4563],E,E,134,[[["self"],["__s"]],[R[3]]]],[11,R[4563],E,E,135,[[["self"],["__s"]],[R[3]]]],[11,R[4563],R[4800],E,56,[[["self"],["__s"]],[R[3]]]],[11,R[4563],R[4803],E,74,[[["self"],["__s"]],[R[3]]]],[11,R[4563],E,E,75,[[["self"],["__s"]],[R[3]]]],[11,R[4563],E,E,76,[[["self"],["__s"]],[R[3]]]],[11,R[4563],E,E,70,[[["self"],["__s"]],[R[3]]]],[11,R[4563],E,E,77,[[["self"],["__s"]],[R[3]]]],[11,R[4563],E,E,71,[[["self"],["__s"]],[R[3]]]],[11,R[4563],E,E,72,[[["self"],["__s"]],[R[3]]]],[11,R[4563],E,E,73,[[["self"],["__s"]],[R[3]]]],[11,R[4563],E,E,82,[[["self"],["__s"]],[R[3]]]],[11,R[4563],E,E,83,[[["self"],["__s"]],[R[3]]]],[11,R[4563],E,E,84,[[["self"],["__s"]],[R[3]]]],[11,R[4563],E,E,85,[[["self"],["__s"]],[R[3]]]],[11,R[4563],E,E,86,[[["self"],["__s"]],[R[3]]]],[11,R[4563],E,E,87,[[["self"],["__s"]],[R[3]]]],[11,R[4563],E,E,88,[[["self"],["__s"]],[R[3]]]],[11,R[4563],E,E,89,[[["self"],["__s"]],[R[3]]]],[11,R[4563],E,E,90,[[["self"],["__s"]],[R[3]]]],[11,R[4563],E,E,91,[[["self"],["__s"]],[R[3]]]],[11,R[4563],E,E,92,[[["self"],["__s"]],[R[3]]]],[11,R[4563],E,E,93,[[["self"],["__s"]],[R[3]]]],[11,R[4563],E,E,94,[[["self"],["__s"]],[R[3]]]],[11,R[4563],E,E,156,[[["self"],["__s"]],[R[3]]]],[11,R[4563],R[4804],E,95,[[["self"],["__s"]],[R[3]]]],[11,R[4563],E,E,96,[[["self"],["__s"]],[R[3]]]],[11,R[4563],R[4779],E,114,[[["self"],["__s"]],[R[3]]]],[11,R[4563],E,E,115,[[["self"],["__s"]],[R[3]]]],[11,R[4563],E,E,116,[[["self"],["__s"]],[R[3]]]],[11,R[4354],R[4788],E,4,[[["__d"]],[R[3]]]],[11,R[4354],R[4785],E,48,[[["__d"]],[R[3]]]],[11,R[4354],E,E,51,[[["__d"]],[R[3]]]],[11,R[4354],E,E,49,[[["__d"]],[R[3]]]],[11,R[4354],E,E,50,[[["__d"]],[R[3]]]],[11,R[4354],E,E,54,[[["__d"]],[R[3]]]],[11,R[4354],E,E,134,[[["__d"]],[R[3]]]],[11,R[4354],E,E,135,[[["__d"]],[R[3]]]],[11,R[4354],R[4800],E,56,[[["__d"]],[R[3]]]],[11,R[4354],R[4803],E,74,[[["__d"]],[R[3]]]],[11,R[4354],E,E,75,[[["__d"]],[R[3]]]],[11,R[4354],E,E,76,[[["__d"]],[R[3]]]],[11,R[4354],E,E,70,[[["__d"]],[R[3]]]],[11,R[4354],E,E,77,[[["__d"]],[R[3]]]],[11,R[4354],E,E,71,[[["__d"]],[R[3]]]],[11,R[4354],E,E,72,[[["__d"]],[R[3]]]],[11,R[4354],E,E,73,[[["__d"]],[R[3]]]],[11,R[4354],E,E,82,[[["__d"]],[R[3]]]],[11,R[4354],E,E,83,[[["__d"]],[R[3]]]],[11,R[4354],E,E,84,[[["__d"]],[R[3]]]],[11,R[4354],E,E,85,[[["__d"]],[R[3]]]],[11,R[4354],E,E,86,[[["__d"]],[R[3]]]],[11,R[4354],E,E,87,[[["__d"]],[R[3]]]],[11,R[4354],E,E,88,[[["__d"]],[R[3]]]],[11,R[4354],E,E,89,[[["__d"]],[R[3]]]],[11,R[4354],E,E,90,[[["__d"]],[R[3]]]],[11,R[4354],E,E,91,[[["__d"]],[R[3]]]],[11,R[4354],E,E,92,[[["__d"]],[R[3]]]],[11,R[4354],E,E,93,[[["__d"]],[R[3]]]],[11,R[4354],E,E,94,[[["__d"]],[R[3]]]],[11,R[4354],E,E,156,[[["__d"]],[R[3]]]],[11,R[4354],R[4804],E,95,[[["__d"]],[R[3]]]],[11,R[4354],E,E,96,[[["__d"]],[R[3]]]],[11,R[4354],R[4779],E,114,[[["__d"]],[R[3]]]],[11,R[4354],E,E,115,[[["__d"]],[R[3]]]],[11,R[4354],E,E,116,[[["__d"]],[R[3]]]],[11,"new",R[4787],E,125,[[[R[4783]],[R[4719]]],["linkresult"]]],[11,"imported_func",E,E,125,[[["self"],[R[4821]]],[R[4838]]]]],"p":[[3,R[6054]],[4,R[4839]],[4,"Error"],[8,"Cache"],[3,"WasmHash"],[3,"Artifact"],[3,R[4840]],[4,"Event"],[4,R[4841]],[8,R[4842]],[8,R[4843]],[8,R[4844]],[3,R[4845]],[3,R[4846]],[3,"EventSink"],[3,R[4847]],[4,R[4727]],[4,R[5953]],[4,R[4728]],[4,R[4729]],[4,R[5965]],[4,R[4730]],[4,"Error"],[4,R[6055]],[4,R[6056]],[4,R[4848]],[4,R[4849]],[4,R[4692]],[4,"Context"],[4,"Export"],[3,R[4850]],[3,"Global"],[3,R[4851]],[8,R[4852]],[8,"IsExport"],[3,"Namespace"],[3,"DynFunc"],[8,"Loader"],[8,R[6054]],[3,"CodeMemory"],[4,R[257]],[3,R[4853]],[3,"WasmPtr"],[3,R[4854]],[3,R[6008]],[3,"Memory"],[3,R[4855]],[3,R[4856]],[3,"ModuleInfo"],[3,R[4857]],[3,R[4858]],[4,R[4859]],[3,"Module"],[3,R[4860]],[3,R[4861]],[4,R[6057]],[3,"Map"],[3,"SliceMap"],[4,"Element"],[4,R[4862]],[3,"Anyfunc"],[3,"Table"],[3,R[4863]],[3,R[4864]],[4,R[4865]],[8,R[4866]],[8,R[4867]],[8,"TrapEarly"],[3,"Wasm"],[3,"Func"],[3,R[4868]],[3,R[4869]],[3,R[5911]],[3,R[4870]],[4,"Type"],[4,"Value"],[4,R[4871]],[4,R[4872]],[4,R[4873]],[8,R[4874]],[8,R[4875]],[8,R[4876]],[3,"FuncSig"],[3,R[5913]],[3,R[4877]],[3,R[4878]],[3,R[4879]],[3,R[4880]],[3,R[4881]],[3,R[5912]],[3,R[4882]],[3,R[4883]],[3,R[4884]],[3,R[4885]],[3,R[4886]],[3,"Pages"],[3,"Bytes"],[3,"Ctx"],[3,"Intrinsics"],[3,R[4887]],[3,"LocalTable"],[3,R[4888]],[3,R[4889]],[3,"SigId"],[3,"Anyfunc"],[3,R[4890]],[3,R[4891]],[3,"FaultInfo"],[3,R[4892]],[3,R[4893]],[3,R[4894]],[3,R[4895]],[3,"OffsetInfo"],[3,R[4896]],[3,R[4897]],[3,R[4898]],[3,R[4899]],[3,R[4900]],[4,R[4901]],[4,R[4902]],[4,R[4903]],[4,"GPR"],[4,"XMM"],[4,R[4904]],[3,R[4907]],[3,R[4908]],[3,"ExportIter"],[3,R[4909]],[3,R[4910]],[3,R[4911]],[3,R[6007]],[3,R[4912]],[3,"Array"],[3,"Item"],[3,R[4913]],[3,"NameIndex"],[3,"BoxedMap"],[3,"Iter"],[3,R[631]],[4,"CallTarget"],[4,R[4914]],[4,R[4915]],[3,"Host"],[3,"S0"],[3,"S1"],[3,"S2"],[3,"S3"],[3,"S4"],[3,"S5"],[3,"S6"],[3,"S7"],[3,"S8"],[3,"S9"],[3,"S10"],[3,"S11"],[3,"S12"],[3,"SigIndex"],[3,"Func"]]};
searchIndex["wasmer_singlepass_backend"]={"doc":E,"i":[[3,R[4844],R[5520],E,N,N],[3,R[4842],E,E,N,N],[11,"get_state_diff",E,E,0,[[["machine"],[R[4782]]],["usize"]]],[0,"protect_unix",E,"Installing signal handlers allows us to handle traps and…",N,N],[4,R[5522],R[5521],E,N,N],[13,"Trap",E,E,1,N],[13,"Error",E,E,1,N],[5,"trigger_trap",E,E,N,[[]]],[5,"call_protected",E,E,N,[[[R[23],[R[4772]]],[R[4772]]],[[R[3],[R[5519]]],[R[5519]]]]],[5,"throw",E,E,N,[[["any"],["box",["any"]]]]],[17,"TRAP_EARLY_DATA",E,E,N,N],[6,"SinglePassCompiler",R[5520],E,N,N],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[4],E,E,0,[[[U]],[R[3]]]],[11,R[5],E,E,0,[[],[R[3]]]],[11,R[7],E,E,0,[[["self"]],[T]]],[11,R[6],E,E,0,[[["self"]],[T]]],[11,R[8],E,E,0,[[["self"]],[R[9]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[4],E,E,2,[[[U]],[R[3]]]],[11,R[5],E,E,2,[[],[R[3]]]],[11,R[7],E,E,2,[[["self"]],[T]]],[11,R[6],E,E,2,[[["self"]],[T]]],[11,R[8],E,E,2,[[["self"]],[R[9]]]],[11,"into",R[5521],E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[4],E,E,1,[[[U]],[R[3]]]],[11,R[5],E,E,1,[[],[R[3]]]],[11,R[7],E,E,1,[[["self"]],[T]]],[11,R[6],E,E,1,[[["self"]],[T]]],[11,R[8],E,E,1,[[["self"]],[R[9]]]]],"p":[[3,R[4844]],[4,R[5522]],[3,R[4842]]]};
searchIndex["wasmer_wasi"]={"doc":E,"i":[[3,"ExitCode",R[5466],"This is returned in the Box RuntimeError::Error variant.…",N,N],[12,"code",E,E,0,N],[5,"is_wasi_module",E,"Check if a provided module is compiled with WASI support",N,[[["module"]],["bool"]]],[5,"generate_import_object",E,E,N,[[["vec"],["string"],["vec",["u8"]],["vec",["string"]],["vec",["vec"]]],[R[4783]]]],[0,"state",E,"WARNING: the API exposed here is unstable and very…",N,N],[3,"Inode",R[5453],R[5452],N,N],[3,R[5514],E,E,N,N],[3,R[5518],E,E,N,N],[3,"HostFile",E,"A thin wrapper around `std::fs::File`",N,N],[12,"inner",E,E,1,N],[12,"host_path",E,E,1,N],[3,"Stdout",E,E,N,N],[3,"Stderr",E,E,N,N],[3,"Stdin",E,E,N,N],[3,"InodeVal",E,"A file that Wasi knows about that may or may not be open",N,N],[12,"stat",E,E,2,N],[12,"is_preopened",E,E,2,N],[12,"name",E,E,2,N],[12,"kind",E,E,2,N],[3,"Fd",E,E,N,N],[12,"rights",E,E,3,N],[12,"rights_inheriting",E,E,3,N],[12,"flags",E,E,3,N],[12,"offset",E,E,3,N],[12,"open_flags",E,E,3,N],[12,"inode",E,E,3,N],[3,"WasiFs",E,"Warning, modifying these fields directly may cause…",N,N],[12,"preopen_fds",E,E,4,N],[12,"name_map",E,E,4,N],[12,"inodes",E,E,4,N],[12,"fd_map",E,E,4,N],[12,"next_fd",E,E,4,N],[12,"orphan_fds",E,"for fds still open after the file has been deleted",4,N],[12,"stdout",E,E,4,N],[12,"stderr",E,E,4,N],[12,"stdin",E,E,4,N],[3,"WasiState",E,E,N,N],[12,"fs",E,E,5,N],[12,"args",E,E,5,N],[12,"envs",E,E,5,N],[4,R[5513],E,"Error type for external users",N,N],[13,"BaseNotDirectory",E,"The fd given as a base was not a directory so the…",6,N],[13,"NotAFile",E,"Expected a file but found not a file",6,N],[13,"InvalidFd",E,"The fd given was not usable",6,N],[13,"AlreadyExists",E,"File exists",6,N],[13,"IOError",E,"Something failed when doing IO. These errors can generally…",6,N],[13,"AddressInUse",E,"The address was in use",6,N],[13,"AddressNotAvailable",E,"The address could not be found",6,N],[13,"BrokenPipe",E,"A pipe was closed",6,N],[13,"ConnectionAborted",E,"The connection was aborted",6,N],[13,"ConnectionRefused",E,"The connection request was refused",6,N],[13,"ConnectionReset",E,"The connection was reset",6,N],[13,"Interrupted",E,"The operation was interrupted before it could finish",6,N],[13,"InvalidData",E,"Invalid internal data, if the argument data is invalid,…",6,N],[13,"InvalidInput",E,"The provided data is invalid",6,N],[13,"NotConnected",E,"Could not perform the operation because there was not an…",6,N],[13,"EntityNotFound",E,"The requested file or directory could not be found",6,N],[13,"PermissionDenied",E,"Caller was not allowed to perform this operation",6,N],[13,"TimedOut",E,"The operation did not complete within the given amount of…",6,N],[13,"UnexpectedEof",E,"Found EOF when EOF was not expected",6,N],[13,"WouldBlock",E,"Operation would block, this error lets the caller know…",6,N],[13,"WriteZero",E,"A call to write returned 0",6,N],[13,"UnknownError",E,"A WASI error without an external name. If you encounter…",6,N],[4,"PollEvent",E,E,N,N],[13,"PollIn",E,"Data available to read",7,N],[13,"PollOut",E,"Data available to write (will still block if data is…",7,N],[13,"PollError",E,"Something didn't work. ignored as input",7,N],[13,"PollHangUp",E,"Connection closed. ignored as input",7,N],[13,"PollInvalid",E,"Invalid request. ignored as input",7,N],[4,"Kind",E,E,N,N],[13,"File",E,E,8,N],[12,"handle",R[5454],"the open file, if it's open",8,N],[12,"path",E,"The path on the host system where the file is located This…",8,N],[13,"Dir",R[5453],E,8,N],[12,"parent",R[5454],"Parent directory",8,N],[12,"path",E,"The path on the host system where the directory is located",8,N],[12,"entries",E,"The entries of a directory are lazily filled.",8,N],[13,"Root",R[5453],"The same as Dir but without the irrelevant bits The root…",8,N],[12,"entries",R[5454],E,8,N],[13,"Symlink",R[5453],"The first two fields are data about the symlink the last…",8,N],[12,"base_po_dir",R[5454],"The preopened dir that this symlink file is relative to…",8,N],[12,"path_to_symlink",E,"The path to the symlink from the `base_po_dir`",8,N],[12,"relative_path",E,"the value of the symlink as a relative path",8,N],[13,"Buffer",R[5453],E,8,N],[12,"buffer",R[5454],E,8,N],[5,"iterate_poll_events",R[5453],E,N,[[[R[5457]]],["polleventiter"]]],[5,"get_wasi_state",E,"Get WasiState from a Ctx This function is unsafe because…",N,[[["ctx"]],["wasistate"]]],[5,"host_file_type_to_wasi_file_type",E,E,N,[[[R[5817]]],[R[5471]]]],[11,"from_wasi_err",E,E,6,[[[R[5455]]],[R[5459]]]],[11,"into_wasi_err",E,E,6,[[],[R[5455]]]],[11,"new",E,E,9,[[],[R[5456]]]],[11,"add",E,E,9,[[["pollevent"]],[R[5456]]]],[11,"build",E,E,9,[[],[R[5457]]]],[11,"new",E,"creates a new host file from a `std::fs::File` and a path",1,[[["pathbuf"],["file"],["bool"]],["self"]]],[11,R[731],E,E,1,[[["self"]],[R[731]]]],[6,"PollEventSet",E,E,N,N],[17,"VIRTUAL_ROOT_FD",E,"the fd value of the virtual root",N,N],[17,"ALL_RIGHTS",E,"all the rights enabled",N,N],[17,"MAX_SYMLINKS",E,"A completely aribtrary \"big enough\" number used as the…",N,N],[8,"WasiFile",E,"This trait relies on your file closing when it goes out of…",N,N],[10,R[5476],E,"the last time the file was accessed in nanoseconds as a…",10,[[["self"]],[R[5458]]]],[10,R[5478],E,"the last time the file was modified in nanoseconds as a…",10,[[["self"]],[R[5458]]]],[10,R[5480],E,"the time at which the file was created in nanoseconds as a…",10,[[["self"]],[R[5458]]]],[11,R[5477],E,R[5502],10,[[["self"],[R[5458]]]]],[11,R[5479],E,R[5503],10,[[["self"],[R[5458]]]]],[11,R[5481],E,R[5504],10,[[["self"],[R[5458]]]]],[10,"size",E,"the size of the file in bytes",10,[[["self"]],["u64"]]],[11,"set_len",E,R[5505],10,[[["self"],[R[5473]]],[[R[3],[R[5459]]],[R[5459]]]]],[11,"unlink",E,R[5506],10,[[["self"]],[[R[3],[R[5459]]],[R[5459]]]]],[11,R[5482],E,R[5507],10,[[["self"]],[[R[3],[R[5459]]],[R[5459]]]]],[11,R[5483],E,R[5508],10,[[["self"],["path"]],[[R[3],[R[5459]]],[R[5459]]]]],[11,R[5484],E,R[5509],10,[[["self"]],[[R[3],["usize",R[5459]]],["usize"],[R[5459]]]]],[11,R[5485],E,R[5510],10,[[["self"]],[[R[23],["i32"]],["i32"]]]],[8,"WasiPath",E,E,N,N],[18,"READ",E,E,3,N],[18,"WRITE",E,E,3,N],[18,"APPEND",E,E,3,N],[18,"TRUNCATE",E,E,3,N],[18,"CREATE",E,E,3,N],[11,"new",E,E,4,[[],[[R[3],["string"]],["string"]]]],[11,"open_file_at",E,"Opens a user-supplied file in the directory specified with…",4,[[["self"],["box",["wasifile"]],["string"],[R[5464]],[R[5460]],["wasifile"],["u16"],[R[5465]]],[[R[5460]],[R[5459]],[R[3],[R[5460],R[5459]]]]]],[11,"swap_file",E,"Change the backing of a given file descriptor Returns the…",4,[[["self"],["box",["wasifile"]],["wasifile"],[R[5460]]],[[R[3],[R[23],R[5459]]],[R[5459]],[R[23],["box"]]]]],[11,"get_inode_at_path",E,"gets a host file from a base directory and a path this…",4,[[["self"],["bool"],["str"],[R[5460]]],[[R[3],["inode",R[5455]]],["inode"],[R[5455]]]]],[11,"get_parent_inode_at_path",E,"Returns the parent Dir or Root that the file at a given…",4,[[["self"],["bool"],["path"],[R[5460]]],[[R[5455]],[R[3],[R[5455]]]]]],[11,"get_fd",E,E,4,[[["self"],[R[5460]]],[[R[5455]],[R[3],["fd",R[5455]]],["fd"]]]],[11,"get_inodeval_mut",E,"gets either a normal inode or an orphaned inode",4,[[["self"],[R[5460]]],[[R[5455]],[R[3],["inodeval",R[5455]]],["inodeval"]]]],[11,"filestat_fd",E,E,4,[[["self"],[R[5460]]],[[R[3],[R[5461],R[5455]]],[R[5461]],[R[5455]]]]],[11,"fdstat",E,E,4,[[["self"],[R[5460]]],[[R[5455]],[R[3],[R[5462],R[5455]]],[R[5462]]]]],[11,"prestat_fd",E,E,4,[[["self"],[R[5460]]],[[R[3],[R[5463],R[5455]]],[R[5455]],[R[5463]]]]],[11,"flush",E,E,4,[[["self"],[R[5460]]],[[R[3],[R[5455]]],[R[5455]]]]],[11,"create_inode",E,"Creates an inode and inserts it given a Kind and some…",4,[[["self"],["string"],["kind"],["bool"]],[[R[3],["inode",R[5455]]],["inode"],[R[5455]]]]],[11,"create_inode_with_default_stat",E,"creates an inode and inserts it given a Kind, does not…",4,[[["self"],["string"],["kind"],["bool"]],["inode"]]],[11,"create_fd",E,E,4,[[["self"],[R[5464]],["u16"],["inode"],[R[5465]]],[[R[3],[R[5460],R[5455]]],[R[5455]],[R[5460]]]]],[11,"remove_inode",E,"This function is unsafe because it's the caller's…",4,[[["self"],["inode"]],[["inodeval"],[R[23],["inodeval"]]]]],[11,"get_stat_for_kind",E,E,4,[[["self"],["kind"]],[[R[5461]],[R[23],[R[5461]]]]]],[11,"freeze",E,"Turn the WasiState into bytes",5,[[["self"]],[["vec",["u8"]],[R[23],["vec"]]]]],[11,"unfreeze",E,"Get a WasiState from bytes",5,[[],[R[23]]]],[0,"types",R[5466],E,N,N],[3,R[5486],R[5467],E,N,N],[12,"buf",E,E,11,N],[12,"buf_len",E,E,11,N],[3,R[5470],E,E,N,N],[12,"d_next",E,E,12,N],[12,"d_ino",E,E,12,N],[12,"d_namlen",E,E,12,N],[12,"d_type",E,E,12,N],[3,R[5487],E,E,N,N],[12,"nbytes",E,E,13,N],[12,"flags",E,E,13,N],[3,R[5489],E,E,N,N],[12,"userdata",E,E,14,N],[12,"error",E,E,14,N],[12,"type_",E,E,14,N],[12,U,E,E,14,N],[3,R[5490],E,E,N,N],[12,R[5468],E,E,15,N],[3,R[5463],E,E,N,N],[12,"pr_type",E,E,16,N],[12,U,E,E,16,N],[3,R[5462],E,E,N,N],[12,"fs_filetype",E,E,17,N],[12,"fs_flags",E,E,17,N],[12,"fs_rights_base",E,E,17,N],[12,"fs_rights_inheriting",E,E,17,N],[3,R[5461],E,E,N,N],[12,"st_dev",E,E,18,N],[12,"st_ino",E,E,18,N],[12,"st_filetype",E,E,18,N],[12,"st_nlink",E,E,18,N],[12,"st_size",E,E,18,N],[12,"st_atim",E,E,18,N],[12,"st_mtim",E,E,18,N],[12,"st_ctim",E,E,18,N],[3,R[5492],E,E,N,N],[12,"buf",E,E,19,N],[12,"buf_len",E,E,19,N],[3,R[5493],E,E,N,N],[12,"userdata",E,E,20,N],[12,"clock_id",E,E,20,N],[12,"timeout",E,E,20,N],[12,"precision",E,E,20,N],[12,"flags",E,E,20,N],[3,R[5494],E,E,N,N],[12,"fd",E,E,21,N],[3,R[5496],E,E,N,N],[12,"userdata",E,E,22,N],[12,"type_",E,E,22,N],[12,U,E,E,22,N],[3,R[5515],E,"Safe Rust wrapper around `__wasi_subscription_t`",N,N],[12,"user_data",E,E,23,N],[12,"event_type",E,E,23,N],[19,R[5488],E,E,N,N],[12,"fd_readwrite",E,E,24,N],[19,R[5491],E,E,N,N],[19,R[5495],E,E,N,N],[4,"EventEnum",E,E,N,N],[13,R[5469],E,E,25,N],[12,"nbytes","wasmer_wasi::types::EventEnum",E,25,N],[12,"flags",E,E,25,N],[4,R[5516],R[5467],E,N,N],[13,"Dir",E,E,26,N],[12,R[5468],"wasmer_wasi::types::PrestatEnum",E,26,N],[4,"EventType",R[5467],"Safe Rust wrapper around `__wasi_subscription_t::type_`…",N,N],[13,"Clock",E,E,27,N],[13,"Read",E,E,27,N],[13,"Write",E,E,27,N],[4,R[5517],E,E,N,N],[13,"Clock",E,E,28,N],[13,R[5469],E,E,28,N],[5,"dirent_to_le_bytes",E,E,N,[[[R[5470]]],[["u8"],["vec",["u8"]]]]],[5,"eventtype_to_str",E,E,N,[[[R[5472]]],["str"]]],[5,"wasi_filetype_to_name",E,E,N,[[[R[5471]]],["str"]]],[5,"print_right_set",E,"function for debugging rights issues",N,[[[R[5464]]]]],[5,"right_to_string",E,"expects a single right, returns None if out of bounds or >…",N,[[[R[5464]]],[[R[23],["str"]],["str"]]]],[6,"__wasi_advice_t",E,E,N,N],[6,"__wasi_clockid_t",E,E,N,N],[6,"__wasi_device_t",E,E,N,N],[6,"__wasi_dircookie_t",E,E,N,N],[6,R[5455],E,E,N,N],[6,"__wasi_eventrwflags_t",E,E,N,N],[6,R[5472],E,E,N,N],[6,"__wasi_exitcode_t",E,E,N,N],[6,R[5460],E,E,N,N],[6,R[5465],E,E,N,N],[6,"__wasi_preopentype_t",E,E,N,N],[6,"__wasi_filedelta_t",E,E,N,N],[6,R[5473],E,E,N,N],[6,R[5471],E,E,N,N],[6,"__wasi_fstflags_t",E,E,N,N],[6,"__wasi_inode_t",E,E,N,N],[6,"__wasi_linkcount_t",E,E,N,N],[6,"__wasi_lookupflags_t",E,E,N,N],[6,"__wasi_oflags_t",E,E,N,N],[6,"__wasi_riflags_t",E,E,N,N],[6,R[5464],E,E,N,N],[6,"__wasi_roflags_t",E,E,N,N],[6,"__wasi_sdflags_t",E,E,N,N],[6,"__wasi_siflags_t",E,E,N,N],[6,"__wasi_signal_t",E,E,N,N],[6,"__wasi_subclockflags_t",E,E,N,N],[6,R[5458],E,E,N,N],[6,"__wasi_userdata_t",E,E,N,N],[6,"__wasi_whence_t",E,E,N,N],[17,"__WASI_ADVICE_DONTNEED",E,E,N,N],[17,"__WASI_ADVICE_NOREUSE",E,E,N,N],[17,"__WASI_ADVICE_NORMAL",E,E,N,N],[17,"__WASI_ADVICE_RANDOM",E,E,N,N],[17,"__WASI_ADVICE_SEQUENTIAL",E,E,N,N],[17,"__WASI_ADVICE_WILLNEED",E,E,N,N],[17,"__WASI_CLOCK_REALTIME",E,E,N,N],[17,"__WASI_CLOCK_MONOTONIC",E,E,N,N],[17,"__WASI_CLOCK_PROCESS_CPUTIME_ID",E,E,N,N],[17,"__WASI_CLOCK_THREAD_CPUTIME_ID",E,E,N,N],[17,"__WASI_DIRCOOKIE_START",E,E,N,N],[17,"__WASI_ESUCCESS",E,E,N,N],[17,"__WASI_E2BIG",E,E,N,N],[17,"__WASI_EACCES",E,E,N,N],[17,"__WASI_EADDRINUSE",E,E,N,N],[17,"__WASI_EADDRNOTAVAIL",E,E,N,N],[17,"__WASI_EAFNOSUPPORT",E,E,N,N],[17,"__WASI_EAGAIN",E,E,N,N],[17,"__WASI_EALREADY",E,E,N,N],[17,"__WASI_EBADF",E,E,N,N],[17,"__WASI_EBADMSG",E,E,N,N],[17,"__WASI_EBUSY",E,E,N,N],[17,"__WASI_ECANCELED",E,E,N,N],[17,"__WASI_ECHILD",E,E,N,N],[17,"__WASI_ECONNABORTED",E,E,N,N],[17,"__WASI_ECONNREFUSED",E,E,N,N],[17,"__WASI_ECONNRESET",E,E,N,N],[17,"__WASI_EDEADLK",E,E,N,N],[17,"__WASI_EDESTADDRREQ",E,E,N,N],[17,"__WASI_EDOM",E,E,N,N],[17,"__WASI_EDQUOT",E,E,N,N],[17,"__WASI_EEXIST",E,E,N,N],[17,"__WASI_EFAULT",E,E,N,N],[17,"__WASI_EFBIG",E,E,N,N],[17,"__WASI_EHOSTUNREACH",E,E,N,N],[17,"__WASI_EIDRM",E,E,N,N],[17,"__WASI_EILSEQ",E,E,N,N],[17,"__WASI_EINPROGRESS",E,E,N,N],[17,"__WASI_EINTR",E,E,N,N],[17,"__WASI_EINVAL",E,E,N,N],[17,"__WASI_EIO",E,E,N,N],[17,"__WASI_EISCONN",E,E,N,N],[17,"__WASI_EISDIR",E,E,N,N],[17,"__WASI_ELOOP",E,E,N,N],[17,"__WASI_EMFILE",E,E,N,N],[17,"__WASI_EMLINK",E,E,N,N],[17,"__WASI_EMSGSIZE",E,E,N,N],[17,"__WASI_EMULTIHOP",E,E,N,N],[17,"__WASI_ENAMETOOLONG",E,E,N,N],[17,"__WASI_ENETDOWN",E,E,N,N],[17,"__WASI_ENETRESET",E,E,N,N],[17,"__WASI_ENETUNREACH",E,E,N,N],[17,"__WASI_ENFILE",E,E,N,N],[17,"__WASI_ENOBUFS",E,E,N,N],[17,"__WASI_ENODEV",E,E,N,N],[17,"__WASI_ENOENT",E,E,N,N],[17,"__WASI_ENOEXEC",E,E,N,N],[17,"__WASI_ENOLCK",E,E,N,N],[17,"__WASI_ENOLINK",E,E,N,N],[17,"__WASI_ENOMEM",E,E,N,N],[17,"__WASI_ENOMSG",E,E,N,N],[17,"__WASI_ENOPROTOOPT",E,E,N,N],[17,"__WASI_ENOSPC",E,E,N,N],[17,"__WASI_ENOSYS",E,E,N,N],[17,"__WASI_ENOTCONN",E,E,N,N],[17,"__WASI_ENOTDIR",E,E,N,N],[17,"__WASI_ENOTEMPTY",E,E,N,N],[17,"__WASI_ENOTRECOVERABLE",E,E,N,N],[17,"__WASI_ENOTSOCK",E,E,N,N],[17,"__WASI_ENOTSUP",E,E,N,N],[17,"__WASI_ENOTTY",E,E,N,N],[17,"__WASI_ENXIO",E,E,N,N],[17,"__WASI_EOVERFLOW",E,E,N,N],[17,"__WASI_EOWNERDEAD",E,E,N,N],[17,"__WASI_EPERM",E,E,N,N],[17,"__WASI_EPIPE",E,E,N,N],[17,"__WASI_EPROTO",E,E,N,N],[17,"__WASI_EPROTONOSUPPORT",E,E,N,N],[17,"__WASI_EPROTOTYPE",E,E,N,N],[17,"__WASI_ERANGE",E,E,N,N],[17,"__WASI_EROFS",E,E,N,N],[17,"__WASI_ESPIPE",E,E,N,N],[17,"__WASI_ESRCH",E,E,N,N],[17,"__WASI_ESTALE",E,E,N,N],[17,"__WASI_ETIMEDOUT",E,E,N,N],[17,"__WASI_ETXTBSY",E,E,N,N],[17,"__WASI_EXDEV",E,E,N,N],[17,"__WASI_ENOTCAPABLE",E,E,N,N],[17,"__WASI_EVENT_FD_READWRITE_HANGUP",E,E,N,N],[17,"__WASI_EVENTTYPE_CLOCK",E,E,N,N],[17,"__WASI_EVENTTYPE_FD_READ",E,E,N,N],[17,"__WASI_EVENTTYPE_FD_WRITE",E,E,N,N],[17,"__WASI_STDIN_FILENO",E,E,N,N],[17,"__WASI_STDOUT_FILENO",E,E,N,N],[17,"__WASI_STDERR_FILENO",E,E,N,N],[17,"__WASI_FDFLAG_APPEND",E,E,N,N],[17,"__WASI_FDFLAG_DSYNC",E,E,N,N],[17,"__WASI_FDFLAG_NONBLOCK",E,E,N,N],[17,"__WASI_FDFLAG_RSYNC",E,E,N,N],[17,"__WASI_FDFLAG_SYNC",E,E,N,N],[17,"__WASI_PREOPENTYPE_DIR",E,E,N,N],[17,"__WASI_FILETYPE_UNKNOWN",E,E,N,N],[17,"__WASI_FILETYPE_BLOCK_DEVICE",E,E,N,N],[17,"__WASI_FILETYPE_CHARACTER_DEVICE",E,E,N,N],[17,"__WASI_FILETYPE_DIRECTORY",E,E,N,N],[17,"__WASI_FILETYPE_REGULAR_FILE",E,E,N,N],[17,"__WASI_FILETYPE_SOCKET_DGRAM",E,E,N,N],[17,"__WASI_FILETYPE_SOCKET_STREAM",E,E,N,N],[17,"__WASI_FILETYPE_SYMBOLIC_LINK",E,E,N,N],[17,"__WASI_FILESTAT_SET_ATIM",E,E,N,N],[17,"__WASI_FILESTAT_SET_ATIM_NOW",E,E,N,N],[17,"__WASI_FILESTAT_SET_MTIM",E,E,N,N],[17,"__WASI_FILESTAT_SET_MTIM_NOW",E,E,N,N],[17,"__WASI_LOOKUP_SYMLINK_FOLLOW",E,E,N,N],[17,"__WASI_O_CREAT",E,E,N,N],[17,"__WASI_O_DIRECTORY",E,E,N,N],[17,"__WASI_O_EXCL",E,E,N,N],[17,"__WASI_O_TRUNC",E,E,N,N],[17,"__WASI_SOCK_RECV_PEEK",E,E,N,N],[17,"__WASI_SOCK_RECV_WAITALL",E,E,N,N],[17,"__WASI_RIGHT_FD_DATASYNC",E,E,N,N],[17,"__WASI_RIGHT_FD_READ",E,E,N,N],[17,"__WASI_RIGHT_FD_SEEK",E,E,N,N],[17,"__WASI_RIGHT_FD_FDSTAT_SET_FLAGS",E,E,N,N],[17,"__WASI_RIGHT_FD_SYNC",E,E,N,N],[17,"__WASI_RIGHT_FD_TELL",E,E,N,N],[17,"__WASI_RIGHT_FD_WRITE",E,E,N,N],[17,"__WASI_RIGHT_FD_ADVISE",E,E,N,N],[17,"__WASI_RIGHT_FD_ALLOCATE",E,E,N,N],[17,"__WASI_RIGHT_PATH_CREATE_DIRECTORY",E,E,N,N],[17,"__WASI_RIGHT_PATH_CREATE_FILE",E,E,N,N],[17,"__WASI_RIGHT_PATH_LINK_SOURCE",E,E,N,N],[17,"__WASI_RIGHT_PATH_LINK_TARGET",E,E,N,N],[17,"__WASI_RIGHT_PATH_OPEN",E,E,N,N],[17,"__WASI_RIGHT_FD_READDIR",E,E,N,N],[17,"__WASI_RIGHT_PATH_READLINK",E,E,N,N],[17,"__WASI_RIGHT_PATH_RENAME_SOURCE",E,E,N,N],[17,"__WASI_RIGHT_PATH_RENAME_TARGET",E,E,N,N],[17,"__WASI_RIGHT_PATH_FILESTAT_GET",E,E,N,N],[17,"__WASI_RIGHT_PATH_FILESTAT_SET_SIZE",E,E,N,N],[17,"__WASI_RIGHT_PATH_FILESTAT_SET_TIMES",E,E,N,N],[17,"__WASI_RIGHT_FD_FILESTAT_GET",E,E,N,N],[17,"__WASI_RIGHT_FD_FILESTAT_SET_SIZE",E,E,N,N],[17,"__WASI_RIGHT_FD_FILESTAT_SET_TIMES",E,E,N,N],[17,"__WASI_RIGHT_PATH_SYMLINK",E,E,N,N],[17,"__WASI_RIGHT_PATH_UNLINK_FILE",E,E,N,N],[17,"__WASI_RIGHT_PATH_REMOVE_DIRECTORY",E,E,N,N],[17,"__WASI_RIGHT_POLL_FD_READWRITE",E,E,N,N],[17,"__WASI_RIGHT_SOCK_SHUTDOWN",E,E,N,N],[17,"__WASI_SOCK_RECV_DATA_TRUNCATED",E,E,N,N],[17,"__WASI_SHUT_RD",E,E,N,N],[17,"__WASI_SHUT_WR",E,E,N,N],[17,"__WASI_SIGABRT",E,E,N,N],[17,"__WASI_SIGALRM",E,E,N,N],[17,"__WASI_SIGBUS",E,E,N,N],[17,"__WASI_SIGCHLD",E,E,N,N],[17,"__WASI_SIGCONT",E,E,N,N],[17,"__WASI_SIGFPE",E,E,N,N],[17,"__WASI_SIGHUP",E,E,N,N],[17,"__WASI_SIGILL",E,E,N,N],[17,"__WASI_SIGINT",E,E,N,N],[17,"__WASI_SIGKILL",E,E,N,N],[17,"__WASI_SIGPIPE",E,E,N,N],[17,"__WASI_SIGQUIT",E,E,N,N],[17,"__WASI_SIGSEGV",E,E,N,N],[17,"__WASI_SIGSTOP",E,E,N,N],[17,"__WASI_SIGSYS",E,E,N,N],[17,"__WASI_SIGTERM",E,E,N,N],[17,"__WASI_SIGTRAP",E,E,N,N],[17,"__WASI_SIGTSTP",E,E,N,N],[17,"__WASI_SIGTTIN",E,E,N,N],[17,"__WASI_SIGTTOU",E,E,N,N],[17,"__WASI_SIGURG",E,E,N,N],[17,"__WASI_SIGUSR1",E,E,N,N],[17,"__WASI_SIGUSR2",E,E,N,N],[17,"__WASI_SIGVTALRM",E,E,N,N],[17,"__WASI_SIGXCPU",E,E,N,N],[17,"__WASI_SIGXFSZ",E,E,N,N],[17,"__WASI_SUBSCRIPTION_CLOCK_ABSTIME",E,E,N,N],[17,"__WASI_WHENCE_CUR",E,E,N,N],[17,"__WASI_WHENCE_END",E,E,N,N],[17,"__WASI_WHENCE_SET",E,E,N,N],[11,"into",R[5466],E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[4],E,E,0,[[[U]],[R[3]]]],[11,R[5],E,E,0,[[],[R[3]]]],[11,R[7],E,E,0,[[["self"]],[T]]],[11,R[6],E,E,0,[[["self"]],[T]]],[11,R[8],E,E,0,[[["self"]],[R[9]]]],[11,"vzip",E,E,0,[[],["v"]]],[11,"into",R[5453],E,29,[[],[U]]],[11,"from",E,E,29,[[[T]],[T]]],[11,R[46],E,E,29,[[["self"]],[T]]],[11,R[47],E,E,29,[[["self"],[T]]]],[11,R[4],E,E,29,[[[U]],[R[3]]]],[11,R[5],E,E,29,[[],[R[3]]]],[11,R[7],E,E,29,[[["self"]],[T]]],[11,R[6],E,E,29,[[["self"]],[T]]],[11,R[8],E,E,29,[[["self"]],[R[9]]]],[11,R[4793],E,E,29,[[["self"],["k"]],["bool"]]],[11,"vzip",E,E,29,[[],["v"]]],[11,R[5474],E,E,29,[[["self"],[R[5475]]],[[R[3],["ok","error"]],["ok"],["error"]]]],[11,"into",E,E,9,[[],[U]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[46],E,E,9,[[["self"]],[T]]],[11,R[47],E,E,9,[[["self"],[T]]]],[11,R[4],E,E,9,[[[U]],[R[3]]]],[11,R[5],E,E,9,[[],[R[3]]]],[11,R[7],E,E,9,[[["self"]],[T]]],[11,R[6],E,E,9,[[["self"]],[T]]],[11,R[8],E,E,9,[[["self"]],[R[9]]]],[11,"vzip",E,E,9,[[],["v"]]],[11,"into",E,E,30,[[],[U]]],[11,R[45],E,E,30,[[],["i"]]],[11,"from",E,E,30,[[[T]],[T]]],[11,R[4],E,E,30,[[[U]],[R[3]]]],[11,R[5],E,E,30,[[],[R[3]]]],[11,R[7],E,E,30,[[["self"]],[T]]],[11,R[6],E,E,30,[[["self"]],[T]]],[11,R[8],E,E,30,[[["self"]],[R[9]]]],[11,"vzip",E,E,30,[[],["v"]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[4],E,E,1,[[[U]],[R[3]]]],[11,R[5],E,E,1,[[],[R[3]]]],[11,R[7],E,E,1,[[["self"]],[T]]],[11,R[6],E,E,1,[[["self"]],[T]]],[11,R[8],E,E,1,[[["self"]],[R[9]]]],[11,"vzip",E,E,1,[[],["v"]]],[11,R[5474],E,E,1,[[["self"],[R[5475]]],[[R[3],["ok","error"]],["ok"],["error"]]]],[11,"into",E,E,31,[[],[U]]],[11,"from",E,E,31,[[[T]],[T]]],[11,R[4],E,E,31,[[[U]],[R[3]]]],[11,R[5],E,E,31,[[],[R[3]]]],[11,R[7],E,E,31,[[["self"]],[T]]],[11,R[6],E,E,31,[[["self"]],[T]]],[11,R[8],E,E,31,[[["self"]],[R[9]]]],[11,"vzip",E,E,31,[[],["v"]]],[11,R[5474],E,E,31,[[["self"],[R[5475]]],[[R[3],["ok","error"]],["ok"],["error"]]]],[11,"into",E,E,32,[[],[U]]],[11,"from",E,E,32,[[[T]],[T]]],[11,R[4],E,E,32,[[[U]],[R[3]]]],[11,R[5],E,E,32,[[],[R[3]]]],[11,R[7],E,E,32,[[["self"]],[T]]],[11,R[6],E,E,32,[[["self"]],[T]]],[11,R[8],E,E,32,[[["self"]],[R[9]]]],[11,"vzip",E,E,32,[[],["v"]]],[11,R[5474],E,E,32,[[["self"],[R[5475]]],[[R[3],["ok","error"]],["ok"],["error"]]]],[11,"into",E,E,33,[[],[U]]],[11,"from",E,E,33,[[[T]],[T]]],[11,R[4],E,E,33,[[[U]],[R[3]]]],[11,R[5],E,E,33,[[],[R[3]]]],[11,R[7],E,E,33,[[["self"]],[T]]],[11,R[6],E,E,33,[[["self"]],[T]]],[11,R[8],E,E,33,[[["self"]],[R[9]]]],[11,"vzip",E,E,33,[[],["v"]]],[11,R[5474],E,E,33,[[["self"],[R[5475]]],[[R[3],["ok","error"]],["ok"],["error"]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[4],E,E,2,[[[U]],[R[3]]]],[11,R[5],E,E,2,[[],[R[3]]]],[11,R[7],E,E,2,[[["self"]],[T]]],[11,R[6],E,E,2,[[["self"]],[T]]],[11,R[8],E,E,2,[[["self"]],[R[9]]]],[11,"vzip",E,E,2,[[],["v"]]],[11,R[5474],E,E,2,[[["self"],[R[5475]]],[[R[3],["ok","error"]],["ok"],["error"]]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[4],E,E,3,[[[U]],[R[3]]]],[11,R[5],E,E,3,[[],[R[3]]]],[11,R[7],E,E,3,[[["self"]],[T]]],[11,R[6],E,E,3,[[["self"]],[T]]],[11,R[8],E,E,3,[[["self"]],[R[9]]]],[11,"vzip",E,E,3,[[],["v"]]],[11,R[5474],E,E,3,[[["self"],[R[5475]]],[[R[3],["ok","error"]],["ok"],["error"]]]],[11,"into",E,E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[4],E,E,4,[[[U]],[R[3]]]],[11,R[5],E,E,4,[[],[R[3]]]],[11,R[7],E,E,4,[[["self"]],[T]]],[11,R[6],E,E,4,[[["self"]],[T]]],[11,R[8],E,E,4,[[["self"]],[R[9]]]],[11,"vzip",E,E,4,[[],["v"]]],[11,R[5474],E,E,4,[[["self"],[R[5475]]],[[R[3],["ok","error"]],["ok"],["error"]]]],[11,"into",E,E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[4],E,E,5,[[[U]],[R[3]]]],[11,R[5],E,E,5,[[],[R[3]]]],[11,R[7],E,E,5,[[["self"]],[T]]],[11,R[6],E,E,5,[[["self"]],[T]]],[11,R[8],E,E,5,[[["self"]],[R[9]]]],[11,"vzip",E,E,5,[[],["v"]]],[11,R[5474],E,E,5,[[["self"],[R[5475]]],[[R[3],["ok","error"]],["ok"],["error"]]]],[11,"into",E,E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[46],E,E,6,[[["self"]],[T]]],[11,R[47],E,E,6,[[["self"],[T]]]],[11,R[4],E,E,6,[[[U]],[R[3]]]],[11,R[5],E,E,6,[[],[R[3]]]],[11,R[7],E,E,6,[[["self"]],[T]]],[11,R[6],E,E,6,[[["self"]],[T]]],[11,R[8],E,E,6,[[["self"]],[R[9]]]],[11,R[4793],E,E,6,[[["self"],["k"]],["bool"]]],[11,"vzip",E,E,6,[[],["v"]]],[11,"into",E,E,7,[[],[U]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[46],E,E,7,[[["self"]],[T]]],[11,R[47],E,E,7,[[["self"],[T]]]],[11,R[4],E,E,7,[[[U]],[R[3]]]],[11,R[5],E,E,7,[[],[R[3]]]],[11,R[7],E,E,7,[[["self"]],[T]]],[11,R[6],E,E,7,[[["self"]],[T]]],[11,R[8],E,E,7,[[["self"]],[R[9]]]],[11,"vzip",E,E,7,[[],["v"]]],[11,"into",E,E,8,[[],[U]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[4],E,E,8,[[[U]],[R[3]]]],[11,R[5],E,E,8,[[],[R[3]]]],[11,R[7],E,E,8,[[["self"]],[T]]],[11,R[6],E,E,8,[[["self"]],[T]]],[11,R[8],E,E,8,[[["self"]],[R[9]]]],[11,"vzip",E,E,8,[[],["v"]]],[11,R[5474],E,E,8,[[["self"],[R[5475]]],[[R[3],["ok","error"]],["ok"],["error"]]]],[11,"into",R[5467],E,11,[[],[U]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[46],E,E,11,[[["self"]],[T]]],[11,R[47],E,E,11,[[["self"],[T]]]],[11,R[4],E,E,11,[[[U]],[R[3]]]],[11,R[5],E,E,11,[[],[R[3]]]],[11,R[7],E,E,11,[[["self"]],[T]]],[11,R[6],E,E,11,[[["self"]],[T]]],[11,R[8],E,E,11,[[["self"]],[R[9]]]],[11,R[4793],E,E,11,[[["self"],["k"]],["bool"]]],[11,"vzip",E,E,11,[[],["v"]]],[11,"into",E,E,12,[[],[U]]],[11,"from",E,E,12,[[[T]],[T]]],[11,R[46],E,E,12,[[["self"]],[T]]],[11,R[47],E,E,12,[[["self"],[T]]]],[11,R[4],E,E,12,[[[U]],[R[3]]]],[11,R[5],E,E,12,[[],[R[3]]]],[11,R[7],E,E,12,[[["self"]],[T]]],[11,R[6],E,E,12,[[["self"]],[T]]],[11,R[8],E,E,12,[[["self"]],[R[9]]]],[11,R[4793],E,E,12,[[["self"],["k"]],["bool"]]],[11,"vzip",E,E,12,[[],["v"]]],[11,"into",E,E,13,[[],[U]]],[11,"from",E,E,13,[[[T]],[T]]],[11,R[46],E,E,13,[[["self"]],[T]]],[11,R[47],E,E,13,[[["self"],[T]]]],[11,R[4],E,E,13,[[[U]],[R[3]]]],[11,R[5],E,E,13,[[],[R[3]]]],[11,R[7],E,E,13,[[["self"]],[T]]],[11,R[6],E,E,13,[[["self"]],[T]]],[11,R[8],E,E,13,[[["self"]],[R[9]]]],[11,R[4793],E,E,13,[[["self"],["k"]],["bool"]]],[11,"vzip",E,E,13,[[],["v"]]],[11,"into",E,E,14,[[],[U]]],[11,"from",E,E,14,[[[T]],[T]]],[11,R[46],E,E,14,[[["self"]],[T]]],[11,R[47],E,E,14,[[["self"],[T]]]],[11,R[4],E,E,14,[[[U]],[R[3]]]],[11,R[5],E,E,14,[[],[R[3]]]],[11,R[7],E,E,14,[[["self"]],[T]]],[11,R[6],E,E,14,[[["self"]],[T]]],[11,R[8],E,E,14,[[["self"]],[R[9]]]],[11,"vzip",E,E,14,[[],["v"]]],[11,"into",E,E,15,[[],[U]]],[11,"from",E,E,15,[[[T]],[T]]],[11,R[46],E,E,15,[[["self"]],[T]]],[11,R[47],E,E,15,[[["self"],[T]]]],[11,R[4],E,E,15,[[[U]],[R[3]]]],[11,R[5],E,E,15,[[],[R[3]]]],[11,R[7],E,E,15,[[["self"]],[T]]],[11,R[6],E,E,15,[[["self"]],[T]]],[11,R[8],E,E,15,[[["self"]],[R[9]]]],[11,R[4793],E,E,15,[[["self"],["k"]],["bool"]]],[11,"vzip",E,E,15,[[],["v"]]],[11,"into",E,E,16,[[],[U]]],[11,"from",E,E,16,[[[T]],[T]]],[11,R[46],E,E,16,[[["self"]],[T]]],[11,R[47],E,E,16,[[["self"],[T]]]],[11,R[4],E,E,16,[[[U]],[R[3]]]],[11,R[5],E,E,16,[[],[R[3]]]],[11,R[7],E,E,16,[[["self"]],[T]]],[11,R[6],E,E,16,[[["self"]],[T]]],[11,R[8],E,E,16,[[["self"]],[R[9]]]],[11,"vzip",E,E,16,[[],["v"]]],[11,"into",E,E,17,[[],[U]]],[11,"from",E,E,17,[[[T]],[T]]],[11,R[46],E,E,17,[[["self"]],[T]]],[11,R[47],E,E,17,[[["self"],[T]]]],[11,R[4],E,E,17,[[[U]],[R[3]]]],[11,R[5],E,E,17,[[],[R[3]]]],[11,R[7],E,E,17,[[["self"]],[T]]],[11,R[6],E,E,17,[[["self"]],[T]]],[11,R[8],E,E,17,[[["self"]],[R[9]]]],[11,R[4793],E,E,17,[[["self"],["k"]],["bool"]]],[11,"vzip",E,E,17,[[],["v"]]],[11,"into",E,E,18,[[],[U]]],[11,"from",E,E,18,[[[T]],[T]]],[11,R[46],E,E,18,[[["self"]],[T]]],[11,R[47],E,E,18,[[["self"],[T]]]],[11,R[4],E,E,18,[[[U]],[R[3]]]],[11,R[5],E,E,18,[[],[R[3]]]],[11,R[7],E,E,18,[[["self"]],[T]]],[11,R[6],E,E,18,[[["self"]],[T]]],[11,R[8],E,E,18,[[["self"]],[R[9]]]],[11,R[4793],E,E,18,[[["self"],["k"]],["bool"]]],[11,"vzip",E,E,18,[[],["v"]]],[11,R[5474],E,E,18,[[["self"],[R[5475]]],[[R[3],["ok","error"]],["ok"],["error"]]]],[11,"into",E,E,19,[[],[U]]],[11,"from",E,E,19,[[[T]],[T]]],[11,R[46],E,E,19,[[["self"]],[T]]],[11,R[47],E,E,19,[[["self"],[T]]]],[11,R[4],E,E,19,[[[U]],[R[3]]]],[11,R[5],E,E,19,[[],[R[3]]]],[11,R[7],E,E,19,[[["self"]],[T]]],[11,R[6],E,E,19,[[["self"]],[T]]],[11,R[8],E,E,19,[[["self"]],[R[9]]]],[11,R[4793],E,E,19,[[["self"],["k"]],["bool"]]],[11,"vzip",E,E,19,[[],["v"]]],[11,"into",E,E,20,[[],[U]]],[11,"from",E,E,20,[[[T]],[T]]],[11,R[46],E,E,20,[[["self"]],[T]]],[11,R[47],E,E,20,[[["self"],[T]]]],[11,R[4],E,E,20,[[[U]],[R[3]]]],[11,R[5],E,E,20,[[],[R[3]]]],[11,R[7],E,E,20,[[["self"]],[T]]],[11,R[6],E,E,20,[[["self"]],[T]]],[11,R[8],E,E,20,[[["self"]],[R[9]]]],[11,R[4793],E,E,20,[[["self"],["k"]],["bool"]]],[11,"vzip",E,E,20,[[],["v"]]],[11,"into",E,E,21,[[],[U]]],[11,"from",E,E,21,[[[T]],[T]]],[11,R[46],E,E,21,[[["self"]],[T]]],[11,R[47],E,E,21,[[["self"],[T]]]],[11,R[4],E,E,21,[[[U]],[R[3]]]],[11,R[5],E,E,21,[[],[R[3]]]],[11,R[7],E,E,21,[[["self"]],[T]]],[11,R[6],E,E,21,[[["self"]],[T]]],[11,R[8],E,E,21,[[["self"]],[R[9]]]],[11,R[4793],E,E,21,[[["self"],["k"]],["bool"]]],[11,"vzip",E,E,21,[[],["v"]]],[11,"into",E,E,22,[[],[U]]],[11,"from",E,E,22,[[[T]],[T]]],[11,R[46],E,E,22,[[["self"]],[T]]],[11,R[47],E,E,22,[[["self"],[T]]]],[11,R[4],E,E,22,[[[U]],[R[3]]]],[11,R[5],E,E,22,[[],[R[3]]]],[11,R[7],E,E,22,[[["self"]],[T]]],[11,R[6],E,E,22,[[["self"]],[T]]],[11,R[8],E,E,22,[[["self"]],[R[9]]]],[11,"vzip",E,E,22,[[],["v"]]],[11,"into",E,E,23,[[],[U]]],[11,"from",E,E,23,[[[T]],[T]]],[11,R[46],E,E,23,[[["self"]],[T]]],[11,R[47],E,E,23,[[["self"],[T]]]],[11,R[4],E,E,23,[[[U]],[R[3]]]],[11,R[5],E,E,23,[[],[R[3]]]],[11,R[7],E,E,23,[[["self"]],[T]]],[11,R[6],E,E,23,[[["self"]],[T]]],[11,R[8],E,E,23,[[["self"]],[R[9]]]],[11,"vzip",E,E,23,[[],["v"]]],[11,"into",E,E,24,[[],[U]]],[11,"from",E,E,24,[[[T]],[T]]],[11,R[46],E,E,24,[[["self"]],[T]]],[11,R[47],E,E,24,[[["self"],[T]]]],[11,R[4],E,E,24,[[[U]],[R[3]]]],[11,R[5],E,E,24,[[],[R[3]]]],[11,R[7],E,E,24,[[["self"]],[T]]],[11,R[6],E,E,24,[[["self"]],[T]]],[11,R[8],E,E,24,[[["self"]],[R[9]]]],[11,"vzip",E,E,24,[[],["v"]]],[11,"into",E,E,34,[[],[U]]],[11,"from",E,E,34,[[[T]],[T]]],[11,R[46],E,E,34,[[["self"]],[T]]],[11,R[47],E,E,34,[[["self"],[T]]]],[11,R[4],E,E,34,[[[U]],[R[3]]]],[11,R[5],E,E,34,[[],[R[3]]]],[11,R[7],E,E,34,[[["self"]],[T]]],[11,R[6],E,E,34,[[["self"]],[T]]],[11,R[8],E,E,34,[[["self"]],[R[9]]]],[11,"vzip",E,E,34,[[],["v"]]],[11,"into",E,E,35,[[],[U]]],[11,"from",E,E,35,[[[T]],[T]]],[11,R[46],E,E,35,[[["self"]],[T]]],[11,R[47],E,E,35,[[["self"],[T]]]],[11,R[4],E,E,35,[[[U]],[R[3]]]],[11,R[5],E,E,35,[[],[R[3]]]],[11,R[7],E,E,35,[[["self"]],[T]]],[11,R[6],E,E,35,[[["self"]],[T]]],[11,R[8],E,E,35,[[["self"]],[R[9]]]],[11,"vzip",E,E,35,[[],["v"]]],[11,"into",E,E,25,[[],[U]]],[11,"from",E,E,25,[[[T]],[T]]],[11,R[46],E,E,25,[[["self"]],[T]]],[11,R[47],E,E,25,[[["self"],[T]]]],[11,R[4],E,E,25,[[[U]],[R[3]]]],[11,R[5],E,E,25,[[],[R[3]]]],[11,R[7],E,E,25,[[["self"]],[T]]],[11,R[6],E,E,25,[[["self"]],[T]]],[11,R[8],E,E,25,[[["self"]],[R[9]]]],[11,"vzip",E,E,25,[[],["v"]]],[11,"into",E,E,26,[[],[U]]],[11,"from",E,E,26,[[[T]],[T]]],[11,R[46],E,E,26,[[["self"]],[T]]],[11,R[47],E,E,26,[[["self"],[T]]]],[11,R[4],E,E,26,[[[U]],[R[3]]]],[11,R[5],E,E,26,[[],[R[3]]]],[11,R[7],E,E,26,[[["self"]],[T]]],[11,R[6],E,E,26,[[["self"]],[T]]],[11,R[8],E,E,26,[[["self"]],[R[9]]]],[11,"vzip",E,E,26,[[],["v"]]],[11,"into",E,E,27,[[],[U]]],[11,"from",E,E,27,[[[T]],[T]]],[11,R[46],E,E,27,[[["self"]],[T]]],[11,R[47],E,E,27,[[["self"],[T]]]],[11,R[4],E,E,27,[[[U]],[R[3]]]],[11,R[5],E,E,27,[[],[R[3]]]],[11,R[7],E,E,27,[[["self"]],[T]]],[11,R[6],E,E,27,[[["self"]],[T]]],[11,R[8],E,E,27,[[["self"]],[R[9]]]],[11,"vzip",E,E,27,[[],["v"]]],[11,"into",E,E,28,[[],[U]]],[11,"from",E,E,28,[[[T]],[T]]],[11,R[4],E,E,28,[[[U]],[R[3]]]],[11,R[5],E,E,28,[[],[R[3]]]],[11,R[7],E,E,28,[[["self"]],[T]]],[11,R[6],E,E,28,[[["self"]],[T]]],[11,R[8],E,E,28,[[["self"]],[R[9]]]],[11,"vzip",E,E,28,[[],["v"]]],[11,"eq",R[5453],E,29,[[["self"],["index"]],["bool"]]],[11,"ne",E,E,29,[[["self"],["index"]],["bool"]]],[11,"fmt",E,E,29,[[["self"],[R[10]]],[[R[3],["error"]],["error"]]]],[11,R[4354],E,E,29,[[["d"]],[["index"],[R[3],["index"]]]]],[11,"clone",E,E,29,[[["self"]],["index"]]],[11,R[77],E,E,29,[[["self"],["index"]],[[R[50]],[R[23],[R[50]]]]]],[11,"lt",E,E,29,[[["self"],["index"]],["bool"]]],[11,"le",E,E,29,[[["self"],["index"]],["bool"]]],[11,"gt",E,E,29,[[["self"],["index"]],["bool"]]],[11,"ge",E,E,29,[[["self"],["index"]],["bool"]]],[11,"cmp",E,E,29,[[["self"],["index"]],[R[50]]]],[11,"hash",E,E,29,[[["self"],["__h"]]]],[11,R[4563],E,E,29,[[["self"],["s"]],[R[3]]]],[11,R[5476],E,E,1,[[["self"]],["u64"]]],[11,R[5477],E,E,1,[[["self"],[R[5458]]]]],[11,R[5478],E,E,1,[[["self"]],["u64"]]],[11,R[5479],E,E,1,[[["self"],[R[5458]]]]],[11,R[5480],E,E,1,[[["self"]],["u64"]]],[11,R[5481],E,E,1,[[["self"],[R[5458]]]]],[11,"size",E,E,1,[[["self"]],["u64"]]],[11,"set_len",E,E,1,[[["self"],[R[5473]]],[[R[3],[R[5459]]],[R[5459]]]]],[11,"unlink",E,E,1,[[["self"]],[[R[3],[R[5459]]],[R[5459]]]]],[11,R[5482],E,E,1,[[["self"]],[[R[3],[R[5459]]],[R[5459]]]]],[11,R[5483],E,E,1,[[["self"],["path"]],[[R[3],[R[5459]]],[R[5459]]]]],[11,R[5484],E,E,1,[[["self"]],[[R[3],["usize",R[5459]]],["usize"],[R[5459]]]]],[11,R[5485],E,E,1,[[["self"]],[[R[23],["i32"]],["i32"]]]],[11,R[5476],E,E,31,[[["self"]],["u64"]]],[11,R[5478],E,E,31,[[["self"]],["u64"]]],[11,R[5480],E,E,31,[[["self"]],["u64"]]],[11,"size",E,E,31,[[["self"]],["u64"]]],[11,R[5484],E,E,31,[[["self"]],[[R[3],["usize",R[5459]]],["usize"],[R[5459]]]]],[11,R[5485],E,E,31,[[["self"]],[[R[23],["i32"]],["i32"]]]],[11,R[5476],E,E,32,[[["self"]],["u64"]]],[11,R[5478],E,E,32,[[["self"]],["u64"]]],[11,R[5480],E,E,32,[[["self"]],["u64"]]],[11,"size",E,E,32,[[["self"]],["u64"]]],[11,R[5484],E,E,32,[[["self"]],[[R[3],["usize",R[5459]]],["usize"],[R[5459]]]]],[11,R[5485],E,E,32,[[["self"]],[[R[23],["i32"]],["i32"]]]],[11,R[5476],E,E,33,[[["self"]],["u64"]]],[11,R[5478],E,E,33,[[["self"]],["u64"]]],[11,R[5480],E,E,33,[[["self"]],["u64"]]],[11,"size",E,E,33,[[["self"]],["u64"]]],[11,R[5484],E,E,33,[[["self"]],[[R[3],["usize",R[5459]]],["usize"],[R[5459]]]]],[11,R[5485],E,E,33,[[["self"]],[[R[23],["i32"]],["i32"]]]],[11,R[83],R[5467],E,18,[[],["self"]]],[11,"clone",R[5453],E,6,[[["self"]],[R[5459]]]],[11,"clone",E,E,7,[[["self"]],["pollevent"]]],[11,"clone",E,E,9,[[["self"]],[R[5456]]]],[11,"clone",R[5467],E,11,[[["self"]],[R[5486]]]],[11,"clone",E,E,12,[[["self"]],[R[5470]]]],[11,"clone",E,E,13,[[["self"]],[R[5487]]]],[11,"clone",E,E,24,[[["self"]],[R[5488]]]],[11,"clone",E,E,25,[[["self"]],["eventenum"]]],[11,"clone",E,E,14,[[["self"]],[R[5489]]]],[11,"clone",E,E,15,[[["self"]],[R[5490]]]],[11,"clone",E,E,34,[[["self"]],[R[5491]]]],[11,"clone",E,E,16,[[["self"]],[R[5463]]]],[11,"clone",E,E,26,[[["self"]],[R[5511]]]],[11,"clone",E,E,17,[[["self"]],[R[5462]]]],[11,"clone",E,E,18,[[["self"]],[R[5461]]]],[11,"clone",E,E,19,[[["self"]],[R[5492]]]],[11,"clone",E,E,20,[[["self"]],[R[5493]]]],[11,"clone",E,E,21,[[["self"]],[R[5494]]]],[11,"clone",E,E,35,[[["self"]],[R[5495]]]],[11,"clone",E,E,22,[[["self"]],[R[5496]]]],[11,"clone",E,E,27,[[["self"]],["eventtype"]]],[11,"clone",E,E,23,[[["self"]],[R[5497]]]],[11,"eq",R[5453],E,6,[[["self"],[R[5459]]],["bool"]]],[11,"ne",E,E,6,[[["self"],[R[5459]]],["bool"]]],[11,"eq",R[5467],E,11,[[["self"],[R[5486]]],["bool"]]],[11,"ne",E,E,11,[[["self"],[R[5486]]],["bool"]]],[11,"eq",E,E,12,[[["self"],[R[5470]]],["bool"]]],[11,"ne",E,E,12,[[["self"],[R[5470]]],["bool"]]],[11,"eq",E,E,13,[[["self"],[R[5487]]],["bool"]]],[11,"ne",E,E,13,[[["self"],[R[5487]]],["bool"]]],[11,"eq",E,E,15,[[["self"],[R[5490]]],["bool"]]],[11,"ne",E,E,15,[[["self"],[R[5490]]],["bool"]]],[11,"eq",E,E,17,[[["self"],[R[5462]]],["bool"]]],[11,"ne",E,E,17,[[["self"],[R[5462]]],["bool"]]],[11,"eq",E,E,18,[[["self"],[R[5461]]],["bool"]]],[11,"ne",E,E,18,[[["self"],[R[5461]]],["bool"]]],[11,"eq",E,E,19,[[["self"],[R[5492]]],["bool"]]],[11,"ne",E,E,19,[[["self"],[R[5492]]],["bool"]]],[11,"eq",E,E,20,[[["self"],[R[5493]]],["bool"]]],[11,"ne",E,E,20,[[["self"],[R[5493]]],["bool"]]],[11,"eq",E,E,21,[[["self"],[R[5494]]],["bool"]]],[11,"ne",E,E,21,[[["self"],[R[5494]]],["bool"]]],[11,"from",R[5453],E,6,[[["error"]],["self"]]],[11,"next",E,E,30,[[["self"]],[R[23]]]],[11,"fmt",E,E,6,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,7,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,9,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,30,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,1,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,31,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,32,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,33,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,2,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,8,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,3,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,4,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,5,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",R[5467],E,11,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,12,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,13,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,24,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,25,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,14,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,15,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,34,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,16,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,17,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,18,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,19,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,20,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,21,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,27,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,23,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,22,[[["self"],[R[10]]],[R[3]]]],[11,R[4],E,E,23,[[[R[5496]]],[R[3]]]],[11,R[4],E,E,22,[[[R[5497]]],[R[3]]]],[11,"seek",R[5453],E,1,[[["self"],["seekfrom"]],[["u64"],[R[3],["u64"]]]]],[11,"seek",E,E,31,[[["self"],["seekfrom"]],[["u64"],[R[3],["u64"]]]]],[11,"seek",E,E,32,[[["self"],["seekfrom"]],[["u64"],[R[3],["u64"]]]]],[11,"seek",E,E,33,[[["self"],["seekfrom"]],[["u64"],[R[3],["u64"]]]]],[11,"write",E,E,1,[[["self"]],[[R[3],["usize"]],["usize"]]]],[11,"flush",E,E,1,[[["self"]],[R[3]]]],[11,R[5498],E,E,1,[[["self"]],[R[3]]]],[11,R[5499],E,E,1,[[["self"],[R[734]]],[R[3]]]],[11,"write",E,E,31,[[["self"]],[[R[3],["usize"]],["usize"]]]],[11,"flush",E,E,31,[[["self"]],[R[3]]]],[11,R[5498],E,E,31,[[["self"]],[R[3]]]],[11,R[5499],E,E,31,[[["self"],[R[734]]],[R[3]]]],[11,"write",E,E,32,[[["self"]],[[R[3],["usize"]],["usize"]]]],[11,"flush",E,E,32,[[["self"]],[R[3]]]],[11,R[5498],E,E,32,[[["self"]],[R[3]]]],[11,R[5499],E,E,32,[[["self"],[R[734]]],[R[3]]]],[11,"write",E,E,33,[[["self"]],[[R[3],["usize"]],["usize"]]]],[11,"flush",E,E,33,[[["self"]],[R[3]]]],[11,R[5498],E,E,33,[[["self"]],[R[3]]]],[11,R[5499],E,E,33,[[["self"],[R[734]]],[R[3]]]],[11,"read",E,E,1,[[["self"]],[[R[3],["usize"]],["usize"]]]],[11,R[3371],E,E,1,[[["self"],["vec"]],[[R[3],["usize"]],["usize"]]]],[11,R[5500],E,E,1,[[["self"],["string"]],[[R[3],["usize"]],["usize"]]]],[11,R[5501],E,E,1,[[["self"]],[R[3]]]],[11,"read",E,E,31,[[["self"]],[[R[3],["usize"]],["usize"]]]],[11,R[3371],E,E,31,[[["self"],["vec"]],[[R[3],["usize"]],["usize"]]]],[11,R[5500],E,E,31,[[["self"],["string"]],[[R[3],["usize"]],["usize"]]]],[11,R[5501],E,E,31,[[["self"]],[R[3]]]],[11,"read",E,E,32,[[["self"]],[[R[3],["usize"]],["usize"]]]],[11,R[3371],E,E,32,[[["self"],["vec"]],[[R[3],["usize"]],["usize"]]]],[11,R[5500],E,E,32,[[["self"],["string"]],[[R[3],["usize"]],["usize"]]]],[11,R[5501],E,E,32,[[["self"]],[R[3]]]],[11,"read",E,E,33,[[["self"]],[[R[3],["usize"]],["usize"]]]],[11,R[3371],E,E,33,[[["self"],["vec"]],[[R[3],["usize"]],["usize"]]]],[11,R[5500],E,E,33,[[["self"],["string"]],[[R[3],["usize"]],["usize"]]]],[11,R[5501],E,E,33,[[["self"]],[R[3]]]],[11,R[4354],E,E,1,[[["d"]],[["hostfile"],[R[3],["hostfile"]]]]],[11,R[4354],E,E,31,[[["__d"]],[R[3]]]],[11,R[4354],E,E,32,[[["__d"]],[R[3]]]],[11,R[4354],E,E,33,[[["__d"]],[R[3]]]],[11,R[4354],E,E,2,[[["__d"]],[R[3]]]],[11,R[4354],E,E,8,[[["__d"]],[R[3]]]],[11,R[4354],E,E,3,[[["__d"]],[R[3]]]],[11,R[4354],E,E,4,[[["__d"]],[R[3]]]],[11,R[4354],E,E,5,[[["__d"]],[R[3]]]],[11,R[4354],R[5467],E,18,[[["__d"]],[R[3]]]],[11,R[4563],R[5453],E,10,[[["self"],["s"]],[R[3]]]],[11,R[4563],E,E,10,[[["self"],["s"]],[R[3]]]],[11,R[4563],E,E,10,[[["self"],["s"]],[R[3]]]],[11,R[4563],E,E,10,[[["self"],["s"]],[R[3]]]],[11,R[4563],E,E,1,[[["self"],["__s"]],[R[3]]]],[11,R[4563],E,E,31,[[["self"],["__s"]],[R[3]]]],[11,R[4563],E,E,32,[[["self"],["__s"]],[R[3]]]],[11,R[4563],E,E,33,[[["self"],["__s"]],[R[3]]]],[11,R[4563],E,E,2,[[["self"],["__s"]],[R[3]]]],[11,R[4563],E,E,8,[[["self"],["__s"]],[R[3]]]],[11,R[4563],E,E,3,[[["self"],["__s"]],[R[3]]]],[11,R[4563],E,E,4,[[["self"],["__s"]],[R[3]]]],[11,R[4563],E,E,5,[[["self"],["__s"]],[R[3]]]],[11,R[4563],R[5467],E,18,[[["self"],["__s"]],[R[3]]]],[11,R[5477],R[5453],R[5502],10,[[["self"],[R[5458]]]]],[11,R[5479],E,R[5503],10,[[["self"],[R[5458]]]]],[11,R[5481],E,R[5504],10,[[["self"],[R[5458]]]]],[11,"set_len",E,R[5505],10,[[["self"],[R[5473]]],[[R[3],[R[5459]]],[R[5459]]]]],[11,"unlink",E,R[5506],10,[[["self"]],[[R[3],[R[5459]]],[R[5459]]]]],[11,R[5482],E,R[5507],10,[[["self"]],[[R[3],[R[5459]]],[R[5459]]]]],[11,R[5483],E,R[5508],10,[[["self"],["path"]],[[R[3],[R[5459]]],[R[5459]]]]],[11,R[5484],E,R[5509],10,[[["self"]],[[R[3],["usize",R[5459]]],["usize"],[R[5459]]]]],[11,R[5485],E,R[5510],10,[[["self"]],[[R[23],["i32"]],["i32"]]]],[11,"untagged",R[5467],E,25,[[],[R[5488]]]],[11,"tagged",E,E,14,[[["self"]],[[R[23],["eventenum"]],["eventenum"]]]],[11,"untagged",E,E,26,[[],[R[5491]]]],[11,"tagged",E,E,16,[[["self"]],[[R[23],[R[5511]]],[R[5511]]]]],[11,"raw_tag",E,E,27,[[["self"]],[R[5472]]]],[11,"tagged",E,E,22,[[["self"]],[[R[23],[R[5512]]],[R[5512]]]]]],"p":[[3,"ExitCode"],[3,"HostFile"],[3,"InodeVal"],[3,"Fd"],[3,"WasiFs"],[3,"WasiState"],[4,R[5513]],[4,"PollEvent"],[4,"Kind"],[3,R[5514]],[8,"WasiFile"],[3,R[5486]],[3,R[5470]],[3,R[5487]],[3,R[5489]],[3,R[5490]],[3,R[5463]],[3,R[5462]],[3,R[5461]],[3,R[5492]],[3,R[5493]],[3,R[5494]],[3,R[5496]],[3,R[5515]],[19,R[5488]],[4,"EventEnum"],[4,R[5516]],[4,"EventType"],[4,R[5517]],[3,"Inode"],[3,R[5518]],[3,"Stdout"],[3,"Stderr"],[3,"Stdin"],[19,R[5491]],[19,R[5495]]]};
searchIndex["wasmer_wasi_tests"]={"doc":E,"i":[],"p":[]};
searchIndex["wasmparser"]={"doc":"A simple event-driven library for parsing WebAssembly…","i":[[3,R[275],R[193],"A binary reader of the WebAssembly structures and types.",N,N],[3,"Range",E,"Bytecode range in the WebAssembly module.",N,N],[12,"start",E,E,0,N],[12,"end",E,E,0,N],[3,R[251],E,E,N,N],[12,"index",E,E,1,N],[12,"locals",E,E,1,N],[3,"Parser",E,"The `Parser` type. A simple event-driven parser of…",N,N],[3,R[252],E,E,N,N],[12,"ty",E,E,2,N],[12,"offset",E,E,2,N],[12,"index",E,E,2,N],[12,"addend",E,E,2,N],[3,R[253],E,E,N,N],[12,"message",E,E,3,N],[12,"offset",E,E,3,N],[3,"BrTable",E,"A br_table entries representation.",N,N],[3,R[254],E,E,N,N],[12,"form",E,E,4,N],[12,"params",E,E,4,N],[12,"returns",E,E,4,N],[3,R[255],E,E,N,N],[12,"content_type",E,E,5,N],[12,"mutable",E,E,5,N],[3,"Ieee32",E,R[5438],N,N],[3,"Ieee64",E,R[5439],N,N],[3,R[256],E,E,N,N],[12,"flags",E,E,6,N],[12,"offset",E,E,6,N],[3,R[257],E,E,N,N],[12,"limits",E,E,7,N],[12,"shared",E,E,7,N],[3,"Naming",E,E,N,N],[12,"index",E,E,8,N],[12,"name",E,E,8,N],[3,R[258],E,E,N,N],[12,"initial",E,E,9,N],[12,"maximum",E,E,9,N],[3,R[259],E,E,N,N],[12,"element_type",E,E,10,N],[12,"limits",E,E,10,N],[3,"V128",E,E,N,N],[3,R[300],E,E,N,N],[3,R[299],E,E,N,N],[3,R[260],E,E,N,N],[12,"operator_config",E,E,11,N],[12,"mutable_global_imports",E,E,11,N],[3,R[261],E,E,N,N],[12,R[4709],E,E,12,N],[12,"enable_reference_types",E,E,12,N],[12,R[4710],E,E,12,N],[12,R[4711],E,E,12,N],[12,R[4712],E,E,12,N],[3,R[278],E,E,N,N],[3,"Data",E,E,N,N],[12,"kind",E,E,13,N],[12,"data",E,E,13,N],[3,R[279],E,E,N,N],[3,"Element",E,E,N,N],[12,"kind",E,E,14,N],[12,"items",E,E,14,N],[3,R[280],E,E,N,N],[3,R[281],E,E,N,N],[3,R[282],E,E,N,N],[3,"Export",E,E,N,N],[12,"field",E,E,15,N],[12,"kind",E,E,15,N],[12,"index",E,E,15,N],[3,R[283],E,E,N,N],[3,R[276],E,E,N,N],[3,R[284],E,E,N,N],[3,"Global",E,E,N,N],[12,"ty",E,E,16,N],[12,R[201],E,E,16,N],[3,R[285],E,E,N,N],[3,"Import",E,E,N,N],[12,"module",E,E,17,N],[12,"field",E,E,17,N],[12,"ty",E,E,17,N],[3,R[286],E,E,N,N],[3,"InitExpr",E,E,N,N],[3,R[287],E,E,N,N],[3,R[277],E,E,N,N],[3,R[288],E,E,N,N],[3,R[289],E,"Reads top-level WebAssembly file structure: header and…",N,N],[3,R[291],E,E,N,N],[3,R[290],E,E,N,N],[3,R[292],E,E,N,N],[3,R[262],E,E,N,N],[12,"name",E,E,18,N],[3,R[263],E,E,N,N],[12,"name",E,E,19,N],[12,"version",E,E,19,N],[3,R[293],E,E,N,N],[3,"Reloc",E,E,N,N],[12,"ty",E,E,20,N],[12,"offset",E,E,20,N],[12,"index",E,E,20,N],[12,"addend",E,E,20,N],[3,R[294],E,E,N,N],[3,"Section",E,E,N,N],[12,"code",E,E,21,N],[3,R[295],E,E,N,N],[3,R[296],E,E,N,N],[3,R[297],E,E,N,N],[3,R[298],E,E,N,N],[4,R[264],E,E,N,N],[13,"Module",E,E,22,N],[13,R[196],E,E,22,N],[13,"Local",E,E,22,N],[4,R[265],E,E,N,N],[13,"Default",E,E,23,N],[13,"SkipSection",E,E,23,N],[13,"SkipFunctionBody",E,E,23,N],[13,"ReadCustomSection",E,E,23,N],[13,"ReadSectionRawData",E,E,23,N],[4,R[266],E,E,N,N],[13,"Error",E,E,24,N],[13,"Initial",E,E,24,N],[13,"BeginWasm",E,E,24,N],[12,"version",R[194],E,24,N],[13,"EndWasm",R[193],E,24,N],[13,"BeginSection",E,E,24,N],[12,"code",R[194],E,24,N],[12,"range",E,E,24,N],[13,"EndSection",R[193],E,24,N],[13,"SkippingSection",E,E,24,N],[13,"ReadingCustomSection",E,E,24,N],[13,"ReadingSectionRawData",E,E,24,N],[13,"SectionRawData",E,E,24,N],[13,"TypeSectionEntry",E,E,24,N],[13,"ImportSectionEntry",E,E,24,N],[12,"module",R[194],E,24,N],[12,"field",E,E,24,N],[12,"ty",E,E,24,N],[13,"FunctionSectionEntry",R[193],E,24,N],[13,"TableSectionEntry",E,E,24,N],[13,"MemorySectionEntry",E,E,24,N],[13,"ExportSectionEntry",E,E,24,N],[12,"field",R[194],E,24,N],[12,"kind",E,E,24,N],[12,"index",E,E,24,N],[13,"NameSectionEntry",R[193],E,24,N],[13,"StartSectionEntry",E,E,24,N],[13,"DataCountSectionEntry",E,E,24,N],[13,"BeginInitExpressionBody",E,E,24,N],[13,"InitExpressionOperator",E,E,24,N],[13,"EndInitExpressionBody",E,E,24,N],[13,"BeginFunctionBody",E,E,24,N],[12,"range",R[194],E,24,N],[13,"FunctionBodyLocals",R[193],E,24,N],[12,"locals",R[194],E,24,N],[13,"CodeOperator",R[193],E,24,N],[13,"EndFunctionBody",E,E,24,N],[13,"SkippingFunctionBody",E,E,24,N],[13,"BeginPassiveElementSectionEntry",E,E,24,N],[13,"BeginActiveElementSectionEntry",E,E,24,N],[13,"ElementSectionEntryBody",E,E,24,N],[13,"EndElementSectionEntry",E,E,24,N],[13,"BeginPassiveDataSectionEntry",E,E,24,N],[13,"BeginActiveDataSectionEntry",E,E,24,N],[13,"EndDataSectionEntry",E,E,24,N],[13,"BeginDataSectionEntryBody",E,E,24,N],[13,"DataSectionEntryBodyChunk",E,E,24,N],[13,"EndDataSectionEntryBody",E,E,24,N],[13,"BeginGlobalSectionEntry",E,E,24,N],[13,"EndGlobalSectionEntry",E,E,24,N],[13,"RelocSectionHeader",E,E,24,N],[13,"RelocSectionEntry",E,E,24,N],[13,"LinkingSectionEntry",E,E,24,N],[13,R[195],E,E,24,N],[4,R[267],E,E,N,N],[13,"Unknown",E,E,25,N],[13,"Name",E,E,25,N],[13,"Producers",E,E,25,N],[13,R[195],E,E,25,N],[13,"Reloc",E,E,25,N],[13,"Linking",E,E,25,N],[4,R[268],E,"External types as defined [here].",N,N],[13,R[196],E,E,26,N],[13,"Table",E,E,26,N],[13,"Memory",E,E,26,N],[13,"Global",E,E,26,N],[4,R[269],E,E,N,N],[13,R[196],E,E,27,N],[13,"Table",E,E,27,N],[13,"Memory",E,E,27,N],[13,"Global",E,E,27,N],[4,R[270],E,E,N,N],[13,"StackPointer",E,E,28,N],[4,"NameType",E,E,N,N],[13,"Module",E,E,29,N],[13,R[196],E,E,29,N],[13,"Local",E,E,29,N],[4,"Operator",E,"Instructions as defined [here].",N,N],[13,R[4916],E,E,30,N],[13,"Nop",E,E,30,N],[13,"Block",E,E,30,N],[12,"ty",R[197],E,30,N],[13,"Loop",R[193],E,30,N],[12,"ty",R[197],E,30,N],[13,"If",R[193],E,30,N],[12,"ty",R[197],E,30,N],[13,"Else",R[193],E,30,N],[13,"End",E,E,30,N],[13,"Br",E,E,30,N],[12,R[198],R[197],E,30,N],[13,"BrIf",R[193],E,30,N],[12,R[198],R[197],E,30,N],[13,"BrTable",R[193],E,30,N],[12,"table",R[197],E,30,N],[13,"Return",R[193],E,30,N],[13,"Call",E,E,30,N],[12,"function_index",R[197],E,30,N],[13,R[4975],R[193],E,30,N],[12,"index",R[197],E,30,N],[12,R[202],E,E,30,N],[13,"Drop",R[193],E,30,N],[13,"Select",E,E,30,N],[13,"GetLocal",E,E,30,N],[12,R[199],R[197],E,30,N],[13,"SetLocal",R[193],E,30,N],[12,R[199],R[197],E,30,N],[13,"TeeLocal",R[193],E,30,N],[12,R[199],R[197],E,30,N],[13,"GetGlobal",R[193],E,30,N],[12,R[200],R[197],E,30,N],[13,"SetGlobal",R[193],E,30,N],[12,R[200],R[197],E,30,N],[13,"I32Load",R[193],E,30,N],[12,"memarg",R[197],E,30,N],[13,"I64Load",R[193],E,30,N],[12,"memarg",R[197],E,30,N],[13,"F32Load",R[193],E,30,N],[12,"memarg",R[197],E,30,N],[13,"F64Load",R[193],E,30,N],[12,"memarg",R[197],E,30,N],[13,"I32Load8S",R[193],E,30,N],[12,"memarg",R[197],E,30,N],[13,"I32Load8U",R[193],E,30,N],[12,"memarg",R[197],E,30,N],[13,"I32Load16S",R[193],E,30,N],[12,"memarg",R[197],E,30,N],[13,"I32Load16U",R[193],E,30,N],[12,"memarg",R[197],E,30,N],[13,"I64Load8S",R[193],E,30,N],[12,"memarg",R[197],E,30,N],[13,"I64Load8U",R[193],E,30,N],[12,"memarg",R[197],E,30,N],[13,"I64Load16S",R[193],E,30,N],[12,"memarg",R[197],E,30,N],[13,"I64Load16U",R[193],E,30,N],[12,"memarg",R[197],E,30,N],[13,"I64Load32S",R[193],E,30,N],[12,"memarg",R[197],E,30,N],[13,"I64Load32U",R[193],E,30,N],[12,"memarg",R[197],E,30,N],[13,"I32Store",R[193],E,30,N],[12,"memarg",R[197],E,30,N],[13,"I64Store",R[193],E,30,N],[12,"memarg",R[197],E,30,N],[13,"F32Store",R[193],E,30,N],[12,"memarg",R[197],E,30,N],[13,"F64Store",R[193],E,30,N],[12,"memarg",R[197],E,30,N],[13,"I32Store8",R[193],E,30,N],[12,"memarg",R[197],E,30,N],[13,"I32Store16",R[193],E,30,N],[12,"memarg",R[197],E,30,N],[13,"I64Store8",R[193],E,30,N],[12,"memarg",R[197],E,30,N],[13,"I64Store16",R[193],E,30,N],[12,"memarg",R[197],E,30,N],[13,"I64Store32",R[193],E,30,N],[12,"memarg",R[197],E,30,N],[13,"MemorySize",R[193],E,30,N],[12,R[830],R[197],E,30,N],[13,"MemoryGrow",R[193],E,30,N],[12,R[830],R[197],E,30,N],[13,"I32Const",R[193],E,30,N],[12,"value",R[197],E,30,N],[13,"I64Const",R[193],E,30,N],[12,"value",R[197],E,30,N],[13,"F32Const",R[193],E,30,N],[12,"value",R[197],E,30,N],[13,"F64Const",R[193],E,30,N],[12,"value",R[197],E,30,N],[13,"RefNull",R[193],E,30,N],[13,"RefIsNull",E,E,30,N],[13,"I32Eqz",E,E,30,N],[13,"I32Eq",E,E,30,N],[13,"I32Ne",E,E,30,N],[13,"I32LtS",E,E,30,N],[13,"I32LtU",E,E,30,N],[13,"I32GtS",E,E,30,N],[13,"I32GtU",E,E,30,N],[13,"I32LeS",E,E,30,N],[13,"I32LeU",E,E,30,N],[13,"I32GeS",E,E,30,N],[13,"I32GeU",E,E,30,N],[13,"I64Eqz",E,E,30,N],[13,"I64Eq",E,E,30,N],[13,"I64Ne",E,E,30,N],[13,"I64LtS",E,E,30,N],[13,"I64LtU",E,E,30,N],[13,"I64GtS",E,E,30,N],[13,"I64GtU",E,E,30,N],[13,"I64LeS",E,E,30,N],[13,"I64LeU",E,E,30,N],[13,"I64GeS",E,E,30,N],[13,"I64GeU",E,E,30,N],[13,"F32Eq",E,E,30,N],[13,"F32Ne",E,E,30,N],[13,"F32Lt",E,E,30,N],[13,"F32Gt",E,E,30,N],[13,"F32Le",E,E,30,N],[13,"F32Ge",E,E,30,N],[13,"F64Eq",E,E,30,N],[13,"F64Ne",E,E,30,N],[13,"F64Lt",E,E,30,N],[13,"F64Gt",E,E,30,N],[13,"F64Le",E,E,30,N],[13,"F64Ge",E,E,30,N],[13,"I32Clz",E,E,30,N],[13,"I32Ctz",E,E,30,N],[13,"I32Popcnt",E,E,30,N],[13,"I32Add",E,E,30,N],[13,"I32Sub",E,E,30,N],[13,"I32Mul",E,E,30,N],[13,"I32DivS",E,E,30,N],[13,"I32DivU",E,E,30,N],[13,"I32RemS",E,E,30,N],[13,"I32RemU",E,E,30,N],[13,"I32And",E,E,30,N],[13,"I32Or",E,E,30,N],[13,"I32Xor",E,E,30,N],[13,"I32Shl",E,E,30,N],[13,"I32ShrS",E,E,30,N],[13,"I32ShrU",E,E,30,N],[13,"I32Rotl",E,E,30,N],[13,"I32Rotr",E,E,30,N],[13,"I64Clz",E,E,30,N],[13,"I64Ctz",E,E,30,N],[13,"I64Popcnt",E,E,30,N],[13,"I64Add",E,E,30,N],[13,"I64Sub",E,E,30,N],[13,"I64Mul",E,E,30,N],[13,"I64DivS",E,E,30,N],[13,"I64DivU",E,E,30,N],[13,"I64RemS",E,E,30,N],[13,"I64RemU",E,E,30,N],[13,"I64And",E,E,30,N],[13,"I64Or",E,E,30,N],[13,"I64Xor",E,E,30,N],[13,"I64Shl",E,E,30,N],[13,"I64ShrS",E,E,30,N],[13,"I64ShrU",E,E,30,N],[13,"I64Rotl",E,E,30,N],[13,"I64Rotr",E,E,30,N],[13,"F32Abs",E,E,30,N],[13,"F32Neg",E,E,30,N],[13,"F32Ceil",E,E,30,N],[13,"F32Floor",E,E,30,N],[13,"F32Trunc",E,E,30,N],[13,"F32Nearest",E,E,30,N],[13,"F32Sqrt",E,E,30,N],[13,"F32Add",E,E,30,N],[13,"F32Sub",E,E,30,N],[13,"F32Mul",E,E,30,N],[13,"F32Div",E,E,30,N],[13,"F32Min",E,E,30,N],[13,"F32Max",E,E,30,N],[13,"F32Copysign",E,E,30,N],[13,"F64Abs",E,E,30,N],[13,"F64Neg",E,E,30,N],[13,"F64Ceil",E,E,30,N],[13,"F64Floor",E,E,30,N],[13,"F64Trunc",E,E,30,N],[13,"F64Nearest",E,E,30,N],[13,"F64Sqrt",E,E,30,N],[13,"F64Add",E,E,30,N],[13,"F64Sub",E,E,30,N],[13,"F64Mul",E,E,30,N],[13,"F64Div",E,E,30,N],[13,"F64Min",E,E,30,N],[13,"F64Max",E,E,30,N],[13,"F64Copysign",E,E,30,N],[13,"I32WrapI64",E,E,30,N],[13,"I32TruncSF32",E,E,30,N],[13,"I32TruncUF32",E,E,30,N],[13,"I32TruncSF64",E,E,30,N],[13,"I32TruncUF64",E,E,30,N],[13,"I64ExtendSI32",E,E,30,N],[13,"I64ExtendUI32",E,E,30,N],[13,"I64TruncSF32",E,E,30,N],[13,"I64TruncUF32",E,E,30,N],[13,"I64TruncSF64",E,E,30,N],[13,"I64TruncUF64",E,E,30,N],[13,"F32ConvertSI32",E,E,30,N],[13,"F32ConvertUI32",E,E,30,N],[13,"F32ConvertSI64",E,E,30,N],[13,"F32ConvertUI64",E,E,30,N],[13,"F32DemoteF64",E,E,30,N],[13,"F64ConvertSI32",E,E,30,N],[13,"F64ConvertUI32",E,E,30,N],[13,"F64ConvertSI64",E,E,30,N],[13,"F64ConvertUI64",E,E,30,N],[13,"F64PromoteF32",E,E,30,N],[13,"I32ReinterpretF32",E,E,30,N],[13,"I64ReinterpretF64",E,E,30,N],[13,"F32ReinterpretI32",E,E,30,N],[13,"F64ReinterpretI64",E,E,30,N],[13,"I32Extend8S",E,E,30,N],[13,"I32Extend16S",E,E,30,N],[13,"I64Extend8S",E,E,30,N],[13,"I64Extend16S",E,E,30,N],[13,"I64Extend32S",E,E,30,N],[13,"I32TruncSSatF32",E,E,30,N],[13,"I32TruncUSatF32",E,E,30,N],[13,"I32TruncSSatF64",E,E,30,N],[13,"I32TruncUSatF64",E,E,30,N],[13,"I64TruncSSatF32",E,E,30,N],[13,"I64TruncUSatF32",E,E,30,N],[13,"I64TruncSSatF64",E,E,30,N],[13,"I64TruncUSatF64",E,E,30,N],[13,"MemoryInit",E,E,30,N],[12,"segment",R[197],E,30,N],[13,"DataDrop",R[193],E,30,N],[12,"segment",R[197],E,30,N],[13,"MemoryCopy",R[193],E,30,N],[13,"MemoryFill",E,E,30,N],[13,"TableInit",E,E,30,N],[12,"segment",R[197],E,30,N],[13,"ElemDrop",R[193],E,30,N],[12,"segment",R[197],E,30,N],[13,"TableCopy",R[193],E,30,N],[13,"TableGet",E,E,30,N],[12,"table",R[197],E,30,N],[13,"TableSet",R[193],E,30,N],[12,"table",R[197],E,30,N],[13,"TableGrow",R[193],E,30,N],[12,"table",R[197],E,30,N],[13,"TableSize",R[193],E,30,N],[12,"table",R[197],E,30,N],[13,"Wake",R[193],E,30,N],[12,"memarg",R[197],E,30,N],[13,"I32Wait",R[193],E,30,N],[12,"memarg",R[197],E,30,N],[13,"I64Wait",R[193],E,30,N],[12,"memarg",R[197],E,30,N],[13,"Fence",R[193],E,30,N],[12,"flags",R[197],E,30,N],[13,"I32AtomicLoad",R[193],E,30,N],[12,"memarg",R[197],E,30,N],[13,"I64AtomicLoad",R[193],E,30,N],[12,"memarg",R[197],E,30,N],[13,"I32AtomicLoad8U",R[193],E,30,N],[12,"memarg",R[197],E,30,N],[13,"I32AtomicLoad16U",R[193],E,30,N],[12,"memarg",R[197],E,30,N],[13,"I64AtomicLoad8U",R[193],E,30,N],[12,"memarg",R[197],E,30,N],[13,"I64AtomicLoad16U",R[193],E,30,N],[12,"memarg",R[197],E,30,N],[13,"I64AtomicLoad32U",R[193],E,30,N],[12,"memarg",R[197],E,30,N],[13,"I32AtomicStore",R[193],E,30,N],[12,"memarg",R[197],E,30,N],[13,"I64AtomicStore",R[193],E,30,N],[12,"memarg",R[197],E,30,N],[13,"I32AtomicStore8",R[193],E,30,N],[12,"memarg",R[197],E,30,N],[13,"I32AtomicStore16",R[193],E,30,N],[12,"memarg",R[197],E,30,N],[13,"I64AtomicStore8",R[193],E,30,N],[12,"memarg",R[197],E,30,N],[13,"I64AtomicStore16",R[193],E,30,N],[12,"memarg",R[197],E,30,N],[13,"I64AtomicStore32",R[193],E,30,N],[12,"memarg",R[197],E,30,N],[13,"I32AtomicRmwAdd",R[193],E,30,N],[12,"memarg",R[197],E,30,N],[13,"I64AtomicRmwAdd",R[193],E,30,N],[12,"memarg",R[197],E,30,N],[13,"I32AtomicRmw8UAdd",R[193],E,30,N],[12,"memarg",R[197],E,30,N],[13,"I32AtomicRmw16UAdd",R[193],E,30,N],[12,"memarg",R[197],E,30,N],[13,"I64AtomicRmw8UAdd",R[193],E,30,N],[12,"memarg",R[197],E,30,N],[13,"I64AtomicRmw16UAdd",R[193],E,30,N],[12,"memarg",R[197],E,30,N],[13,"I64AtomicRmw32UAdd",R[193],E,30,N],[12,"memarg",R[197],E,30,N],[13,"I32AtomicRmwSub",R[193],E,30,N],[12,"memarg",R[197],E,30,N],[13,"I64AtomicRmwSub",R[193],E,30,N],[12,"memarg",R[197],E,30,N],[13,"I32AtomicRmw8USub",R[193],E,30,N],[12,"memarg",R[197],E,30,N],[13,"I32AtomicRmw16USub",R[193],E,30,N],[12,"memarg",R[197],E,30,N],[13,"I64AtomicRmw8USub",R[193],E,30,N],[12,"memarg",R[197],E,30,N],[13,"I64AtomicRmw16USub",R[193],E,30,N],[12,"memarg",R[197],E,30,N],[13,"I64AtomicRmw32USub",R[193],E,30,N],[12,"memarg",R[197],E,30,N],[13,"I32AtomicRmwAnd",R[193],E,30,N],[12,"memarg",R[197],E,30,N],[13,"I64AtomicRmwAnd",R[193],E,30,N],[12,"memarg",R[197],E,30,N],[13,"I32AtomicRmw8UAnd",R[193],E,30,N],[12,"memarg",R[197],E,30,N],[13,"I32AtomicRmw16UAnd",R[193],E,30,N],[12,"memarg",R[197],E,30,N],[13,"I64AtomicRmw8UAnd",R[193],E,30,N],[12,"memarg",R[197],E,30,N],[13,"I64AtomicRmw16UAnd",R[193],E,30,N],[12,"memarg",R[197],E,30,N],[13,"I64AtomicRmw32UAnd",R[193],E,30,N],[12,"memarg",R[197],E,30,N],[13,"I32AtomicRmwOr",R[193],E,30,N],[12,"memarg",R[197],E,30,N],[13,"I64AtomicRmwOr",R[193],E,30,N],[12,"memarg",R[197],E,30,N],[13,"I32AtomicRmw8UOr",R[193],E,30,N],[12,"memarg",R[197],E,30,N],[13,"I32AtomicRmw16UOr",R[193],E,30,N],[12,"memarg",R[197],E,30,N],[13,"I64AtomicRmw8UOr",R[193],E,30,N],[12,"memarg",R[197],E,30,N],[13,"I64AtomicRmw16UOr",R[193],E,30,N],[12,"memarg",R[197],E,30,N],[13,"I64AtomicRmw32UOr",R[193],E,30,N],[12,"memarg",R[197],E,30,N],[13,"I32AtomicRmwXor",R[193],E,30,N],[12,"memarg",R[197],E,30,N],[13,"I64AtomicRmwXor",R[193],E,30,N],[12,"memarg",R[197],E,30,N],[13,"I32AtomicRmw8UXor",R[193],E,30,N],[12,"memarg",R[197],E,30,N],[13,"I32AtomicRmw16UXor",R[193],E,30,N],[12,"memarg",R[197],E,30,N],[13,"I64AtomicRmw8UXor",R[193],E,30,N],[12,"memarg",R[197],E,30,N],[13,"I64AtomicRmw16UXor",R[193],E,30,N],[12,"memarg",R[197],E,30,N],[13,"I64AtomicRmw32UXor",R[193],E,30,N],[12,"memarg",R[197],E,30,N],[13,"I32AtomicRmwXchg",R[193],E,30,N],[12,"memarg",R[197],E,30,N],[13,"I64AtomicRmwXchg",R[193],E,30,N],[12,"memarg",R[197],E,30,N],[13,"I32AtomicRmw8UXchg",R[193],E,30,N],[12,"memarg",R[197],E,30,N],[13,"I32AtomicRmw16UXchg",R[193],E,30,N],[12,"memarg",R[197],E,30,N],[13,"I64AtomicRmw8UXchg",R[193],E,30,N],[12,"memarg",R[197],E,30,N],[13,"I64AtomicRmw16UXchg",R[193],E,30,N],[12,"memarg",R[197],E,30,N],[13,"I64AtomicRmw32UXchg",R[193],E,30,N],[12,"memarg",R[197],E,30,N],[13,"I32AtomicRmwCmpxchg",R[193],E,30,N],[12,"memarg",R[197],E,30,N],[13,"I64AtomicRmwCmpxchg",R[193],E,30,N],[12,"memarg",R[197],E,30,N],[13,"I32AtomicRmw8UCmpxchg",R[193],E,30,N],[12,"memarg",R[197],E,30,N],[13,"I32AtomicRmw16UCmpxchg",R[193],E,30,N],[12,"memarg",R[197],E,30,N],[13,"I64AtomicRmw8UCmpxchg",R[193],E,30,N],[12,"memarg",R[197],E,30,N],[13,"I64AtomicRmw16UCmpxchg",R[193],E,30,N],[12,"memarg",R[197],E,30,N],[13,"I64AtomicRmw32UCmpxchg",R[193],E,30,N],[12,"memarg",R[197],E,30,N],[13,"V128Load",R[193],E,30,N],[12,"memarg",R[197],E,30,N],[13,"V128Store",R[193],E,30,N],[12,"memarg",R[197],E,30,N],[13,"V128Const",R[193],E,30,N],[12,"value",R[197],E,30,N],[13,"I8x16Splat",R[193],E,30,N],[13,"I8x16ExtractLaneS",E,E,30,N],[12,"lane",R[197],E,30,N],[13,"I8x16ExtractLaneU",R[193],E,30,N],[12,"lane",R[197],E,30,N],[13,"I8x16ReplaceLane",R[193],E,30,N],[12,"lane",R[197],E,30,N],[13,"I16x8Splat",R[193],E,30,N],[13,"I16x8ExtractLaneS",E,E,30,N],[12,"lane",R[197],E,30,N],[13,"I16x8ExtractLaneU",R[193],E,30,N],[12,"lane",R[197],E,30,N],[13,"I16x8ReplaceLane",R[193],E,30,N],[12,"lane",R[197],E,30,N],[13,"I32x4Splat",R[193],E,30,N],[13,"I32x4ExtractLane",E,E,30,N],[12,"lane",R[197],E,30,N],[13,"I32x4ReplaceLane",R[193],E,30,N],[12,"lane",R[197],E,30,N],[13,"I64x2Splat",R[193],E,30,N],[13,"I64x2ExtractLane",E,E,30,N],[12,"lane",R[197],E,30,N],[13,"I64x2ReplaceLane",R[193],E,30,N],[12,"lane",R[197],E,30,N],[13,"F32x4Splat",R[193],E,30,N],[13,"F32x4ExtractLane",E,E,30,N],[12,"lane",R[197],E,30,N],[13,"F32x4ReplaceLane",R[193],E,30,N],[12,"lane",R[197],E,30,N],[13,"F64x2Splat",R[193],E,30,N],[13,"F64x2ExtractLane",E,E,30,N],[12,"lane",R[197],E,30,N],[13,"F64x2ReplaceLane",R[193],E,30,N],[12,"lane",R[197],E,30,N],[13,"I8x16Eq",R[193],E,30,N],[13,"I8x16Ne",E,E,30,N],[13,"I8x16LtS",E,E,30,N],[13,"I8x16LtU",E,E,30,N],[13,"I8x16GtS",E,E,30,N],[13,"I8x16GtU",E,E,30,N],[13,"I8x16LeS",E,E,30,N],[13,"I8x16LeU",E,E,30,N],[13,"I8x16GeS",E,E,30,N],[13,"I8x16GeU",E,E,30,N],[13,"I16x8Eq",E,E,30,N],[13,"I16x8Ne",E,E,30,N],[13,"I16x8LtS",E,E,30,N],[13,"I16x8LtU",E,E,30,N],[13,"I16x8GtS",E,E,30,N],[13,"I16x8GtU",E,E,30,N],[13,"I16x8LeS",E,E,30,N],[13,"I16x8LeU",E,E,30,N],[13,"I16x8GeS",E,E,30,N],[13,"I16x8GeU",E,E,30,N],[13,"I32x4Eq",E,E,30,N],[13,"I32x4Ne",E,E,30,N],[13,"I32x4LtS",E,E,30,N],[13,"I32x4LtU",E,E,30,N],[13,"I32x4GtS",E,E,30,N],[13,"I32x4GtU",E,E,30,N],[13,"I32x4LeS",E,E,30,N],[13,"I32x4LeU",E,E,30,N],[13,"I32x4GeS",E,E,30,N],[13,"I32x4GeU",E,E,30,N],[13,"F32x4Eq",E,E,30,N],[13,"F32x4Ne",E,E,30,N],[13,"F32x4Lt",E,E,30,N],[13,"F32x4Gt",E,E,30,N],[13,"F32x4Le",E,E,30,N],[13,"F32x4Ge",E,E,30,N],[13,"F64x2Eq",E,E,30,N],[13,"F64x2Ne",E,E,30,N],[13,"F64x2Lt",E,E,30,N],[13,"F64x2Gt",E,E,30,N],[13,"F64x2Le",E,E,30,N],[13,"F64x2Ge",E,E,30,N],[13,"V128Not",E,E,30,N],[13,"V128And",E,E,30,N],[13,"V128Or",E,E,30,N],[13,"V128Xor",E,E,30,N],[13,"V128Bitselect",E,E,30,N],[13,"I8x16Neg",E,E,30,N],[13,"I8x16AnyTrue",E,E,30,N],[13,"I8x16AllTrue",E,E,30,N],[13,"I8x16Shl",E,E,30,N],[13,"I8x16ShrS",E,E,30,N],[13,"I8x16ShrU",E,E,30,N],[13,"I8x16Add",E,E,30,N],[13,"I8x16AddSaturateS",E,E,30,N],[13,"I8x16AddSaturateU",E,E,30,N],[13,"I8x16Sub",E,E,30,N],[13,"I8x16SubSaturateS",E,E,30,N],[13,"I8x16SubSaturateU",E,E,30,N],[13,"I8x16Mul",E,E,30,N],[13,"I16x8Neg",E,E,30,N],[13,"I16x8AnyTrue",E,E,30,N],[13,"I16x8AllTrue",E,E,30,N],[13,"I16x8Shl",E,E,30,N],[13,"I16x8ShrS",E,E,30,N],[13,"I16x8ShrU",E,E,30,N],[13,"I16x8Add",E,E,30,N],[13,"I16x8AddSaturateS",E,E,30,N],[13,"I16x8AddSaturateU",E,E,30,N],[13,"I16x8Sub",E,E,30,N],[13,"I16x8SubSaturateS",E,E,30,N],[13,"I16x8SubSaturateU",E,E,30,N],[13,"I16x8Mul",E,E,30,N],[13,"I32x4Neg",E,E,30,N],[13,"I32x4AnyTrue",E,E,30,N],[13,"I32x4AllTrue",E,E,30,N],[13,"I32x4Shl",E,E,30,N],[13,"I32x4ShrS",E,E,30,N],[13,"I32x4ShrU",E,E,30,N],[13,"I32x4Add",E,E,30,N],[13,"I32x4Sub",E,E,30,N],[13,"I32x4Mul",E,E,30,N],[13,"I64x2Neg",E,E,30,N],[13,"I64x2AnyTrue",E,E,30,N],[13,"I64x2AllTrue",E,E,30,N],[13,"I64x2Shl",E,E,30,N],[13,"I64x2ShrS",E,E,30,N],[13,"I64x2ShrU",E,E,30,N],[13,"I64x2Add",E,E,30,N],[13,"I64x2Sub",E,E,30,N],[13,"F32x4Abs",E,E,30,N],[13,"F32x4Neg",E,E,30,N],[13,"F32x4Sqrt",E,E,30,N],[13,"F32x4Add",E,E,30,N],[13,"F32x4Sub",E,E,30,N],[13,"F32x4Mul",E,E,30,N],[13,"F32x4Div",E,E,30,N],[13,"F32x4Min",E,E,30,N],[13,"F32x4Max",E,E,30,N],[13,"F64x2Abs",E,E,30,N],[13,"F64x2Neg",E,E,30,N],[13,"F64x2Sqrt",E,E,30,N],[13,"F64x2Add",E,E,30,N],[13,"F64x2Sub",E,E,30,N],[13,"F64x2Mul",E,E,30,N],[13,"F64x2Div",E,E,30,N],[13,"F64x2Min",E,E,30,N],[13,"F64x2Max",E,E,30,N],[13,"I32x4TruncSF32x4Sat",E,E,30,N],[13,"I32x4TruncUF32x4Sat",E,E,30,N],[13,"I64x2TruncSF64x2Sat",E,E,30,N],[13,"I64x2TruncUF64x2Sat",E,E,30,N],[13,"F32x4ConvertSI32x4",E,E,30,N],[13,"F32x4ConvertUI32x4",E,E,30,N],[13,"F64x2ConvertSI64x2",E,E,30,N],[13,"F64x2ConvertUI64x2",E,E,30,N],[13,"V8x16Swizzle",E,E,30,N],[13,"V8x16Shuffle",E,E,30,N],[12,"lanes",R[197],E,30,N],[13,"I8x16LoadSplat",R[193],E,30,N],[12,"memarg",R[197],E,30,N],[13,"I16x8LoadSplat",R[193],E,30,N],[12,"memarg",R[197],E,30,N],[13,"I32x4LoadSplat",R[193],E,30,N],[12,"memarg",R[197],E,30,N],[13,"I64x2LoadSplat",R[193],E,30,N],[12,"memarg",R[197],E,30,N],[4,R[271],R[193],E,N,N],[13,"FunctionIndexLEB",E,E,31,N],[13,"TableIndexSLEB",E,E,31,N],[13,"TableIndexI32",E,E,31,N],[13,"GlobalAddrLEB",E,E,31,N],[13,"GlobalAddrSLEB",E,E,31,N],[13,"GlobalAddrI32",E,E,31,N],[13,"TypeIndexLEB",E,E,31,N],[13,"GlobalIndexLEB",E,E,31,N],[4,R[272],E,"Section code as defined [here].",N,N],[13,"Custom",E,E,32,N],[12,"name","wasmparser::SectionCode",E,32,N],[12,"kind",E,E,32,N],[13,"Type",R[193],E,32,N],[13,"Import",E,E,32,N],[13,R[196],E,E,32,N],[13,"Table",E,E,32,N],[13,"Memory",E,E,32,N],[13,"Global",E,E,32,N],[13,"Export",E,E,32,N],[13,"Start",E,E,32,N],[13,"Element",E,E,32,N],[13,"Code",E,E,32,N],[13,"Data",E,E,32,N],[13,"DataCount",E,E,32,N],[4,"Type",E,"Types as defined [here].",N,N],[13,"I32",E,E,33,N],[13,"I64",E,E,33,N],[13,"F32",E,E,33,N],[13,"F64",E,E,33,N],[13,"V128",E,E,33,N],[13,"AnyFunc",E,E,33,N],[13,"AnyRef",E,E,33,N],[13,"Func",E,E,33,N],[13,"EmptyBlockType",E,E,33,N],[4,R[273],E,"Either a value type or a function type.",N,N],[13,"Type",E,"A value type.",34,N],[13,R[254],E,"A function type (referenced as an index into the types…",34,N],[4,"DataKind",E,E,N,N],[13,"Passive",E,E,35,N],[13,"Active",E,E,35,N],[12,R[4917],"wasmparser::DataKind",E,35,N],[12,R[201],E,E,35,N],[4,R[274],R[193],E,N,N],[13,"Passive",E,E,36,N],[13,"Active",E,E,36,N],[12,R[202],"wasmparser::ElementKind",E,36,N],[12,R[201],E,E,36,N],[4,"Name",R[193],E,N,N],[13,"Module",E,E,37,N],[13,R[196],E,E,37,N],[13,"Local",E,E,37,N],[5,"validate",E,R[204],N,[[[R[203]],[R[23],[R[203]]]],["bool"]]],[5,"validate_function_body",E,R[204],N,[[[R[23],[R[205]]],["u32"],[R[237]],[R[205]]],["bool"]]],[11,"new",E,E,0,[[["usize"]],["range"]]],[11,"slice",E,E,0,[[["self"]]]],[11,"new",E,"Constructs `BinaryReader` type.",38,[[],[R[206]]]],[11,"new_with_offset",E,E,38,[[["usize"]],[R[206]]]],[11,R[210],E,E,38,[[["self"]],["usize"]]],[11,"range",E,E,38,[[["self"]],["range"]]],[11,"read_type",E,E,38,[[["self"]],[["type"],[R[3],["type"]]]]],[11,"read_local_count",E,"Read a `count` indicating the number of times to call…",38,[[["self"]],[[R[3],["usize"]],["usize"]]]],[11,"read_local_decl",E,"Read a `(count, value_type)` declaration of local…",38,[[["self"],["usize"]],[R[3]]]],[11,"eof",E,E,38,[[["self"]],["bool"]]],[11,R[207],E,E,38,[[["self"]],["usize"]]],[11,"bytes_remaining",E,E,38,[[["self"]],["usize"]]],[11,"read_bytes",E,E,38,[[["self"],["usize"]],[R[3]]]],[11,R[886],E,E,38,[[["self"]],[[R[3],["u32"]],["u32"]]]],[11,R[887],E,E,38,[[["self"]],[["u64"],[R[3],["u64"]]]]],[11,"read_u8",E,E,38,[[["self"]],[[R[3],["u32"]],["u32"]]]],[11,"read_var_u8",E,E,38,[[["self"]],[[R[3],["u32"]],["u32"]]]],[11,"read_var_u32",E,E,38,[[["self"]],[[R[3],["u32"]],["u32"]]]],[11,"skip_var_32",E,E,38,[[["self"]],[R[3]]]],[11,"skip_type",E,E,38,[[["self"]],[R[3]]]],[11,"skip_bytes",E,E,38,[[["self"],["usize"]],[R[3]]]],[11,"skip_string",E,E,38,[[["self"]],[R[3]]]],[11,"read_var_i32",E,E,38,[[["self"]],[[R[3],["i32"]],["i32"]]]],[11,"read_var_s33",E,E,38,[[["self"]],[[R[3],["i64"]],["i64"]]]],[11,"read_var_i64",E,E,38,[[["self"]],[[R[3],["i64"]],["i64"]]]],[11,R[922],E,E,38,[[["self"]],[[R[3],["ieee32"]],["ieee32"]]]],[11,R[923],E,E,38,[[["self"]],[["ieee64"],[R[3],["ieee64"]]]]],[11,"read_string",E,E,38,[[["self"]],[["str"],[R[3],["str"]]]]],[11,"read_operator",E,E,38,[[["self"]],[[R[3],[R[233]]],[R[233]]]]],[11,"len",E,"Returns the number of `br_table` entries, not including…",39,[[["self"]],["usize"]]],[11,"read_table",E,"Reads br_table entries.",39,[[["self"]],[R[3]]]],[11,"new",E,"Constructs `Parser` type.",40,[[],["parser"]]],[11,"eof",E,E,40,[[["self"]],["bool"]]],[11,R[207],E,E,40,[[["self"]],["usize"]]],[11,"bits",E,E,41,[[],["u32"]]],[11,"bits",E,E,42,[[],["u64"]]],[11,"bytes",E,E,43,[[["self"]]]],[11,"new",E,E,44,[[["usize"]],["self"]]],[11,R[221],E,E,44,[[["self"]],[R[206]]]],[11,"get_locals_reader",E,E,44,[[["self"]],[[R[208]],[R[3],[R[208]]]]]],[11,R[222],E,E,44,[[["self"]],[[R[209]],[R[3],[R[209]]]]]],[11,"range",E,E,44,[[["self"]],["range"]]],[11,R[212],E,E,45,[[["self"]],["u32"]]],[11,R[210],E,E,45,[[["self"]],["usize"]]],[11,"read",E,E,45,[[["self"]],[R[3]]]],[11,"new",E,E,46,[[["usize"]],[[R[211]],[R[3],[R[211]]]]]],[11,R[210],E,E,46,[[["self"]],["usize"]]],[11,R[212],E,E,46,[[["self"]],["u32"]]],[11,"read",E,R[250],46,[[["self"]],[[R[3],[R[213]]],[R[213]]]]],[11,"new",E,E,47,[[["usize"]],[[R[3],[R[214]]],[R[214]]]]],[11,R[210],E,E,47,[[["self"]],["usize"]]],[11,R[212],E,E,47,[[["self"]],["u32"]]],[11,"read",E,"Reads content of the data section.",47,[[["self"]],[[R[3],["data"]],["data"]]]],[11,"get_items_reader",E,E,48,[[["self"]],[[R[3],[R[215]]],[R[215]]]]],[11,"new",E,E,49,[[["usize"]],[[R[3],[R[215]]],[R[215]]]]],[11,R[210],E,E,49,[[["self"]],["usize"]]],[11,R[212],E,E,49,[[["self"]],["u32"]]],[11,"read",E,E,49,[[["self"]],[[R[3],["u32"]],["u32"]]]],[11,"new",E,E,50,[[["usize"]],[[R[3],[R[216]]],[R[216]]]]],[11,R[210],E,E,50,[[["self"]],["usize"]]],[11,R[212],E,E,50,[[["self"]],["u32"]]],[11,"read",E,"Reads content of the element section.",50,[[["self"]],[[R[3],["element"]],["element"]]]],[11,"new",E,E,51,[[["usize"]],[[R[3],[R[217]]],[R[217]]]]],[11,R[210],E,E,51,[[["self"]],["usize"]]],[11,R[212],E,E,51,[[["self"]],["u32"]]],[11,"read",E,"Reads content of the export section.",51,[[["self"]],[[R[3],["export"]],["export"]]]],[11,"new",E,E,52,[[["usize"]],[[R[3],[R[218]]],[R[218]]]]],[11,R[210],E,E,52,[[["self"]],["usize"]]],[11,R[212],E,E,52,[[["self"]],["u32"]]],[11,"read",E,"Reads function type index from the function section.",52,[[["self"]],[[R[3],["u32"]],["u32"]]]],[11,"new",E,E,53,[[["usize"]],[[R[219]],[R[3],[R[219]]]]]],[11,R[210],E,E,53,[[["self"]],["usize"]]],[11,R[212],E,E,53,[[["self"]],["u32"]]],[11,"read",E,"Reads content of the global section.",53,[[["self"]],[[R[3],["global"]],["global"]]]],[11,"new",E,E,54,[[["usize"]],[[R[3],[R[220]]],[R[220]]]]],[11,R[210],E,E,54,[[["self"]],["usize"]]],[11,R[212],E,E,54,[[["self"]],["u32"]]],[11,"read",E,"Reads content of the import section.",54,[[["self"]],[["import"],[R[3],["import"]]]]],[11,"new",E,E,55,[[["usize"]],["initexpr"]]],[11,R[221],E,E,55,[[["self"]],[R[206]]]],[11,R[222],E,E,55,[[["self"]],[R[209]]]],[11,"new",E,E,56,[[["usize"]],[[R[3],[R[223]]],[R[223]]]]],[11,R[212],E,E,56,[[["self"]],["u32"]]],[11,R[210],E,E,56,[[["self"]],["usize"]]],[11,"read",E,E,56,[[["self"]],[[R[3],[R[224]]],[R[224]]]]],[11,"new",E,E,57,[[["usize"]],[[R[225]],[R[3],[R[225]]]]]],[11,R[210],E,E,57,[[["self"]],["usize"]]],[11,R[212],E,E,57,[[["self"]],["u32"]]],[11,"read",E,"Reads content of the memory section.",57,[[["self"]],[[R[3],[R[226]]],[R[226]]]]],[11,"get_type_section_reader",E,"Creates reader for the type section. Available when the…",21,[[["self"]],[[R[227]],[R[3],[R[227]]]]]],[11,"get_function_section_reader",E,"Creates reader for the function section. Available when…",21,[[["self"]],[[R[3],[R[218]]],[R[218]]]]],[11,"get_code_section_reader",E,"Creates reader for the code section. Available when the…",21,[[["self"]],[[R[3],[R[211]]],[R[211]]]]],[11,"get_export_section_reader",E,"Creates reader for the export section. Available when the…",21,[[["self"]],[[R[3],[R[217]]],[R[217]]]]],[11,"get_import_section_reader",E,"Creates reader for the import section. Available when the…",21,[[["self"]],[[R[3],[R[220]]],[R[220]]]]],[11,"get_global_section_reader",E,"Creates reader for the global section. Available when the…",21,[[["self"]],[[R[3],[R[219]]],[R[219]]]]],[11,"get_memory_section_reader",E,"Creates reader for the memory section. Available when the…",21,[[["self"]],[[R[225]],[R[3],[R[225]]]]]],[11,"get_data_section_reader",E,"Creates reader for the data section. Available when the…",21,[[["self"]],[[R[3],[R[214]]],[R[214]]]]],[11,"get_table_section_reader",E,"Creates reader for the table section. Available when the…",21,[[["self"]],[[R[228]],[R[3],[R[228]]]]]],[11,"get_element_section_reader",E,"Creates reader for the element section. Available when the…",21,[[["self"]],[[R[3],[R[216]]],[R[216]]]]],[11,"get_name_section_reader",E,E,21,[[["self"]],[[R[229]],[R[3],[R[229]]]]]],[11,"get_producers_section_reader",E,E,21,[[["self"]],[[R[3],[R[230]]],[R[230]]]]],[11,"get_linking_section_reader",E,E,21,[[["self"]],[[R[3],[R[223]]],[R[223]]]]],[11,"get_reloc_section_reader",E,E,21,[[["self"]],[[R[231]],[R[3],[R[231]]]]]],[11,"get_start_section_content",E,E,21,[[["self"]],[[R[3],["u32"]],["u32"]]]],[11,"get_data_count_section_content",E,E,21,[[["self"]],[[R[3],["u32"]],["u32"]]]],[11,"get_sourcemappingurl_section_content",E,E,21,[[["self"]],[["str"],[R[3],["str"]]]]],[11,R[221],E,E,21,[[["self"]],[R[206]]]],[11,"range",E,E,21,[[["self"]],["range"]]],[11,"new",E,E,58,[[],[[R[232]],[R[3],[R[232]]]]]],[11,"get_version",E,E,58,[[["self"]],["u32"]]],[11,R[207],E,E,58,[[["self"]],["usize"]]],[11,"eof",E,E,58,[[["self"]],["bool"]]],[11,"read",E,"Reads next top-level record from the WebAssembly binary…",58,[[["self"]],[["section"],[R[3],["section"]]]]],[11,"skip_custom_sections",E,"Skips custom sections.",58,[[["self"]],[R[3]]]],[11,R[210],E,E,59,[[["self"]],["usize"]]],[11,R[212],E,E,59,[[["self"]],["u32"]]],[11,"read",E,E,59,[[["self"]],[["naming"],[R[3],["naming"]]]]],[11,"new",E,E,60,[[["usize"]],[[R[3],[R[229]]],[R[229]]]]],[11,"eof",E,E,60,[[["self"]],["bool"]]],[11,R[210],E,E,60,[[["self"]],["usize"]]],[11,"read",E,E,60,[[["self"]],[["name"],[R[3],["name"]]]]],[11,"eof",E,E,61,[[["self"]],["bool"]]],[11,R[210],E,E,61,[[["self"]],["usize"]]],[11,R[240],E,E,61,[[["self"]],[R[3]]]],[11,"read",E,E,61,[[["self"]],[[R[3],[R[233]]],[R[233]]]]],[11,"into_iter_with_offsets",E,E,61,[[],["operatorsiteratorwithoffsets"]]],[11,"read_with_offset",E,E,61,[[["self"]],[R[3]]]],[11,"get_producer_field_values_reader",E,E,18,[[["self"]],[[R[3],[R[234]]],[R[234]]]]],[11,"new",E,"Creates reader for the producers section.",62,[[["usize"]],[[R[3],[R[230]]],[R[230]]]]],[11,R[210],E,E,62,[[["self"]],["usize"]]],[11,R[212],E,E,62,[[["self"]],["u32"]]],[11,"read",E,E,62,[[["self"]],[[R[235]],[R[3],[R[235]]]]]],[11,"new",E,E,63,[[["usize"]],[[R[3],[R[231]]],[R[231]]]]],[11,R[212],E,E,63,[[["self"]],["u32"]]],[11,"get_section_code",E,E,63,[[["self"]],[R[246]]]],[11,R[210],E,E,63,[[["self"]],["usize"]]],[11,"read",E,E,63,[[["self"]],[[R[3],["reloc"]],["reloc"]]]],[11,"new",E,E,64,[[["r"]],[R[5833]]]],[11,"new",E,E,65,[[["r"]],["sectioniteratorlimited"]]],[11,"new",E,E,66,[[["usize"]],[[R[3],[R[228]]],[R[228]]]]],[11,R[210],E,E,66,[[["self"]],["usize"]]],[11,R[212],E,E,66,[[["self"]],["u32"]]],[11,"read",E,"Reads content of the table section.",66,[[["self"]],[[R[236]],[R[3],[R[236]]]]]],[11,"new",E,E,67,[[["usize"]],[[R[3],[R[227]]],[R[227]]]]],[11,R[210],E,E,67,[[["self"]],["usize"]]],[11,R[212],E,E,67,[[["self"]],["u32"]]],[11,"read",E,"Reads content of the type section.",67,[[["self"]],[[R[247]],[R[3],[R[247]]]]]],[11,"new",E,E,68,[[[R[203]],[R[23],[R[203]]]],["validatingparser"]]],[11,"get_resources",E,E,68,[[["self"]],[R[237]]]],[11,"create_validating_operator_parser",E,E,68,[[["self"]],["validatingoperatorparser"]]],[11,"eof",E,E,69,[[["self"]],["bool"]]],[11,R[207],E,E,69,[[["self"]],["usize"]]],[11,"is_dead_code",E,E,69,[[["self"]],["bool"]]],[11,"next",E,R[243],69,[[["self"],[R[237]]],[[R[3],[R[233]]],[R[233]]]]],[6,"Result",E,E,N,N],[8,R[301],E,E,N,N],[10,"read",E,E,70,[[["self"]],[R[239]]]],[10,R[241],E,E,70,[[["self"],[R[238]]]]],[10,R[244],E,E,70,[[["self"],[R[238]]],[R[239]]]],[10,R[242],E,E,70,[[["self"]],[R[206]]]],[10,R[245],E,E,70,[[["self"]],[R[239]]]],[8,R[302],E,E,N,N],[10,"types",E,E,71,[[["self"]]]],[10,"tables",E,E,71,[[["self"]]]],[10,"memories",E,E,71,[[["self"]]]],[10,"globals",E,E,71,[[["self"]]]],[10,"func_type_indices",E,E,71,[[["self"]]]],[10,"element_count",E,E,71,[[["self"]],["u32"]]],[10,"data_count",E,E,71,[[["self"]],["u32"]]],[8,R[303],E,E,N,N],[16,"Item",E,E,72,N],[10,"read",E,E,72,[[["self"]],[R[3]]]],[10,"eof",E,E,72,[[["self"]],["bool"]]],[10,R[210],E,E,72,[[["self"]],["usize"]]],[11,R[240],E,E,72,[[["self"]],[R[3]]]],[8,R[304],E,E,N,N],[10,R[212],E,E,73,[[["self"]],["u32"]]],[11,"into",E,E,38,[[],[U]]],[11,"from",E,E,38,[[[T]],[T]]],[11,R[46],E,E,38,[[["self"]],[T]]],[11,R[47],E,E,38,[[["self"],[T]]]],[11,R[4],E,E,38,[[[U]],[R[3]]]],[11,R[5],E,E,38,[[],[R[3]]]],[11,R[7],E,E,38,[[["self"]],[T]]],[11,R[6],E,E,38,[[["self"]],[T]]],[11,R[8],E,E,38,[[["self"]],[R[9]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[46],E,E,0,[[["self"]],[T]]],[11,R[47],E,E,0,[[["self"],[T]]]],[11,R[4],E,E,0,[[[U]],[R[3]]]],[11,R[5],E,E,0,[[],[R[3]]]],[11,R[7],E,E,0,[[["self"]],[T]]],[11,R[6],E,E,0,[[["self"]],[T]]],[11,R[8],E,E,0,[[["self"]],[R[9]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[4],E,E,1,[[[U]],[R[3]]]],[11,R[5],E,E,1,[[],[R[3]]]],[11,R[7],E,E,1,[[["self"]],[T]]],[11,R[6],E,E,1,[[["self"]],[T]]],[11,R[8],E,E,1,[[["self"]],[R[9]]]],[11,"into",E,E,40,[[],[U]]],[11,"from",E,E,40,[[[T]],[T]]],[11,R[4],E,E,40,[[[U]],[R[3]]]],[11,R[5],E,E,40,[[],[R[3]]]],[11,R[7],E,E,40,[[["self"]],[T]]],[11,R[6],E,E,40,[[["self"]],[T]]],[11,R[8],E,E,40,[[["self"]],[R[9]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[4],E,E,2,[[[U]],[R[3]]]],[11,R[5],E,E,2,[[],[R[3]]]],[11,R[7],E,E,2,[[["self"]],[T]]],[11,R[6],E,E,2,[[["self"]],[T]]],[11,R[8],E,E,2,[[["self"]],[R[9]]]],[11,"into",E,E,3,[[],[U]]],[11,R[113],E,E,3,[[["self"]],["string"]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[46],E,E,3,[[["self"]],[T]]],[11,R[47],E,E,3,[[["self"],[T]]]],[11,R[4],E,E,3,[[[U]],[R[3]]]],[11,R[5],E,E,3,[[],[R[3]]]],[11,R[7],E,E,3,[[["self"]],[T]]],[11,R[6],E,E,3,[[["self"]],[T]]],[11,R[8],E,E,3,[[["self"]],[R[9]]]],[11,"into",E,E,39,[[],[U]]],[11,"from",E,E,39,[[[T]],[T]]],[11,R[4],E,E,39,[[[U]],[R[3]]]],[11,R[5],E,E,39,[[],[R[3]]]],[11,R[7],E,E,39,[[["self"]],[T]]],[11,R[6],E,E,39,[[["self"]],[T]]],[11,R[8],E,E,39,[[["self"]],[R[9]]]],[11,"into",E,E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[46],E,E,4,[[["self"]],[T]]],[11,R[47],E,E,4,[[["self"],[T]]]],[11,R[4],E,E,4,[[[U]],[R[3]]]],[11,R[5],E,E,4,[[],[R[3]]]],[11,R[7],E,E,4,[[["self"]],[T]]],[11,R[6],E,E,4,[[["self"]],[T]]],[11,R[8],E,E,4,[[["self"]],[R[9]]]],[11,"into",E,E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[46],E,E,5,[[["self"]],[T]]],[11,R[47],E,E,5,[[["self"],[T]]]],[11,R[4],E,E,5,[[[U]],[R[3]]]],[11,R[5],E,E,5,[[],[R[3]]]],[11,R[7],E,E,5,[[["self"]],[T]]],[11,R[6],E,E,5,[[["self"]],[T]]],[11,R[8],E,E,5,[[["self"]],[R[9]]]],[11,"into",E,E,41,[[],[U]]],[11,"from",E,E,41,[[[T]],[T]]],[11,R[46],E,E,41,[[["self"]],[T]]],[11,R[47],E,E,41,[[["self"],[T]]]],[11,R[4],E,E,41,[[[U]],[R[3]]]],[11,R[5],E,E,41,[[],[R[3]]]],[11,R[7],E,E,41,[[["self"]],[T]]],[11,R[6],E,E,41,[[["self"]],[T]]],[11,R[8],E,E,41,[[["self"]],[R[9]]]],[11,"into",E,E,42,[[],[U]]],[11,"from",E,E,42,[[[T]],[T]]],[11,R[46],E,E,42,[[["self"]],[T]]],[11,R[47],E,E,42,[[["self"],[T]]]],[11,R[4],E,E,42,[[[U]],[R[3]]]],[11,R[5],E,E,42,[[],[R[3]]]],[11,R[7],E,E,42,[[["self"]],[T]]],[11,R[6],E,E,42,[[["self"]],[T]]],[11,R[8],E,E,42,[[["self"]],[R[9]]]],[11,"into",E,E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[4],E,E,6,[[[U]],[R[3]]]],[11,R[5],E,E,6,[[],[R[3]]]],[11,R[7],E,E,6,[[["self"]],[T]]],[11,R[6],E,E,6,[[["self"]],[T]]],[11,R[8],E,E,6,[[["self"]],[R[9]]]],[11,"into",E,E,7,[[],[U]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[46],E,E,7,[[["self"]],[T]]],[11,R[47],E,E,7,[[["self"],[T]]]],[11,R[4],E,E,7,[[[U]],[R[3]]]],[11,R[5],E,E,7,[[],[R[3]]]],[11,R[7],E,E,7,[[["self"]],[T]]],[11,R[6],E,E,7,[[["self"]],[T]]],[11,R[8],E,E,7,[[["self"]],[R[9]]]],[11,"into",E,E,8,[[],[U]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[46],E,E,8,[[["self"]],[T]]],[11,R[47],E,E,8,[[["self"],[T]]]],[11,R[4],E,E,8,[[[U]],[R[3]]]],[11,R[5],E,E,8,[[],[R[3]]]],[11,R[7],E,E,8,[[["self"]],[T]]],[11,R[6],E,E,8,[[["self"]],[T]]],[11,R[8],E,E,8,[[["self"]],[R[9]]]],[11,"into",E,E,9,[[],[U]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[46],E,E,9,[[["self"]],[T]]],[11,R[47],E,E,9,[[["self"],[T]]]],[11,R[4],E,E,9,[[[U]],[R[3]]]],[11,R[5],E,E,9,[[],[R[3]]]],[11,R[7],E,E,9,[[["self"]],[T]]],[11,R[6],E,E,9,[[["self"]],[T]]],[11,R[8],E,E,9,[[["self"]],[R[9]]]],[11,"into",E,E,10,[[],[U]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[46],E,E,10,[[["self"]],[T]]],[11,R[47],E,E,10,[[["self"],[T]]]],[11,R[4],E,E,10,[[[U]],[R[3]]]],[11,R[5],E,E,10,[[],[R[3]]]],[11,R[7],E,E,10,[[["self"]],[T]]],[11,R[6],E,E,10,[[["self"]],[T]]],[11,R[8],E,E,10,[[["self"]],[R[9]]]],[11,"into",E,E,43,[[],[U]]],[11,"from",E,E,43,[[[T]],[T]]],[11,R[46],E,E,43,[[["self"]],[T]]],[11,R[47],E,E,43,[[["self"],[T]]]],[11,R[4],E,E,43,[[[U]],[R[3]]]],[11,R[5],E,E,43,[[],[R[3]]]],[11,R[7],E,E,43,[[["self"]],[T]]],[11,R[6],E,E,43,[[["self"]],[T]]],[11,R[8],E,E,43,[[["self"]],[R[9]]]],[11,"into",E,E,69,[[],[U]]],[11,"from",E,E,69,[[[T]],[T]]],[11,R[4],E,E,69,[[[U]],[R[3]]]],[11,R[5],E,E,69,[[],[R[3]]]],[11,R[7],E,E,69,[[["self"]],[T]]],[11,R[6],E,E,69,[[["self"]],[T]]],[11,R[8],E,E,69,[[["self"]],[R[9]]]],[11,"into",E,E,68,[[],[U]]],[11,"from",E,E,68,[[[T]],[T]]],[11,R[4],E,E,68,[[[U]],[R[3]]]],[11,R[5],E,E,68,[[],[R[3]]]],[11,R[7],E,E,68,[[["self"]],[T]]],[11,R[6],E,E,68,[[["self"]],[T]]],[11,R[8],E,E,68,[[["self"]],[R[9]]]],[11,"into",E,E,11,[[],[U]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[46],E,E,11,[[["self"]],[T]]],[11,R[47],E,E,11,[[["self"],[T]]]],[11,R[4],E,E,11,[[[U]],[R[3]]]],[11,R[5],E,E,11,[[],[R[3]]]],[11,R[7],E,E,11,[[["self"]],[T]]],[11,R[6],E,E,11,[[["self"]],[T]]],[11,R[8],E,E,11,[[["self"]],[R[9]]]],[11,"into",E,E,12,[[],[U]]],[11,"from",E,E,12,[[[T]],[T]]],[11,R[46],E,E,12,[[["self"]],[T]]],[11,R[47],E,E,12,[[["self"],[T]]]],[11,R[4],E,E,12,[[[U]],[R[3]]]],[11,R[5],E,E,12,[[],[R[3]]]],[11,R[7],E,E,12,[[["self"]],[T]]],[11,R[6],E,E,12,[[["self"]],[T]]],[11,R[8],E,E,12,[[["self"]],[R[9]]]],[11,"into",E,E,46,[[],[U]]],[11,R[45],E,E,46,[[],["i"]]],[11,"from",E,E,46,[[[T]],[T]]],[11,R[4],E,E,46,[[[U]],[R[3]]]],[11,R[5],E,E,46,[[],[R[3]]]],[11,R[7],E,E,46,[[["self"]],[T]]],[11,R[6],E,E,46,[[["self"]],[T]]],[11,R[8],E,E,46,[[["self"]],[R[9]]]],[11,"into",E,E,13,[[],[U]]],[11,"from",E,E,13,[[[T]],[T]]],[11,R[46],E,E,13,[[["self"]],[T]]],[11,R[47],E,E,13,[[["self"],[T]]]],[11,R[4],E,E,13,[[[U]],[R[3]]]],[11,R[5],E,E,13,[[],[R[3]]]],[11,R[7],E,E,13,[[["self"]],[T]]],[11,R[6],E,E,13,[[["self"]],[T]]],[11,R[8],E,E,13,[[["self"]],[R[9]]]],[11,"into",E,E,47,[[],[U]]],[11,R[45],E,E,47,[[],["i"]]],[11,"from",E,E,47,[[[T]],[T]]],[11,R[4],E,E,47,[[[U]],[R[3]]]],[11,R[5],E,E,47,[[],[R[3]]]],[11,R[7],E,E,47,[[["self"]],[T]]],[11,R[6],E,E,47,[[["self"]],[T]]],[11,R[8],E,E,47,[[["self"]],[R[9]]]],[11,"into",E,E,14,[[],[U]]],[11,"from",E,E,14,[[[T]],[T]]],[11,R[46],E,E,14,[[["self"]],[T]]],[11,R[47],E,E,14,[[["self"],[T]]]],[11,R[4],E,E,14,[[[U]],[R[3]]]],[11,R[5],E,E,14,[[],[R[3]]]],[11,R[7],E,E,14,[[["self"]],[T]]],[11,R[6],E,E,14,[[["self"]],[T]]],[11,R[8],E,E,14,[[["self"]],[R[9]]]],[11,"into",E,E,48,[[],[U]]],[11,"from",E,E,48,[[[T]],[T]]],[11,R[46],E,E,48,[[["self"]],[T]]],[11,R[47],E,E,48,[[["self"],[T]]]],[11,R[4],E,E,48,[[[U]],[R[3]]]],[11,R[5],E,E,48,[[],[R[3]]]],[11,R[7],E,E,48,[[["self"]],[T]]],[11,R[6],E,E,48,[[["self"]],[T]]],[11,R[8],E,E,48,[[["self"]],[R[9]]]],[11,"into",E,E,49,[[],[U]]],[11,R[45],E,E,49,[[],["i"]]],[11,"from",E,E,49,[[[T]],[T]]],[11,R[4],E,E,49,[[[U]],[R[3]]]],[11,R[5],E,E,49,[[],[R[3]]]],[11,R[7],E,E,49,[[["self"]],[T]]],[11,R[6],E,E,49,[[["self"]],[T]]],[11,R[8],E,E,49,[[["self"]],[R[9]]]],[11,"into",E,E,50,[[],[U]]],[11,R[45],E,E,50,[[],["i"]]],[11,"from",E,E,50,[[[T]],[T]]],[11,R[4],E,E,50,[[[U]],[R[3]]]],[11,R[5],E,E,50,[[],[R[3]]]],[11,R[7],E,E,50,[[["self"]],[T]]],[11,R[6],E,E,50,[[["self"]],[T]]],[11,R[8],E,E,50,[[["self"]],[R[9]]]],[11,"into",E,E,15,[[],[U]]],[11,"from",E,E,15,[[[T]],[T]]],[11,R[46],E,E,15,[[["self"]],[T]]],[11,R[47],E,E,15,[[["self"],[T]]]],[11,R[4],E,E,15,[[[U]],[R[3]]]],[11,R[5],E,E,15,[[],[R[3]]]],[11,R[7],E,E,15,[[["self"]],[T]]],[11,R[6],E,E,15,[[["self"]],[T]]],[11,R[8],E,E,15,[[["self"]],[R[9]]]],[11,"into",E,E,51,[[],[U]]],[11,R[45],E,E,51,[[],["i"]]],[11,"from",E,E,51,[[[T]],[T]]],[11,R[4],E,E,51,[[[U]],[R[3]]]],[11,R[5],E,E,51,[[],[R[3]]]],[11,R[7],E,E,51,[[["self"]],[T]]],[11,R[6],E,E,51,[[["self"]],[T]]],[11,R[8],E,E,51,[[["self"]],[R[9]]]],[11,"into",E,E,44,[[],[U]]],[11,"from",E,E,44,[[[T]],[T]]],[11,R[4],E,E,44,[[[U]],[R[3]]]],[11,R[5],E,E,44,[[],[R[3]]]],[11,R[7],E,E,44,[[["self"]],[T]]],[11,R[6],E,E,44,[[["self"]],[T]]],[11,R[8],E,E,44,[[["self"]],[R[9]]]],[11,"into",E,E,52,[[],[U]]],[11,R[45],E,E,52,[[],["i"]]],[11,"from",E,E,52,[[[T]],[T]]],[11,R[4],E,E,52,[[[U]],[R[3]]]],[11,R[5],E,E,52,[[],[R[3]]]],[11,R[7],E,E,52,[[["self"]],[T]]],[11,R[6],E,E,52,[[["self"]],[T]]],[11,R[8],E,E,52,[[["self"]],[R[9]]]],[11,"into",E,E,16,[[],[U]]],[11,"from",E,E,16,[[[T]],[T]]],[11,R[46],E,E,16,[[["self"]],[T]]],[11,R[47],E,E,16,[[["self"],[T]]]],[11,R[4],E,E,16,[[[U]],[R[3]]]],[11,R[5],E,E,16,[[],[R[3]]]],[11,R[7],E,E,16,[[["self"]],[T]]],[11,R[6],E,E,16,[[["self"]],[T]]],[11,R[8],E,E,16,[[["self"]],[R[9]]]],[11,"into",E,E,53,[[],[U]]],[11,R[45],E,E,53,[[],["i"]]],[11,"from",E,E,53,[[[T]],[T]]],[11,R[4],E,E,53,[[[U]],[R[3]]]],[11,R[5],E,E,53,[[],[R[3]]]],[11,R[7],E,E,53,[[["self"]],[T]]],[11,R[6],E,E,53,[[["self"]],[T]]],[11,R[8],E,E,53,[[["self"]],[R[9]]]],[11,"into",E,E,17,[[],[U]]],[11,"from",E,E,17,[[[T]],[T]]],[11,R[46],E,E,17,[[["self"]],[T]]],[11,R[47],E,E,17,[[["self"],[T]]]],[11,R[4],E,E,17,[[[U]],[R[3]]]],[11,R[5],E,E,17,[[],[R[3]]]],[11,R[7],E,E,17,[[["self"]],[T]]],[11,R[6],E,E,17,[[["self"]],[T]]],[11,R[8],E,E,17,[[["self"]],[R[9]]]],[11,"into",E,E,54,[[],[U]]],[11,R[45],E,E,54,[[],["i"]]],[11,"from",E,E,54,[[[T]],[T]]],[11,R[4],E,E,54,[[[U]],[R[3]]]],[11,R[5],E,E,54,[[],[R[3]]]],[11,R[7],E,E,54,[[["self"]],[T]]],[11,R[6],E,E,54,[[["self"]],[T]]],[11,R[8],E,E,54,[[["self"]],[R[9]]]],[11,"into",E,E,55,[[],[U]]],[11,"from",E,E,55,[[[T]],[T]]],[11,R[46],E,E,55,[[["self"]],[T]]],[11,R[47],E,E,55,[[["self"],[T]]]],[11,R[4],E,E,55,[[[U]],[R[3]]]],[11,R[5],E,E,55,[[],[R[3]]]],[11,R[7],E,E,55,[[["self"]],[T]]],[11,R[6],E,E,55,[[["self"]],[T]]],[11,R[8],E,E,55,[[["self"]],[R[9]]]],[11,"into",E,E,56,[[],[U]]],[11,R[45],E,E,56,[[],["i"]]],[11,"from",E,E,56,[[[T]],[T]]],[11,R[4],E,E,56,[[[U]],[R[3]]]],[11,R[5],E,E,56,[[],[R[3]]]],[11,R[7],E,E,56,[[["self"]],[T]]],[11,R[6],E,E,56,[[["self"]],[T]]],[11,R[8],E,E,56,[[["self"]],[R[9]]]],[11,"into",E,E,45,[[],[U]]],[11,R[45],E,E,45,[[],["i"]]],[11,"from",E,E,45,[[[T]],[T]]],[11,R[4],E,E,45,[[[U]],[R[3]]]],[11,R[5],E,E,45,[[],[R[3]]]],[11,R[7],E,E,45,[[["self"]],[T]]],[11,R[6],E,E,45,[[["self"]],[T]]],[11,R[8],E,E,45,[[["self"]],[R[9]]]],[11,"into",E,E,57,[[],[U]]],[11,R[45],E,E,57,[[],["i"]]],[11,"from",E,E,57,[[[T]],[T]]],[11,R[4],E,E,57,[[[U]],[R[3]]]],[11,R[5],E,E,57,[[],[R[3]]]],[11,R[7],E,E,57,[[["self"]],[T]]],[11,R[6],E,E,57,[[["self"]],[T]]],[11,R[8],E,E,57,[[["self"]],[R[9]]]],[11,"into",E,E,58,[[],[U]]],[11,R[45],E,E,58,[[],["i"]]],[11,"from",E,E,58,[[[T]],[T]]],[11,R[4],E,E,58,[[[U]],[R[3]]]],[11,R[5],E,E,58,[[],[R[3]]]],[11,R[7],E,E,58,[[["self"]],[T]]],[11,R[6],E,E,58,[[["self"]],[T]]],[11,R[8],E,E,58,[[["self"]],[R[9]]]],[11,"into",E,E,60,[[],[U]]],[11,R[45],E,E,60,[[],["i"]]],[11,"from",E,E,60,[[[T]],[T]]],[11,R[4],E,E,60,[[[U]],[R[3]]]],[11,R[5],E,E,60,[[],[R[3]]]],[11,R[7],E,E,60,[[["self"]],[T]]],[11,R[6],E,E,60,[[["self"]],[T]]],[11,R[8],E,E,60,[[["self"]],[R[9]]]],[11,"into",E,E,59,[[],[U]]],[11,"from",E,E,59,[[[T]],[T]]],[11,R[4],E,E,59,[[[U]],[R[3]]]],[11,R[5],E,E,59,[[],[R[3]]]],[11,R[7],E,E,59,[[["self"]],[T]]],[11,R[6],E,E,59,[[["self"]],[T]]],[11,R[8],E,E,59,[[["self"]],[R[9]]]],[11,"into",E,E,61,[[],[U]]],[11,R[45],E,E,61,[[],["i"]]],[11,"from",E,E,61,[[[T]],[T]]],[11,R[4],E,E,61,[[[U]],[R[3]]]],[11,R[5],E,E,61,[[],[R[3]]]],[11,R[7],E,E,61,[[["self"]],[T]]],[11,R[6],E,E,61,[[["self"]],[T]]],[11,R[8],E,E,61,[[["self"]],[R[9]]]],[11,"into",E,E,18,[[],[U]]],[11,"from",E,E,18,[[[T]],[T]]],[11,R[46],E,E,18,[[["self"]],[T]]],[11,R[47],E,E,18,[[["self"],[T]]]],[11,R[4],E,E,18,[[[U]],[R[3]]]],[11,R[5],E,E,18,[[],[R[3]]]],[11,R[7],E,E,18,[[["self"]],[T]]],[11,R[6],E,E,18,[[["self"]],[T]]],[11,R[8],E,E,18,[[["self"]],[R[9]]]],[11,"into",E,E,19,[[],[U]]],[11,"from",E,E,19,[[[T]],[T]]],[11,R[46],E,E,19,[[["self"]],[T]]],[11,R[47],E,E,19,[[["self"],[T]]]],[11,R[4],E,E,19,[[[U]],[R[3]]]],[11,R[5],E,E,19,[[],[R[3]]]],[11,R[7],E,E,19,[[["self"]],[T]]],[11,R[6],E,E,19,[[["self"]],[T]]],[11,R[8],E,E,19,[[["self"]],[R[9]]]],[11,"into",E,E,62,[[],[U]]],[11,R[45],E,E,62,[[],["i"]]],[11,"from",E,E,62,[[[T]],[T]]],[11,R[4],E,E,62,[[[U]],[R[3]]]],[11,R[5],E,E,62,[[],[R[3]]]],[11,R[7],E,E,62,[[["self"]],[T]]],[11,R[6],E,E,62,[[["self"]],[T]]],[11,R[8],E,E,62,[[["self"]],[R[9]]]],[11,"into",E,E,20,[[],[U]]],[11,"from",E,E,20,[[[T]],[T]]],[11,R[46],E,E,20,[[["self"]],[T]]],[11,R[47],E,E,20,[[["self"],[T]]]],[11,R[4],E,E,20,[[[U]],[R[3]]]],[11,R[5],E,E,20,[[],[R[3]]]],[11,R[7],E,E,20,[[["self"]],[T]]],[11,R[6],E,E,20,[[["self"]],[T]]],[11,R[8],E,E,20,[[["self"]],[R[9]]]],[11,"into",E,E,63,[[],[U]]],[11,R[45],E,E,63,[[],["i"]]],[11,"from",E,E,63,[[[T]],[T]]],[11,R[4],E,E,63,[[[U]],[R[3]]]],[11,R[5],E,E,63,[[],[R[3]]]],[11,R[7],E,E,63,[[["self"]],[T]]],[11,R[6],E,E,63,[[["self"]],[T]]],[11,R[8],E,E,63,[[["self"]],[R[9]]]],[11,"into",E,E,21,[[],[U]]],[11,"from",E,E,21,[[[T]],[T]]],[11,R[4],E,E,21,[[[U]],[R[3]]]],[11,R[5],E,E,21,[[],[R[3]]]],[11,R[7],E,E,21,[[["self"]],[T]]],[11,R[6],E,E,21,[[["self"]],[T]]],[11,R[8],E,E,21,[[["self"]],[R[9]]]],[11,"into",E,E,64,[[],[U]]],[11,R[45],E,E,64,[[],["i"]]],[11,"from",E,E,64,[[[T]],[T]]],[11,R[4],E,E,64,[[[U]],[R[3]]]],[11,R[5],E,E,64,[[],[R[3]]]],[11,R[7],E,E,64,[[["self"]],[T]]],[11,R[6],E,E,64,[[["self"]],[T]]],[11,R[8],E,E,64,[[["self"]],[R[9]]]],[11,"into",E,E,65,[[],[U]]],[11,R[45],E,E,65,[[],["i"]]],[11,"from",E,E,65,[[[T]],[T]]],[11,R[4],E,E,65,[[[U]],[R[3]]]],[11,R[5],E,E,65,[[],[R[3]]]],[11,R[7],E,E,65,[[["self"]],[T]]],[11,R[6],E,E,65,[[["self"]],[T]]],[11,R[8],E,E,65,[[["self"]],[R[9]]]],[11,"into",E,E,66,[[],[U]]],[11,R[45],E,E,66,[[],["i"]]],[11,"from",E,E,66,[[[T]],[T]]],[11,R[4],E,E,66,[[[U]],[R[3]]]],[11,R[5],E,E,66,[[],[R[3]]]],[11,R[7],E,E,66,[[["self"]],[T]]],[11,R[6],E,E,66,[[["self"]],[T]]],[11,R[8],E,E,66,[[["self"]],[R[9]]]],[11,"into",E,E,67,[[],[U]]],[11,R[45],E,E,67,[[],["i"]]],[11,"from",E,E,67,[[[T]],[T]]],[11,R[4],E,E,67,[[[U]],[R[3]]]],[11,R[5],E,E,67,[[],[R[3]]]],[11,R[7],E,E,67,[[["self"]],[T]]],[11,R[6],E,E,67,[[["self"]],[T]]],[11,R[8],E,E,67,[[["self"]],[R[9]]]],[11,"into",E,E,22,[[],[U]]],[11,"from",E,E,22,[[[T]],[T]]],[11,R[4],E,E,22,[[[U]],[R[3]]]],[11,R[5],E,E,22,[[],[R[3]]]],[11,R[7],E,E,22,[[["self"]],[T]]],[11,R[6],E,E,22,[[["self"]],[T]]],[11,R[8],E,E,22,[[["self"]],[R[9]]]],[11,"into",E,E,23,[[],[U]]],[11,"from",E,E,23,[[[T]],[T]]],[11,R[46],E,E,23,[[["self"]],[T]]],[11,R[47],E,E,23,[[["self"],[T]]]],[11,R[4],E,E,23,[[[U]],[R[3]]]],[11,R[5],E,E,23,[[],[R[3]]]],[11,R[7],E,E,23,[[["self"]],[T]]],[11,R[6],E,E,23,[[["self"]],[T]]],[11,R[8],E,E,23,[[["self"]],[R[9]]]],[11,"into",E,E,24,[[],[U]]],[11,"from",E,E,24,[[[T]],[T]]],[11,R[4],E,E,24,[[[U]],[R[3]]]],[11,R[5],E,E,24,[[],[R[3]]]],[11,R[7],E,E,24,[[["self"]],[T]]],[11,R[6],E,E,24,[[["self"]],[T]]],[11,R[8],E,E,24,[[["self"]],[R[9]]]],[11,"into",E,E,25,[[],[U]]],[11,"from",E,E,25,[[[T]],[T]]],[11,R[46],E,E,25,[[["self"]],[T]]],[11,R[47],E,E,25,[[["self"],[T]]]],[11,R[4],E,E,25,[[[U]],[R[3]]]],[11,R[5],E,E,25,[[],[R[3]]]],[11,R[7],E,E,25,[[["self"]],[T]]],[11,R[6],E,E,25,[[["self"]],[T]]],[11,R[8],E,E,25,[[["self"]],[R[9]]]],[11,"into",E,E,26,[[],[U]]],[11,"from",E,E,26,[[[T]],[T]]],[11,R[46],E,E,26,[[["self"]],[T]]],[11,R[47],E,E,26,[[["self"],[T]]]],[11,R[4],E,E,26,[[[U]],[R[3]]]],[11,R[5],E,E,26,[[],[R[3]]]],[11,R[7],E,E,26,[[["self"]],[T]]],[11,R[6],E,E,26,[[["self"]],[T]]],[11,R[8],E,E,26,[[["self"]],[R[9]]]],[11,"into",E,E,27,[[],[U]]],[11,"from",E,E,27,[[[T]],[T]]],[11,R[46],E,E,27,[[["self"]],[T]]],[11,R[47],E,E,27,[[["self"],[T]]]],[11,R[4],E,E,27,[[[U]],[R[3]]]],[11,R[5],E,E,27,[[],[R[3]]]],[11,R[7],E,E,27,[[["self"]],[T]]],[11,R[6],E,E,27,[[["self"]],[T]]],[11,R[8],E,E,27,[[["self"]],[R[9]]]],[11,"into",E,E,28,[[],[U]]],[11,"from",E,E,28,[[[T]],[T]]],[11,R[46],E,E,28,[[["self"]],[T]]],[11,R[47],E,E,28,[[["self"],[T]]]],[11,R[4],E,E,28,[[[U]],[R[3]]]],[11,R[5],E,E,28,[[],[R[3]]]],[11,R[7],E,E,28,[[["self"]],[T]]],[11,R[6],E,E,28,[[["self"]],[T]]],[11,R[8],E,E,28,[[["self"]],[R[9]]]],[11,"into",E,E,29,[[],[U]]],[11,"from",E,E,29,[[[T]],[T]]],[11,R[46],E,E,29,[[["self"]],[T]]],[11,R[47],E,E,29,[[["self"],[T]]]],[11,R[4],E,E,29,[[[U]],[R[3]]]],[11,R[5],E,E,29,[[],[R[3]]]],[11,R[7],E,E,29,[[["self"]],[T]]],[11,R[6],E,E,29,[[["self"]],[T]]],[11,R[8],E,E,29,[[["self"]],[R[9]]]],[11,"into",E,E,30,[[],[U]]],[11,"from",E,E,30,[[[T]],[T]]],[11,R[4],E,E,30,[[[U]],[R[3]]]],[11,R[5],E,E,30,[[],[R[3]]]],[11,R[7],E,E,30,[[["self"]],[T]]],[11,R[6],E,E,30,[[["self"]],[T]]],[11,R[8],E,E,30,[[["self"]],[R[9]]]],[11,"into",E,E,31,[[],[U]]],[11,"from",E,E,31,[[[T]],[T]]],[11,R[46],E,E,31,[[["self"]],[T]]],[11,R[47],E,E,31,[[["self"],[T]]]],[11,R[4],E,E,31,[[[U]],[R[3]]]],[11,R[5],E,E,31,[[],[R[3]]]],[11,R[7],E,E,31,[[["self"]],[T]]],[11,R[6],E,E,31,[[["self"]],[T]]],[11,R[8],E,E,31,[[["self"]],[R[9]]]],[11,"into",E,E,32,[[],[U]]],[11,"from",E,E,32,[[[T]],[T]]],[11,R[46],E,E,32,[[["self"]],[T]]],[11,R[47],E,E,32,[[["self"],[T]]]],[11,R[4],E,E,32,[[[U]],[R[3]]]],[11,R[5],E,E,32,[[],[R[3]]]],[11,R[7],E,E,32,[[["self"]],[T]]],[11,R[6],E,E,32,[[["self"]],[T]]],[11,R[8],E,E,32,[[["self"]],[R[9]]]],[11,"into",E,E,33,[[],[U]]],[11,"from",E,E,33,[[[T]],[T]]],[11,R[46],E,E,33,[[["self"]],[T]]],[11,R[47],E,E,33,[[["self"],[T]]]],[11,R[4],E,E,33,[[[U]],[R[3]]]],[11,R[5],E,E,33,[[],[R[3]]]],[11,R[7],E,E,33,[[["self"]],[T]]],[11,R[6],E,E,33,[[["self"]],[T]]],[11,R[8],E,E,33,[[["self"]],[R[9]]]],[11,"into",E,E,34,[[],[U]]],[11,"from",E,E,34,[[[T]],[T]]],[11,R[46],E,E,34,[[["self"]],[T]]],[11,R[47],E,E,34,[[["self"],[T]]]],[11,R[4],E,E,34,[[[U]],[R[3]]]],[11,R[5],E,E,34,[[],[R[3]]]],[11,R[7],E,E,34,[[["self"]],[T]]],[11,R[6],E,E,34,[[["self"]],[T]]],[11,R[8],E,E,34,[[["self"]],[R[9]]]],[11,"into",E,E,35,[[],[U]]],[11,"from",E,E,35,[[[T]],[T]]],[11,R[46],E,E,35,[[["self"]],[T]]],[11,R[47],E,E,35,[[["self"],[T]]]],[11,R[4],E,E,35,[[[U]],[R[3]]]],[11,R[5],E,E,35,[[],[R[3]]]],[11,R[7],E,E,35,[[["self"]],[T]]],[11,R[6],E,E,35,[[["self"]],[T]]],[11,R[8],E,E,35,[[["self"]],[R[9]]]],[11,"into",E,E,36,[[],[U]]],[11,"from",E,E,36,[[[T]],[T]]],[11,R[46],E,E,36,[[["self"]],[T]]],[11,R[47],E,E,36,[[["self"],[T]]]],[11,R[4],E,E,36,[[[U]],[R[3]]]],[11,R[5],E,E,36,[[],[R[3]]]],[11,R[7],E,E,36,[[["self"]],[T]]],[11,R[6],E,E,36,[[["self"]],[T]]],[11,R[8],E,E,36,[[["self"]],[R[9]]]],[11,"into",E,E,37,[[],[U]]],[11,"from",E,E,37,[[[T]],[T]]],[11,R[46],E,E,37,[[["self"]],[T]]],[11,R[47],E,E,37,[[["self"],[T]]]],[11,R[4],E,E,37,[[[U]],[R[3]]]],[11,R[5],E,E,37,[[],[R[3]]]],[11,R[7],E,E,37,[[["self"]],[T]]],[11,R[6],E,E,37,[[["self"]],[T]]],[11,R[8],E,E,37,[[["self"]],[R[9]]]],[11,"read",E,"Reads next record from the WebAssembly binary data. The…",40,[[["self"]],[R[239]]]],[11,R[241],E,E,40,[[["self"],[R[238]]]]],[11,R[242],E,R[243],40,[[["self"]],[R[206]]]],[11,R[244],E,"Reads next record from the WebAssembly binary data. It…",40,[[["self"],[R[238]]],[R[239]]]],[11,R[245],E,E,40,[[["self"]],[R[239]]]],[11,"read",E,E,68,[[["self"]],[R[239]]]],[11,R[241],E,E,68,[[["self"],[R[238]]]]],[11,R[244],E,E,68,[[["self"],[R[238]]],[R[239]]]],[11,R[242],E,E,68,[[["self"]],[R[206]]]],[11,R[245],E,E,68,[[["self"]],[R[239]]]],[11,"read",E,E,46,[[["self"]],[R[3]]]],[11,"eof",E,E,46,[[["self"]],["bool"]]],[11,R[210],E,E,46,[[["self"]],["usize"]]],[11,"read",E,E,47,[[["self"]],[R[3]]]],[11,"eof",E,E,47,[[["self"]],["bool"]]],[11,R[210],E,E,47,[[["self"]],["usize"]]],[11,"read",E,E,50,[[["self"]],[R[3]]]],[11,"eof",E,E,50,[[["self"]],["bool"]]],[11,R[210],E,E,50,[[["self"]],["usize"]]],[11,"read",E,E,51,[[["self"]],[R[3]]]],[11,"eof",E,E,51,[[["self"]],["bool"]]],[11,R[210],E,E,51,[[["self"]],["usize"]]],[11,"read",E,E,52,[[["self"]],[R[3]]]],[11,"eof",E,E,52,[[["self"]],["bool"]]],[11,R[210],E,E,52,[[["self"]],["usize"]]],[11,"read",E,E,53,[[["self"]],[R[3]]]],[11,"eof",E,E,53,[[["self"]],["bool"]]],[11,R[210],E,E,53,[[["self"]],["usize"]]],[11,"read",E,E,54,[[["self"]],[R[3]]]],[11,"eof",E,E,54,[[["self"]],["bool"]]],[11,R[210],E,E,54,[[["self"]],["usize"]]],[11,"read",E,E,56,[[["self"]],[R[3]]]],[11,"eof",E,E,56,[[["self"]],["bool"]]],[11,R[210],E,E,56,[[["self"]],["usize"]]],[11,"read",E,E,57,[[["self"]],[R[3]]]],[11,"eof",E,E,57,[[["self"]],["bool"]]],[11,R[210],E,E,57,[[["self"]],["usize"]]],[11,"read",E,E,60,[[["self"]],[R[3]]]],[11,"eof",E,E,60,[[["self"]],["bool"]]],[11,R[210],E,E,60,[[["self"]],["usize"]]],[11,"read",E,E,62,[[["self"]],[R[3]]]],[11,"eof",E,E,62,[[["self"]],["bool"]]],[11,R[210],E,E,62,[[["self"]],["usize"]]],[11,"read",E,E,63,[[["self"]],[R[3]]]],[11,"eof",E,E,63,[[["self"]],["bool"]]],[11,R[210],E,E,63,[[["self"]],["usize"]]],[11,"read",E,E,66,[[["self"]],[R[3]]]],[11,"eof",E,E,66,[[["self"]],["bool"]]],[11,R[210],E,E,66,[[["self"]],["usize"]]],[11,"read",E,E,67,[[["self"]],[R[3]]]],[11,"eof",E,E,67,[[["self"]],["bool"]]],[11,R[210],E,E,67,[[["self"]],["usize"]]],[11,R[212],E,E,46,[[["self"]],["u32"]]],[11,R[212],E,E,47,[[["self"]],["u32"]]],[11,R[212],E,E,50,[[["self"]],["u32"]]],[11,R[212],E,E,51,[[["self"]],["u32"]]],[11,R[212],E,E,52,[[["self"]],["u32"]]],[11,R[212],E,E,53,[[["self"]],["u32"]]],[11,R[212],E,E,54,[[["self"]],["u32"]]],[11,R[212],E,E,56,[[["self"]],["u32"]]],[11,R[212],E,E,57,[[["self"]],["u32"]]],[11,R[212],E,E,62,[[["self"]],["u32"]]],[11,R[212],E,E,63,[[["self"]],["u32"]]],[11,R[212],E,E,66,[[["self"]],["u32"]]],[11,R[212],E,E,67,[[["self"]],["u32"]]],[11,"clone",E,E,0,[[["self"]],["range"]]],[11,"clone",E,E,38,[[["self"]],[R[206]]]],[11,"clone",E,E,12,[[["self"]],[R[205]]]],[11,"clone",E,E,23,[[["self"]],[R[238]]]],[11,"clone",E,E,3,[[["self"]],[R[4749]]]],[11,"clone",E,E,25,[[["self"]],[R[248]]]],[11,"clone",E,E,32,[[["self"]],[R[246]]]],[11,"clone",E,E,33,[[["self"]],["type"]]],[11,"clone",E,E,34,[[["self"]],[R[249]]]],[11,"clone",E,E,26,[[["self"]],["externalkind"]]],[11,"clone",E,E,4,[[["self"]],[R[247]]]],[11,"clone",E,E,9,[[["self"]],["resizablelimits"]]],[11,"clone",E,E,10,[[["self"]],[R[236]]]],[11,"clone",E,E,7,[[["self"]],[R[226]]]],[11,"clone",E,E,5,[[["self"]],["globaltype"]]],[11,"clone",E,E,27,[[["self"]],["importsectionentrytype"]]],[11,"clone",E,E,8,[[["self"]],["naming"]]],[11,"clone",E,E,29,[[["self"]],["nametype"]]],[11,"clone",E,E,28,[[["self"]],[R[224]]]],[11,"clone",E,E,31,[[["self"]],["reloctype"]]],[11,"clone",E,E,41,[[["self"]],["ieee32"]]],[11,"clone",E,E,42,[[["self"]],["ieee64"]]],[11,"clone",E,E,43,[[["self"]],["v128"]]],[11,"clone",E,E,13,[[["self"]],["data"]]],[11,"clone",E,E,35,[[["self"]],["datakind"]]],[11,"clone",E,E,14,[[["self"]],["element"]]],[11,"clone",E,E,36,[[["self"]],["elementkind"]]],[11,"clone",E,E,48,[[["self"]],["elementitems"]]],[11,"clone",E,E,15,[[["self"]],["export"]]],[11,"clone",E,E,16,[[["self"]],["global"]]],[11,"clone",E,E,17,[[["self"]],["import"]]],[11,"clone",E,E,55,[[["self"]],["initexpr"]]],[11,"clone",E,E,37,[[["self"]],["name"]]],[11,"clone",E,E,19,[[["self"]],["producersfieldvalue"]]],[11,"clone",E,E,18,[[["self"]],[R[235]]]],[11,"clone",E,E,20,[[["self"]],["reloc"]]],[11,"clone",E,E,11,[[["self"]],[R[203]]]],[11,R[77],E,E,25,[[["self"],[R[248]]],[[R[50]],[R[23],[R[50]]]]]],[11,R[77],E,E,32,[[["self"],[R[246]]],[[R[50]],[R[23],[R[50]]]]]],[11,"lt",E,E,32,[[["self"],[R[246]]],["bool"]]],[11,"le",E,E,32,[[["self"],[R[246]]],["bool"]]],[11,"gt",E,E,32,[[["self"],[R[246]]],["bool"]]],[11,"ge",E,E,32,[[["self"],[R[246]]],["bool"]]],[11,"cmp",E,E,25,[[["self"],[R[248]]],[R[50]]]],[11,"cmp",E,E,32,[[["self"],[R[246]]],[R[50]]]],[11,"eq",E,E,25,[[["self"],[R[248]]],["bool"]]],[11,"eq",E,E,32,[[["self"],[R[246]]],["bool"]]],[11,"ne",E,E,32,[[["self"],[R[246]]],["bool"]]],[11,"eq",E,E,33,[[["self"],["type"]],["bool"]]],[11,"eq",E,E,34,[[["self"],[R[249]]],["bool"]]],[11,"ne",E,E,34,[[["self"],[R[249]]],["bool"]]],[11,"eq",E,E,41,[[["self"],["ieee32"]],["bool"]]],[11,"ne",E,E,41,[[["self"],["ieee32"]],["bool"]]],[11,"eq",E,E,42,[[["self"],["ieee64"]],["bool"]]],[11,"ne",E,E,42,[[["self"],["ieee64"]],["bool"]]],[11,"eq",E,E,43,[[["self"],["v128"]],["bool"]]],[11,"ne",E,E,43,[[["self"],["v128"]],["bool"]]],[11,R[45],E,E,45,[[]]],[11,R[45],E,"Implements iterator over the code section.",46,[[]]],[11,R[45],E,E,47,[[]]],[11,R[45],E,E,49,[[]]],[11,R[45],E,E,50,[[]]],[11,R[45],E,E,51,[[]]],[11,R[45],E,E,52,[[]]],[11,R[45],E,E,53,[[]]],[11,R[45],E,E,54,[[]]],[11,R[45],E,E,56,[[]]],[11,R[45],E,E,57,[[]]],[11,R[45],E,E,58,[[]]],[11,R[45],E,E,60,[[]]],[11,R[45],E,R[250],61,[[]]],[11,R[45],E,E,62,[[]]],[11,R[45],E,E,63,[[]]],[11,R[45],E,E,66,[[]]],[11,R[45],E,"Implements iterator over the type section.",67,[[]]],[11,"next",E,E,64,[[["self"]],[R[23]]]],[11,"next",E,E,65,[[["self"]],[R[23]]]],[11,R[53],E,E,65,[[["self"]]]],[11,"hash",E,E,41,[[["self"],["__h"]]]],[11,"hash",E,E,42,[[["self"],["__h"]]]],[11,"hash",E,E,43,[[["self"],["__h"]]]],[11,"fmt",E,E,0,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,12,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,1,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,22,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,2,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,24,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,23,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,3,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,25,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,32,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,33,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,34,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,26,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,4,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,9,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,10,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,7,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,5,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,27,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,6,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,8,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,29,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,28,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,31,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,39,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,41,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,42,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,43,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,30,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,44,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,13,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,35,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,14,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,36,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,48,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,15,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,16,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,17,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,55,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,21,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,37,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,19,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,18,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,20,[[["self"],[R[10]]],[R[3]]]],[11,"fmt",E,E,3,[[["self"],[R[10]]],[R[3]]]],[11,R[240],E,E,72,[[["self"]],[R[3]]]]],"p":[[3,"Range"],[3,R[251]],[3,R[252]],[3,R[253]],[3,R[254]],[3,R[255]],[3,R[256]],[3,R[257]],[3,"Naming"],[3,R[258]],[3,R[259]],[3,R[260]],[3,R[261]],[3,"Data"],[3,"Element"],[3,"Export"],[3,"Global"],[3,"Import"],[3,R[262]],[3,R[263]],[3,"Reloc"],[3,"Section"],[4,R[264]],[4,R[265]],[4,R[266]],[4,R[267]],[4,R[268]],[4,R[269]],[4,R[270]],[4,"NameType"],[4,"Operator"],[4,R[271]],[4,R[272]],[4,"Type"],[4,R[273]],[4,"DataKind"],[4,R[274]],[4,"Name"],[3,R[275]],[3,"BrTable"],[3,"Parser"],[3,"Ieee32"],[3,"Ieee64"],[3,"V128"],[3,R[276]],[3,R[277]],[3,R[278]],[3,R[279]],[3,R[280]],[3,R[281]],[3,R[282]],[3,R[283]],[3,R[284]],[3,R[285]],[3,R[286]],[3,"InitExpr"],[3,R[287]],[3,R[288]],[3,R[289]],[3,R[290]],[3,R[291]],[3,R[292]],[3,R[293]],[3,R[294]],[3,R[295]],[3,R[296]],[3,R[297]],[3,R[298]],[3,R[299]],[3,R[300]],[8,R[301]],[8,R[302]],[8,R[303]],[8,R[304]]]};
searchIndex["winapi"]={"doc":E,"i":[],"p":[]};
searchIndex["winconsole"]={"doc":E,"i":[],"p":[]};
initSearch(searchIndex);addSearchOptions(searchIndex);